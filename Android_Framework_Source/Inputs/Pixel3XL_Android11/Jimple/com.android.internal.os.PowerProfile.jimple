public class com.android.internal.os.PowerProfile extends java.lang.Object
{
    private static final java.lang.String ATTR_NAME;
    private static final java.lang.String CPU_CLUSTER_POWER_COUNT;
    private static final java.lang.String CPU_CORE_POWER_PREFIX;
    private static final java.lang.String CPU_CORE_SPEED_PREFIX;
    private static final java.lang.String CPU_PER_CLUSTER_CORE_COUNT;
    public static final java.lang.String POWER_AMBIENT_DISPLAY;
    public static final java.lang.String POWER_AUDIO;
    public static final java.lang.String POWER_BATTERY_CAPACITY;
    public static final java.lang.String POWER_BLUETOOTH_ACTIVE;
    public static final java.lang.String POWER_BLUETOOTH_AT_CMD;
    public static final java.lang.String POWER_BLUETOOTH_CONTROLLER_IDLE;
    public static final java.lang.String POWER_BLUETOOTH_CONTROLLER_OPERATING_VOLTAGE;
    public static final java.lang.String POWER_BLUETOOTH_CONTROLLER_RX;
    public static final java.lang.String POWER_BLUETOOTH_CONTROLLER_TX;
    public static final java.lang.String POWER_BLUETOOTH_ON;
    public static final java.lang.String POWER_CAMERA;
    public static final java.lang.String POWER_CPU_ACTIVE;
    public static final java.lang.String POWER_CPU_IDLE;
    public static final java.lang.String POWER_CPU_SUSPEND;
    public static final java.lang.String POWER_FLASHLIGHT;
    public static final java.lang.String POWER_GPS_ON;
    public static final java.lang.String POWER_GPS_OPERATING_VOLTAGE;
    public static final java.lang.String POWER_GPS_SIGNAL_QUALITY_BASED;
    public static final java.lang.String POWER_MEMORY;
    public static final java.lang.String POWER_MODEM_CONTROLLER_IDLE;
    public static final java.lang.String POWER_MODEM_CONTROLLER_OPERATING_VOLTAGE;
    public static final java.lang.String POWER_MODEM_CONTROLLER_RX;
    public static final java.lang.String POWER_MODEM_CONTROLLER_SLEEP;
    public static final java.lang.String POWER_MODEM_CONTROLLER_TX;
    public static final java.lang.String POWER_RADIO_ACTIVE;
    public static final java.lang.String POWER_RADIO_ON;
    public static final java.lang.String POWER_RADIO_SCANNING;
    public static final java.lang.String POWER_SCREEN_FULL;
    public static final java.lang.String POWER_SCREEN_ON;
    public static final java.lang.String POWER_VIDEO;
    public static final java.lang.String POWER_WIFI_ACTIVE;
    public static final java.lang.String POWER_WIFI_BATCHED_SCAN;
    public static final java.lang.String POWER_WIFI_CONTROLLER_IDLE;
    public static final java.lang.String POWER_WIFI_CONTROLLER_OPERATING_VOLTAGE;
    public static final java.lang.String POWER_WIFI_CONTROLLER_RX;
    public static final java.lang.String POWER_WIFI_CONTROLLER_TX;
    public static final java.lang.String POWER_WIFI_CONTROLLER_TX_LEVELS;
    public static final java.lang.String POWER_WIFI_ON;
    public static final java.lang.String POWER_WIFI_SCAN;
    private static final java.lang.String TAG_ARRAY;
    private static final java.lang.String TAG_ARRAYITEM;
    private static final java.lang.String TAG_DEVICE;
    private static final java.lang.String TAG_ITEM;
    private static final java.lang.Object sLock;
    static final java.util.HashMap sPowerArrayMap;
    static final java.util.HashMap sPowerItemMap;
    private com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters;

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1;
        java.lang.Object $r2;

        <com.android.internal.os.PowerProfile: java.lang.String TAG_ITEM> = "item";

        <com.android.internal.os.PowerProfile: java.lang.String TAG_DEVICE> = "device";

        <com.android.internal.os.PowerProfile: java.lang.String TAG_ARRAYITEM> = "value";

        <com.android.internal.os.PowerProfile: java.lang.String TAG_ARRAY> = "array";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_SCAN> = "wifi.scan";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_ON> = "wifi.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_CONTROLLER_TX_LEVELS> = "wifi.controller.tx_levels";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_CONTROLLER_TX> = "wifi.controller.tx";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_CONTROLLER_RX> = "wifi.controller.rx";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_CONTROLLER_OPERATING_VOLTAGE> = "wifi.controller.voltage";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_CONTROLLER_IDLE> = "wifi.controller.idle";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_BATCHED_SCAN> = "wifi.batchedscan";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_ACTIVE> = "wifi.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_VIDEO> = "video";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_SCREEN_ON> = "screen.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_SCREEN_FULL> = "screen.full";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_RADIO_SCANNING> = "radio.scanning";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_RADIO_ON> = "radio.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_RADIO_ACTIVE> = "radio.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_MODEM_CONTROLLER_TX> = "modem.controller.tx";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_MODEM_CONTROLLER_SLEEP> = "modem.controller.sleep";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_MODEM_CONTROLLER_RX> = "modem.controller.rx";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_MODEM_CONTROLLER_OPERATING_VOLTAGE> = "modem.controller.voltage";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_MODEM_CONTROLLER_IDLE> = "modem.controller.idle";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_MEMORY> = "memory.bandwidths";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_GPS_SIGNAL_QUALITY_BASED> = "gps.signalqualitybased";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_GPS_OPERATING_VOLTAGE> = "gps.voltage";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_GPS_ON> = "gps.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_FLASHLIGHT> = "camera.flashlight";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CPU_SUSPEND> = "cpu.suspend";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CPU_IDLE> = "cpu.idle";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CPU_ACTIVE> = "cpu.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CAMERA> = "camera.avg";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_ON> = "bluetooth.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_CONTROLLER_TX> = "bluetooth.controller.tx";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_CONTROLLER_RX> = "bluetooth.controller.rx";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_CONTROLLER_OPERATING_VOLTAGE> = "bluetooth.controller.voltage";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_CONTROLLER_IDLE> = "bluetooth.controller.idle";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_AT_CMD> = "bluetooth.at";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_ACTIVE> = "bluetooth.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BATTERY_CAPACITY> = "battery.capacity";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_AUDIO> = "audio";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_AMBIENT_DISPLAY> = "ambient.on";

        <com.android.internal.os.PowerProfile: java.lang.String CPU_PER_CLUSTER_CORE_COUNT> = "cpu.clusters.cores";

        <com.android.internal.os.PowerProfile: java.lang.String CPU_CORE_SPEED_PREFIX> = "cpu.core_speeds.cluster";

        <com.android.internal.os.PowerProfile: java.lang.String CPU_CORE_POWER_PREFIX> = "cpu.core_power.cluster";

        <com.android.internal.os.PowerProfile: java.lang.String CPU_CLUSTER_POWER_COUNT> = "cpu.cluster_power.cluster";

        <com.android.internal.os.PowerProfile: java.lang.String ATTR_NAME> = "name";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <com.android.internal.os.PowerProfile: java.lang.Object sLock> = $r2;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.os.PowerProfile r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.os.PowerProfile: void <init>(android.content.Context,boolean)>(r1, 0);

        return;
    }

    public void <init>(android.content.Context, boolean)
    {
        com.android.internal.os.PowerProfile r0;
        boolean z0;
        java.lang.Object r1;
        java.util.HashMap $r2, $r3;
        int $i0, $i1;
        java.lang.Throwable $r4;
        android.content.Context r5;

        r0 := @this: com.android.internal.os.PowerProfile;

        r5 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r1 = <com.android.internal.os.PowerProfile: java.lang.Object sLock>;

        entermonitor r1;

     label1:
        $r2 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        if $i0 != 0 goto label2;

        $r3 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $i1 = virtualinvoke $r3.<java.util.HashMap: int size()>();

        if $i1 != 0 goto label2;

        specialinvoke r0.<com.android.internal.os.PowerProfile: void readPowerValuesFromXml(android.content.Context,boolean)>(r5, z0);

     label2:
        specialinvoke r0.<com.android.internal.os.PowerProfile: void initCpuClusters()>();

        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void initCpuClusters()
    {
        com.android.internal.os.PowerProfile r0;
        java.lang.Double[] r1;
        int i0, $i2, $i3, i5, i6;
        com.android.internal.os.PowerProfile$CpuClusterKey[] r2, $r5, $r8, $r14;
        java.lang.String r3, $r26, r28;
        java.util.HashMap $r4, $r6, $r9, $r12;
        boolean $z0, $z1;
        com.android.internal.os.PowerProfile$CpuClusterKey $r7, $r25;
        java.lang.Object $r10, $r13;
        java.lang.Double $r11, $r15;
        double $d0, $d1;
        long $l1, $l4;
        java.lang.StringBuilder $r16, $r19, $r22;

        r0 := @this: com.android.internal.os.PowerProfile;

        $r4 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>("cpu.clusters.cores");

        if $z0 == 0 goto label3;

        $r12 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("cpu.clusters.cores");

        r1 = (java.lang.Double[]) $r13;

        $i2 = lengthof r1;

        $r14 = newarray (com.android.internal.os.PowerProfile$CpuClusterKey)[$i2];

        r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters> = $r14;

        i5 = 0;

     label1:
        $i3 = lengthof r1;

        if i5 >= $i3 goto label2;

        $r15 = r1[i5];

        $d1 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $l4 = staticinvoke <java.lang.Math: long round(double)>($d1);

        i0 = (int) $l4;

        r2 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cpu.core_speeds.cluster");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        r28 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cpu.cluster_power.cluster");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        r3 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cpu.core_power.cluster");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r25 = new com.android.internal.os.PowerProfile$CpuClusterKey;

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<com.android.internal.os.PowerProfile$CpuClusterKey: void <init>(java.lang.String,java.lang.String,java.lang.String,int,com.android.internal.os.PowerProfile$1)>(r28, r3, $r26, i0, null);

        r2[i5] = $r25;

        i5 = i5 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        $r5 = newarray (com.android.internal.os.PowerProfile$CpuClusterKey)[1];

        r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters> = $r5;

        i6 = 1;

        $r6 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $z1 = virtualinvoke $r6.<java.util.HashMap: boolean containsKey(java.lang.Object)>("cpu.clusters.cores");

        if $z1 == 0 goto label4;

        $r9 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("cpu.clusters.cores");

        $r11 = (java.lang.Double) $r10;

        $d0 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d0);

        i6 = (int) $l1;

     label4:
        $r8 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $r7 = new com.android.internal.os.PowerProfile$CpuClusterKey;

        specialinvoke $r7.<com.android.internal.os.PowerProfile$CpuClusterKey: void <init>(java.lang.String,java.lang.String,java.lang.String,int,com.android.internal.os.PowerProfile$1)>("cpu.core_speeds.cluster0", "cpu.cluster_power.cluster0", "cpu.core_power.cluster0", i6, null);

        $r8[0] = $r7;

     label5:
        return;
    }

    private void readPowerValuesFromXml(android.content.Context, boolean)
    {
        com.android.internal.os.PowerProfile r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        java.lang.String r4, r35, r37, r38, r39, r40;
        double d0, $d1, $d2, d3;
        java.util.ArrayList $r5;
        boolean $z0, $z1, $z3, $z4, $z5, z6, z7, z8, z9;
        int $i0, $i1, $i2, $i4, i5, i6, $i7, i8;
        java.lang.Double $r6, $r7, $r9, $r19, $r23;
        java.util.HashMap $r8, $r11, $r17, $r18, $r21, $r24;
        java.lang.Double[] $r12, $r14, $r25, $r27;
        java.lang.Object[] $r13, $r26;
        java.lang.String[] $r16;
        java.lang.Object $r22;
        byte $b3;
        java.lang.Throwable $r30, $r31, $r32, $r33;
        android.content.Context r34;
        int[] r36;
        java.lang.RuntimeException r44, r46;

        r0 := @this: com.android.internal.os.PowerProfile;

        r34 := @parameter0: android.content.Context;

        z6 := @parameter1: boolean;

        if z6 == 0 goto label01;

        i5 = 18284563;

        goto label02;

     label01:
        i5 = 18284562;

     label02:
        r1 = virtualinvoke r34.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i5);

        z7 = 0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r35 = null;

     label03:
        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "device");

     label04:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r2);

        r4 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

     label05:
        if r4 != null goto label12;

        if z7 == 0 goto label07;

     label06:
        $r24 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $i4 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r25 = newarray (java.lang.Double)[$i4];

        $r26 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r25);

        $r27 = (java.lang.Double[]) $r26;

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, $r27);

     label07:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        r36 = newarray (int)[4];

        r36[0] = 17694746;

        r36[1] = 17694751;

        r36[2] = 17694752;

        r36[3] = 17694750;

        i6 = 0;

     label08:
        $i7 = lengthof r36;

        if i6 >= $i7 goto label11;

        $r16 = newarray (java.lang.String)[4];

        $r16[0] = "bluetooth.controller.idle";

        $r16[1] = "bluetooth.controller.rx";

        $r16[2] = "bluetooth.controller.tx";

        $r16[3] = "bluetooth.controller.voltage";

        r37 = $r16[i6];

        $r17 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $z5 = virtualinvoke $r17.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r37);

        if $z5 == 0 goto label09;

        $r21 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $r22 = virtualinvoke $r21.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r37);

        $r23 = (java.lang.Double) $r22;

        $d2 = virtualinvoke $r23.<java.lang.Double: double doubleValue()>();

        $b3 = $d2 cmpl 0.0;

        if $b3 <= 0 goto label09;

        goto label10;

     label09:
        $i2 = r36[i6];

        i8 = virtualinvoke r1.<android.content.res.Resources: int getInteger(int)>($i2);

        if i8 <= 0 goto label10;

        $r18 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $d1 = (double) i8;

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, $r19);

     label10:
        i6 = i6 + 1;

        goto label08;

     label11:
        return;

     label12:
        z8 = z7;

        if z7 == 0 goto label15;

        z8 = z7;

     label13:
        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("value");

        if $z4 != 0 goto label15;

        $r11 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r12 = newarray (java.lang.Double)[$i1];

        $r13 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r14 = (java.lang.Double[]) $r13;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, $r14);

     label14:
        z8 = 0;

     label15:
        z9 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("array");

     label16:
        if z9 == 0 goto label19;

        z7 = 1;

     label17:
        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        r38 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label18:
        goto label35;

     label19:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label22;

     label20:
        z7 = z8;

        r38 = r35;

     label21:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("value");

        if $z3 == 0 goto label35;

     label22:
        r39 = null;

        if z8 != 0 goto label24;

     label23:
        r39 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label24:
        z7 = z8;

        r38 = r35;

     label25:
        $i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if $i0 != 4 goto label35;

        r40 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getText()>();

     label26:
        d3 = 0.0;

     label27:
        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r40);

        d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

     label28:
        d3 = d0;

        goto label30;

     label29:
        $r31 := @caughtexception;

     label30:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label32;

        $r8 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r39, $r9);

     label31:
        z7 = z8;

        r38 = r35;

        goto label35;

     label32:
        z7 = z8;

        r38 = r35;

        if z8 == 0 goto label35;

     label33:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label34:
        r38 = r35;

        z7 = z8;

     label35:
        r35 = r38;

        goto label04;

     label36:
        $r32 := @caughtexception;

        goto label41;

     label37:
        $r33 := @caughtexception;

     label38:
        r44 = new java.lang.RuntimeException;

        specialinvoke r44.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r33);

        throw r44;

     label39:
        $r30 := @caughtexception;

     label40:
        r46 = new java.lang.RuntimeException;

        specialinvoke r46.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r30);

        throw r46;

     label41:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        throw $r32;

        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label39;
        catch java.io.IOException from label03 to label04 with label37;
        catch java.lang.Throwable from label03 to label04 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label39;
        catch java.io.IOException from label04 to label05 with label37;
        catch java.lang.Throwable from label04 to label05 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label39;
        catch java.io.IOException from label06 to label07 with label37;
        catch java.lang.Throwable from label06 to label07 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label39;
        catch java.io.IOException from label13 to label14 with label37;
        catch java.lang.Throwable from label13 to label14 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label39;
        catch java.io.IOException from label15 to label16 with label37;
        catch java.lang.Throwable from label15 to label16 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label39;
        catch java.io.IOException from label17 to label18 with label37;
        catch java.lang.Throwable from label17 to label18 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label39;
        catch java.io.IOException from label19 to label20 with label37;
        catch java.lang.Throwable from label19 to label20 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label39;
        catch java.io.IOException from label21 to label22 with label37;
        catch java.lang.Throwable from label21 to label22 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label39;
        catch java.io.IOException from label23 to label24 with label37;
        catch java.lang.Throwable from label23 to label24 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label39;
        catch java.io.IOException from label25 to label26 with label37;
        catch java.lang.Throwable from label25 to label26 with label36;
        catch java.lang.NumberFormatException from label27 to label28 with label29;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label39;
        catch java.io.IOException from label27 to label28 with label37;
        catch java.lang.Throwable from label27 to label28 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label30 to label31 with label39;
        catch java.io.IOException from label30 to label31 with label37;
        catch java.lang.Throwable from label30 to label31 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label33 to label34 with label39;
        catch java.io.IOException from label33 to label34 with label37;
        catch java.lang.Throwable from label33 to label34 with label36;
        catch java.lang.Throwable from label38 to label39 with label36;
        catch java.lang.Throwable from label40 to label41 with label36;
    }

    private void writePowerConstantArrayToProto(android.util.proto.ProtoOutputStream, java.lang.String, long)
    {
        com.android.internal.os.PowerProfile r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;
        int i1, i2;
        java.util.HashMap $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Double $r5;
        double $d0;
        java.lang.String r6;
        java.lang.Double[] r7;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        r6 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r6);

        if $z0 == 0 goto label2;

        $r3 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.lang.Double[]) $r4;

        i1 = lengthof r7;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r5 = r7[i2];

        $d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,double)>(l0, $d0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void writePowerConstantToProto(android.util.proto.ProtoOutputStream, java.lang.String, long)
    {
        com.android.internal.os.PowerProfile r0;
        android.util.proto.ProtoOutputStream r1;
        java.lang.String r2;
        long l0;
        java.util.HashMap $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Double $r6;
        double $d0;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r3 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r4 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r6 = (java.lang.Double) $r5;

        $d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,double)>(l0, $d0);

     label1:
        return;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream)
    {
        com.android.internal.os.PowerProfile r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;
        com.android.internal.os.PowerProfile$CpuClusterKey[] $r2, $r3, $r9, $r11, $r16;
        int $i2, $i3, i4, i5, i6, i7, i8;
        com.android.internal.os.PowerProfile$CpuClusterKey $r4, $r10, $r12, $r17;
        java.util.HashMap $r5, $r13, $r18;
        java.lang.String $r6, $r14, $r19;
        java.lang.Object $r7, $r15, $r20;
        java.lang.Double $r8, $r21, $r22;
        double $d0, $d1, $d2;
        java.lang.Double[] r23, r24;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "cpu.suspend", 1103806595073L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "cpu.idle", 1103806595074L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "cpu.active", 1103806595075L);

        i4 = 0;

     label1:
        $r2 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $i2 = lengthof $r2;

        if i4 >= $i2 goto label6;

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895848L);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, i4);

        $r5 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $r3 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $r4 = $r3[i4];

        $r6 = staticinvoke <com.android.internal.os.PowerProfile$CpuClusterKey: java.lang.String access$300(com.android.internal.os.PowerProfile$CpuClusterKey)>($r4);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (java.lang.Double) $r7;

        $d0 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,double)>(1103806595074L, $d0);

        $r9 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $r10 = $r9[i4];

        $i3 = staticinvoke <com.android.internal.os.PowerProfile$CpuClusterKey: int access$100(com.android.internal.os.PowerProfile$CpuClusterKey)>($r10);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i3);

        $r13 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $r11 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $r12 = $r11[i4];

        $r14 = staticinvoke <com.android.internal.os.PowerProfile$CpuClusterKey: java.lang.String access$200(com.android.internal.os.PowerProfile$CpuClusterKey)>($r12);

        $r15 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);

        r23 = (java.lang.Double[]) $r15;

        i5 = lengthof r23;

        i6 = 0;

     label2:
        if i6 >= i5 goto label3;

        $r22 = r23[i6];

        $d2 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,double)>(2211908157444L, $d2);

        i6 = i6 + 1;

        goto label2;

     label3:
        $r18 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $r16 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $r17 = $r16[i4];

        $r19 = staticinvoke <com.android.internal.os.PowerProfile$CpuClusterKey: java.lang.String access$400(com.android.internal.os.PowerProfile$CpuClusterKey)>($r17);

        $r20 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r19);

        r24 = (java.lang.Double[]) $r20;

        i7 = lengthof r24;

        i8 = 0;

     label4:
        if i8 >= i7 goto label5;

        $r21 = r24[i8];

        $d1 = virtualinvoke $r21.<java.lang.Double: double doubleValue()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,double)>(2203318222853L, $d1);

        i8 = i8 + 1;

        goto label4;

     label5:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        i4 = i4 + 1;

        goto label1;

     label6:
        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "wifi.scan", 1103806595076L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "wifi.on", 1103806595077L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "wifi.active", 1103806595078L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "wifi.controller.idle", 1103806595079L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "wifi.controller.rx", 1103806595080L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "wifi.controller.tx", 1103806595081L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantArrayToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "wifi.controller.tx_levels", 2203318222858L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "wifi.controller.voltage", 1103806595083L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "bluetooth.controller.idle", 1103806595084L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "bluetooth.controller.rx", 1103806595085L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "bluetooth.controller.tx", 1103806595086L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "bluetooth.controller.voltage", 1103806595087L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "modem.controller.sleep", 1103806595088L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "modem.controller.idle", 1103806595089L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "modem.controller.rx", 1103806595090L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantArrayToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "modem.controller.tx", 2203318222867L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "modem.controller.voltage", 1103806595092L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "gps.on", 1103806595093L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantArrayToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "gps.signalqualitybased", 2203318222870L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "gps.voltage", 1103806595095L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "bluetooth.on", 1103806595096L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "bluetooth.active", 1103806595097L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "bluetooth.at", 1103806595098L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "ambient.on", 1103806595099L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "screen.on", 1103806595100L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "radio.on", 1103806595101L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "radio.scanning", 1103806595102L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "radio.active", 1103806595103L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "screen.full", 1103806595104L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "audio", 1103806595105L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "video", 1103806595106L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "camera.flashlight", 1103806595107L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "memory.bandwidths", 1103806595108L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "camera.avg", 1103806595109L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "wifi.batchedscan", 1103806595110L);

        specialinvoke r0.<com.android.internal.os.PowerProfile: void writePowerConstantToProto(android.util.proto.ProtoOutputStream,java.lang.String,long)>(r1, "battery.capacity", 1103806595111L);

        return;
    }

    public double getAveragePower(java.lang.String)
    {
        com.android.internal.os.PowerProfile r0;
        java.lang.String r1;
        double $d0;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: java.lang.String;

        $d0 = virtualinvoke r0.<com.android.internal.os.PowerProfile: double getAveragePowerOrDefault(java.lang.String,double)>(r1, 0.0);

        return $d0;
    }

    public double getAveragePower(java.lang.String, int)
    {
        com.android.internal.os.PowerProfile r0;
        int i0, $i1, $i2, $i3, $i4;
        java.util.HashMap $r1, $r2, $r3, $r7;
        boolean $z0, $z1;
        java.lang.Object $r4, $r8;
        java.lang.Double $r5, $r6, $r9;
        double $d0, $d1, $d2;
        java.lang.String r10;
        java.lang.Double[] r11;

        r0 := @this: com.android.internal.os.PowerProfile;

        r10 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r10);

        if $z0 == 0 goto label1;

        $r7 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r10);

        $r9 = (java.lang.Double) $r8;

        $d2 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        return $d2;

     label1:
        $r2 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $z1 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r10);

        if $z1 == 0 goto label5;

        $r3 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (java.lang.Double[]) $r4;

        $i1 = lengthof r11;

        if $i1 <= i0 goto label2;

        if i0 < 0 goto label2;

        $r6 = r11[i0];

        $d1 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        return $d1;

     label2:
        if i0 < 0 goto label4;

        $i2 = lengthof r11;

        if $i2 != 0 goto label3;

        goto label4;

     label3:
        $i3 = lengthof r11;

        $i4 = $i3 - 1;

        $r5 = r11[$i4];

        $d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        return $d0;

     label4:
        return 0.0;

     label5:
        return 0.0;
    }

    public double getAveragePowerForCpuCluster(int)
    {
        com.android.internal.os.PowerProfile r0;
        int i0, $i1;
        com.android.internal.os.PowerProfile$CpuClusterKey[] r1;
        com.android.internal.os.PowerProfile$CpuClusterKey $r2;
        java.lang.String $r3;
        double $d0;

        r0 := @this: com.android.internal.os.PowerProfile;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        r1 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $i1 = lengthof r1;

        if i0 >= $i1 goto label1;

        $r2 = r1[i0];

        $r3 = staticinvoke <com.android.internal.os.PowerProfile$CpuClusterKey: java.lang.String access$300(com.android.internal.os.PowerProfile$CpuClusterKey)>($r2);

        $d0 = virtualinvoke r0.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>($r3);

        return $d0;

     label1:
        return 0.0;
    }

    public double getAveragePowerForCpuCore(int, int)
    {
        com.android.internal.os.PowerProfile r0;
        int i0, i1, $i2;
        com.android.internal.os.PowerProfile$CpuClusterKey[] r1;
        com.android.internal.os.PowerProfile$CpuClusterKey $r2;
        java.lang.String $r3;
        double $d0;

        r0 := @this: com.android.internal.os.PowerProfile;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        r1 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $i2 = lengthof r1;

        if i0 >= $i2 goto label1;

        $r2 = r1[i0];

        $r3 = staticinvoke <com.android.internal.os.PowerProfile$CpuClusterKey: java.lang.String access$400(com.android.internal.os.PowerProfile$CpuClusterKey)>($r2);

        $d0 = virtualinvoke r0.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String,int)>($r3, i1);

        return $d0;

     label1:
        return 0.0;
    }

    public double getAveragePowerOrDefault(java.lang.String, double)
    {
        com.android.internal.os.PowerProfile r0;
        java.lang.String r1;
        double d0, $d1, $d2;
        java.util.HashMap $r2, $r3, $r4, $r8;
        boolean $z0, $z1;
        java.lang.Object $r5, $r9;
        java.lang.Double[] $r6;
        java.lang.Double $r7, $r10;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r2 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (java.lang.Double) $r9;

        $d2 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        return $d2;

     label1:
        $r3 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $z1 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r4 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (java.lang.Double[]) $r5;

        $r7 = $r6[0];

        $d1 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        return $d1;

     label2:
        return d0;
    }

    public double getBatteryCapacity()
    {
        com.android.internal.os.PowerProfile r0;
        double $d0;

        r0 := @this: com.android.internal.os.PowerProfile;

        $d0 = virtualinvoke r0.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("battery.capacity");

        return $d0;
    }

    public int getNumCoresInCpuCluster(int)
    {
        com.android.internal.os.PowerProfile r0;
        int i0, $i1, $i2;
        com.android.internal.os.PowerProfile$CpuClusterKey[] r1;
        com.android.internal.os.PowerProfile$CpuClusterKey $r2;

        r0 := @this: com.android.internal.os.PowerProfile;

        i0 := @parameter0: int;

        if i0 < 0 goto label2;

        r1 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $i1 = lengthof r1;

        if i0 < $i1 goto label1;

        goto label2;

     label1:
        $r2 = r1[i0];

        $i2 = staticinvoke <com.android.internal.os.PowerProfile$CpuClusterKey: int access$100(com.android.internal.os.PowerProfile$CpuClusterKey)>($r2);

        return $i2;

     label2:
        return 0;
    }

    public int getNumCpuClusters()
    {
        com.android.internal.os.PowerProfile r0;
        com.android.internal.os.PowerProfile$CpuClusterKey[] $r1;
        int $i0;

        r0 := @this: com.android.internal.os.PowerProfile;

        $r1 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int getNumElements(java.lang.String)
    {
        com.android.internal.os.PowerProfile r0;
        java.lang.String r1;
        java.util.HashMap $r2, $r3, $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.lang.Double[] $r6;
        int $i0;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: java.lang.String;

        $r2 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerItemMap>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $z1 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r4 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (java.lang.Double[]) $r5;

        $i0 = lengthof $r6;

        return $i0;

     label2:
        return 0;
    }

    public int getNumSpeedStepsInCpuCluster(int)
    {
        com.android.internal.os.PowerProfile r0;
        int i0, $i1, $i2;
        com.android.internal.os.PowerProfile$CpuClusterKey[] r1, $r5;
        com.android.internal.os.PowerProfile$CpuClusterKey $r2, $r6;
        java.util.HashMap $r3, $r7;
        java.lang.String $r4, $r8;
        boolean $z0;
        java.lang.Object $r9;
        java.lang.Double[] $r10;

        r0 := @this: com.android.internal.os.PowerProfile;

        i0 := @parameter0: int;

        if i0 < 0 goto label3;

        r1 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $i1 = lengthof r1;

        if i0 < $i1 goto label1;

        goto label3;

     label1:
        $r3 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $r2 = r1[i0];

        $r4 = staticinvoke <com.android.internal.os.PowerProfile$CpuClusterKey: java.lang.String access$200(com.android.internal.os.PowerProfile$CpuClusterKey)>($r2);

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r7 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerArrayMap>;

        $r5 = r0.<com.android.internal.os.PowerProfile: com.android.internal.os.PowerProfile$CpuClusterKey[] mCpuClusters>;

        $r6 = $r5[i0];

        $r8 = staticinvoke <com.android.internal.os.PowerProfile$CpuClusterKey: java.lang.String access$200(com.android.internal.os.PowerProfile$CpuClusterKey)>($r6);

        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        $r10 = (java.lang.Double[]) $r9;

        $i2 = lengthof $r10;

        return $i2;

     label2:
        return 1;

     label3:
        return 0;
    }
}
