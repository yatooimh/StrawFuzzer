public final class com.android.internal.os.ProcStatsUtil extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final int READ_SIZE;
    private static final java.lang.String TAG;

    private void <init>()
    {
        com.android.internal.os.ProcStatsUtil r0;

        r0 := @this: com.android.internal.os.ProcStatsUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String readNullSeparatedFile(java.lang.String)
    {
        java.lang.String r0, $r1, r2, r3;
        int i0;

        r2 := @parameter0: java.lang.String;

        r0 = staticinvoke <com.android.internal.os.ProcStatsUtil: java.lang.String readSingleLineProcFile(java.lang.String)>(r2);

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("\u0000\u0000");

        r3 = r0;

        if i0 == -1 goto label2;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label2:
        $r1 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\u0000", " ");

        return $r1;
    }

    public static java.lang.String readSingleLineProcFile(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.internal.os.ProcStatsUtil: java.lang.String readTerminatedProcFile(java.lang.String,byte)>(r0, 10);

        return $r1;
    }

    public static java.lang.String readTerminatedProcFile(java.lang.String, byte)
    {
        byte b0, $b3;
        android.os.StrictMode$ThreadPolicy r0;
        java.io.FileInputStream r1;
        byte[] r2;
        int i1, i4, i5;
        java.lang.String $r3, r8, r12;
        java.lang.Throwable $r4, $r5, $r6, $r7;
        java.io.ByteArrayOutputStream r9, r10;
        boolean z0;

        r8 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        r0 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

     label01:
        r1 = new java.io.FileInputStream;

        specialinvoke r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r8);

     label02:
        r9 = null;

     label03:
        r2 = newarray (byte)[1024];

     label04:
        i1 = virtualinvoke r1.<java.io.FileInputStream: int read(byte[])>(r2);

     label05:
        if i1 > 0 goto label06;

        r10 = r9;

        goto label21;

     label06:
        i4 = 0;

     label07:
        i5 = -1;

        if i4 >= i1 goto label09;

        $b3 = r2[i4];

        if $b3 != b0 goto label08;

        i5 = i4;

        goto label09;

     label08:
        i4 = i4 + 1;

        goto label07;

     label09:
        if i5 == -1 goto label10;

        z0 = 1;

        goto label11;

     label10:
        z0 = 0;

     label11:
        if z0 == 0 goto label15;

        if r9 != null goto label15;

     label12:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int)>(r2, 0, i5);

     label13:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label14:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r0);

        return $r3;

     label15:
        r10 = r9;

        if r9 != null goto label17;

     label16:
        r10 = new java.io.ByteArrayOutputStream;

        specialinvoke r10.<java.io.ByteArrayOutputStream: void <init>(int)>(1024);

     label17:
        if z0 == 0 goto label18;

        goto label19;

     label18:
        i5 = i1;

     label19:
        virtualinvoke r10.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, i5);

     label20:
        if z0 == 0 goto label27;

     label21:
        if r10 != null goto label24;

     label22:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label23:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r0);

        return "";

     label24:
        r12 = virtualinvoke r10.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label25:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label26:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r0);

        return r12;

     label27:
        r9 = r10;

        goto label04;

     label28:
        $r4 := @caughtexception;

     label29:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label30:
        goto label33;

     label31:
        $r7 := @caughtexception;

     label32:
        virtualinvoke $r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r7);

     label33:
        throw $r4;

     label34:
        $r5 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r0);

        throw $r5;

     label35:
        $r6 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r0);

        return null;

        catch java.io.IOException from label01 to label02 with label35;
        catch java.lang.Throwable from label01 to label02 with label34;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.io.IOException from label13 to label14 with label35;
        catch java.lang.Throwable from label13 to label14 with label34;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch java.io.IOException from label22 to label23 with label35;
        catch java.lang.Throwable from label22 to label23 with label34;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.io.IOException from label25 to label26 with label35;
        catch java.lang.Throwable from label25 to label26 with label34;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.io.IOException from label32 to label33 with label35;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.io.IOException from label33 to label34 with label35;
        catch java.lang.Throwable from label33 to label34 with label34;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.ProcStatsUtil: java.lang.String TAG> = "ProcStatsUtil";

        <com.android.internal.os.ProcStatsUtil: int READ_SIZE> = 1024;

        <com.android.internal.os.ProcStatsUtil: boolean DEBUG> = 0;

        return;
    }
}
