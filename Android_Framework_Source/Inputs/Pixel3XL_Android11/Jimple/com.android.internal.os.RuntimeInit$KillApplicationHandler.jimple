class com.android.internal.os.RuntimeInit$KillApplicationHandler extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{
    private final com.android.internal.os.RuntimeInit$LoggingHandler mLoggingHandler;

    public void <init>(com.android.internal.os.RuntimeInit$LoggingHandler)
    {
        com.android.internal.os.RuntimeInit$KillApplicationHandler r0;
        com.android.internal.os.RuntimeInit$LoggingHandler r1, $r3;

        r0 := @this: com.android.internal.os.RuntimeInit$KillApplicationHandler;

        r1 := @parameter0: com.android.internal.os.RuntimeInit$LoggingHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (com.android.internal.os.RuntimeInit$LoggingHandler) r1;

        r0.<com.android.internal.os.RuntimeInit$KillApplicationHandler: com.android.internal.os.RuntimeInit$LoggingHandler mLoggingHandler> = $r3;

        return;
    }

    private void ensureLogging(java.lang.Thread, java.lang.Throwable)
    {
        com.android.internal.os.RuntimeInit$KillApplicationHandler r0;
        java.lang.Throwable r1, $r4;
        com.android.internal.os.RuntimeInit$LoggingHandler $r2, $r3;
        boolean $z0;
        java.lang.Thread r5;

        r0 := @this: com.android.internal.os.RuntimeInit$KillApplicationHandler;

        r5 := @parameter0: java.lang.Thread;

        r1 := @parameter1: java.lang.Throwable;

        $r2 = r0.<com.android.internal.os.RuntimeInit$KillApplicationHandler: com.android.internal.os.RuntimeInit$LoggingHandler mLoggingHandler>;

        $z0 = $r2.<com.android.internal.os.RuntimeInit$LoggingHandler: boolean mTriggered>;

        if $z0 != 0 goto label4;

     label1:
        $r3 = r0.<com.android.internal.os.RuntimeInit$KillApplicationHandler: com.android.internal.os.RuntimeInit$LoggingHandler mLoggingHandler>;

        virtualinvoke $r3.<com.android.internal.os.RuntimeInit$LoggingHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r5, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        com.android.internal.os.RuntimeInit$KillApplicationHandler r0;
        java.lang.Throwable r1, $r6, $r7, $r8;
        android.app.IActivityManager r2;
        android.app.ApplicationErrorReport$ParcelableCrashInfo r3;
        android.app.ActivityThread $r4, $r5;
        int $i0, $i1, $i3;
        java.lang.Thread r9;
        boolean z1, z2;
        android.os.IBinder r10;

        r0 := @this: com.android.internal.os.RuntimeInit$KillApplicationHandler;

        r9 := @parameter0: java.lang.Thread;

        r1 := @parameter1: java.lang.Throwable;

     label01:
        specialinvoke r0.<com.android.internal.os.RuntimeInit$KillApplicationHandler: void ensureLogging(java.lang.Thread,java.lang.Throwable)>(r9, r1);

        z1 = staticinvoke <com.android.internal.os.RuntimeInit: boolean access$000()>();

     label02:
        if z1 == 0 goto label03;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        staticinvoke <android.os.Process: void killProcess(int)>($i0);

        staticinvoke <java.lang.System: void exit(int)>(10);

        return;

     label03:
        staticinvoke <com.android.internal.os.RuntimeInit: boolean access$002(boolean)>(1);

        $r4 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if $r4 == null goto label04;

        $r5 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        virtualinvoke $r5.<android.app.ActivityThread: void stopProfiling()>();

     label04:
        r2 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        r10 = staticinvoke <com.android.internal.os.RuntimeInit: android.os.IBinder access$100()>();

        r3 = new android.app.ApplicationErrorReport$ParcelableCrashInfo;

        specialinvoke r3.<android.app.ApplicationErrorReport$ParcelableCrashInfo: void <init>(java.lang.Throwable)>(r1);

        interfaceinvoke r2.<android.app.IActivityManager: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$ParcelableCrashInfo)>(r10, r3);

     label05:
        goto label12;

     label06:
        $r8 := @caughtexception;

     label07:
        z2 = $r8 instanceof android.os.DeadObjectException;

     label08:
        if z2 == 0 goto label09;

        goto label12;

     label09:
        staticinvoke <com.android.internal.os.RuntimeInit: int access$200(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidRuntime", "Error reporting crash", $r8);

     label10:
        goto label12;

     label11:
        $r7 := @caughtexception;

     label12:
        $i3 = staticinvoke <android.os.Process: int myPid()>();

        staticinvoke <android.os.Process: void killProcess(int)>($i3);

        staticinvoke <java.lang.System: void exit(int)>(10);

        return;

     label13:
        $r6 := @caughtexception;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        staticinvoke <android.os.Process: void killProcess(int)>($i1);

        staticinvoke <java.lang.System: void exit(int)>(10);

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
}
