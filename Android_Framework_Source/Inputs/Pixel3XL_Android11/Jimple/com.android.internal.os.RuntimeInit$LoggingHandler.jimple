class com.android.internal.os.RuntimeInit$LoggingHandler extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{
    public volatile boolean mTriggered;

    private void <init>()
    {
        com.android.internal.os.RuntimeInit$LoggingHandler r0;

        r0 := @this: com.android.internal.os.RuntimeInit$LoggingHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.RuntimeInit$LoggingHandler: boolean mTriggered> = 0;

        return;
    }

    void <init>(com.android.internal.os.RuntimeInit$1)
    {
        com.android.internal.os.RuntimeInit$LoggingHandler r0;
        com.android.internal.os.RuntimeInit$1 r1;

        r0 := @this: com.android.internal.os.RuntimeInit$LoggingHandler;

        r1 := @parameter0: com.android.internal.os.RuntimeInit$1;

        specialinvoke r0.<com.android.internal.os.RuntimeInit$LoggingHandler: void <init>()>();

        return;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        com.android.internal.os.RuntimeInit$LoggingHandler r0;
        java.lang.Thread r1;
        java.lang.Throwable r2;
        boolean $z0;
        android.os.IBinder $r4;
        java.lang.String $r5, $r6, $r9, $r11;
        int $i0, $i1;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.internal.os.RuntimeInit$LoggingHandler;

        r1 := @parameter0: java.lang.Thread;

        r2 := @parameter1: java.lang.Throwable;

        r0.<com.android.internal.os.RuntimeInit$LoggingHandler: boolean mTriggered> = 1;

        $z0 = staticinvoke <com.android.internal.os.RuntimeInit: boolean access$000()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.android.internal.os.RuntimeInit: android.os.IBinder access$100()>();

        if $r4 != null goto label2;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        if 1000 != $i1 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** FATAL EXCEPTION IN SYSTEM PROCESS: ");

        $r9 = virtualinvoke r1.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.os.RuntimeInit: int access$200(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidRuntime", $r11, r2);

        goto label3;

     label2:
        $r5 = virtualinvoke r1.<java.lang.Thread: java.lang.String getName()>();

        $r6 = staticinvoke <android.app.ActivityThread: java.lang.String currentProcessName()>();

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        staticinvoke <com.android.internal.os.RuntimeInit: void logUncaught(java.lang.String,java.lang.String,int,java.lang.Throwable)>($r5, $r6, $i0, r2);

     label3:
        return;
    }
}
