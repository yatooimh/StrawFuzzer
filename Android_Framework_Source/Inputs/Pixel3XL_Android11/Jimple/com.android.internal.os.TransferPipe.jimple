public class com.android.internal.os.TransferPipe extends java.lang.Object implements java.lang.Runnable, java.io.Closeable
{
    static final boolean DEBUG;
    static final long DEFAULT_TIMEOUT;
    static final java.lang.String TAG;
    java.lang.String mBufferPrefix;
    boolean mComplete;
    long mEndTime;
    java.lang.String mFailure;
    final android.os.ParcelFileDescriptor[] mFds;
    java.io.FileDescriptor mOutFd;
    final java.lang.Thread mThread;

    public void <init>() throws java.io.IOException
    {
        com.android.internal.os.TransferPipe r0;

        r0 := @this: com.android.internal.os.TransferPipe;

        specialinvoke r0.<com.android.internal.os.TransferPipe: void <init>(java.lang.String)>(null);

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        com.android.internal.os.TransferPipe r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.os.TransferPipe;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.internal.os.TransferPipe: void <init>(java.lang.String,java.lang.String)>(r1, "TransferPipe");

        return;
    }

    protected void <init>(java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.android.internal.os.TransferPipe r0;
        java.lang.String r1, r2;
        java.lang.Thread $r3;
        android.os.ParcelFileDescriptor[] $r4;

        r0 := @this: com.android.internal.os.TransferPipe;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Thread;

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r0, r2);

        r0.<com.android.internal.os.TransferPipe: java.lang.Thread mThread> = $r3;

        $r4 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor[] mFds> = $r4;

        r0.<com.android.internal.os.TransferPipe: java.lang.String mBufferPrefix> = r1;

        return;
    }

    public static void dumpAsync(android.os.IBinder, java.io.FileDescriptor, java.lang.String[]) throws java.io.IOException, android.os.RemoteException
    {
        android.os.IBinder r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;

        r0 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.lang.String[];

        staticinvoke <com.android.internal.os.TransferPipe: void goDump(android.os.IBinder,java.io.FileDescriptor,java.lang.String[])>(r0, r1, r2);

        return;
    }

    public static transient byte[] dumpAsync(android.os.IBinder, java.lang.String[]) throws java.io.IOException, android.os.RemoteException
    {
        android.os.ParcelFileDescriptor[] r0;
        int i0;
        android.os.ParcelFileDescriptor $r1, $r3, $r4, $r6, $r7, $r9, $r10;
        java.io.FileDescriptor $r2, $r5;
        java.lang.Throwable $r8, $r11, $r12, $r13, $r14;
        android.os.IBinder r15;
        java.lang.String[] r16;
        byte[] r17, r20;
        java.io.ByteArrayOutputStream r18;
        java.io.FileInputStream r19;

        r15 := @parameter0: android.os.IBinder;

        r16 := @parameter1: java.lang.String[];

        r0 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

     label01:
        $r1 = r0[1];

        $r2 = virtualinvoke $r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        staticinvoke <com.android.internal.os.TransferPipe: void dumpAsync(android.os.IBinder,java.io.FileDescriptor,java.lang.String[])>(r15, $r2, r16);

        $r3 = r0[1];

        virtualinvoke $r3.<android.os.ParcelFileDescriptor: void close()>();

     label02:
        r0[1] = null;

     label03:
        r17 = newarray (byte)[4096];

        r18 = new java.io.ByteArrayOutputStream;

        specialinvoke r18.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        r19 = new java.io.FileInputStream;

        $r4 = r0[0];

        $r5 = virtualinvoke $r4.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke r19.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r5);

     label05:
        i0 = virtualinvoke r19.<java.io.FileInputStream: int read(byte[])>(r17);

     label06:
        if i0 != -1 goto label10;

     label07:
        virtualinvoke r19.<java.io.FileInputStream: void close()>();

        r20 = virtualinvoke r18.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label08:
        virtualinvoke r18.<java.io.ByteArrayOutputStream: void close()>();

     label09:
        $r6 = r0[0];

        virtualinvoke $r6.<android.os.ParcelFileDescriptor: void close()>();

        $r7 = r0[1];

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r7);

        return r20;

     label10:
        virtualinvoke r18.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r17, 0, i0);

     label11:
        goto label05;

     label12:
        $r14 := @caughtexception;

     label13:
        virtualinvoke r19.<java.io.FileInputStream: void close()>();

     label14:
        goto label17;

     label15:
        $r13 := @caughtexception;

     label16:
        virtualinvoke $r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r13);

     label17:
        throw $r14;

     label18:
        $r11 := @caughtexception;

     label19:
        virtualinvoke r18.<java.io.ByteArrayOutputStream: void close()>();

     label20:
        goto label23;

     label21:
        $r12 := @caughtexception;

     label22:
        virtualinvoke $r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r12);

     label23:
        throw $r11;

     label24:
        $r8 := @caughtexception;

        $r9 = r0[0];

        virtualinvoke $r9.<android.os.ParcelFileDescriptor: void close()>();

        $r10 = r0[1];

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r10);

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
    }

    static void go(com.android.internal.os.TransferPipe$Caller, android.os.IInterface, java.io.FileDescriptor, java.lang.String, java.lang.String[]) throws java.io.IOException, android.os.RemoteException
    {
        com.android.internal.os.TransferPipe$Caller r0;
        android.os.IInterface r1;
        java.io.FileDescriptor r2;
        java.lang.String r3;
        java.lang.String[] r4;

        r0 := @parameter0: com.android.internal.os.TransferPipe$Caller;

        r1 := @parameter1: android.os.IInterface;

        r2 := @parameter2: java.io.FileDescriptor;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        staticinvoke <com.android.internal.os.TransferPipe: void go(com.android.internal.os.TransferPipe$Caller,android.os.IInterface,java.io.FileDescriptor,java.lang.String,java.lang.String[],long)>(r0, r1, r2, r3, r4, 5000L);

        return;
    }

    static void go(com.android.internal.os.TransferPipe$Caller, android.os.IInterface, java.io.FileDescriptor, java.lang.String, java.lang.String[], long) throws java.io.IOException, android.os.RemoteException
    {
        java.io.FileDescriptor r0, $r7;
        java.lang.String r1;
        java.lang.String[] r2;
        long l0;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.os.TransferPipe $r5;
        android.os.ParcelFileDescriptor $r6;
        java.lang.Throwable $r8, $r10;
        android.os.RemoteException $r9;
        com.android.internal.os.TransferPipe$Caller r11;
        android.os.IInterface r12;

        r11 := @parameter0: com.android.internal.os.TransferPipe$Caller;

        r12 := @parameter1: android.os.IInterface;

        r0 := @parameter2: java.io.FileDescriptor;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String[];

        l0 := @parameter5: long;

        $r4 = interfaceinvoke r12.<android.os.IInterface: android.os.IBinder asBinder()>();

        $z0 = $r4 instanceof android.os.Binder;

        if $z0 == 0 goto label05;

     label01:
        interfaceinvoke r11.<com.android.internal.os.TransferPipe$Caller: void go(android.os.IInterface,java.io.FileDescriptor,java.lang.String,java.lang.String[])>(r12, r0, r1, r2);

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

     label04:
        return;

     label05:
        $r5 = new com.android.internal.os.TransferPipe;

        specialinvoke $r5.<com.android.internal.os.TransferPipe: void <init>()>();

     label06:
        $r6 = virtualinvoke $r5.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r7 = virtualinvoke $r6.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        interfaceinvoke r11.<com.android.internal.os.TransferPipe$Caller: void go(android.os.IInterface,java.io.FileDescriptor,java.lang.String,java.lang.String[])>(r12, $r7, r1, r2);

        virtualinvoke $r5.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r0, l0);

     label07:
        virtualinvoke $r5.<com.android.internal.os.TransferPipe: void close()>();

        return;

     label08:
        $r8 := @caughtexception;

     label09:
        virtualinvoke $r5.<com.android.internal.os.TransferPipe: void close()>();

     label10:
        goto label12;

     label11:
        $r10 := @caughtexception;

        virtualinvoke $r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

     label12:
        throw $r8;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    static void goDump(android.os.IBinder, java.io.FileDescriptor, java.lang.String[]) throws java.io.IOException, android.os.RemoteException
    {
        android.os.IBinder r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;

        r0 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.lang.String[];

        staticinvoke <com.android.internal.os.TransferPipe: void goDump(android.os.IBinder,java.io.FileDescriptor,java.lang.String[],long)>(r0, r1, r2, 5000L);

        return;
    }

    static void goDump(android.os.IBinder, java.io.FileDescriptor, java.lang.String[], long) throws java.io.IOException, android.os.RemoteException
    {
        java.lang.String[] r0;
        long l0;
        boolean $z0;
        com.android.internal.os.TransferPipe $r2;
        android.os.ParcelFileDescriptor $r3;
        java.io.FileDescriptor $r4, r9;
        java.lang.Throwable $r5, $r7;
        android.os.RemoteException $r6;
        android.os.IBinder r8;

        r8 := @parameter0: android.os.IBinder;

        r9 := @parameter1: java.io.FileDescriptor;

        r0 := @parameter2: java.lang.String[];

        l0 := @parameter3: long;

        $z0 = r8 instanceof android.os.Binder;

        if $z0 == 0 goto label05;

     label01:
        interfaceinvoke r8.<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>(r9, r0);

     label02:
        goto label04;

     label03:
        $r6 := @caughtexception;

     label04:
        return;

     label05:
        $r2 = new com.android.internal.os.TransferPipe;

        specialinvoke $r2.<com.android.internal.os.TransferPipe: void <init>()>();

     label06:
        $r3 = virtualinvoke $r2.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r4 = virtualinvoke $r3.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        interfaceinvoke r8.<android.os.IBinder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>($r4, r0);

        virtualinvoke $r2.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r9, l0);

     label07:
        virtualinvoke $r2.<com.android.internal.os.TransferPipe: void close()>();

        return;

     label08:
        $r5 := @caughtexception;

     label09:
        virtualinvoke $r2.<com.android.internal.os.TransferPipe: void close()>();

     label10:
        goto label12;

     label11:
        $r7 := @caughtexception;

        virtualinvoke $r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r7);

     label12:
        throw $r5;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void close()
    {
        com.android.internal.os.TransferPipe r0;

        r0 := @this: com.android.internal.os.TransferPipe;

        virtualinvoke r0.<com.android.internal.os.TransferPipe: void kill()>();

        return;
    }

    void closeFd(int)
    {
        com.android.internal.os.TransferPipe r0;
        int i0;
        android.os.ParcelFileDescriptor $r1, $r2;
        android.os.ParcelFileDescriptor[] $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: com.android.internal.os.TransferPipe;

        i0 := @parameter0: int;

        r5 = r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor[] mFds>;

        $r1 = r5[i0];

        if $r1 == null goto label5;

     label1:
        $r2 = r5[i0];

        virtualinvoke $r2.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r3 = r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor[] mFds>;

        $r3[i0] = null;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected java.io.OutputStream getNewOutputStream()
    {
        com.android.internal.os.TransferPipe r0;
        java.io.FileOutputStream $r1;
        java.io.FileDescriptor $r2;

        r0 := @this: com.android.internal.os.TransferPipe;

        $r1 = new java.io.FileOutputStream;

        $r2 = r0.<com.android.internal.os.TransferPipe: java.io.FileDescriptor mOutFd>;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r2);

        return $r1;
    }

    android.os.ParcelFileDescriptor getReadFd()
    {
        com.android.internal.os.TransferPipe r0;
        android.os.ParcelFileDescriptor[] $r1;
        android.os.ParcelFileDescriptor $r2;

        r0 := @this: com.android.internal.os.TransferPipe;

        $r1 = r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor[] mFds>;

        $r2 = $r1[0];

        return $r2;
    }

    public android.os.ParcelFileDescriptor getWriteFd()
    {
        com.android.internal.os.TransferPipe r0;
        android.os.ParcelFileDescriptor[] $r1;
        android.os.ParcelFileDescriptor $r2;

        r0 := @this: com.android.internal.os.TransferPipe;

        $r1 = r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor[] mFds>;

        $r2 = $r1[1];

        return $r2;
    }

    public void go(java.io.FileDescriptor) throws java.io.IOException
    {
        com.android.internal.os.TransferPipe r0;
        java.io.FileDescriptor r1;

        r0 := @this: com.android.internal.os.TransferPipe;

        r1 := @parameter0: java.io.FileDescriptor;

        virtualinvoke r0.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r1, 5000L);

        return;
    }

    public void go(java.io.FileDescriptor, long) throws java.io.IOException
    {
        com.android.internal.os.TransferPipe r0;
        long l0, $l1, $l2, l4, l5, l6;
        java.lang.Thread $r1, $r5;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;
        byte $b3;
        java.lang.Throwable $r6, $r7, $r8;
        java.io.FileDescriptor r9;
        java.io.IOException r11, r12;

        r0 := @this: com.android.internal.os.TransferPipe;

        r9 := @parameter0: java.io.FileDescriptor;

        l4 := @parameter1: long;

     label01:
        entermonitor r0;

     label02:
        r0.<com.android.internal.os.TransferPipe: java.io.FileDescriptor mOutFd> = r9;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l1 + l4;

        r0.<com.android.internal.os.TransferPipe: long mEndTime> = $l2;

        virtualinvoke r0.<com.android.internal.os.TransferPipe: void closeFd(int)>(1);

        $r1 = r0.<com.android.internal.os.TransferPipe: java.lang.Thread mThread>;

        virtualinvoke $r1.<java.lang.Thread: void start()>();

     label03:
        $r2 = r0.<com.android.internal.os.TransferPipe: java.lang.String mFailure>;

        if $r2 != null goto label10;

        $z0 = r0.<com.android.internal.os.TransferPipe: boolean mComplete>;

        if $z0 != 0 goto label10;

        l5 = r0.<com.android.internal.os.TransferPipe: long mEndTime>;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label04:
        l6 = l5 - l0;

        $b3 = l6 cmp 0L;

        if $b3 <= 0 goto label09;

     label05:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(l6);

     label06:
        goto label08;

     label07:
        $r7 := @caughtexception;

     label08:
        goto label03;

     label09:
        $r5 = r0.<com.android.internal.os.TransferPipe: java.lang.Thread mThread>;

        virtualinvoke $r5.<java.lang.Thread: void interrupt()>();

        r11 = new java.io.IOException;

        specialinvoke r11.<java.io.IOException: void <init>(java.lang.String)>("Timeout");

        throw r11;

     label10:
        $r3 = r0.<com.android.internal.os.TransferPipe: java.lang.String mFailure>;

        if $r3 != null goto label12;

        exitmonitor r0;

     label11:
        virtualinvoke r0.<com.android.internal.os.TransferPipe: void kill()>();

        return;

     label12:
        r12 = new java.io.IOException;

        $r4 = r0.<com.android.internal.os.TransferPipe: java.lang.String mFailure>;

        specialinvoke r12.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw r12;

     label13:
        $r8 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r8;

     label16:
        $r6 := @caughtexception;

        virtualinvoke r0.<com.android.internal.os.TransferPipe: void kill()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label16;
    }

    public void kill()
    {
        com.android.internal.os.TransferPipe r0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.os.TransferPipe;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.internal.os.TransferPipe: void closeFd(int)>(0);

        virtualinvoke r0.<com.android.internal.os.TransferPipe: void closeFd(int)>(1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void run()
    {
        com.android.internal.os.TransferPipe r0;
        byte[] r1, r13;
        java.io.OutputStream r3;
        java.lang.String r4, $r9;
        int i0, $i1, $i4, i6, i7, i8, i9, i10, i11, i12;
        java.io.FileDescriptor $r5;
        java.lang.Thread $r6;
        byte $b2, $b3;
        java.lang.Throwable $r7, $r8, $r10, $r11;
        android.os.ParcelFileDescriptor r12;
        boolean z2, z3;
        java.io.FileInputStream r18;
        java.io.IOException r19;

        r0 := @this: com.android.internal.os.TransferPipe;

        r1 = newarray (byte)[1024];

        entermonitor r0;

     label01:
        r12 = virtualinvoke r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getReadFd()>();

     label02:
        if r12 != null goto label05;

     label03:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("TransferPipe", "Pipe has been closed...");

        exitmonitor r0;

     label04:
        return;

     label05:
        r18 = new java.io.FileInputStream;

        $r5 = virtualinvoke r12.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke r18.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r5);

        r3 = virtualinvoke r0.<com.android.internal.os.TransferPipe: java.io.OutputStream getNewOutputStream()>();

        exitmonitor r0;

     label06:
        r13 = null;

        r4 = r0.<com.android.internal.os.TransferPipe: java.lang.String mBufferPrefix>;

        z2 = 1;

        if r4 == null goto label07;

        r13 = virtualinvoke r4.<java.lang.String: byte[] getBytes()>();

        z2 = 1;

     label07:
        i0 = virtualinvoke r18.<java.io.FileInputStream: int read(byte[])>(r1);

     label08:
        if i0 <= 0 goto label23;

        if r13 != null goto label11;

     label09:
        virtualinvoke r3.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, i0);

     label10:
        goto label07;

     label11:
        i6 = 0;

        i7 = 0;

     label12:
        if i7 >= i0 goto label20;

        z3 = z2;

        i8 = i6;

        i9 = i7;

        $b2 = r1[i7];

        if $b2 == 10 goto label19;

        if i7 <= i6 goto label14;

     label13:
        $i4 = i7 - i6;

        virtualinvoke r3.<java.io.OutputStream: void write(byte[],int,int)>(r1, i6, $i4);

     label14:
        i10 = i7;

        z3 = z2;

        i11 = i7;

        if z2 == 0 goto label17;

     label15:
        virtualinvoke r3.<java.io.OutputStream: void write(byte[])>(r13);

     label16:
        z3 = 0;

        i11 = i7;

     label17:
        i12 = i11 + 1;

        if i12 >= i0 goto label18;

        i11 = i12;

        $b3 = r1[i12];

        if $b3 != 10 goto label17;

     label18:
        i8 = i10;

        i9 = i12;

        if i12 >= i0 goto label19;

        z3 = 1;

        i9 = i12;

        i8 = i10;

     label19:
        i7 = i9 + 1;

        z2 = z3;

        i6 = i8;

        goto label12;

     label20:
        if i0 <= i6 goto label22;

     label21:
        $i1 = i0 - i6;

        virtualinvoke r3.<java.io.OutputStream: void write(byte[],int,int)>(r1, i6, $i1);

     label22:
        goto label07;

     label23:
        $r6 = r0.<com.android.internal.os.TransferPipe: java.lang.Thread mThread>;

        virtualinvoke $r6.<java.lang.Thread: boolean isInterrupted()>();

     label24:
        entermonitor r0;

     label25:
        r0.<com.android.internal.os.TransferPipe: boolean mComplete> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label26:
        return;

     label27:
        $r11 := @caughtexception;

     label28:
        exitmonitor r0;

     label29:
        throw $r11;

     label30:
        $r8 := @caughtexception;

        entermonitor r0;

     label31:
        r19 = (java.io.IOException) $r8;

        $r9 = virtualinvoke r19.<java.io.IOException: java.lang.String toString()>();

        r0.<com.android.internal.os.TransferPipe: java.lang.String mFailure> = $r9;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label32:
        return;

     label33:
        $r7 := @caughtexception;

     label34:
        exitmonitor r0;

     label35:
        throw $r7;

     label36:
        $r10 := @caughtexception;

     label37:
        exitmonitor r0;

     label38:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label36;
        catch java.lang.Throwable from label03 to label04 with label36;
        catch java.lang.Throwable from label05 to label06 with label36;
        catch java.io.IOException from label07 to label08 with label30;
        catch java.io.IOException from label09 to label10 with label30;
        catch java.io.IOException from label13 to label14 with label30;
        catch java.io.IOException from label15 to label16 with label30;
        catch java.io.IOException from label21 to label22 with label30;
        catch java.io.IOException from label23 to label24 with label30;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label34 to label35 with label33;
        catch java.lang.Throwable from label37 to label38 with label36;
    }

    public void setBufferPrefix(java.lang.String)
    {
        com.android.internal.os.TransferPipe r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.os.TransferPipe;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.internal.os.TransferPipe: java.lang.String mBufferPrefix> = r1;

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.TransferPipe: java.lang.String TAG> = "TransferPipe";

        <com.android.internal.os.TransferPipe: long DEFAULT_TIMEOUT> = 5000L;

        <com.android.internal.os.TransferPipe: boolean DEBUG> = 0;

        return;
    }
}
