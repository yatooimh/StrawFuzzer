class com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection extends com.android.internal.os.ZygoteConnection
{

    void <init>(android.net.LocalSocket, java.lang.String) throws java.io.IOException
    {
        com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection r0;
        android.net.LocalSocket r1;
        java.lang.String r2;

        r0 := @this: com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection;

        r1 := @parameter0: android.net.LocalSocket;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.os.ZygoteConnection: void <init>(android.net.LocalSocket,java.lang.String)>(r1, r2);

        return;
    }

    private void doPreload(java.lang.ClassLoader, java.lang.String)
    {
        com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection r0;
        java.lang.Class[] $r1, $r4;
        java.lang.Class $r2, $r3, r14;
        java.lang.reflect.Method $r5, r15;
        java.lang.Object[] $r6;
        java.lang.Object $r7;
        java.lang.Boolean $r8;
        java.lang.Throwable $r9, $r11;
        java.lang.IllegalStateException $r10;
        java.lang.ClassLoader r12;
        java.lang.String r13;
        byte b4;
        boolean z2, z3;
        java.io.DataOutputStream r17;

        r0 := @this: com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection;

        r12 := @parameter0: java.lang.ClassLoader;

        r13 := @parameter1: java.lang.String;

        staticinvoke <android.webkit.WebViewLibraryLoader: int loadNativeLibrary(java.lang.ClassLoader,java.lang.String)>(r12, r13);

        b4 = 1;

        z2 = 0;

     label01:
        r14 = staticinvoke <android.webkit.WebViewFactory: java.lang.Class getWebViewProviderClass(java.lang.ClassLoader)>(r12);

     label02:
        z2 = 0;

     label03:
        $r1 = newarray (java.lang.Class)[0];

        r15 = virtualinvoke r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("preloadInZygote", $r1);

     label04:
        z2 = 0;

     label05:
        virtualinvoke r15.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label06:
        z2 = 0;

     label07:
        $r2 = virtualinvoke r15.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r2 == $r3 goto label11;

     label08:
        z2 = 0;

     label09:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WebViewZygoteInit", "Unexpected return type: preloadInZygote must return boolean");

     label10:
        z2 = 0;

        goto label16;

     label11:
        z2 = 0;

     label12:
        $r4 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("preloadInZygote", $r4);

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);

        $r8 = (java.lang.Boolean) $r7;

        z3 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

     label13:
        z2 = z3;

        if z3 != 0 goto label16;

        z2 = z3;

     label14:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WebViewZygoteInit", "preloadInZygote returned false");

     label15:
        z2 = z3;

     label16:
        goto label18;

     label17:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WebViewZygoteInit", "Exception while preloading package", $r11);

     label18:
        r17 = virtualinvoke r0.<com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection: java.io.DataOutputStream getSocketOutputStream()>();

     label19:
        if z2 == 0 goto label20;

        goto label21;

     label20:
        b4 = 0;

     label21:
        virtualinvoke r17.<java.io.DataOutputStream: void writeInt(int)>(b4);

     label22:
        return;

     label23:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error writing to command socket", $r9);

        throw $r10;

        catch java.lang.ReflectiveOperationException from label01 to label02 with label17;
        catch java.lang.ReflectiveOperationException from label03 to label04 with label17;
        catch java.lang.ReflectiveOperationException from label05 to label06 with label17;
        catch java.lang.ReflectiveOperationException from label07 to label08 with label17;
        catch java.lang.ReflectiveOperationException from label09 to label10 with label17;
        catch java.lang.ReflectiveOperationException from label12 to label13 with label17;
        catch java.lang.ReflectiveOperationException from label14 to label15 with label17;
        catch java.io.IOException from label18 to label19 with label23;
        catch java.io.IOException from label21 to label22 with label23;
    }

    protected boolean canPreloadApp()
    {
        com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection r0;

        r0 := @this: com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection;

        return 1;
    }

    protected void handlePreloadApp(android.content.pm.ApplicationInfo)
    {
        com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7, $r10;
        android.app.LoadedApk $r8;
        java.lang.ClassLoader $r9;

        r0 := @this: com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning application preload for ");

        $r5 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WebViewZygoteInit", $r7);

        $r8 = new android.app.LoadedApk;

        specialinvoke $r8.<android.app.LoadedApk: void <init>(android.app.ActivityThread,android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean,boolean)>(null, r1, null, null, 0, 1, 0);

        $r9 = virtualinvoke $r8.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        $r10 = staticinvoke <android.webkit.WebViewFactory: java.lang.String getWebViewLibrary(android.content.pm.ApplicationInfo)>(r1);

        specialinvoke r0.<com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection: void doPreload(java.lang.ClassLoader,java.lang.String)>($r9, $r10);

        staticinvoke <com.android.internal.os.Zygote: void allowAppFilesAcrossFork(android.content.pm.ApplicationInfo)>(r1);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WebViewZygoteInit", "Application preload done");

        return;
    }

    protected void handlePreloadPackage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection r0;
        java.lang.String r1, r2, $r4, $r5, r6, r7;
        int i0, i3;
        android.app.ApplicationLoaders $r3;
        java.lang.ClassLoader r8;
        java.lang.String[] r9;

        r0 := @this: com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WebViewZygoteInit", "Beginning package preload");

        $r3 = staticinvoke <android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()>();

        r8 = virtualinvoke $r3.<android.app.ApplicationLoaders: java.lang.ClassLoader createAndCacheWebViewClassLoader(java.lang.String,java.lang.String,java.lang.String)>(r6, r7, r2);

        $r4 = <java.io.File: java.lang.String pathSeparator>;

        r9 = staticinvoke <android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r6, $r4);

        i0 = lengthof r9;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r5 = r9[i3];

        staticinvoke <com.android.internal.os.Zygote: void nativeAllowFileAcrossFork(java.lang.String)>($r5);

        i3 = i3 + 1;

        goto label1;

     label2:
        specialinvoke r0.<com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection: void doPreload(java.lang.ClassLoader,java.lang.String)>(r8, r1);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WebViewZygoteInit", "Package preload done");

        return;
    }

    protected boolean isPreloadComplete()
    {
        com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection r0;

        r0 := @this: com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection;

        return 1;
    }

    protected void preload()
    {
        com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection r0;

        r0 := @this: com.android.internal.os.WebViewZygoteInit$WebViewZygoteConnection;

        return;
    }
}
