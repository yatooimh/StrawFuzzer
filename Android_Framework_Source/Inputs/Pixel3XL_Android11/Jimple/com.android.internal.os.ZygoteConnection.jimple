class com.android.internal.os.ZygoteConnection extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final java.lang.String abiList;
    private boolean isEof;
    private final android.net.LocalSocket mSocket;
    private final java.io.DataOutputStream mSocketOutStream;
    private final java.io.BufferedReader mSocketReader;
    private final android.net.Credentials peer;

    void <init>(android.net.LocalSocket, java.lang.String) throws java.io.IOException
    {
        com.android.internal.os.ZygoteConnection r0;
        java.lang.String r1;
        java.io.DataOutputStream $r2;
        java.io.OutputStream $r3;
        java.io.BufferedReader $r4;
        java.io.InputStreamReader $r5;
        java.io.InputStream $r6;
        android.net.LocalSocket $r7, $r8, r11;
        android.net.Credentials $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        r11 := @parameter0: android.net.LocalSocket;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.ZygoteConnection: android.net.LocalSocket mSocket> = r11;

        r0.<com.android.internal.os.ZygoteConnection: java.lang.String abiList> = r1;

        $r2 = new java.io.DataOutputStream;

        $r3 = virtualinvoke r11.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r3);

        r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream> = $r2;

        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.InputStreamReader;

        $r6 = virtualinvoke r11.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r5, 256);

        r0.<com.android.internal.os.ZygoteConnection: java.io.BufferedReader mSocketReader> = $r4;

        $r7 = r0.<com.android.internal.os.ZygoteConnection: android.net.LocalSocket mSocket>;

        virtualinvoke $r7.<android.net.LocalSocket: void setSoTimeout(int)>(1000);

     label1:
        $r8 = r0.<com.android.internal.os.ZygoteConnection: android.net.LocalSocket mSocket>;

        $r9 = virtualinvoke $r8.<android.net.LocalSocket: android.net.Credentials getPeerCredentials()>();

        r0.<com.android.internal.os.ZygoteConnection: android.net.Credentials peer> = $r9;

     label2:
        r0.<com.android.internal.os.ZygoteConnection: boolean isEof> = 0;

        return;

     label3:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Zygote", "Cannot read peer credentials", $r10);

        throw $r10;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void handleAbiListQuery()
    {
        com.android.internal.os.ZygoteConnection r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;
        int $i0;
        java.io.DataOutputStream $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.IllegalStateException $r6;
        byte[] r7;

        r0 := @this: com.android.internal.os.ZygoteConnection;

     label1:
        $r2 = r0.<com.android.internal.os.ZygoteConnection: java.lang.String abiList>;

        $r1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        r7 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        $r3 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        $i0 = lengthof r7;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $r4 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[])>(r7);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error writing to command socket", $r5);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.Runnable handleApiBlacklistExemptions(com.android.internal.os.ZygoteServer, java.lang.String[])
    {
        com.android.internal.os.ZygoteConnection r0;
        com.android.internal.os.ZygoteServer r1;
        java.lang.String[] r2;
        com.android.internal.os._$$Lambda$ZygoteConnection$xjqM7qW7vAjTqh2tR5XRF5Vn5mk $r3;
        java.lang.Runnable $r4;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        r1 := @parameter0: com.android.internal.os.ZygoteServer;

        r2 := @parameter1: java.lang.String[];

        $r3 = new com.android.internal.os._$$Lambda$ZygoteConnection$xjqM7qW7vAjTqh2tR5XRF5Vn5mk;

        specialinvoke $r3.<com.android.internal.os._$$Lambda$ZygoteConnection$xjqM7qW7vAjTqh2tR5XRF5Vn5mk: void <init>(java.lang.String[])>(r2);

        $r4 = specialinvoke r0.<com.android.internal.os.ZygoteConnection: java.lang.Runnable stateChangeWithUsapPoolReset(com.android.internal.os.ZygoteServer,java.lang.Runnable)>(r1, $r3);

        return $r4;
    }

    private void handleBootCompleted()
    {
        com.android.internal.os.ZygoteConnection r0;
        java.io.DataOutputStream $r2;
        java.lang.Throwable $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.internal.os.ZygoteConnection;

     label1:
        $r2 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>(0);

     label2:
        staticinvoke <dalvik.system.VMRuntime: void bootCompleted()>();

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error writing to command socket", $r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.Runnable handleChildProc(com.android.internal.os.ZygoteArguments, java.io.FileDescriptor, boolean)
    {
        com.android.internal.os.ZygoteConnection r0;
        com.android.internal.os.ZygoteArguments r1;
        java.io.FileDescriptor r2;
        boolean z0;
        java.lang.String $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2;
        java.lang.String[] $r7, $r9, $r11;
        java.lang.IllegalStateException $r8;
        java.lang.Runnable $r10, $r13;
        long[] $r12;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        r1 := @parameter0: com.android.internal.os.ZygoteArguments;

        r2 := @parameter1: java.io.FileDescriptor;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.internal.os.ZygoteConnection: void closeSocket()>();

        staticinvoke <com.android.internal.os.Zygote: void setAppProcessName(com.android.internal.os.ZygoteArguments,java.lang.String)>(r1, "Zygote");

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        $r3 = r1.<com.android.internal.os.ZygoteArguments: java.lang.String mInvokeWith>;

        if $r3 != null goto label2;

        if z0 != 0 goto label1;

        $i2 = r1.<com.android.internal.os.ZygoteArguments: int mTargetSdkVersion>;

        $r12 = r1.<com.android.internal.os.ZygoteArguments: long[] mDisabledCompatChanges>;

        $r11 = r1.<com.android.internal.os.ZygoteArguments: java.lang.String[] mRemainingArgs>;

        $r13 = staticinvoke <com.android.internal.os.ZygoteInit: java.lang.Runnable zygoteInit(int,long[],java.lang.String[],java.lang.ClassLoader)>($i2, $r12, $r11, null);

        return $r13;

     label1:
        $i1 = r1.<com.android.internal.os.ZygoteArguments: int mTargetSdkVersion>;

        $r9 = r1.<com.android.internal.os.ZygoteArguments: java.lang.String[] mRemainingArgs>;

        $r10 = staticinvoke <com.android.internal.os.ZygoteInit: java.lang.Runnable childZygoteInit(int,java.lang.String[],java.lang.ClassLoader)>($i1, $r9, null);

        return $r10;

     label2:
        $r4 = r1.<com.android.internal.os.ZygoteArguments: java.lang.String mInvokeWith>;

        $r5 = r1.<com.android.internal.os.ZygoteArguments: java.lang.String mNiceName>;

        $i0 = r1.<com.android.internal.os.ZygoteArguments: int mTargetSdkVersion>;

        $r6 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getCurrentInstructionSet()>();

        $r7 = r1.<com.android.internal.os.ZygoteArguments: java.lang.String[] mRemainingArgs>;

        staticinvoke <com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.lang.String,java.io.FileDescriptor,java.lang.String[])>($r4, $r5, $i0, $r6, r2, $r7);

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("WrapperInit.execApplication unexpectedly returned");

        throw $r8;
    }

    private java.lang.Runnable handleHiddenApiAccessLogSampleRate(com.android.internal.os.ZygoteServer, int, int)
    {
        com.android.internal.os.ZygoteConnection r0;
        com.android.internal.os.ZygoteServer r1;
        int i0, i1;
        com.android.internal.os._$$Lambda$ZygoteConnection$KxVsZ_s4KsanePOHCU5JcuypPik $r2;
        java.lang.Runnable $r3;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        r1 := @parameter0: com.android.internal.os.ZygoteServer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new com.android.internal.os._$$Lambda$ZygoteConnection$KxVsZ_s4KsanePOHCU5JcuypPik;

        specialinvoke $r2.<com.android.internal.os._$$Lambda$ZygoteConnection$KxVsZ_s4KsanePOHCU5JcuypPik: void <init>(int,int)>(i0, i1);

        $r3 = specialinvoke r0.<com.android.internal.os.ZygoteConnection: java.lang.Runnable stateChangeWithUsapPoolReset(com.android.internal.os.ZygoteServer,java.lang.Runnable)>(r1, $r2);

        return $r3;
    }

    private void handleParentProc(int, java.io.FileDescriptor)
    {
        com.android.internal.os.ZygoteConnection r0;
        long l2, l3, $l12, $l13;
        java.util.concurrent.TimeUnit r1, $r16;
        int $i4, $i8, $i14, $i16, $i18, i20, i21, i24, i25, i26, i27, i28, $i29, i30, i31;
        java.lang.StringBuilder $r2, $r8;
        java.lang.String $r7, $r11;
        android.system.StructPollfd $r12, $r13, $r14, $r15, $r17, r25;
        short $s9, $s10, $s11, $s17;
        java.lang.Exception $r18, $r21, $r22, r30;
        java.lang.Throwable $r19;
        java.lang.IllegalStateException $r20;
        java.io.FileDescriptor r23;
        android.system.StructPollfd[] r24;
        byte[] r26;
        java.lang.RuntimeException r27;
        java.io.DataInputStream r28;
        java.io.ByteArrayInputStream r29;
        boolean z4;
        java.io.DataOutputStream $r33, $r34;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        i20 := @parameter0: int;

        r23 := @parameter1: java.io.FileDescriptor;

        if i20 <= 0 goto label01;

        specialinvoke r0.<com.android.internal.os.ZygoteConnection: void setChildPgid(int)>(i20);

     label01:
        if r23 == null goto label41;

        if i20 <= 0 goto label41;

        i21 = -1;

     label02:
        r24 = newarray (android.system.StructPollfd)[1];

     label03:
        r25 = new android.system.StructPollfd;

     label04:
        specialinvoke r25.<android.system.StructPollfd: void <init>()>();

     label05:
        r24[0] = r25;

     label06:
        r26 = newarray (byte)[4];

     label07:
        i24 = 30000;

        i25 = 0;

     label08:
        l2 = staticinvoke <java.lang.System: long nanoTime()>();

     label09:
        $i4 = lengthof r26;

        if i25 >= $i4 goto label27;

     label10:
        if i24 <= 0 goto label27;

     label11:
        $r12 = r24[0];

        $r12.<android.system.StructPollfd: java.io.FileDescriptor fd> = r23;

     label12:
        $r13 = r24[0];

        $i8 = <android.system.OsConstants: int POLLIN>;

        $s9 = (short) $i8;

        $s10 = (short) $s9;

        $r13.<android.system.StructPollfd: short events> = $s10;

     label13:
        $r14 = r24[0];

        $s11 = (short) 0;

        $r14.<android.system.StructPollfd: short revents> = $s11;

     label14:
        $r15 = r24[0];

        $r15.<android.system.StructPollfd: java.lang.Object userData> = null;

     label15:
        i26 = staticinvoke <android.system.Os: int poll(android.system.StructPollfd[],int)>(r24, i24);

     label16:
        l3 = staticinvoke <java.lang.System: long nanoTime()>();

     label17:
        r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

     label18:
        $l12 = l3 - l2;

        $r16 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l13 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($l12, $r16);

        $i14 = (int) $l13;

        i24 = 30000 - $i14;

     label19:
        if i26 <= 0 goto label23;

     label20:
        $r17 = r24[0];

        $s17 = $r17.<android.system.StructPollfd: short revents>;

        $i16 = <android.system.OsConstants: int POLLIN>;

        $i18 = $s17 & $i16;

        if $i18 == 0 goto label27;

        i27 = staticinvoke <android.system.Os: int read(java.io.FileDescriptor,byte[],int,int)>(r23, r26, i25, 1);

     label21:
        if i27 < 0 goto label22;

        i28 = i25 + i27;

        goto label26;

     label22:
        r27 = new java.lang.RuntimeException;

        specialinvoke r27.<java.lang.RuntimeException: void <init>(java.lang.String)>("Some error");

        throw r27;

     label23:
        i28 = i25;

        if i26 != 0 goto label26;

     label24:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Zygote", "Timed out waiting for child.");

     label25:
        i28 = i25;

     label26:
        i25 = i28;

        goto label09;

     label27:
        $i29 = lengthof r26;

        if i25 != $i29 goto label29;

        r28 = new java.io.DataInputStream;

        r29 = new java.io.ByteArrayInputStream;

        specialinvoke r29.<java.io.ByteArrayInputStream: void <init>(byte[])>(r26);

        specialinvoke r28.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r29);

        i30 = virtualinvoke r28.<java.io.DataInputStream: int readInt()>();

     label28:
        i21 = i30;

        goto label29;

     label29:
        if i21 != -1 goto label33;

     label30:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Zygote", "Error reading pid from wrapped process, child may have died");

     label31:
        goto label33;

     label32:
        $r18 := @caughtexception;

        r30 = $r18;

        goto label36;

     label33:
        goto label37;

     label34:
        $r21 := @caughtexception;

        r30 = $r21;

        goto label36;

     label35:
        $r22 := @caughtexception;

        r30 = $r22;

        i21 = -1;

     label36:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Zygote", "Error reading pid from wrapped process, child may have died", r30);

     label37:
        z4 = 0;

        if i21 <= 0 goto label42;

        i31 = i21;

     label38:
        if i31 <= 0 goto label39;

        if i31 == i20 goto label39;

        i31 = staticinvoke <android.os.Process: int getParentPid(int)>(i31);

        goto label38;

     label39:
        if i31 <= 0 goto label40;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrapped process has pid ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", $r11);

        z4 = 1;

        goto label43;

     label40:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrapped process reported a pid that is not a child of the process that we forked: childPid=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" innerPid=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Zygote", $r7);

        z4 = 0;

        goto label42;

     label41:
        z4 = 0;

     label42:
        i21 = i20;

     label43:
        $r33 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        virtualinvoke $r33.<java.io.DataOutputStream: void writeInt(int)>(i21);

        $r34 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        virtualinvoke $r34.<java.io.DataOutputStream: void writeBoolean(boolean)>(z4);

     label44:
        return;

     label45:
        $r19 := @caughtexception;

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error writing to command socket", $r19);

        throw $r20;

        catch java.lang.Exception from label02 to label03 with label35;
        catch java.lang.Exception from label03 to label04 with label35;
        catch java.lang.Exception from label04 to label05 with label35;
        catch java.lang.Exception from label06 to label07 with label35;
        catch java.lang.Exception from label08 to label09 with label35;
        catch java.lang.Exception from label09 to label10 with label35;
        catch java.lang.Exception from label11 to label12 with label35;
        catch java.lang.Exception from label12 to label13 with label35;
        catch java.lang.Exception from label13 to label14 with label35;
        catch java.lang.Exception from label14 to label15 with label35;
        catch java.lang.Exception from label15 to label16 with label35;
        catch java.lang.Exception from label16 to label17 with label35;
        catch java.lang.Exception from label17 to label18 with label35;
        catch java.lang.Exception from label18 to label19 with label34;
        catch java.lang.Exception from label20 to label21 with label34;
        catch java.lang.Exception from label22 to label23 with label34;
        catch java.lang.Exception from label24 to label25 with label34;
        catch java.lang.Exception from label27 to label28 with label34;
        catch java.lang.Exception from label30 to label31 with label32;
        catch java.io.IOException from label43 to label44 with label45;
    }

    private void handlePidQuery()
    {
        com.android.internal.os.ZygoteConnection r0;
        int $i0, $i1;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;
        java.io.DataOutputStream $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.IllegalStateException $r6;
        byte[] r7;

        r0 := @this: com.android.internal.os.ZygoteConnection;

     label1:
        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        r7 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $r3 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        $i1 = lengthof r7;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>($i1);

        $r4 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[])>(r7);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error writing to command socket", $r5);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void handlePreload()
    {
        com.android.internal.os.ZygoteConnection r0;
        boolean $z0;
        java.io.DataOutputStream $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: com.android.internal.os.ZygoteConnection;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.os.ZygoteConnection: boolean isPreloadComplete()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>(1);

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<com.android.internal.os.ZygoteConnection: void preload()>();

        $r2 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>(0);

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error writing to command socket", $r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    private java.lang.Runnable handleUsapPoolStatusChange(com.android.internal.os.ZygoteServer, boolean)
    {
        com.android.internal.os.ZygoteConnection r0;
        boolean z0;
        java.lang.Runnable r1;
        android.net.LocalSocket $r2;
        java.io.DataOutputStream $r3;
        java.lang.Throwable $r4;
        java.lang.IllegalStateException $r5;
        com.android.internal.os.ZygoteServer r6;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        r6 := @parameter0: com.android.internal.os.ZygoteServer;

        z0 := @parameter1: boolean;

     label1:
        $r2 = r0.<com.android.internal.os.ZygoteConnection: android.net.LocalSocket mSocket>;

        r1 = virtualinvoke r6.<com.android.internal.os.ZygoteServer: java.lang.Runnable setUsapPoolStatus(boolean,android.net.LocalSocket)>(z0, $r2);

     label2:
        if r1 != null goto label5;

     label3:
        $r3 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>(0);

     label4:
        goto label6;

     label5:
        virtualinvoke r6.<com.android.internal.os.ZygoteServer: void setForkChild()>();

     label6:
        return r1;

     label7:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error writing to command socket", $r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    static void lambda$handleApiBlacklistExemptions$0(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <com.android.internal.os.ZygoteInit: void setApiBlacklistExemptions(java.lang.String[])>(r0);

        return;
    }

    static void lambda$handleHiddenApiAccessLogSampleRate$1(int, int)
    {
        int i0, i1, $i2;
        com.android.internal.os.StatsdHiddenApiUsageLogger $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        staticinvoke <com.android.internal.os.ZygoteInit: void setHiddenApiAccessLogSampleRate(int)>($i2);

        staticinvoke <com.android.internal.os.StatsdHiddenApiUsageLogger: void setHiddenApiAccessLogSampleRates(int,int)>(i0, i1);

        $r0 = staticinvoke <com.android.internal.os.StatsdHiddenApiUsageLogger: com.android.internal.os.StatsdHiddenApiUsageLogger getInstance()>();

        staticinvoke <com.android.internal.os.ZygoteInit: void setHiddenApiUsageLogger(dalvik.system.VMRuntime$HiddenApiUsageLogger)>($r0);

        return;
    }

    private void setChildPgid(int)
    {
        com.android.internal.os.ZygoteConnection r0;
        int i0, $i1, $i2;
        android.net.Credentials $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.internal.os.ZygoteConnection: android.net.Credentials peer>;

        $i1 = virtualinvoke $r2.<android.net.Credentials: int getPid()>();

        $i2 = staticinvoke <android.system.Os: int getpgid(int)>($i1);

        staticinvoke <android.system.Os: void setpgid(int,int)>(i0, $i2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", "Zygote: setpgid failed. This is normal if peer is not in our session");

     label4:
        return;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    private java.lang.Runnable stateChangeWithUsapPoolReset(com.android.internal.os.ZygoteServer, java.lang.Runnable)
    {
        com.android.internal.os.ZygoteConnection r0;
        boolean z0, $z1;
        java.io.DataOutputStream $r1;
        int[] $r2;
        android.net.LocalSocket $r3;
        java.io.FileDescriptor $r4;
        int $i0;
        java.lang.Throwable $r5;
        java.lang.IllegalStateException $r6;
        com.android.internal.os.ZygoteServer r7;
        java.lang.Runnable r8, r9;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        r7 := @parameter0: com.android.internal.os.ZygoteServer;

        r8 := @parameter1: java.lang.Runnable;

     label01:
        z0 = virtualinvoke r7.<com.android.internal.os.ZygoteServer: boolean isUsapPoolEnabled()>();

     label02:
        if z0 == 0 goto label04;

     label03:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", "Emptying USAP Pool due to state change.");

        staticinvoke <com.android.internal.os.Zygote: void emptyUsapPool()>();

     label04:
        interfaceinvoke r8.<java.lang.Runnable: void run()>();

        $z1 = virtualinvoke r7.<com.android.internal.os.ZygoteServer: boolean isUsapPoolEnabled()>();

        if $z1 == 0 goto label09;

        $r2 = newarray (int)[1];

        $r3 = r0.<com.android.internal.os.ZygoteConnection: android.net.LocalSocket mSocket>;

        $r4 = virtualinvoke $r3.<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>();

        $i0 = virtualinvoke $r4.<java.io.FileDescriptor: int getInt$()>();

        $r2[0] = $i0;

        r9 = virtualinvoke r7.<com.android.internal.os.ZygoteServer: java.lang.Runnable fillUsapPool(int[],boolean)>($r2, 0);

     label05:
        if r9 == null goto label08;

     label06:
        virtualinvoke r7.<com.android.internal.os.ZygoteServer: void setForkChild()>();

     label07:
        return r9;

     label08:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", "Finished refilling USAP Pool after state change.");

     label09:
        $r1 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        virtualinvoke $r1.<java.io.DataOutputStream: void writeInt(int)>(0);

     label10:
        return null;

     label11:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error writing to command socket", $r5);

        throw $r6;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label08 to label09 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }

    protected boolean canPreloadApp()
    {
        com.android.internal.os.ZygoteConnection r0;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        return 0;
    }

    void closeSocket()
    {
        com.android.internal.os.ZygoteConnection r0;
        android.net.LocalSocket $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.os.ZygoteConnection;

     label1:
        $r2 = r0.<com.android.internal.os.ZygoteConnection: android.net.LocalSocket mSocket>;

        virtualinvoke $r2.<android.net.LocalSocket: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Zygote", "Exception while closing command socket in parent", $r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    java.io.FileDescriptor getFileDescriptor()
    {
        com.android.internal.os.ZygoteConnection r0;
        android.net.LocalSocket $r1;
        java.io.FileDescriptor $r2;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        $r1 = r0.<com.android.internal.os.ZygoteConnection: android.net.LocalSocket mSocket>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>();

        return $r2;
    }

    protected java.io.DataOutputStream getSocketOutputStream()
    {
        com.android.internal.os.ZygoteConnection r0;
        java.io.DataOutputStream $r1;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        $r1 = r0.<com.android.internal.os.ZygoteConnection: java.io.DataOutputStream mSocketOutStream>;

        return $r1;
    }

    protected void handlePreloadApp(android.content.pm.ApplicationInfo)
    {
        com.android.internal.os.ZygoteConnection r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Zygote does not support app preloading");

        throw $r2;
    }

    protected void handlePreloadPackage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.internal.os.ZygoteConnection r0;
        java.lang.String r1, r2, r3, r4;
        java.lang.RuntimeException $r5;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Zygote does not support package preloading");

        throw $r5;
    }

    boolean isClosedByPeer()
    {
        com.android.internal.os.ZygoteConnection r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        $z0 = r0.<com.android.internal.os.ZygoteConnection: boolean isEof>;

        return $z0;
    }

    protected boolean isPreloadComplete()
    {
        com.android.internal.os.ZygoteConnection r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        $z0 = staticinvoke <com.android.internal.os.ZygoteInit: boolean isPreloadComplete()>();

        return $z0;
    }

    protected void preload()
    {
        com.android.internal.os.ZygoteConnection r0;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        staticinvoke <com.android.internal.os.ZygoteInit: void lazyPreload()>();

        return;
    }

    java.lang.Runnable processOneCommand(com.android.internal.os.ZygoteServer)
    {
        com.android.internal.os.ZygoteConnection r0;
        int i0, $i1, $i2, $i3, $i4, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, i21, i22;
        int[] r2, $r28, $r29, r61;
        java.io.BufferedReader $r3;
        com.android.internal.os.ZygoteArguments $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.String $r5, $r10, $r13, $r16, $r20, $r24, $r25, $r26, $r27, $r36, $r38, $r42, $r43, $r44, $r45;
        java.lang.String[] $r6, $r22, $r23, $r34, r53;
        java.lang.Runnable $r7, $r35, $r46, r67;
        long $l5, $l7, $l8, $l9;
        byte $b6, $b10;
        java.lang.StringBuilder $r8;
        com.android.internal.os.ZygoteSecurityException $r15;
        android.net.Credentials $r17, $r18;
        java.util.ArrayList $r19, $r32;
        android.net.LocalSocket $r21;
        int[][] $r31, r59;
        java.lang.Object[] $r33;
        java.util.Base64$Decoder $r37;
        android.os.Parcelable$Creator $r39;
        java.lang.Object $r40;
        java.lang.IllegalArgumentException $r41;
        java.lang.Throwable $r47, $r48, $r50;
        java.lang.IllegalStateException $r49, $r51;
        com.android.internal.os.ZygoteServer r52;
        java.io.FileDescriptor r54, r55, r63, r64, r65, r66;
        byte[] r56;
        android.os.Parcel r57;
        android.content.pm.ApplicationInfo r58;
        java.io.FileDescriptor[] r60;

        r0 := @this: com.android.internal.os.ZygoteConnection;

        r52 := @parameter0: com.android.internal.os.ZygoteServer;

     label01:
        $r3 = r0.<com.android.internal.os.ZygoteConnection: java.io.BufferedReader mSocketReader>;

        r53 = staticinvoke <com.android.internal.os.Zygote: java.lang.String[] readArgumentList(java.io.BufferedReader)>($r3);

     label02:
        if r53 != null goto label03;

        r0.<com.android.internal.os.ZygoteConnection: boolean isEof> = 1;

        return null;

     label03:
        r54 = null;

        r55 = null;

        $r4 = new com.android.internal.os.ZygoteArguments;

        specialinvoke $r4.<com.android.internal.os.ZygoteArguments: void <init>(java.lang.String[])>(r53);

        $z0 = $r4.<com.android.internal.os.ZygoteArguments: boolean mBootCompleted>;

        if $z0 == 0 goto label04;

        specialinvoke r0.<com.android.internal.os.ZygoteConnection: void handleBootCompleted()>();

        return null;

     label04:
        $z1 = $r4.<com.android.internal.os.ZygoteArguments: boolean mAbiListQuery>;

        if $z1 == 0 goto label05;

        specialinvoke r0.<com.android.internal.os.ZygoteConnection: void handleAbiListQuery()>();

        return null;

     label05:
        $z2 = $r4.<com.android.internal.os.ZygoteArguments: boolean mPidQuery>;

        if $z2 == 0 goto label06;

        specialinvoke r0.<com.android.internal.os.ZygoteConnection: void handlePidQuery()>();

        return null;

     label06:
        $z3 = $r4.<com.android.internal.os.ZygoteArguments: boolean mUsapPoolStatusSpecified>;

        if $z3 == 0 goto label07;

        $z11 = $r4.<com.android.internal.os.ZygoteArguments: boolean mUsapPoolEnabled>;

        $r46 = specialinvoke r0.<com.android.internal.os.ZygoteConnection: java.lang.Runnable handleUsapPoolStatusChange(com.android.internal.os.ZygoteServer,boolean)>(r52, $z11);

        return $r46;

     label07:
        $z4 = $r4.<com.android.internal.os.ZygoteArguments: boolean mPreloadDefault>;

        if $z4 == 0 goto label08;

        specialinvoke r0.<com.android.internal.os.ZygoteConnection: void handlePreload()>();

        return null;

     label08:
        $r5 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mPreloadPackage>;

        if $r5 == null goto label09;

        $r45 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mPreloadPackage>;

        $r44 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mPreloadPackageLibs>;

        $r43 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mPreloadPackageLibFileName>;

        $r42 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mPreloadPackageCacheKey>;

        virtualinvoke r0.<com.android.internal.os.ZygoteConnection: void handlePreloadPackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r45, $r44, $r43, $r42);

        return null;

     label09:
        $z5 = virtualinvoke r0.<com.android.internal.os.ZygoteConnection: boolean canPreloadApp()>();

        if $z5 == 0 goto label11;

        $r36 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mPreloadApp>;

        if $r36 == null goto label11;

        $r37 = staticinvoke <java.util.Base64: java.util.Base64$Decoder getDecoder()>();

        $r38 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mPreloadApp>;

        r56 = virtualinvoke $r37.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>($r38);

        r57 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i20 = lengthof r56;

        virtualinvoke r57.<android.os.Parcel: void unmarshall(byte[],int,int)>(r56, 0, $i20);

        virtualinvoke r57.<android.os.Parcel: void setDataPosition(int)>(0);

        $r39 = <android.content.pm.ApplicationInfo: android.os.Parcelable$Creator CREATOR>;

        $r40 = interfaceinvoke $r39.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r57);

        r58 = (android.content.pm.ApplicationInfo) $r40;

        virtualinvoke r57.<android.os.Parcel: void recycle()>();

        if r58 == null goto label10;

        virtualinvoke r0.<com.android.internal.os.ZygoteConnection: void handlePreloadApp(android.content.pm.ApplicationInfo)>(r58);

        return null;

     label10:
        $r41 = new java.lang.IllegalArgumentException;

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Failed to deserialize --preload-app");

        throw $r41;

     label11:
        $r6 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String[] mApiBlacklistExemptions>;

        if $r6 == null goto label12;

        $r34 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String[] mApiBlacklistExemptions>;

        $r35 = specialinvoke r0.<com.android.internal.os.ZygoteConnection: java.lang.Runnable handleApiBlacklistExemptions(com.android.internal.os.ZygoteServer,java.lang.String[])>(r52, $r34);

        return $r35;

     label12:
        $i1 = $r4.<com.android.internal.os.ZygoteArguments: int mHiddenApiAccessLogSampleRate>;

        if $i1 != -1 goto label39;

        $i4 = $r4.<com.android.internal.os.ZygoteArguments: int mHiddenApiAccessStatslogSampleRate>;

        if $i4 == -1 goto label13;

        goto label39;

     label13:
        $l5 = $r4.<com.android.internal.os.ZygoteArguments: long mPermittedCapabilities>;

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label38;

        $l9 = $r4.<com.android.internal.os.ZygoteArguments: long mEffectiveCapabilities>;

        $b10 = $l9 cmp 0L;

        if $b10 != 0 goto label38;

        $r17 = r0.<com.android.internal.os.ZygoteConnection: android.net.Credentials peer>;

        staticinvoke <com.android.internal.os.Zygote: void applyUidSecurityPolicy(com.android.internal.os.ZygoteArguments,android.net.Credentials)>($r4, $r17);

        $r18 = r0.<com.android.internal.os.ZygoteConnection: android.net.Credentials peer>;

        staticinvoke <com.android.internal.os.Zygote: void applyInvokeWithSecurityPolicy(com.android.internal.os.ZygoteArguments,android.net.Credentials)>($r4, $r18);

        staticinvoke <com.android.internal.os.Zygote: void applyDebuggerSystemProperty(com.android.internal.os.ZygoteArguments)>($r4);

        staticinvoke <com.android.internal.os.Zygote: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteArguments)>($r4);

        r59 = null;

        $r19 = $r4.<com.android.internal.os.ZygoteArguments: java.util.ArrayList mRLimits>;

        if $r19 == null goto label14;

        $r32 = $r4.<com.android.internal.os.ZygoteArguments: java.util.ArrayList mRLimits>;

        $r31 = <com.android.internal.os.Zygote: int[][] INT_ARRAY_2D>;

        $r33 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r31);

        r59 = (int[][]) $r33;

     label14:
        $r20 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mInvokeWith>;

        if $r20 == null goto label20;

     label15:
        $i17 = <android.system.OsConstants: int O_CLOEXEC>;

        r60 = staticinvoke <android.system.Os: java.io.FileDescriptor[] pipe2(int)>($i17);

     label16:
        r54 = r60[1];

        r55 = r60[0];

     label17:
        $i18 = <android.system.OsConstants: int F_SETFD>;

        staticinvoke <android.system.Os: int fcntlInt(java.io.FileDescriptor,int,int)>(r54, $i18, 0);

        i21 = virtualinvoke r54.<java.io.FileDescriptor: int getInt$()>();

        i0 = virtualinvoke r55.<java.io.FileDescriptor: int getInt$()>();

     label18:
        $r29 = newarray (int)[2];

        $r29[0] = i21;

        $r29[1] = i0;

        r61 = $r29;

        goto label21;

     label19:
        $r48 := @caughtexception;

        $r49 = new java.lang.IllegalStateException;

        specialinvoke $r49.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to set up pipe for invoke-with", $r48);

        throw $r49;

     label20:
        r61 = null;

     label21:
        r2 = newarray (int)[2];

        r2[0] = -1;

        r2[1] = -1;

        $r21 = r0.<com.android.internal.os.ZygoteConnection: android.net.LocalSocket mSocket>;

        r63 = virtualinvoke $r21.<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>();

        if r63 == null goto label22;

        $i16 = virtualinvoke r63.<java.io.FileDescriptor: int getInt$()>();

        r2[0] = $i16;

     label22:
        r64 = virtualinvoke r52.<com.android.internal.os.ZygoteServer: java.io.FileDescriptor getZygoteSocketFileDescriptor()>();

        if r64 == null goto label23;

        $i15 = virtualinvoke r64.<java.io.FileDescriptor: int getInt$()>();

        r2[1] = $i15;

     label23:
        $i14 = $r4.<com.android.internal.os.ZygoteArguments: int mUid>;

        $i13 = $r4.<com.android.internal.os.ZygoteArguments: int mGid>;

        $r28 = $r4.<com.android.internal.os.ZygoteArguments: int[] mGids>;

        $i12 = $r4.<com.android.internal.os.ZygoteArguments: int mRuntimeFlags>;

        $i11 = $r4.<com.android.internal.os.ZygoteArguments: int mMountExternal>;

        $r27 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mSeInfo>;

        $r26 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mNiceName>;

        $z9 = $r4.<com.android.internal.os.ZygoteArguments: boolean mStartChildZygote>;

        $r25 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mInstructionSet>;

        $r24 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String mAppDataDir>;

        $z8 = $r4.<com.android.internal.os.ZygoteArguments: boolean mIsTopApp>;

        $r23 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String[] mPkgDataInfoList>;

        $r22 = $r4.<com.android.internal.os.ZygoteArguments: java.lang.String[] mWhitelistedDataInfoList>;

        $z7 = $r4.<com.android.internal.os.ZygoteArguments: boolean mBindMountAppDataDirs>;

        $z6 = $r4.<com.android.internal.os.ZygoteArguments: boolean mBindMountAppStorageDirs>;

        i22 = staticinvoke <com.android.internal.os.Zygote: int forkAndSpecialize(int,int,int[],int,int[][],int,java.lang.String,java.lang.String,int[],int[],boolean,java.lang.String,java.lang.String,boolean,java.lang.String[],java.lang.String[],boolean,boolean)>($i14, $i13, $r28, $i12, r59, $i11, $r27, $r26, r2, r61, $z9, $r25, $r24, $z8, $r23, $r22, $z7, $z6);

        if i22 != 0 goto label32;

        r65 = r54;

        r66 = r55;

     label24:
        virtualinvoke r52.<com.android.internal.os.ZygoteServer: void setForkChild()>();

     label25:
        r65 = r54;

        r66 = r55;

     label26:
        virtualinvoke r52.<com.android.internal.os.ZygoteServer: void closeServerSocket()>();

     label27:
        r65 = r54;

        r66 = r55;

     label28:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r55);

     label29:
        r66 = null;

        r65 = r54;

     label30:
        $z10 = $r4.<com.android.internal.os.ZygoteArguments: boolean mStartChildZygote>;

        r67 = specialinvoke r0.<com.android.internal.os.ZygoteConnection: java.lang.Runnable handleChildProc(com.android.internal.os.ZygoteArguments,java.io.FileDescriptor,boolean)>($r4, r54, $z10);

     label31:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r54);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(null);

        return r67;

     label32:
        r65 = r54;

        r66 = r55;

     label33:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r54);

     label34:
        r65 = null;

        r66 = r55;

     label35:
        specialinvoke r0.<com.android.internal.os.ZygoteConnection: void handleParentProc(int,java.io.FileDescriptor)>(i22, r55);

     label36:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(null);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r55);

        return null;

     label37:
        $r47 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r65);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r66);

        throw $r47;

     label38:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Client may not specify capabilities: permitted=0x");

        $l7 = $r4.<com.android.internal.os.ZygoteArguments: long mPermittedCapabilities>;

        $r10 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", effective=0x");

        $l8 = $r4.<com.android.internal.os.ZygoteArguments: long mEffectiveCapabilities>;

        $r13 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l8);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = new com.android.internal.os.ZygoteSecurityException;

        $r16 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.android.internal.os.ZygoteSecurityException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label39:
        $i3 = $r4.<com.android.internal.os.ZygoteArguments: int mHiddenApiAccessLogSampleRate>;

        $i2 = $r4.<com.android.internal.os.ZygoteArguments: int mHiddenApiAccessStatslogSampleRate>;

        $r7 = specialinvoke r0.<com.android.internal.os.ZygoteConnection: java.lang.Runnable handleHiddenApiAccessLogSampleRate(com.android.internal.os.ZygoteServer,int,int)>(r52, $i3, $i2);

        return $r7;

     label40:
        $r50 := @caughtexception;

        $r51 = new java.lang.IllegalStateException;

        specialinvoke $r51.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("IOException on command socket", $r50);

        throw $r51;

        catch java.io.IOException from label01 to label02 with label40;
        catch android.system.ErrnoException from label15 to label16 with label19;
        catch android.system.ErrnoException from label17 to label18 with label19;
        catch java.lang.Throwable from label24 to label25 with label37;
        catch java.lang.Throwable from label26 to label27 with label37;
        catch java.lang.Throwable from label28 to label29 with label37;
        catch java.lang.Throwable from label30 to label31 with label37;
        catch java.lang.Throwable from label33 to label34 with label37;
        catch java.lang.Throwable from label35 to label36 with label37;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.ZygoteConnection: java.lang.String TAG> = "Zygote";

        return;
    }
}
