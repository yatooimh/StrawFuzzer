class com.android.internal.os.ZygoteServer extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private static final int INVALID_TIMESTAMP;
    public static final java.lang.String TAG;
    private static final java.lang.String USAP_POOL_REFILL_DELAY_MS_DEFAULT;
    private static final java.lang.String USAP_POOL_SIZE_MAX_DEFAULT;
    private static final int USAP_POOL_SIZE_MAX_LIMIT;
    private static final java.lang.String USAP_POOL_SIZE_MIN_DEFAULT;
    private static final int USAP_POOL_SIZE_MIN_LIMIT;
    private boolean mCloseSocketFd;
    private boolean mIsFirstPropertyCheck;
    private boolean mIsForkChild;
    private long mLastPropCheckTimestamp;
    private boolean mUsapPoolEnabled;
    private final java.io.FileDescriptor mUsapPoolEventFD;
    private com.android.internal.os.ZygoteServer$UsapPoolRefillAction mUsapPoolRefillAction;
    private int mUsapPoolRefillDelayMs;
    private int mUsapPoolRefillThreshold;
    private long mUsapPoolRefillTriggerTimestamp;
    private int mUsapPoolSizeMax;
    private int mUsapPoolSizeMin;
    private final android.net.LocalServerSocket mUsapPoolSocket;
    private final boolean mUsapPoolSupported;
    private android.net.LocalServerSocket mZygoteSocket;

    static void <clinit>()
    {
        <com.android.internal.os.ZygoteServer: int USAP_POOL_SIZE_MIN_LIMIT> = 1;

        <com.android.internal.os.ZygoteServer: java.lang.String USAP_POOL_SIZE_MIN_DEFAULT> = "1";

        <com.android.internal.os.ZygoteServer: int USAP_POOL_SIZE_MAX_LIMIT> = 100;

        <com.android.internal.os.ZygoteServer: java.lang.String USAP_POOL_SIZE_MAX_DEFAULT> = "10";

        <com.android.internal.os.ZygoteServer: java.lang.String USAP_POOL_REFILL_DELAY_MS_DEFAULT> = "3000";

        <com.android.internal.os.ZygoteServer: java.lang.String TAG> = "ZygoteServer";

        <com.android.internal.os.ZygoteServer: int INVALID_TIMESTAMP> = -1;

        <com.android.internal.os.ZygoteServer: boolean $assertionsDisabled> = 0;

        return;
    }

    void <init>()
    {
        com.android.internal.os.ZygoteServer r0;

        r0 := @this: com.android.internal.os.ZygoteServer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.ZygoteServer: boolean mUsapPoolEnabled> = 0;

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMax> = 0;

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMin> = 0;

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolRefillThreshold> = 0;

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolRefillDelayMs> = -1;

        r0.<com.android.internal.os.ZygoteServer: boolean mIsFirstPropertyCheck> = 1;

        r0.<com.android.internal.os.ZygoteServer: long mLastPropCheckTimestamp> = 0L;

        r0.<com.android.internal.os.ZygoteServer: java.io.FileDescriptor mUsapPoolEventFD> = null;

        r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket> = null;

        r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mUsapPoolSocket> = null;

        r0.<com.android.internal.os.ZygoteServer: boolean mUsapPoolSupported> = 0;

        return;
    }

    void <init>(boolean)
    {
        com.android.internal.os.ZygoteServer r0;
        boolean z0;
        java.io.FileDescriptor $r1;
        android.net.LocalServerSocket $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.os.ZygoteServer;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.ZygoteServer: boolean mUsapPoolEnabled> = 0;

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMax> = 0;

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMin> = 0;

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolRefillThreshold> = 0;

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolRefillDelayMs> = -1;

        r0.<com.android.internal.os.ZygoteServer: boolean mIsFirstPropertyCheck> = 1;

        r0.<com.android.internal.os.ZygoteServer: long mLastPropCheckTimestamp> = 0L;

        $r1 = staticinvoke <com.android.internal.os.Zygote: java.io.FileDescriptor getUsapPoolEventFD()>();

        r0.<com.android.internal.os.ZygoteServer: java.io.FileDescriptor mUsapPoolEventFD> = $r1;

        if z0 == 0 goto label1;

        $r4 = staticinvoke <com.android.internal.os.Zygote: android.net.LocalServerSocket createManagedSocketFromInitSocket(java.lang.String)>("zygote");

        r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket> = $r4;

        $r5 = staticinvoke <com.android.internal.os.Zygote: android.net.LocalServerSocket createManagedSocketFromInitSocket(java.lang.String)>("usap_pool_primary");

        r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mUsapPoolSocket> = $r5;

        goto label2;

     label1:
        $r2 = staticinvoke <com.android.internal.os.Zygote: android.net.LocalServerSocket createManagedSocketFromInitSocket(java.lang.String)>("zygote_secondary");

        r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket> = $r2;

        $r3 = staticinvoke <com.android.internal.os.Zygote: android.net.LocalServerSocket createManagedSocketFromInitSocket(java.lang.String)>("usap_pool_secondary");

        r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mUsapPoolSocket> = $r3;

     label2:
        r0.<com.android.internal.os.ZygoteServer: boolean mUsapPoolSupported> = 1;

        specialinvoke r0.<com.android.internal.os.ZygoteServer: void fetchUsapPoolPolicyProps()>();

        return;
    }

    private com.android.internal.os.ZygoteConnection acceptCommandPeer(java.lang.String)
    {
        com.android.internal.os.ZygoteServer r0;
        android.net.LocalServerSocket $r1;
        android.net.LocalSocket $r2;
        java.lang.Throwable $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;
        com.android.internal.os.ZygoteConnection r6;

        r0 := @this: com.android.internal.os.ZygoteServer;

        r5 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket>;

        $r2 = virtualinvoke $r1.<android.net.LocalServerSocket: android.net.LocalSocket accept()>();

        r6 = virtualinvoke r0.<com.android.internal.os.ZygoteServer: com.android.internal.os.ZygoteConnection createNewConnection(android.net.LocalSocket,java.lang.String)>($r2, r5);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("IOException during accept()", $r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void fetchUsapPoolPolicyProps()
    {
        com.android.internal.os.ZygoteServer r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String $r1, r2, r3, r4, r5;

        r0 := @this: com.android.internal.os.ZygoteServer;

        $z0 = r0.<com.android.internal.os.ZygoteServer: boolean mUsapPoolSupported>;

        if $z0 == 0 goto label5;

        r2 = staticinvoke <com.android.internal.os.Zygote: java.lang.String getConfigurationProperty(java.lang.String,java.lang.String)>("usap_pool_size_max", "10");

        $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        $i16 = staticinvoke <java.lang.Integer: int min(int,int)>($i15, 100);

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMax> = $i16;

     label1:
        r3 = staticinvoke <com.android.internal.os.Zygote: java.lang.String getConfigurationProperty(java.lang.String,java.lang.String)>("usap_pool_size_min", "1");

        $z2 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        $i14 = staticinvoke <java.lang.Integer: int max(int,int)>($i13, 1);

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMin> = $i14;

     label2:
        $i0 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMax>;

        $i1 = $i0 / 2;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        r4 = staticinvoke <com.android.internal.os.Zygote: java.lang.String getConfigurationProperty(java.lang.String,java.lang.String)>("usap_refill_threshold", $r1);

        $z3 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if $z3 != 0 goto label3;

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        $i11 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMax>;

        $i12 = staticinvoke <java.lang.Integer: int min(int,int)>($i10, $i11);

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolRefillThreshold> = $i12;

     label3:
        r5 = staticinvoke <com.android.internal.os.Zygote: java.lang.String getConfigurationProperty(java.lang.String,java.lang.String)>("usap_pool_refill_delay_ms", "3000");

        $z4 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>();

        if $z4 != 0 goto label4;

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolRefillDelayMs> = $i9;

     label4:
        $i3 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMin>;

        $i2 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMax>;

        if $i3 < $i2 goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ZygoteServer", "The max size of the USAP pool must be greater than the minimum size.  Restoring default values.");

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>("10");

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMax> = $i5;

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>("1");

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMin> = $i6;

        $i7 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMax>;

        $i8 = $i7 / 2;

        r0.<com.android.internal.os.ZygoteServer: int mUsapPoolRefillThreshold> = $i8;

     label5:
        return;
    }

    private void fetchUsapPoolPolicyPropsIfUnfetched()
    {
        com.android.internal.os.ZygoteServer r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.ZygoteServer;

        $z0 = r0.<com.android.internal.os.ZygoteServer: boolean mIsFirstPropertyCheck>;

        if $z0 == 0 goto label1;

        r0.<com.android.internal.os.ZygoteServer: boolean mIsFirstPropertyCheck> = 0;

        specialinvoke r0.<com.android.internal.os.ZygoteServer: void fetchUsapPoolPolicyProps()>();

     label1:
        return;
    }

    private void fetchUsapPoolPolicyPropsWithMinInterval()
    {
        com.android.internal.os.ZygoteServer r0;
        long l0, $l1, $l2;
        boolean $z0;
        byte $b3;

        r0 := @this: com.android.internal.os.ZygoteServer;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $z0 = r0.<com.android.internal.os.ZygoteServer: boolean mIsFirstPropertyCheck>;

        if $z0 != 0 goto label1;

        $l1 = r0.<com.android.internal.os.ZygoteServer: long mLastPropCheckTimestamp>;

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 60000L;

        if $b3 < 0 goto label2;

     label1:
        r0.<com.android.internal.os.ZygoteServer: boolean mIsFirstPropertyCheck> = 0;

        r0.<com.android.internal.os.ZygoteServer: long mLastPropCheckTimestamp> = l0;

        specialinvoke r0.<com.android.internal.os.ZygoteServer: void fetchUsapPoolPolicyProps()>();

     label2:
        return;
    }

    void closeServerSocket()
    {
        com.android.internal.os.ZygoteServer r0;
        android.net.LocalServerSocket $r1, $r2, $r3;
        boolean $z0;
        java.lang.Throwable $r4, $r5;
        java.io.FileDescriptor r6;

        r0 := @this: com.android.internal.os.ZygoteServer;

     label1:
        $r1 = r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket>;

        if $r1 == null goto label7;

        $r2 = r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket>;

        r6 = virtualinvoke $r2.<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>();

        $r3 = r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket>;

        virtualinvoke $r3.<android.net.LocalServerSocket: void close()>();

     label2:
        if r6 == null goto label7;

     label3:
        $z0 = r0.<com.android.internal.os.ZygoteServer: boolean mCloseSocketFd>;

        if $z0 == 0 goto label7;

        staticinvoke <android.system.Os: void close(java.io.FileDescriptor)>(r6);

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ZygoteServer", "Zygote:  error closing descriptor", $r4);

        goto label7;

     label6:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ZygoteServer", "Zygote:  error closing sockets", $r5);

     label7:
        r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket> = null;

        return;

        catch java.io.IOException from label1 to label2 with label6;
        catch android.system.ErrnoException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label6;
        catch android.system.ErrnoException from label3 to label4 with label5;
    }

    protected com.android.internal.os.ZygoteConnection createNewConnection(android.net.LocalSocket, java.lang.String) throws java.io.IOException
    {
        com.android.internal.os.ZygoteServer r0;
        android.net.LocalSocket r1;
        java.lang.String r2;
        com.android.internal.os.ZygoteConnection $r3;

        r0 := @this: com.android.internal.os.ZygoteServer;

        r1 := @parameter0: android.net.LocalSocket;

        r2 := @parameter1: java.lang.String;

        $r3 = new com.android.internal.os.ZygoteConnection;

        specialinvoke $r3.<com.android.internal.os.ZygoteConnection: void <init>(android.net.LocalSocket,java.lang.String)>(r1, r2);

        return $r3;
    }

    java.lang.Runnable fillUsapPool(int[], boolean)
    {
        com.android.internal.os.ZygoteServer r0;
        int[] r1;
        boolean z0;
        int $i0, $i2, i4, i5;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r5, $r10;
        android.net.LocalServerSocket $r6;
        java.lang.Runnable r13;

        r0 := @this: com.android.internal.os.ZygoteServer;

        r1 := @parameter0: int[];

        z0 := @parameter1: boolean;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, "Zygote:FillUsapPool");

        specialinvoke r0.<com.android.internal.os.ZygoteServer: void fetchUsapPoolPolicyPropsIfUnfetched()>();

        i4 = staticinvoke <com.android.internal.os.Zygote: int getUsapPoolCount()>();

        if z0 == 0 goto label1;

        $i2 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMin>;

        i5 = $i2 - i4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Priority USAP Pool refill. New USAPs: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("zygote", $r10);

        goto label2;

     label1:
        $i0 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMax>;

        i5 = $i0 - i4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delayed USAP Pool refill. New USAPs: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("zygote", $r5);

     label2:
        staticinvoke <dalvik.system.ZygoteHooks: void preFork()>();

     label3:
        i5 = i5 + -1;

        if i5 < 0 goto label5;

        $r6 = r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mUsapPoolSocket>;

        r13 = staticinvoke <com.android.internal.os.Zygote: java.lang.Runnable forkUsap(android.net.LocalServerSocket,int[],boolean)>($r6, r1, z0);

        if r13 == null goto label4;

        return r13;

     label4:
        goto label3;

     label5:
        staticinvoke <dalvik.system.ZygoteHooks: void postForkCommon()>();

        virtualinvoke r0.<com.android.internal.os.ZygoteServer: void resetUsapRefillState()>();

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        return null;
    }

    java.io.FileDescriptor getZygoteSocketFileDescriptor()
    {
        com.android.internal.os.ZygoteServer r0;
        android.net.LocalServerSocket $r1;
        java.io.FileDescriptor $r2;

        r0 := @this: com.android.internal.os.ZygoteServer;

        $r1 = r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket>;

        $r2 = virtualinvoke $r1.<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>();

        return $r2;
    }

    public boolean isUsapPoolEnabled()
    {
        com.android.internal.os.ZygoteServer r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.ZygoteServer;

        $z0 = r0.<com.android.internal.os.ZygoteServer: boolean mUsapPoolEnabled>;

        return $z0;
    }

    void registerServerSocketAtAbstractName(java.lang.String)
    {
        com.android.internal.os.ZygoteServer r0;
        java.lang.String r1, $r10;
        android.net.LocalServerSocket $r3, r11;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;
        java.lang.RuntimeException $r9;

        r0 := @this: com.android.internal.os.ZygoteServer;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket>;

        if $r3 != null goto label4;

     label1:
        r11 = new android.net.LocalServerSocket;

        specialinvoke r11.<android.net.LocalServerSocket: void <init>(java.lang.String)>(r1);

        r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket> = r11;

        r0.<com.android.internal.os.ZygoteServer: boolean mCloseSocketFd> = 0;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error binding to abstract socket \'");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = new java.lang.RuntimeException;

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r4);

        throw $r9;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void resetUsapRefillState()
    {
        com.android.internal.os.ZygoteServer r0;
        com.android.internal.os.ZygoteServer$UsapPoolRefillAction $r1;

        r0 := @this: com.android.internal.os.ZygoteServer;

        $r1 = <com.android.internal.os.ZygoteServer$UsapPoolRefillAction: com.android.internal.os.ZygoteServer$UsapPoolRefillAction NONE>;

        r0.<com.android.internal.os.ZygoteServer: com.android.internal.os.ZygoteServer$UsapPoolRefillAction mUsapPoolRefillAction> = $r1;

        r0.<com.android.internal.os.ZygoteServer: long mUsapPoolRefillTriggerTimestamp> = -1L;

        return;
    }

    java.lang.Runnable runSelectLoop(java.lang.String)
    {
        com.android.internal.os.ZygoteServer r0;
        int i0, $i1, $i12, $i13, $i14, $i15, $i17, $i19, $i20, $i22, $i23, $i26, $i29, $i32, $i33, $i34, $i35, i40, i41, i42, i43, i44, i45, i47, i48, i49, i50, i52, i53;
        android.net.LocalServerSocket $r5;
        java.io.FileDescriptor $r6, $r17, $r24, $r27, r60, r85;
        com.android.internal.os.ZygoteServer$UsapPoolRefillAction $r7, $r12, $r13, $r14, $r25, $r76, $r77;
        boolean $z2, $z3, $z5, $z8, $z9, z11, z12, z13;
        long $l2, $l4, $l5, $l6, $l9, $l10, $l11, $l16, l46, l51;
        byte $b3, $b7, $b8;
        java.util.List $r8;
        java.util.stream.Stream $r9;
        com.android.internal.os.'-$$Lambda$sHtqZgGVjxOf9IJdAdZO6gwD_Do' $r10;
        java.util.stream.IntStream $r11;
        android.system.StructPollfd $r15, $r16, $r28, $r29, $r32, $r33, $r36, $r37, r83, r84, r86;
        short $s18, $s24, $s25, $s27, $s28, $s30, $s31;
        java.lang.String $r20, $r43, $r45, $r48, $r50, r56;
        java.lang.Object $r21, $r34, $r53;
        java.lang.Throwable $r38, $r51;
        java.lang.Exception $r40, $r52;
        com.android.internal.os.ZygoteConnection $r54, r62, r63;
        int[] r57, r78;
        android.system.StructPollfd[] r58;
        java.util.Iterator r59;
        java.lang.Runnable r64, r79;
        byte[] r69;
        java.util.ArrayList r81, r82;
        java.lang.IllegalStateException r87, r88;
        java.io.ByteArrayInputStream r89;
        java.io.DataInputStream r90;
        java.lang.StringBuilder r91, r92, r93;
        java.lang.RuntimeException r94;
        java.util.function.ToIntFunction r95;

        r0 := @this: com.android.internal.os.ZygoteServer;

        r56 := @parameter0: java.lang.String;

        r81 = new java.util.ArrayList;

        specialinvoke r81.<java.util.ArrayList: void <init>()>();

        r82 = new java.util.ArrayList;

        specialinvoke r82.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<com.android.internal.os.ZygoteServer: android.net.LocalServerSocket mZygoteSocket>;

        $r6 = virtualinvoke $r5.<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke r81.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        virtualinvoke r82.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        r0.<com.android.internal.os.ZygoteServer: long mUsapPoolRefillTriggerTimestamp> = -1L;

     label01:
        specialinvoke r0.<com.android.internal.os.ZygoteServer: void fetchUsapPoolPolicyPropsWithMinInterval()>();

        $r7 = <com.android.internal.os.ZygoteServer$UsapPoolRefillAction: com.android.internal.os.ZygoteServer$UsapPoolRefillAction NONE>;

        r0.<com.android.internal.os.ZygoteServer: com.android.internal.os.ZygoteServer$UsapPoolRefillAction mUsapPoolRefillAction> = $r7;

        $z2 = r0.<com.android.internal.os.ZygoteServer: boolean mUsapPoolEnabled>;

        if $z2 == 0 goto label02;

        r57 = staticinvoke <com.android.internal.os.Zygote: int[] getUsapPipeFDs()>();

        $i32 = virtualinvoke r81.<java.util.ArrayList: int size()>();

        $i34 = $i32 + 1;

        $i33 = lengthof r57;

        $i35 = $i34 + $i33;

        r58 = newarray (android.system.StructPollfd)[$i35];

        goto label03;

     label02:
        $i1 = virtualinvoke r81.<java.util.ArrayList: int size()>();

        r58 = newarray (android.system.StructPollfd)[$i1];

        r57 = null;

     label03:
        i40 = 0;

        r59 = virtualinvoke r81.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z9 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label05;

        $r34 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();

        r60 = (java.io.FileDescriptor) $r34;

        r83 = new android.system.StructPollfd;

        specialinvoke r83.<android.system.StructPollfd: void <init>()>();

        r58[i40] = r83;

        $r36 = r58[i40];

        $r36.<android.system.StructPollfd: java.io.FileDescriptor fd> = r60;

        $r37 = r58[i40];

        $i29 = <android.system.OsConstants: int POLLIN>;

        $s30 = (short) $i29;

        $s31 = (short) $s30;

        $r37.<android.system.StructPollfd: short events> = $s31;

        i40 = i40 + 1;

        goto label04;

     label05:
        $z3 = r0.<com.android.internal.os.ZygoteServer: boolean mUsapPoolEnabled>;

        if $z3 == 0 goto label08;

        r84 = new android.system.StructPollfd;

        specialinvoke r84.<android.system.StructPollfd: void <init>()>();

        r58[i40] = r84;

        $r28 = r58[i40];

        $r27 = r0.<com.android.internal.os.ZygoteServer: java.io.FileDescriptor mUsapPoolEventFD>;

        $r28.<android.system.StructPollfd: java.io.FileDescriptor fd> = $r27;

        $r29 = r58[i40];

        $i23 = <android.system.OsConstants: int POLLIN>;

        $s24 = (short) $i23;

        $s25 = (short) $s24;

        $r29.<android.system.StructPollfd: short events> = $s25;

        i41 = i40 + 1;

        i42 = lengthof r57;

        i43 = 0;

     label06:
        if i43 >= i42 goto label07;

        i0 = r57[i43];

        r85 = new java.io.FileDescriptor;

        specialinvoke r85.<java.io.FileDescriptor: void <init>()>();

        virtualinvoke r85.<java.io.FileDescriptor: void setInt$(int)>(i0);

        r86 = new android.system.StructPollfd;

        specialinvoke r86.<android.system.StructPollfd: void <init>()>();

        r58[i41] = r86;

        $r32 = r58[i41];

        $r32.<android.system.StructPollfd: java.io.FileDescriptor fd> = r85;

        $r33 = r58[i41];

        $i26 = <android.system.OsConstants: int POLLIN>;

        $s27 = (short) $i26;

        $s28 = (short) $s27;

        $r33.<android.system.StructPollfd: short events> = $s28;

        i41 = i41 + 1;

        i43 = i43 + 1;

        goto label06;

     label07:
        i44 = i41;

        goto label09;

     label08:
        i44 = i40;

     label09:
        $l2 = r0.<com.android.internal.os.ZygoteServer: long mUsapPoolRefillTriggerTimestamp>;

        $b3 = $l2 cmp -1L;

        if $b3 != 0 goto label10;

        i45 = -1;

        goto label13;

     label10:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = r0.<com.android.internal.os.ZygoteServer: long mUsapPoolRefillTriggerTimestamp>;

        l46 = $l4 - $l5;

        i47 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolRefillDelayMs>;

        $l6 = (long) i47;

        $b7 = l46 cmp $l6;

        if $b7 < 0 goto label11;

        i45 = -1;

        goto label13;

     label11:
        $b8 = l46 cmp 0L;

        if $b8 > 0 goto label12;

        i45 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolRefillDelayMs>;

        goto label13;

     label12:
        $l9 = (long) i47;

        $l10 = $l9 - l46;

        i45 = (int) $l10;

     label13:
        i48 = staticinvoke <android.system.Os: int poll(android.system.StructPollfd[],int)>(r58, i45);

     label14:
        if i48 != 0 goto label15;

        r0.<com.android.internal.os.ZygoteServer: long mUsapPoolRefillTriggerTimestamp> = -1L;

        $r25 = <com.android.internal.os.ZygoteServer$UsapPoolRefillAction: com.android.internal.os.ZygoteServer$UsapPoolRefillAction DELAYED>;

        r0.<com.android.internal.os.ZygoteServer: com.android.internal.os.ZygoteServer$UsapPoolRefillAction mUsapPoolRefillAction> = $r25;

        goto label45;

     label15:
        i49 = i44;

        z11 = 0;

     label16:
        i49 = i49 + -1;

        if i49 < 0 goto label43;

        $r15 = r58[i49];

        $s18 = $r15.<android.system.StructPollfd: short revents>;

        $i17 = <android.system.OsConstants: int POLLIN>;

        $i19 = $s18 & $i17;

        if $i19 != 0 goto label17;

        goto label42;

     label17:
        if i49 != 0 goto label18;

        r62 = specialinvoke r0.<com.android.internal.os.ZygoteServer: com.android.internal.os.ZygoteConnection acceptCommandPeer(java.lang.String)>(r56);

        virtualinvoke r82.<java.util.ArrayList: boolean add(java.lang.Object)>(r62);

        $r24 = virtualinvoke r62.<com.android.internal.os.ZygoteConnection: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke r81.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        goto label42;

     label18:
        if i49 >= i40 goto label33;

     label19:
        $r21 = virtualinvoke r82.<java.util.ArrayList: java.lang.Object get(int)>(i49);

        r63 = (com.android.internal.os.ZygoteConnection) $r21;

        r64 = virtualinvoke r63.<com.android.internal.os.ZygoteConnection: java.lang.Runnable processOneCommand(com.android.internal.os.ZygoteServer)>(r0);

        z12 = r0.<com.android.internal.os.ZygoteServer: boolean mIsForkChild>;

     label20:
        if z12 == 0 goto label22;

        if r64 == null goto label21;

        r0.<com.android.internal.os.ZygoteServer: boolean mIsForkChild> = 0;

        return r64;

     label21:
        r87 = new java.lang.IllegalStateException;

        specialinvoke r87.<java.lang.IllegalStateException: void <init>(java.lang.String)>("command == null");

        throw r87;

     label22:
        if r64 != null goto label25;

     label23:
        $z5 = virtualinvoke r63.<com.android.internal.os.ZygoteConnection: boolean isClosedByPeer()>();

        if $z5 == 0 goto label24;

        virtualinvoke r63.<com.android.internal.os.ZygoteConnection: void closeSocket()>();

        virtualinvoke r82.<java.util.ArrayList: java.lang.Object remove(int)>(i49);

        virtualinvoke r81.<java.util.ArrayList: java.lang.Object remove(int)>(i49);

     label24:
        r0.<com.android.internal.os.ZygoteServer: boolean mIsForkChild> = 0;

        goto label42;

     label25:
        r88 = new java.lang.IllegalStateException;

        specialinvoke r88.<java.lang.IllegalStateException: void <init>(java.lang.String)>("command != null");

        throw r88;

     label26:
        $r51 := @caughtexception;

        goto label32;

     label27:
        $r52 := @caughtexception;

     label28:
        $z8 = r0.<com.android.internal.os.ZygoteServer: boolean mIsForkChild>;

        if $z8 != 0 goto label30;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ZygoteServer", "Exception executing zygote command: ", $r52);

        $r53 = virtualinvoke r82.<java.util.ArrayList: java.lang.Object remove(int)>(i49);

        $r54 = (com.android.internal.os.ZygoteConnection) $r53;

        virtualinvoke $r54.<com.android.internal.os.ZygoteConnection: void closeSocket()>();

        virtualinvoke r81.<java.util.ArrayList: java.lang.Object remove(int)>(i49);

     label29:
        goto label24;

     label30:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ZygoteServer", "Caught post-fork exception in child process.", $r52);

     label31:
        throw $r52;

     label32:
        r0.<com.android.internal.os.ZygoteServer: boolean mIsForkChild> = 0;

        throw $r51;

     label33:
        r69 = newarray (byte)[8];

        $r16 = r58[i49];

        $r17 = $r16.<android.system.StructPollfd: java.io.FileDescriptor fd>;

        $i20 = lengthof r69;

        i50 = staticinvoke <android.system.Os: int read(java.io.FileDescriptor,byte[],int,int)>($r17, r69, 0, $i20);

     label34:
        if i50 != 8 goto label38;

     label35:
        r90 = new java.io.DataInputStream;

        r89 = new java.io.ByteArrayInputStream;

        specialinvoke r89.<java.io.ByteArrayInputStream: void <init>(byte[])>(r69);

        specialinvoke r90.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r89);

        l51 = virtualinvoke r90.<java.io.DataInputStream: long readLong()>();

     label36:
        if i49 <= i40 goto label37;

        $i22 = (int) l51;

        staticinvoke <com.android.internal.os.Zygote: boolean removeUsapTableEntry(int)>($i22);

     label37:
        z11 = 1;

        goto label16;

     label38:
        r91 = new java.lang.StringBuilder;

        specialinvoke r91.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incomplete read from USAP management FD of size ");

        virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i50);

        $r20 = virtualinvoke r91.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ZygoteServer", $r20);

     label39:
        goto label42;

     label40:
        $r40 := @caughtexception;

        if i49 != i40 goto label41;

        r92 = new java.lang.StringBuilder;

        specialinvoke r92.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read from USAP pool event FD: ");

        $r48 = virtualinvoke $r40.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke r92.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ZygoteServer", $r50);

        goto label42;

     label41:
        r93 = new java.lang.StringBuilder;

        specialinvoke r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read from USAP reporting pipe: ");

        $r43 = virtualinvoke $r40.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke r93.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ZygoteServer", $r45);

     label42:
        goto label16;

     label43:
        if z11 == 0 goto label45;

        i52 = staticinvoke <com.android.internal.os.Zygote: int getUsapPoolCount()>();

        $i12 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMin>;

        if i52 >= $i12 goto label44;

        $r14 = <com.android.internal.os.ZygoteServer$UsapPoolRefillAction: com.android.internal.os.ZygoteServer$UsapPoolRefillAction IMMEDIATE>;

        r0.<com.android.internal.os.ZygoteServer: com.android.internal.os.ZygoteServer$UsapPoolRefillAction mUsapPoolRefillAction> = $r14;

        goto label45;

     label44:
        $i13 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolSizeMax>;

        $i15 = $i13 - i52;

        $i14 = r0.<com.android.internal.os.ZygoteServer: int mUsapPoolRefillThreshold>;

        if $i15 < $i14 goto label45;

        $l16 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.os.ZygoteServer: long mUsapPoolRefillTriggerTimestamp> = $l16;

     label45:
        $r76 = r0.<com.android.internal.os.ZygoteServer: com.android.internal.os.ZygoteServer$UsapPoolRefillAction mUsapPoolRefillAction>;

        $r77 = <com.android.internal.os.ZygoteServer$UsapPoolRefillAction: com.android.internal.os.ZygoteServer$UsapPoolRefillAction NONE>;

        if $r76 == $r77 goto label49;

        i53 = virtualinvoke r81.<java.util.ArrayList: int size()>();

        z13 = 1;

        $r8 = virtualinvoke r81.<java.util.ArrayList: java.util.List subList(int,int)>(1, i53);

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.stream.Stream stream()>();

        $r10 = <com.android.internal.os._$$Lambda$sHtqZgGVjxOf9IJdAdZO6gwD_Do: com.android.internal.os.'-$$Lambda$sHtqZgGVjxOf9IJdAdZO6gwD_Do' INSTANCE>;

        r95 = (java.util.function.ToIntFunction) $r10;

        $r11 = interfaceinvoke $r9.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r95);

        r78 = interfaceinvoke $r11.<java.util.stream.IntStream: int[] toArray()>();

        $r13 = r0.<com.android.internal.os.ZygoteServer: com.android.internal.os.ZygoteServer$UsapPoolRefillAction mUsapPoolRefillAction>;

        $r12 = <com.android.internal.os.ZygoteServer$UsapPoolRefillAction: com.android.internal.os.ZygoteServer$UsapPoolRefillAction IMMEDIATE>;

        if $r13 != $r12 goto label46;

        goto label47;

     label46:
        z13 = 0;

     label47:
        r79 = virtualinvoke r0.<com.android.internal.os.ZygoteServer: java.lang.Runnable fillUsapPool(int[],boolean)>(r78, z13);

        if r79 == null goto label48;

        return r79;

     label48:
        if z13 == 0 goto label49;

        $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.os.ZygoteServer: long mUsapPoolRefillTriggerTimestamp> = $l11;

     label49:
        goto label01;

     label50:
        $r38 := @caughtexception;

        r94 = new java.lang.RuntimeException;

        specialinvoke r94.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("poll failed", $r38);

        throw r94;

        catch android.system.ErrnoException from label13 to label14 with label50;
        catch java.lang.Exception from label19 to label20 with label27;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Exception from label21 to label22 with label27;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.lang.Exception from label23 to label24 with label27;
        catch java.lang.Throwable from label23 to label24 with label26;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Throwable from label25 to label26 with label26;
        catch java.lang.Throwable from label28 to label29 with label26;
        catch java.lang.Throwable from label30 to label31 with label26;
        catch java.lang.Throwable from label31 to label32 with label26;
        catch java.lang.Exception from label33 to label34 with label40;
        catch java.lang.Exception from label35 to label36 with label40;
        catch java.lang.Exception from label38 to label39 with label40;
    }

    void setForkChild()
    {
        com.android.internal.os.ZygoteServer r0;

        r0 := @this: com.android.internal.os.ZygoteServer;

        r0.<com.android.internal.os.ZygoteServer: boolean mIsForkChild> = 1;

        return;
    }

    java.lang.Runnable setUsapPoolStatus(boolean, android.net.LocalSocket)
    {
        com.android.internal.os.ZygoteServer r0;
        boolean z0, $z1, $z2;
        android.net.LocalSocket r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r10;
        int[] $r7;
        java.io.FileDescriptor $r8;
        int $i1;
        java.lang.Runnable $r9;

        r0 := @this: com.android.internal.os.ZygoteServer;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.LocalSocket;

        $z1 = r0.<com.android.internal.os.ZygoteServer: boolean mUsapPoolSupported>;

        if $z1 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ZygoteServer", "Attempting to enable a USAP pool for a Zygote that doesn\'t support it.");

        return null;

     label1:
        $z2 = r0.<com.android.internal.os.ZygoteServer: boolean mUsapPoolEnabled>;

        if $z2 != z0 goto label2;

        return null;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USAP Pool status change: ");

        if z0 == 0 goto label3;

        r10 = "ENABLED";

        goto label4;

     label3:
        r10 = "DISABLED";

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ZygoteServer", $r6);

        r0.<com.android.internal.os.ZygoteServer: boolean mUsapPoolEnabled> = z0;

        if z0 == 0 goto label5;

        $r7 = newarray (int)[1];

        $r8 = virtualinvoke r1.<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>();

        $i1 = virtualinvoke $r8.<java.io.FileDescriptor: int getInt$()>();

        $r7[0] = $i1;

        $r9 = virtualinvoke r0.<com.android.internal.os.ZygoteServer: java.lang.Runnable fillUsapPool(int[],boolean)>($r7, 0);

        return $r9;

     label5:
        staticinvoke <com.android.internal.os.Zygote: void emptyUsapPool()>();

        return null;
    }
}
