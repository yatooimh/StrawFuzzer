public class com.android.internal.policy.DividerSnapAlgorithm extends java.lang.Object
{
    private static final int MIN_DISMISS_VELOCITY_DP_PER_SECOND;
    private static final int MIN_FLING_VELOCITY_DP_PER_SECOND;
    private static final int SNAP_FIXED_RATIO;
    private static final int SNAP_MODE_16_9;
    private static final int SNAP_MODE_MINIMIZED;
    private static final int SNAP_ONLY_1_1;
    private final com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissEndTarget;
    private final com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissStartTarget;
    private final int mDisplayHeight;
    private final int mDisplayWidth;
    private final int mDividerSize;
    private final com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget;
    private final float mFixedRatio;
    private final boolean mFreeSnapMode;
    private final android.graphics.Rect mInsets;
    private boolean mIsHorizontalDivision;
    private final com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget;
    private final com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mMiddleTarget;
    private final float mMinDismissVelocityPxPerSecond;
    private final float mMinFlingVelocityPxPerSecond;
    private final int mMinimalSizeResizableTask;
    private final int mSnapMode;
    private final java.util.ArrayList mTargets;
    private final int mTaskHeightInMinimizedMode;

    public void <init>(android.content.res.Resources, int, int, int, boolean, android.graphics.Rect)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        android.content.res.Resources r1;
        int i0, i1, i2;
        boolean z0;
        android.graphics.Rect r2;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        r1 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        r2 := @parameter5: android.graphics.Rect;

        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void <init>(android.content.res.Resources,int,int,int,boolean,android.graphics.Rect,int,boolean,boolean)>(r1, i0, i1, i2, z0, r2, -1, 0, 1);

        return;
    }

    public void <init>(android.content.res.Resources, int, int, int, boolean, android.graphics.Rect, int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        android.content.res.Resources r1;
        int i0, i1, i2, i3;
        boolean z0;
        android.graphics.Rect r2;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        r1 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        r2 := @parameter5: android.graphics.Rect;

        i3 := @parameter6: int;

        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void <init>(android.content.res.Resources,int,int,int,boolean,android.graphics.Rect,int,boolean,boolean)>(r1, i0, i1, i2, z0, r2, i3, 0, 1);

        return;
    }

    public void <init>(android.content.res.Resources, int, int, int, boolean, android.graphics.Rect, int, boolean, boolean)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        boolean z0, z1, z2, $z3;
        android.graphics.Rect r1, $r3, $r6;
        java.util.ArrayList $r2, $r7, $r12, r19, r20, r21;
        android.util.DisplayMetrics $r4, $r5;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.Object $r8, $r10, $r13, $r15, $r17;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r9, $r11, $r14, $r16, r22;
        android.content.res.Resources r18;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        r18 := @parameter0: android.content.res.Resources;

        i10 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        r1 := @parameter5: android.graphics.Rect;

        i2 := @parameter6: int;

        z1 := @parameter7: boolean;

        z2 := @parameter8: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets> = $r3;

        $r4 = virtualinvoke r18.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r4.<android.util.DisplayMetrics: float density>;

        $f1 = $f0 * 400.0F;

        r0.<com.android.internal.policy.DividerSnapAlgorithm: float mMinFlingVelocityPxPerSecond> = $f1;

        $r5 = virtualinvoke r18.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f2 = $r5.<android.util.DisplayMetrics: float density>;

        $f3 = $f2 * 600.0F;

        r0.<com.android.internal.policy.DividerSnapAlgorithm: float mMinDismissVelocityPxPerSecond> = $f3;

        r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDividerSize> = i1;

        r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayWidth> = i10;

        r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayHeight> = i0;

        r0.<com.android.internal.policy.DividerSnapAlgorithm: boolean mIsHorizontalDivision> = z0;

        $r6 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        if z1 == 0 goto label1;

        i11 = 3;

        goto label2;

     label1:
        i11 = virtualinvoke r18.<android.content.res.Resources: int getInteger(int)>(17694799);

     label2:
        r0.<com.android.internal.policy.DividerSnapAlgorithm: int mSnapMode> = i11;

        $z3 = virtualinvoke r18.<android.content.res.Resources: boolean getBoolean(int)>(17891419);

        r0.<com.android.internal.policy.DividerSnapAlgorithm: boolean mFreeSnapMode> = $z3;

        $f4 = virtualinvoke r18.<android.content.res.Resources: float getFraction(int,int,int)>(18022407, 1, 1);

        r0.<com.android.internal.policy.DividerSnapAlgorithm: float mFixedRatio> = $f4;

        $i3 = virtualinvoke r18.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105155);

        r0.<com.android.internal.policy.DividerSnapAlgorithm: int mMinimalSizeResizableTask> = $i3;

        if z2 == 0 goto label3;

        i12 = virtualinvoke r18.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105489);

        goto label4;

     label3:
        i12 = 0;

     label4:
        r0.<com.android.internal.policy.DividerSnapAlgorithm: int mTaskHeightInMinimizedMode> = i12;

        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void calculateTargets(boolean,int)>(z0, i2);

        $r7 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(1);

        $r9 = (com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) $r8;

        r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget> = $r9;

        r19 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $i4 = virtualinvoke r19.<java.util.ArrayList: int size()>();

        $i5 = $i4 - 2;

        $r10 = virtualinvoke r19.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r11 = (com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) $r10;

        r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget> = $r11;

        $r12 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r14 = (com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) $r13;

        r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissStartTarget> = $r14;

        r20 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $i6 = virtualinvoke r20.<java.util.ArrayList: int size()>();

        $i7 = $i6 - 1;

        $r15 = virtualinvoke r20.<java.util.ArrayList: java.lang.Object get(int)>($i7);

        $r16 = (com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) $r15;

        r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissEndTarget> = $r16;

        r21 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $i8 = virtualinvoke r21.<java.util.ArrayList: int size()>();

        $i9 = $i8 / 2;

        $r17 = virtualinvoke r21.<java.util.ArrayList: java.lang.Object get(int)>($i9);

        r22 = (com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) $r17;

        r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mMiddleTarget> = r22;

        r22.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: boolean isMiddleTarget> = 1;

        return;
    }

    private void addFixedDivisionTargets(boolean, int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        boolean z0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14;
        android.graphics.Rect r1, $r2, $r3;
        float $f0, $f1, $f2;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        if z0 == 0 goto label1;

        i11 = r1.<android.graphics.Rect: int top>;

        goto label2;

     label1:
        i11 = r1.<android.graphics.Rect: int left>;

     label2:
        if z0 == 0 goto label3;

        $i10 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayHeight>;

        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i9 = $r3.<android.graphics.Rect: int bottom>;

        i12 = $i10 - $i9;

        goto label4;

     label3:
        $i3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayWidth>;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i2 = $r2.<android.graphics.Rect: int right>;

        i12 = $i3 - $i2;

     label4:
        $f1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: float mFixedRatio>;

        $i4 = i12 - i11;

        $f0 = (float) $i4;

        $f2 = $f1 * $f0;

        i13 = (int) $f2;

        i1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDividerSize>;

        $i5 = i1 / 2;

        i14 = i13 - $i5;

        $i8 = i11 + i14;

        $i6 = i12 - i14;

        $i7 = $i6 - i1;

        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void addNonDismissingTargets(boolean,int,int,int)>(z0, $i8, $i7, i0);

        return;
    }

    private void addMiddleTarget(boolean)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        boolean z0;
        int i0, $i1, $i2, $i3;
        android.graphics.Rect $r1;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayWidth>;

        $i2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayHeight>;

        $i1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDividerSize>;

        i0 = staticinvoke <com.android.internal.policy.DockedDividerUtils: int calculateMiddlePosition(boolean,android.graphics.Rect,int,int,int)>(z0, $r1, $i3, $i2, $i1);

        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $r2 = new com.android.internal.policy.DividerSnapAlgorithm$SnapTarget;

        specialinvoke $r2.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: void <init>(int,int,int)>(i0, i0, 0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return;
    }

    private void addMinimizedTarget(boolean, int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        boolean z0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        android.graphics.Rect $r1, $r2, $r3;
        java.util.ArrayList $r4;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r5;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $i3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mTaskHeightInMinimizedMode>;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i2 = $r1.<android.graphics.Rect: int top>;

        i1 = $i3 + $i2;

        i10 = i1;

        if z0 != 0 goto label2;

        if i0 != 1 goto label1;

        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i9 = $r3.<android.graphics.Rect: int left>;

        i10 = i1 + $i9;

        goto label2;

     label1:
        i10 = i1;

        if i0 != 3 goto label2;

        $i4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayWidth>;

        $i6 = $i4 - i1;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i5 = $r2.<android.graphics.Rect: int right>;

        $i8 = $i6 - $i5;

        $i7 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDividerSize>;

        i10 = $i8 - $i7;

     label2:
        $r4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $r5 = new com.android.internal.policy.DividerSnapAlgorithm$SnapTarget;

        specialinvoke $r5.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: void <init>(int,int,int)>(i10, i10, 0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        return;
    }

    private void addNonDismissingTargets(boolean, int, int, int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        boolean z0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: int getStartInset()>();

        $i4 = i0 - $i3;

        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void maybeAddTarget(int,int)>(i0, $i4);

        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void addMiddleTarget(boolean)>(z0);

        $i5 = specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: int getEndInset()>();

        $i8 = i2 - $i5;

        $i6 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDividerSize>;

        $i7 = $i6 + i1;

        $i9 = $i8 - $i7;

        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void maybeAddTarget(int,int)>(i1, $i9);

        return;
    }

    private void addRatio16_9Targets(boolean, int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18;
        android.graphics.Rect $r1, $r2, $r3, $r4, r5, r6;
        float $f0, $f1;
        double $d0, $d1;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r5 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        if z0 == 0 goto label1;

        i14 = r5.<android.graphics.Rect: int top>;

        goto label2;

     label1:
        i14 = r5.<android.graphics.Rect: int left>;

     label2:
        if z0 == 0 goto label3;

        $i13 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayHeight>;

        $r4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i12 = $r4.<android.graphics.Rect: int bottom>;

        i15 = $i13 - $i12;

        goto label4;

     label3:
        $i2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayWidth>;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i1 = $r1.<android.graphics.Rect: int right>;

        i15 = $i2 - $i1;

     label4:
        r6 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        if z0 == 0 goto label5;

        i16 = r6.<android.graphics.Rect: int left>;

        goto label6;

     label5:
        i16 = r6.<android.graphics.Rect: int top>;

     label6:
        if z0 == 0 goto label7;

        $i11 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayWidth>;

        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i10 = $r3.<android.graphics.Rect: int right>;

        i17 = $i11 - $i10;

        goto label8;

     label7:
        $i4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayHeight>;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i3 = $r2.<android.graphics.Rect: int bottom>;

        i17 = $i4 - $i3;

     label8:
        $i5 = i17 - i16;

        $f0 = (float) $i5;

        $f1 = $f0 * 0.5625F;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        i18 = (int) $d1;

        $i9 = i14 + i18;

        $i7 = i15 - i18;

        $i6 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDividerSize>;

        $i8 = $i7 - $i6;

        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void addNonDismissingTargets(boolean,int,int,int)>(z0, $i9, $i8, i0);

        return;
    }

    private void calculateTargets(boolean, int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        boolean z0;
        int i0, i1, $i2, $i3, i4, i5, i6, i7, $i8;
        android.graphics.Rect r1, $r5;
        java.util.ArrayList $r2, $r4, $r6;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r3, $r7;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        if z0 == 0 goto label01;

        i4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayHeight>;

        goto label02;

     label01:
        i4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayWidth>;

     label02:
        r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        if z0 == 0 goto label03;

        i5 = r1.<android.graphics.Rect: int bottom>;

        goto label04;

     label03:
        i5 = r1.<android.graphics.Rect: int right>;

     label04:
        $i2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDividerSize>;

        i1 = neg $i2;

        i6 = i1;

        if i0 != 3 goto label05;

        $r5 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i3 = $r5.<android.graphics.Rect: int left>;

        i6 = i1 + $i3;

     label05:
        $r4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $r3 = new com.android.internal.policy.DividerSnapAlgorithm$SnapTarget;

        specialinvoke $r3.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: void <init>(int,int,int,float)>(i6, i6, 1, 0.35F);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i7 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mSnapMode>;

        if i7 == 0 goto label09;

        if i7 == 1 goto label08;

        if i7 == 2 goto label07;

        if i7 == 3 goto label06;

        goto label10;

     label06:
        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void addMinimizedTarget(boolean,int)>(z0, i0);

        goto label10;

     label07:
        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void addMiddleTarget(boolean)>(z0);

        goto label10;

     label08:
        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void addFixedDivisionTargets(boolean,int)>(z0, i4);

        goto label10;

     label09:
        specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: void addRatio16_9Targets(boolean,int)>(z0, i4);

     label10:
        $r6 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $r7 = new com.android.internal.policy.DividerSnapAlgorithm$SnapTarget;

        $i8 = i4 - i5;

        specialinvoke $r7.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: void <init>(int,int,int,float)>($i8, i4, 2, 0.35F);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        return;
    }

    public static com.android.internal.policy.DividerSnapAlgorithm create(android.content.Context, android.graphics.Rect)
    {
        android.content.Context r0, $r10;
        android.graphics.Rect r1;
        int i0, i1, i2, i3, i4, $i5, $i6;
        android.content.res.Resources r3, $r8, $r9, $r11;
        android.view.DisplayInfo $r4;
        java.lang.Object $r5;
        android.hardware.display.DisplayManager $r6;
        android.view.Display $r7;
        android.content.res.Configuration $r12;
        com.android.internal.policy.DividerSnapAlgorithm $r13;
        boolean z1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.graphics.Rect;

        $r4 = new android.view.DisplayInfo;

        specialinvoke $r4.<android.view.DisplayInfo: void <init>()>();

        $r5 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/display/DisplayManager;");

        $r6 = (android.hardware.display.DisplayManager) $r5;

        $r7 = virtualinvoke $r6.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>(0);

        virtualinvoke $r7.<android.view.Display: boolean getDisplayInfo(android.view.DisplayInfo)>($r4);

        $r8 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r8.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105174);

        $r9 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        i1 = virtualinvoke $r9.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105173);

        r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        i2 = $r4.<android.view.DisplayInfo: int logicalWidth>;

        i3 = $r4.<android.view.DisplayInfo: int logicalHeight>;

        $r10 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i4 = $r12.<android.content.res.Configuration: int orientation>;

        z1 = 1;

        if i4 != 1 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r13 = new com.android.internal.policy.DividerSnapAlgorithm;

        $i5 = i1 * 2;

        $i6 = i0 - $i5;

        specialinvoke $r13.<com.android.internal.policy.DividerSnapAlgorithm: void <init>(android.content.res.Resources,int,int,int,boolean,android.graphics.Rect)>(r3, i2, i3, $i6, z1, r1);

        return $r13;
    }

    private int getEndInset()
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        boolean $z0;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        $z0 = r0.<com.android.internal.policy.DividerSnapAlgorithm: boolean mIsHorizontalDivision>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        return $i1;

     label1:
        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i0 = $r1.<android.graphics.Rect: int right>;

        return $i0;
    }

    private int getStartInset()
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        boolean $z0;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        $z0 = r0.<com.android.internal.policy.DividerSnapAlgorithm: boolean mIsHorizontalDivision>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        return $i1;

     label1:
        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        return $i0;
    }

    private void maybeAddTarget(int, int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0, i1, $i2;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mMinimalSizeResizableTask>;

        if i1 < $i2 goto label1;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $r1 = new com.android.internal.policy.DividerSnapAlgorithm$SnapTarget;

        specialinvoke $r1.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: void <init>(int,int,int)>(i0, i0, 0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }

    private boolean shouldApplyFreeSnapMode(int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0, $i1, $i2;
        boolean $z1, $z2, z3, z4;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1, $r2;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        i0 := @parameter0: int;

        z3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: boolean mFreeSnapMode>;

        if z3 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: boolean isFirstSplitTargetAvailable()>();

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: boolean isLastSplitTargetAvailable()>();

        if $z2 != 0 goto label2;

        goto label4;

     label2:
        z4 = 0;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget>;

        $i1 = $r1.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        if $i1 >= i0 goto label3;

        z4 = 0;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget>;

        $i2 = $r2.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        if i0 >= $i2 goto label3;

        z4 = 1;

     label3:
        return z4;

     label4:
        return 0;
    }

    private com.android.internal.policy.DividerSnapAlgorithm$SnapTarget snap(int, boolean)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0, i1, $i2, $i3, $i4, i6, i7;
        boolean z0, $z1;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget r1, $r5, $r8;
        java.util.ArrayList $r2, $r3, $r6;
        java.lang.Object $r4, $r7;
        byte $b5;
        float $f0, f1, f2, f3, f4;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: boolean shouldApplyFreeSnapMode(int)>(i0);

        if $z1 == 0 goto label1;

        $r8 = new com.android.internal.policy.DividerSnapAlgorithm$SnapTarget;

        specialinvoke $r8.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: void <init>(int,int,int)>(i0, i0, 0);

        return $r8;

     label1:
        i6 = -1;

        f1 = 3.4028235E38F;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i7 = 0;

     label2:
        if i7 >= i1 goto label5;

        $r6 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r1 = (com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) $r7;

        $i2 = r1.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        $i3 = i0 - $i2;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        f2 = (float) $i4;

        f3 = f2;

        if z0 == 0 goto label3;

        $f0 = staticinvoke <com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: float access$000(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget)>(r1);

        f3 = f2 / $f0;

     label3:
        f4 = f1;

        $b5 = f3 cmpg f1;

        if $b5 >= 0 goto label4;

        i6 = i7;

        f4 = f3;

     label4:
        i7 = i7 + 1;

        f1 = f4;

        goto label2;

     label5:
        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r5 = (com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) $r4;

        return $r5;
    }

    public float calculateDismissingFraction(int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1, $r2, $r3, $r4, $r5, $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget>;

        $i1 = $r1.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        if i0 >= $i1 goto label1;

        $i10 = specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: int getStartInset()>();

        $i11 = i0 - $i10;

        $f3 = (float) $i11;

        $r6 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget>;

        $i12 = $r6.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        $i13 = specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: int getStartInset()>();

        $i14 = $i12 - $i13;

        $f4 = (float) $i14;

        $f5 = $f3 / $f4;

        $f6 = 1.0F - $f5;

        return $f6;

     label1:
        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget>;

        $i2 = $r2.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        if i0 <= $i2 goto label2;

        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget>;

        $i3 = $r3.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        $i4 = i0 - $i3;

        $f1 = (float) $i4;

        $r4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissEndTarget>;

        $i6 = $r4.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        $r5 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget>;

        $i5 = $r5.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        $i8 = $i6 - $i5;

        $i7 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDividerSize>;

        $i9 = $i8 - $i7;

        $f0 = (float) $i9;

        $f2 = $f1 / $f0;

        return $f2;

     label2:
        return 0.0F;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget calculateNonDismissingSnapTarget(int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget snap(int,boolean)>(i0, 0);

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissStartTarget>;

        if r1 != $r2 goto label1;

        $r5 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget>;

        return $r5;

     label1:
        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissEndTarget>;

        if r1 != $r3 goto label2;

        $r4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget>;

        return $r4;

     label2:
        return r1;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget calculateSnapTarget(int, float)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0;
        float f0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = virtualinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget calculateSnapTarget(int,float,boolean)>(i0, f0, 1);

        return $r1;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget calculateSnapTarget(int, float, boolean)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0, $i1, $i2;
        float f0, $f1, $f2, $f3, $f4, $f5;
        boolean z0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b3, $b4, $b5, $b6;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget>;

        $i1 = $r1.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        if i0 >= $i1 goto label1;

        $f4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: float mMinDismissVelocityPxPerSecond>;

        $f5 = neg $f4;

        $b6 = f0 cmpg $f5;

        if $b6 >= 0 goto label1;

        $r7 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissStartTarget>;

        return $r7;

     label1:
        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget>;

        $i2 = $r2.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        if i0 <= $i2 goto label2;

        $f3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: float mMinDismissVelocityPxPerSecond>;

        $b5 = f0 cmpl $f3;

        if $b5 <= 0 goto label2;

        $r6 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissEndTarget>;

        return $r6;

     label2:
        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $f2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: float mMinFlingVelocityPxPerSecond>;

        $b3 = $f1 cmpg $f2;

        if $b3 >= 0 goto label3;

        $r5 = specialinvoke r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget snap(int,boolean)>(i0, z0);

        return $r5;

     label3:
        $b4 = f0 cmpg 0.0F;

        if $b4 >= 0 goto label4;

        $r4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget>;

        return $r4;

     label4:
        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget>;

        return $r3;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget cycleNonDismissTarget(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget, int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.util.ArrayList $r1, $r2, r9;
        java.lang.Object $r3;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r4, $r5, $r6, $r7, r8, r10;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        r8 := @parameter0: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget;

        i0 := @parameter1: int;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        i1 = virtualinvoke $r1.<java.util.ArrayList: int indexOf(java.lang.Object)>(r8);

        if i1 == -1 goto label3;

        r9 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $i2 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        $i3 = $i2 + i1;

        $i4 = $i3 + i0;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $i5 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i6 = $i4 % $i5;

        $r3 = virtualinvoke r9.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        r10 = (com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) $r3;

        $r4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissStartTarget>;

        if r10 != $r4 goto label1;

        $r7 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget>;

        return $r7;

     label1:
        $r5 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissEndTarget>;

        if r10 != $r5 goto label2;

        $r6 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget>;

        return $r6;

     label2:
        return r10;

     label3:
        return r8;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget getClosestDismissTarget(int)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget>;

        $i1 = $r1.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        if i0 >= $i1 goto label1;

        $r8 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissStartTarget>;

        return $r8;

     label1:
        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget>;

        $i2 = $r2.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        if i0 <= $i2 goto label2;

        $r7 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissEndTarget>;

        return $r7;

     label2:
        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissStartTarget>;

        $i3 = $r3.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        $i6 = i0 - $i3;

        $r4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissEndTarget>;

        $i4 = $r4.<com.android.internal.policy.DividerSnapAlgorithm$SnapTarget: int position>;

        $i5 = $i4 - i0;

        if $i6 >= $i5 goto label3;

        $r6 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissStartTarget>;

        return $r6;

     label3:
        $r5 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissEndTarget>;

        return $r5;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget getDismissEndTarget()
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissEndTarget>;

        return $r1;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget getDismissStartTarget()
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mDismissStartTarget>;

        return $r1;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget getFirstSplitTarget()
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget>;

        return $r1;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget getLastSplitTarget()
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget>;

        return $r1;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget getMiddleTarget()
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mMiddleTarget>;

        return $r1;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget getNextTarget(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget r1, $r6;
        int i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        r1 := @parameter0: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 == -1 goto label1;

        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i2 = $i1 - 1;

        if i0 >= $i2 goto label1;

        $r4 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $i3 = i0 + 1;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r6 = (com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) $r5;

        return $r6;

     label1:
        return r1;
    }

    public com.android.internal.policy.DividerSnapAlgorithm$SnapTarget getPreviousTarget(com.android.internal.policy.DividerSnapAlgorithm$SnapTarget)
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget r1, $r5;
        int i0, $i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        r1 := @parameter0: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 == -1 goto label1;

        if i0 <= 0 goto label1;

        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        $i1 = i0 - 1;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (com.android.internal.policy.DividerSnapAlgorithm$SnapTarget) $r4;

        return $r5;

     label1:
        return r1;
    }

    public boolean isFirstSplitTargetAvailable()
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1, $r2;
        boolean z0;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mFirstSplitTarget>;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mMiddleTarget>;

        if $r2 == $r1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isLastSplitTargetAvailable()
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        com.android.internal.policy.DividerSnapAlgorithm$SnapTarget $r1, $r2;
        boolean z0;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mLastSplitTarget>;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: com.android.internal.policy.DividerSnapAlgorithm$SnapTarget mMiddleTarget>;

        if $r2 == $r1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isSplitScreenFeasible()
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        android.graphics.Rect $r1, $r2, $r3;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        i0 = $r1.<android.graphics.Rect: int top>;

        $z0 = r0.<com.android.internal.policy.DividerSnapAlgorithm: boolean mIsHorizontalDivision>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        i7 = $r3.<android.graphics.Rect: int bottom>;

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: android.graphics.Rect mInsets>;

        i7 = $r2.<android.graphics.Rect: int right>;

     label2:
        $z1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: boolean mIsHorizontalDivision>;

        if $z1 == 0 goto label3;

        i8 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayHeight>;

        goto label4;

     label3:
        i8 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDisplayWidth>;

     label4:
        $i1 = i8 - i7;

        $i3 = $i1 - i0;

        $i2 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mDividerSize>;

        $i4 = $i3 - $i2;

        $i6 = $i4 / 2;

        $i5 = r0.<com.android.internal.policy.DividerSnapAlgorithm: int mMinimalSizeResizableTask>;

        if $i6 < $i5 goto label5;

        z2 = 1;

        goto label6;

     label5:
        z2 = 0;

     label6:
        return z2;
    }

    public boolean showMiddleSplitTargetForAccessibility()
    {
        com.android.internal.policy.DividerSnapAlgorithm r0;
        int i0, $i1;
        java.util.ArrayList $r1;
        boolean z0;

        r0 := @this: com.android.internal.policy.DividerSnapAlgorithm;

        $r1 = r0.<com.android.internal.policy.DividerSnapAlgorithm: java.util.ArrayList mTargets>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        z0 = 1;

        $i1 = i0 - 2;

        if $i1 <= 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static void <clinit>()
    {
        <com.android.internal.policy.DividerSnapAlgorithm: int SNAP_ONLY_1_1> = 2;

        <com.android.internal.policy.DividerSnapAlgorithm: int SNAP_MODE_MINIMIZED> = 3;

        <com.android.internal.policy.DividerSnapAlgorithm: int SNAP_MODE_16_9> = 0;

        <com.android.internal.policy.DividerSnapAlgorithm: int SNAP_FIXED_RATIO> = 1;

        <com.android.internal.policy.DividerSnapAlgorithm: int MIN_FLING_VELOCITY_DP_PER_SECOND> = 400;

        <com.android.internal.policy.DividerSnapAlgorithm: int MIN_DISMISS_VELOCITY_DP_PER_SECOND> = 600;

        return;
    }
}
