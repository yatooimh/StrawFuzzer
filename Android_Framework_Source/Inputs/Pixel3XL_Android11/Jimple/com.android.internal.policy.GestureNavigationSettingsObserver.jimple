public class com.android.internal.policy.GestureNavigationSettingsObserver extends android.database.ContentObserver
{
    private android.content.Context mContext;
    private android.os.Handler mMainHandler;
    private java.lang.Runnable mOnChangeRunnable;
    private final android.provider.DeviceConfig$OnPropertiesChangedListener mOnPropertiesChangedListener;

    public void <init>(android.os.Handler, android.content.Context, java.lang.Runnable)
    {
        com.android.internal.policy.GestureNavigationSettingsObserver r0;
        android.os.Handler r1;
        android.content.Context r2;
        java.lang.Runnable r3;
        com.android.internal.policy.GestureNavigationSettingsObserver$1 $r4;

        r0 := @this: com.android.internal.policy.GestureNavigationSettingsObserver;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.Runnable;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r1);

        $r4 = new com.android.internal.policy.GestureNavigationSettingsObserver$1;

        specialinvoke $r4.<com.android.internal.policy.GestureNavigationSettingsObserver$1: void <init>(com.android.internal.policy.GestureNavigationSettingsObserver)>(r0);

        r0.<com.android.internal.policy.GestureNavigationSettingsObserver: android.provider.DeviceConfig$OnPropertiesChangedListener mOnPropertiesChangedListener> = $r4;

        r0.<com.android.internal.policy.GestureNavigationSettingsObserver: android.os.Handler mMainHandler> = r1;

        r0.<com.android.internal.policy.GestureNavigationSettingsObserver: android.content.Context mContext> = r2;

        r0.<com.android.internal.policy.GestureNavigationSettingsObserver: java.lang.Runnable mOnChangeRunnable> = r3;

        return;
    }

    static java.lang.Runnable access$000(com.android.internal.policy.GestureNavigationSettingsObserver)
    {
        com.android.internal.policy.GestureNavigationSettingsObserver r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.internal.policy.GestureNavigationSettingsObserver;

        $r1 = r0.<com.android.internal.policy.GestureNavigationSettingsObserver: java.lang.Runnable mOnChangeRunnable>;

        return $r1;
    }

    private int getSensitivity(android.content.res.Resources, java.lang.String)
    {
        com.android.internal.policy.GestureNavigationSettingsObserver r0;
        android.content.res.Resources r1;
        java.lang.String r2;
        android.util.DisplayMetrics r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        int $i0;

        r0 := @this: com.android.internal.policy.GestureNavigationSettingsObserver;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = virtualinvoke r1.<android.content.res.Resources: float getDimension(int)>(17105051);

        $f1 = r3.<android.util.DisplayMetrics: float density>;

        $f2 = $f0 / $f1;

        $f3 = staticinvoke <android.provider.DeviceConfig: float getFloat(java.lang.String,java.lang.String,float)>("systemui", "back_gesture_edge_width", $f2);

        $f4 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f3, r3);

        $r4 = r0.<com.android.internal.policy.GestureNavigationSettingsObserver: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $f5 = staticinvoke <android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>($r5, r2, 1.0F, -2);

        $f6 = $f4 * $f5;

        $i0 = (int) $f6;

        return $i0;
    }

    public boolean areNavigationButtonForcedVisible()
    {
        com.android.internal.policy.GestureNavigationSettingsObserver r0;
        android.content.ContentResolver r1;
        android.content.Context $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.policy.GestureNavigationSettingsObserver;

        $r2 = r0.<com.android.internal.policy.GestureNavigationSettingsObserver: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 0;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r1, "user_setup_complete", 0, -2);

        if $i0 != 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public int getLeftSensitivity(android.content.res.Resources)
    {
        com.android.internal.policy.GestureNavigationSettingsObserver r0;
        android.content.res.Resources r1;
        int $i0;

        r0 := @this: com.android.internal.policy.GestureNavigationSettingsObserver;

        r1 := @parameter0: android.content.res.Resources;

        $i0 = specialinvoke r0.<com.android.internal.policy.GestureNavigationSettingsObserver: int getSensitivity(android.content.res.Resources,java.lang.String)>(r1, "back_gesture_inset_scale_left");

        return $i0;
    }

    public int getRightSensitivity(android.content.res.Resources)
    {
        com.android.internal.policy.GestureNavigationSettingsObserver r0;
        android.content.res.Resources r1;
        int $i0;

        r0 := @this: com.android.internal.policy.GestureNavigationSettingsObserver;

        r1 := @parameter0: android.content.res.Resources;

        $i0 = specialinvoke r0.<com.android.internal.policy.GestureNavigationSettingsObserver: int getSensitivity(android.content.res.Resources,java.lang.String)>(r1, "back_gesture_inset_scale_right");

        return $i0;
    }

    public void lambda$register$0$GestureNavigationSettingsObserver(java.lang.Runnable)
    {
        com.android.internal.policy.GestureNavigationSettingsObserver r0;
        java.lang.Runnable r1;
        android.os.Handler $r2;

        r0 := @this: com.android.internal.policy.GestureNavigationSettingsObserver;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.android.internal.policy.GestureNavigationSettingsObserver: android.os.Handler mMainHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        return;
    }

    public void onChange(boolean)
    {
        com.android.internal.policy.GestureNavigationSettingsObserver r0;
        boolean z0;
        java.lang.Runnable r1;

        r0 := @this: com.android.internal.policy.GestureNavigationSettingsObserver;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.database.ContentObserver: void onChange(boolean)>(z0);

        r1 = r0.<com.android.internal.policy.GestureNavigationSettingsObserver: java.lang.Runnable mOnChangeRunnable>;

        if r1 == null goto label1;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label1:
        return;
    }

    public void register()
    {
        com.android.internal.policy.GestureNavigationSettingsObserver r0;
        android.content.ContentResolver r1;
        android.content.Context $r2;
        android.net.Uri $r3, $r4, $r5;
        com.android.internal.policy._$$Lambda$GestureNavigationSettingsObserver$F3d_7CsBNLG_3ODg3tTHhvWfOA4 $r6;
        android.provider.DeviceConfig$OnPropertiesChangedListener $r7;

        r0 := @this: com.android.internal.policy.GestureNavigationSettingsObserver;

        $r2 = r0.<com.android.internal.policy.GestureNavigationSettingsObserver: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("back_gesture_inset_scale_left");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r3, 0, r0, -1);

        $r4 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("back_gesture_inset_scale_right");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r4, 0, r0, -1);

        $r5 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("user_setup_complete");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r5, 0, r0, -1);

        $r6 = new com.android.internal.policy._$$Lambda$GestureNavigationSettingsObserver$F3d_7CsBNLG_3ODg3tTHhvWfOA4;

        specialinvoke $r6.<com.android.internal.policy._$$Lambda$GestureNavigationSettingsObserver$F3d_7CsBNLG_3ODg3tTHhvWfOA4: void <init>(com.android.internal.policy.GestureNavigationSettingsObserver)>(r0);

        $r7 = r0.<com.android.internal.policy.GestureNavigationSettingsObserver: android.provider.DeviceConfig$OnPropertiesChangedListener mOnPropertiesChangedListener>;

        staticinvoke <android.provider.DeviceConfig: void addOnPropertiesChangedListener(java.lang.String,java.util.concurrent.Executor,android.provider.DeviceConfig$OnPropertiesChangedListener)>("systemui", $r6, $r7);

        return;
    }

    public void unregister()
    {
        com.android.internal.policy.GestureNavigationSettingsObserver r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        android.provider.DeviceConfig$OnPropertiesChangedListener $r3;

        r0 := @this: com.android.internal.policy.GestureNavigationSettingsObserver;

        $r1 = r0.<com.android.internal.policy.GestureNavigationSettingsObserver: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r2.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>(r0);

        $r3 = r0.<com.android.internal.policy.GestureNavigationSettingsObserver: android.provider.DeviceConfig$OnPropertiesChangedListener mOnPropertiesChangedListener>;

        staticinvoke <android.provider.DeviceConfig: void removeOnPropertiesChangedListener(android.provider.DeviceConfig$OnPropertiesChangedListener)>($r3);

        return;
    }
}
