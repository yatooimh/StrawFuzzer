public final class com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback extends java.lang.Object implements com.android.internal.view.menu.MenuBuilder$Callback, com.android.internal.view.menu.MenuPresenter$Callback
{
    private static final int FEATURE_ID;
    private boolean mShowDialogForSubmenu;
    private com.android.internal.view.menu.MenuDialogHelper mSubMenuHelper;
    private final com.android.internal.policy.PhoneWindow mWindow;

    public void <init>(com.android.internal.policy.PhoneWindow)
    {
        com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback r0;
        com.android.internal.policy.PhoneWindow r1;

        r0 := @this: com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback;

        r1 := @parameter0: com.android.internal.policy.PhoneWindow;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.policy.PhoneWindow mWindow> = r1;

        return;
    }

    private void onCloseSubMenu(com.android.internal.view.menu.MenuBuilder)
    {
        com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback r0;
        com.android.internal.view.menu.MenuBuilder r1, $r5;
        android.view.Window$Callback r2;
        com.android.internal.policy.PhoneWindow $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback;

        r1 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        $r3 = r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.policy.PhoneWindow mWindow>;

        r2 = virtualinvoke $r3.<com.android.internal.policy.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label1;

        $r4 = r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.policy.PhoneWindow mWindow>;

        $z0 = virtualinvoke $r4.<com.android.internal.policy.PhoneWindow: boolean isDestroyed()>();

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r1.<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()>();

        interfaceinvoke r2.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>(6, $r5);

     label1:
        return;
    }

    public void onCloseMenu(com.android.internal.view.menu.MenuBuilder, boolean)
    {
        com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback r0;
        boolean z0, $z1;
        android.view.Window$Callback r1;
        com.android.internal.view.menu.MenuBuilder $r2, r6;
        com.android.internal.policy.PhoneWindow $r3, $r4, $r5, $r7;
        com.android.internal.view.menu.ContextMenuBuilder $r8;
        com.android.internal.view.menu.MenuDialogHelper r9;

        r0 := @this: com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback;

        r6 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r6.<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()>();

        if $r2 == r6 goto label1;

        specialinvoke r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: void onCloseSubMenu(com.android.internal.view.menu.MenuBuilder)>(r6);

     label1:
        if z0 == 0 goto label4;

        $r3 = r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.policy.PhoneWindow mWindow>;

        r1 = virtualinvoke $r3.<com.android.internal.policy.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r1 == null goto label2;

        $r5 = r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.policy.PhoneWindow mWindow>;

        $z1 = virtualinvoke $r5.<com.android.internal.policy.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label2;

        interfaceinvoke r1.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>(6, r6);

     label2:
        $r7 = r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.policy.PhoneWindow mWindow>;

        $r8 = $r7.<com.android.internal.policy.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder mContextMenu>;

        if r6 != $r8 goto label3;

        $r4 = r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.policy.PhoneWindow mWindow>;

        staticinvoke <com.android.internal.policy.PhoneWindow: void access$700(com.android.internal.policy.PhoneWindow)>($r4);

     label3:
        r9 = r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.view.menu.MenuDialogHelper mSubMenuHelper>;

        if r9 == null goto label4;

        virtualinvoke r9.<com.android.internal.view.menu.MenuDialogHelper: void dismiss()>();

        r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.view.menu.MenuDialogHelper mSubMenuHelper> = null;

     label4:
        return;
    }

    public boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder, android.view.MenuItem)
    {
        com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback r0;
        android.view.MenuItem r1;
        com.android.internal.policy.PhoneWindow $r2, $r3;
        boolean $z0, $z1, z2;
        com.android.internal.view.menu.MenuBuilder r4;
        android.view.Window$Callback r5;

        r0 := @this: com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback;

        r4 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        r1 := @parameter1: android.view.MenuItem;

        $r2 = r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.policy.PhoneWindow mWindow>;

        r5 = virtualinvoke $r2.<com.android.internal.policy.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r5 == null goto label1;

        $r3 = r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.policy.PhoneWindow mWindow>;

        $z0 = virtualinvoke $r3.<com.android.internal.policy.PhoneWindow: boolean isDestroyed()>();

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r5.<android.view.Window$Callback: boolean onMenuItemSelected(int,android.view.MenuItem)>(6, r1);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)
    {
        com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback r0;
        com.android.internal.view.menu.MenuBuilder r1;

        r0 := @this: com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback;

        r1 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        return;
    }

    public boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)
    {
        com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback r0;
        boolean $z0;
        com.android.internal.view.menu.MenuDialogHelper $r1;
        com.android.internal.view.menu.MenuBuilder r2;

        r0 := @this: com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback;

        r2 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        if r2 != null goto label1;

        return 0;

     label1:
        virtualinvoke r2.<com.android.internal.view.menu.MenuBuilder: void setCallback(com.android.internal.view.menu.MenuBuilder$Callback)>(r0);

        $z0 = r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: boolean mShowDialogForSubmenu>;

        if $z0 == 0 goto label2;

        $r1 = new com.android.internal.view.menu.MenuDialogHelper;

        specialinvoke $r1.<com.android.internal.view.menu.MenuDialogHelper: void <init>(com.android.internal.view.menu.MenuBuilder)>(r2);

        r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: com.android.internal.view.menu.MenuDialogHelper mSubMenuHelper> = $r1;

        virtualinvoke $r1.<com.android.internal.view.menu.MenuDialogHelper: void show(android.os.IBinder)>(null);

        return 1;

     label2:
        return 0;
    }

    public void setShowDialogForSubmenu(boolean)
    {
        com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback r0;
        boolean z0;

        r0 := @this: com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: boolean mShowDialogForSubmenu> = z0;

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback: int FEATURE_ID> = 6;

        return;
    }
}
