class com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy extends java.lang.Object implements com.android.internal.telecom.ICallScreeningAdapter
{
    public static com.android.internal.telecom.ICallScreeningAdapter sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void allowCall(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.telecom.ICallScreeningAdapter $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telecom.ICallScreeningAdapter");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <com.android.internal.telecom.ICallScreeningAdapter$Stub: com.android.internal.telecom.ICallScreeningAdapter getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <com.android.internal.telecom.ICallScreeningAdapter$Stub: com.android.internal.telecom.ICallScreeningAdapter getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.telecom.ICallScreeningAdapter: void allowCall(java.lang.String)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy;

        $r1 = r0.<com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void disallowCall(java.lang.String, boolean, boolean, boolean, android.content.ComponentName) throws android.os.RemoteException
    {
        com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy r0;
        boolean z0, z1, z2, $z3;
        android.content.ComponentName r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        com.android.internal.telecom.ICallScreeningAdapter $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b0, b1, b2;

        r0 := @this: com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        r1 := @parameter4: android.content.ComponentName;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telecom.ICallScreeningAdapter");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label02:
        if z0 == 0 goto label03;

        b0 = 1;

        goto label04;

     label03:
        b0 = 0;

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

     label05:
        if z1 == 0 goto label06;

        b1 = 1;

        goto label07;

     label06:
        b1 = 0;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

     label08:
        if z2 == 0 goto label09;

        b2 = 1;

        goto label10;

     label09:
        b2 = 0;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b2);

     label11:
        if r1 == null goto label14;

     label12:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label13:
        goto label15;

     label14:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label15:
        $r3 = r0.<com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy: android.os.IBinder mRemote>;

        $z3 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, null, 1);

        if $z3 != 0 goto label17;

        $r4 = staticinvoke <com.android.internal.telecom.ICallScreeningAdapter$Stub: com.android.internal.telecom.ICallScreeningAdapter getDefaultImpl()>();

        if $r4 == null goto label17;

        $r5 = staticinvoke <com.android.internal.telecom.ICallScreeningAdapter$Stub: com.android.internal.telecom.ICallScreeningAdapter getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telecom.ICallScreeningAdapter: void disallowCall(java.lang.String,boolean,boolean,boolean,android.content.ComponentName)>(r7, z0, z1, z2, r1);

     label16:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label17:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label18:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy r0;

        r0 := @this: com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy;

        return "com.android.internal.telecom.ICallScreeningAdapter";
    }

    public void screenCallFurther(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.telecom.ICallScreeningAdapter $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telecom.ICallScreeningAdapter");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <com.android.internal.telecom.ICallScreeningAdapter$Stub: com.android.internal.telecom.ICallScreeningAdapter getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <com.android.internal.telecom.ICallScreeningAdapter$Stub: com.android.internal.telecom.ICallScreeningAdapter getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.telecom.ICallScreeningAdapter: void screenCallFurther(java.lang.String)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void silenceCall(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.telecom.ICallScreeningAdapter $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telecom.ICallScreeningAdapter");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <com.android.internal.telecom.ICallScreeningAdapter$Stub: com.android.internal.telecom.ICallScreeningAdapter getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <com.android.internal.telecom.ICallScreeningAdapter$Stub: com.android.internal.telecom.ICallScreeningAdapter getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.telecom.ICallScreeningAdapter: void silenceCall(java.lang.String)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
