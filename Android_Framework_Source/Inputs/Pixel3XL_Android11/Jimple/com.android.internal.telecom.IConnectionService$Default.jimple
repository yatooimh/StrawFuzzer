public class com.android.internal.telecom.IConnectionService$Default extends java.lang.Object implements com.android.internal.telecom.IConnectionService
{

    public void <init>()
    {
        com.android.internal.telecom.IConnectionService$Default r0;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void abort(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void addConferenceParticipants(java.lang.String, java.util.List, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        java.util.List r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void addConnectionServiceAdapter(com.android.internal.telecom.IConnectionServiceAdapter, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        com.android.internal.telecom.IConnectionServiceAdapter r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: com.android.internal.telecom.IConnectionServiceAdapter;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void answer(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void answerVideo(java.lang.String, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.telecom.IConnectionService$Default r0;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        return null;
    }

    public void conference(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1, r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void connectionServiceFocusGained(android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        android.telecom.Logging.Session$Info r1;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: android.telecom.Logging.Session$Info;

        return;
    }

    public void connectionServiceFocusLost(android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        android.telecom.Logging.Session$Info r1;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: android.telecom.Logging.Session$Info;

        return;
    }

    public void consultativeTransfer(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1, r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void createConference(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        android.telecom.PhoneAccountHandle r1;
        java.lang.String r2;
        android.telecom.ConnectionRequest r3;
        boolean z0, z1;
        android.telecom.Logging.Session$Info r4;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.ConnectionRequest;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r4 := @parameter5: android.telecom.Logging.Session$Info;

        return;
    }

    public void createConferenceComplete(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void createConferenceFailed(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        android.telecom.PhoneAccountHandle r1;
        java.lang.String r2;
        android.telecom.ConnectionRequest r3;
        boolean z0;
        android.telecom.Logging.Session$Info r4;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.ConnectionRequest;

        z0 := @parameter3: boolean;

        r4 := @parameter4: android.telecom.Logging.Session$Info;

        return;
    }

    public void createConnection(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        android.telecom.PhoneAccountHandle r1;
        java.lang.String r2;
        android.telecom.ConnectionRequest r3;
        boolean z0, z1;
        android.telecom.Logging.Session$Info r4;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.ConnectionRequest;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r4 := @parameter5: android.telecom.Logging.Session$Info;

        return;
    }

    public void createConnectionComplete(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void createConnectionFailed(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        android.telecom.PhoneAccountHandle r1;
        java.lang.String r2;
        android.telecom.ConnectionRequest r3;
        boolean z0;
        android.telecom.Logging.Session$Info r4;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.ConnectionRequest;

        z0 := @parameter3: boolean;

        r4 := @parameter4: android.telecom.Logging.Session$Info;

        return;
    }

    public void deflect(java.lang.String, android.net.Uri, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.net.Uri r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void disconnect(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void handoverComplete(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void handoverFailed(java.lang.String, android.telecom.ConnectionRequest, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.ConnectionRequest r2;
        int i0;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.ConnectionRequest;

        i0 := @parameter2: int;

        r3 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void hold(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void mergeConference(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void onCallAudioStateChanged(java.lang.String, android.telecom.CallAudioState, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.CallAudioState r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.CallAudioState;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void onExtrasChanged(java.lang.String, android.os.Bundle, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void onPostDialContinue(java.lang.String, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        boolean z0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void playDtmfTone(java.lang.String, char, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        char c0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void pullExternalCall(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void reject(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void rejectWithMessage(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1, r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void rejectWithReason(java.lang.String, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void removeConnectionServiceAdapter(com.android.internal.telecom.IConnectionServiceAdapter, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        com.android.internal.telecom.IConnectionServiceAdapter r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: com.android.internal.telecom.IConnectionServiceAdapter;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void respondToRttUpgradeRequest(java.lang.String, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.os.ParcelFileDescriptor r2, r3;
        android.telecom.Logging.Session$Info r4;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        r4 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void sendCallEvent(java.lang.String, java.lang.String, android.os.Bundle, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;
        android.telecom.Logging.Session$Info r4;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void silence(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void splitFromConference(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void startRtt(java.lang.String, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.os.ParcelFileDescriptor r2, r3;
        android.telecom.Logging.Session$Info r4;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        r4 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void stopDtmfTone(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void stopRtt(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void swapConference(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void transfer(java.lang.String, android.net.Uri, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.net.Uri r2;
        boolean z0;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        z0 := @parameter2: boolean;

        r3 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void unhold(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionService$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }
}
