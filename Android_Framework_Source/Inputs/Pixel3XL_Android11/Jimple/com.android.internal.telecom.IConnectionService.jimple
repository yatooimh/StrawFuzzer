public interface  com.android.internal.telecom.IConnectionService extends java.lang.Object implements android.os.IInterface
{

    public abstract void abort(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void addConferenceParticipants(java.lang.String, java.util.List, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void addConnectionServiceAdapter(com.android.internal.telecom.IConnectionServiceAdapter, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void answer(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void answerVideo(java.lang.String, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void conference(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void connectionServiceFocusGained(android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void connectionServiceFocusLost(android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void consultativeTransfer(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void createConference(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void createConferenceComplete(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void createConferenceFailed(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void createConnection(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void createConnectionComplete(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void createConnectionFailed(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void deflect(java.lang.String, android.net.Uri, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void disconnect(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void handoverComplete(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void handoverFailed(java.lang.String, android.telecom.ConnectionRequest, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void hold(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void mergeConference(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void onCallAudioStateChanged(java.lang.String, android.telecom.CallAudioState, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void onExtrasChanged(java.lang.String, android.os.Bundle, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void onPostDialContinue(java.lang.String, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void playDtmfTone(java.lang.String, char, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void pullExternalCall(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void reject(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void rejectWithMessage(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void rejectWithReason(java.lang.String, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void removeConnectionServiceAdapter(com.android.internal.telecom.IConnectionServiceAdapter, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void respondToRttUpgradeRequest(java.lang.String, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void sendCallEvent(java.lang.String, java.lang.String, android.os.Bundle, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void silence(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void splitFromConference(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void startRtt(java.lang.String, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void stopDtmfTone(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void stopRtt(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void swapConference(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void transfer(java.lang.String, android.net.Uri, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException;

    public abstract void unhold(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException;
}
