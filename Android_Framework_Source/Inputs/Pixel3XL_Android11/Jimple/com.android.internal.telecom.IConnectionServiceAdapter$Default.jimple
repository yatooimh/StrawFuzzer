public class com.android.internal.telecom.IConnectionServiceAdapter$Default extends java.lang.Object implements com.android.internal.telecom.IConnectionServiceAdapter
{

    public void <init>()
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addConferenceCall(java.lang.String, android.telecom.ParcelableConference, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.ParcelableConference r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.ParcelableConference;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void addExistingConnection(java.lang.String, android.telecom.ParcelableConnection, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.ParcelableConnection r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.ParcelableConnection;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        return null;
    }

    public void handleCreateConferenceComplete(java.lang.String, android.telecom.ConnectionRequest, android.telecom.ParcelableConference, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.ConnectionRequest r2;
        android.telecom.ParcelableConference r3;
        android.telecom.Logging.Session$Info r4;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.ConnectionRequest;

        r3 := @parameter2: android.telecom.ParcelableConference;

        r4 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void handleCreateConnectionComplete(java.lang.String, android.telecom.ConnectionRequest, android.telecom.ParcelableConnection, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.ConnectionRequest r2;
        android.telecom.ParcelableConnection r3;
        android.telecom.Logging.Session$Info r4;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.ConnectionRequest;

        r3 := @parameter2: android.telecom.ParcelableConnection;

        r4 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void onConnectionEvent(java.lang.String, java.lang.String, android.os.Bundle, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;
        android.telecom.Logging.Session$Info r4;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void onConnectionServiceFocusReleased(android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        android.telecom.Logging.Session$Info r1;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: android.telecom.Logging.Session$Info;

        return;
    }

    public void onPhoneAccountChanged(java.lang.String, android.telecom.PhoneAccountHandle, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.PhoneAccountHandle r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.PhoneAccountHandle;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void onPostDialChar(java.lang.String, char, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        char c0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void onPostDialWait(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1, r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void onRemoteRttRequest(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void onRttInitiationFailure(java.lang.String, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void onRttInitiationSuccess(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void onRttSessionRemotelyTerminated(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void putExtras(java.lang.String, android.os.Bundle, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void queryRemoteConnectionServices(com.android.internal.telecom.RemoteServiceCallback, java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        com.android.internal.telecom.RemoteServiceCallback r1;
        java.lang.String r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: com.android.internal.telecom.RemoteServiceCallback;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void removeCall(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void removeExtras(java.lang.String, java.util.List, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        java.util.List r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void resetConnectionTime(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void setActive(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void setAddress(java.lang.String, android.net.Uri, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.net.Uri r2;
        int i0;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        r3 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void setAudioRoute(java.lang.String, int, java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1, r2;
        int i0;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void setCallDirection(java.lang.String, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setCallerDisplayName(java.lang.String, java.lang.String, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1, r2;
        int i0;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void setConferenceMergeFailed(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void setConferenceState(java.lang.String, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        boolean z0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setConferenceableConnections(java.lang.String, java.util.List, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        java.util.List r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setConnectionCapabilities(java.lang.String, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setConnectionProperties(java.lang.String, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setDialing(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void setDisconnected(java.lang.String, android.telecom.DisconnectCause, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.DisconnectCause r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.DisconnectCause;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setIsConferenced(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1, r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setIsVoipAudioMode(java.lang.String, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        boolean z0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setOnHold(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void setPulling(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void setRingbackRequested(java.lang.String, boolean, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        boolean z0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setRinging(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void setStatusHints(java.lang.String, android.telecom.StatusHints, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        android.telecom.StatusHints r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.StatusHints;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setVideoProvider(java.lang.String, com.android.internal.telecom.IVideoProvider, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        com.android.internal.telecom.IVideoProvider r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telecom.IVideoProvider;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setVideoState(java.lang.String, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        com.android.internal.telecom.IConnectionServiceAdapter$Default r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: com.android.internal.telecom.IConnectionServiceAdapter$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }
}
