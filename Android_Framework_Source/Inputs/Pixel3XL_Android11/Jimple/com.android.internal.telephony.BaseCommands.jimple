public abstract class com.android.internal.telephony.BaseCommands extends java.lang.Object implements com.android.internal.telephony.CommandsInterface
{
    protected com.android.internal.telephony.RegistrantList mAvailRegistrants;
    protected com.android.internal.telephony.RegistrantList mBarringInfoChangedRegistrants;
    protected com.android.internal.telephony.RegistrantList mCallStateRegistrants;
    protected com.android.internal.telephony.RegistrantList mCallWaitingInfoRegistrants;
    protected com.android.internal.telephony.RegistrantList mCarrierInfoForImsiEncryptionRegistrants;
    protected com.android.internal.telephony.Registrant mCatCallSetUpRegistrant;
    protected com.android.internal.telephony.Registrant mCatCcAlphaRegistrant;
    protected com.android.internal.telephony.Registrant mCatEventRegistrant;
    protected com.android.internal.telephony.Registrant mCatProCmdRegistrant;
    protected com.android.internal.telephony.Registrant mCatSessionEndRegistrant;
    protected com.android.internal.telephony.RegistrantList mCdmaPrlChangedRegistrants;
    protected com.android.internal.telephony.Registrant mCdmaSmsRegistrant;
    protected int mCdmaSubscription;
    protected com.android.internal.telephony.RegistrantList mCdmaSubscriptionChangedRegistrants;
    protected android.content.Context mContext;
    protected com.android.internal.telephony.RegistrantList mDataCallListChangedRegistrants;
    protected com.android.internal.telephony.RegistrantList mDisplayInfoRegistrants;
    protected com.android.internal.telephony.Registrant mEmergencyCallbackModeRegistrant;
    protected com.android.internal.telephony.RegistrantList mEmergencyNumberListRegistrants;
    protected com.android.internal.telephony.RegistrantList mExitEmergencyCallbackModeRegistrants;
    protected com.android.internal.telephony.Registrant mGsmBroadcastSmsRegistrant;
    protected com.android.internal.telephony.Registrant mGsmSmsRegistrant;
    protected com.android.internal.telephony.RegistrantList mHardwareConfigChangeRegistrants;
    protected com.android.internal.telephony.RegistrantList mIccRefreshRegistrants;
    protected com.android.internal.telephony.RegistrantList mIccSlotStatusChangedRegistrants;
    protected com.android.internal.telephony.Registrant mIccSmsFullRegistrant;
    protected com.android.internal.telephony.RegistrantList mIccStatusChangedRegistrants;
    protected com.android.internal.telephony.RegistrantList mImsNetworkStateChangedRegistrants;
    private final java.util.List mLastEmergencyNumberListIndication;
    private java.lang.Object mLastEmergencyNumberListIndicationLock;
    protected com.android.internal.telephony.RegistrantList mLceInfoRegistrants;
    protected com.android.internal.telephony.RegistrantList mLineControlInfoRegistrants;
    protected com.android.internal.telephony.RegistrantList mModemResetRegistrants;
    protected com.android.internal.telephony.Registrant mNITZTimeRegistrant;
    protected com.android.internal.telephony.RegistrantList mNattKeepaliveStatusRegistrants;
    protected com.android.internal.telephony.RegistrantList mNetworkStateRegistrants;
    protected com.android.internal.telephony.RegistrantList mNotAvailRegistrants;
    protected com.android.internal.telephony.RegistrantList mNumberInfoRegistrants;
    protected com.android.internal.telephony.RegistrantList mOffOrNotAvailRegistrants;
    protected com.android.internal.telephony.RegistrantList mOnRegistrants;
    protected com.android.internal.telephony.RegistrantList mOtaProvisionRegistrants;
    protected com.android.internal.telephony.RegistrantList mPcoDataRegistrants;
    protected com.android.internal.telephony.RegistrantList mPhoneRadioCapabilityChangedRegistrants;
    protected int mPhoneType;
    protected com.android.internal.telephony.RegistrantList mPhysicalChannelConfigurationRegistrants;
    protected int mPreferredNetworkType;
    protected com.android.internal.telephony.RegistrantList mRadioStateChangedRegistrants;
    protected com.android.internal.telephony.RegistrantList mRedirNumInfoRegistrants;
    protected com.android.internal.telephony.Registrant mRegistrationFailedRegistrant;
    protected com.android.internal.telephony.RegistrantList mResendIncallMuteRegistrants;
    protected com.android.internal.telephony.Registrant mRestrictedStateRegistrant;
    protected com.android.internal.telephony.RegistrantList mRilCellInfoListRegistrants;
    protected com.android.internal.telephony.RegistrantList mRilConnectedRegistrants;
    protected com.android.internal.telephony.RegistrantList mRilNetworkScanResultRegistrants;
    protected int mRilVersion;
    protected com.android.internal.telephony.Registrant mRingRegistrant;
    protected com.android.internal.telephony.RegistrantList mRingbackToneRegistrants;
    protected com.android.internal.telephony.RegistrantList mSignalInfoRegistrants;
    protected com.android.internal.telephony.Registrant mSignalStrengthRegistrant;
    protected com.android.internal.telephony.Registrant mSmsOnSimRegistrant;
    protected com.android.internal.telephony.Registrant mSmsStatusRegistrant;
    protected com.android.internal.telephony.RegistrantList mSrvccStateRegistrants;
    protected com.android.internal.telephony.Registrant mSsRegistrant;
    protected com.android.internal.telephony.Registrant mSsnRegistrant;
    protected int mState;
    protected java.lang.Object mStateMonitor;
    protected com.android.internal.telephony.RegistrantList mSubscriptionStatusRegistrants;
    protected com.android.internal.telephony.RegistrantList mT53AudCntrlInfoRegistrants;
    protected com.android.internal.telephony.RegistrantList mT53ClirInfoRegistrants;
    protected com.android.internal.telephony.Registrant mUSSDRegistrant;
    protected com.android.internal.telephony.RegistrantList mUiccApplicationsEnablementRegistrants;
    protected com.android.internal.telephony.Registrant mUnsolOemHookRawRegistrant;
    protected com.android.internal.telephony.RegistrantList mVoicePrivacyOffRegistrants;
    protected com.android.internal.telephony.RegistrantList mVoicePrivacyOnRegistrants;
    protected com.android.internal.telephony.RegistrantList mVoiceRadioTechChangedRegistrants;

    public void <init>(android.content.Context)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.content.Context r1;
        java.lang.Object $r2, $r48;
        com.android.internal.telephony.RegistrantList $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47;
        java.util.ArrayList $r49;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: int mState> = 2;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor> = $r2;

        $r3 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r3.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRadioStateChangedRegistrants> = $r3;

        $r4 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r4.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mOnRegistrants> = $r4;

        $r5 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r5.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mAvailRegistrants> = $r5;

        $r6 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r6.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mOffOrNotAvailRegistrants> = $r6;

        $r7 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r7.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNotAvailRegistrants> = $r7;

        $r8 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r8.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCallStateRegistrants> = $r8;

        $r9 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r9.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNetworkStateRegistrants> = $r9;

        $r10 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r10.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mDataCallListChangedRegistrants> = $r10;

        $r11 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r11.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mVoiceRadioTechChangedRegistrants> = $r11;

        $r12 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r12.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mImsNetworkStateChangedRegistrants> = $r12;

        $r13 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r13.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mIccStatusChangedRegistrants> = $r13;

        $r14 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r14.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mIccSlotStatusChangedRegistrants> = $r14;

        $r15 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r15.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mVoicePrivacyOnRegistrants> = $r15;

        $r16 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r16.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mVoicePrivacyOffRegistrants> = $r16;

        $r17 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r17.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mOtaProvisionRegistrants> = $r17;

        $r18 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r18.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCallWaitingInfoRegistrants> = $r18;

        $r19 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r19.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mDisplayInfoRegistrants> = $r19;

        $r20 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r20.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mSignalInfoRegistrants> = $r20;

        $r21 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r21.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNumberInfoRegistrants> = $r21;

        $r22 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r22.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRedirNumInfoRegistrants> = $r22;

        $r23 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r23.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mLineControlInfoRegistrants> = $r23;

        $r24 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r24.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mT53ClirInfoRegistrants> = $r24;

        $r25 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r25.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mT53AudCntrlInfoRegistrants> = $r25;

        $r26 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r26.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRingbackToneRegistrants> = $r26;

        $r27 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r27.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mResendIncallMuteRegistrants> = $r27;

        $r28 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r28.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCdmaSubscriptionChangedRegistrants> = $r28;

        $r29 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r29.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCdmaPrlChangedRegistrants> = $r29;

        $r30 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r30.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mExitEmergencyCallbackModeRegistrants> = $r30;

        $r31 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r31.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRilConnectedRegistrants> = $r31;

        $r32 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r32.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mIccRefreshRegistrants> = $r32;

        $r33 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r33.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRilCellInfoListRegistrants> = $r33;

        $r34 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r34.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mSubscriptionStatusRegistrants> = $r34;

        $r35 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r35.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mSrvccStateRegistrants> = $r35;

        $r36 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r36.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mHardwareConfigChangeRegistrants> = $r36;

        $r37 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r37.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mPhoneRadioCapabilityChangedRegistrants> = $r37;

        $r38 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r38.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mPcoDataRegistrants> = $r38;

        $r39 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r39.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCarrierInfoForImsiEncryptionRegistrants> = $r39;

        $r40 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r40.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRilNetworkScanResultRegistrants> = $r40;

        $r41 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r41.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mModemResetRegistrants> = $r41;

        $r42 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r42.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNattKeepaliveStatusRegistrants> = $r42;

        $r43 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r43.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mPhysicalChannelConfigurationRegistrants> = $r43;

        $r44 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r44.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mLceInfoRegistrants> = $r44;

        $r45 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r45.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mEmergencyNumberListRegistrants> = $r45;

        $r46 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r46.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mUiccApplicationsEnablementRegistrants> = $r46;

        $r47 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r47.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mBarringInfoChangedRegistrants> = $r47;

        $r48 = new java.lang.Object;

        specialinvoke $r48.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mLastEmergencyNumberListIndicationLock> = $r48;

        $r49 = new java.util.ArrayList;

        specialinvoke $r49.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: java.util.List mLastEmergencyNumberListIndication> = $r49;

        r0.<com.android.internal.telephony.BaseCommands: int mRilVersion> = -1;

        r0.<com.android.internal.telephony.BaseCommands: android.content.Context mContext> = r1;

        return;
    }

    private java.util.List getLastEmergencyNumberListIndication()
    {
        com.android.internal.telephony.BaseCommands r0;
        java.lang.Object r1;
        java.util.List $r2;
        java.lang.Throwable $r3;
        java.util.ArrayList r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mLastEmergencyNumberListIndicationLock>;

        entermonitor r1;

     label1:
        r4 = new java.util.ArrayList;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: java.util.List mLastEmergencyNumberListIndication>;

        specialinvoke r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void cacheEmergencyNumberListIndication(java.util.List)
    {
        com.android.internal.telephony.BaseCommands r0;
        java.lang.Object r1;
        java.util.List $r2, $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r5 := @parameter0: java.util.List;

        r1 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mLastEmergencyNumberListIndicationLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.BaseCommands: java.util.List mLastEmergencyNumberListIndication>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r3 = r0.<com.android.internal.telephony.BaseCommands: java.util.List mLastEmergencyNumberListIndication>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getLteOnCdmaMode()
    {
        com.android.internal.telephony.BaseCommands r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        $i0 = staticinvoke <android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>();

        return $i0;
    }

    public void getRadioCapability(android.os.Message)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Message;

        return;
    }

    public int getRadioState()
    {
        com.android.internal.telephony.BaseCommands r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        $i0 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        return $i0;
    }

    public int getRilVersion()
    {
        com.android.internal.telephony.BaseCommands r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        $i0 = r0.<com.android.internal.telephony.BaseCommands: int mRilVersion>;

        return $i0;
    }

    public void pullLceData(android.os.Message)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Message;

        return;
    }

    public void registerFoT53ClirlInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mT53ClirInfoRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForAvailable(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0, $i1;
        java.lang.Object r1, r2;
        android.os.AsyncResult r3;
        com.android.internal.telephony.RegistrantList $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        android.os.Handler r7;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r7 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mAvailRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r7, i0, r1);

        $i1 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        if $i1 == 2 goto label2;

        r3 = new android.os.AsyncResult;

        specialinvoke r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(r1, null, null);

        $r5 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>(r7, i0, r3);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void registerForBarringInfoChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mBarringInfoChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForCallStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCallStateRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForCallWaitingInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCallWaitingInfoRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForCarrierInfoForImsiEncryption(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCarrierInfoForImsiEncryptionRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForCdmaOtaProvision(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mOtaProvisionRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForCdmaPrlChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCdmaPrlChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForCdmaSubscriptionChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCdmaSubscriptionChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForCellInfoList(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRilCellInfoListRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForDataCallListChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mDataCallListChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForDisplayInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mDisplayInfoRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForEmergencyNumberList(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.RegistrantList $r2, $r4;
        android.os.AsyncResult $r3;
        android.os.Handler r5;
        java.util.List r6;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mEmergencyNumberListRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r5, i0, r1);

        r6 = specialinvoke r0.<com.android.internal.telephony.BaseCommands: java.util.List getLastEmergencyNumberListIndication()>();

        if r6 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mEmergencyNumberListRegistrants>;

        $r3 = new android.os.AsyncResult;

        specialinvoke $r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r6, null);

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r3);

     label1:
        return;
    }

    public void registerForExitEmergencyCallbackMode(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mExitEmergencyCallbackModeRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForHardwareConfigChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mHardwareConfigChangeRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForIccRefresh(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mIccRefreshRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForIccSlotStatusChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mIccSlotStatusChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForIccStatusChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForImsNetworkStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mImsNetworkStateChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForInCallVoicePrivacyOff(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mVoicePrivacyOffRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForInCallVoicePrivacyOn(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mVoicePrivacyOnRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForLceInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0;
        java.lang.Object r1, r2;
        com.android.internal.telephony.RegistrantList $r3;
        java.lang.Throwable $r4;
        android.os.Handler r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mLceInfoRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r5, i0, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void registerForLineControlInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mLineControlInfoRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForModemReset(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mModemResetRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForNattKeepaliveStatus(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0;
        java.lang.Object r1, r2;
        com.android.internal.telephony.RegistrantList $r3;
        java.lang.Throwable $r4;
        android.os.Handler r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNattKeepaliveStatusRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r5, i0, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void registerForNetworkScanResult(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRilNetworkScanResultRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForNetworkStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNetworkStateRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForNotAvailable(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0, $i1;
        java.lang.Object r1, r2;
        android.os.AsyncResult r3;
        com.android.internal.telephony.RegistrantList $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        android.os.Handler r7;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r7 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNotAvailRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r7, i0, r1);

        $i1 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        if $i1 != 2 goto label2;

        r3 = new android.os.AsyncResult;

        specialinvoke r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(r1, null, null);

        $r5 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>(r7, i0, r3);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void registerForNumberInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNumberInfoRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForOffOrNotAvailable(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0, $i1, $i2;
        java.lang.Object r1, r2;
        android.os.AsyncResult r3;
        com.android.internal.telephony.RegistrantList $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        android.os.Handler r7;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r7 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mOffOrNotAvailRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r7, i0, r1);

        $i1 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        if $i1 == 0 goto label2;

        $i2 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        if $i2 != 2 goto label3;

     label2:
        r3 = new android.os.AsyncResult;

        specialinvoke r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(r1, null, null);

        $r5 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>(r7, i0, r3);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label3:
        exitmonitor r2;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void registerForOn(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0, $i1;
        java.lang.Object r1, r2;
        android.os.AsyncResult r3;
        com.android.internal.telephony.RegistrantList $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        android.os.Handler r7;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r7 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mOnRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r7, i0, r1);

        $i1 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        if $i1 != 1 goto label2;

        r3 = new android.os.AsyncResult;

        specialinvoke r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(r1, null, null);

        $r5 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>(r7, i0, r3);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void registerForPcoData(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mPcoDataRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForPhysicalChannelConfiguration(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mPhysicalChannelConfigurationRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForRadioCapabilityChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mPhoneRadioCapabilityChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForRadioStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0;
        java.lang.Object r1, r2;
        android.os.AsyncResult r3;
        com.android.internal.telephony.RegistrantList $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        android.os.Handler r7;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r7 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRadioStateChangedRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r7, i0, r1);

        r3 = new android.os.AsyncResult;

        specialinvoke r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(r1, null, null);

        $r5 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>(r7, i0, r3);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void registerForRedirectedNumberInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRedirNumInfoRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForResendIncallMute(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mResendIncallMuteRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForRilConnected(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.AsyncResult $r4;
        java.lang.Integer $r5;
        android.os.Message $r6;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRilConnectedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        $i1 = r0.<com.android.internal.telephony.BaseCommands: int mRilVersion>;

        if $i1 == -1 goto label1;

        $r4 = new android.os.AsyncResult;

        $r5 = new java.lang.Integer;

        $i2 = r0.<com.android.internal.telephony.BaseCommands: int mRilVersion>;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i2);

        specialinvoke $r4.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(r2, $r5, null);

        $r6 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>(r1, i0, $r4);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    public void registerForRingbackTone(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRingbackToneRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSignalInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mSignalInfoRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSrvccStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mSrvccStateRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSubscriptionStatusChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mSubscriptionStatusRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForT53AudioControlInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mT53AudCntrlInfoRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForVoiceRadioTechChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mVoiceRadioTechChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerUiccApplicationEnablementChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mUiccApplicationsEnablementRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void requestShutdown(android.os.Message)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Message;

        return;
    }

    public void setDataAllowed(boolean, android.os.Message)
    {
        com.android.internal.telephony.BaseCommands r0;
        boolean z0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        return;
    }

    public void setEmergencyCallbackMode(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mEmergencyCallbackModeRegistrant> = $r3;

        return;
    }

    public void setOnCallRing(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mRingRegistrant> = $r3;

        return;
    }

    public void setOnCatCallSetUp(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatCallSetUpRegistrant> = $r3;

        return;
    }

    public void setOnCatCcAlphaNotify(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatCcAlphaRegistrant> = $r3;

        return;
    }

    public void setOnCatEvent(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatEventRegistrant> = $r3;

        return;
    }

    public void setOnCatProactiveCmd(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatProCmdRegistrant> = $r3;

        return;
    }

    public void setOnCatSessionEnd(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatSessionEndRegistrant> = $r3;

        return;
    }

    public void setOnIccRefresh(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        virtualinvoke r0.<com.android.internal.telephony.BaseCommands: void registerForIccRefresh(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void setOnIccSmsFull(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mIccSmsFullRegistrant> = $r3;

        return;
    }

    public void setOnNITZTime(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mNITZTimeRegistrant> = $r3;

        return;
    }

    public void setOnNewCdmaSms(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCdmaSmsRegistrant> = $r3;

        return;
    }

    public void setOnNewGsmBroadcastSms(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mGsmBroadcastSmsRegistrant> = $r3;

        return;
    }

    public void setOnNewGsmSms(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mGsmSmsRegistrant> = $r3;

        return;
    }

    public void setOnRegistrationFailed(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mRegistrationFailedRegistrant> = $r3;

        return;
    }

    public void setOnRestrictedStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mRestrictedStateRegistrant> = $r3;

        return;
    }

    public void setOnSignalStrengthUpdate(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSignalStrengthRegistrant> = $r3;

        return;
    }

    public void setOnSmsOnSim(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSmsOnSimRegistrant> = $r3;

        return;
    }

    public void setOnSmsStatus(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSmsStatusRegistrant> = $r3;

        return;
    }

    public void setOnSs(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSsRegistrant> = $r3;

        return;
    }

    public void setOnSuppServiceNotification(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSsnRegistrant> = $r3;

        return;
    }

    public void setOnUSSD(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mUSSDRegistrant> = $r3;

        return;
    }

    public void setOnUnsolOemHookRaw(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mUnsolOemHookRawRegistrant> = $r3;

        return;
    }

    public void setRadioCapability(com.android.internal.telephony.RadioCapability, android.os.Message)
    {
        com.android.internal.telephony.BaseCommands r0;
        com.android.internal.telephony.RadioCapability r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: com.android.internal.telephony.RadioCapability;

        r2 := @parameter1: android.os.Message;

        return;
    }

    protected void setRadioState(int, boolean)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0;
        java.lang.Object r1;
        com.android.internal.telephony.RegistrantList $r3, $r4, $r5, $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r1;

     label01:
        i1 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        r0.<com.android.internal.telephony.BaseCommands: int mState> = i0;

     label02:
        if i1 != i0 goto label05;

        if z0 != 0 goto label05;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        $r3 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRadioStateChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        $i2 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        if $i2 == 2 goto label08;

     label06:
        if i1 != 2 goto label08;

     label07:
        $r7 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mAvailRegistrants>;

        virtualinvoke $r7.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label08:
        $i4 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        if $i4 != 2 goto label11;

     label09:
        if i1 == 2 goto label11;

     label10:
        $r6 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNotAvailRegistrants>;

        virtualinvoke $r6.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label11:
        $i5 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        if $i5 != 1 goto label14;

     label12:
        if i1 == 1 goto label14;

     label13:
        $r5 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mOnRegistrants>;

        virtualinvoke $r5.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label14:
        $i6 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        if $i6 == 0 goto label15;

        $i3 = r0.<com.android.internal.telephony.BaseCommands: int mState>;

        if $i3 != 2 goto label17;

     label15:
        if i1 != 1 goto label17;

     label16:
        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mOffOrNotAvailRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label17:
        exitmonitor r1;

     label18:
        return;

     label19:
        $r8 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public void setUiccSubscription(int, int, int, int, android.os.Message)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0, i1, i2, i3;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: android.os.Message;

        return;
    }

    public void startLceService(int, boolean, android.os.Message)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0;
        boolean z0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.os.Message;

        return;
    }

    public void stopLceService(android.os.Message)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Message;

        return;
    }

    public void testingEmergencyCall()
    {
        com.android.internal.telephony.BaseCommands r0;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        return;
    }

    public void unSetOnCallRing(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mRingRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mRingRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mRingRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnCatCallSetUp(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatCallSetUpRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatCallSetUpRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatCallSetUpRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnCatCcAlphaNotify(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.Registrant $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatCcAlphaRegistrant>;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void clear()>();

        return;
    }

    public void unSetOnCatEvent(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatEventRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatEventRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatEventRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnCatProactiveCmd(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatProCmdRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatProCmdRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatProCmdRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnCatSessionEnd(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatSessionEndRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatSessionEndRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCatSessionEndRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnIccSmsFull(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mIccSmsFullRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mIccSmsFullRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mIccSmsFullRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnNITZTime(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mNITZTimeRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mNITZTimeRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mNITZTimeRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnNewCdmaSms(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCdmaSmsRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCdmaSmsRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mCdmaSmsRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnNewGsmBroadcastSms(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mGsmBroadcastSmsRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mGsmBroadcastSmsRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mGsmBroadcastSmsRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnNewGsmSms(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mGsmSmsRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mGsmSmsRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mGsmSmsRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnRegistrationFailed(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.Registrant $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mRegistrationFailedRegistrant>;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void clear()>();

        return;
    }

    public void unSetOnRestrictedStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mRestrictedStateRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mRestrictedStateRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mRestrictedStateRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnSignalStrengthUpdate(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSignalStrengthRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSignalStrengthRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSignalStrengthRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnSmsOnSim(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSmsOnSimRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSmsOnSimRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSmsOnSimRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnSmsStatus(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSmsStatusRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSmsStatusRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSmsStatusRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnSs(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.Registrant $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSsRegistrant>;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void clear()>();

        return;
    }

    public void unSetOnSuppServiceNotification(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSsnRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSsnRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mSsnRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnUSSD(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mUSSDRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mUSSDRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mUSSDRegistrant> = null;

     label1:
        return;
    }

    public void unSetOnUnsolOemHookRaw(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mUnsolOemHookRawRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mUnsolOemHookRawRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.Registrant mUnsolOemHookRawRegistrant> = null;

     label1:
        return;
    }

    public void unregisterForAvailable(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        java.lang.Object r1;
        com.android.internal.telephony.RegistrantList $r2;
        java.lang.Throwable $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r4 := @parameter0: android.os.Handler;

        r1 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mAvailRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterForBarringInfoChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mBarringInfoChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForCallStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCallStateRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForCallWaitingInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCallWaitingInfoRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForCarrierInfoForImsiEncryption(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCarrierInfoForImsiEncryptionRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForCdmaOtaProvision(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mOtaProvisionRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForCdmaPrlChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCdmaPrlChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForCdmaSubscriptionChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mCdmaSubscriptionChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForCellInfoList(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRilCellInfoListRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForDataCallListChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mDataCallListChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForDisplayInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mDisplayInfoRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForEmergencyNumberList(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mEmergencyNumberListRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForExitEmergencyCallbackMode(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mExitEmergencyCallbackModeRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForHardwareConfigChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mHardwareConfigChangeRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForIccRefresh(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mIccRefreshRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForIccSlotStatusChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mIccSlotStatusChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForIccStatusChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForImsNetworkStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mImsNetworkStateChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForInCallVoicePrivacyOff(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mVoicePrivacyOffRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForInCallVoicePrivacyOn(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mVoicePrivacyOnRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForLceInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        java.lang.Object r1;
        com.android.internal.telephony.RegistrantList $r2;
        java.lang.Throwable $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r4 := @parameter0: android.os.Handler;

        r1 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mLceInfoRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterForLineControlInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mLineControlInfoRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForModemReset(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mModemResetRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNattKeepaliveStatus(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        java.lang.Object r1;
        com.android.internal.telephony.RegistrantList $r2;
        java.lang.Throwable $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r4 := @parameter0: android.os.Handler;

        r1 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNattKeepaliveStatusRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterForNetworkScanResult(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRilNetworkScanResultRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNetworkStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNetworkStateRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNotAvailable(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        java.lang.Object r1;
        com.android.internal.telephony.RegistrantList $r2;
        java.lang.Throwable $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r4 := @parameter0: android.os.Handler;

        r1 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNotAvailRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterForNumberInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mNumberInfoRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForOffOrNotAvailable(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        java.lang.Object r1;
        com.android.internal.telephony.RegistrantList $r2;
        java.lang.Throwable $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r4 := @parameter0: android.os.Handler;

        r1 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mOffOrNotAvailRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterForOn(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        java.lang.Object r1;
        com.android.internal.telephony.RegistrantList $r2;
        java.lang.Throwable $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r4 := @parameter0: android.os.Handler;

        r1 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mOnRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterForPcoData(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mPcoDataRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForPhysicalChannelConfiguration(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mPhysicalChannelConfigurationRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForRadioCapabilityChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mPhoneRadioCapabilityChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForRadioStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        java.lang.Object r1;
        com.android.internal.telephony.RegistrantList $r2;
        java.lang.Throwable $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r4 := @parameter0: android.os.Handler;

        r1 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRadioStateChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterForRedirectedNumberInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRedirNumInfoRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForResendIncallMute(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mResendIncallMuteRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForRilConnected(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRilConnectedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForRingbackTone(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mRingbackToneRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSignalInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mSignalInfoRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSrvccStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mSrvccStateRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSubscriptionStatusChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mSubscriptionStatusRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForT53AudioControlInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mT53AudCntrlInfoRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForT53ClirInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mT53ClirInfoRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForVoiceRadioTechChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mVoiceRadioTechChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterUiccApplicationEnablementChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.RegistrantList mUiccApplicationsEnablementRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unsetOnIccRefresh(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        virtualinvoke r0.<com.android.internal.telephony.BaseCommands: void unregisterForIccRefresh(android.os.Handler)>(r1);

        return;
    }
}
