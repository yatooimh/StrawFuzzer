public class com.android.internal.telephony.CallManager extends java.lang.Object
{
    private static final boolean DBG;
    private static final int EVENT_CALL_WAITING;
    private static final int EVENT_CDMA_OTA_STATUS_CHANGE;
    private static final int EVENT_DISCONNECT;
    private static final int EVENT_DISPLAY_INFO;
    private static final int EVENT_ECM_TIMER_RESET;
    private static final int EVENT_INCOMING_RING;
    private static final int EVENT_IN_CALL_VOICE_PRIVACY_OFF;
    private static final int EVENT_IN_CALL_VOICE_PRIVACY_ON;
    private static final int EVENT_MMI_COMPLETE;
    private static final int EVENT_MMI_INITIATE;
    private static final int EVENT_NEW_RINGING_CONNECTION;
    private static final int EVENT_ONHOLD_TONE;
    private static final int EVENT_POST_DIAL_CHARACTER;
    private static final int EVENT_PRECISE_CALL_STATE_CHANGED;
    private static final int EVENT_RESEND_INCALL_MUTE;
    private static final int EVENT_RINGBACK_TONE;
    private static final int EVENT_SERVICE_STATE_CHANGED;
    private static final int EVENT_SIGNAL_INFO;
    private static final int EVENT_SUBSCRIPTION_INFO_READY;
    private static final int EVENT_SUPP_SERVICE_FAILED;
    private static final int EVENT_TTY_MODE_RECEIVED;
    private static final int EVENT_UNKNOWN_CONNECTION;
    private static final com.android.internal.telephony.CallManager INSTANCE;
    private static final java.lang.String LOG_TAG;
    private static final boolean VDBG;
    private final java.util.ArrayList mBackgroundCalls;
    protected final com.android.internal.telephony.RegistrantList mCallWaitingRegistrants;
    protected final com.android.internal.telephony.RegistrantList mCdmaOtaStatusChangeRegistrants;
    private com.android.internal.telephony.Phone mDefaultPhone;
    protected final com.android.internal.telephony.RegistrantList mDisconnectRegistrants;
    protected final com.android.internal.telephony.RegistrantList mDisplayInfoRegistrants;
    protected final com.android.internal.telephony.RegistrantList mEcmTimerResetRegistrants;
    private final java.util.ArrayList mEmptyConnections;
    private final java.util.ArrayList mForegroundCalls;
    private final java.util.HashMap mHandlerMap;
    protected final com.android.internal.telephony.RegistrantList mInCallVoicePrivacyOffRegistrants;
    protected final com.android.internal.telephony.RegistrantList mInCallVoicePrivacyOnRegistrants;
    protected final com.android.internal.telephony.RegistrantList mIncomingRingRegistrants;
    protected final com.android.internal.telephony.RegistrantList mMmiCompleteRegistrants;
    protected final com.android.internal.telephony.RegistrantList mMmiInitiateRegistrants;
    protected final com.android.internal.telephony.RegistrantList mMmiRegistrants;
    protected final com.android.internal.telephony.RegistrantList mNewRingingConnectionRegistrants;
    protected final com.android.internal.telephony.RegistrantList mOnHoldToneRegistrants;
    private final java.util.ArrayList mPhones;
    protected final com.android.internal.telephony.RegistrantList mPostDialCharacterRegistrants;
    protected final com.android.internal.telephony.RegistrantList mPreciseCallStateRegistrants;
    private java.lang.Object mRegistrantidentifier;
    protected final com.android.internal.telephony.RegistrantList mResendIncallMuteRegistrants;
    protected final com.android.internal.telephony.RegistrantList mRingbackToneRegistrants;
    private final java.util.ArrayList mRingingCalls;
    protected final com.android.internal.telephony.RegistrantList mServiceStateChangedRegistrants;
    protected final com.android.internal.telephony.RegistrantList mSignalInfoRegistrants;
    private boolean mSpeedUpAudioForMtCall;
    protected final com.android.internal.telephony.RegistrantList mSubscriptionInfoReadyRegistrants;
    protected final com.android.internal.telephony.RegistrantList mSuppServiceFailedRegistrants;
    protected final com.android.internal.telephony.RegistrantList mTtyModeReceivedRegistrants;
    protected final com.android.internal.telephony.RegistrantList mUnknownConnectionRegistrants;

    static void <clinit>()
    {
        com.android.internal.telephony.CallManager $r0;

        <com.android.internal.telephony.CallManager: boolean VDBG> = 0;

        <com.android.internal.telephony.CallManager: java.lang.String LOG_TAG> = "CallManager";

        <com.android.internal.telephony.CallManager: int EVENT_UNKNOWN_CONNECTION> = 103;

        <com.android.internal.telephony.CallManager: int EVENT_TTY_MODE_RECEIVED> = 122;

        <com.android.internal.telephony.CallManager: int EVENT_SUPP_SERVICE_FAILED> = 117;

        <com.android.internal.telephony.CallManager: int EVENT_SUBSCRIPTION_INFO_READY> = 116;

        <com.android.internal.telephony.CallManager: int EVENT_SIGNAL_INFO> = 110;

        <com.android.internal.telephony.CallManager: int EVENT_SERVICE_STATE_CHANGED> = 118;

        <com.android.internal.telephony.CallManager: int EVENT_RINGBACK_TONE> = 105;

        <com.android.internal.telephony.CallManager: int EVENT_RESEND_INCALL_MUTE> = 112;

        <com.android.internal.telephony.CallManager: int EVENT_PRECISE_CALL_STATE_CHANGED> = 101;

        <com.android.internal.telephony.CallManager: int EVENT_POST_DIAL_CHARACTER> = 119;

        <com.android.internal.telephony.CallManager: int EVENT_ONHOLD_TONE> = 120;

        <com.android.internal.telephony.CallManager: int EVENT_NEW_RINGING_CONNECTION> = 102;

        <com.android.internal.telephony.CallManager: int EVENT_MMI_INITIATE> = 113;

        <com.android.internal.telephony.CallManager: int EVENT_MMI_COMPLETE> = 114;

        <com.android.internal.telephony.CallManager: int EVENT_IN_CALL_VOICE_PRIVACY_ON> = 106;

        <com.android.internal.telephony.CallManager: int EVENT_IN_CALL_VOICE_PRIVACY_OFF> = 107;

        <com.android.internal.telephony.CallManager: int EVENT_INCOMING_RING> = 104;

        <com.android.internal.telephony.CallManager: int EVENT_ECM_TIMER_RESET> = 115;

        <com.android.internal.telephony.CallManager: int EVENT_DISPLAY_INFO> = 109;

        <com.android.internal.telephony.CallManager: int EVENT_DISCONNECT> = 100;

        <com.android.internal.telephony.CallManager: int EVENT_CDMA_OTA_STATUS_CHANGE> = 111;

        <com.android.internal.telephony.CallManager: int EVENT_CALL_WAITING> = 108;

        <com.android.internal.telephony.CallManager: boolean DBG> = 1;

        $r0 = new com.android.internal.telephony.CallManager;

        specialinvoke $r0.<com.android.internal.telephony.CallManager: void <init>()>();

        <com.android.internal.telephony.CallManager: com.android.internal.telephony.CallManager INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1, $r27, $r28, $r29, $r30;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.android.internal.telephony.RegistrantList $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;

        r0 := @this: com.android.internal.telephony.CallManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mEmptyConnections> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.HashMap mHandlerMap> = $r2;

        r0.<com.android.internal.telephony.CallManager: boolean mSpeedUpAudioForMtCall> = 0;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier> = $r3;

        $r4 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r4.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mPreciseCallStateRegistrants> = $r4;

        $r5 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r5.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mNewRingingConnectionRegistrants> = $r5;

        $r6 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r6.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mIncomingRingRegistrants> = $r6;

        $r7 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r7.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mDisconnectRegistrants> = $r7;

        $r8 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r8.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mMmiRegistrants> = $r8;

        $r9 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r9.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mUnknownConnectionRegistrants> = $r9;

        $r10 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r10.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mRingbackToneRegistrants> = $r10;

        $r11 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r11.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mOnHoldToneRegistrants> = $r11;

        $r12 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r12.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mInCallVoicePrivacyOnRegistrants> = $r12;

        $r13 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r13.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mInCallVoicePrivacyOffRegistrants> = $r13;

        $r14 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r14.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mCallWaitingRegistrants> = $r14;

        $r15 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r15.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mDisplayInfoRegistrants> = $r15;

        $r16 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r16.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mSignalInfoRegistrants> = $r16;

        $r17 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r17.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mCdmaOtaStatusChangeRegistrants> = $r17;

        $r18 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r18.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mResendIncallMuteRegistrants> = $r18;

        $r19 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r19.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mMmiInitiateRegistrants> = $r19;

        $r20 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r20.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mMmiCompleteRegistrants> = $r20;

        $r21 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r21.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mEcmTimerResetRegistrants> = $r21;

        $r22 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r22.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mSubscriptionInfoReadyRegistrants> = $r22;

        $r23 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r23.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mSuppServiceFailedRegistrants> = $r23;

        $r24 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r24.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mServiceStateChangedRegistrants> = $r24;

        $r25 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r25.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mPostDialCharacterRegistrants> = $r25;

        $r26 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r26.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mTtyModeReceivedRegistrants> = $r26;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones> = $r27;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls> = $r28;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls> = $r29;

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls> = $r30;

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone> = null;

        return;
    }

    static boolean access$100(com.android.internal.telephony.CallManager)
    {
        com.android.internal.telephony.CallManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.CallManager;

        $z0 = specialinvoke r0.<com.android.internal.telephony.CallManager: boolean hasMoreThanOneRingingCall()>();

        return $z0;
    }

    private boolean canDial(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        int i0, i1;
        boolean z0, z1;
        android.telephony.ServiceState $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r10;
        com.android.internal.telephony.Call$State $r11, $r12, $r13, $r14, r16;
        com.android.internal.telephony.Phone r15;

        r0 := @this: com.android.internal.telephony.CallManager;

        r15 := @parameter0: com.android.internal.telephony.Phone;

        $r2 = virtualinvoke r15.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        i0 = virtualinvoke $r2.<android.telephony.ServiceState: int getState()>();

        i1 = virtualinvoke r15.<com.android.internal.telephony.Phone: int getSubId()>();

        z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveRingingCall()>();

        r16 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call$State getActiveFgCallState(int)>(i1);

        if i0 == 3 goto label2;

        if z0 != 0 goto label2;

        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if r16 == $r11 goto label1;

        $r12 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if r16 == $r12 goto label1;

        $r13 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if r16 == $r13 goto label1;

        $r14 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ALERTING>;

        if r16 != $r14 goto label2;

     label1:
        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        if z1 != 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("canDial serviceState=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasRingingCall=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fgCallState=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", $r10);

     label4:
        return z1;
    }

    private android.content.Context getContext()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        android.content.Context r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getDefaultPhone()>();

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

     label2:
        return r2;
    }

    private com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        java.util.ArrayList r3;
        java.util.Iterator r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        r3 := @parameter0: java.util.ArrayList;

        r4 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.android.internal.telephony.Call) $r2;

        $z1 = virtualinvoke r1.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z1 != 0 goto label2;

        return r1;

     label2:
        goto label1;

     label3:
        return null;
    }

    private com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList, int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0, $i1;
        com.android.internal.telephony.Call r1;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2;
        com.android.internal.telephony.Phone $r3, $r4;
        java.util.ArrayList r5;
        java.util.Iterator r6;

        r0 := @this: com.android.internal.telephony.CallManager;

        r5 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        r6 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.android.internal.telephony.Call) $r2;

        $z1 = virtualinvoke r1.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z1 != 0 goto label3;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $i1 = virtualinvoke $r3.<com.android.internal.telephony.Phone: int getSubId()>();

        if $i1 == i0 goto label2;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z2 = $r4 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z2 == 0 goto label3;

     label2:
        return r1;

     label3:
        goto label1;

     label4:
        return null;
    }

    private com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList, com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call$State r1, $r4;
        com.android.internal.telephony.Call r2;
        boolean $z0;
        java.lang.Object $r3;
        java.util.ArrayList r5;
        java.util.Iterator r6;

        r0 := @this: com.android.internal.telephony.CallManager;

        r5 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: com.android.internal.telephony.Call$State;

        r6 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Call) $r3;

        $r4 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        if $r4 != r1 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }

    private com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList, com.android.internal.telephony.Call$State, int)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call$State r1, $r4;
        int i0, $i1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        com.android.internal.telephony.Phone $r5, $r6;
        java.util.ArrayList r7;
        com.android.internal.telephony.Call r8;

        r0 := @this: com.android.internal.telephony.CallManager;

        r7 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: com.android.internal.telephony.Call$State;

        i0 := @parameter2: int;

        r2 = virtualinvoke r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.internal.telephony.Call) $r3;

        $r4 = virtualinvoke r8.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        if $r4 == r1 goto label3;

        $r5 = virtualinvoke r8.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $i1 = virtualinvoke $r5.<com.android.internal.telephony.Phone: int getSubId()>();

        if $i1 == i0 goto label3;

        $r6 = virtualinvoke r8.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z1 = $r6 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        return r8;

     label4:
        return null;
    }

    private com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List)
    {
        com.android.internal.telephony.CallManager r0;
        java.util.Iterator r1;
        com.android.internal.telephony.Call r2, r7, r8;
        boolean $z0, $z1;
        java.lang.Object $r3;
        com.android.internal.telephony.Call$State $r4, $r5;
        java.util.List r6;

        r0 := @this: com.android.internal.telephony.CallManager;

        r6 := @parameter0: java.util.List;

        r7 = null;

        r1 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Call) $r3;

        $z1 = virtualinvoke r2.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z1 != 0 goto label2;

        return r2;

     label2:
        r8 = r7;

        $r4 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r5 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r4 == $r5 goto label3;

        r8 = r7;

        if r7 != null goto label3;

        r8 = r2;

     label3:
        r7 = r8;

        goto label1;

     label4:
        return r7;
    }

    private com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List, int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0, $i1;
        java.util.Iterator r1;
        com.android.internal.telephony.Call r2, r9, r10;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3;
        com.android.internal.telephony.Phone $r4, $r7;
        com.android.internal.telephony.Call$State $r5, $r6;
        java.util.List r8;

        r0 := @this: com.android.internal.telephony.CallManager;

        r8 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r9 = null;

        r1 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Call) $r3;

        $r4 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $i1 = virtualinvoke $r4.<com.android.internal.telephony.Phone: int getSubId()>();

        if $i1 == i0 goto label2;

        r10 = r9;

        $r7 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z2 = $r7 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z2 == 0 goto label4;

     label2:
        $z1 = virtualinvoke r2.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z1 != 0 goto label3;

        return r2;

     label3:
        r10 = r9;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r5 == $r6 goto label4;

        r10 = r9;

        if r9 != null goto label4;

        r10 = r2;

     label4:
        r9 = r10;

        goto label1;

     label5:
        return r9;
    }

    public static com.android.internal.telephony.CallManager getInstance()
    {
        com.android.internal.telephony.CallManager $r0;

        $r0 = <com.android.internal.telephony.CallManager: com.android.internal.telephony.CallManager INSTANCE>;

        return $r0;
    }

    private com.android.internal.telephony.Phone getPhone(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.internal.telephony.Phone r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        r4 = null;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.telephony.Phone) $r3;

        $i1 = virtualinvoke r4.<com.android.internal.telephony.Phone: int getSubId()>();

        if $i1 != i0 goto label2;

        $i2 = virtualinvoke r4.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i2 == 5 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        return r4;
    }

    private boolean hasMoreThanOneHoldingCall(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0, $i1, i2, i3, i4;
        java.util.Iterator r1;
        com.android.internal.telephony.Call r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        com.android.internal.telephony.Call$State $r5, $r6;
        com.android.internal.telephony.Phone $r7, $r8;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        i2 = 0;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Call) $r4;

        i3 = i2;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r5 != $r6 goto label3;

        $r7 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $i1 = virtualinvoke $r7.<com.android.internal.telephony.Phone: int getSubId()>();

        if $i1 == i0 goto label2;

        i3 = i2;

        $r8 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z1 = $r8 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z1 == 0 goto label3;

     label2:
        i4 = i2 + 1;

        i3 = i4;

        if i4 <= 1 goto label3;

        return 1;

     label3:
        i2 = i3;

        goto label1;

     label4:
        return 0;
    }

    private boolean hasMoreThanOneRingingCall()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        com.android.internal.telephony.Call $r4;
        com.android.internal.telephony.Call$State $r5;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 = 0;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        i1 = i0;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.internal.telephony.Call) $r3;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $z1 = virtualinvoke $r5.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z1 == 0 goto label2;

        i2 = i0 + 1;

        i1 = i2;

        if i2 <= 1 goto label2;

        return 1;

     label2:
        i0 = i1;

        goto label1;

     label3:
        return 0;
    }

    private boolean hasMoreThanOneRingingCall(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0, $i1, i2, i3, i4;
        java.util.Iterator r1;
        com.android.internal.telephony.Call r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;
        com.android.internal.telephony.Call$State $r5;
        com.android.internal.telephony.Phone $r6, $r7;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        i2 = 0;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Call) $r4;

        i3 = i2;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $z1 = virtualinvoke $r5.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z1 == 0 goto label3;

        $r6 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $i1 = virtualinvoke $r6.<com.android.internal.telephony.Phone: int getSubId()>();

        if $i1 == i0 goto label2;

        i3 = i2;

        $r7 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z2 = $r7 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z2 == 0 goto label3;

     label2:
        i4 = i2 + 1;

        i3 = i4;

        if i4 <= 1 goto label3;

        return 1;

     label3:
        i2 = i3;

        goto label1;

     label4:
        return 0;
    }

    private void registerForPhoneStates(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        java.util.HashMap $r3, $r7;
        java.lang.Object $r4, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        com.android.internal.telephony.CallManager$CallManagerHandler $r5, $r6;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.HashMap mHandlerMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (com.android.internal.telephony.CallManager$CallManagerHandler) $r4;

        if $r5 == null goto label1;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", "This phone has already been registered.");

        return;

     label1:
        $r6 = new com.android.internal.telephony.CallManager$CallManagerHandler;

        specialinvoke $r6.<com.android.internal.telephony.CallManager$CallManagerHandler: void <init>(com.android.internal.telephony.CallManager,com.android.internal.telephony.CallManager$1)>(r0, null);

        $r7 = r0.<com.android.internal.telephony.CallManager: java.util.HashMap mHandlerMap>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        $r9 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForPreciseCallStateChanged(android.os.Handler,int,java.lang.Object)>($r6, 101, $r9);

        $r10 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForDisconnect(android.os.Handler,int,java.lang.Object)>($r6, 100, $r10);

        $r11 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForNewRingingConnection(android.os.Handler,int,java.lang.Object)>($r6, 102, $r11);

        $r12 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForUnknownConnection(android.os.Handler,int,java.lang.Object)>($r6, 103, $r12);

        $r13 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForIncomingRing(android.os.Handler,int,java.lang.Object)>($r6, 104, $r13);

        $r14 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForRingbackTone(android.os.Handler,int,java.lang.Object)>($r6, 105, $r14);

        $r15 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForInCallVoicePrivacyOn(android.os.Handler,int,java.lang.Object)>($r6, 106, $r15);

        $r16 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForInCallVoicePrivacyOff(android.os.Handler,int,java.lang.Object)>($r6, 107, $r16);

        $r17 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForDisplayInfo(android.os.Handler,int,java.lang.Object)>($r6, 109, $r17);

        $r18 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForSignalInfo(android.os.Handler,int,java.lang.Object)>($r6, 110, $r18);

        $r19 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForResendIncallMute(android.os.Handler,int,java.lang.Object)>($r6, 112, $r19);

        $r20 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForMmiInitiate(android.os.Handler,int,java.lang.Object)>($r6, 113, $r20);

        $r21 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForMmiComplete(android.os.Handler,int,java.lang.Object)>($r6, 114, $r21);

        $r22 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForSuppServiceFailed(android.os.Handler,int,java.lang.Object)>($r6, 117, $r22);

        $r23 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForServiceStateChanged(android.os.Handler,int,java.lang.Object)>($r6, 118, $r23);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>($r6, 119, null);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForCdmaOtaStatusChange(android.os.Handler,int,java.lang.Object)>($r6, 111, null);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForSubscriptionInfoReady(android.os.Handler,int,java.lang.Object)>($r6, 116, null);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForCallWaiting(android.os.Handler,int,java.lang.Object)>($r6, 108, null);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForEcmTimerReset(android.os.Handler,int,java.lang.Object)>($r6, 115, null);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForOnHoldTone(android.os.Handler,int,java.lang.Object)>($r6, 120, null);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForSuppServiceFailed(android.os.Handler,int,java.lang.Object)>($r6, 117, null);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void registerForTtyModeReceived(android.os.Handler,int,java.lang.Object)>($r6, 122, null);

        return;
    }

    private void unregisterForPhoneStates(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        com.android.internal.telephony.CallManager$CallManagerHandler r2;
        java.util.HashMap $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.HashMap mHandlerMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.internal.telephony.CallManager$CallManagerHandler) $r4;

        if r2 != null goto label1;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CallManager", "Could not find Phone handler for unregistration");

        return;

     label1:
        $r5 = r0.<com.android.internal.telephony.CallManager: java.util.HashMap mHandlerMap>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForPreciseCallStateChanged(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForDisconnect(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForNewRingingConnection(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForUnknownConnection(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForIncomingRing(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForRingbackTone(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForInCallVoicePrivacyOn(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForInCallVoicePrivacyOff(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForDisplayInfo(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForSignalInfo(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForResendIncallMute(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForMmiInitiate(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForMmiComplete(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForSuppServiceFailed(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForServiceStateChanged(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForTtyModeReceived(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>(null, 119, null);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForCdmaOtaStatusChange(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForSubscriptionInfoReady(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForCallWaiting(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForEcmTimerReset(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForOnHoldTone(android.os.Handler)>(r2);

        virtualinvoke r1.<com.android.internal.telephony.Phone: void unregisterForSuppServiceFailed(android.os.Handler)>(r2);

        return;
    }

    public boolean canConference(com.android.internal.telephony.Call)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r4;
        boolean $z0, $z1;
        java.lang.Class $r2, $r3;
        com.android.internal.telephony.Phone r5, r6;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        r5 = null;

        r6 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        r5 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label1:
        if r1 == null goto label2;

        r6 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label2:
        $r2 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public boolean canConference(com.android.internal.telephony.Call, int)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r4;
        int i0;
        boolean $z0, $z1;
        java.lang.Class $r2, $r3;
        com.android.internal.telephony.Phone r5, r6;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        i0 := @parameter1: int;

        r5 = null;

        r6 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall(int)>(i0);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(int)>(i0);

        r5 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label1:
        if r1 == null goto label2;

        r6 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label2:
        $r2 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public boolean canTransfer(com.android.internal.telephony.Call)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r2;
        boolean $z0, $z1, z2;
        com.android.internal.telephony.Phone r3, r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        r3 = null;

        r4 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        r3 = virtualinvoke $r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label1:
        if r1 == null goto label2;

        r4 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label2:
        if r4 != r3 goto label3;

        $z1 = virtualinvoke r3.<com.android.internal.telephony.Phone: boolean canTransfer()>();

        if $z1 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    public boolean canTransfer(com.android.internal.telephony.Call, int)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r2;
        int i0;
        boolean $z0, $z1, z2;
        com.android.internal.telephony.Phone r3, r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        i0 := @parameter1: int;

        r3 = null;

        r4 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall(int)>(i0);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(int)>(i0);

        r3 = virtualinvoke $r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label1:
        if r1 == null goto label2;

        r4 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label2:
        if r4 != r3 goto label3;

        $z1 = virtualinvoke r3.<com.android.internal.telephony.Phone: boolean canTransfer()>();

        if $z1 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    public void clearDisconnected()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.internal.telephony.Phone $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.internal.telephony.Phone) $r3;

        virtualinvoke $r4.<com.android.internal.telephony.Phone: void clearDisconnected()>();

        goto label1;

     label2:
        return;
    }

    public void clearDisconnected(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0, $i1;
        java.util.Iterator r1;
        com.android.internal.telephony.Phone r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Phone) $r4;

        $i1 = virtualinvoke r2.<com.android.internal.telephony.Phone: int getSubId()>();

        if $i1 != i0 goto label2;

        virtualinvoke r2.<com.android.internal.telephony.Phone: void clearDisconnected()>();

     label2:
        goto label1;

     label3:
        return;
    }

    public void conference(com.android.internal.telephony.Call) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        com.android.internal.telephony.Phone r2, $r3;
        int $i0;
        boolean $z0, $z1;
        com.android.internal.telephony.CallStateException $r4;
        com.android.internal.telephony.sip.SipPhone $r5;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $i0 = virtualinvoke $r3.<com.android.internal.telephony.Phone: int getSubId()>();

        r2 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getFgPhone(int)>($i0);

        if r2 == null goto label3;

        $z0 = r2 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z0 == 0 goto label1;

        $r5 = (com.android.internal.telephony.sip.SipPhone) r2;

        virtualinvoke $r5.<com.android.internal.telephony.sip.SipPhone: void conference(com.android.internal.telephony.Call)>(r1);

        goto label4;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean canConference(com.android.internal.telephony.Call)>(r1);

        if $z1 == 0 goto label2;

        virtualinvoke r2.<com.android.internal.telephony.Phone: void conference()>();

        goto label4;

     label2:
        $r4 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r4.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("Can\'t conference foreground and selected background call");

        throw $r4;

     label3:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", "conference: fgPhone=null");

     label4:
        return;
    }

    public com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone, java.lang.String, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1, r3, r16;
        java.lang.String r2, $r11, $r13;
        int i0, i1;
        boolean $z0, $z1, $z2, z3, z4, z5;
        com.android.internal.telephony.Call $r4, $r5, $r12;
        java.lang.StringBuilder $r6;
        com.android.internal.telephony.CallStateException $r14;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder $r17, $r18;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs $r19;
        com.android.internal.telephony.Connection $r20;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 = virtualinvoke r1.<com.android.internal.telephony.Phone: int getSubId()>();

        $z0 = specialinvoke r0.<com.android.internal.telephony.CallManager: boolean canDial(com.android.internal.telephony.Phone)>(r1);

        if $z0 != 0 goto label2;

        $r13 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>(r2);

        $z2 = virtualinvoke r1.<com.android.internal.telephony.Phone: boolean handleInCallMmiCommands(java.lang.String)>($r13);

        if $z2 == 0 goto label1;

        return null;

     label1:
        $r14 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r14.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot dial in current state");

        throw $r14;

     label2:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall(int)>(i1);

        if $z1 == 0 goto label7;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(int)>(i1);

        r3 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

        z3 = virtualinvoke $r5.<com.android.internal.telephony.Call: boolean isIdle()>();

        z4 = 1;

        z5 = z3 ^ 1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hasBgCall: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sameChannel:");

        if r3 != r1 goto label3;

        goto label4;

     label3:
        z4 = 0;

     label4:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z4);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", $r11);

        r16 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Phone getImsPhone()>();

        if r3 == r1 goto label7;

        if r16 == null goto label5;

        if r16 == r3 goto label7;

     label5:
        if z5 == 0 goto label6;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", "Hangup");

        $r12 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(int)>(i1);

        virtualinvoke $r12.<com.android.internal.telephony.Call: void hangup()>();

        goto label7;

     label6:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", "Switch");

        virtualinvoke r3.<com.android.internal.telephony.Phone: void switchHoldingAndActive()>();

     label7:
        $r17 = new com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder;

        specialinvoke $r17.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: void <init>()>();

        $r18 = virtualinvoke $r17.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder setVideoState(int)>(i0);

        $r19 = virtualinvoke $r18.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: com.android.internal.telephony.PhoneInternalInterface$DialArgs build()>();

        $r20 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.PhoneInternalInterface$DialArgs)>(r2, $r19);

        return $r20;
    }

    public com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone, java.lang.String, com.android.internal.telephony.UUSInfo, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        java.lang.String r2;
        com.android.internal.telephony.UUSInfo r3;
        int i0;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder $r4, $r5, $r6;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs $r7;
        com.android.internal.telephony.Connection $r8;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.telephony.UUSInfo;

        i0 := @parameter3: int;

        $r4 = new com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder;

        specialinvoke $r4.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder setUusInfo(com.android.internal.telephony.UUSInfo)>(r3);

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder setVideoState(int)>(i0);

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: com.android.internal.telephony.PhoneInternalInterface$DialArgs build()>();

        $r8 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.PhoneInternalInterface$DialArgs)>(r2, $r7);

        return $r8;
    }

    public void explicitCallTransfer(com.android.internal.telephony.Call) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        boolean $z0;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean canTransfer(com.android.internal.telephony.Call)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        virtualinvoke $r2.<com.android.internal.telephony.Phone: void explicitCallTransfer()>();

     label1:
        return;
    }

    public com.android.internal.telephony.Call getActiveFgCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, r3;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Phone r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List)>($r2);

        r3 = r1;

        if r1 != null goto label2;

        r4 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        if r4 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = virtualinvoke r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getForegroundCall()>();

     label2:
        return r3;
    }

    public com.android.internal.telephony.Call getActiveFgCall(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        com.android.internal.telephony.Call r1, r3;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Phone r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List,int)>($r2, i0);

        r3 = r1;

        if r1 != null goto label2;

        r4 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getPhone(int)>(i0);

        if r4 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = virtualinvoke r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getForegroundCall()>();

     label2:
        return r3;
    }

    public com.android.internal.telephony.Call$State getActiveFgCallState()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        com.android.internal.telephony.Call$State $r2, $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        return $r3;

     label1:
        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        return $r2;
    }

    public com.android.internal.telephony.Call$State getActiveFgCallState(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        com.android.internal.telephony.Call r1;
        com.android.internal.telephony.Call$State $r2, $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(int)>(i0);

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        return $r3;

     label1:
        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        return $r2;
    }

    public java.util.List getBackgroundCalls()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getBgCallConnections()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: java.util.ArrayList getConnections()>();

        return $r3;

     label1:
        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mEmptyConnections>;

        return $r2;
    }

    public com.android.internal.telephony.Phone getBgPhone()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;
    }

    public com.android.internal.telephony.Phone getDefaultPhone()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        return $r1;
    }

    public java.util.List getFgCallConnections()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: java.util.ArrayList getConnections()>();

        return $r3;

     label1:
        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mEmptyConnections>;

        return $r2;
    }

    public java.util.List getFgCallConnections(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        com.android.internal.telephony.Call r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(int)>(i0);

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: java.util.ArrayList getConnections()>();

        return $r3;

     label1:
        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mEmptyConnections>;

        return $r2;
    }

    public com.android.internal.telephony.Phone getFgPhone()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;
    }

    public com.android.internal.telephony.Phone getFgPhone(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(int)>(i0);

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;
    }

    public com.android.internal.telephony.Call getFirstActiveBgCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, r3;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Phone r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List)>($r2);

        r3 = r1;

        if r1 != null goto label2;

        r4 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        if r4 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = virtualinvoke r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

     label2:
        return r3;
    }

    public com.android.internal.telephony.Call getFirstActiveBgCall(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        com.android.internal.telephony.Phone r1;
        com.android.internal.telephony.Call r2, $r4, r5;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getPhone(int)>(i0);

        $z0 = specialinvoke r0.<com.android.internal.telephony.CallManager: boolean hasMoreThanOneHoldingCall(int)>(i0);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

        return $r4;

     label1:
        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List,int)>($r3, i0);

        r5 = r2;

        if r2 != null goto label3;

        if r1 != null goto label2;

        r5 = null;

        goto label3;

     label2:
        r5 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

     label3:
        return r5;
    }

    public com.android.internal.telephony.Call getFirstActiveRingingCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, r3;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Phone r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List)>($r2);

        r3 = r1;

        if r1 != null goto label2;

        r4 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        if r4 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = virtualinvoke r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

     label2:
        return r3;
    }

    public com.android.internal.telephony.Call getFirstActiveRingingCall(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        com.android.internal.telephony.Phone r1;
        com.android.internal.telephony.Call r2, r4;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getPhone(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List,int)>($r3, i0);

        r4 = r2;

        if r2 != null goto label2;

        if r1 != null goto label1;

        r4 = null;

        goto label2;

     label1:
        r4 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

     label2:
        return r4;
    }

    public java.util.List getForegroundCalls()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public boolean getMute()
    {
        com.android.internal.telephony.CallManager r0;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.telephony.Call $r1, $r3;
        com.android.internal.telephony.Phone $r2, $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z3 = virtualinvoke $r4.<com.android.internal.telephony.Phone: boolean getMute()>();

        return $z3;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveBgCall()>();

        if $z1 == 0 goto label2;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z2 = virtualinvoke $r2.<com.android.internal.telephony.Phone: boolean getMute()>();

        return $z2;

     label2:
        return 0;
    }

    public java.util.List getPendingMmiCodes(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CallManager", "getPendingMmiCodes not implemented");

        return null;
    }

    public com.android.internal.telephony.Phone getPhoneInCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1;
        com.android.internal.telephony.Phone r6;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall()>();

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall()>();

        r6 = virtualinvoke $r5.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        goto label3;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z1 != 0 goto label2;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        r6 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        goto label3;

     label2:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()>();

        r6 = virtualinvoke $r3.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label3:
        return r6;
    }

    public java.lang.Object getRegistrantIdentifier()
    {
        com.android.internal.telephony.CallManager r0;
        java.lang.Object $r1;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.lang.Object mRegistrantidentifier>;

        return $r1;
    }

    public java.util.List getRingingCalls()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public com.android.internal.telephony.Phone getRingingPhone()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;
    }

    public com.android.internal.telephony.Phone getRingingPhone(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall(int)>(i0);

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;
    }

    public int getServiceState()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.internal.telephony.Phone $r4;
        android.telephony.ServiceState $r5;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 = 1;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        i1 = i0;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.internal.telephony.Phone) $r3;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        i1 = virtualinvoke $r5.<android.telephony.ServiceState: int getState()>();

        if i1 != 0 goto label2;

        goto label6;

     label2:
        if i1 != 1 goto label4;

        if i0 == 2 goto label3;

        i2 = i0;

        if i0 != 3 goto label5;

     label3:
        i2 = i1;

        goto label5;

     label4:
        i2 = i0;

        if i1 != 2 goto label5;

        i2 = i0;

        if i0 != 3 goto label5;

        i2 = i1;

     label5:
        i0 = i2;

        goto label1;

     label6:
        return i1;
    }

    public int getServiceState(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0, $i1, i2, i3, i4;
        java.util.Iterator r1;
        com.android.internal.telephony.Phone r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.telephony.ServiceState $r5;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        i2 = 1;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        i3 = i2;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Phone) $r4;

        i4 = i2;

        $i1 = virtualinvoke r2.<com.android.internal.telephony.Phone: int getSubId()>();

        if $i1 != i0 goto label5;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        i3 = virtualinvoke $r5.<android.telephony.ServiceState: int getState()>();

        if i3 != 0 goto label2;

        goto label6;

     label2:
        if i3 != 1 goto label4;

        if i2 == 2 goto label3;

        i4 = i2;

        if i2 != 3 goto label5;

     label3:
        i4 = i3;

        goto label5;

     label4:
        i4 = i2;

        if i3 != 2 goto label5;

        i4 = i2;

        if i2 != 3 goto label5;

        i4 = i3;

     label5:
        i2 = i4;

        goto label1;

     label6:
        return i3;
    }

    public com.android.internal.telephony.PhoneConstants$State getState()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.Iterator r1;
        com.android.internal.telephony.Phone r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.internal.telephony.PhoneConstants$State $r5, $r6, $r7, $r8, $r9, r10, r11;

        r0 := @this: com.android.internal.telephony.CallManager;

        r10 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Phone) $r4;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$State getState()>();

        $r6 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        if $r5 != $r6 goto label2;

        r11 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        goto label3;

     label2:
        r11 = r10;

        $r7 = virtualinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$State getState()>();

        $r8 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        if $r7 != $r8 goto label3;

        r11 = r10;

        $r9 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if r10 != $r9 goto label3;

        r11 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

     label3:
        r10 = r11;

        goto label1;

     label4:
        return r10;
    }

    public com.android.internal.telephony.PhoneConstants$State getState(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0, $i1;
        java.util.Iterator r1;
        com.android.internal.telephony.Phone r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.internal.telephony.PhoneConstants$State $r5, $r6, $r7, $r8, $r9, r10, r11;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        r10 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Phone) $r4;

        r11 = r10;

        $i1 = virtualinvoke r2.<com.android.internal.telephony.Phone: int getSubId()>();

        if $i1 != i0 goto label3;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$State getState()>();

        $r6 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        if $r5 != $r6 goto label2;

        r11 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        goto label3;

     label2:
        r11 = r10;

        $r7 = virtualinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$State getState()>();

        $r8 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        if $r7 != $r8 goto label3;

        r11 = r10;

        $r9 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if r10 != $r9 goto label3;

        r11 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

     label3:
        r10 = r11;

        goto label1;

     label4:
        return r10;
    }

    public boolean hasActiveBgCall()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList)>($r1);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasActiveBgCall(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList,int)>($r1, i0);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasActiveFgCall()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList)>($r1);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasActiveFgCall(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList,int)>($r1, i0);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasActiveRingingCall()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList)>($r1);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasActiveRingingCall(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList,int)>($r1, i0);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasDisconnectedBgCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call$State $r1;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Call $r3;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r1 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        $r3 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList,com.android.internal.telephony.Call$State)>($r2, $r1);

        if $r3 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasDisconnectedBgCall(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        com.android.internal.telephony.Call$State $r1;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Call $r3;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r1 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        $r3 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList,com.android.internal.telephony.Call$State,int)>($r2, $r1, i0);

        if $r3 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasDisconnectedFgCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call$State $r1;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Call $r3;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r1 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        $r3 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList,com.android.internal.telephony.Call$State)>($r2, $r1);

        if $r3 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasDisconnectedFgCall(int)
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        com.android.internal.telephony.Call$State $r1;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Call $r3;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r1 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        $r3 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList,com.android.internal.telephony.Call$State,int)>($r2, $r1, i0);

        if $r3 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void registerForCallWaiting(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mCallWaitingRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForCdmaOtaStatusChange(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mCdmaOtaStatusChangeRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForDisconnect(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mDisconnectRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForDisplayInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mDisplayInfoRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForEcmTimerReset(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mEcmTimerResetRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForInCallVoicePrivacyOff(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mInCallVoicePrivacyOffRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForInCallVoicePrivacyOn(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mInCallVoicePrivacyOnRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForIncomingRing(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mIncomingRingRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForMmiComplete(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", "registerForMmiComplete");

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mMmiCompleteRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForMmiInitiate(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mMmiInitiateRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForNewRingingConnection(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mNewRingingConnectionRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForOnHoldTone(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mOnHoldToneRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForPostDialCharacter(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mPostDialCharacterRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForPreciseCallStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mPreciseCallStateRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForResendIncallMute(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mResendIncallMuteRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForRingbackTone(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mRingbackToneRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForServiceStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mServiceStateChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSignalInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mSignalInfoRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSubscriptionInfoReady(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSuppServiceFailed(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mSuppServiceFailedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForTtyModeReceived(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mTtyModeReceivedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForUnknownConnection(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mUnknownConnectionRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public boolean registerPhone(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        java.util.ArrayList $r3, $r12, $r13, $r14, $r16, $r18;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r11;
        com.android.internal.telephony.Call $r15, $r17, $r19;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        if r1 == null goto label2;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registerPhone(");

        $r6 = virtualinvoke r1.<com.android.internal.telephony.Phone: java.lang.String getPhoneName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", $r11);

        $r12 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        $z1 = virtualinvoke $r12.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone> = r1;

     label1:
        $r13 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r14 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        $r15 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        $r16 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r17 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        $r18 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r19 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getForegroundCall()>();

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        specialinvoke r0.<com.android.internal.telephony.CallManager: void registerForPhoneStates(com.android.internal.telephony.Phone)>(r1);

        return 1;

     label2:
        return 0;
    }

    public void rejectCall(com.android.internal.telephony.Call) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        virtualinvoke $r2.<com.android.internal.telephony.Phone: void rejectCall()>();

        return;
    }

    public boolean sendBurstDtmf(java.lang.String, int, int, android.os.Message)
    {
        com.android.internal.telephony.CallManager r0;
        java.lang.String r1;
        int i0, i1;
        android.os.Message r2;
        boolean $z0;
        com.android.internal.telephony.Call $r3;
        com.android.internal.telephony.Phone $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        virtualinvoke $r4.<com.android.internal.telephony.Phone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>(r1, i0, i1, r2);

        return 1;

     label1:
        return 0;
    }

    public boolean sendDtmf(char)
    {
        com.android.internal.telephony.CallManager r0;
        char c0;
        boolean $z0, z1;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        c0 := @parameter0: char;

        z1 = 0;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        virtualinvoke $r2.<com.android.internal.telephony.Phone: void sendDtmf(char)>(c0);

        z1 = 1;

     label1:
        return z1;
    }

    public boolean sendUssdResponse(com.android.internal.telephony.Phone, java.lang.String)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        java.lang.String r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        r2 := @parameter1: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CallManager", "sendUssdResponse not implemented");

        return 0;
    }

    public void setEchoSuppressionEnabled()
    {
        com.android.internal.telephony.CallManager r0;
        boolean $z0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        virtualinvoke $r2.<com.android.internal.telephony.Phone: void setEchoSuppressionEnabled()>();

     label1:
        return;
    }

    public void setMute(boolean)
    {
        com.android.internal.telephony.CallManager r0;
        boolean z0, $z1;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z1 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        virtualinvoke $r2.<com.android.internal.telephony.Phone: void setMute(boolean)>(z0);

     label1:
        return;
    }

    public boolean startDtmf(char)
    {
        com.android.internal.telephony.CallManager r0;
        char c0;
        boolean $z0, z1;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        c0 := @parameter0: char;

        z1 = 0;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        virtualinvoke $r2.<com.android.internal.telephony.Phone: void startDtmf(char)>(c0);

        z1 = 1;

     label1:
        return z1;
    }

    public void stopDtmf()
    {
        com.android.internal.telephony.CallManager r0;
        boolean $z0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.CallManager;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getFgPhone()>();

        virtualinvoke $r1.<com.android.internal.telephony.Phone: void stopDtmf()>();

     label1:
        return;
    }

    public void unregisterForCallWaiting(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mCallWaitingRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForCdmaOtaStatusChange(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mCdmaOtaStatusChangeRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForDisconnect(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mDisconnectRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForDisplayInfo(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mDisplayInfoRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForEcmTimerReset(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mEcmTimerResetRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForInCallVoicePrivacyOff(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mInCallVoicePrivacyOffRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForInCallVoicePrivacyOn(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mInCallVoicePrivacyOnRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForIncomingRing(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mIncomingRingRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForMmiComplete(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mMmiCompleteRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForMmiInitiate(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mMmiInitiateRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNewRingingConnection(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mNewRingingConnectionRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForOnHoldTone(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mOnHoldToneRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForPostDialCharacter(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mPostDialCharacterRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForPreciseCallStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mPreciseCallStateRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForResendIncallMute(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mResendIncallMuteRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForRingbackTone(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mRingbackToneRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForServiceStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mServiceStateChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSignalInfo(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mSignalInfoRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSubscriptionInfoReady(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSuppServiceFailed(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mSuppServiceFailedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForTtyModeReceived(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mTtyModeReceivedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForUnknownConnection(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.RegistrantList mUnknownConnectionRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterPhone(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1, $r18, $r22, r24;
        java.util.ArrayList $r2, $r11, $r12, $r14, $r16, $r19, $r20;
        boolean $z0, $z5;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r10;
        com.android.internal.telephony.Call $r13, $r15, $r17;
        java.lang.Object $r21;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        if r1 == null goto label3;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unregisterPhone(");

        $r5 = virtualinvoke r1.<com.android.internal.telephony.Phone: java.lang.String getPhoneName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", $r10);

        r24 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Phone getImsPhone()>();

        if r24 == null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.CallManager: void unregisterPhone(com.android.internal.telephony.Phone)>(r24);

     label1:
        $r11 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        virtualinvoke $r11.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r12 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        $r13 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

        virtualinvoke $r12.<java.util.ArrayList: boolean remove(java.lang.Object)>($r13);

        $r14 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r15 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

        virtualinvoke $r14.<java.util.ArrayList: boolean remove(java.lang.Object)>($r15);

        $r16 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r17 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getForegroundCall()>();

        virtualinvoke $r16.<java.util.ArrayList: boolean remove(java.lang.Object)>($r17);

        specialinvoke r0.<com.android.internal.telephony.CallManager: void unregisterForPhoneStates(com.android.internal.telephony.Phone)>(r1);

        $r18 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        if r1 != $r18 goto label3;

        $r19 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        $z5 = virtualinvoke $r19.<java.util.ArrayList: boolean isEmpty()>();

        if $z5 == 0 goto label2;

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone> = null;

        goto label3;

     label2:
        $r20 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        $r21 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r22 = (com.android.internal.telephony.Phone) $r21;

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone> = $r22;

     label3:
        return;
    }
}
