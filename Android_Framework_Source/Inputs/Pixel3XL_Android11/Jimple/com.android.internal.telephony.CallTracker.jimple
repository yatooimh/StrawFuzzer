public abstract class com.android.internal.telephony.CallTracker extends android.os.Handler
{
    private static final boolean DBG_POLL;
    protected static final int EVENT_CALL_STATE_CHANGE;
    protected static final int EVENT_CALL_WAITING_INFO_CDMA;
    protected static final int EVENT_CONFERENCE_RESULT;
    protected static final int EVENT_ECT_RESULT;
    protected static final int EVENT_EXIT_ECM_RESPONSE_CDMA;
    protected static final int EVENT_GET_LAST_CALL_FAIL_CAUSE;
    protected static final int EVENT_OPERATION_COMPLETE;
    protected static final int EVENT_POLL_CALLS_RESULT;
    protected static final int EVENT_RADIO_AVAILABLE;
    protected static final int EVENT_RADIO_NOT_AVAILABLE;
    protected static final int EVENT_REPOLL_AFTER_DELAY;
    protected static final int EVENT_SEPARATE_RESULT;
    protected static final int EVENT_SWITCH_RESULT;
    protected static final int EVENT_THREE_WAY_DIAL_BLANK_FLASH;
    protected static final int EVENT_THREE_WAY_DIAL_L2_RESULT_CDMA;
    static final int POLL_DELAY_MSEC;
    private final int VALID_COMPARE_LENGTH;
    public com.android.internal.telephony.CommandsInterface mCi;
    protected java.util.ArrayList mHandoverConnections;
    protected android.os.Message mLastRelevantPoll;
    protected boolean mNeedsPoll;
    protected boolean mNumberConverted;
    protected int mPendingOperations;

    public void <init>()
    {
        com.android.internal.telephony.CallTracker r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.telephony.CallTracker;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.CallTracker: java.util.ArrayList mHandoverConnections> = $r1;

        r0.<com.android.internal.telephony.CallTracker: boolean mNumberConverted> = 0;

        r0.<com.android.internal.telephony.CallTracker: int VALID_COMPARE_LENGTH> = 3;

        return;
    }

    private boolean checkNoOperationsPending()
    {
        com.android.internal.telephony.CallTracker r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CallTracker;

        $i0 = r0.<com.android.internal.telephony.CallTracker: int mPendingOperations>;

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean compareGid1(com.android.internal.telephony.Phone, java.lang.String)
    {
        com.android.internal.telephony.CallTracker r0;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r17, $r19;
        java.lang.String $r5, $r12, $r13, r15, r16, $r18, r21;
        boolean $z0, $z1, z2;
        com.android.internal.telephony.Phone r14;

        r0 := @this: com.android.internal.telephony.CallTracker;

        r14 := @parameter0: com.android.internal.telephony.Phone;

        r15 := @parameter1: java.lang.String;

        r16 = virtualinvoke r14.<com.android.internal.telephony.Phone: java.lang.String getGroupIdLevel1()>();

        i0 = virtualinvoke r15.<java.lang.String: int length()>();

        z2 = 1;

        if r15 == null goto label6;

        $z0 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        goto label6;

     label1:
        if r16 == null goto label2;

        $i1 = virtualinvoke r16.<java.lang.String: int length()>();

        if $i1 < i0 goto label2;

        $r13 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r15);

        if $z1 != 0 goto label3;

     label2:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gid1 ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" serviceGid1 ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>($r18);

        z2 = 0;

     label3:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("compareGid1 is ");

        if z2 == 0 goto label4;

        r21 = "Same";

        goto label5;

     label4:
        r21 = "Different";

     label5:
        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r12 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>($r12);

        return z2;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("compareGid1 serviceGid is empty, return ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>($r5);

        return 1;
    }

    public void cleanupCalls()
    {
        com.android.internal.telephony.CallTracker r0;

        r0 := @this: com.android.internal.telephony.CallTracker;

        return;
    }

    protected java.lang.String convertNumberIfNecessary(com.android.internal.telephony.Phone, java.lang.String)
    {
        com.android.internal.telephony.CallTracker r0;
        java.lang.String r1, $r11, $r15, $r17, r24, r25, r28, r29, r30;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.telephony.CarrierConfigManager $r5;
        java.lang.StringBuilder $r6, $r12, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.internal.telephony.Phone r20;
        java.lang.String[] r21, r27;
        android.os.PersistableBundle r22;

        r0 := @this: com.android.internal.telephony.CallTracker;

        r20 := @parameter0: com.android.internal.telephony.Phone;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label01;

        return r1;

     label01:
        r21 = null;

        $r3 = virtualinvoke r20.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r5 = (android.telephony.CarrierConfigManager) $r4;

        $i1 = virtualinvoke r20.<com.android.internal.telephony.Phone: int getSubId()>();

        r22 = virtualinvoke $r5.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i1);

        if r22 == null goto label02;

        r21 = virtualinvoke r22.<android.os.PersistableBundle: java.lang.String[] getStringArray(java.lang.String)>("dial_string_replace_string_array");

     label02:
        if r21 != null goto label03;

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>("convertNumberIfNecessary convertMaps is null");

        return r1;

     label03:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("convertNumberIfNecessary Roaming convertMaps.length ");

        $i2 = lengthof r21;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dialNumber.length() ");

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>($r11);

        $i4 = lengthof r21;

        if $i4 < 1 goto label12;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 >= 3 goto label04;

        goto label12;

     label04:
        i0 = lengthof r21;

        i9 = 0;

     label05:
        r24 = "";

        if i9 >= i0 goto label10;

        r25 = r21[i9];

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("convertNumberIfNecessary: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>($r15);

        r27 = virtualinvoke r25.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        if r27 == null goto label09;

        $i6 = lengthof r27;

        if $i6 <= 1 goto label09;

        r28 = r27[0];

        r24 = r27[1];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r28);

        if $z0 != 0 goto label09;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z1 == 0 goto label09;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r24);

        if $z2 != 0 goto label08;

        $z3 = virtualinvoke r24.<java.lang.String: boolean endsWith(java.lang.String)>("MDN");

        if $z3 == 0 goto label08;

        r29 = virtualinvoke r20.<com.android.internal.telephony.Phone: java.lang.String getLine1Number()>();

        r30 = "";

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r29);

        if $z4 != 0 goto label07;

        $z5 = virtualinvoke r29.<java.lang.String: boolean startsWith(java.lang.String)>("+");

        if $z5 == 0 goto label06;

        r30 = r29;

        goto label07;

     label06:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $i7 = virtualinvoke r24.<java.lang.String: int length()>();

        $i8 = $i7 - 3;

        $r17 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int,int)>(0, $i8);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        r30 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        r24 = r30;

        goto label10;

     label08:
        goto label10;

     label09:
        i9 = i9 + 1;

        goto label05;

     label10:
        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r24);

        if $z6 != 0 goto label11;

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>("convertNumberIfNecessary: convert service number");

        r0.<com.android.internal.telephony.CallTracker: boolean mNumberConverted> = 1;

        return r24;

     label11:
        return r1;

     label12:
        return r1;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.CallTracker r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.lang.StringBuilder $r3, $r7, $r11;
        int $i0;
        java.lang.String $r6, $r10, $r15;
        boolean $z0;
        android.os.Message $r13;
        java.io.FileDescriptor r16;

        r0 := @this: com.android.internal.telephony.CallTracker;

        r16 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("CallTracker:");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingOperations=");

        $i0 = r0.<com.android.internal.telephony.CallTracker: int mPendingOperations>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNeedsPoll=");

        $z0 = r0.<com.android.internal.telephony.CallTracker: boolean mNeedsPoll>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastRelevantPoll=");

        $r13 = r0.<com.android.internal.telephony.CallTracker: android.os.Message mLastRelevantPoll>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        return;
    }

    protected com.android.internal.telephony.Connection getHoConnection(com.android.internal.telephony.DriverCall)
    {
        com.android.internal.telephony.CallTracker r0;
        java.util.ArrayList $r1, $r2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3, $r17;
        java.lang.StringBuilder $r4, $r12, $r18, $r26;
        java.lang.String $r6, $r8, $r14, $r16, $r20, $r22, $r23, $r24, $r25, $r28, $r30;
        com.android.internal.telephony.Call$State $r9, $r11;
        com.android.internal.telephony.DriverCall$State $r10;
        com.android.internal.telephony.DriverCall r31;
        java.util.Iterator r32, r36;
        com.android.internal.telephony.Connection r33, r37;

        r0 := @this: com.android.internal.telephony.CallTracker;

        r31 := @parameter0: com.android.internal.telephony.DriverCall;

        $r1 = r0.<com.android.internal.telephony.CallTracker: java.util.ArrayList mHandoverConnections>;

        r32 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r17 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        r33 = (com.android.internal.telephony.Connection) $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getHoConnection - compare number: hoConn= ");

        $r20 = virtualinvoke r33.<com.android.internal.telephony.Connection: java.lang.String toString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>($r22);

        $r23 = virtualinvoke r33.<com.android.internal.telephony.Connection: java.lang.String getAddress()>();

        if $r23 == null goto label2;

        $r24 = virtualinvoke r33.<com.android.internal.telephony.Connection: java.lang.String getAddress()>();

        $r25 = r31.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $z2 = virtualinvoke $r24.<java.lang.String: boolean contains(java.lang.CharSequence)>($r25);

        if $z2 == 0 goto label2;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getHoConnection: Handover connection match found = ");

        $r28 = virtualinvoke r33.<com.android.internal.telephony.Connection: java.lang.String toString()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>($r30);

        return r33;

     label2:
        goto label1;

     label3:
        $r2 = r0.<com.android.internal.telephony.CallTracker: java.util.ArrayList mHandoverConnections>;

        r36 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r3 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (com.android.internal.telephony.Connection) $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getHoConnection: compare state hoConn= ");

        $r6 = virtualinvoke r37.<com.android.internal.telephony.Connection: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>($r8);

        $r9 = virtualinvoke r37.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getStateBeforeHandover()>();

        $r10 = r31.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r11 = staticinvoke <com.android.internal.telephony.Call: com.android.internal.telephony.Call$State stateFromDCState(com.android.internal.telephony.DriverCall$State)>($r10);

        if $r9 != $r11 goto label5;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getHoConnection: Handover connection match found = ");

        $r14 = virtualinvoke r37.<com.android.internal.telephony.Connection: java.lang.String toString()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>($r16);

        return r37;

     label5:
        goto label4;

     label6:
        return null;
    }

    protected abstract com.android.internal.telephony.Phone getPhone();

    public com.android.internal.telephony.Connection getRingingHandoverConnection()
    {
        com.android.internal.telephony.CallTracker r0;
        java.util.Iterator r1;
        com.android.internal.telephony.Connection r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        com.android.internal.telephony.Call $r5;

        r0 := @this: com.android.internal.telephony.CallTracker;

        $r3 = r0.<com.android.internal.telephony.CallTracker: java.util.ArrayList mHandoverConnections>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Connection) $r4;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call getCall()>();

        $z1 = virtualinvoke $r5.<com.android.internal.telephony.Call: boolean isRinging()>();

        if $z1 == 0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }

    public abstract com.android.internal.telephony.PhoneConstants$State getState();

    public abstract void handleMessage(android.os.Message);

    protected abstract void handlePollCalls(android.os.AsyncResult);

    protected void handleRadioAvailable()
    {
        com.android.internal.telephony.CallTracker r0;

        r0 := @this: com.android.internal.telephony.CallTracker;

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void pollCallsWhenSafe()>();

        return;
    }

    protected boolean isCommandExceptionRadioNotAvailable(java.lang.Throwable)
    {
        com.android.internal.telephony.CallTracker r0;
        java.lang.Throwable r1;
        boolean $z0, z1;
        com.android.internal.telephony.CommandException $r2;
        com.android.internal.telephony.CommandException$Error $r3, $r4;

        r0 := @this: com.android.internal.telephony.CallTracker;

        r1 := @parameter0: java.lang.Throwable;

        if r1 == null goto label1;

        $z0 = r1 instanceof com.android.internal.telephony.CommandException;

        if $z0 == 0 goto label1;

        $r2 = (com.android.internal.telephony.CommandException) r1;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $r4 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error RADIO_NOT_AVAILABLE>;

        if $r3 != $r4 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    protected abstract void log(java.lang.String);

    protected void notifySrvccState(com.android.internal.telephony.Call$SrvccState, java.util.ArrayList)
    {
        com.android.internal.telephony.CallTracker r0;
        java.util.ArrayList r1, $r6, $r7, $r11;
        com.android.internal.telephony.Call$SrvccState $r2, $r3, r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r12, $r13;

        r0 := @this: com.android.internal.telephony.CallTracker;

        r8 := @parameter0: com.android.internal.telephony.Call$SrvccState;

        r1 := @parameter1: java.util.ArrayList;

        $r2 = <com.android.internal.telephony.Call$SrvccState: com.android.internal.telephony.Call$SrvccState STARTED>;

        if r8 != $r2 goto label1;

        if r1 == null goto label1;

        $r7 = r0.<com.android.internal.telephony.CallTracker: java.util.ArrayList mHandoverConnections>;

        virtualinvoke $r7.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r1);

        goto label2;

     label1:
        $r3 = <com.android.internal.telephony.Call$SrvccState: com.android.internal.telephony.Call$SrvccState COMPLETED>;

        if r8 == $r3 goto label2;

        $r6 = r0.<com.android.internal.telephony.CallTracker: java.util.ArrayList mHandoverConnections>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifySrvccState: mHandoverConnections= ");

        $r11 = r0.<com.android.internal.telephony.CallTracker: java.util.ArrayList mHandoverConnections>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: void log(java.lang.String)>($r13);

        return;
    }

    protected android.os.Message obtainNoPollCompleteMessage(int)
    {
        com.android.internal.telephony.CallTracker r0;
        int i0, $i1, $i2;
        android.os.Message $r1;

        r0 := @this: com.android.internal.telephony.CallTracker;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.telephony.CallTracker: int mPendingOperations>;

        $i2 = $i1 + 1;

        r0.<com.android.internal.telephony.CallTracker: int mPendingOperations> = $i2;

        r0.<com.android.internal.telephony.CallTracker: android.os.Message mLastRelevantPoll> = null;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallTracker: android.os.Message obtainMessage(int)>(i0);

        return $r1;
    }

    protected void pollCallsAfterDelay()
    {
        com.android.internal.telephony.CallTracker r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.CallTracker;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallTracker: android.os.Message obtainMessage()>();

        r1.<android.os.Message: int what> = 3;

        virtualinvoke r0.<com.android.internal.telephony.CallTracker: boolean sendMessageDelayed(android.os.Message,long)>(r1, 250L);

        return;
    }

    protected void pollCallsWhenSafe()
    {
        com.android.internal.telephony.CallTracker r0;
        android.os.Message r1;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.CallTracker;

        r0.<com.android.internal.telephony.CallTracker: boolean mNeedsPoll> = 1;

        $z0 = specialinvoke r0.<com.android.internal.telephony.CallTracker: boolean checkNoOperationsPending()>();

        if $z0 == 0 goto label1;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallTracker: android.os.Message obtainMessage(int)>(1);

        r0.<com.android.internal.telephony.CallTracker: android.os.Message mLastRelevantPoll> = r1;

        $r2 = r0.<com.android.internal.telephony.CallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getCurrentCalls(android.os.Message)>(r1);

     label1:
        return;
    }

    public abstract void registerForVoiceCallEnded(android.os.Handler, int, java.lang.Object);

    public abstract void registerForVoiceCallStarted(android.os.Handler, int, java.lang.Object);

    public abstract void unregisterForVoiceCallEnded(android.os.Handler);

    public abstract void unregisterForVoiceCallStarted(android.os.Handler);

    public static void <clinit>()
    {
        <com.android.internal.telephony.CallTracker: int POLL_DELAY_MSEC> = 250;

        <com.android.internal.telephony.CallTracker: int EVENT_THREE_WAY_DIAL_L2_RESULT_CDMA> = 16;

        <com.android.internal.telephony.CallTracker: int EVENT_THREE_WAY_DIAL_BLANK_FLASH> = 20;

        <com.android.internal.telephony.CallTracker: int EVENT_SWITCH_RESULT> = 8;

        <com.android.internal.telephony.CallTracker: int EVENT_SEPARATE_RESULT> = 12;

        <com.android.internal.telephony.CallTracker: int EVENT_REPOLL_AFTER_DELAY> = 3;

        <com.android.internal.telephony.CallTracker: int EVENT_RADIO_NOT_AVAILABLE> = 10;

        <com.android.internal.telephony.CallTracker: int EVENT_RADIO_AVAILABLE> = 9;

        <com.android.internal.telephony.CallTracker: int EVENT_POLL_CALLS_RESULT> = 1;

        <com.android.internal.telephony.CallTracker: int EVENT_OPERATION_COMPLETE> = 4;

        <com.android.internal.telephony.CallTracker: int EVENT_GET_LAST_CALL_FAIL_CAUSE> = 5;

        <com.android.internal.telephony.CallTracker: int EVENT_EXIT_ECM_RESPONSE_CDMA> = 14;

        <com.android.internal.telephony.CallTracker: int EVENT_ECT_RESULT> = 13;

        <com.android.internal.telephony.CallTracker: int EVENT_CONFERENCE_RESULT> = 11;

        <com.android.internal.telephony.CallTracker: int EVENT_CALL_WAITING_INFO_CDMA> = 15;

        <com.android.internal.telephony.CallTracker: int EVENT_CALL_STATE_CHANGE> = 2;

        <com.android.internal.telephony.CallTracker: boolean DBG_POLL> = 0;

        return;
    }
}
