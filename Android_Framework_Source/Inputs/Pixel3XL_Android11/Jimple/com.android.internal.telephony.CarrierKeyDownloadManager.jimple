public class com.android.internal.telephony.CarrierKeyDownloadManager extends android.os.Handler
{
    private static final int[] CARRIER_KEY_TYPES;
    private static final java.lang.String CERT_BEGIN_STRING;
    private static final java.lang.String CERT_END_STRING;
    private static final int DAY_IN_MILLIS;
    private static final int END_RENEWAL_WINDOW_DAYS;
    private static final int EVENT_ALARM_OR_CONFIG_CHANGE;
    private static final int EVENT_DOWNLOAD_COMPLETE;
    private static final java.lang.String INTENT_KEY_RENEWAL_ALARM_PREFIX;
    private static final java.lang.String JSON_CARRIER_KEYS;
    private static final java.lang.String JSON_CERTIFICATE;
    private static final java.lang.String JSON_CERTIFICATE_ALTERNATE;
    private static final java.lang.String JSON_IDENTIFIER;
    private static final java.lang.String JSON_TYPE;
    private static final java.lang.String JSON_TYPE_VALUE_EPDG;
    private static final java.lang.String JSON_TYPE_VALUE_WLAN;
    private static final java.lang.String LOG_TAG;
    public static final java.lang.String MCC;
    private static final java.lang.String MCC_MNC_PREF_TAG;
    public static final java.lang.String MNC;
    private static final java.lang.String SEPARATOR;
    private static final int START_RENEWAL_WINDOW_DAYS;
    private boolean mAllowedOverMeteredNetwork;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private final android.content.Context mContext;
    public final android.app.DownloadManager mDownloadManager;
    public int mKeyAvailability;
    private final com.android.internal.telephony.Phone mPhone;
    private java.lang.String mURL;

    static void <clinit>()
    {
        int[] $r0;

        <com.android.internal.telephony.CarrierKeyDownloadManager: int START_RENEWAL_WINDOW_DAYS> = 21;

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String SEPARATOR> = ":";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String MNC> = "MNC";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String MCC_MNC_PREF_TAG> = "CARRIER_KEY_DM_MCC_MNC";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String MCC> = "MCC";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String LOG_TAG> = "CarrierKeyDownloadManager";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String JSON_TYPE_VALUE_WLAN> = "WLAN";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String JSON_TYPE_VALUE_EPDG> = "EPDG";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String JSON_TYPE> = "key-type";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String JSON_IDENTIFIER> = "key-identifier";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String JSON_CERTIFICATE_ALTERNATE> = "public-key";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String JSON_CERTIFICATE> = "certificate";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String JSON_CARRIER_KEYS> = "carrier-keys";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String INTENT_KEY_RENEWAL_ALARM_PREFIX> = "com.android.internal.telephony.carrier_key_download_alarm";

        <com.android.internal.telephony.CarrierKeyDownloadManager: int EVENT_DOWNLOAD_COMPLETE> = 1;

        <com.android.internal.telephony.CarrierKeyDownloadManager: int EVENT_ALARM_OR_CONFIG_CHANGE> = 0;

        <com.android.internal.telephony.CarrierKeyDownloadManager: int END_RENEWAL_WINDOW_DAYS> = 7;

        <com.android.internal.telephony.CarrierKeyDownloadManager: int DAY_IN_MILLIS> = 86400000;

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String CERT_END_STRING> = "-----END CERTIFICATE-----";

        <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String CERT_BEGIN_STRING> = "-----BEGIN CERTIFICATE-----";

        $r0 = newarray (int)[2];

        $r0[0] = 1;

        $r0[1] = 2;

        <com.android.internal.telephony.CarrierKeyDownloadManager: int[] CARRIER_KEY_TYPES> = $r0;

        return;
    }

    public void <init>(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        com.android.internal.telephony.Phone r1, $r9;
        com.android.internal.telephony.CarrierKeyDownloadManager$1 $r4;
        android.content.Context $r5, $r13, $r15;
        android.content.IntentFilter $r6;
        java.lang.StringBuilder $r7;
        int $i0;
        java.lang.String $r11;
        android.content.BroadcastReceiver $r12;
        java.lang.Object $r16;
        android.app.DownloadManager $r17;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        r0.<com.android.internal.telephony.CarrierKeyDownloadManager: int mKeyAvailability> = 0;

        r0.<com.android.internal.telephony.CarrierKeyDownloadManager: boolean mAllowedOverMeteredNetwork> = 0;

        $r4 = new com.android.internal.telephony.CarrierKeyDownloadManager$1;

        specialinvoke $r4.<com.android.internal.telephony.CarrierKeyDownloadManager$1: void <init>(com.android.internal.telephony.CarrierKeyDownloadManager)>(r0);

        r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.BroadcastReceiver mBroadcastReceiver> = $r4;

        r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone> = r1;

        $r5 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext> = $r5;

        $r6 = new android.content.IntentFilter;

        specialinvoke $r6.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.telephony.action.CARRIER_CONFIG_CHANGED");

        virtualinvoke $r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DOWNLOAD_COMPLETE");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.android.internal.telephony.carrier_key_download_alarm");

        $r9 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r9.<com.android.internal.telephony.Phone: int getPhoneId()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<android.content.IntentFilter: void addAction(java.lang.String)>($r11);

        virtualinvoke $r6.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.internal.telephony.ACTION_CARRIER_CERTIFICATE_DOWNLOAD");

        $r13 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext>;

        $r12 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r13.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r12, $r6, null, r1);

        $r15 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("download");

        $r17 = (android.app.DownloadManager) $r16;

        r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.app.DownloadManager mDownloadManager> = $r17;

        return;
    }

    static com.android.internal.telephony.Phone access$000(com.android.internal.telephony.CarrierKeyDownloadManager)
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @parameter0: com.android.internal.telephony.CarrierKeyDownloadManager;

        $r1 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone>;

        return $r1;
    }

    private boolean carrierUsesKeys()
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        int i0, $i1, $i2, $i4, $i5, i6;
        android.content.Context $r1;
        java.lang.Object $r2;
        com.android.internal.telephony.Phone $r3;
        java.lang.String $r4, $r5;
        boolean $z0, $z1, $z2;
        android.telephony.CarrierConfigManager r6;
        android.os.PersistableBundle r7;
        int[] r8;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        $r1 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        r6 = (android.telephony.CarrierConfigManager) $r2;

        if r6 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone>;

        $i1 = virtualinvoke $r3.<com.android.internal.telephony.Phone: int getSubId()>();

        r7 = virtualinvoke r6.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i1);

        if r7 != null goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r7.<android.os.PersistableBundle: int getInt(java.lang.String)>("imsi_key_availability_int");

        r0.<com.android.internal.telephony.CarrierKeyDownloadManager: int mKeyAvailability> = $i2;

        $r4 = virtualinvoke r7.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("imsi_key_download_url_string");

        r0.<com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String mURL> = $r4;

        $z0 = virtualinvoke r7.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("allow_metered_network_for_cert_download_bool");

        r0.<com.android.internal.telephony.CarrierKeyDownloadManager: boolean mAllowedOverMeteredNetwork> = $z0;

        $r5 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String mURL>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 != 0 goto label7;

        $i4 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: int mKeyAvailability>;

        if $i4 != 0 goto label3;

        goto label7;

     label3:
        r8 = <com.android.internal.telephony.CarrierKeyDownloadManager: int[] CARRIER_KEY_TYPES>;

        i0 = lengthof r8;

        i6 = 0;

     label4:
        if i6 >= i0 goto label6;

        $i5 = r8[i6];

        $z2 = virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: boolean isKeyEnabled(int)>($i5);

        if $z2 == 0 goto label5;

        return 1;

     label5:
        i6 = i6 + 1;

        goto label4;

     label6:
        return 0;

     label7:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", "Carrier not enabled or invalid values");

        return 0;
    }

    public static java.lang.String cleanCertString(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN CERTIFICATE-----");

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("-----END CERTIFICATE-----");

        $r1 = "-----END CERTIFICATE-----";

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        return $r2;
    }

    private void cleanupDownloadPreferences(long)
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        long l0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, $r7;
        android.content.Context $r5;
        android.content.SharedPreferences $r6;
        android.content.SharedPreferences$Editor r10;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        l0 := @parameter0: long;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up download preferences: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r4);

        $r5 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext>;

        $r6 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r5);

        r10 = interfaceinvoke $r6.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        interfaceinvoke r10.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r7);

        interfaceinvoke r10.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    private void cleanupRenewalAlarms()
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        int i0;
        com.android.internal.telephony.Phone $r1;
        java.lang.StringBuilder $r2;
        android.content.Intent $r5;
        java.lang.String $r6;
        android.content.Context $r7, $r8;
        java.lang.Object $r9;
        android.app.AlarmManager $r10;
        android.app.PendingIntent r13;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", "Cleaning up existing renewal alarms");

        $r1 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone>;

        i0 = virtualinvoke $r1.<com.android.internal.telephony.Phone: int getPhoneId()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.android.internal.telephony.carrier_key_download_alarm");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new android.content.Intent;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>($r6);

        $r7 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext>;

        r13 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r7, 0, $r5, 201326592);

        $r8 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r10 = (android.app.AlarmManager) $r9;

        virtualinvoke $r10.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>(r13);

        return;
    }

    private static java.lang.String convertToString(java.io.InputStream)
    {
        java.nio.charset.Charset $r0;
        java.lang.Throwable $r3;
        java.io.InputStream r4;
        java.lang.String r9, r10;
        java.util.zip.GZIPInputStream r12;
        java.io.InputStreamReader r13;
        java.io.BufferedReader r14;
        java.lang.StringBuilder r15;
        java.io.IOException r16;

        r4 := @parameter0: java.io.InputStream;

     label1:
        r12 = new java.util.zip.GZIPInputStream;

        specialinvoke r12.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r4);

        r14 = new java.io.BufferedReader;

        r13 = new java.io.InputStreamReader;

        $r0 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r13.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r12, $r0);

        specialinvoke r14.<java.io.BufferedReader: void <init>(java.io.Reader)>(r13);

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

     label2:
        r9 = virtualinvoke r14.<java.io.BufferedReader: java.lang.String readLine()>();

     label3:
        if r9 == null goto label6;

     label4:
        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label5:
        goto label2;

     label6:
        r10 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        return r10;

     label8:
        $r3 := @caughtexception;

        r16 = (java.io.IOException) $r3;

        virtualinvoke r16.<java.io.IOException: void printStackTrace()>();

        return null;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    private boolean downloadKey()
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        long l0;
        int i1;
        java.lang.StringBuilder r1, $r2, $r7, $r39, r51, r53;
        java.lang.String $r4, $r6, $r12, $r13, $r33, $r36, $r41, $r43, r45, r46, r47, r52;
        boolean $z0, $z1;
        android.net.Uri $r14;
        android.app.DownloadManager $r19;
        android.content.Context $r20;
        android.content.SharedPreferences $r21;
        com.android.internal.telephony.Phone $r25;
        java.lang.Long $r31;
        java.lang.Exception $r38;
        android.app.DownloadManager$Request r49;
        android.content.SharedPreferences$Editor r50;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("starting download from: ");

        $r4 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String mURL>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r6);

        r45 = virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String getSimOperator()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r45);

        if $z0 != 0 goto label4;

        r46 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        r47 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int)>(3);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using values for mcc, mnc: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r12);

     label1:
        r49 = new android.app.DownloadManager$Request;

        $r13 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String mURL>;

        $r14 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r13);

        specialinvoke r49.<android.app.DownloadManager$Request: void <init>(android.net.Uri)>($r14);

        $z1 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: boolean mAllowedOverMeteredNetwork>;

        virtualinvoke r49.<android.app.DownloadManager$Request: android.app.DownloadManager$Request setAllowedOverMetered(boolean)>($z1);

        virtualinvoke r49.<android.app.DownloadManager$Request: android.app.DownloadManager$Request setVisibleInDownloadsUi(boolean)>(0);

        virtualinvoke r49.<android.app.DownloadManager$Request: android.app.DownloadManager$Request setNotificationVisibility(int)>(2);

        virtualinvoke r49.<android.app.DownloadManager$Request: android.app.DownloadManager$Request addRequestHeader(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip");

        $r19 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.app.DownloadManager mDownloadManager>;

        l0 = virtualinvoke $r19.<android.app.DownloadManager: long enqueue(android.app.DownloadManager$Request)>(r49);

        $r20 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext>;

        $r21 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r20);

        r50 = interfaceinvoke $r21.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        r52 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone>;

        i1 = virtualinvoke $r25.<com.android.internal.telephony.Phone: int getPhoneId()>();

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storing values in sharedpref mcc, mnc, days: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r33);

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CARRIER_KEY_DM_MCC_MNC");

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r36 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r50.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r36, r52);

        interfaceinvoke r50.<android.content.SharedPreferences$Editor: boolean commit()>();

     label2:
        return 1;

     label3:
        $r38 := @caughtexception;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception trying to dowload key from url: ");

        $r41 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String mURL>;

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r43);

        return 0;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", "mcc, mnc: is empty");

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static android.util.Pair getKeyInformation(byte[]) throws java.lang.Exception
    {
        java.io.ByteArrayInputStream $r0;
        java.security.cert.CertificateFactory $r1;
        java.security.cert.Certificate $r2;
        android.util.Pair $r3;
        java.security.PublicKey $r4;
        java.util.Date $r5;
        long $l0;
        java.lang.Long $r6;
        byte[] r7;
        java.security.cert.X509Certificate r9;

        r7 := @parameter0: byte[];

        $r0 = new java.io.ByteArrayInputStream;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>(r7);

        $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r2 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r0);

        r9 = (java.security.cert.X509Certificate) $r2;

        $r3 = new android.util.Pair;

        $r4 = virtualinvoke r9.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r5 = virtualinvoke r9.<java.security.cert.X509Certificate: java.util.Date getNotAfter()>();

        $l0 = virtualinvoke $r5.<java.util.Date: long getTime()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        specialinvoke $r3.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r6);

        return $r3;
    }

    private java.lang.String getMccMncSetFromPref()
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        int i0;
        android.content.SharedPreferences r1;
        com.android.internal.telephony.Phone $r3;
        android.content.Context $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8, $r9;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        $r3 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone>;

        i0 = virtualinvoke $r3.<com.android.internal.telephony.Phone: int getPhoneId()>();

        $r4 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext>;

        r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CARRIER_KEY_DM_MCC_MNC");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r8, null);

        return $r9;
    }

    private void handleAlarmOrConfigChange()
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        $z0 = specialinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: boolean carrierUsesKeys()>();

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: boolean areCarrierKeysAbsentOrExpiring()>();

        if $z1 == 0 goto label2;

        $z2 = specialinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: boolean downloadKey()>();

        if $z2 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: void resetRenewalAlarm()>();

     label1:
        goto label4;

     label2:
        return;

     label3:
        specialinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: void cleanupRenewalAlarms()>();

     label4:
        return;
    }

    private void onDownloadComplete(long, java.lang.String)
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        long l0;
        android.database.Cursor r1;
        java.lang.String $r3, $r10, $r18, r23;
        long[] $r5, $r11, $r15, $r19;
        android.app.DownloadManager $r6, $r7, $r12, $r16, $r20;
        boolean $z0;
        int $i1, $i2;
        android.os.ParcelFileDescriptor $r8;
        java.io.FileDescriptor $r9;
        java.lang.Throwable $r13, $r14, $r21, $r22;
        java.lang.Exception $r17;
        java.io.FileInputStream r26, r27, r37;
        java.lang.StringBuilder r35, r38;
        android.app.DownloadManager$Query r36;
        java.io.IOException r39, r40, r41;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        l0 := @parameter0: long;

        r23 := @parameter1: java.lang.String;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDownloadComplete: ");

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r3 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r3);

        r36 = new android.app.DownloadManager$Query;

        specialinvoke r36.<android.app.DownloadManager$Query: void <init>()>();

        $r5 = newarray (long)[1];

        $r5[0] = l0;

        virtualinvoke r36.<android.app.DownloadManager$Query: android.app.DownloadManager$Query setFilterById(long[])>($r5);

        $r6 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.app.DownloadManager mDownloadManager>;

        r1 = virtualinvoke $r6.<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager$Query)>(r36);

        if r1 != null goto label01;

        return;

     label01:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label36;

        $i1 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("status");

        $i2 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i1);

        if 8 != $i2 goto label35;

        r26 = null;

        r27 = null;

     label02:
        r37 = new java.io.FileInputStream;

     label03:
        r26 = null;

        r27 = null;

     label04:
        $r7 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.app.DownloadManager mDownloadManager>;

        $r8 = virtualinvoke $r7.<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)>(l0);

        $r9 = virtualinvoke $r8.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke r37.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r9);

     label05:
        r26 = r37;

        r27 = r37;

     label06:
        $r10 = staticinvoke <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String convertToString(java.io.InputStream)>(r37);

        virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: void parseJsonAndPersistKey(java.lang.String,java.lang.String)>($r10, r23);

     label07:
        $r12 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.app.DownloadManager mDownloadManager>;

        $r11 = newarray (long)[1];

        $r11[0] = l0;

        virtualinvoke $r12.<android.app.DownloadManager: int remove(long[])>($r11);

     label08:
        virtualinvoke r37.<java.io.InputStream: void close()>();

     label09:
        goto label35;

     label10:
        $r22 := @caughtexception;

        r39 = (java.io.IOException) $r22;

        virtualinvoke r39.<java.io.IOException: void printStackTrace()>();

        goto label35;

     label11:
        $r14 := @caughtexception;

        goto label30;

     label12:
        $r17 := @caughtexception;

        r26 = r27;

     label13:
        r38 = new java.lang.StringBuilder;

     label14:
        r26 = r27;

     label15:
        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

     label16:
        r26 = r27;

     label17:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in download:");

     label18:
        r26 = r27;

     label19:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

     label20:
        r26 = r27;

     label21:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

     label22:
        r26 = r27;

     label23:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

     label24:
        r26 = r27;

     label25:
        $r18 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r18);

     label26:
        $r20 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.app.DownloadManager mDownloadManager>;

        $r19 = newarray (long)[1];

        $r19[0] = l0;

        virtualinvoke $r20.<android.app.DownloadManager: int remove(long[])>($r19);

     label27:
        virtualinvoke r27.<java.io.InputStream: void close()>();

     label28:
        goto label35;

     label29:
        $r13 := @caughtexception;

        r40 = (java.io.IOException) $r13;

        virtualinvoke r40.<java.io.IOException: void printStackTrace()>();

        goto label35;

     label30:
        $r16 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.app.DownloadManager mDownloadManager>;

        $r15 = newarray (long)[1];

        $r15[0] = l0;

        virtualinvoke $r16.<android.app.DownloadManager: int remove(long[])>($r15);

     label31:
        virtualinvoke r26.<java.io.InputStream: void close()>();

     label32:
        goto label34;

     label33:
        $r21 := @caughtexception;

        r41 = (java.io.IOException) $r21;

        virtualinvoke r41.<java.io.IOException: void printStackTrace()>();

     label34:
        throw $r14;

     label35:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", "Completed downloading keys");

     label36:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        return;

        catch java.lang.Exception from label02 to label03 with label12;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label13 to label14 with label11;
        catch java.lang.Throwable from label15 to label16 with label11;
        catch java.lang.Throwable from label17 to label18 with label11;
        catch java.lang.Throwable from label19 to label20 with label11;
        catch java.lang.Throwable from label21 to label22 with label11;
        catch java.lang.Throwable from label23 to label24 with label11;
        catch java.lang.Throwable from label25 to label26 with label11;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.io.IOException from label31 to label32 with label33;
    }

    private void onPostDownloadProcessing(long)
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        long l0;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: void resetRenewalAlarm()>();

        specialinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: void cleanupDownloadPreferences(long)>(l0);

        return;
    }

    public boolean areCarrierKeysAbsentOrExpiring()
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        int i0, i1, i7;
        boolean $z0, z1;
        com.android.internal.telephony.Phone $r1;
        java.util.Date $r2;
        long $l2, $l3, $l4;
        byte $b5;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        int[] r7;
        android.telephony.ImsiEncryptionInfo r8;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        r7 = <com.android.internal.telephony.CarrierKeyDownloadManager: int[] CARRIER_KEY_TYPES>;

        i0 = lengthof r7;

        z1 = 0;

        i7 = 0;

     label1:
        if i7 >= i0 goto label5;

        i1 = r7[i7];

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: boolean isKeyEnabled(int)>(i1);

        if $z0 != 0 goto label2;

        i7 = i7 + 1;

        goto label1;

     label2:
        $r1 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone>;

        r8 = virtualinvoke $r1.<com.android.internal.telephony.Phone: android.telephony.ImsiEncryptionInfo getCarrierInfoForImsiEncryption(int)>(i1);

        if r8 != null goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key not found for: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r6);

        return 1;

     label3:
        $r2 = virtualinvoke r8.<android.telephony.ImsiEncryptionInfo: java.util.Date getExpirationTime()>();

        $l2 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $l2 - $l3;

        $b5 = $l4 cmp 1814400000L;

        if $b5 >= 0 goto label4;

        z1 = 1;

     label4:
        return z1;

     label5:
        return 0;
    }

    public long getExpirationDate()
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        int[] r1;
        int i0, i1, $i7, $i8, $i9, i14;
        android.telephony.ImsiEncryptionInfo r2;
        byte $b2, $b6, $b12;
        long $l3, $l4, $l5, $l10, $l11, l13, l15, l16;
        java.util.Random $r3;
        boolean $z0;
        com.android.internal.telephony.Phone $r4;
        java.util.Date $r5, $r6, $r7;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        l13 = 9223372036854775807L;

        r1 = <com.android.internal.telephony.CarrierKeyDownloadManager: int[] CARRIER_KEY_TYPES>;

        i0 = lengthof r1;

        i14 = 0;

     label1:
        if i14 >= i0 goto label4;

        i1 = r1[i14];

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: boolean isKeyEnabled(int)>(i1);

        if $z0 != 0 goto label2;

        l15 = l13;

        goto label3;

     label2:
        $r4 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone>;

        r2 = virtualinvoke $r4.<com.android.internal.telephony.Phone: android.telephony.ImsiEncryptionInfo getCarrierInfoForImsiEncryption(int)>(i1);

        l15 = l13;

        if r2 == null goto label3;

        l15 = l13;

        $r5 = virtualinvoke r2.<android.telephony.ImsiEncryptionInfo: java.util.Date getExpirationTime()>();

        if $r5 == null goto label3;

        l15 = l13;

        $r6 = virtualinvoke r2.<android.telephony.ImsiEncryptionInfo: java.util.Date getExpirationTime()>();

        $l11 = virtualinvoke $r6.<java.util.Date: long getTime()>();

        $b12 = l13 cmp $l11;

        if $b12 <= 0 goto label3;

        $r7 = virtualinvoke r2.<android.telephony.ImsiEncryptionInfo: java.util.Date getExpirationTime()>();

        l15 = virtualinvoke $r7.<java.util.Date: long getTime()>();

     label3:
        i14 = i14 + 1;

        l13 = l15;

        goto label1;

     label4:
        $b2 = l13 cmp 9223372036854775807L;

        if $b2 == 0 goto label6;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = $l4 + 604800000L;

        $b6 = l13 cmp $l5;

        if $b6 >= 0 goto label5;

        goto label6;

     label5:
        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        $i7 = 1814400000 - 604800000;

        $i8 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>($i7);

        $i9 = $i8 + 604800000;

        $l10 = (long) $i9;

        l16 = l13 - $l10;

        goto label7;

     label6:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l16 = $l3 + 86400000L;

     label7:
        return l16;
    }

    public java.lang.String getSimOperator()
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        com.android.internal.telephony.Phone $r3;
        android.telephony.TelephonyManager $r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        $r1 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r4 = (android.telephony.TelephonyManager) $r2;

        $r3 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r3.<com.android.internal.telephony.Phone: int getSubId()>();

        $r5 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getSimOperator(int)>($i0);

        return $r5;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        int i0;
        long l1;
        java.lang.Object $r1;
        java.lang.Long $r2;
        boolean $z0;
        android.os.Message r3;
        java.lang.String r4;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        r3 := @parameter0: android.os.Message;

        i0 = r3.<android.os.Message: int what>;

        if i0 == 0 goto label2;

        if i0 == 1 goto label1;

        goto label3;

     label1:
        $r1 = r3.<android.os.Message: java.lang.Object obj>;

        $r2 = (java.lang.Long) $r1;

        l1 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        r4 = specialinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String getMccMncSetFromPref()>();

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: boolean isValidDownload(java.lang.String)>(r4);

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: void onDownloadComplete(long,java.lang.String)>(l1, r4);

        specialinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: void onPostDownloadProcessing(long)>(l1);

        goto label3;

     label2:
        specialinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: void handleAlarmOrConfigChange()>();

     label3:
        return;
    }

    public boolean isKeyEnabled(int)
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        i0 := @parameter0: int;

        i1 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: int mKeyAvailability>;

        z0 = 1;

        $i2 = i0 - 1;

        $i3 = i1 >> $i2;

        $i4 = $i3 & 1;

        if $i4 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isValidDownload(java.lang.String)
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        java.lang.String r1, $r7, $r13, r14, r15, r17, r18, r20;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r2, $r8;
        java.lang.String[] r16;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        r14 := @parameter0: java.lang.String;

        r15 = virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String getSimOperator()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z0 != 0 goto label3;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r14);

        if $z1 == 0 goto label1;

        goto label3;

     label1:
        r16 = virtualinvoke r14.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r17 = r16[0];

        r18 = r16[1];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("values from sharedPrefs mcc, mnc: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r7);

        r20 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        r1 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>(3);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using values for mcc, mnc: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r13);

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r18, r1);

        if $z2 == 0 goto label2;

        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r17, r20);

        if $z3 == 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", "simOperator or mcc/mnc is empty");

        return 0;
    }

    public void parseJsonAndPersistKey(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        java.lang.String r1, $r5, $r9, $r11, $r17, r19, r20, r22, r23, r27, r28, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i1, i5;
        java.lang.Throwable $r6, $r12, r37;
        java.lang.Exception $r13, $r18, r36;
        java.lang.String[] r21;
        org.json.JSONArray r25;
        org.json.JSONObject r26, r40;
        byte b6;
        byte[] $r30;
        android.util.Pair r31;
        java.lang.Object $r32, $r34;
        java.security.PublicKey $r33;
        java.lang.Long $r35;
        long $l7;
        java.lang.StringBuilder r41, r42, r43;
        org.json.JSONException r44;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        r19 := @parameter0: java.lang.String;

        r20 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r19);

        if $z0 != 0 goto label24;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r20);

        if $z1 == 0 goto label01;

        goto label24;

     label01:
        r21 = virtualinvoke r20.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

     label02:
        r22 = r21[0];

        r23 = r21[1];

     label03:
        r40 = new org.json.JSONObject;

     label04:
        specialinvoke r40.<org.json.JSONObject: void <init>(java.lang.String)>(r19);

        r25 = virtualinvoke r40.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("carrier-keys");

     label05:
        i5 = 0;

     label06:
        $i1 = virtualinvoke r25.<org.json.JSONArray: int length()>();

        if i5 >= $i1 goto label16;

        r26 = virtualinvoke r25.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i5);

        $z2 = virtualinvoke r26.<org.json.JSONObject: boolean has(java.lang.String)>("certificate");

        if $z2 == 0 goto label08;

        r27 = virtualinvoke r26.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("certificate");

     label07:
        goto label09;

     label08:
        r27 = virtualinvoke r26.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("public-key");

     label09:
        $z3 = virtualinvoke r26.<org.json.JSONObject: boolean has(java.lang.String)>("key-type");

        if $z3 == 0 goto label12;

        r1 = virtualinvoke r26.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("key-type");

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("EPDG");

        if $z4 == 0 goto label11;

     label10:
        b6 = 1;

        goto label13;

     label11:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("WLAN");

        if $z5 != 0 goto label12;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key-type specified: ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r5);

     label12:
        b6 = 2;

     label13:
        r28 = virtualinvoke r26.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("key-identifier");

     label14:
        $r29 = staticinvoke <com.android.internal.telephony.CarrierKeyDownloadManager: java.lang.String cleanCertString(java.lang.String)>(r27);

        $r30 = virtualinvoke $r29.<java.lang.String: byte[] getBytes()>();

        r31 = staticinvoke <com.android.internal.telephony.CarrierKeyDownloadManager: android.util.Pair getKeyInformation(byte[])>($r30);

        $r32 = r31.<android.util.Pair: java.lang.Object first>;

        $r33 = (java.security.PublicKey) $r32;

        $r34 = r31.<android.util.Pair: java.lang.Object second>;

        $r35 = (java.lang.Long) $r34;

        $l7 = virtualinvoke $r35.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: void savePublicKey(java.security.PublicKey,int,java.lang.String,long,java.lang.String,java.lang.String)>($r33, b6, r28, $l7, r22, r23);

     label15:
        i5 = i5 + 1;

        goto label06;

     label16:
        goto label23;

     label17:
        $r18 := @caughtexception;

        r36 = $r18;

        goto label21;

     label18:
        $r12 := @caughtexception;

        r37 = $r12;

        goto label22;

     label19:
        $r13 := @caughtexception;

        r36 = $r13;

        goto label21;

     label20:
        $r6 := @caughtexception;

        r37 = $r6;

        goto label22;

     label21:
        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception getting certificate: ");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

        $r17 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r17);

        goto label23;

     label22:
        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Json parsing error: ");

        r44 = (org.json.JSONException) r37;

        $r9 = virtualinvoke r44.<org.json.JSONException: java.lang.String getMessage()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r11);

     label23:
        return;

     label24:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", "jsonStr or mcc, mnc: is empty");

        return;

        catch org.json.JSONException from label01 to label02 with label20;
        catch java.lang.Exception from label01 to label02 with label19;
        catch org.json.JSONException from label03 to label04 with label20;
        catch java.lang.Exception from label03 to label04 with label19;
        catch org.json.JSONException from label04 to label05 with label18;
        catch java.lang.Exception from label04 to label05 with label17;
        catch org.json.JSONException from label06 to label07 with label18;
        catch java.lang.Exception from label06 to label07 with label17;
        catch org.json.JSONException from label08 to label09 with label18;
        catch java.lang.Exception from label08 to label09 with label17;
        catch org.json.JSONException from label09 to label10 with label18;
        catch java.lang.Exception from label09 to label10 with label17;
        catch org.json.JSONException from label11 to label12 with label18;
        catch java.lang.Exception from label11 to label12 with label17;
        catch org.json.JSONException from label13 to label14 with label18;
        catch java.lang.Exception from label13 to label14 with label17;
        catch org.json.JSONException from label14 to label15 with label18;
        catch java.lang.Exception from label14 to label15 with label17;
    }

    public void resetRenewalAlarm()
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        int i0;
        long l1;
        com.android.internal.telephony.Phone $r1;
        java.lang.StringBuilder $r2, $r9, $r16;
        java.util.Date $r4, $r21;
        java.lang.String $r6, $r13, $r18, $r23;
        android.content.Context $r7, $r14;
        java.lang.Object $r8;
        android.content.Intent $r12;
        android.app.PendingIntent $r15;
        android.app.AlarmManager r25;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        specialinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: void cleanupRenewalAlarms()>();

        $r1 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone>;

        i0 = virtualinvoke $r1.<com.android.internal.telephony.Phone: int getPhoneId()>();

        l1 = virtualinvoke r0.<com.android.internal.telephony.CarrierKeyDownloadManager: long getExpirationDate()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("minExpirationDate: ");

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>(long)>(l1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r6);

        $r7 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r25 = (android.app.AlarmManager) $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.android.internal.telephony.carrier_key_download_alarm");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = new android.content.Intent;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String)>($r13);

        $r14 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: android.content.Context mContext>;

        $r15 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r14, 0, $r12, 201326592);

        virtualinvoke r25.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(0, l1, $r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRenewelAlarm: action=");

        $r18 = virtualinvoke $r12.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time=");

        $r21 = new java.util.Date;

        specialinvoke $r21.<java.util.Date: void <init>(long)>(l1);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarrierKeyDownloadManager", $r23);

        return;
    }

    public void savePublicKey(java.security.PublicKey, int, java.lang.String, long, java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.CarrierKeyDownloadManager r0;
        int i0;
        java.lang.String r1, r2, r3;
        long l1;
        android.telephony.ImsiEncryptionInfo $r4;
        java.util.Date $r5;
        com.android.internal.telephony.Phone $r6;
        java.security.PublicKey r7;

        r0 := @this: com.android.internal.telephony.CarrierKeyDownloadManager;

        r7 := @parameter0: java.security.PublicKey;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        $r4 = new android.telephony.ImsiEncryptionInfo;

        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>(long)>(l1);

        specialinvoke $r4.<android.telephony.ImsiEncryptionInfo: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.security.PublicKey,java.util.Date)>(r2, r3, i0, r1, r7, $r5);

        $r6 = r0.<com.android.internal.telephony.CarrierKeyDownloadManager: com.android.internal.telephony.Phone mPhone>;

        virtualinvoke $r6.<com.android.internal.telephony.Phone: void setCarrierInfoForImsiEncryption(android.telephony.ImsiEncryptionInfo)>($r4);

        return;
    }
}
