public class com.android.internal.telephony.CellBroadcastServiceManager extends java.lang.Object
{
    private static final int EVENT_NEW_CDMA_SCP_MESSAGE;
    private static final int EVENT_NEW_CDMA_SMS_CB;
    private static final int EVENT_NEW_GSM_SMS_CB;
    private static final java.lang.String TAG;
    private static com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection sServiceConnection;
    private java.lang.String mCellBroadcastServicePackage;
    private android.content.Context mContext;
    private boolean mEnabled;
    private final com.android.internal.telephony.LocalLog mLocalLog;
    private android.os.Handler mModuleCellBroadcastHandler;
    private com.android.internal.telephony.Phone mPhone;

    public void <init>(android.content.Context, com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        android.content.Context r1;
        com.android.internal.telephony.Phone r2;
        com.android.internal.telephony.LocalLog $r4;
        java.lang.StringBuilder $r5;
        int $i0;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.CellBroadcastServiceManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.Phone;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.os.Handler mModuleCellBroadcastHandler> = null;

        $r4 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r4.<com.android.internal.telephony.LocalLog: void <init>(int)>(100);

        r0.<com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.LocalLog mLocalLog> = $r4;

        r0.<com.android.internal.telephony.CellBroadcastServiceManager: boolean mEnabled> = 0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CellBroadcastServiceManager created for phone ");

        $i0 = virtualinvoke r2.<com.android.internal.telephony.Phone: int getPhoneId()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CellBroadcastServiceManager", $r8);

        r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.content.Context mContext> = r1;

        r0.<com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.Phone mPhone> = r2;

        return;
    }

    static boolean access$100(com.android.internal.telephony.CellBroadcastServiceManager)
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.CellBroadcastServiceManager;

        $z0 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: boolean mEnabled>;

        return $z0;
    }

    static com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection access$200()
    {
        com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection $r0;

        $r0 = <com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection sServiceConnection>;

        return $r0;
    }

    static com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection access$202(com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection)
    {
        com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection r0;

        r0 := @parameter0: com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection;

        <com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection sServiceConnection> = r0;

        return r0;
    }

    static com.android.internal.telephony.Phone access$300(com.android.internal.telephony.CellBroadcastServiceManager)
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @parameter0: com.android.internal.telephony.CellBroadcastServiceManager;

        $r1 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.Phone mPhone>;

        return $r1;
    }

    static com.android.internal.telephony.LocalLog access$400(com.android.internal.telephony.CellBroadcastServiceManager)
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        com.android.internal.telephony.LocalLog $r1;

        r0 := @parameter0: com.android.internal.telephony.CellBroadcastServiceManager;

        $r1 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.LocalLog mLocalLog>;

        return $r1;
    }

    static java.lang.String access$500(com.android.internal.telephony.CellBroadcastServiceManager)
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.internal.telephony.CellBroadcastServiceManager;

        $r1 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: java.lang.String mCellBroadcastServicePackage>;

        return $r1;
    }

    static android.content.Context access$600(com.android.internal.telephony.CellBroadcastServiceManager)
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.internal.telephony.CellBroadcastServiceManager;

        $r1 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.content.Context mContext>;

        return $r1;
    }

    private java.lang.String getCellBroadcastServicePackage()
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        android.content.Context $r2;
        android.content.Intent $r3;
        int $i0, $i3, $i6;
        java.lang.Object $r4;
        android.content.pm.ServiceInfo $r5, $r6;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r12, $r16;
        java.lang.String $r11, $r15, $r20, r26;
        android.content.pm.PackageManager r21;
        java.util.List r22;
        java.util.Iterator r24;
        android.content.pm.ResolveInfo r25;

        r0 := @this: com.android.internal.telephony.CellBroadcastServiceManager;

        $r2 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.content.Context mContext>;

        r21 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.telephony.CellBroadcastService");

        r22 = virtualinvoke r21.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r3, 1048576);

        $i0 = interfaceinvoke r22.<java.util.List: int size()>();

        if $i0 == 1 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getCellBroadcastServicePackageName: found ");

        $i6 = interfaceinvoke r22.<java.util.List: int size()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" CBS packages");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CellBroadcastServiceManager", $r20);

     label1:
        r24 = interfaceinvoke r22.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r4 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (android.content.pm.ResolveInfo) $r4;

        $r5 = r25.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if $r5 != null goto label3;

        goto label2;

     label3:
        $r6 = r25.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r26 = $r6.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r26);

        if $z0 != 0 goto label5;

        $i3 = virtualinvoke r21.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.READ_PRIVILEGED_PHONE_STATE", r26);

        if $i3 != 0 goto label4;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getCellBroadcastServicePackageName: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CellBroadcastServiceManager", $r15);

        return r26;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getCellBroadcastServicePackageName: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have READ_PRIVILEGED_PHONE_STATE permission");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CellBroadcastServiceManager", $r11);

        goto label6;

     label5:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CellBroadcastServiceManager", "getCellBroadcastServicePackageName: found a CBS package but packageName is null/empty");

     label6:
        goto label2;

     label7:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CellBroadcastServiceManager", "getCellBroadcastServicePackageName: package name not found");

        return null;
    }

    private void initCellBroadcastServiceModule()
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        boolean z0;
        com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection $r1, $r7, $r12, $r19;
        com.android.internal.telephony.LocalLog $r2, $r18;
        com.android.internal.telephony.CellBroadcastServiceManager$1 $r3;
        android.content.Intent $r4;
        java.lang.String $r5, $r17, r20;
        android.os.IBinder $r8;
        com.android.internal.telephony.Phone $r9;
        android.os.Handler $r10;
        com.android.internal.telephony.CommandsInterface $r11;
        android.content.Context $r13;
        java.lang.StringBuilder $r14;

        r0 := @this: com.android.internal.telephony.CellBroadcastServiceManager;

        r0.<com.android.internal.telephony.CellBroadcastServiceManager: boolean mEnabled> = 1;

        $r1 = <com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection sServiceConnection>;

        if $r1 != null goto label1;

        $r19 = new com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection;

        specialinvoke $r19.<com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection: void <init>(com.android.internal.telephony.CellBroadcastServiceManager,com.android.internal.telephony.CellBroadcastServiceManager$1)>(r0, null);

        <com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection sServiceConnection> = $r19;

     label1:
        r20 = specialinvoke r0.<com.android.internal.telephony.CellBroadcastServiceManager: java.lang.String getCellBroadcastServicePackage()>();

        r0.<com.android.internal.telephony.CellBroadcastServiceManager: java.lang.String mCellBroadcastServicePackage> = r20;

        if r20 == null goto label5;

        $r3 = new com.android.internal.telephony.CellBroadcastServiceManager$1;

        specialinvoke $r3.<com.android.internal.telephony.CellBroadcastServiceManager$1: void <init>(com.android.internal.telephony.CellBroadcastServiceManager)>(r0);

        r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.os.Handler mModuleCellBroadcastHandler> = $r3;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.telephony.CellBroadcastService");

        $r5 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: java.lang.String mCellBroadcastServicePackage>;

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r5);

        $r7 = <com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection sServiceConnection>;

        $r8 = $r7.<com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection: android.os.IBinder mService>;

        if $r8 != null goto label3;

        $r13 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.content.Context mContext>;

        $r12 = <com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection sServiceConnection>;

        z0 = virtualinvoke $r13.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r4, $r12, 1);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("serviceWasBound=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CellBroadcastServiceManager", $r17);

        if z0 != 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CellBroadcastServiceManager", "Unable to bind to service");

        $r18 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.LocalLog mLocalLog>;

        virtualinvoke $r18.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("Unable to bind to service");

        staticinvoke <com.android.cellbroadcastservice.CellBroadcastStatsLog: void write(int,int,java.lang.String)>(250, 15, "Unable to bind to service");

        return;

     label2:
        goto label4;

     label3:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CellBroadcastServiceManager", "skipping bindService because connection already exists");

     label4:
        $r9 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.Phone mPhone>;

        $r11 = $r9.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        $r10 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.os.Handler mModuleCellBroadcastHandler>;

        interfaceinvoke $r11.<com.android.internal.telephony.CommandsInterface: void setOnNewGsmBroadcastSms(android.os.Handler,int,java.lang.Object)>($r10, 0, null);

        goto label6;

     label5:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CellBroadcastServiceManager", "Unable to bind service; no cell broadcast service found");

        $r2 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.LocalLog mLocalLog>;

        virtualinvoke $r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("Unable to bind service; no cell broadcast service found");

        staticinvoke <com.android.cellbroadcastservice.CellBroadcastStatsLog: void write(int,int,java.lang.String)>(250, 15, "Unable to bind service; no cell broadcast service found");

     label6:
        return;
    }

    public void disable()
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        boolean $z0;
        com.android.internal.telephony.Phone $r1;
        android.os.Handler $r2;
        com.android.internal.telephony.CommandsInterface $r3;
        com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection $r4, $r6;
        android.os.IBinder $r5;
        android.content.Context $r7;

        r0 := @this: com.android.internal.telephony.CellBroadcastServiceManager;

        $z0 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: boolean mEnabled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<com.android.internal.telephony.CellBroadcastServiceManager: boolean mEnabled> = 0;

        $r1 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.Phone mPhone>;

        $r3 = $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.os.Handler mModuleCellBroadcastHandler>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void unSetOnNewGsmBroadcastSms(android.os.Handler)>($r2);

        $r4 = <com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection sServiceConnection>;

        $r5 = $r4.<com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection: android.os.IBinder mService>;

        if $r5 == null goto label2;

        $r7 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.content.Context mContext>;

        $r6 = <com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.CellBroadcastServiceManager$CellBroadcastServiceConnection sServiceConnection>;

        virtualinvoke $r7.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r6);

     label2:
        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4, $r8;
        boolean $z0;
        java.lang.String $r7, $r10, $r12;
        com.android.internal.telephony.LocalLog $r13;

        r0 := @this: com.android.internal.telephony.CellBroadcastServiceManager;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("CellBroadcastServiceManager:");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mEnabled=");

        $z0 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: boolean mEnabled>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCellBroadcastServicePackage=");

        $r10 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: java.lang.String mCellBroadcastServicePackage>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: com.android.internal.telephony.LocalLog mLocalLog>;

        virtualinvoke $r13.<com.android.internal.telephony.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        return;
    }

    public void enable()
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;

        r0 := @this: com.android.internal.telephony.CellBroadcastServiceManager;

        specialinvoke r0.<com.android.internal.telephony.CellBroadcastServiceManager: void initCellBroadcastServiceModule()>();

        return;
    }

    public void sendCdmaMessageToHandler(com.android.internal.telephony.cdma.SmsMessage)
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        com.android.internal.telephony.cdma.SmsMessage r1;
        android.os.Message r2;
        android.os.Handler $r3;

        r0 := @this: com.android.internal.telephony.CellBroadcastServiceManager;

        r1 := @parameter0: com.android.internal.telephony.cdma.SmsMessage;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = 1;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        $r3 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.os.Handler mModuleCellBroadcastHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    public void sendCdmaScpMessageToHandler(com.android.internal.telephony.cdma.SmsMessage, android.os.RemoteCallback)
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        com.android.internal.telephony.cdma.SmsMessage r1;
        android.os.RemoteCallback r2;
        android.os.Message r3;
        android.util.Pair $r4;
        android.os.Handler $r5;

        r0 := @this: com.android.internal.telephony.CellBroadcastServiceManager;

        r1 := @parameter0: com.android.internal.telephony.cdma.SmsMessage;

        r2 := @parameter1: android.os.RemoteCallback;

        r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r3.<android.os.Message: int what> = 2;

        $r4 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, r2);

        r3.<android.os.Message: java.lang.Object obj> = $r4;

        $r5 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.os.Handler mModuleCellBroadcastHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>(r3);

        return;
    }

    public void sendGsmMessageToHandler(android.os.Message)
    {
        com.android.internal.telephony.CellBroadcastServiceManager r0;
        android.os.Message r1;
        android.os.Handler $r2;

        r0 := @this: com.android.internal.telephony.CellBroadcastServiceManager;

        r1 := @parameter0: android.os.Message;

        r1.<android.os.Message: int what> = 0;

        $r2 = r0.<com.android.internal.telephony.CellBroadcastServiceManager: android.os.Handler mModuleCellBroadcastHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.CellBroadcastServiceManager: java.lang.String TAG> = "CellBroadcastServiceManager";

        <com.android.internal.telephony.CellBroadcastServiceManager: int EVENT_NEW_GSM_SMS_CB> = 0;

        <com.android.internal.telephony.CellBroadcastServiceManager: int EVENT_NEW_CDMA_SMS_CB> = 1;

        <com.android.internal.telephony.CellBroadcastServiceManager: int EVENT_NEW_CDMA_SCP_MESSAGE> = 2;

        return;
    }
}
