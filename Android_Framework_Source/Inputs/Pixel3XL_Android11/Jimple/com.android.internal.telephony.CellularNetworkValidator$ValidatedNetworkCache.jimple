class com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache extends java.lang.Object
{
    private static final int VALIDATED_NETWORK_CACHE_SIZE;
    private final java.util.Map mValidatedNetworkMap;
    private final java.util.PriorityQueue mValidatedNetworkPQ;
    final com.android.internal.telephony.CellularNetworkValidator this$0;

    private void <init>(com.android.internal.telephony.CellularNetworkValidator)
    {
        com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache r0;
        com.android.internal.telephony.CellularNetworkValidator r1;
        com.android.internal.telephony.'-$$Lambda$CellularNetworkValidator$ValidatedNetworkCache$bONcug3nGHioecFQp_sN-Vwg-oM' $r3;
        java.util.PriorityQueue r5;
        java.util.HashMap r6;
        java.util.Comparator r7;

        r0 := @this: com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache;

        r1 := @parameter0: com.android.internal.telephony.CellularNetworkValidator;

        r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: com.android.internal.telephony.CellularNetworkValidator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r5 = new java.util.PriorityQueue;

        $r3 = <com.android.internal.telephony._$$Lambda$CellularNetworkValidator$ValidatedNetworkCache$bONcug3nGHioecFQp_sN_Vwg_oM: com.android.internal.telephony.'-$$Lambda$CellularNetworkValidator$ValidatedNetworkCache$bONcug3nGHioecFQp_sN-Vwg-oM' INSTANCE>;

        r7 = (java.util.Comparator) $r3;

        specialinvoke r5.<java.util.PriorityQueue: void <init>(java.util.Comparator)>(r7);

        r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.PriorityQueue mValidatedNetworkPQ> = r5;

        r6 = new java.util.HashMap;

        specialinvoke r6.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.Map mValidatedNetworkMap> = r6;

        return;
    }

    void <init>(com.android.internal.telephony.CellularNetworkValidator, com.android.internal.telephony.CellularNetworkValidator$1)
    {
        com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache r0;
        com.android.internal.telephony.CellularNetworkValidator r1;
        com.android.internal.telephony.CellularNetworkValidator$1 r2;

        r0 := @this: com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache;

        r1 := @parameter0: com.android.internal.telephony.CellularNetworkValidator;

        r2 := @parameter1: com.android.internal.telephony.CellularNetworkValidator$1;

        specialinvoke r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: void <init>(com.android.internal.telephony.CellularNetworkValidator)>(r1);

        return;
    }

    private long getValidationCacheTtl(int)
    {
        com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache r0;
        int i0;
        com.android.internal.telephony.CellularNetworkValidator $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.telephony.CarrierConfigManager r4;
        long l2, $l3, $l4;
        android.os.PersistableBundle r5;

        r0 := @this: com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: com.android.internal.telephony.CellularNetworkValidator this$0>;

        $r2 = staticinvoke <com.android.internal.telephony.CellularNetworkValidator: android.content.Context access$200(com.android.internal.telephony.CellularNetworkValidator)>($r1);

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        r4 = (android.telephony.CarrierConfigManager) $r3;

        l2 = 0L;

        if r4 == null goto label1;

        r5 = virtualinvoke r4.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>(i0);

        l2 = 0L;

        if r5 == null goto label1;

        l2 = virtualinvoke r5.<android.os.PersistableBundle: long getLong(java.lang.String)>("data_switch_validation_min_gap_long");

     label1:
        $l3 = <com.android.internal.telephony.CellularNetworkValidator: long MAX_VALIDATION_CACHE_TTL>;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>(l2, $l3);

        return $l4;
    }

    private java.lang.String getValidationNetworkIdentity(int)
    {
        com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache r0;
        int i0, $i1, $i2, $i3, $i4;
        android.telephony.CellIdentity r1, $r4;
        boolean $z0;
        android.telephony.ServiceState $r2, $r3;
        java.lang.String $r5, $r6, $r9, $r11, $r18;
        android.telephony.CellIdentityLte $r7, $r14;
        java.lang.StringBuilder $r8;
        com.android.internal.telephony.SubscriptionController r19;
        com.android.internal.telephony.Phone r20;
        android.telephony.NetworkRegistrationInfo r21;

        r0 := @this: com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isUsableSubscriptionId(int)>(i0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r19 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        if r19 != null goto label2;

        return null;

     label2:
        $i1 = virtualinvoke r19.<com.android.internal.telephony.SubscriptionController: int getPhoneId(int)>(i0);

        r20 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getPhone(int)>($i1);

        if r20 == null goto label8;

        $r2 = virtualinvoke r20.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        if $r2 != null goto label3;

        goto label8;

     label3:
        $r3 = virtualinvoke r20.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        r21 = virtualinvoke $r3.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        if r21 == null goto label7;

        $r4 = virtualinvoke r21.<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()>();

        if $r4 != null goto label4;

        goto label7;

     label4:
        r1 = virtualinvoke r21.<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()>();

        $i2 = virtualinvoke r1.<android.telephony.CellIdentity: int getType()>();

        if $i2 != 3 goto label6;

        $r5 = virtualinvoke r1.<android.telephony.CellIdentity: java.lang.String getMccString()>();

        if $r5 == null goto label6;

        $r6 = virtualinvoke r1.<android.telephony.CellIdentity: java.lang.String getMncString()>();

        if $r6 == null goto label6;

        $r7 = (android.telephony.CellIdentityLte) r1;

        $i3 = virtualinvoke $r7.<android.telephony.CellIdentityLte: int getTac()>();

        if $i3 != 2147483647 goto label5;

        goto label6;

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r1.<android.telephony.CellIdentity: java.lang.String getMccString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r1.<android.telephony.CellIdentity: java.lang.String getMncString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r14 = (android.telephony.CellIdentityLte) r1;

        $i4 = virtualinvoke $r14.<android.telephony.CellIdentityLte: int getTac()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

     label6:
        return null;

     label7:
        return null;

     label8:
        return null;
    }

    static int lambda$new$0(com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork, com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork)
    {
        com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork r0, r1;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;

        r0 := @parameter0: com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork;

        r1 := @parameter1: com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork;

        $l1 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork: long mValidationTimeStamp>;

        $l0 = r1.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork: long mValidationTimeStamp>;

        $b2 = $l1 cmp $l0;

        if $b2 >= 0 goto label1;

        return -1;

     label1:
        $l4 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork: long mValidationTimeStamp>;

        $l3 = r1.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork: long mValidationTimeStamp>;

        $b5 = $l4 cmp $l3;

        if $b5 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean isRecentlyValidated(int)
    {
        com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache r0;
        int i0;
        long l1, l2, $l3, $l4;
        java.util.Map $r1, $r2;
        boolean $z0, z1;
        java.lang.Object $r3;
        com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork $r4;
        byte $b5;
        java.lang.String $r9, r11;
        java.lang.Throwable $r10;
        java.lang.StringBuilder r12;

        r0 := @this: com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        l1 = specialinvoke r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: long getValidationCacheTtl(int)>(i0);

        r11 = specialinvoke r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.lang.String getValidationNetworkIdentity(int)>(i0);

     label02:
        z1 = 0;

        if r11 == null goto label10;

     label03:
        $r1 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.Map mValidatedNetworkMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r11);

        if $z0 != 0 goto label05;

     label04:
        goto label10;

     label05:
        $r2 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.Map mValidatedNetworkMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        $r4 = (com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork) $r3;

        l2 = $r4.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork: long mValidationTimeStamp>;

     label06:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $l3 - l2;

        $b5 = $l4 cmp l1;

        if $b5 >= 0 goto label08;

     label07:
        z1 = 1;

     label08:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isRecentlyValidated on subId ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ? ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r9 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.CellularNetworkValidator: void access$100(java.lang.String)>($r9);

     label09:
        exitmonitor r0;

        return z1;

     label10:
        exitmonitor r0;

        return 0;

     label11:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
    }

    void storeLastValidationResult(int, boolean)
    {
        com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache r0;
        int i0, $i2;
        boolean z0;
        java.lang.String r1, $r6, $r15, r26;
        java.lang.StringBuilder r2;
        long l1;
        java.util.Map $r7, $r9, $r16, $r20, $r23;
        java.lang.Object $r8, $r14, $r22;
        java.util.PriorityQueue $r11, $r12, $r13, $r18, $r19, $r21;
        java.lang.Throwable $r25;
        com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork r27, r28, r29;

        r0 := @this: com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label01:
        r1 = specialinvoke r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.lang.String getValidationNetworkIdentity(int)>(i0);

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeLastValidationResult for subId ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label02:
        if z0 == 0 goto label03;

        r26 = " validated.";

        goto label04;

     label03:
        r26 = " not validated.";

     label04:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.CellularNetworkValidator: void access$100(java.lang.String)>($r6);

     label05:
        if r1 != null goto label06;

        exitmonitor r0;

        return;

     label06:
        if z0 != 0 goto label09;

     label07:
        $r21 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.PriorityQueue mValidatedNetworkPQ>;

        $r20 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.Map mValidatedNetworkMap>;

        $r22 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        virtualinvoke $r21.<java.util.PriorityQueue: boolean remove(java.lang.Object)>($r22);

        $r23 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.Map mValidatedNetworkMap>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label08:
        exitmonitor r0;

        return;

     label09:
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.Map mValidatedNetworkMap>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r27 = (com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork) $r8;

     label10:
        if r27 == null goto label13;

     label11:
        virtualinvoke r27.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork: void update(long)>(l1);

        $r18 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.PriorityQueue mValidatedNetworkPQ>;

        virtualinvoke $r18.<java.util.PriorityQueue: boolean remove(java.lang.Object)>(r27);

        $r19 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.PriorityQueue mValidatedNetworkPQ>;

        virtualinvoke $r19.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r27);

     label12:
        goto label14;

     label13:
        r28 = new com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork;

        specialinvoke r28.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork: void <init>(com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache,java.lang.String,long)>(r0, r1, l1);

        $r9 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.Map mValidatedNetworkMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r28);

        $r11 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.PriorityQueue mValidatedNetworkPQ>;

        virtualinvoke $r11.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r28);

     label14:
        $r12 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.PriorityQueue mValidatedNetworkPQ>;

        $i2 = virtualinvoke $r12.<java.util.PriorityQueue: int size()>();

        if $i2 <= 10 goto label15;

        $r13 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.PriorityQueue mValidatedNetworkPQ>;

        $r14 = virtualinvoke $r13.<java.util.PriorityQueue: java.lang.Object poll()>();

        r29 = (com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork) $r14;

        $r16 = r0.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: java.util.Map mValidatedNetworkMap>;

        $r15 = r29.<com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache$ValidatedNetwork: java.lang.String mValidationIdentity>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r15);

     label15:
        exitmonitor r0;

        return;

     label16:
        $r25 := @caughtexception;

        exitmonitor r0;

        throw $r25;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.CellularNetworkValidator$ValidatedNetworkCache: int VALIDATED_NETWORK_CACHE_SIZE> = 10;

        return;
    }
}
