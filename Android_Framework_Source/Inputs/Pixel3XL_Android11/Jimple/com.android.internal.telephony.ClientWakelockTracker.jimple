public class com.android.internal.telephony.ClientWakelockTracker extends java.lang.Object
{
    public static final java.lang.String LOG_TAG;
    public java.util.ArrayList mActiveClients;
    public java.util.HashMap mClients;

    public void <init>()
    {
        com.android.internal.telephony.ClientWakelockTracker r0;
        java.util.HashMap $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.telephony.ClientWakelockTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients> = $r2;

        return;
    }

    private com.android.internal.telephony.ClientWakelockAccountant getClientWakelockAccountant(java.lang.String)
    {
        com.android.internal.telephony.ClientWakelockTracker r0;
        java.util.HashMap r1, $r3, $r4, $r6;
        com.android.internal.telephony.ClientWakelockAccountant r2, r10;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;

        r0 := @this: com.android.internal.telephony.ClientWakelockTracker;

        r9 := @parameter0: java.lang.String;

        r1 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r9);

        if $z0 == 0 goto label3;

        $r6 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r10 = (com.android.internal.telephony.ClientWakelockAccountant) $r7;

     label2:
        goto label5;

     label3:
        r2 = new com.android.internal.telephony.ClientWakelockAccountant;

        specialinvoke r2.<com.android.internal.telephony.ClientWakelockAccountant: void <init>(java.lang.String)>(r9);

        $r4 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r2);

     label4:
        r10 = r2;

     label5:
        exitmonitor r1;

     label6:
        return r10;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void updateConcurrentRequests(int, long)
    {
        com.android.internal.telephony.ClientWakelockTracker r0;
        int i0;
        long l1;
        java.util.ArrayList r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.internal.telephony.ClientWakelockAccountant $r4;
        java.lang.Throwable $r5;
        java.util.Iterator r6;

        r0 := @this: com.android.internal.telephony.ClientWakelockTracker;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        if i0 == 0 goto label9;

        r1 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        r6 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.internal.telephony.ClientWakelockAccountant) $r3;

        virtualinvoke $r4.<com.android.internal.telephony.ClientWakelockAccountant: void changeConcurrentRequests(int,long)>(i0, l1);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        goto label9;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void dumpClientRequestTracker(java.io.PrintWriter)
    {
        com.android.internal.telephony.ClientWakelockTracker r0;
        java.util.HashMap r1, $r5, $r11;
        java.util.Iterator r2;
        java.lang.String r3, $r10, $r14;
        java.lang.StringBuilder r4;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7, $r12;
        com.android.internal.telephony.ClientWakelockAccountant $r13;
        java.lang.Throwable $r15;
        java.io.PrintWriter r16;

        r0 := @this: com.android.internal.telephony.ClientWakelockTracker;

        r16 := @parameter0: java.io.PrintWriter;

        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>("-------mClients---------------");

        r1 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r7;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Client : ");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        $r13 = (com.android.internal.telephony.ClientWakelockAccountant) $r12;

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.ClientWakelockAccountant: java.lang.String toString()>();

        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r15 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    java.util.List getClientRequestStats()
    {
        com.android.internal.telephony.ClientWakelockTracker r0;
        long l0;
        java.util.HashMap r1, $r4, $r5, $r8;
        java.util.ArrayList r2;
        android.telephony.ClientRequestStats r3, $r10;
        int $i1;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7, $r9;
        java.lang.Throwable $r11;
        java.util.Iterator r12;
        java.lang.String r13;
        com.android.internal.telephony.ClientWakelockAccountant r14;

        r0 := @this: com.android.internal.telephony.ClientWakelockTracker;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients>;

        entermonitor r1;

     label1:
        r2 = new java.util.ArrayList;

        $r4 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients>;

        $i1 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i1);

        $r5 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        r12 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r7;

        $r8 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.HashMap mClients>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r13);

        r14 = (com.android.internal.telephony.ClientWakelockAccountant) $r9;

        virtualinvoke r14.<com.android.internal.telephony.ClientWakelockAccountant: long updatePendingRequestWakelockTime(long)>(l0);

        r3 = new android.telephony.ClientRequestStats;

        $r10 = r14.<com.android.internal.telephony.ClientWakelockAccountant: android.telephony.ClientRequestStats mRequestStats>;

        specialinvoke r3.<android.telephony.ClientRequestStats: void <init>(android.telephony.ClientRequestStats)>($r10);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return r2;

     label6:
        $r11 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isClientActive(java.lang.String)
    {
        com.android.internal.telephony.ClientWakelockTracker r0;
        java.util.ArrayList $r1, r5;
        boolean $z0;
        java.lang.Throwable $r2;
        java.lang.String r3;
        com.android.internal.telephony.ClientWakelockAccountant r4;

        r0 := @this: com.android.internal.telephony.ClientWakelockTracker;

        r3 := @parameter0: java.lang.String;

        r4 = specialinvoke r0.<com.android.internal.telephony.ClientWakelockTracker: com.android.internal.telephony.ClientWakelockAccountant getClientWakelockAccountant(java.lang.String)>(r3);

        r5 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        entermonitor r5;

     label1:
        $r1 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

        exitmonitor r5;

     label2:
        return 1;

     label3:
        exitmonitor r5;

     label4:
        return 0;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r5;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void startTracking(java.lang.String, int, int, int)
    {
        com.android.internal.telephony.ClientWakelockTracker r0;
        int i0, i1, i2;
        long l3;
        java.util.ArrayList $r1, $r2, r6;
        boolean $z0;
        java.lang.Throwable $r3;
        java.lang.String r4;
        com.android.internal.telephony.ClientWakelockAccountant r5;

        r0 := @this: com.android.internal.telephony.ClientWakelockTracker;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r5 = specialinvoke r0.<com.android.internal.telephony.ClientWakelockTracker: com.android.internal.telephony.ClientWakelockAccountant getClientWakelockAccountant(java.lang.String)>(r4);

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r5.<com.android.internal.telephony.ClientWakelockAccountant: void startAttributingWakelock(int,int,int,long)>(i0, i1, i2, l3);

        specialinvoke r0.<com.android.internal.telephony.ClientWakelockTracker: void updateConcurrentRequests(int,long)>(i2, l3);

        r6 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        entermonitor r6;

     label1:
        $r1 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>(r5);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label2:
        exitmonitor r6;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r6;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void stopTracking(java.lang.String, int, int, int)
    {
        com.android.internal.telephony.ClientWakelockTracker r0;
        int i0, i1, i2, $i4;
        long l3;
        java.util.ArrayList $r1, r5;
        java.lang.Throwable $r2;
        java.lang.String r3;
        com.android.internal.telephony.ClientWakelockAccountant r4;

        r0 := @this: com.android.internal.telephony.ClientWakelockTracker;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r4 = specialinvoke r0.<com.android.internal.telephony.ClientWakelockTracker: com.android.internal.telephony.ClientWakelockAccountant getClientWakelockAccountant(java.lang.String)>(r3);

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r4.<com.android.internal.telephony.ClientWakelockAccountant: void stopAttributingWakelock(int,int,long)>(i0, i1, l3);

        $i4 = virtualinvoke r4.<com.android.internal.telephony.ClientWakelockAccountant: int getPendingRequestCount()>();

        if $i4 != 0 goto label6;

        r5 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        entermonitor r5;

     label1:
        $r1 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        virtualinvoke $r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        exitmonitor r5;

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r5;

     label5:
        throw $r2;

     label6:
        specialinvoke r0.<com.android.internal.telephony.ClientWakelockTracker: void updateConcurrentRequests(int,long)>(i2, l3);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void stopTrackingAll()
    {
        com.android.internal.telephony.ClientWakelockTracker r0;
        long l0;
        java.util.ArrayList r1, $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.internal.telephony.ClientWakelockAccountant $r5;
        java.lang.Throwable $r6;
        java.util.Iterator r7;

        r0 := @this: com.android.internal.telephony.ClientWakelockTracker;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        r7 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.internal.telephony.ClientWakelockAccountant) $r4;

        virtualinvoke $r5.<com.android.internal.telephony.ClientWakelockAccountant: void stopAllPendingRequests(long)>(l0);

     label3:
        goto label2;

     label4:
        $r3 = r0.<com.android.internal.telephony.ClientWakelockTracker: java.util.ArrayList mActiveClients>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        exitmonitor r1;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.ClientWakelockTracker: java.lang.String LOG_TAG> = "ClientWakelockTracker";

        return;
    }
}
