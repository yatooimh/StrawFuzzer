public class com.android.internal.telephony.DeviceStateMonitor extends android.os.Handler
{
    static final int CELL_INFO_INTERVAL_LONG_MS;
    static final int CELL_INFO_INTERVAL_SHORT_MS;
    protected static final boolean DBG;
    static final int EVENT_CAR_MODE_CHANGED;
    static final int EVENT_CHARGING_STATE_CHANGED;
    static final int EVENT_POWER_SAVE_MODE_CHANGED;
    static final int EVENT_RADIO_AVAILABLE;
    static final int EVENT_RIL_CONNECTED;
    static final int EVENT_SCREEN_STATE_CHANGED;
    static final int EVENT_TETHERING_STATE_CHANGED;
    static final int EVENT_UPDATE_ALWAYS_REPORT_SIGNAL_STRENGTH;
    static final int EVENT_WIFI_CONNECTION_CHANGED;
    private static final int[] LINK_CAPACITY_DOWNLINK_THRESHOLDS;
    private static final int[] LINK_CAPACITY_UPLINK_THRESHOLDS;
    private static final int NR_NSA_TRACKING_INDICATIONS_ALWAYS_ON;
    private static final int NR_NSA_TRACKING_INDICATIONS_EXTENDED;
    private static final int NR_NSA_TRACKING_INDICATIONS_OFF;
    protected static final java.lang.String TAG;
    private static final int WIFI_AVAILABLE;
    private static final int WIFI_UNAVAILABLE;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private int mCellInfoMinInterval;
    private final android.hardware.display.DisplayManager$DisplayListener mDisplayListener;
    private boolean mIsAlwaysSignalStrengthReportingEnabled;
    private boolean mIsCarModeOn;
    private boolean mIsCharging;
    private boolean mIsLowDataExpected;
    private boolean mIsPowerSaveOn;
    private boolean mIsScreenOn;
    private boolean mIsTetheringOn;
    private boolean mIsWifiConnected;
    private final com.android.internal.telephony.LocalLog mLocalLog;
    private final android.net.ConnectivityManager$NetworkCallback mNetworkCallback;
    private final com.android.internal.telephony.Phone mPhone;
    private final com.android.internal.telephony.RegistrantList mPhysicalChannelConfigRegistrants;
    private int mUnsolicitedResponseFilter;
    private final android.net.NetworkRequest mWifiNetworkRequest;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        int[] $r2, $r3;

        <com.android.internal.telephony.DeviceStateMonitor: int WIFI_UNAVAILABLE> = 0;

        <com.android.internal.telephony.DeviceStateMonitor: int WIFI_AVAILABLE> = 1;

        <com.android.internal.telephony.DeviceStateMonitor: int NR_NSA_TRACKING_INDICATIONS_OFF> = 0;

        <com.android.internal.telephony.DeviceStateMonitor: int NR_NSA_TRACKING_INDICATIONS_EXTENDED> = 1;

        <com.android.internal.telephony.DeviceStateMonitor: int NR_NSA_TRACKING_INDICATIONS_ALWAYS_ON> = 2;

        <com.android.internal.telephony.DeviceStateMonitor: int EVENT_WIFI_CONNECTION_CHANGED> = 7;

        <com.android.internal.telephony.DeviceStateMonitor: int EVENT_UPDATE_ALWAYS_REPORT_SIGNAL_STRENGTH> = 8;

        <com.android.internal.telephony.DeviceStateMonitor: int EVENT_TETHERING_STATE_CHANGED> = 5;

        <com.android.internal.telephony.DeviceStateMonitor: int EVENT_SCREEN_STATE_CHANGED> = 2;

        <com.android.internal.telephony.DeviceStateMonitor: int EVENT_RIL_CONNECTED> = 0;

        <com.android.internal.telephony.DeviceStateMonitor: int EVENT_RADIO_AVAILABLE> = 6;

        <com.android.internal.telephony.DeviceStateMonitor: int EVENT_POWER_SAVE_MODE_CHANGED> = 3;

        <com.android.internal.telephony.DeviceStateMonitor: int EVENT_CHARGING_STATE_CHANGED> = 4;

        <com.android.internal.telephony.DeviceStateMonitor: int EVENT_CAR_MODE_CHANGED> = 1;

        <com.android.internal.telephony.DeviceStateMonitor: boolean DBG> = 0;

        <com.android.internal.telephony.DeviceStateMonitor: int CELL_INFO_INTERVAL_SHORT_MS> = 2000;

        <com.android.internal.telephony.DeviceStateMonitor: int CELL_INFO_INTERVAL_LONG_MS> = 10000;

        $r0 = class "Lcom/android/internal/telephony/DeviceStateMonitor;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.internal.telephony.DeviceStateMonitor: java.lang.String TAG> = $r1;

        $r2 = newarray (int)[14];

        $r2[0] = 100;

        $r2[1] = 500;

        $r2[2] = 1000;

        $r2[3] = 5000;

        $r2[4] = 10000;

        $r2[5] = 20000;

        $r2[6] = 50000;

        $r2[7] = 75000;

        $r2[8] = 100000;

        $r2[9] = 200000;

        $r2[10] = 500000;

        $r2[11] = 1000000;

        $r2[12] = 1500000;

        $r2[13] = 2000000;

        <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_DOWNLINK_THRESHOLDS> = $r2;

        $r3 = newarray (int)[11];

        $r3[0] = 100;

        $r3[1] = 500;

        $r3[2] = 1000;

        $r3[3] = 5000;

        $r3[4] = 10000;

        $r3[5] = 20000;

        $r3[6] = 50000;

        $r3[7] = 75000;

        $r3[8] = 100000;

        $r3[9] = 200000;

        $r3[10] = 500000;

        <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_UPLINK_THRESHOLDS> = $r3;

        return;
    }

    public void <init>(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        com.android.internal.telephony.Phone r1, $r35, $r37, $r40, $r42;
        com.android.internal.telephony.LocalLog $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.net.NetworkRequest$Builder $r4, $r5, $r6, $r7;
        android.net.NetworkRequest $r8, $r47;
        com.android.internal.telephony.DeviceStateMonitor$1 $r9;
        com.android.internal.telephony.DeviceStateMonitor$2 $r10;
        com.android.internal.telephony.DeviceStateMonitor$3 $r11;
        android.content.Context $r12, $r36, $r44;
        java.lang.Object $r13, $r45;
        android.hardware.display.DisplayManager$DisplayListener $r14;
        android.hardware.display.DisplayManager $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.StringBuilder $r16;
        java.lang.String $r33;
        android.content.IntentFilter $r34;
        android.content.BroadcastReceiver $r38;
        com.android.internal.telephony.CommandsInterface $r41, $r43;
        android.net.ConnectivityManager$NetworkCallback $r46;
        android.net.ConnectivityManager $r48;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        $r2 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r2.<com.android.internal.telephony.LocalLog: void <init>(int)>(100);

        r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.LocalLog mLocalLog> = $r2;

        $r3 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r3.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.RegistrantList mPhysicalChannelConfigRegistrants> = $r3;

        $r4 = new android.net.NetworkRequest$Builder;

        specialinvoke $r4.<android.net.NetworkRequest$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addTransportType(int)>(1);

        $r6 = virtualinvoke $r5.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>(12);

        $r7 = virtualinvoke $r6.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder removeCapability(int)>(13);

        $r8 = virtualinvoke $r7.<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>();

        r0.<com.android.internal.telephony.DeviceStateMonitor: android.net.NetworkRequest mWifiNetworkRequest> = $r8;

        $r9 = new com.android.internal.telephony.DeviceStateMonitor$1;

        specialinvoke $r9.<com.android.internal.telephony.DeviceStateMonitor$1: void <init>(com.android.internal.telephony.DeviceStateMonitor)>(r0);

        r0.<com.android.internal.telephony.DeviceStateMonitor: android.net.ConnectivityManager$NetworkCallback mNetworkCallback> = $r9;

        r0.<com.android.internal.telephony.DeviceStateMonitor: int mCellInfoMinInterval> = 2000;

        r0.<com.android.internal.telephony.DeviceStateMonitor: int mUnsolicitedResponseFilter> = -1;

        $r10 = new com.android.internal.telephony.DeviceStateMonitor$2;

        specialinvoke $r10.<com.android.internal.telephony.DeviceStateMonitor$2: void <init>(com.android.internal.telephony.DeviceStateMonitor)>(r0);

        r0.<com.android.internal.telephony.DeviceStateMonitor: android.hardware.display.DisplayManager$DisplayListener mDisplayListener> = $r10;

        $r11 = new com.android.internal.telephony.DeviceStateMonitor$3;

        specialinvoke $r11.<com.android.internal.telephony.DeviceStateMonitor$3: void <init>(com.android.internal.telephony.DeviceStateMonitor)>(r0);

        r0.<com.android.internal.telephony.DeviceStateMonitor: android.content.BroadcastReceiver mBroadcastReceiver> = $r11;

        r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone> = r1;

        $r12 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r13 = virtualinvoke $r12.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r15 = (android.hardware.display.DisplayManager) $r13;

        $r14 = r0.<com.android.internal.telephony.DeviceStateMonitor: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        virtualinvoke $r15.<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>($r14, null);

        $z0 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean isPowerSaveModeOn()>();

        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsPowerSaveOn> = $z0;

        $z1 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean isDeviceCharging()>();

        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCharging> = $z1;

        $z2 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean isScreenOn()>();

        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsScreenOn> = $z2;

        $z3 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean isCarModeOn()>();

        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCarModeOn> = $z3;

        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsTetheringOn> = 0;

        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsLowDataExpected> = 0;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DeviceStateMonitor mIsTetheringOn=");

        $z4 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsTetheringOn>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsScreenOn=");

        $z5 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsScreenOn>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsCharging=");

        $z6 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCharging>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsPowerSaveOn=");

        $z7 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsPowerSaveOn>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsLowDataExpected=");

        $z8 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsLowDataExpected>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsCarModeOn=");

        $z9 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCarModeOn>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsWifiConnected=");

        $z10 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsWifiConnected>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsAlwaysSignalStrengthReportingEnabled=");

        $z11 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsAlwaysSignalStrengthReportingEnabled>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r33 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>($r33, 0);

        $r34 = new android.content.IntentFilter;

        specialinvoke $r34.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r34.<android.content.IntentFilter: void addAction(java.lang.String)>("android.os.action.POWER_SAVE_MODE_CHANGED");

        virtualinvoke $r34.<android.content.IntentFilter: void addAction(java.lang.String)>("android.os.action.CHARGING");

        virtualinvoke $r34.<android.content.IntentFilter: void addAction(java.lang.String)>("android.os.action.DISCHARGING");

        virtualinvoke $r34.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.conn.TETHER_STATE_CHANGED");

        virtualinvoke $r34.<android.content.IntentFilter: void addAction(java.lang.String)>("android.app.action.ENTER_CAR_MODE_PRIORITIZED");

        virtualinvoke $r34.<android.content.IntentFilter: void addAction(java.lang.String)>("android.app.action.EXIT_CAR_MODE_PRIORITIZED");

        $r35 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r36 = virtualinvoke $r35.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r38 = r0.<com.android.internal.telephony.DeviceStateMonitor: android.content.BroadcastReceiver mBroadcastReceiver>;

        $r37 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        virtualinvoke $r36.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r38, $r34, null, $r37);

        $r40 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r41 = $r40.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r41.<com.android.internal.telephony.CommandsInterface: void registerForRilConnected(android.os.Handler,int,java.lang.Object)>(r0, 0, null);

        $r42 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r43 = $r42.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r43.<com.android.internal.telephony.CommandsInterface: void registerForAvailable(android.os.Handler,int,java.lang.Object)>(r0, 6, null);

        $r44 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r45 = virtualinvoke $r44.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r48 = (android.net.ConnectivityManager) $r45;

        $r47 = r0.<com.android.internal.telephony.DeviceStateMonitor: android.net.NetworkRequest mWifiNetworkRequest>;

        $r46 = r0.<com.android.internal.telephony.DeviceStateMonitor: android.net.ConnectivityManager$NetworkCallback mNetworkCallback>;

        virtualinvoke $r48.<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>($r47, $r46);

        return;
    }

    static void access$000(com.android.internal.telephony.DeviceStateMonitor, java.lang.String, boolean)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.DeviceStateMonitor;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>(r1, z0);

        return;
    }

    static boolean access$100(com.android.internal.telephony.DeviceStateMonitor)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.DeviceStateMonitor;

        $z0 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean isScreenOn()>();

        return $z0;
    }

    static boolean access$200(com.android.internal.telephony.DeviceStateMonitor)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.DeviceStateMonitor;

        $z0 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean isPowerSaveModeOn()>();

        return $z0;
    }

    private java.lang.String deviceTypeToString(int)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        int i0;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return "UNKNOWN";

     label1:
        return "LOW_DATA_EXPECTED";

     label2:
        return "CHARGING_STATE";

     label3:
        return "POWER_SAVE_MODE";
    }

    private boolean isCarModeOn()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        com.android.internal.telephony.Phone $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        android.app.UiModeManager r8;
        boolean z0;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $r1 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("uimode");

        r8 = (android.app.UiModeManager) $r3;

        z0 = 0;

        if r8 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r8.<android.app.UiModeManager: int getCurrentModeType()>();

        if $i0 != 3 goto label2;

        z0 = 1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isCarModeOn=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>($r7, 1);

        return z0;
    }

    private boolean isDeviceCharging()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean z0;
        com.android.internal.telephony.Phone $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.os.BatteryManager $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $r2 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("batterymanager");

        $r5 = (android.os.BatteryManager) $r4;

        z0 = virtualinvoke $r5.<android.os.BatteryManager: boolean isCharging()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isDeviceCharging=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>($r9, 1);

        return z0;
    }

    private boolean isLowDataExpected()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $z0 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCharging>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsTetheringOn>;

        if $z1 != 0 goto label1;

        $z2 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsScreenOn>;

        if $z2 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    private boolean isPowerSaveModeOn()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean z0;
        com.android.internal.telephony.Phone $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.os.PowerManager $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $r2 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r5 = (android.os.PowerManager) $r4;

        z0 = virtualinvoke $r5.<android.os.PowerManager: boolean isPowerSaveMode()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isPowerSaveModeOn=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>($r9, 1);

        return z0;
    }

    private boolean isScreenOn()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        int i0, $i1, i2;
        android.view.Display r1;
        com.android.internal.telephony.Phone $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.hardware.display.DisplayManager $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;
        android.view.Display[] r10;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $r2 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r5 = (android.hardware.display.DisplayManager) $r4;

        r10 = virtualinvoke $r5.<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()>();

        if r10 == null goto label4;

        i0 = lengthof r10;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r1 = r10[i2];

        $i1 = virtualinvoke r1.<android.view.Display: int getState()>();

        if $i1 != 2 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Screen on for display=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>($r9, 1);

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>("Screens all off", 1);

        return 0;

     label4:
        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>("No displays found", 1);

        return 0;
    }

    private void log(java.lang.String, boolean)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        java.lang.String r1;
        boolean z0;
        com.android.internal.telephony.LocalLog $r2;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.LocalLog mLocalLog>;

        virtualinvoke $r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>(r1);

     label1:
        return;
    }

    private void onReset()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>("onReset.", 1);

        $z0 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCharging>;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void sendDeviceState(int,boolean)>(1, $z0);

        $z1 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsLowDataExpected>;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void sendDeviceState(int,boolean)>(2, $z1);

        $z2 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsPowerSaveOn>;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void sendDeviceState(int,boolean)>(0, $z2);

        $i0 = r0.<com.android.internal.telephony.DeviceStateMonitor: int mUnsolicitedResponseFilter>;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void setUnsolResponseFilter(int,boolean)>($i0, 1);

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void setSignalStrengthReportingCriteria()>();

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void setLinkCapacityReportingCriteria()>();

        $i1 = r0.<com.android.internal.telephony.DeviceStateMonitor: int mCellInfoMinInterval>;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void setCellInfoMinInterval(int)>($i1);

        return;
    }

    private void onUpdateDeviceState(int, boolean)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean z0, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, z19, z20;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, i7, i8, i9, i10, i11, i12;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.CommandsInterface $r2;
        java.lang.Boolean $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        com.android.internal.telephony.RegistrantList r9;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        i4 := @parameter0: int;

        z18 := @parameter1: boolean;

        z0 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableBarringInfoReports()>();

        tableswitch(i4)
        {
            case 1: goto label14;
            case 2: goto label12;
            case 3: goto label10;
            case 4: goto label08;
            case 5: goto label06;
            case 6: goto label01;
            case 7: goto label04;
            case 8: goto label02;
            default: goto label01;
        };

     label01:
        return;

     label02:
        $z3 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsAlwaysSignalStrengthReportingEnabled>;

        if $z3 != z18 goto label03;

        return;

     label03:
        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsAlwaysSignalStrengthReportingEnabled> = z18;

        goto label16;

     label04:
        $z12 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsWifiConnected>;

        if $z12 != z18 goto label05;

        return;

     label05:
        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsWifiConnected> = z18;

        goto label16;

     label06:
        $z13 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsTetheringOn>;

        if $z13 != z18 goto label07;

        return;

     label07:
        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsTetheringOn> = z18;

        goto label16;

     label08:
        $z14 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCharging>;

        if $z14 != z18 goto label09;

        return;

     label09:
        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCharging> = z18;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void sendDeviceState(int,boolean)>(1, z18);

        goto label16;

     label10:
        $z15 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsPowerSaveOn>;

        if $z15 != z18 goto label11;

        return;

     label11:
        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsPowerSaveOn> = z18;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void sendDeviceState(int,boolean)>(0, z18);

        goto label16;

     label12:
        $z16 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsScreenOn>;

        if $z16 != z18 goto label13;

        return;

     label13:
        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsScreenOn> = z18;

        goto label16;

     label14:
        $z17 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCarModeOn>;

        if $z17 != z18 goto label15;

        return;

     label15:
        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCarModeOn> = z18;

     label16:
        i5 = virtualinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: int computeCellInfoMinInterval()>();

        $i6 = r0.<com.android.internal.telephony.DeviceStateMonitor: int mCellInfoMinInterval>;

        if $i6 == i5 goto label17;

        r0.<com.android.internal.telephony.DeviceStateMonitor: int mCellInfoMinInterval> = i5;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void setCellInfoMinInterval(int)>(i5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CellInfo Min Interval Updated to ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>($r7, 1);

     label17:
        $z4 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsLowDataExpected>;

        $z5 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean isLowDataExpected()>();

        if $z4 == $z5 goto label18;

        $z11 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsLowDataExpected>;

        z19 = $z11 ^ 1;

        r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsLowDataExpected> = z19;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void sendDeviceState(int,boolean)>(2, z19);

     label18:
        i7 = 32;

        $z6 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableSignalStrengthReports()>();

        if $z6 == 0 goto label19;

        i7 = 32 | 1;

     label19:
        i8 = i7;

        $z7 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableFullNetworkStateReports()>();

        if $z7 == 0 goto label20;

        i8 = i7 | 2;

     label20:
        i9 = i8;

        $z8 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableDataCallDormancyChangedReports()>();

        if $z8 == 0 goto label21;

        i9 = i8 | 4;

     label21:
        i10 = i9;

        $z9 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableLinkCapacityEstimateReports()>();

        if $z9 == 0 goto label22;

        i10 = i9 | 8;

     label22:
        i11 = i10;

        $z10 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnablePhysicalChannelConfigReports()>();

        if $z10 == 0 goto label23;

        i11 = i10 | 16;

     label23:
        z2 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableBarringInfoReports()>();

        i12 = i11;

        if z2 == 0 goto label24;

        i12 = i11 | 64;

     label24:
        $i2 = i12 & 16;

        $i0 = r0.<com.android.internal.telephony.DeviceStateMonitor: int mUnsolicitedResponseFilter>;

        $i1 = $i0 & 16;

        if $i2 == $i1 goto label27;

        r9 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.RegistrantList mPhysicalChannelConfigRegistrants>;

        $i3 = i12 & 16;

        if $i3 == 0 goto label25;

        z20 = 1;

        goto label26;

     label25:
        z20 = 0;

     label26:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z20);

        virtualinvoke r9.<com.android.internal.telephony.RegistrantList: void notifyResult(java.lang.Object)>($r3);

     label27:
        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void setUnsolResponseFilter(int,boolean)>(i12, 0);

        if z2 == 0 goto label28;

        if z0 != 0 goto label28;

        $r1 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r2 = $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getBarringInfo(android.os.Message)>(null);

     label28:
        return;
    }

    private void sendDeviceState(int, boolean)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        int i0;
        boolean z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r8;
        com.android.internal.telephony.Phone $r9;
        com.android.internal.telephony.CommandsInterface $r10;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("send type: ");

        $r4 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: java.lang.String deviceTypeToString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>($r8, 1);

        $r9 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r10 = $r9.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r10.<com.android.internal.telephony.CommandsInterface: void sendDeviceState(int,boolean,android.os.Message)>(i0, z0, null);

        return;
    }

    private void setCellInfoMinInterval(int)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        int i0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        virtualinvoke $r1.<com.android.internal.telephony.Phone: void setCellInfoMinInterval(int)>(i0);

        return;
    }

    private void setLinkCapacityReportingCriteria()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        int[] $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r16, $r17;
        com.android.internal.telephony.Phone $r3, $r6, $r9, $r12, $r13, $r18;
        com.android.internal.telephony.HalVersion $r14, $r15;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $r3 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r2 = <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_DOWNLINK_THRESHOLDS>;

        $r1 = <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_UPLINK_THRESHOLDS>;

        virtualinvoke $r3.<com.android.internal.telephony.Phone: void setLinkCapacityReportingCriteria(int[],int[],int)>($r2, $r1, 1);

        $r6 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r5 = <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_DOWNLINK_THRESHOLDS>;

        $r4 = <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_UPLINK_THRESHOLDS>;

        virtualinvoke $r6.<com.android.internal.telephony.Phone: void setLinkCapacityReportingCriteria(int[],int[],int)>($r5, $r4, 2);

        $r9 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r8 = <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_DOWNLINK_THRESHOLDS>;

        $r7 = <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_UPLINK_THRESHOLDS>;

        virtualinvoke $r9.<com.android.internal.telephony.Phone: void setLinkCapacityReportingCriteria(int[],int[],int)>($r8, $r7, 3);

        $r12 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r11 = <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_DOWNLINK_THRESHOLDS>;

        $r10 = <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_UPLINK_THRESHOLDS>;

        virtualinvoke $r12.<com.android.internal.telephony.Phone: void setLinkCapacityReportingCriteria(int[],int[],int)>($r11, $r10, 4);

        $r13 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.Phone: com.android.internal.telephony.HalVersion getHalVersion()>();

        $r15 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r14.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r15);

        if $z0 == 0 goto label1;

        $r18 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r17 = <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_DOWNLINK_THRESHOLDS>;

        $r16 = <com.android.internal.telephony.DeviceStateMonitor: int[] LINK_CAPACITY_UPLINK_THRESHOLDS>;

        virtualinvoke $r18.<com.android.internal.telephony.Phone: void setLinkCapacityReportingCriteria(int[],int[],int)>($r17, $r16, 6);

     label1:
        return;
    }

    private void setSignalStrengthReportingCriteria()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        int[] $r1, $r3, $r5, $r7, $r12, $r14, $r16, $r18, $r20;
        com.android.internal.telephony.Phone $r2, $r4, $r6, $r8, $r9, $r13, $r15, $r17, $r19, $r21;
        com.android.internal.telephony.HalVersion $r10, $r11;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $r2 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r1 = <com.android.internal.telephony.DeviceStateMonitor$AccessNetworkThresholds: int[] GERAN>;

        virtualinvoke $r2.<com.android.internal.telephony.Phone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(1, $r1, 1, 1);

        $r4 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r3 = <com.android.internal.telephony.DeviceStateMonitor$AccessNetworkThresholds: int[] UTRAN>;

        virtualinvoke $r4.<com.android.internal.telephony.Phone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(2, $r3, 2, 1);

        $r6 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r5 = <com.android.internal.telephony.DeviceStateMonitor$AccessNetworkThresholds: int[] EUTRAN_RSRP>;

        virtualinvoke $r6.<com.android.internal.telephony.Phone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(3, $r5, 3, 1);

        $r8 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r7 = <com.android.internal.telephony.DeviceStateMonitor$AccessNetworkThresholds: int[] CDMA2000>;

        virtualinvoke $r8.<com.android.internal.telephony.Phone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(1, $r7, 4, 1);

        $r9 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.Phone: com.android.internal.telephony.HalVersion getHalVersion()>();

        $r11 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r10.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r11);

        if $z0 == 0 goto label1;

        $r13 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r12 = <com.android.internal.telephony.DeviceStateMonitor$AccessNetworkThresholds: int[] EUTRAN_RSRQ>;

        virtualinvoke $r13.<com.android.internal.telephony.Phone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(4, $r12, 3, 0);

        $r15 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r14 = <com.android.internal.telephony.DeviceStateMonitor$AccessNetworkThresholds: int[] EUTRAN_RSSNR>;

        virtualinvoke $r15.<com.android.internal.telephony.Phone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(5, $r14, 3, 1);

        $r17 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r16 = <com.android.internal.telephony.DeviceStateMonitor$AccessNetworkThresholds: int[] NGRAN_RSRSRP>;

        virtualinvoke $r17.<com.android.internal.telephony.Phone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(6, $r16, 6, 1);

        $r19 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r18 = <com.android.internal.telephony.DeviceStateMonitor$AccessNetworkThresholds: int[] NGRAN_RSRSRQ>;

        virtualinvoke $r19.<com.android.internal.telephony.Phone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(7, $r18, 6, 0);

        $r21 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r20 = <com.android.internal.telephony.DeviceStateMonitor$AccessNetworkThresholds: int[] NGRAN_SSSINR>;

        virtualinvoke $r21.<com.android.internal.telephony.Phone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(8, $r20, 6, 0);

     label1:
        return;
    }

    private void setUnsolResponseFilter(int, boolean)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        int i0, $i1, $i2;
        boolean z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;
        com.android.internal.telephony.Phone $r8;
        com.android.internal.telephony.CommandsInterface $r9;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label1;

        $i2 = r0.<com.android.internal.telephony.DeviceStateMonitor: int mUnsolicitedResponseFilter>;

        if i0 == $i2 goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("old filter: ");

        $i1 = r0.<com.android.internal.telephony.DeviceStateMonitor: int mUnsolicitedResponseFilter>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new filter: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>($r7, 1);

        $r8 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r9 = $r8.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r9.<com.android.internal.telephony.CommandsInterface: void setUnsolResponseFilter(int,android.os.Message)>(i0, null);

        r0.<com.android.internal.telephony.DeviceStateMonitor: int mUnsolicitedResponseFilter> = i0;

     label2:
        return;
    }

    private boolean shouldEnableBarringInfoReports()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $z0 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableHighPowerConsumptionIndications()>();

        return $z0;
    }

    private boolean shouldEnableDataCallDormancyChangedReports()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $z0 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableNrTrackingIndications()>();

        return $z0;
    }

    private boolean shouldEnableFullNetworkStateReports()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $z0 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableNrTrackingIndications()>();

        return $z0;
    }

    private boolean shouldEnableHighPowerConsumptionIndications()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $z0 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCharging>;

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsScreenOn>;

        if $z1 != 0 goto label2;

        $z2 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsTetheringOn>;

        if $z2 != 0 goto label2;

        $z3 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCarModeOn>;

        if $z3 == 0 goto label1;

        goto label2;

     label1:
        z4 = 0;

        goto label3;

     label2:
        z4 = 1;

     label3:
        return z4;
    }

    private boolean shouldEnableLinkCapacityEstimateReports()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $z0 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableHighPowerConsumptionIndications()>();

        return $z0;
    }

    private boolean shouldEnableNrTrackingIndications()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        int i0, $i1;
        com.android.internal.telephony.Phone $r1, $r4;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0, $z1;
        android.telephony.ServiceState $r5;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $r1 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "nr_nsa_tracking_screen_off_mode", 0);

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        $z1 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableHighPowerConsumptionIndications()>();

        return $z1;

     label1:
        return 1;

     label2:
        $r4 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.Phone mPhone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i1 = virtualinvoke $r5.<android.telephony.ServiceState: int getNrState()>();

        if $i1 != 3 goto label3;

        return 1;

     label3:
        $z0 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableHighPowerConsumptionIndications()>();

        return $z0;
    }

    private boolean shouldEnablePhysicalChannelConfigReports()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $z0 = specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean shouldEnableNrTrackingIndications()>();

        return $z0;
    }

    private boolean shouldEnableSignalStrengthReports()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $z0 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsAlwaysSignalStrengthReportingEnabled>;

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCharging>;

        if $z1 != 0 goto label2;

        $z2 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsScreenOn>;

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    public int computeCellInfoMinInterval()
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        $z0 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsScreenOn>;

        if $z0 == 0 goto label1;

        $z3 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsWifiConnected>;

        if $z3 != 0 goto label1;

        return 2000;

     label1:
        $z1 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsScreenOn>;

        if $z1 == 0 goto label2;

        $z2 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCharging>;

        if $z2 == 0 goto label2;

        return 2000;

     label2:
        return 10000;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        com.android.internal.telephony.IndentingPrintWriter $r3;
        java.lang.StringBuilder $r5, $r9, $r13, $r17, $r21, $r25, $r29, $r33, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String $r8, $r12, $r16, $r20, $r24, $r28, $r32, $r36, $r40;
        int $i0;
        com.android.internal.telephony.LocalLog $r42;
        java.io.PrintWriter r45;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        r1 := @parameter0: java.io.FileDescriptor;

        r45 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = new com.android.internal.telephony.IndentingPrintWriter;

        specialinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r45, "  ");

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mIsTetheringOn=");

        $z0 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsTetheringOn>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mIsScreenOn=");

        $z1 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsScreenOn>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mIsCharging=");

        $z2 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCharging>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mIsPowerSaveOn=");

        $z3 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsPowerSaveOn>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r20);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mIsLowDataExpected=");

        $z4 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsLowDataExpected>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r24);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mIsCarModeOn=");

        $z5 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsCarModeOn>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mUnsolicitedResponseFilter=");

        $i0 = r0.<com.android.internal.telephony.DeviceStateMonitor: int mUnsolicitedResponseFilter>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mIsWifiConnected=");

        $z6 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsWifiConnected>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r36);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mIsAlwaysSignalStrengthReportingEnabled=");

        $z7 = r0.<com.android.internal.telephony.DeviceStateMonitor: boolean mIsAlwaysSignalStrengthReportingEnabled>;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r40);

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("Local logs:");

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r42 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.LocalLog mLocalLog>;

        virtualinvoke $r42.<com.android.internal.telephony.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, $r3, r2);

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void flush()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        android.os.Message r1;
        java.lang.StringBuilder $r2, $r5;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.IllegalStateException $r8;
        java.lang.String $r9, r11;
        boolean z1, z2;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        r1 := @parameter0: android.os.Message;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage msg=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        z1 = 0;

        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void log(java.lang.String,boolean)>(r11, 0);

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 0: goto label6;
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label6;
            case 7: goto label2;
            case 8: goto label4;
            default: goto label1;
        };

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected message arrives. msg = ");

        $i3 = r1.<android.os.Message: int what>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        i4 = r1.<android.os.Message: int what>;

        $i1 = r1.<android.os.Message: int arg1>;

        if $i1 == 0 goto label3;

        z1 = 1;

     label3:
        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void onUpdateDeviceState(int,boolean)>(i4, z1);

        goto label7;

     label4:
        i5 = r1.<android.os.Message: int what>;

        z2 = 0;

        $i2 = r1.<android.os.Message: int arg1>;

        if $i2 == 0 goto label5;

        z2 = 1;

     label5:
        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void onUpdateDeviceState(int,boolean)>(i5, z2);

        goto label7;

     label6:
        specialinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: void onReset()>();

     label7:
        return;
    }

    public void registerForPhysicalChannelConfigNotifChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.RegistrantList mPhysicalChannelConfigRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        return;
    }

    public void setAlwaysReportSignalStrength(boolean)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        boolean z0;
        java.lang.Integer $r1;
        android.os.Message $r2;
        int i0;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        z0 := @parameter0: boolean;

        i0 = (int) z0;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: android.os.Message obtainMessage(int,java.lang.Object)>(8, $r1);

        virtualinvoke r0.<com.android.internal.telephony.DeviceStateMonitor: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    public void unregisterForPhysicalChannelConfigNotifChanged(android.os.Handler)
    {
        com.android.internal.telephony.DeviceStateMonitor r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.DeviceStateMonitor;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.DeviceStateMonitor: com.android.internal.telephony.RegistrantList mPhysicalChannelConfigRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }
}
