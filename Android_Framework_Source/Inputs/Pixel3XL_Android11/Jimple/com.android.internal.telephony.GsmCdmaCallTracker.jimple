public class com.android.internal.telephony.GsmCdmaCallTracker extends com.android.internal.telephony.CallTracker
{
    private static final boolean DBG_POLL;
    private static final java.lang.String LOG_TAG;
    private static final int MAX_CONNECTIONS_CDMA;
    public static final int MAX_CONNECTIONS_GSM;
    private static final int MAX_CONNECTIONS_PER_CALL_CDMA;
    private static final int MAX_CONNECTIONS_PER_CALL_GSM;
    private static final boolean REPEAT_POLLING;
    private static final boolean VDBG;
    private int m3WayCallFlashDelay;
    public com.android.internal.telephony.GsmCdmaCall mBackgroundCall;
    private com.android.internal.telephony.RegistrantList mCallWaitingRegistrants;
    public com.android.internal.telephony.GsmCdmaConnection[] mConnections;
    private boolean mDesiredMute;
    private java.util.ArrayList mDroppedDuringPoll;
    private android.content.BroadcastReceiver mEcmExitReceiver;
    public com.android.internal.telephony.GsmCdmaCall mForegroundCall;
    private boolean mHangupPendingMO;
    private boolean mIsInEmergencyCall;
    private com.android.internal.telephony.metrics.TelephonyMetrics mMetrics;
    private int mPendingCallClirMode;
    private boolean mPendingCallInEcm;
    private com.android.internal.telephony.GsmCdmaConnection mPendingMO;
    private com.android.internal.telephony.GsmCdmaPhone mPhone;
    public com.android.internal.telephony.GsmCdmaCall mRingingCall;
    public com.android.internal.telephony.PhoneConstants$State mState;
    private com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants;
    private com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants;

    public void <init>(com.android.internal.telephony.GsmCdmaPhone)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.RegistrantList $r1, $r2, $r9;
        java.util.ArrayList $r3;
        com.android.internal.telephony.GsmCdmaCall $r4, $r5, $r6;
        com.android.internal.telephony.PhoneConstants$State $r7;
        com.android.internal.telephony.metrics.TelephonyMetrics $r8;
        com.android.internal.telephony.GsmCdmaCallTracker$1 $r10;
        com.android.internal.telephony.CommandsInterface $r11, $r12, $r13, $r14;
        android.content.IntentFilter $r15;
        com.android.internal.telephony.GsmCdmaPhone $r16, r20;
        android.content.Context $r17;
        android.content.BroadcastReceiver $r18;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r20 := @parameter0: com.android.internal.telephony.GsmCdmaPhone;

        specialinvoke r0.<com.android.internal.telephony.CallTracker: void <init>()>();

        $r1 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r1.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants> = $r1;

        $r2 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r2.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(19);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll> = $r3;

        $r4 = new com.android.internal.telephony.GsmCdmaCall;

        specialinvoke $r4.<com.android.internal.telephony.GsmCdmaCall: void <init>(com.android.internal.telephony.GsmCdmaCallTracker)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall> = $r4;

        $r5 = new com.android.internal.telephony.GsmCdmaCall;

        specialinvoke $r5.<com.android.internal.telephony.GsmCdmaCall: void <init>(com.android.internal.telephony.GsmCdmaCallTracker)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall> = $r5;

        $r6 = new com.android.internal.telephony.GsmCdmaCall;

        specialinvoke $r6.<com.android.internal.telephony.GsmCdmaCall: void <init>(com.android.internal.telephony.GsmCdmaCallTracker)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall> = $r6;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mDesiredMute> = 0;

        $r7 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r7;

        $r8 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics> = $r8;

        $r9 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r9.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mCallWaitingRegistrants> = $r9;

        $r10 = new com.android.internal.telephony.GsmCdmaCallTracker$1;

        specialinvoke $r10.<com.android.internal.telephony.GsmCdmaCallTracker$1: void <init>(com.android.internal.telephony.GsmCdmaCallTracker)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.content.BroadcastReceiver mEcmExitReceiver> = $r10;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone> = r20;

        $r11 = r20.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi> = $r11;

        $r12 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void registerForCallStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 2, null);

        $r13 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void registerForOn(android.os.Handler,int,java.lang.Object)>(r0, 9, null);

        $r14 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: void registerForNotAvailable(android.os.Handler,int,java.lang.Object)>(r0, 10, null);

        $r15 = new android.content.IntentFilter;

        specialinvoke $r15.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r15.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.EMERGENCY_CALLBACK_MODE_CHANGED");

        $r16 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r17 = virtualinvoke $r16.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r18 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.content.BroadcastReceiver mEcmExitReceiver>;

        virtualinvoke $r17.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r18, $r15);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneType(boolean)>(1);

        return;
    }

    static com.android.internal.telephony.GsmCdmaConnection access$000(com.android.internal.telephony.GsmCdmaCallTracker)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaConnection $r1;

        r0 := @parameter0: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        return $r1;
    }

    private void checkAndEnableDataCallAfterEmergencyCallDropped()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        boolean z0, $z1;
        com.android.internal.telephony.GsmCdmaPhone $r2, $r7, $r8, $r10;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        com.android.internal.telephony.dataconnection.DataEnabledSettings $r9;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $z1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mIsInEmergencyCall>;

        if $z1 == 0 goto label2;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mIsInEmergencyCall> = 0;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        z0 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: boolean isInEcm()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkAndEnableDataCallAfterEmergencyCallDropped,inEcm=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>($r6);

        if z0 != 0 goto label1;

        $r8 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DataEnabledSettings getDataEnabledSettings()>();

        virtualinvoke $r9.<com.android.internal.telephony.dataconnection.DataEnabledSettings: void setInternalDataEnabled(boolean)>(1);

        $r10 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r10.<com.android.internal.telephony.GsmCdmaPhone: void notifyEmergencyCallRegistrants(boolean)>(0);

     label1:
        $r7 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaPhone: void sendEmergencyCallStateChange(boolean)>(0);

     label2:
        return;
    }

    private com.android.internal.telephony.Connection checkMtFindNewRinging(com.android.internal.telephony.DriverCall, int)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.DriverCall r1;
        int i0;
        com.android.internal.telephony.GsmCdmaConnection[] $r2, $r12, $r16, $r18;
        com.android.internal.telephony.GsmCdmaConnection $r3, $r13, $r17, r21;
        com.android.internal.telephony.GsmCdmaCall $r4, $r5;
        java.lang.StringBuilder $r6, $r19;
        java.lang.String $r7, $r20;
        com.android.internal.telephony.DriverCall$State $r8, $r9, $r10, $r11, $r14, $r15;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.DriverCall;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r3 = $r2[i0];

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall getCall()>();

        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        if $r4 != $r5 goto label1;

        $r18 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        r21 = $r18[i0];

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notify new ring ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>($r20);

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Phantom call appeared ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r7);

        r21 = null;

        $r9 = r1.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r8 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State ALERTING>;

        if $r9 == $r8 goto label2;

        r21 = null;

        $r11 = r1.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r10 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State DIALING>;

        if $r11 == $r10 goto label2;

        $r12 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r13 = $r12[i0];

        virtualinvoke $r13.<com.android.internal.telephony.GsmCdmaConnection: void onConnectedInOrOut()>();

        r21 = null;

        $r15 = r1.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r14 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State HOLDING>;

        if $r15 != $r14 goto label2;

        $r16 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r17 = $r16[i0];

        virtualinvoke $r17.<com.android.internal.telephony.GsmCdmaConnection: void onStartedHolding()>();

        r21 = null;

     label2:
        return r21;
    }

    private com.android.internal.telephony.Connection dialCdma(java.lang.String, int, android.os.Bundle) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        java.lang.String r1, $r16, $r21, $r23, $r26, $r37, $r42, $r43, $r44, $r45, r46, r47, r48;
        int i0, $i1, $i2, $i3, $i4;
        android.os.Bundle r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14;
        com.android.internal.telephony.GsmCdmaPhone $r3, $r5, $r8, $r10, $r11, $r14, $r17, $r32, $r33, $r40, $r41;
        android.content.Context $r4, $r6;
        java.lang.Object $r7;
        android.telephony.TelephonyManager $r9;
        com.android.internal.telephony.GsmCdmaConnection $r12, $r15, $r18, $r19, $r20, $r22, $r24, $r27, $r28, $r30, $r38, $r53;
        com.android.internal.telephony.GsmCdmaCall $r13, $r49;
        com.android.internal.telephony.CommandsInterface $r25;
        android.telephony.emergency.EmergencyNumber $r29;
        android.os.Message $r31;
        java.lang.StringBuilder $r34;
        com.android.internal.telephony.Connection $r39;
        com.android.internal.telephony.Call$State $r50, $r51;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void clearDisconnected()>();

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,java.lang.String)>($r4, r1);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void checkForDialIssues(boolean)>(z0);

        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r9 = (android.telephony.TelephonyManager) $r7;

        $r8 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i1 = virtualinvoke $r8.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        r46 = virtualinvoke $r9.<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso(int)>($i1);

        $r10 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i2 = virtualinvoke $r10.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        r47 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getSimCountryIsoForPhone(int)>($i2);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r46);

        if $z2 != 0 goto label01;

        $z11 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r47);

        if $z11 != 0 goto label01;

        $z12 = virtualinvoke r47.<java.lang.String: boolean equals(java.lang.Object)>(r46);

        if $z12 != 0 goto label01;

        z13 = 1;

        goto label02;

     label01:
        z13 = 0;

     label02:
        if z13 == 0 goto label08;

        $r42 = "us";

        $z7 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z7 == 0 goto label05;

        if z13 == 0 goto label03;

        $r45 = "vi";

        $z10 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>(r46);

        if $z10 != 0 goto label03;

        z13 = 1;

        goto label04;

     label03:
        z13 = 0;

     label04:
        goto label08;

     label05:
        $r43 = "vi";

        $z8 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z8 == 0 goto label08;

        if z13 == 0 goto label06;

        $r44 = "us";

        $z9 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>(r46);

        if $z9 != 0 goto label06;

        z13 = 1;

        goto label07;

     label06:
        z13 = 0;

     label07:
        goto label08;

     label08:
        if z13 == 0 goto label09;

        $r41 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r48 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.lang.String convertNumberIfNecessary(com.android.internal.telephony.Phone,java.lang.String)>($r41, r1);

        goto label10;

     label09:
        r48 = r1;

     label10:
        $r11 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        z1 = virtualinvoke $r11.<com.android.internal.telephony.GsmCdmaPhone: boolean isInEcm()>();

        if z1 == 0 goto label11;

        if z0 == 0 goto label11;

        $r40 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r40.<com.android.internal.telephony.GsmCdmaPhone: void handleTimerInEmergencyCallbackMode(int)>(1);

     label11:
        $r49 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r50 = virtualinvoke $r49.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r51 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r50 != $r51 goto label12;

        $r39 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection dialThreeWay(java.lang.String,android.os.Bundle)>(r48, r2);

        return $r39;

     label12:
        $r12 = new com.android.internal.telephony.GsmCdmaConnection;

        $r14 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r13 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        specialinvoke $r12.<com.android.internal.telephony.GsmCdmaConnection: void <init>(com.android.internal.telephony.GsmCdmaPhone,java.lang.String,com.android.internal.telephony.GsmCdmaCallTracker,com.android.internal.telephony.GsmCdmaCall,boolean)>($r14, r48, r0, $r13, z0);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO> = $r12;

        if r2 == null goto label13;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialGsm - emergency dialer: ");

        $z5 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.telecom.extra.IS_USER_INTENT_EMERGENCY_CALL");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r37);

        $r38 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $z6 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.telecom.extra.IS_USER_INTENT_EMERGENCY_CALL");

        virtualinvoke $r38.<com.android.internal.telephony.GsmCdmaConnection: void setHasKnownUserIntentEmergency(boolean)>($z6);

     label13:
        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mHangupPendingMO> = 0;

        $r15 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r16 = virtualinvoke $r15.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String getAddress()>();

        if $r16 == null goto label17;

        $r20 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r21 = virtualinvoke $r20.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String getAddress()>();

        $i3 = virtualinvoke $r21.<java.lang.String: int length()>();

        if $i3 == 0 goto label17;

        $r22 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r23 = virtualinvoke $r22.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String getAddress()>();

        $i4 = virtualinvoke $r23.<java.lang.String: int indexOf(int)>(78);

        if $i4 < 0 goto label14;

        goto label17;

     label14:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void setMute(boolean)>(0);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void disableDataCallInEmergencyCall(java.lang.String)>(r48);

        if z1 == 0 goto label16;

        if z1 == 0 goto label15;

        if z0 == 0 goto label15;

        goto label16;

     label15:
        $r32 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r32.<com.android.internal.telephony.GsmCdmaPhone: void exitEmergencyCallbackMode()>();

        $r33 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r33.<com.android.internal.telephony.GsmCdmaPhone: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>(r0, 14, null);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: int mPendingCallClirMode> = i0;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mPendingCallInEcm> = 1;

        goto label18;

     label16:
        $r25 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r24 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r26 = virtualinvoke $r24.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String getAddress()>();

        $r27 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $z3 = virtualinvoke $r27.<com.android.internal.telephony.GsmCdmaConnection: boolean isEmergencyCall()>();

        $r28 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r29 = virtualinvoke $r28.<com.android.internal.telephony.GsmCdmaConnection: android.telephony.emergency.EmergencyNumber getEmergencyNumberInfo()>();

        $r30 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $z4 = virtualinvoke $r30.<com.android.internal.telephony.GsmCdmaConnection: boolean hasKnownUserIntentEmergency()>();

        $r31 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r25.<com.android.internal.telephony.CommandsInterface: void dial(java.lang.String,boolean,android.telephony.emergency.EmergencyNumber,boolean,int,android.os.Message)>($r26, $z3, $r29, $z4, i0, $r31);

        goto label18;

     label17:
        $r53 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r53.<com.android.internal.telephony.GsmCdmaConnection: int mCause> = 7;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void pollCallsWhenSafe()>();

     label18:
        $z14 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mNumberConverted>;

        if $z14 == 0 goto label19;

        $r19 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        virtualinvoke $r19.<com.android.internal.telephony.GsmCdmaConnection: void restoreDialedNumberAfterConversion(java.lang.String)>(r1);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mNumberConverted> = 0;

     label19:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneState()>();

        $r17 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r17.<com.android.internal.telephony.GsmCdmaPhone: void notifyPreciseCallStateChanged()>();

        $r18 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        return $r18;
    }

    private com.android.internal.telephony.Connection dialGsm(java.lang.String, int, android.os.Bundle) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;
        com.android.internal.telephony.Connection $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection dialGsm(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Bundle)>(r1, i0, null, r2);

        return $r3;
    }

    private com.android.internal.telephony.Connection dialThreeWay(java.lang.String, android.os.Bundle)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        android.os.Bundle r1;
        com.android.internal.telephony.GsmCdmaCall $r2, $r4;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.telephony.GsmCdmaConnection $r3, $r11, $r15, $r22;
        com.android.internal.telephony.GsmCdmaPhone $r5, $r6, $r9;
        android.content.Context $r7;
        java.lang.Object $r8;
        android.telephony.CarrierConfigManager $r10;
        int $i0, $i1, $i2;
        com.android.internal.telephony.CommandsInterface $r12, $r16;
        java.lang.String $r13, $r21, r23;
        android.os.Message $r14, $r17;
        java.lang.StringBuilder $r18;
        android.os.PersistableBundle r25;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r23 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCall: boolean isIdle()>();

        if $z0 != 0 goto label6;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void disableDataCallInEmergencyCall(java.lang.String)>(r23);

        $r3 = new com.android.internal.telephony.GsmCdmaConnection;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $z1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mIsInEmergencyCall>;

        specialinvoke $r3.<com.android.internal.telephony.GsmCdmaConnection: void <init>(com.android.internal.telephony.GsmCdmaPhone,java.lang.String,com.android.internal.telephony.GsmCdmaCallTracker,com.android.internal.telephony.GsmCdmaCall,boolean)>($r5, r23, r0, $r4, $z1);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO> = $r3;

        if r1 == null goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialThreeWay - emergency dialer ");

        $z2 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.telecom.extra.IS_USER_INTENT_EMERGENCY_CALL");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r21);

        $r22 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $z3 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.telecom.extra.IS_USER_INTENT_EMERGENCY_CALL");

        virtualinvoke $r22.<com.android.internal.telephony.GsmCdmaConnection: void setHasKnownUserIntentEmergency(boolean)>($z3);

     label1:
        $r6 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r10 = (android.telephony.CarrierConfigManager) $r8;

        $r9 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r9.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        r25 = virtualinvoke $r10.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        if r25 == null goto label2;

        $i2 = virtualinvoke r25.<android.os.PersistableBundle: int getInt(java.lang.String)>("cdma_3waycall_flash_delay_int");

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: int m3WayCallFlashDelay> = $i2;

        goto label3;

     label2:
        r0.<com.android.internal.telephony.GsmCdmaCallTracker: int m3WayCallFlashDelay> = 0;

     label3:
        $i1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: int m3WayCallFlashDelay>;

        if $i1 <= 0 goto label4;

        $r16 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r17 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainMessage(int)>(20);

        interfaceinvoke $r16.<com.android.internal.telephony.CommandsInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>("", $r17);

        goto label5;

     label4:
        $r12 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r11 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r13 = virtualinvoke $r11.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String getAddress()>();

        $r14 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainMessage(int)>(16);

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>($r13, $r14);

     label5:
        $r15 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        return $r15;

     label6:
        return null;
    }

    private void disableDataCallInEmergencyCall(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        java.lang.String r1;
        com.android.internal.telephony.GsmCdmaPhone $r2;
        android.content.Context $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,java.lang.String)>($r3, r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>("disableDataCallInEmergencyCall");

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void setIsInEmergencyCall()>();

     label1:
        return;
    }

    private void dumpState()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        java.lang.StringBuilder $r1, $r6, $r13, $r20;
        com.android.internal.telephony.PhoneConstants$State $r3;
        java.lang.String $r5, $r9, $r11, $r16, $r18, $r23, $r25, $r28, $r30, $r32;
        com.android.internal.telephony.GsmCdmaCall $r8, $r12, $r15, $r19, $r22, $r26;
        java.lang.Object $r27, $r29, $r31;
        java.util.ArrayList r35, r37, r39;
        int i7, i8, i9, i10, i11, i12;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Phone State:");

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ringing call: ");

        $r8 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.GsmCdmaCall: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r11);

        $r12 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        r35 = virtualinvoke $r12.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        i7 = 0;

        i8 = interfaceinvoke r35.<java.util.List: int size()>();

     label1:
        if i7 >= i8 goto label2;

        $r31 = interfaceinvoke r35.<java.util.List: java.lang.Object get(int)>(i7);

        $r32 = virtualinvoke $r31.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r32);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Foreground call: ");

        $r15 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r16 = virtualinvoke $r15.<com.android.internal.telephony.GsmCdmaCall: java.lang.String toString()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r18);

        $r19 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        r37 = virtualinvoke $r19.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        i9 = 0;

        i10 = interfaceinvoke r37.<java.util.List: int size()>();

     label3:
        if i9 >= i10 goto label4;

        $r29 = interfaceinvoke r37.<java.util.List: java.lang.Object get(int)>(i9);

        $r30 = virtualinvoke $r29.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r30);

        i9 = i9 + 1;

        goto label3;

     label4:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Background call: ");

        $r22 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        $r23 = virtualinvoke $r22.<com.android.internal.telephony.GsmCdmaCall: java.lang.String toString()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r25);

        $r26 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        r39 = virtualinvoke $r26.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        i11 = 0;

        i12 = interfaceinvoke r39.<java.util.List: int size()>();

     label5:
        if i11 >= i12 goto label6;

        $r27 = interfaceinvoke r39.<java.util.List: java.lang.Object get(int)>(i11);

        $r28 = virtualinvoke $r27.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r28);

        i11 = i11 + 1;

        goto label5;

     label6:
        return;
    }

    private void fakeHoldForegroundBeforeDial()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        java.util.Iterator r1;
        com.android.internal.telephony.GsmCdmaCall $r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.internal.telephony.Connection $r5;
        com.android.internal.telephony.GsmCdmaConnection $r6;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.internal.telephony.Connection) $r4;

        $r6 = (com.android.internal.telephony.GsmCdmaConnection) $r5;

        virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaConnection: void fakeHoldBeforeDial()>();

        goto label1;

     label2:
        return;
    }

    private void flashAndSetGenericTrue()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;
        com.android.internal.telephony.GsmCdmaPhone $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainMessage(int)>(8);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>("", $r2);

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: void notifyPreciseCallStateChanged()>();

        return;
    }

    private com.android.internal.telephony.PhoneInternalInterface$SuppService getFailedService(int)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0;
        com.android.internal.telephony.PhoneInternalInterface$SuppService $r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        i0 := @parameter0: int;

        if i0 == 8 goto label5;

        tableswitch(i0)
        {
            case 11: goto label4;
            case 12: goto label3;
            case 13: goto label2;
            default: goto label1;
        };

     label1:
        $r5 = <com.android.internal.telephony.PhoneInternalInterface$SuppService: com.android.internal.telephony.PhoneInternalInterface$SuppService UNKNOWN>;

        return $r5;

     label2:
        $r2 = <com.android.internal.telephony.PhoneInternalInterface$SuppService: com.android.internal.telephony.PhoneInternalInterface$SuppService TRANSFER>;

        return $r2;

     label3:
        $r3 = <com.android.internal.telephony.PhoneInternalInterface$SuppService: com.android.internal.telephony.PhoneInternalInterface$SuppService SEPARATE>;

        return $r3;

     label4:
        $r4 = <com.android.internal.telephony.PhoneInternalInterface$SuppService: com.android.internal.telephony.PhoneInternalInterface$SuppService CONFERENCE>;

        return $r4;

     label5:
        $r1 = <com.android.internal.telephony.PhoneInternalInterface$SuppService: com.android.internal.telephony.PhoneInternalInterface$SuppService SWITCH>;

        return $r1;
    }

    private java.lang.String getNetworkCountryIso()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaPhone r2;
        java.lang.String r3;
        com.android.internal.telephony.ServiceStateTracker r4;
        com.android.internal.telephony.LocaleTracker r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r3 = "";

        if r2 == null goto label1;

        r4 = virtualinvoke r2.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        r3 = "";

        if r4 == null goto label1;

        r5 = virtualinvoke r4.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocaleTracker getLocaleTracker()>();

        r3 = "";

        if r5 == null goto label1;

        r3 = virtualinvoke r5.<com.android.internal.telephony.LocaleTracker: java.lang.String getCurrentCountry()>();

     label1:
        return r3;
    }

    private void handleCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCallWaitingNotification r1;
        com.android.internal.telephony.GsmCdmaConnection $r2;
        com.android.internal.telephony.GsmCdmaPhone $r3;
        android.content.Context $r4;
        com.android.internal.telephony.GsmCdmaCall $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaCallWaitingNotification;

        $r2 = new com.android.internal.telephony.GsmCdmaConnection;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        specialinvoke $r2.<com.android.internal.telephony.GsmCdmaConnection: void <init>(android.content.Context,com.android.internal.telephony.cdma.CdmaCallWaitingNotification,com.android.internal.telephony.GsmCdmaCallTracker,com.android.internal.telephony.GsmCdmaCall)>($r4, r1, r0, $r5);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneState()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void notifyCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification)>(r1);

        return;
    }

    private void handleEcmTimer(int)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0;
        com.android.internal.telephony.GsmCdmaPhone $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: void handleTimerInEmergencyCallbackMode(int)>(i0);

        return;
    }

    private void handleRadioNotAvailable()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void pollCallsWhenSafe()>();

        return;
    }

    private void internalClearDisconnected()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaCall $r1, $r2, $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCall: void clearDisconnected()>();

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCall: void clearDisconnected()>();

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaCall: void clearDisconnected()>();

        return;
    }

    private boolean isEmcRetryCause(int)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        i0 := @parameter0: int;

        if i0 == 3001 goto label2;

        if i0 != 3002 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean isPhoneTypeGsm()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0;
        com.android.internal.telephony.GsmCdmaPhone $r1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        i0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean lambda$isInOtaspCall$0(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.Connection r0;
        boolean $z0, $z1, z2;
        com.android.internal.telephony.GsmCdmaConnection $r1;

        r0 := @parameter0: com.android.internal.telephony.Connection;

        $z0 = r0 instanceof com.android.internal.telephony.GsmCdmaConnection;

        if $z0 == 0 goto label1;

        $r1 = (com.android.internal.telephony.GsmCdmaConnection) r0;

        $z1 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaConnection: boolean isOtaspCall()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private void logHangupEvent(com.android.internal.telephony.GsmCdmaCall)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        java.util.Iterator r1;
        com.android.internal.telephony.GsmCdmaConnection r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.internal.telephony.Connection $r5;
        com.android.internal.telephony.GsmCdmaPhone $r6;
        com.android.internal.telephony.metrics.TelephonyMetrics $r7;
        int $i0, i1;
        java.lang.String $r8;
        com.android.internal.telephony.CallStateException $r9;
        com.android.internal.telephony.GsmCdmaCall r10;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r10 := @parameter0: com.android.internal.telephony.GsmCdmaCall;

        $r3 = virtualinvoke r10.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.internal.telephony.Connection) $r4;

        r2 = (com.android.internal.telephony.GsmCdmaConnection) $r5;

     label2:
        i1 = virtualinvoke r2.<com.android.internal.telephony.GsmCdmaConnection: int getGsmCdmaIndex()>();

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        i1 = -1;

     label5:
        $r7 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r6 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r8 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.lang.String getNetworkCountryIso()>();

        virtualinvoke $r7.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilHangup(int,com.android.internal.telephony.GsmCdmaConnection,int,java.lang.String)>($i0, r2, i1, $r8);

        goto label1;

     label6:
        return;

        catch com.android.internal.telephony.CallStateException from label2 to label3 with label4;
    }

    private void notifyCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCallWaitingNotification r1;
        com.android.internal.telephony.RegistrantList r2;
        android.os.AsyncResult $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaCallWaitingNotification;

        r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mCallWaitingRegistrants>;

        if r2 == null goto label1;

        $r3 = new android.os.AsyncResult;

        specialinvoke $r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r1, null);

        virtualinvoke r2.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r3);

     label1:
        return;
    }

    private android.os.Message obtainCompleteMessage()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage(int)>(4);

        return $r1;
    }

    private android.os.Message obtainCompleteMessage(int)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0, $i1, $i2;
        android.os.Message $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: int mPendingOperations>;

        $i2 = $i1 + 1;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: int mPendingOperations> = $i2;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message mLastRelevantPoll> = null;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mNeedsPoll> = 1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainMessage(int)>(i0);

        return $r1;
    }

    private void operationComplete()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.os.Message $r1, $r2;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: int mPendingOperations>;

        $i1 = $i0 - 1;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: int mPendingOperations> = $i1;

        $i2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: int mPendingOperations>;

        if $i2 != 0 goto label1;

        $z0 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mNeedsPoll>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainMessage(int)>(1);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message mLastRelevantPoll> = $r1;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message mLastRelevantPoll>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void getCurrentCalls(android.os.Message)>($r2);

        goto label2;

     label1:
        $i3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: int mPendingOperations>;

        if $i3 >= 0 goto label2;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", "GsmCdmaCallTracker.pendingOperations < 0");

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: int mPendingOperations> = 0;

     label2:
        return;
    }

    private void reset()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0, i2;
        com.android.internal.telephony.GsmCdmaConnection r1, $r2, r4;
        com.android.internal.telephony.GsmCdmaConnection[] r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", "reset");

        r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        i0 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r1 = r3[i2];

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: boolean onDisconnect(int)>(36);

        virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: void dispose()>();

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        r4 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        if r4 == null goto label4;

        virtualinvoke r4.<com.android.internal.telephony.GsmCdmaConnection: boolean onDisconnect(int)>(36);

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaConnection: void dispose()>();

     label4:
        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections> = null;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO> = null;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void clearDisconnected()>();

        return;
    }

    private void updateMetrics(com.android.internal.telephony.GsmCdmaConnection[])
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaConnection[] r1;
        int i0, $i1, i2;
        com.android.internal.telephony.GsmCdmaConnection r3;
        java.util.ArrayList $r4;
        com.android.internal.telephony.GsmCdmaPhone $r5, $r8;
        com.android.internal.telephony.metrics.TelephonyMetrics $r6;
        java.lang.String $r7;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r9;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.GsmCdmaConnection[];

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r3 = r1[i2];

        if r3 == null goto label2;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r6 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i1 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r7 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.lang.String getNetworkCountryIso()>();

        virtualinvoke $r6.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilCallList(int,java.util.ArrayList,java.lang.String)>($i1, $r4, $r7);

        $r8 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        virtualinvoke $r9.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onRilCallListChanged(java.util.List)>($r4);

        return;
    }

    private void updatePhoneState()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.PhoneConstants$State r1, $r4, $r12, $r13, $r16, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r32, $r34;
        com.android.internal.telephony.GsmCdmaCall $r2, $r19, $r20;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.GsmCdmaConnection $r3;
        com.android.internal.telephony.GsmCdmaPhone $r9, $r10, $r21;
        com.android.internal.telephony.metrics.TelephonyMetrics $r11;
        int $i0;
        android.os.AsyncResult $r14, $r17;
        com.android.internal.telephony.RegistrantList $r15, $r18;
        com.android.internal.telephony.Phone r25;
        java.lang.StringBuilder $r30;
        java.lang.String $r33;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCall: boolean isRinging()>();

        if $z0 == 0 goto label1;

        $r24 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r24;

        goto label5;

     label1:
        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        if $r3 != null goto label4;

        $r19 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $z1 = virtualinvoke $r19.<com.android.internal.telephony.GsmCdmaCall: boolean isIdle()>();

        if $z1 == 0 goto label4;

        $r20 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        $z2 = virtualinvoke $r20.<com.android.internal.telephony.GsmCdmaCall: boolean isIdle()>();

        if $z2 != 0 goto label2;

        goto label4;

     label2:
        $r21 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r25 = virtualinvoke $r21.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone getImsPhone()>();

        $r23 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r22 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        if $r23 != $r22 goto label3;

        if r25 == null goto label3;

        virtualinvoke r25.<com.android.internal.telephony.Phone: void callEndCleanupHandOverCallIfAny()>();

     label3:
        $r26 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r26;

        goto label5;

     label4:
        $r27 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r27;

     label5:
        $r28 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r29 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r28 != $r29 goto label6;

        $r16 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if r1 == $r16 goto label6;

        $r18 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants>;

        $r17 = new android.os.AsyncResult;

        specialinvoke $r17.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r18.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r17);

        goto label7;

     label6:
        $r4 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if r1 != $r4 goto label7;

        $r13 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if r1 == $r13 goto label7;

        $r15 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants>;

        $r14 = new android.os.AsyncResult;

        specialinvoke $r14.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r15.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r14);

     label7:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update phone state, old=");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new=");

        $r32 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>($r33);

        $r34 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if $r34 == r1 goto label8;

        $r9 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r9.<com.android.internal.telephony.GsmCdmaPhone: void notifyPhoneStateChanged()>();

        $r11 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r10 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r10.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r12 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        virtualinvoke $r11.<com.android.internal.telephony.metrics.TelephonyMetrics: void writePhoneState(int,com.android.internal.telephony.PhoneConstants$State)>($i0, $r12);

     label8:
        return;
    }

    private void updatePhoneType(boolean)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        boolean z0, $z1, $z2;
        com.android.internal.telephony.GsmCdmaPhone $r1, $r3, $r7;
        com.android.internal.telephony.GsmCdmaConnection[] $r2, $r5;
        com.android.internal.telephony.CommandsInterface $r4, $r6;
        com.android.internal.telephony.dataconnection.DataEnabledSettings $r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void reset()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void pollCallsWhenSafe()>();

     label1:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z1 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label2;

        $r5 = newarray (com.android.internal.telephony.GsmCdmaConnection)[19];

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections> = $r5;

        $r6 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r6.<com.android.internal.telephony.CommandsInterface: void unregisterForCallWaitingInfo(android.os.Handler)>(r0);

        $z2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mIsInEmergencyCall>;

        if $z2 == 0 goto label3;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DataEnabledSettings getDataEnabledSettings()>();

        virtualinvoke $r8.<com.android.internal.telephony.dataconnection.DataEnabledSettings: void setInternalDataEnabled(boolean)>(1);

        goto label3;

     label2:
        $r2 = newarray (com.android.internal.telephony.GsmCdmaConnection)[8];

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections> = $r2;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mPendingCallInEcm> = 0;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mIsInEmergencyCall> = 0;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: int mPendingCallClirMode> = 0;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: void setEcmCanceledForEmergency(boolean)>(0);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: int m3WayCallFlashDelay> = 0;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void registerForCallWaitingInfo(android.os.Handler,int,java.lang.Object)>(r0, 15, null);

     label3:
        return;
    }

    public void acceptCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaConnection r1;
        com.android.internal.telephony.GsmCdmaCall $r2, $r5, $r9, $r11, $r12, $r15;
        com.android.internal.telephony.Call$State $r3, $r4, $r6, $r7;
        com.android.internal.telephony.CallStateException $r8;
        boolean $z0;
        com.android.internal.telephony.Connection $r10;
        com.android.internal.telephony.GsmCdmaPhone $r13;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r14;
        java.util.ArrayList $r16;
        com.android.internal.telephony.CommandsInterface $r17;
        android.os.Message $r18;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State INCOMING>;

        if $r3 != $r4 goto label1;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("phone", "acceptCall: incoming...");

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void setMute(boolean)>(0);

        $r13 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        $r15 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $r16 = virtualinvoke $r15.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        virtualinvoke $r14.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onRilAcceptCall(java.util.List)>($r16);

        $r17 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r18 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r17.<com.android.internal.telephony.CommandsInterface: void acceptCall(android.os.Message)>($r18);

        goto label4;

     label1:
        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r7 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        if $r6 != $r7 goto label5;

        $z0 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void setMute(boolean)>(0);

        goto label3;

     label2:
        $r9 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Connection getLatestConnection()>();

        r1 = (com.android.internal.telephony.GsmCdmaConnection) $r10;

        $r12 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $r11 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: void updateParent(com.android.internal.telephony.GsmCdmaCall,com.android.internal.telephony.GsmCdmaCall)>($r12, $r11);

        virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: void onConnectedInOrOut()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneState()>();

     label3:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void switchWaitingOrHoldingAndActive()>();

     label4:
        return;

     label5:
        $r8 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r8.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("phone not ringing");

        throw $r8;
    }

    public boolean canConference()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaCall $r1, $r4, $r7, $r8;
        com.android.internal.telephony.Call$State $r2, $r3, $r5, $r6;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r2 != $r3 goto label1;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r5 != $r6 goto label1;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        $z0 = virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaCall: boolean isFull()>();

        if $z0 != 0 goto label1;

        $r8 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $z1 = virtualinvoke $r8.<com.android.internal.telephony.GsmCdmaCall: boolean isFull()>();

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean canTransfer()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        boolean z0, z1;
        com.android.internal.telephony.GsmCdmaCall $r1, $r4, $r7, $r10;
        com.android.internal.telephony.Call$State $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        z0 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        z1 = 0;

        if z0 == 0 goto label3;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r2 == $r3 goto label1;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ALERTING>;

        if $r5 == $r6 goto label1;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r9 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        if $r8 != $r9 goto label2;

     label1:
        $r10 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r12 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r11 != $r12 goto label2;

        z1 = 1;

        goto label2;

     label2:
        return z1;

     label3:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", "canTransfer: not possible in CDMA");

        return 0;
    }

    public void checkForDialIssues(boolean) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.Optional $r1;
        java.lang.Boolean $r2, $r4;
        java.lang.Object $r3;
        com.android.internal.telephony.CommandsInterface $r5;
        int $i0;
        com.android.internal.telephony.CallStateException $r6, $r7, $r9, $r11, $r12, $r20, $r25;
        com.android.internal.telephony.GsmCdmaConnection $r8;
        com.android.internal.telephony.GsmCdmaCall $r10, $r13, $r15, $r18, $r21, $r23;
        com.android.internal.telephony.Call$State $r14, $r16, $r17, $r19, $r22, $r24;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <android.internal.telephony.sysprop.TelephonyProperties: java.util.Optional disable_call()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r3 = virtualinvoke $r1.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i0 = interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i0 != 1 goto label10;

        if z1 != 0 goto label09;

        $r8 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        if $r8 != null goto label08;

        $r10 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $z2 = virtualinvoke $r10.<com.android.internal.telephony.GsmCdmaCall: boolean isRinging()>();

        if $z2 != 0 goto label07;

        $z3 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z3 == 0 goto label02;

        $r21 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r22 = virtualinvoke $r21.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $z7 = virtualinvoke $r22.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z7 == 0 goto label02;

        $r23 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        $r24 = virtualinvoke $r23.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $z8 = virtualinvoke $r24.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z8 != 0 goto label01;

        goto label02;

     label01:
        $r25 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r25.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(6, "There is already a foreground and background call.");

        throw $r25;

     label02:
        $z9 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z9 != 0 goto label04;

        $r13 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $z5 = virtualinvoke $r14.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z5 == 0 goto label04;

        $r15 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r16 = virtualinvoke $r15.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r17 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r16 == $r17 goto label04;

        $r18 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        $r19 = virtualinvoke $r18.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $z6 = virtualinvoke $r19.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z6 != 0 goto label03;

        goto label04;

     label03:
        $r20 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r20.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(6, "There is already a foreground and background call.");

        throw $r20;

     label04:
        if z0 != 0 goto label06;

        $z4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isInOtaspCall()>();

        if $z4 != 0 goto label05;

        goto label06;

     label05:
        $r12 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r12.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(7, "OTASP provisioning is in process.");

        throw $r12;

     label06:
        return;

     label07:
        $r11 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r11.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(4, "Can\'t call while a call is ringing.");

        throw $r11;

     label08:
        $r9 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r9.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(3, "A call is already dialing.");

        throw $r9;

     label09:
        $r7 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r7.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(5, "Calling disabled via ro.telephony.disable-call property");

        throw $r7;

     label10:
        $r6 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r6.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(2, "Modem not powered");

        throw $r6;
    }

    public void cleanupCalls()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void pollCallsWhenSafe()>();

        return;
    }

    public void clearDisconnected()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void internalClearDisconnected()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneState()>();

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: void notifyPreciseCallStateChanged()>();

        return;
    }

    public void conference()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $z0 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage(int)>(11);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void conference(android.os.Message)>($r2);

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void flashAndSetGenericTrue()>();

     label2:
        return;
    }

    public com.android.internal.telephony.Connection dial(java.lang.String, android.os.Bundle) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean $z0;
        com.android.internal.telephony.Connection $r3, $r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection dialGsm(java.lang.String,int,android.os.Bundle)>(r1, 0, r2);

        return $r4;

     label1:
        $r3 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection dialCdma(java.lang.String,int,android.os.Bundle)>(r1, 0, r2);

        return $r3;
    }

    public com.android.internal.telephony.Connection dialGsm(java.lang.String, int, com.android.internal.telephony.UUSInfo, android.os.Bundle) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0, $i1, $i2, $i3;
        com.android.internal.telephony.UUSInfo r1;
        android.os.Bundle r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.android.internal.telephony.GsmCdmaPhone $r3, $r5, $r10, $r11, $r14, $r19;
        android.content.Context $r4;
        com.android.internal.telephony.GsmCdmaCall $r6, $r9, $r42;
        com.android.internal.telephony.Call$State $r7, $r8, $r43, $r44;
        com.android.internal.telephony.metrics.TelephonyMetrics $r12;
        com.android.internal.telephony.GsmCdmaConnection $r13, $r16, $r17, $r20, $r21, $r23, $r25, $r28, $r29, $r31, $r36, r45, $r47, r48;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r15;
        java.lang.String $r18, $r22, $r24, $r27, $r35, r39, r40;
        com.android.internal.telephony.CommandsInterface $r26;
        android.telephony.emergency.EmergencyNumber $r30;
        android.os.Message $r32;
        java.lang.Throwable $r37, $r38;
        java.lang.StringBuilder r46;
        com.android.internal.telephony.CallStateException r49;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r39 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.telephony.UUSInfo;

        r2 := @parameter3: android.os.Bundle;

        entermonitor r0;

     label01:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void clearDisconnected()>();

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,java.lang.String)>($r4, r39);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void checkForDialIssues(boolean)>(z0);

        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r40 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.lang.String convertNumberIfNecessary(com.android.internal.telephony.Phone,java.lang.String)>($r5, r39);

        $r6 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r7 != $r8 goto label06;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void switchWaitingOrHoldingAndActive()>();

     label02:
        staticinvoke <java.lang.Thread: void sleep(long)>(500L);

     label03:
        goto label05;

     label04:
        $r37 := @caughtexception;

     label05:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void fakeHoldForegroundBeforeDial()>();

     label06:
        $r42 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r43 = virtualinvoke $r42.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r44 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r43 != $r44 goto label17;

        r45 = new com.android.internal.telephony.GsmCdmaConnection;

        $r10 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r9 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        specialinvoke r45.<com.android.internal.telephony.GsmCdmaConnection: void <init>(com.android.internal.telephony.GsmCdmaPhone,java.lang.String,com.android.internal.telephony.GsmCdmaCallTracker,com.android.internal.telephony.GsmCdmaCall,boolean)>($r10, r40, r0, $r9, z0);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO> = r45;

     label07:
        if r2 == null goto label09;

     label08:
        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialGsm - emergency dialer: ");

        $z3 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.telecom.extra.IS_USER_INTENT_EMERGENCY_CALL");

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r35 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r35);

        $r36 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $z4 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.telecom.extra.IS_USER_INTENT_EMERGENCY_CALL");

        virtualinvoke $r36.<com.android.internal.telephony.GsmCdmaConnection: void setHasKnownUserIntentEmergency(boolean)>($z4);

     label09:
        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mHangupPendingMO> = 0;

        $r12 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r11 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i1 = virtualinvoke $r11.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r13 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        virtualinvoke $r12.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilDial(int,com.android.internal.telephony.GsmCdmaConnection,int,com.android.internal.telephony.UUSInfo)>($i1, $r13, i0, r1);

        $r14 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r15 = virtualinvoke $r14.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        $r16 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        virtualinvoke $r15.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onRilDial(com.android.internal.telephony.Connection)>($r16);

        $r17 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r18 = virtualinvoke $r17.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String getAddress()>();

        if $r18 == null goto label13;

        $r21 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r22 = virtualinvoke $r21.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String getAddress()>();

        $i2 = virtualinvoke $r22.<java.lang.String: int length()>();

        if $i2 == 0 goto label13;

        $r23 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r24 = virtualinvoke $r23.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String getAddress()>();

        $i3 = virtualinvoke $r24.<java.lang.String: int indexOf(int)>(78);

        if $i3 < 0 goto label11;

     label10:
        goto label13;

     label11:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void setMute(boolean)>(0);

        $r26 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r25 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r27 = virtualinvoke $r25.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String getAddress()>();

        $r28 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $z1 = virtualinvoke $r28.<com.android.internal.telephony.GsmCdmaConnection: boolean isEmergencyCall()>();

        $r29 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r30 = virtualinvoke $r29.<com.android.internal.telephony.GsmCdmaConnection: android.telephony.emergency.EmergencyNumber getEmergencyNumberInfo()>();

        $r31 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $z2 = virtualinvoke $r31.<com.android.internal.telephony.GsmCdmaConnection: boolean hasKnownUserIntentEmergency()>();

        $r32 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r26.<com.android.internal.telephony.CommandsInterface: void dial(java.lang.String,boolean,android.telephony.emergency.EmergencyNumber,boolean,int,com.android.internal.telephony.UUSInfo,android.os.Message)>($r27, $z1, $r30, $z2, i0, r1, $r32);

     label12:
        goto label14;

     label13:
        $r47 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r47.<com.android.internal.telephony.GsmCdmaConnection: int mCause> = 7;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void pollCallsWhenSafe()>();

     label14:
        $z5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mNumberConverted>;

        if $z5 == 0 goto label15;

        $r20 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        virtualinvoke $r20.<com.android.internal.telephony.GsmCdmaConnection: void restoreDialedNumberAfterConversion(java.lang.String)>(r39);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mNumberConverted> = 0;

     label15:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneState()>();

        $r19 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r19.<com.android.internal.telephony.GsmCdmaPhone: void notifyPreciseCallStateChanged()>();

        r48 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

     label16:
        exitmonitor r0;

        return r48;

     label17:
        r49 = new com.android.internal.telephony.CallStateException;

        specialinvoke r49.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot dial in current state");

        throw r49;

     label18:
        $r38 := @caughtexception;

        exitmonitor r0;

        throw $r38;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label17 to label18 with label18;
    }

    public com.android.internal.telephony.Connection dialGsm(java.lang.String, com.android.internal.telephony.UUSInfo, android.os.Bundle) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        java.lang.String r1;
        com.android.internal.telephony.UUSInfo r2;
        android.os.Bundle r3;
        com.android.internal.telephony.Connection $r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.UUSInfo;

        r3 := @parameter2: android.os.Bundle;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection dialGsm(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Bundle)>(r1, 0, r2, r3);

        return $r4;
    }

    public void dispatchCsCallRadioTech(int)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0, i1, i2;
        com.android.internal.telephony.GsmCdmaConnection[] r1;
        com.android.internal.telephony.GsmCdmaConnection r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        if r1 != null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>("dispatchCsCallRadioTech: mConnections is null");

        return;

     label1:
        i1 = lengthof r1;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        r2 = r1[i2];

        if r2 == null goto label3;

        virtualinvoke r2.<com.android.internal.telephony.GsmCdmaConnection: void setCallRadioTech(int)>(i0);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.lang.StringBuilder $r3, $r9, $r14, $r19, $r24, $r29, $r34, $r39, $r44, $r48, $r53, $r57, $r62, $r66, $r70, $r79;
        com.android.internal.telephony.GsmCdmaConnection[] $r5, $r8, $r86;
        int $i0, $i1, $i2, $i3, i4, i5, $i6;
        java.lang.String $r7, $r13, $r18, $r23, $r28, $r33, $r38, $r43, $r47, $r52, $r56, $r61, $r65, $r69, $r73, $r83;
        com.android.internal.telephony.RegistrantList $r11, $r16, $r81;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.ArrayList $r21, $r76, $r95;
        com.android.internal.telephony.GsmCdmaCall $r26, $r31, $r36;
        com.android.internal.telephony.GsmCdmaConnection $r41, $r87;
        com.android.internal.telephony.GsmCdmaPhone $r50;
        com.android.internal.telephony.PhoneConstants$State $r59;
        java.lang.Object[] $r74, $r84;
        java.lang.Integer $r75, $r85;
        java.lang.Object $r77;
        java.io.FileDescriptor r89;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r89 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("GsmCdmaCallTracker extends:");

        specialinvoke r0.<com.android.internal.telephony.CallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r89, r1, r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mConnections: length=");

        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $i0 = lengthof $r5;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        i4 = 0;

     label1:
        $r8 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $i1 = lengthof $r8;

        if i4 >= $i1 goto label2;

        $r84 = newarray (java.lang.Object)[2];

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r84[0] = $r85;

        $r86 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r87 = $r86[i4];

        $r84[1] = $r87;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("  mConnections[%d]=%s\n", $r84);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVoiceCallEndedRegistrants=");

        $r11 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVoiceCallStartedRegistrants=");

        $r16 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $z0 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label3;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCallWaitingRegistrants=");

        $r81 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mCallWaitingRegistrants>;

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r81);

        $r83 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r83);

     label3:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDroppedDuringPoll: size=");

        $r21 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $i2 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        i5 = 0;

     label4:
        $r95 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $i6 = virtualinvoke $r95.<java.util.ArrayList: int size()>();

        if i5 >= $i6 goto label5;

        $r74 = newarray (java.lang.Object)[2];

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r74[0] = $r75;

        $r76 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $r77 = virtualinvoke $r76.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r74[1] = $r77;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("  mDroppedDuringPoll[%d]=%s\n", $r74);

        i5 = i5 + 1;

        goto label4;

     label5:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRingingCall=");

        $r26 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mForegroundCall=");

        $r31 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBackgroundCall=");

        $r36 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r38);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingMO=");

        $r41 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHangupPendingMO=");

        $z1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mHangupPendingMO>;

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r47);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPhone=");

        $r50 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r50);

        $r52 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r52);

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDesiredMute=");

        $z2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mDesiredMute>;

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r56);

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mState=");

        $r59 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r59);

        $r61 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r61);

        $z3 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z3 != 0 goto label6;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingCallInEcm=");

        $z4 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mPendingCallInEcm>;

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r65 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r65);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsInEmergencyCall=");

        $z5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mIsInEmergencyCall>;

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r69);

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingCallClirMode=");

        $i3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: int mPendingCallClirMode>;

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r73);

     label6:
        return;
    }

    public void explicitCallTransfer()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage(int)>(13);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void explicitCallTransfer(android.os.Message)>($r2);

        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", "GsmCdmaCallTracker finalized");

        return;
    }

    public com.android.internal.telephony.GsmCdmaConnection getConnectionByIndex(com.android.internal.telephony.GsmCdmaCall, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0, $i1;
        com.android.internal.telephony.GsmCdmaConnection r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        com.android.internal.telephony.Connection $r4;
        com.android.internal.telephony.GsmCdmaCall r5;
        java.util.Iterator r6;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r5 := @parameter0: com.android.internal.telephony.GsmCdmaCall;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r5.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        r6 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.internal.telephony.Connection) $r3;

        r1 = (com.android.internal.telephony.GsmCdmaConnection) $r4;

        $z1 = r1.<com.android.internal.telephony.GsmCdmaConnection: boolean mDisconnected>;

        if $z1 != 0 goto label2;

        $i1 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: int getGsmCdmaIndex()>();

        if $i1 != i0 goto label2;

        return r1;

     label2:
        goto label1;

     label3:
        return null;
    }

    public int getMaxConnectionsPerCall()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;
        boolean $z0;
        byte b0;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        b0 = 5;

        goto label2;

     label1:
        b0 = 1;

     label2:
        return b0;
    }

    public boolean getMute()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $z0 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mDesiredMute>;

        return $z0;
    }

    public com.android.internal.telephony.GsmCdmaPhone getPhone()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        return $r1;
    }

    public volatile com.android.internal.telephony.Phone getPhone()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone getPhone()>();

        return $r1;
    }

    public com.android.internal.telephony.PhoneConstants$State getState()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.PhoneConstants$State $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        return $r1;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaConnection r1, $r20, $r50, $r64, $r67, $r68, $r70;
        android.os.Message $r2, $r71, r91;
        java.lang.Object $r3, $r5, $r7, $r19, $r25, $r39, $r47, $r55, $r57, $r76, $r83;
        android.os.AsyncResult $r4, $r40, $r48, $r77, $r84, r94, r103;
        java.lang.Throwable $r6, $r31, $r32, $r41, $r49, $r56, $r78, $r85;
        java.util.ArrayList $r8, $r12, $r16, $r17, $r18, $r22, $r24, $r28;
        com.android.internal.telephony.GsmCdmaPhone $r9, $r10, $r14, $r23, $r36, $r44, $r52, $r60, $r63, $r73, $r88, $r99, $r108;
        com.android.internal.telephony.metrics.TelephonyMetrics $r11;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, i21, i22, i23, $i24, i25, i26;
        java.lang.String $r13, $r38, $r46, $r54, $r62, $r66, $r75, $r90, r105, r116;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r15;
        com.android.internal.telephony.GsmCdmaCall $r21, $r27, $r79, $r80, $r86;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        com.android.internal.telephony.Connection $r26, r97, r98;
        android.telephony.cdma.CdmaCellLocation $r29;
        android.telephony.gsm.GsmCellLocation $r30;
        int[] $r33;
        com.android.internal.telephony.CommandException$Error $r34, $r106;
        java.lang.StringBuilder $r35, $r43, $r51, $r59, $r72, $r87;
        java.lang.RuntimeException $r37, $r45, $r53, $r61, $r74, $r89;
        com.android.internal.telephony.GsmCdmaCallTracker$2 $r42;
        long $l5;
        com.android.internal.telephony.cdma.CdmaCallWaitingNotification $r58;
        com.android.internal.telephony.CommandsInterface $r65;
        android.telephony.emergency.EmergencyNumber $r69;
        com.android.internal.telephony.Call$State $r81, $r82;
        com.android.internal.telephony.PhoneInternalInterface$SuppService $r100;
        com.android.internal.telephony.CommandException r104;
        com.android.internal.telephony.LastCallFailCause r107;
        android.telephony.CellIdentity $r109;
        android.telephony.CellLocation r110;
        java.lang.Object[] $r111;
        java.lang.Integer $r112, $r113, $r115;
        android.telephony.TelephonyManager $r114;
        java.util.Iterator r117;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r91 := @parameter0: android.os.Message;

        i19 = r91.<android.os.Message: int what>;

        if i19 == 1 goto label38;

        if i19 == 2 goto label37;

        if i19 == 3 goto label37;

        if i19 == 4 goto label36;

        if i19 == 5 goto label21;

        if i19 == 20 goto label18;

        tableswitch(i19)
        {
            case 8: goto label12;
            case 9: goto label11;
            case 10: goto label10;
            case 11: goto label09;
            case 12: goto label12;
            case 13: goto label12;
            case 14: goto label06;
            case 15: goto label04;
            case 16: goto label02;
            default: goto label01;
        };

     label01:
        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected event ");

        $i17 = r91.<android.os.Message: int what>;

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handled by phone type ");

        $r88 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i18 = virtualinvoke $r88.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r89 = new java.lang.RuntimeException;

        $r90 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r89.<java.lang.RuntimeException: void <init>(java.lang.String)>($r90);

        throw $r89;

     label02:
        $z6 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z6 != 0 goto label03;

        $r47 = r91.<android.os.Message: java.lang.Object obj>;

        $r48 = (android.os.AsyncResult) $r47;

        $r49 = $r48.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r49 != null goto label39;

        $r50 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        virtualinvoke $r50.<com.android.internal.telephony.GsmCdmaConnection: void onConnectedInOrOut()>();

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO> = null;

        goto label39;

     label03:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected event ");

        $i6 = r91.<android.os.Message: int what>;

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handled by phone type ");

        $r44 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i7 = virtualinvoke $r44.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r45 = new java.lang.RuntimeException;

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<java.lang.RuntimeException: void <init>(java.lang.String)>($r46);

        throw $r45;

     label04:
        $z7 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z7 != 0 goto label05;

        $r55 = r91.<android.os.Message: java.lang.Object obj>;

        r94 = (android.os.AsyncResult) $r55;

        $r56 = r94.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r56 != null goto label39;

        $r57 = r94.<android.os.AsyncResult: java.lang.Object result>;

        $r58 = (com.android.internal.telephony.cdma.CdmaCallWaitingNotification) $r57;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void handleCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification)>($r58);

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", "Event EVENT_CALL_WAITING_INFO_CDMA Received");

        goto label39;

     label05:
        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected event ");

        $i8 = r91.<android.os.Message: int what>;

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handled by phone type ");

        $r52 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i9 = virtualinvoke $r52.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r53 = new java.lang.RuntimeException;

        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<java.lang.RuntimeException: void <init>(java.lang.String)>($r54);

        throw $r53;

     label06:
        $z8 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z8 != 0 goto label08;

        $z9 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mPendingCallInEcm>;

        if $z9 == 0 goto label07;

        $r65 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r64 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r66 = virtualinvoke $r64.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String getAddress()>();

        $r67 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $z10 = virtualinvoke $r67.<com.android.internal.telephony.GsmCdmaConnection: boolean isEmergencyCall()>();

        $r68 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r69 = virtualinvoke $r68.<com.android.internal.telephony.GsmCdmaConnection: android.telephony.emergency.EmergencyNumber getEmergencyNumberInfo()>();

        $r70 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $z11 = virtualinvoke $r70.<com.android.internal.telephony.GsmCdmaConnection: boolean hasKnownUserIntentEmergency()>();

        $i12 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: int mPendingCallClirMode>;

        $r71 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r65.<com.android.internal.telephony.CommandsInterface: void dial(java.lang.String,boolean,android.telephony.emergency.EmergencyNumber,boolean,int,android.os.Message)>($r66, $z10, $r69, $z11, $i12, $r71);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mPendingCallInEcm> = 0;

     label07:
        $r63 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r63.<com.android.internal.telephony.GsmCdmaPhone: void unsetOnEcbModeExitResponse(android.os.Handler)>(r0);

        goto label39;

     label08:
        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected event ");

        $i10 = r91.<android.os.Message: int what>;

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handled by phone type ");

        $r60 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i11 = virtualinvoke $r60.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r61 = new java.lang.RuntimeException;

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<java.lang.RuntimeException: void <init>(java.lang.String)>($r62);

        throw $r61;

     label09:
        $z12 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z12 == 0 goto label12;

        $r83 = r91.<android.os.Message: java.lang.Object obj>;

        $r84 = (android.os.AsyncResult) $r83;

        $r85 = $r84.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r85 == null goto label12;

        $r86 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        r97 = virtualinvoke $r86.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Connection getLatestConnection()>();

        if r97 == null goto label12;

        virtualinvoke r97.<com.android.internal.telephony.Connection: void onConferenceMergeFailed()>();

        goto label12;

     label10:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void handleRadioNotAvailable()>();

        goto label39;

     label11:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void handleRadioAvailable()>();

        goto label39;

     label12:
        $z13 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z13 == 0 goto label16;

        $r76 = r91.<android.os.Message: java.lang.Object obj>;

        $r77 = (android.os.AsyncResult) $r76;

        $r78 = $r77.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r78 == null goto label15;

        $i16 = r91.<android.os.Message: int what>;

        if $i16 != 8 goto label14;

        $r79 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        r98 = virtualinvoke $r79.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Connection getLatestConnection()>();

        if r98 == null goto label14;

        $r80 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        $r81 = virtualinvoke $r80.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r82 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r81 == $r82 goto label13;

        virtualinvoke r98.<com.android.internal.telephony.Connection: void onConnectionEvent(java.lang.String,android.os.Bundle)>("android.telecom.event.CALL_HOLD_FAILED", null);

        goto label14;

     label13:
        virtualinvoke r98.<com.android.internal.telephony.Connection: void onConnectionEvent(java.lang.String,android.os.Bundle)>("android.telecom.event.CALL_SWITCH_FAILED", null);

     label14:
        $r99 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i20 = r91.<android.os.Message: int what>;

        $r100 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneInternalInterface$SuppService getFailedService(int)>($i20);

        virtualinvoke $r99.<com.android.internal.telephony.GsmCdmaPhone: void notifySuppServiceFailed(com.android.internal.telephony.PhoneInternalInterface$SuppService)>($r100);

     label15:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void operationComplete()>();

        goto label39;

     label16:
        $i13 = r91.<android.os.Message: int what>;

        if $i13 != 8 goto label17;

        goto label39;

     label17:
        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected event ");

        $i14 = r91.<android.os.Message: int what>;

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handled by phone type ");

        $r73 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i15 = virtualinvoke $r73.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r74 = new java.lang.RuntimeException;

        $r75 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r74.<java.lang.RuntimeException: void <init>(java.lang.String)>($r75);

        throw $r74;

     label18:
        $z5 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z5 != 0 goto label20;

        $r39 = r91.<android.os.Message: java.lang.Object obj>;

        $r40 = (android.os.AsyncResult) $r39;

        $r41 = $r40.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r41 != null goto label19;

        $r42 = new com.android.internal.telephony.GsmCdmaCallTracker$2;

        specialinvoke $r42.<com.android.internal.telephony.GsmCdmaCallTracker$2: void <init>(com.android.internal.telephony.GsmCdmaCallTracker)>(r0);

        $i4 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: int m3WayCallFlashDelay>;

        $l5 = (long) $i4;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean postDelayed(java.lang.Runnable,long)>($r42, $l5);

        goto label39;

     label19:
        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO> = null;

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", "exception happened on Blank Flash for 3-way call");

        goto label39;

     label20:
        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected event ");

        $i2 = r91.<android.os.Message: int what>;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handled by phone type ");

        $r36 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i3 = virtualinvoke $r36.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r37 = new java.lang.RuntimeException;

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.RuntimeException: void <init>(java.lang.String)>($r38);

        throw $r37;

     label21:
        $r5 = r91.<android.os.Message: java.lang.Object obj>;

        r103 = (android.os.AsyncResult) $r5;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void operationComplete()>();

        $r6 = r103.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r6 == null goto label25;

        $r31 = r103.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z4 = $r31 instanceof com.android.internal.telephony.CommandException;

        if $z4 == 0 goto label24;

        $r32 = r103.<android.os.AsyncResult: java.lang.Throwable exception>;

        r104 = (com.android.internal.telephony.CommandException) $r32;

        $r33 = <com.android.internal.telephony.GsmCdmaCallTracker$3: int[] $SwitchMap$com$android$internal$telephony$CommandException$Error>;

        $r34 = virtualinvoke r104.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $i1 = virtualinvoke $r34.<com.android.internal.telephony.CommandException$Error: int ordinal()>();

        i21 = $r33[$i1];

        if i21 == 1 goto label22;

        if i21 == 2 goto label22;

        if i21 == 3 goto label22;

        if i21 == 4 goto label22;

        i22 = 16;

        r105 = null;

        goto label23;

     label22:
        i22 = 65535;

        $r106 = virtualinvoke r104.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        r105 = virtualinvoke $r106.<com.android.internal.telephony.CommandException$Error: java.lang.String toString()>();

     label23:
        goto label26;

     label24:
        i22 = 16;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", "Exception during getLastCallFailCause, assuming normal disconnect");

        r105 = null;

        goto label26;

     label25:
        $r7 = r103.<android.os.AsyncResult: java.lang.Object result>;

        r107 = (com.android.internal.telephony.LastCallFailCause) $r7;

        i22 = r107.<com.android.internal.telephony.LastCallFailCause: int causeCode>;

        r105 = r107.<com.android.internal.telephony.LastCallFailCause: java.lang.String vendorCause>;

     label26:
        if i22 == 34 goto label27;

        if i22 == 41 goto label27;

        if i22 == 42 goto label27;

        if i22 == 44 goto label27;

        if i22 == 49 goto label27;

        if i22 == 58 goto label27;

        if i22 != 65535 goto label30;

     label27:
        $r108 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r109 = virtualinvoke $r108.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.CellIdentity getCellIdentity()>();

        r110 = virtualinvoke $r109.<android.telephony.CellIdentity: android.telephony.CellLocation asCellLocation()>();

        i23 = -1;

        if r110 == null goto label29;

        $z2 = r110 instanceof android.telephony.gsm.GsmCellLocation;

        if $z2 == 0 goto label28;

        $r30 = (android.telephony.gsm.GsmCellLocation) r110;

        i23 = virtualinvoke $r30.<android.telephony.gsm.GsmCellLocation: int getCid()>();

        goto label29;

     label28:
        i23 = -1;

        $z3 = r110 instanceof android.telephony.cdma.CdmaCellLocation;

        if $z3 == 0 goto label29;

        $r29 = (android.telephony.cdma.CdmaCellLocation) r110;

        i23 = virtualinvoke $r29.<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>();

     label29:
        $r111 = newarray (java.lang.Object)[3];

        $r112 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i22);

        $r111[0] = $r112;

        $r113 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i23);

        $r111[1] = $r113;

        $r114 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i24 = virtualinvoke $r114.<android.telephony.TelephonyManager: int getNetworkType()>();

        $r115 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24);

        $r111[2] = $r115;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(50106, $r111);

     label30:
        $z14 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isEmcRetryCause(int)>(i22);

        if $z14 == 0 goto label33;

        r116 = "";

        $r21 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r22 = $r21.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList mConnections>;

        r117 = virtualinvoke $r22.<java.util.ArrayList: java.util.Iterator iterator()>();

     label31:
        $z0 = interfaceinvoke r117.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label32;

        $r25 = interfaceinvoke r117.<java.util.Iterator: java.lang.Object next()>();

        $r26 = (com.android.internal.telephony.Connection) $r25;

        r1 = (com.android.internal.telephony.GsmCdmaConnection) $r26;

        r116 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String getOrigDialString()>();

        $r27 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall getCall()>();

        virtualinvoke $r27.<com.android.internal.telephony.GsmCdmaCall: void detach(com.android.internal.telephony.GsmCdmaConnection)>(r1);

        $r28 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r28.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        goto label31;

     label32:
        $r23 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r23.<com.android.internal.telephony.GsmCdmaPhone: void notifyVolteSilentRedial(java.lang.String,int)>(r116, i22);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneState()>();

        $r24 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $z1 = virtualinvoke $r24.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label33;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>("LAST_CALL_FAIL_CAUSE - no Dropped normal Call");

        return;

     label33:
        i25 = 0;

        $r8 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        i26 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label34:
        if i25 >= i26 goto label35;

        $r18 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i25);

        $r20 = (com.android.internal.telephony.GsmCdmaConnection) $r19;

        virtualinvoke $r20.<com.android.internal.telephony.GsmCdmaConnection: void onRemoteDisconnect(int,java.lang.String)>(i22, r105);

        i25 = i25 + 1;

        goto label34;

     label35:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneState()>();

        $r9 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r9.<com.android.internal.telephony.GsmCdmaPhone: void notifyPreciseCallStateChanged()>();

        $r11 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r10 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r10.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r12 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $r13 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.lang.String getNetworkCountryIso()>();

        virtualinvoke $r11.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilCallList(int,java.util.ArrayList,java.lang.String)>($i0, $r12, $r13);

        $r14 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r15 = virtualinvoke $r14.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        $r16 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r15.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onRilCallListChanged(java.util.List)>($r16);

        $r17 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r17.<java.util.ArrayList: void clear()>();

        goto label39;

     label36:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void operationComplete()>();

        goto label39;

     label37:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void pollCallsWhenSafe()>();

        goto label39;

     label38:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", "Event EVENT_POLL_CALLS_RESULT Received");

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message mLastRelevantPoll>;

        if r91 != $r2 goto label39;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mNeedsPoll> = 0;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message mLastRelevantPoll> = null;

        $r3 = r91.<android.os.Message: java.lang.Object obj>;

        $r4 = (android.os.AsyncResult) $r3;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void handlePollCalls(android.os.AsyncResult)>($r4);

     label39:
        return;
    }

    protected void handlePollCalls(android.os.AsyncResult)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i12, $i13, $i18, $i19, i21, i22, $i23, i24, i26, i27, i29, i30;
        java.lang.Throwable $r2, $r3, $r136;
        boolean $z0, $z1, $z2, $z3, $z4, $z7, $z11, $z12, $z13, $z14, $z15, $z16, $z18, $z19, $z21, $z22, $z23, $z24, $z28, $z31, $z32, $z34, $z35, $z36, z37, z38, z39, z40, z41, z42, $z43, z45, z47, z48, z49, z51, z52, z53, z54, z55, z56, z57, $z58, $z59;
        java.util.ArrayList $r5, $r6, $r7, $r8, $r9, $r32, $r34, $r42, $r51, $r56, $r57, $r65, $r67, $r76, $r83, $r84, $r103, $r157, r189, r190, r201;
        com.android.internal.telephony.GsmCdmaPhone $r10, $r11, $r16, $r27, $r30, $r44, $r58, $r68, $r69, $r92, $r102, $r131, $r132, $r185;
        java.lang.Object $r12, $r19, $r33, $r70, $r77, $r104, $r133, $r134, r138, r141;
        java.lang.String $r15, $r25, $r29, $r38, $r41, $r49, $r55, $r74, $r81, $r91, $r108, $r117, $r146;
        com.android.internal.telephony.CommandsInterface $r17;
        android.os.Message $r18;
        com.android.internal.telephony.Call$State $r23, $r26, $r47, $r98, $r99, $r106, $r111, $r112, $r115, $r118, $r119;
        com.android.internal.telephony.metrics.TelephonyMetrics $r28;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r31;
        long $l10;
        byte $b11;
        com.android.internal.telephony.GsmCdmaCall $r46, $r61, $r62, $r64, $r66;
        com.android.internal.telephony.GsmCdmaConnection $r50, $r60, $r75, $r82, $r85, $r87, $r95, $r97, $r101, $r110, $r123, $r124, $r125, $r127, $r128, r140, r143, $r148, $r156, $r172, r175, r178, r193, r198;
        com.android.internal.telephony.GsmCdmaConnection[] $r52, $r59, $r63, $r93, $r94, $r96, $r100, $r109, $r122, $r126, $r142, $r147, r151, $r155, $r168, r169, $r186;
        com.android.internal.telephony.DriverCall$State $r120, $r121;
        com.android.internal.telephony.CallStateException $r135;
        android.os.AsyncResult r137;
        com.android.internal.telephony.Connection r139, r154, r159, r163, r166, r180, r183;
        com.android.internal.telephony.DriverCall r144;
        java.util.Iterator r158, r162, r165, r179, r182;
        com.android.internal.telephony.Phone r187;
        java.lang.StringBuilder r191, r192, r194, r195, r196, r197, r199, r200, r202, r203, r204, r205;
        java.util.List r206, r207;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r137 := @parameter0: android.os.AsyncResult;

        entermonitor r0;

     label001:
        $r2 = r137.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r2 != null goto label003;

        $r134 = r137.<android.os.AsyncResult: java.lang.Object result>;

        r138 = (java.util.List) $r134;

     label002:
        goto label004;

     label003:
        $r3 = r137.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isCommandExceptionRadioNotAvailable(java.lang.Throwable)>($r3);

        if $z0 == 0 goto label138;

        r189 = new java.util.ArrayList;

        specialinvoke r189.<java.util.ArrayList: void <init>()>();

        r138 = r189;

     label004:
        r190 = new java.util.ArrayList;

        specialinvoke r190.<java.util.ArrayList: void <init>()>();

     label005:
        z37 = 0;

     label006:
        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mHandoverConnections>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label007:
        i21 = 0;

        i22 = 0;

     label008:
        r206 = (java.util.List) r138;

        i1 = interfaceinvoke r206.<java.util.List: int size()>();

     label009:
        r139 = null;

        z38 = 1;

        z39 = 0;

        z40 = 0;

        r140 = null;

        r141 = r138;

     label010:
        $r142 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $i23 = lengthof $r142;

        if i21 >= $i23 goto label083;

        $r52 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        r143 = $r52[i21];

     label011:
        if i22 >= i1 goto label015;

     label012:
        r207 = (java.util.List) r141;

        $r133 = interfaceinvoke r207.<java.util.List: java.lang.Object get(int)>(i22);

        r144 = (com.android.internal.telephony.DriverCall) $r133;

        $i19 = r144.<com.android.internal.telephony.DriverCall: int index>;

        $i18 = i21 + 1;

        if $i19 != $i18 goto label014;

     label013:
        i22 = i22 + 1;

        goto label016;

     label014:
        r144 = null;

        goto label016;

     label015:
        r144 = null;

     label016:
        if r143 != null goto label018;

        if r144 == null goto label017;

        goto label018;

     label017:
        goto label019;

     label018:
        z38 = 0;

     label019:
        if r143 != null goto label051;

        if r144 == null goto label051;

     label020:
        $r85 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        if $r85 == null goto label027;

        $r124 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $z32 = virtualinvoke $r124.<com.android.internal.telephony.GsmCdmaConnection: boolean compareTo(com.android.internal.telephony.DriverCall)>(r144);

        if $z32 == 0 goto label027;

        $r126 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r125 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r126[i21] = $r125;

        $r127 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        $r127.<com.android.internal.telephony.GsmCdmaConnection: int mIndex> = i21;

        $r128 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        virtualinvoke $r128.<com.android.internal.telephony.GsmCdmaConnection: boolean update(com.android.internal.telephony.DriverCall)>(r144);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO> = null;

        $z34 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mHangupPendingMO>;

        if $z34 == 0 goto label026;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mHangupPendingMO> = 0;

        $z35 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z35 != 0 goto label021;

        $r131 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z36 = virtualinvoke $r131.<com.android.internal.telephony.GsmCdmaPhone: boolean isEcmCanceledForEmergency()>();

        if $z36 == 0 goto label021;

        $r132 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r132.<com.android.internal.telephony.GsmCdmaPhone: void handleTimerInEmergencyCallbackMode(int)>(0);

     label021:
        r191 = new java.lang.StringBuilder;

        specialinvoke r191.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("poll: hangupPendingMO, hangup conn ");

        virtualinvoke r191.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r146 = virtualinvoke r191.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>($r146);

        $r147 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r148 = $r147[i21];

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void hangup(com.android.internal.telephony.GsmCdmaConnection)>($r148);

     label022:
        goto label025;

     label023:
        $r135 := @caughtexception;

     label024:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", "unexpected error on hangup");

     label025:
        exitmonitor r0;

        return;

     label026:
        z41 = z37;

        i24 = i22;

        z42 = z39;

        goto label042;

     label027:
        r192 = new java.lang.StringBuilder;

        specialinvoke r192.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pendingMo=");

        $r87 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        virtualinvoke r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r87);

        virtualinvoke r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dc=");

        virtualinvoke r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r144);

        $r91 = virtualinvoke r192.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>($r91);

        r151 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        r193 = new com.android.internal.telephony.GsmCdmaConnection;

     label028:
        $r92 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        specialinvoke r193.<com.android.internal.telephony.GsmCdmaConnection: void <init>(com.android.internal.telephony.GsmCdmaPhone,com.android.internal.telephony.DriverCall,com.android.internal.telephony.GsmCdmaCallTracker,int)>($r92, r144, r0, i21);

     label029:
        r151[i21] = r193;

     label030:
        r154 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection getHoConnection(com.android.internal.telephony.DriverCall)>(r144);

     label031:
        if r154 == null goto label043;

     label032:
        $r96 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r97 = $r96[i21];

        virtualinvoke $r97.<com.android.internal.telephony.GsmCdmaConnection: void migrateFrom(com.android.internal.telephony.Connection)>(r154);

        $r99 = r154.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State mPreHandoverState>;

        $r98 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r99 == $r98 goto label034;

        $r119 = r154.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State mPreHandoverState>;

        $r118 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r119 == $r118 goto label034;

        $r121 = r144.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r120 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State ACTIVE>;

        if $r121 != $r120 goto label034;

        $r122 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r123 = $r122[i21];

        virtualinvoke $r123.<com.android.internal.telephony.GsmCdmaConnection: void onConnectedInOrOut()>();

     label033:
        goto label035;

     label034:
        $r155 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r156 = $r155[i21];

        virtualinvoke $r156.<com.android.internal.telephony.GsmCdmaConnection: void onConnectedConnectionMigrated()>();

     label035:
        $r157 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mHandoverConnections>;

        virtualinvoke $r157.<java.util.ArrayList: boolean remove(java.lang.Object)>(r154);

        $z43 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z43 == 0 goto label039;

        $r103 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mHandoverConnections>;

        r158 = virtualinvoke $r103.<java.util.ArrayList: java.util.Iterator iterator()>();

     label036:
        $z31 = interfaceinvoke r158.<java.util.Iterator: boolean hasNext()>();

        if $z31 == 0 goto label038;

        $r104 = interfaceinvoke r158.<java.util.Iterator: java.lang.Object next()>();

        r159 = (com.android.internal.telephony.Connection) $r104;

        r194 = new java.lang.StringBuilder;

        specialinvoke r194.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HO Conn state is ");

        $r106 = r159.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State mPreHandoverState>;

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r106);

        $r108 = virtualinvoke r194.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r108);

        $r111 = r159.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State mPreHandoverState>;

        $r109 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r110 = $r109[i21];

        $r112 = virtualinvoke $r110.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Call$State getState()>();

        if $r111 != $r112 goto label037;

        r195 = new java.lang.StringBuilder;

        specialinvoke r195.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing HO conn ");

        virtualinvoke r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r154);

        $r115 = r159.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State mPreHandoverState>;

        virtualinvoke r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r115);

        $r117 = virtualinvoke r195.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r117);

        interfaceinvoke r158.<java.util.Iterator: void remove()>();

     label037:
        goto label036;

     label038:
        z45 = z37;

        z42 = z39;

        i24 = i22;

        goto label040;

     label039:
        i24 = i22;

        z42 = z39;

        z45 = z37;

     label040:
        $r102 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r100 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r101 = $r100[i21];

        virtualinvoke $r102.<com.android.internal.telephony.GsmCdmaPhone: void notifyHandoverStateChanged(com.android.internal.telephony.Connection)>($r101);

     label041:
        z41 = z45;

     label042:
        z39 = z42;

        goto label050;

     label043:
        z41 = z37;

        i24 = i22;

     label044:
        r139 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection checkMtFindNewRinging(com.android.internal.telephony.DriverCall,int)>(r144, i21);

     label045:
        if r139 != null goto label050;

        z39 = 1;

     label046:
        $z28 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z28 == 0 goto label048;

        $r94 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r95 = $r94[i21];

        virtualinvoke r190.<java.util.ArrayList: boolean add(java.lang.Object)>($r95);

     label047:
        goto label050;

     label048:
        $r93 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        r140 = $r93[i21];

     label049:
        goto label050;

     label050:
        z47 = 1;

        goto label082;

     label051:
        z41 = z37;

        i26 = i22;

        if r143 == null goto label064;

        if r144 != null goto label064;

     label052:
        $z21 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z21 == 0 goto label054;

        $r84 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r84.<java.util.ArrayList: boolean add(java.lang.Object)>(r143);

     label053:
        goto label062;

     label054:
        $r64 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r65 = virtualinvoke $r64.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        r162 = virtualinvoke $r65.<java.util.ArrayList: java.util.Iterator iterator()>();

     label055:
        $z22 = interfaceinvoke r162.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label057;

        $r77 = interfaceinvoke r162.<java.util.Iterator: java.lang.Object next()>();

        r163 = (com.android.internal.telephony.Connection) $r77;

        r196 = new java.lang.StringBuilder;

        specialinvoke r196.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adding fgCall cn ");

        virtualinvoke r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r163);

        virtualinvoke r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to droppedDuringPoll");

        $r81 = virtualinvoke r196.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>($r81);

        $r83 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $r82 = (com.android.internal.telephony.GsmCdmaConnection) r163;

        virtualinvoke $r83.<java.util.ArrayList: boolean add(java.lang.Object)>($r82);

     label056:
        goto label055;

     label057:
        $r66 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $r67 = virtualinvoke $r66.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        r165 = virtualinvoke $r67.<java.util.ArrayList: java.util.Iterator iterator()>();

     label058:
        $z23 = interfaceinvoke r165.<java.util.Iterator: boolean hasNext()>();

        if $z23 == 0 goto label060;

        $r70 = interfaceinvoke r165.<java.util.Iterator: java.lang.Object next()>();

        r166 = (com.android.internal.telephony.Connection) $r70;

        r197 = new java.lang.StringBuilder;

        specialinvoke r197.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adding rgCall cn ");

        virtualinvoke r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r166);

        virtualinvoke r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to droppedDuringPoll");

        $r74 = virtualinvoke r197.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>($r74);

        $r76 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $r75 = (com.android.internal.telephony.GsmCdmaConnection) r166;

        virtualinvoke $r76.<java.util.ArrayList: boolean add(java.lang.Object)>($r75);

     label059:
        goto label058;

     label060:
        $r68 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z24 = virtualinvoke $r68.<com.android.internal.telephony.GsmCdmaPhone: boolean isEcmCanceledForEmergency()>();

        if $z24 == 0 goto label061;

        $r69 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r69.<com.android.internal.telephony.GsmCdmaPhone: void handleTimerInEmergencyCallbackMode(int)>(0);

     label061:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void checkAndEnableDataCallAfterEmergencyCallDropped()>();

     label062:
        $r168 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r168[i21] = null;

     label063:
        goto label081;

     label064:
        if r143 == null goto label069;

        if r144 == null goto label069;

     label065:
        $z18 = virtualinvoke r143.<com.android.internal.telephony.GsmCdmaConnection: boolean compareTo(com.android.internal.telephony.DriverCall)>(r144);

        if $z18 != 0 goto label069;

        $z19 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z19 == 0 goto label069;

        $r57 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r57.<java.util.ArrayList: boolean add(java.lang.Object)>(r143);

        r169 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        r198 = new com.android.internal.telephony.GsmCdmaConnection;

        $r58 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        specialinvoke r198.<com.android.internal.telephony.GsmCdmaConnection: void <init>(com.android.internal.telephony.GsmCdmaPhone,com.android.internal.telephony.DriverCall,com.android.internal.telephony.GsmCdmaCallTracker,int)>($r58, r144, r0, i21);

     label066:
        r169[i21] = r198;

     label067:
        $r59 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        $r60 = $r59[i21];

        $r61 = virtualinvoke $r60.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall getCall()>();

        $r62 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        if $r61 != $r62 goto label068;

        $r63 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        r139 = $r63[i21];

     label068:
        z47 = 1;

        i24 = i26;

        goto label082;

     label069:
        if r143 == null goto label081;

        if r144 == null goto label081;

     label070:
        $z13 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z13 != 0 goto label076;

        $z14 = virtualinvoke r143.<com.android.internal.telephony.GsmCdmaConnection: boolean isIncoming()>();

        $z15 = r144.<com.android.internal.telephony.DriverCall: boolean isMT>;

        if $z14 == $z15 goto label076;

        $z16 = r144.<com.android.internal.telephony.DriverCall: boolean isMT>;

        if $z16 != 1 goto label074;

        $r56 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r56.<java.util.ArrayList: boolean add(java.lang.Object)>(r143);

        r139 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection checkMtFindNewRinging(com.android.internal.telephony.DriverCall,int)>(r144, i21);

     label071:
        if r139 != null goto label072;

        z39 = 1;

        r140 = r143;

        goto label072;

     label072:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void checkAndEnableDataCallAfterEmergencyCallDropped()>();

     label073:
        z47 = z40;

        i24 = i26;

        goto label082;

     label074:
        r199 = new java.lang.StringBuilder;

        specialinvoke r199.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in RIL, Phantom call appeared ");

        virtualinvoke r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r144);

        $r55 = virtualinvoke r199.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r55);

     label075:
        goto label081;

     label076:
        z48 = virtualinvoke r143.<com.android.internal.telephony.GsmCdmaConnection: boolean update(com.android.internal.telephony.DriverCall)>(r144);

     label077:
        if z40 != 0 goto label079;

        if z48 == 0 goto label078;

        goto label079;

     label078:
        z49 = 0;

        goto label080;

     label079:
        z49 = 1;

     label080:
        z47 = z49;

        i24 = i26;

        goto label082;

     label081:
        i24 = i26;

        z47 = z40;

     label082:
        i27 = i21 + 1;

        z37 = z41;

        z40 = z47;

        i21 = i27;

        i22 = i24;

        goto label010;

     label083:
        $z1 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z1 != 0 goto label086;

     label084:
        if z38 == 0 goto label086;

     label085:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void checkAndEnableDataCallAfterEmergencyCallDropped()>();

     label086:
        $r172 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        if $r172 == null goto label088;

        r200 = new java.lang.StringBuilder;

        specialinvoke r200.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pending MO dropped before poll fg state:");

        $r46 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r47 = virtualinvoke $r46.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r49 = virtualinvoke r200.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r49);

        $r51 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $r50 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        virtualinvoke $r51.<java.util.ArrayList: boolean add(java.lang.Object)>($r50);

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO> = null;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mHangupPendingMO> = 0;

        $z11 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z11 != 0 goto label088;

        $z12 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mPendingCallInEcm>;

        if $z12 == 0 goto label087;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mPendingCallInEcm> = 0;

     label087:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void checkAndEnableDataCallAfterEmergencyCallDropped()>();

     label088:
        if r139 == null goto label090;

     label089:
        $r44 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r44.<com.android.internal.telephony.GsmCdmaPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)>(r139);

     label090:
        r201 = new java.util.ArrayList;

        specialinvoke r201.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i29 = $i2 - 1;

     label091:
        z51 = z39;

        z52 = z37;

     label092:
        if i29 < 0 goto label113;

     label093:
        $r32 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $r33 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        r175 = (com.android.internal.telephony.GsmCdmaConnection) $r33;

     label094:
        z53 = 0;

     label095:
        $z7 = virtualinvoke r175.<com.android.internal.telephony.GsmCdmaConnection: boolean isIncoming()>();

        if $z7 == 0 goto label102;

        $l10 = virtualinvoke r175.<com.android.internal.telephony.GsmCdmaConnection: long getConnectTime()>();

        $b11 = $l10 cmp 0L;

        if $b11 != 0 goto label102;

        $i12 = r175.<com.android.internal.telephony.GsmCdmaConnection: int mCause>;

        if $i12 != 3 goto label097;

     label096:
        i30 = 16;

        goto label098;

     label097:
        i30 = 1;

     label098:
        r202 = new java.lang.StringBuilder;

        specialinvoke r202.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("missed/rejected call, conn.cause=");

        $i13 = r175.<com.android.internal.telephony.GsmCdmaConnection: int mCause>;

        virtualinvoke r202.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r38 = virtualinvoke r202.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>($r38);

        r203 = new java.lang.StringBuilder;

        specialinvoke r203.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r203.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting cause to ");

        virtualinvoke r203.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);

        $r41 = virtualinvoke r203.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>($r41);

        $r42 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r42.<java.util.ArrayList: java.lang.Object remove(int)>(i29);

        z54 = virtualinvoke r175.<com.android.internal.telephony.GsmCdmaConnection: boolean onDisconnect(int)>(i30);

     label099:
        z53 = 1;

     label100:
        virtualinvoke r201.<java.util.ArrayList: boolean add(java.lang.Object)>(r175);

     label101:
        z55 = z54 | z52;

        goto label109;

     label102:
        $i7 = r175.<com.android.internal.telephony.GsmCdmaConnection: int mCause>;

        if $i7 == 3 goto label105;

     label103:
        z55 = z52;

     label104:
        $i9 = r175.<com.android.internal.telephony.GsmCdmaConnection: int mCause>;

        if $i9 != 7 goto label109;

     label105:
        $r34 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r34.<java.util.ArrayList: java.lang.Object remove(int)>(i29);

        $i8 = r175.<com.android.internal.telephony.GsmCdmaConnection: int mCause>;

        z56 = virtualinvoke r175.<com.android.internal.telephony.GsmCdmaConnection: boolean onDisconnect(int)>($i8);

     label106:
        z53 = 1;

     label107:
        virtualinvoke r201.<java.util.ArrayList: boolean add(java.lang.Object)>(r175);

     label108:
        z55 = z56 | z52;

     label109:
        r178 = r140;

        z57 = z51;

     label110:
        $z58 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z58 != 0 goto label112;

     label111:
        r178 = r140;

        z57 = z51;

        if z53 == 0 goto label112;

        r178 = r140;

        z57 = z51;

        if z51 == 0 goto label112;

        r178 = r140;

        z57 = z51;

        if r175 != r140 goto label112;

        r178 = null;

        z57 = 0;

     label112:
        i29 = i29 + -1;

        r140 = r178;

        z52 = z55;

        z51 = z57;

        goto label092;

     label113:
        $i3 = virtualinvoke r201.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label114;

        $r28 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r27 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i6 = virtualinvoke $r27.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r29 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.lang.String getNetworkCountryIso()>();

        virtualinvoke $r28.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilCallList(int,java.util.ArrayList,java.lang.String)>($i6, r201, $r29);

        $r30 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r31 = virtualinvoke $r30.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        virtualinvoke $r31.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onRilCallListChanged(java.util.List)>(r201);

     label114:
        $r7 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mHandoverConnections>;

        r179 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label115:
        $z59 = interfaceinvoke r179.<java.util.Iterator: boolean hasNext()>();

        if $z59 == 0 goto label120;

        $r19 = interfaceinvoke r179.<java.util.Iterator: java.lang.Object next()>();

        r180 = (com.android.internal.telephony.Connection) $r19;

        r204 = new java.lang.StringBuilder;

        specialinvoke r204.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollCalls - disconnect hoConn= ");

        virtualinvoke r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r180);

        virtualinvoke r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hoConn.State= ");

        $r23 = virtualinvoke r180.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>();

        virtualinvoke r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke r204.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>($r25);

        $r26 = virtualinvoke r180.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>();

        $z4 = virtualinvoke $r26.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z4 == 0 goto label117;

        virtualinvoke r180.<com.android.internal.telephony.Connection: boolean onDisconnect(int)>(1);

     label116:
        goto label118;

     label117:
        virtualinvoke r180.<com.android.internal.telephony.Connection: boolean onDisconnect(int)>(-1);

     label118:
        interfaceinvoke r179.<java.util.Iterator: void remove()>();

     label119:
        goto label115;

     label120:
        $r8 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $i4 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i4 <= 0 goto label121;

        $r17 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r18 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainNoPollCompleteMessage(int)>(5);

        interfaceinvoke $r17.<com.android.internal.telephony.CommandsInterface: void getLastCallFailCause(android.os.Message)>($r18);

     label121:
        goto label122;

     label122:
        if r139 != null goto label123;

        if z40 != 0 goto label123;

        if z52 == 0 goto label124;

     label123:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void internalClearDisconnected()>();

     label124:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneState()>();

     label125:
        if z51 == 0 goto label131;

     label126:
        $z2 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z2 == 0 goto label130;

        r182 = virtualinvoke r190.<java.util.ArrayList: java.util.Iterator iterator()>();

     label127:
        $z3 = interfaceinvoke r182.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label129;

        $r12 = interfaceinvoke r182.<java.util.Iterator: java.lang.Object next()>();

        r183 = (com.android.internal.telephony.Connection) $r12;

        r205 = new java.lang.StringBuilder;

        specialinvoke r205.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notify unknown for ");

        virtualinvoke r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r183);

        $r15 = virtualinvoke r205.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>($r15);

        $r16 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r16.<com.android.internal.telephony.GsmCdmaPhone: void notifyUnknownConnection(com.android.internal.telephony.Connection)>(r183);

     label128:
        goto label127;

     label129:
        goto label131;

     label130:
        $r11 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r11.<com.android.internal.telephony.GsmCdmaPhone: void notifyUnknownConnection(com.android.internal.telephony.Connection)>(r140);

     label131:
        if z40 != 0 goto label132;

        if r139 != null goto label132;

        if z52 == 0 goto label133;

     label132:
        $r185 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r185.<com.android.internal.telephony.GsmCdmaPhone: void notifyPreciseCallStateChanged()>();

        $r186 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection[] mConnections>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updateMetrics(com.android.internal.telephony.GsmCdmaConnection[])>($r186);

     label133:
        if i0 <= 0 goto label137;

     label134:
        $r9 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.util.ArrayList mHandoverConnections>;

        $i5 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i5 != 0 goto label137;

        $r10 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r187 = virtualinvoke $r10.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone getImsPhone()>();

     label135:
        if r187 == null goto label137;

     label136:
        virtualinvoke r187.<com.android.internal.telephony.Phone: void callEndCleanupHandOverCallIfAny()>();

     label137:
        exitmonitor r0;

        return;

     label138:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void pollCallsAfterDelay()>();

     label139:
        exitmonitor r0;

        return;

     label140:
        $r136 := @caughtexception;

        exitmonitor r0;

        throw $r136;

        catch java.lang.Throwable from label001 to label002 with label140;
        catch java.lang.Throwable from label003 to label004 with label140;
        catch java.lang.Throwable from label004 to label005 with label140;
        catch java.lang.Throwable from label006 to label007 with label140;
        catch java.lang.Throwable from label008 to label009 with label140;
        catch java.lang.Throwable from label010 to label011 with label140;
        catch java.lang.Throwable from label012 to label013 with label140;
        catch java.lang.Throwable from label020 to label021 with label140;
        catch com.android.internal.telephony.CallStateException from label021 to label022 with label023;
        catch java.lang.Throwable from label021 to label022 with label140;
        catch java.lang.Throwable from label024 to label025 with label140;
        catch java.lang.Throwable from label027 to label028 with label140;
        catch java.lang.Throwable from label028 to label029 with label140;
        catch java.lang.Throwable from label030 to label031 with label140;
        catch java.lang.Throwable from label032 to label033 with label140;
        catch java.lang.Throwable from label034 to label035 with label140;
        catch java.lang.Throwable from label035 to label036 with label140;
        catch java.lang.Throwable from label036 to label037 with label140;
        catch java.lang.Throwable from label040 to label041 with label140;
        catch java.lang.Throwable from label044 to label045 with label140;
        catch java.lang.Throwable from label046 to label047 with label140;
        catch java.lang.Throwable from label048 to label049 with label140;
        catch java.lang.Throwable from label052 to label053 with label140;
        catch java.lang.Throwable from label054 to label055 with label140;
        catch java.lang.Throwable from label055 to label056 with label140;
        catch java.lang.Throwable from label057 to label058 with label140;
        catch java.lang.Throwable from label058 to label059 with label140;
        catch java.lang.Throwable from label060 to label061 with label140;
        catch java.lang.Throwable from label061 to label062 with label140;
        catch java.lang.Throwable from label062 to label063 with label140;
        catch java.lang.Throwable from label065 to label066 with label140;
        catch java.lang.Throwable from label067 to label068 with label140;
        catch java.lang.Throwable from label070 to label071 with label140;
        catch java.lang.Throwable from label072 to label073 with label140;
        catch java.lang.Throwable from label074 to label075 with label140;
        catch java.lang.Throwable from label076 to label077 with label140;
        catch java.lang.Throwable from label083 to label084 with label140;
        catch java.lang.Throwable from label085 to label086 with label140;
        catch java.lang.Throwable from label086 to label087 with label140;
        catch java.lang.Throwable from label087 to label088 with label140;
        catch java.lang.Throwable from label089 to label090 with label140;
        catch java.lang.Throwable from label090 to label091 with label140;
        catch java.lang.Throwable from label093 to label094 with label140;
        catch java.lang.Throwable from label095 to label096 with label140;
        catch java.lang.Throwable from label098 to label099 with label140;
        catch java.lang.Throwable from label100 to label101 with label140;
        catch java.lang.Throwable from label102 to label103 with label140;
        catch java.lang.Throwable from label104 to label105 with label140;
        catch java.lang.Throwable from label105 to label106 with label140;
        catch java.lang.Throwable from label107 to label108 with label140;
        catch java.lang.Throwable from label110 to label111 with label140;
        catch java.lang.Throwable from label113 to label114 with label140;
        catch java.lang.Throwable from label114 to label115 with label140;
        catch java.lang.Throwable from label115 to label116 with label140;
        catch java.lang.Throwable from label117 to label118 with label140;
        catch java.lang.Throwable from label118 to label119 with label140;
        catch java.lang.Throwable from label120 to label121 with label140;
        catch java.lang.Throwable from label122 to label122 with label140;
        catch java.lang.Throwable from label123 to label124 with label140;
        catch java.lang.Throwable from label124 to label125 with label140;
        catch java.lang.Throwable from label126 to label127 with label140;
        catch java.lang.Throwable from label127 to label128 with label140;
        catch java.lang.Throwable from label130 to label131 with label140;
        catch java.lang.Throwable from label132 to label133 with label140;
        catch java.lang.Throwable from label134 to label135 with label140;
        catch java.lang.Throwable from label136 to label137 with label140;
        catch java.lang.Throwable from label138 to label139 with label140;
    }

    public void hangup(com.android.internal.telephony.GsmCdmaCall) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaCall r1, $r3, $r4, $r12, r18;
        int $i0;
        com.android.internal.telephony.CallStateException $r2;
        java.lang.StringBuilder $r5;
        java.lang.RuntimeException $r10;
        java.lang.String $r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r13;
        java.lang.Object $r14;
        com.android.internal.telephony.GsmCdmaConnection $r15;
        com.android.internal.telephony.CommandsInterface $r16;
        android.os.Message $r17;
        com.android.internal.telephony.GsmCdmaPhone $r19;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.GsmCdmaCall;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaCall: int getConnectionsCount()>();

        if $i0 == 0 goto label8;

        r18 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        if r1 != r18 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>("(ringing) hangup waiting or background");

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void logHangupEvent(com.android.internal.telephony.GsmCdmaCall)>(r1);

        $r16 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r17 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r16.<com.android.internal.telephony.CommandsInterface: void hangupWaitingOrBackground(android.os.Message)>($r17);

        goto label6;

     label1:
        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        if r1 != $r3 goto label4;

        $z1 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaCall: boolean isDialingOrAlerting()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>("(foregnd) hangup dialing or alerting...");

        $r13 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r15 = (com.android.internal.telephony.GsmCdmaConnection) $r14;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void hangup(com.android.internal.telephony.GsmCdmaConnection)>($r15);

        goto label6;

     label2:
        $z2 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z2 == 0 goto label3;

        $r12 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $z3 = virtualinvoke $r12.<com.android.internal.telephony.GsmCdmaCall: boolean isRinging()>();

        if $z3 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>("hangup all conns in active/background call, without affecting ringing call");

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void hangupAllConnections(com.android.internal.telephony.GsmCdmaCall)>(r1);

        goto label6;

     label3:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void logHangupEvent(com.android.internal.telephony.GsmCdmaCall)>(r1);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void hangupForegroundResumeBackground()>();

        goto label6;

     label4:
        $r4 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        if r1 != $r4 goto label7;

        $z0 = virtualinvoke r18.<com.android.internal.telephony.GsmCdmaCall: boolean isRinging()>();

        if $z0 == 0 goto label5;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>("hangup all conns in background call");

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void hangupAllConnections(com.android.internal.telephony.GsmCdmaCall)>(r1);

        goto label6;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void hangupWaitingOrBackground()>();

     label6:
        virtualinvoke r1.<com.android.internal.telephony.GsmCdmaCall: void onHangupLocal()>();

        $r19 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r19.<com.android.internal.telephony.GsmCdmaPhone: void notifyPreciseCallStateChanged()>();

        return;

     label7:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GsmCdmaCall ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not belong to GsmCdmaCallTracker ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = new java.lang.RuntimeException;

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label8:
        $r2 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r2.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no connections in call");

        throw $r2;
    }

    public void hangup(com.android.internal.telephony.GsmCdmaConnection) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0, $r3;
        com.android.internal.telephony.GsmCdmaConnection r1, $r11;
        com.android.internal.telephony.GsmCdmaCall r2, r20;
        java.lang.StringBuilder $r4, $r16;
        com.android.internal.telephony.CallStateException $r9, $r15;
        java.lang.String $r10, $r19, $r23;
        boolean $z0;
        com.android.internal.telephony.Call$State $r12, $r13;
        com.android.internal.telephony.GsmCdmaPhone $r14, $r22;
        com.android.internal.telephony.metrics.TelephonyMetrics $r21;
        int $i1, $i2, $i3;
        com.android.internal.telephony.CommandsInterface $r24;
        android.os.Message $r25;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.GsmCdmaConnection;

        $r3 = r1.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        if $r3 != r0 goto label6;

        $r11 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        if r1 != $r11 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>("hangup: set hangupPendingMO to true");

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mHangupPendingMO> = 1;

        goto label5;

     label1:
        $z0 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label2;

        r20 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall getCall()>();

        r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        if r20 != r2 goto label2;

        $r12 = virtualinvoke r2.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r13 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        if $r12 != $r13 goto label2;

        virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: void onLocalDisconnect()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneState()>();

        $r14 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r14.<com.android.internal.telephony.GsmCdmaPhone: void notifyPreciseCallStateChanged()>();

        return;

     label2:
        $r21 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r22 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i1 = virtualinvoke $r22.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $i2 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: int getGsmCdmaIndex()>();

        $r23 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.lang.String getNetworkCountryIso()>();

        virtualinvoke $r21.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilHangup(int,com.android.internal.telephony.GsmCdmaConnection,int,java.lang.String)>($i1, r1, $i2, $r23);

        $r24 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i3 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: int getGsmCdmaIndex()>();

        $r25 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r24.<com.android.internal.telephony.CommandsInterface: void hangupConnection(int,android.os.Message)>($i3, $r25);

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GsmCdmaCallTracker WARN: hangup() on absent connection ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r19);

     label5:
        virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: void onHangupLocal()>();

        return;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GsmCdmaConnection ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not belong to GsmCdmaCallTracker ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = new com.android.internal.telephony.CallStateException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch com.android.internal.telephony.CallStateException from label2 to label3 with label4;
    }

    public void hangupAllConnections(com.android.internal.telephony.GsmCdmaCall)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        java.util.ArrayList $r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        com.android.internal.telephony.Connection $r3;
        com.android.internal.telephony.GsmCdmaPhone $r4;
        com.android.internal.telephony.metrics.TelephonyMetrics $r5;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r13;
        com.android.internal.telephony.CommandsInterface $r7;
        android.os.Message $r8;
        com.android.internal.telephony.CallStateException $r9;
        java.lang.StringBuilder $r10;
        com.android.internal.telephony.GsmCdmaCall r14;
        java.util.Iterator r15;
        com.android.internal.telephony.GsmCdmaConnection r16;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r14 := @parameter0: com.android.internal.telephony.GsmCdmaCall;

     label1:
        $r1 = virtualinvoke r14.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        r15 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.android.internal.telephony.Connection) $r2;

        r16 = (com.android.internal.telephony.GsmCdmaConnection) $r3;

        $z1 = r16.<com.android.internal.telephony.GsmCdmaConnection: boolean mDisconnected>;

        if $z1 != 0 goto label3;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $i1 = virtualinvoke r16.<com.android.internal.telephony.GsmCdmaConnection: int getGsmCdmaIndex()>();

        $r6 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.lang.String getNetworkCountryIso()>();

        virtualinvoke $r5.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilHangup(int,com.android.internal.telephony.GsmCdmaConnection,int,java.lang.String)>($i0, r16, $i1, $r6);

        $r7 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i2 = virtualinvoke r16.<com.android.internal.telephony.GsmCdmaConnection: int getGsmCdmaIndex()>();

        $r8 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: void hangupConnection(int,android.os.Message)>($i2, $r8);

     label3:
        goto label2;

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hangupConnectionByIndex caught ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r13);

     label6:
        return;

        catch com.android.internal.telephony.CallStateException from label1 to label2 with label5;
        catch com.android.internal.telephony.CallStateException from label2 to label3 with label5;
    }

    public void hangupConnectionByIndex(com.android.internal.telephony.GsmCdmaCall, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0, $i1, $i2, $i3;
        com.android.internal.telephony.GsmCdmaConnection r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        com.android.internal.telephony.CallStateException $r3;
        java.lang.Object $r4;
        com.android.internal.telephony.Connection $r5;
        com.android.internal.telephony.GsmCdmaPhone $r6;
        com.android.internal.telephony.metrics.TelephonyMetrics $r7;
        java.lang.String $r8;
        com.android.internal.telephony.CommandsInterface $r9;
        android.os.Message $r10;
        com.android.internal.telephony.GsmCdmaCall r11;
        java.util.Iterator r12;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r11 := @parameter0: com.android.internal.telephony.GsmCdmaCall;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r11.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        r12 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.internal.telephony.Connection) $r4;

        r1 = (com.android.internal.telephony.GsmCdmaConnection) $r5;

        $z1 = r1.<com.android.internal.telephony.GsmCdmaConnection: boolean mDisconnected>;

        if $z1 != 0 goto label2;

        $i1 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: int getGsmCdmaIndex()>();

        if $i1 != i0 goto label2;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r6 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i2 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $i3 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: int getGsmCdmaIndex()>();

        $r8 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: java.lang.String getNetworkCountryIso()>();

        virtualinvoke $r7.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilHangup(int,com.android.internal.telephony.GsmCdmaConnection,int,java.lang.String)>($i2, r1, $i3, $r8);

        $r9 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r10 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r9.<com.android.internal.telephony.CommandsInterface: void hangupConnection(int,android.os.Message)>(i0, $r10);

        return;

     label2:
        goto label1;

     label3:
        $r3 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r3.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no GsmCdma index found");

        throw $r3;
    }

    public void hangupForegroundResumeBackground()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>("hangupForegroundResumeBackground");

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void hangupForegroundResumeBackground(android.os.Message)>($r2);

        return;
    }

    public void hangupWaitingOrBackground()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaCall $r1;
        com.android.internal.telephony.CommandsInterface $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void log(java.lang.String)>("hangupWaitingOrBackground");

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void logHangupEvent(com.android.internal.telephony.GsmCdmaCall)>($r1);

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r3 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void hangupWaitingOrBackground(android.os.Message)>($r3);

        return;
    }

    public boolean isInEmergencyCall()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $z0 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mIsInEmergencyCall>;

        return $z0;
    }

    public boolean isInOtaspCall()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaConnection r1;
        com.android.internal.telephony.GsmCdmaCall $r2;
        java.util.ArrayList $r3;
        java.util.stream.Stream $r4, $r6;
        com.android.internal.telephony.'-$$Lambda$GsmCdmaCallTracker$wkXwCyVPcnlqyXzSJdP2cQlpZxg' $r5;
        long $l0;
        byte $b1;
        boolean $z0, z1;
        java.util.function.Predicate r7;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection mPendingMO>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: boolean isOtaspCall()>();

        if $z0 != 0 goto label2;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCall: java.util.ArrayList getConnections()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r5 = <com.android.internal.telephony._$$Lambda$GsmCdmaCallTracker$wkXwCyVPcnlqyXzSJdP2cQlpZxg: com.android.internal.telephony.'-$$Lambda$GsmCdmaCallTracker$wkXwCyVPcnlqyXzSJdP2cQlpZxg' INSTANCE>;

        r7 = (java.util.function.Predicate) $r5;

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r7);

        $l0 = interfaceinvoke $r6.<java.util.stream.Stream: long count()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r3;
        com.android.internal.telephony.GsmCdmaPhone $r5;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r9);

        return;
    }

    public void registerForCallWaiting(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mCallWaitingRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        return;
    }

    public void registerForVoiceCallEnded(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        return;
    }

    public void registerForVoiceCallStarted(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        com.android.internal.telephony.PhoneConstants$State $r4, $r5;
        android.os.AsyncResult $r6;
        android.os.Handler r7;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r7 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r7, i0, r1);

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r4 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r5 == $r4 goto label1;

        $r6 = new android.os.AsyncResult;

        specialinvoke $r6.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r6);

     label1:
        return;
    }

    public void rejectCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaCall $r1;
        com.android.internal.telephony.Call$State $r2;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r3;
        com.android.internal.telephony.CommandsInterface $r4;
        android.os.Message $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r5 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void rejectCall(android.os.Message)>($r5);

        return;

     label1:
        $r3 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r3.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("phone not ringing");

        throw $r3;
    }

    public void separate(com.android.internal.telephony.GsmCdmaConnection) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0, $r2;
        com.android.internal.telephony.GsmCdmaConnection r1;
        java.lang.StringBuilder $r3, $r13;
        com.android.internal.telephony.CallStateException $r8, $r12;
        java.lang.String $r9, $r16;
        com.android.internal.telephony.CommandsInterface $r10;
        int $i0;
        android.os.Message $r11;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.GsmCdmaConnection;

        $r2 = r1.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        if $r2 != r0 goto label5;

     label1:
        $r10 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaConnection: int getGsmCdmaIndex()>();

        $r11 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage(int)>(12);

        interfaceinvoke $r10.<com.android.internal.telephony.CommandsInterface: void separateConnection(int,android.os.Message)>($i0, $r11);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GsmCdmaCallTracker WARN: separate() on absent connection ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("GsmCdmaCallTracker", $r16);

     label4:
        return;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GsmCdmaConnection ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not belong to GsmCdmaCallTracker ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = new com.android.internal.telephony.CallStateException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch com.android.internal.telephony.CallStateException from label1 to label2 with label3;
    }

    public void setIsInEmergencyCall()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1, $r3, $r4;
        com.android.internal.telephony.dataconnection.DataEnabledSettings $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mIsInEmergencyCall> = 1;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DataEnabledSettings getDataEnabledSettings()>();

        virtualinvoke $r2.<com.android.internal.telephony.dataconnection.DataEnabledSettings: void setInternalDataEnabled(boolean)>(0);

        $r3 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: void notifyEmergencyCallRegistrants(boolean)>(1);

        $r4 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaPhone: void sendEmergencyCallStateChange(boolean)>(1);

        return;
    }

    public void setMute(boolean)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        boolean z0, $z1;
        com.android.internal.telephony.CommandsInterface $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mDesiredMute> = z0;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $z1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean mDesiredMute>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void setMute(boolean,android.os.Message)>($z1, null);

        return;
    }

    public void switchWaitingOrHoldingAndActive() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        com.android.internal.telephony.GsmCdmaCall $r1, $r5;
        com.android.internal.telephony.Call$State $r2, $r3;
        com.android.internal.telephony.CallStateException $r4;
        boolean $z0;
        int $i0;
        com.android.internal.telephony.CommandsInterface $r6, $r8;
        android.os.Message $r7, $r9;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State INCOMING>;

        if $r2 == $r3 goto label4;

        $z0 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r9 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainCompleteMessage(int)>(8);

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void switchWaitingOrHoldingAndActive(android.os.Message)>($r9);

        goto label3;

     label1:
        $r5 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaCall: int getConnectionsCount()>();

        if $i0 <= 1 goto label2;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void flashAndSetGenericTrue()>();

        goto label3;

     label2:
        $r6 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r7 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Message obtainMessage(int)>(8);

        interfaceinvoke $r6.<com.android.internal.telephony.CommandsInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>("", $r7);

     label3:
        return;

     label4:
        $r4 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r4.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot be in the incoming state");

        throw $r4;
    }

    public void unregisterForCallWaiting(android.os.Handler)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mCallWaitingRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForVoiceCallEnded(android.os.Handler)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForVoiceCallStarted(android.os.Handler)
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void updatePhoneType()
    {
        com.android.internal.telephony.GsmCdmaCallTracker r0;

        r0 := @this: com.android.internal.telephony.GsmCdmaCallTracker;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneType(boolean)>(0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.GsmCdmaCallTracker: boolean VDBG> = 0;

        <com.android.internal.telephony.GsmCdmaCallTracker: boolean REPEAT_POLLING> = 0;

        <com.android.internal.telephony.GsmCdmaCallTracker: int MAX_CONNECTIONS_PER_CALL_GSM> = 5;

        <com.android.internal.telephony.GsmCdmaCallTracker: int MAX_CONNECTIONS_PER_CALL_CDMA> = 1;

        <com.android.internal.telephony.GsmCdmaCallTracker: int MAX_CONNECTIONS_GSM> = 19;

        <com.android.internal.telephony.GsmCdmaCallTracker: int MAX_CONNECTIONS_CDMA> = 8;

        <com.android.internal.telephony.GsmCdmaCallTracker: java.lang.String LOG_TAG> = "GsmCdmaCallTracker";

        <com.android.internal.telephony.GsmCdmaCallTracker: boolean DBG_POLL> = 0;

        return;
    }
}
