public class com.android.internal.telephony.GsmCdmaConnection extends com.android.internal.telephony.Connection
{
    private static final boolean DBG;
    static final int EVENT_DTMF_DELAY_DONE;
    static final int EVENT_DTMF_DONE;
    static final int EVENT_NEXT_POST_DIAL;
    static final int EVENT_PAUSE_DONE;
    static final int EVENT_WAKE_LOCK_TIMEOUT;
    private static final java.lang.String LOG_TAG;
    public static final java.lang.String OTASP_NUMBER;
    static final int PAUSE_DELAY_MILLIS_CDMA;
    static final int PAUSE_DELAY_MILLIS_GSM;
    private static final boolean VDBG;
    static final int WAKE_LOCK_TIMEOUT_MILLIS;
    long mDisconnectTime;
    boolean mDisconnected;
    private int mDtmfToneDelay;
    android.os.Handler mHandler;
    int mIndex;
    private com.android.internal.telephony.metrics.TelephonyMetrics mMetrics;
    com.android.internal.telephony.Connection mOrigConnection;
    com.android.internal.telephony.GsmCdmaCallTracker mOwner;
    com.android.internal.telephony.GsmCdmaCall mParent;
    private android.os.PowerManager$WakeLock mPartialWakeLock;
    int mPreciseCause;
    com.android.internal.telephony.UUSInfo mUusInfo;
    java.lang.String mVendorCause;

    public void <init>(android.content.Context, com.android.internal.telephony.cdma.CdmaCallWaitingNotification, com.android.internal.telephony.GsmCdmaCallTracker, com.android.internal.telephony.GsmCdmaCall)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        android.content.Context r1;
        com.android.internal.telephony.cdma.CdmaCallWaitingNotification r2;
        com.android.internal.telephony.GsmCdmaCallTracker r3, $r8, $r13;
        com.android.internal.telephony.GsmCdmaCall r4;
        com.android.internal.telephony.Phone $r5;
        int $i0, $i1, $i2, $i4;
        com.android.internal.telephony.metrics.TelephonyMetrics $r6;
        com.android.internal.telephony.GsmCdmaConnection$MyHandler $r7;
        android.os.Looper $r9;
        java.lang.String $r10, $r11;
        long $l3;
        com.android.internal.telephony.Call$State $r12;
        com.android.internal.telephony.GsmCdmaPhone $r14;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.cdma.CdmaCallWaitingNotification;

        r3 := @parameter2: com.android.internal.telephony.GsmCdmaCallTracker;

        r4 := @parameter3: com.android.internal.telephony.GsmCdmaCall;

        $r5 = virtualinvoke r4.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Phone getPhone()>();

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.Phone: int getPhoneType()>();

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>(int)>($i0);

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mPreciseCause> = 0;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mDtmfToneDelay> = 0;

        $r6 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics> = $r6;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void createWakeLock(android.content.Context)>(r1);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner> = r3;

        $r7 = new com.android.internal.telephony.GsmCdmaConnection$MyHandler;

        $r8 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r7.<com.android.internal.telephony.GsmCdmaConnection$MyHandler: void <init>(com.android.internal.telephony.GsmCdmaConnection,android.os.Looper)>(r0, $r9);

        r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.Handler mHandler> = $r7;

        $r10 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String number>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mAddress> = $r10;

        $i1 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int numberPresentation>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mNumberPresentation> = $i1;

        $r11 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String name>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mCnapName> = $r11;

        $i2 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int namePresentation>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mCnapNamePresentation> = $i2;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mIndex> = -1;

        r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mIsIncoming> = 1;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: long mCreateTime> = $l3;

        r0.<com.android.internal.telephony.GsmCdmaConnection: long mConnectTime> = 0L;

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent> = r4;

        $r12 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        virtualinvoke r4.<com.android.internal.telephony.GsmCdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r12);

        $r13 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone getPhone()>();

        $i4 = virtualinvoke $r14.<com.android.internal.telephony.GsmCdmaPhone: int getCsCallRadioTech()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setCallRadioTech(int)>($i4);

        return;
    }

    public void <init>(com.android.internal.telephony.GsmCdmaPhone, com.android.internal.telephony.DriverCall, com.android.internal.telephony.GsmCdmaCallTracker, int)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.GsmCdmaPhone r1, $r14;
        com.android.internal.telephony.DriverCall r2;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7;
        com.android.internal.telephony.metrics.TelephonyMetrics $r3;
        android.content.Context $r4;
        com.android.internal.telephony.GsmCdmaConnection$MyHandler $r5;
        com.android.internal.telephony.GsmCdmaCallTracker $r6, $r9, $r13, r15;
        android.os.Looper $r7;
        java.lang.String $r8, $r10;
        boolean $z0;
        long $l2;
        com.android.internal.telephony.UUSInfo $r11;
        com.android.internal.telephony.DriverCall$State $r12;
        com.android.internal.telephony.GsmCdmaCall r16;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.GsmCdmaPhone;

        r2 := @parameter1: com.android.internal.telephony.DriverCall;

        r15 := @parameter2: com.android.internal.telephony.GsmCdmaCallTracker;

        i0 := @parameter3: int;

        $i1 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>(int)>($i1);

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mPreciseCause> = 0;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mDtmfToneDelay> = 0;

        $r3 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics> = $r3;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void createWakeLock(android.content.Context)>($r4);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner> = r15;

        $r5 = new com.android.internal.telephony.GsmCdmaConnection$MyHandler;

        $r6 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r5.<com.android.internal.telephony.GsmCdmaConnection$MyHandler: void <init>(com.android.internal.telephony.GsmCdmaConnection,android.os.Looper)>(r0, $r7);

        r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.Handler mHandler> = $r5;

        $r8 = r2.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mAddress> = $r8;

        $r9 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setEmergencyCallInfo(com.android.internal.telephony.CallTracker)>($r9);

        $z0 = r2.<com.android.internal.telephony.DriverCall: boolean isMT>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mIsIncoming> = $z0;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: long mCreateTime> = $l2;

        $r10 = r2.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mCnapName> = $r10;

        $i3 = r2.<com.android.internal.telephony.DriverCall: int namePresentation>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mCnapNamePresentation> = $i3;

        $i4 = r2.<com.android.internal.telephony.DriverCall: int numberPresentation>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mNumberPresentation> = $i4;

        $r11 = r2.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.UUSInfo mUusInfo> = $r11;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mIndex> = i0;

        $r12 = r2.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        r16 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall parentFromDCState(com.android.internal.telephony.DriverCall$State)>($r12);

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent> = r16;

        virtualinvoke r16.<com.android.internal.telephony.GsmCdmaCall: void attach(com.android.internal.telephony.Connection,com.android.internal.telephony.DriverCall)>(r0, r2);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void fetchDtmfToneDelay(com.android.internal.telephony.GsmCdmaPhone)>(r1);

        $i5 = r2.<com.android.internal.telephony.DriverCall: int audioQuality>;

        $i6 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: int getAudioQualityFromDC(int)>($i5);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setAudioQuality(int)>($i6);

        $r13 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone getPhone()>();

        $i7 = virtualinvoke $r14.<com.android.internal.telephony.GsmCdmaPhone: int getCsCallRadioTech()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setCallRadioTech(int)>($i7);

        return;
    }

    public void <init>(com.android.internal.telephony.GsmCdmaPhone, java.lang.String, com.android.internal.telephony.GsmCdmaCallTracker, com.android.internal.telephony.GsmCdmaCall, boolean)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.GsmCdmaPhone r1, $r32;
        com.android.internal.telephony.GsmCdmaCall r2;
        boolean z0, $z1, $z2;
        int $i0, $i4;
        com.android.internal.telephony.metrics.TelephonyMetrics $r3;
        android.content.Context $r4;
        com.android.internal.telephony.GsmCdmaConnection$MyHandler $r5;
        com.android.internal.telephony.GsmCdmaCallTracker $r6, $r15, r27, $r31;
        android.os.Looper $r7;
        java.lang.String $r8, $r9, $r18, $r20, $r23, $r25, r26, r28;
        long $l1;
        com.android.internal.telephony.Call$State $r10, $r11, $r12, $r13, $r14;
        java.lang.StringBuilder $r16, $r21;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.GsmCdmaPhone;

        r26 := @parameter1: java.lang.String;

        r27 := @parameter2: com.android.internal.telephony.GsmCdmaCallTracker;

        r2 := @parameter3: com.android.internal.telephony.GsmCdmaCall;

        z0 := @parameter4: boolean;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>(int)>($i0);

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mPreciseCause> = 0;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mDtmfToneDelay> = 0;

        $r3 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics> = $r3;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void createWakeLock(android.content.Context)>($r4);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner> = r27;

        $r5 = new com.android.internal.telephony.GsmCdmaConnection$MyHandler;

        $r6 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r5.<com.android.internal.telephony.GsmCdmaConnection$MyHandler: void <init>(com.android.internal.telephony.GsmCdmaConnection,android.os.Looper)>(r0, $r7);

        r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.Handler mHandler> = $r5;

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mDialString> = r26;

        r28 = r26;

        $z1 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isPhoneTypeGsm()>();

        if $z1 != 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[GsmCdmaConn] GsmCdmaConnection: dialString=");

        $r18 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String maskDialString(java.lang.String)>(r26);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaConnection", $r20);

        r28 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: java.lang.String formatDialString(java.lang.String)>(r26);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[GsmCdmaConn] GsmCdmaConnection:formated dialString=");

        $r23 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String maskDialString(java.lang.String)>(r28);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaConnection", $r25);

     label1:
        $r8 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r28);

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mAddress> = $r8;

        if z0 == 0 goto label2;

        $r15 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setEmergencyCallInfo(com.android.internal.telephony.CallTracker)>($r15);

     label2:
        $r9 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>(r28);

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mPostDialString> = $r9;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mIndex> = -1;

        r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mIsIncoming> = 0;

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mCnapName> = null;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mCnapNamePresentation> = 1;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mNumberPresentation> = 1;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: long mCreateTime> = $l1;

        if r2 == null goto label5;

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent> = r2;

        $z2 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isPhoneTypeGsm()>();

        if $z2 == 0 goto label3;

        $r14 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        virtualinvoke r2.<com.android.internal.telephony.GsmCdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r14);

        goto label5;

     label3:
        $r11 = r2.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State mState>;

        $r10 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r11 != $r10 goto label4;

        $r13 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        virtualinvoke r2.<com.android.internal.telephony.GsmCdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r13);

        goto label5;

     label4:
        $r12 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        virtualinvoke r2.<com.android.internal.telephony.GsmCdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r12);

     label5:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void fetchDtmfToneDelay(com.android.internal.telephony.GsmCdmaPhone)>(r1);

        $r31 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r32 = virtualinvoke $r31.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone getPhone()>();

        $i4 = virtualinvoke $r32.<com.android.internal.telephony.GsmCdmaPhone: int getCsCallRadioTech()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setCallRadioTech(int)>($i4);

        return;
    }

    static void access$000(com.android.internal.telephony.GsmCdmaConnection)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;

        r0 := @parameter0: com.android.internal.telephony.GsmCdmaConnection;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void processNextPostDialChar()>();

        return;
    }

    static void access$100(com.android.internal.telephony.GsmCdmaConnection)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;

        r0 := @parameter0: com.android.internal.telephony.GsmCdmaConnection;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void releaseWakeLock()>();

        return;
    }

    static int access$200(com.android.internal.telephony.GsmCdmaConnection)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        int $i0;

        r0 := @parameter0: com.android.internal.telephony.GsmCdmaConnection;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaConnection: int mDtmfToneDelay>;

        return $i0;
    }

    private void acquireWakeLock()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        android.os.PowerManager$WakeLock r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        if r1 == null goto label6;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void log(java.lang.String)>("acquireWakeLock");

        $r3 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void acquire()>();

        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void createWakeLock(android.content.Context)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.os.PowerManager $r3;
        android.os.PowerManager$WakeLock $r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r3 = (android.os.PowerManager) $r2;

        $r4 = virtualinvoke $r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "GsmCdmaConnection");

        r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock> = $r4;

        return;
    }

    private void doDisconnect()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mIndex> = -1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: long mDisconnectTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.internal.telephony.GsmCdmaConnection: long mConnectTimeReal>;

        $l3 = $l1 - $l2;

        r0.<com.android.internal.telephony.GsmCdmaConnection: long mDuration> = $l3;

        r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mDisconnected> = 1;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void clearPostDialListeners()>();

        return;
    }

    static boolean equalsBaseDialString(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z1 = 1;

        if r0 != null goto label2;

        if r1 != null goto label3;

     label1:
        goto label4;

     label2:
        if r1 == null goto label3;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label3;

        goto label1;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    static boolean equalsHandlesNulls(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        z0 = 1;

        goto label3;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return z0;
    }

    private void fetchDtmfToneDelay(com.android.internal.telephony.GsmCdmaPhone)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.GsmCdmaPhone r1;
        android.os.PersistableBundle r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.telephony.CarrierConfigManager $r5;
        int $i0, $i1;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.GsmCdmaPhone;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r5 = (android.telephony.CarrierConfigManager) $r4;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        r2 = virtualinvoke $r5.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        if r2 == null goto label1;

        $r6 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getDtmfToneDelayKey()>();

        $i1 = virtualinvoke r2.<android.os.PersistableBundle: int getInt(java.lang.String)>($r6);

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mDtmfToneDelay> = $i1;

     label1:
        return;
    }

    private static int findNextPCharOrNonPOrNonWCharIndex(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, i1, $i4, $i6, i7;
        char c2, $c3, $c5;
        boolean $z0, $z1, $z2, $z3, z4, z5;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        z4 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean isWait(char)>($c3);

        i7 = i0 + 1;

        i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        z5 = z4;

        if i7 >= i1 goto label4;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $z1 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean isWait(char)>(c2);

        if $z1 == 0 goto label2;

        z4 = 1;

     label2:
        $z2 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean isWait(char)>(c2);

        if $z2 != 0 goto label3;

        $z3 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean isPause(char)>(c2);

        if $z3 != 0 goto label3;

        z5 = z4;

        goto label4;

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        if i7 >= i1 goto label5;

        $i4 = i0 + 1;

        if i7 <= $i4 goto label5;

        if z5 != 0 goto label5;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean isPause(char)>($c5);

        if $z0 == 0 goto label5;

        $i6 = i0 + 1;

        return $i6;

     label5:
        return i7;
    }

    private static char findPOrWCharToAppend(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, $i2, i3;
        char $c1, c4, c5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean isPause(char)>($c1);

        if $z0 == 0 goto label1;

        c4 = 44;

        goto label2;

     label1:
        c4 = 59;

     label2:
        c5 = c4;

        $i2 = i3 + 1;

        if i0 <= $i2 goto label3;

        c5 = 59;

     label3:
        return c5;
    }

    public static java.lang.String formatDialString(java.lang.String)
    {
        java.lang.String r0, $r3, $r4;
        int i0, i2, $i3, $i5, i6, i7;
        char c1, $c4;
        java.lang.StringBuilder $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i6 = 0;

     label2:
        if i6 >= i0 goto label7;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $z0 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean isPause(char)>(c1);

        if $z0 != 0 goto label4;

        $z1 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean isWait(char)>(c1);

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        i7 = i6;

        goto label6;

     label4:
        i7 = i6;

        $i3 = i0 - 1;

        if i6 >= $i3 goto label6;

        i2 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: int findNextPCharOrNonPOrNonWCharIndex(java.lang.String,int)>(r0, i6);

        if i2 >= i0 goto label5;

        $c4 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: char findPOrWCharToAppend(java.lang.String,int,int)>(r0, i6, i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        i7 = i6;

        $i5 = i6 + 1;

        if i2 <= $i5 goto label6;

        i7 = i2 - 1;

        goto label6;

     label5:
        i7 = i6;

        if i2 != i0 goto label6;

        i7 = i0 - 1;

        goto label6;

     label6:
        i6 = i7 + 1;

        goto label2;

     label7:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCode(java.lang.String)>($r3);

        return $r4;
    }

    private int getAudioQualityFromDC(int)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        int i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        if i0 == 9 goto label1;

        return 1;

     label1:
        return 2;
    }

    private boolean isConnectingInOrOut()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.GsmCdmaCall r1, $r3, $r4, $r7;
        com.android.internal.telephony.GsmCdmaCallTracker $r2;
        com.android.internal.telephony.Call$State $r5, $r6, $r8, $r9;
        boolean z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        if r1 == null goto label2;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r3 = $r2.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        if r1 == $r3 goto label2;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        $r6 = $r4.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State mState>;

        $r5 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        if $r6 == $r5 goto label2;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        $r9 = $r7.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State mState>;

        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ALERTING>;

        if $r9 != $r8 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private static boolean isPause(char)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        if c0 != 44 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isPhoneTypeGsm()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        int i0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;
        com.android.internal.telephony.GsmCdmaPhone $r2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone getPhone()>();

        i0 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isWait(char)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        if c0 != 59 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isWild(char)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        if c0 != 78 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void log(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[GsmCdmaConn] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaConnection", $r6);

        return;
    }

    private java.lang.String maskDialString(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: java.lang.String;

        return "<MASKED>";
    }

    private com.android.internal.telephony.GsmCdmaCall parentFromDCState(com.android.internal.telephony.DriverCall$State)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.DriverCall$State r1;
        int[] $r3;
        int $i0, $i1;
        com.android.internal.telephony.GsmCdmaCallTracker $r4, $r6, $r8;
        com.android.internal.telephony.GsmCdmaCall $r5, $r7, $r9;
        java.lang.StringBuilder $r10;
        java.lang.RuntimeException $r13;
        java.lang.String $r14;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.DriverCall$State;

        $r3 = <com.android.internal.telephony.GsmCdmaConnection$1: int[] $SwitchMap$com$android$internal$telephony$DriverCall$State>;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.DriverCall$State: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label2;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal call state: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = new java.lang.RuntimeException;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label2:
        $r4 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r5 = $r4.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        return $r5;

     label3:
        $r6 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r7 = $r6.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        return $r7;

     label4:
        $r8 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r9 = $r8.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        return $r9;
    }

    private void processNextPostDialChar()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        char c0, c6;
        com.android.internal.telephony.Connection$PostDialState r1, $r3, $r4, $r6, $r8;
        android.os.AsyncResult r2;
        java.lang.String $r5, $r7, $r15, r16;
        int $i1, $i2, $i3, i5;
        boolean $z0;
        android.os.Handler $r9;
        android.os.Message $r10, r21;
        java.lang.StringBuilder $r11;
        com.android.internal.telephony.GsmCdmaCallTracker $r18;
        com.android.internal.telephony.GsmCdmaPhone $r19;
        com.android.internal.telephony.Registrant r20;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        if $r4 != $r3 goto label1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void releaseWakeLock()>();

        return;

     label1:
        $r5 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mPostDialString>;

        if $r5 == null goto label3;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mPostDialString>;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i2 = r0.<com.android.internal.telephony.GsmCdmaConnection: int mNextPostDialChar>;

        if $i1 > $i2 goto label2;

        goto label3;

     label2:
        $r8 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r8);

        r16 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mPostDialString>;

        i5 = r0.<com.android.internal.telephony.GsmCdmaConnection: int mNextPostDialChar>;

        $i3 = i5 + 1;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mNextPostDialChar> = $i3;

        c0 = virtualinvoke r16.<java.lang.String: char charAt(int)>(i5);

        c6 = c0;

        $z0 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean processPostDialChar(char)>(c0);

        if $z0 != 0 goto label4;

        $r9 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.Handler mHandler>;

        $r10 = virtualinvoke $r9.<android.os.Handler: android.os.Message obtainMessage(int)>(3);

        virtualinvoke $r10.<android.os.Message: void sendToTarget()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processNextPostDialChar: c=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isn\'t valid!");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaConnection", $r15);

        return;

     label3:
        $r6 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState COMPLETE>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r6);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void releaseWakeLock()>();

        c6 = 0;

     label4:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void notifyPostDialListenersNextChar(char)>(c6);

        $r18 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r19 = virtualinvoke $r18.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone getPhone()>();

        r20 = virtualinvoke $r19.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Registrant getPostDialHandler()>();

        if r20 == null goto label5;

        r21 = virtualinvoke r20.<com.android.internal.telephony.Registrant: android.os.Message messageForRegistrant()>();

        if r21 == null goto label5;

        r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        r2 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>(r21);

        r2.<android.os.AsyncResult: java.lang.Object result> = r0;

        r2.<android.os.AsyncResult: java.lang.Object userObj> = r1;

        r21.<android.os.Message: int arg1> = c6;

        virtualinvoke r21.<android.os.Message: void sendToTarget()>();

     label5:
        return;
    }

    private boolean processPostDialChar(char)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        char c0;
        android.os.Handler r1, $r7;
        android.os.Message r2, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.internal.telephony.Connection$PostDialState $r3, $r4, $r5;
        com.android.internal.telephony.GsmCdmaCallTracker $r6;
        com.android.internal.telephony.CommandsInterface $r8;
        long l1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>(c0);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r8 = $r6.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.Handler mHandler>;

        $r9 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void sendDtmf(char,android.os.Message)>(c0, $r9);

        goto label7;

     label1:
        $z1 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean isPause(char)>(c0);

        if $z1 == 0 goto label5;

        $z4 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isPhoneTypeGsm()>();

        if $z4 != 0 goto label2;

        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState PAUSE>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r5);

     label2:
        r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.Handler mHandler>;

        r2 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        $z5 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isPhoneTypeGsm()>();

        if $z5 == 0 goto label3;

        l1 = 3000L;

        goto label4;

     label3:
        l1 = 2000L;

     label4:
        virtualinvoke r1.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, l1);

        goto label7;

     label5:
        $z2 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean isWait(char)>(c0);

        if $z2 == 0 goto label6;

        $r4 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WAIT>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r4);

        goto label7;

     label6:
        $z3 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean isWild(char)>(c0);

        if $z3 == 0 goto label8;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WILD>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r3);

     label7:
        return 1;

     label8:
        return 0;
    }

    private void releaseAllWakeLocks()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        android.os.PowerManager$WakeLock r1, $r3, $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        if r1 == null goto label8;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        $z0 = virtualinvoke $r3.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        goto label1;

     label3:
        exitmonitor r1;

     label4:
        goto label8;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void releaseWakeLock()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        android.os.PowerManager$WakeLock r1, $r3, $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        if r1 == null goto label7;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        $z0 = virtualinvoke $r3.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void log(java.lang.String)>("releaseWakeLock");

        $r4 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        exitmonitor r1;

     label3:
        goto label7;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void setPostDialState(com.android.internal.telephony.Connection$PostDialState)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        android.os.PowerManager$WakeLock r1, $r4;
        android.os.Message r2;
        com.android.internal.telephony.Connection$PostDialState $r3, $r8, r11;
        boolean $z0;
        android.os.Handler $r5, $r6, $r7, $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r11 := @parameter0: com.android.internal.telephony.Connection$PostDialState;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        if r11 == $r3 goto label02;

        $r8 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState PAUSE>;

        if r11 != $r8 goto label01;

        goto label02;

     label01:
        $r9 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.os.Handler: void removeMessages(int)>(4);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void releaseWakeLock()>();

        goto label08;

     label02:
        r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        entermonitor r1;

     label03:
        $r4 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        $z0 = virtualinvoke $r4.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label05;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: void removeMessages(int)>(4);

     label04:
        goto label06;

     label05:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void acquireWakeLock()>();

     label06:
        $r5 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.Handler mHandler>;

        r2 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        $r6 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 60000L);

     label07:
        exitmonitor r1;

     label08:
        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = r11;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void notifyPostDialListeners()>();

        return;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r10;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void cancelPostDial()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r1);

        return;
    }

    boolean compareTo(com.android.internal.telephony.DriverCall)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.DriverCall r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        java.lang.String r2, $r3, $r4;
        int $i0;
        com.android.internal.telephony.Connection $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.DriverCall;

        z0 = r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mIsIncoming>;

        z6 = 1;

        if z0 != 0 goto label1;

        $z5 = r1.<com.android.internal.telephony.DriverCall: boolean isMT>;

        if $z5 != 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label2;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection mOrigConnection>;

        if $r5 == null goto label2;

        return 1;

     label2:
        $r3 = r1.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $i0 = r1.<com.android.internal.telephony.DriverCall: int TOA>;

        r2 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>($r3, $i0);

        $z3 = r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mIsIncoming>;

        $z2 = r1.<com.android.internal.telephony.DriverCall: boolean isMT>;

        if $z3 != $z2 goto label3;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mAddress>;

        $z4 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r4, r2);

        if $z4 == 0 goto label3;

        goto label4;

     label3:
        z6 = 0;

     label4:
        return z6;
    }

    public void consultativeTransfer(com.android.internal.telephony.Connection) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.Connection r1;
        com.android.internal.telephony.CallStateException $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        $r2 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r2.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("Transfer is not supported for CS");

        throw $r2;
    }

    public void deflect(java.lang.String) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        java.lang.String r1;
        com.android.internal.telephony.CallStateException $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: java.lang.String;

        $r2 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r2.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("deflect is not supported for CS");

        throw $r2;
    }

    int disconnectCauseFromCode(int)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        int i0, i1, $i2;
        com.android.internal.telephony.GsmCdmaPhone r1;
        com.android.internal.telephony.GsmCdmaCallTracker $r2;
        android.telephony.ServiceState $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.internal.telephony.ServiceStateTracker $r4, $r6, $r8;
        com.android.internal.telephony.RestrictedState $r5, $r7, $r9;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState $r10, r12;
        com.android.internal.telephony.uicc.UiccCardApplication r11;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        i0 := @parameter0: int;

        if i0 == 1 goto label38;

        if i0 == 8 goto label37;

        if i0 == 17 goto label36;

        if i0 == 19 goto label35;

        if i0 == 31 goto label34;

        if i0 == 34 goto label33;

        if i0 == 44 goto label33;

        if i0 == 49 goto label33;

        if i0 == 58 goto label33;

        if i0 == 68 goto label32;

        if i0 == 41 goto label33;

        if i0 == 42 goto label33;

        if i0 == 240 goto label37;

        if i0 == 241 goto label31;

        if i0 == 325 goto label30;

        if i0 == 326 goto label29;

        tableswitch(i0)
        {
            case 243: goto label28;
            case 244: goto label27;
            case 245: goto label26;
            case 246: goto label25;
            default: goto label01;
        };

     label01:
        tableswitch(i0)
        {
            case 1000: goto label24;
            case 1001: goto label23;
            case 1002: goto label22;
            case 1003: goto label21;
            case 1004: goto label20;
            case 1005: goto label19;
            case 1006: goto label18;
            case 1007: goto label17;
            case 1008: goto label16;
            case 1009: goto label15;
            default: goto label02;
        };

     label02:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        r1 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone getPhone()>();

        $r3 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.ServiceState getServiceState()>();

        i1 = virtualinvoke $r3.<android.telephony.ServiceState: int getState()>();

        r11 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication()>();

        if r11 == null goto label03;

        r12 = virtualinvoke r11.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState getState()>();

        goto label04;

     label03:
        r12 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState APPSTATE_UNKNOWN>;

     label04:
        if i1 != 3 goto label05;

        return 17;

     label05:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isEmergencyCall()>();

        if $z0 != 0 goto label09;

        if i1 == 1 goto label08;

        if i1 != 2 goto label06;

        goto label08;

     label06:
        $r10 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState APPSTATE_READY>;

        if r12 == $r10 goto label09;

        $z4 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isPhoneTypeGsm()>();

        if $z4 == 0 goto label07;

        return 19;

     label07:
        $i2 = r1.<com.android.internal.telephony.GsmCdmaPhone: int mCdmaSubscriptionSource>;

        if $i2 != 0 goto label09;

        return 19;

     label08:
        return 18;

     label09:
        $z5 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isPhoneTypeGsm()>();

        if $z5 == 0 goto label13;

        if i0 == 65535 goto label10;

        if i0 != 260 goto label13;

     label10:
        $r4 = r1.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r5 = $r4.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z1 = virtualinvoke $r5.<com.android.internal.telephony.RestrictedState: boolean isCsRestricted()>();

        if $z1 == 0 goto label11;

        return 22;

     label11:
        $r6 = r1.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r7 = $r6.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z2 = virtualinvoke $r7.<com.android.internal.telephony.RestrictedState: boolean isCsEmergencyRestricted()>();

        if $z2 == 0 goto label12;

        return 24;

     label12:
        $r8 = r1.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r9 = $r8.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z3 = virtualinvoke $r9.<com.android.internal.telephony.RestrictedState: boolean isCsNormalRestricted()>();

        if $z3 == 0 goto label13;

        return 23;

     label13:
        if i0 != 16 goto label14;

        return 2;

     label14:
        return 36;

     label15:
        return 35;

     label16:
        return 34;

     label17:
        return 33;

     label18:
        return 32;

     label19:
        return 31;

     label20:
        return 30;

     label21:
        return 29;

     label22:
        return 28;

     label23:
        return 27;

     label24:
        return 26;

     label25:
        return 48;

     label26:
        return 47;

     label27:
        return 46;

     label28:
        return 58;

     label29:
        return 64;

     label30:
        return 63;

     label31:
        return 21;

     label32:
        return 15;

     label33:
        return 5;

     label34:
        return 65;

     label35:
        return 13;

     label36:
        return 4;

     label37:
        return 20;

     label38:
        return 25;
    }

    public void dispose()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.GsmCdmaCall r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void clearPostDialListeners()>();

        r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.telephony.GsmCdmaCall: void detach(com.android.internal.telephony.GsmCdmaConnection)>(r0);

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void releaseAllWakeLocks()>();

        return;
    }

    void fakeHoldBeforeDial()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;
        com.android.internal.telephony.Call$State $r2;
        com.android.internal.telephony.GsmCdmaCall r3, r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r3 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        if r3 == null goto label1;

        virtualinvoke r3.<com.android.internal.telephony.GsmCdmaCall: void detach(com.android.internal.telephony.GsmCdmaConnection)>(r0);

     label1:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        r4 = $r1.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent> = r4;

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        virtualinvoke r4.<com.android.internal.telephony.GsmCdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r2);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void onStartedHolding()>();

        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        android.os.PowerManager$WakeLock r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaConnection", "UNEXPECTED; mPartialWakeLock is held when finalizing.");

     label1:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void clearPostDialListeners()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void releaseWakeLock()>();

        return;
    }

    public volatile com.android.internal.telephony.Call getCall()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.GsmCdmaCall $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall getCall()>();

        return $r1;
    }

    public com.android.internal.telephony.GsmCdmaCall getCall()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.GsmCdmaCall $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        return $r1;
    }

    public long getDisconnectTime()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $l0 = r0.<com.android.internal.telephony.GsmCdmaConnection: long mDisconnectTime>;

        return $l0;
    }

    public com.android.internal.telephony.emergency.EmergencyNumberTracker getEmergencyNumberTracker()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.emergency.EmergencyNumberTracker $r1;
        com.android.internal.telephony.GsmCdmaCallTracker r2;
        com.android.internal.telephony.GsmCdmaPhone r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r2 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone getPhone()>();

        if r3 == null goto label1;

        $r1 = virtualinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.emergency.EmergencyNumberTracker getEmergencyNumberTracker()>();

        return $r1;

     label1:
        return null;
    }

    int getGsmCdmaIndex() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        int i0, $i1;
        com.android.internal.telephony.CallStateException $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        i0 = r0.<com.android.internal.telephony.GsmCdmaConnection: int mIndex>;

        if i0 < 0 goto label1;

        $i1 = i0 + 1;

        return $i1;

     label1:
        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("GsmCdma index not yet assigned");

        throw $r1;
    }

    public long getHoldDurationMillis()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.Call$State $r1, $r2;
        long $l0, $l1, $l2;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Call$State getState()>();

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r1 == $r2 goto label1;

        return 0L;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = r0.<com.android.internal.telephony.GsmCdmaConnection: long mHoldingStartTime>;

        $l2 = $l0 - $l1;

        return $l2;
    }

    public int getNumberPresentation()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaConnection: int mNumberPresentation>;

        return $i0;
    }

    public com.android.internal.telephony.Connection getOrigConnection()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.Connection $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection mOrigConnection>;

        return $r1;
    }

    public java.lang.String getOrigDialString()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mDialString>;

        return $r1;
    }

    public int getPreciseDisconnectCause()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaConnection: int mPreciseCause>;

        return $i0;
    }

    public java.lang.String getRemainingPostDialString()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        java.lang.String r1, r2;
        int i0, i1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 = specialinvoke r0.<com.android.internal.telephony.Connection: java.lang.String getRemainingPostDialString()>();

        r2 = r1;

        $z0 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label3;

        r2 = r1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label3;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(59);

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(44);

        if i0 <= 0 goto label2;

        if i0 < i1 goto label1;

        if i1 > 0 goto label2;

     label1:
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        goto label3;

     label2:
        r2 = r1;

        if i1 <= 0 goto label3;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label3:
        return r2;
    }

    public com.android.internal.telephony.Call$State getState()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        boolean $z0;
        com.android.internal.telephony.Call$State $r1, $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $z0 = r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mDisconnected>;

        if $z0 == 0 goto label1;

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        return $r2;

     label1:
        $r1 = specialinvoke r0.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>();

        return $r1;
    }

    public com.android.internal.telephony.UUSInfo getUUSInfo()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.UUSInfo $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.UUSInfo mUusInfo>;

        return $r1;
    }

    public java.lang.String getVendorDisconnectCause()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mVendorCause>;

        return $r1;
    }

    public void hangup() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r1;
        com.android.internal.telephony.GsmCdmaCallTracker $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $z0 = r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mDisconnected>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCallTracker: void hangup(com.android.internal.telephony.GsmCdmaConnection)>(r0);

        return;

     label1:
        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("disconnected");

        throw $r1;
    }

    public boolean isMultiparty()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.Connection r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection mOrigConnection>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.Connection: boolean isMultiparty()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOtaspCall()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mAddress>;

        if $r1 == null goto label1;

        $r3 = "*22899";

        $r2 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mAddress>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void migrateFrom(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.Connection r1;
        com.android.internal.telephony.UUSInfo $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        if r1 != null goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.internal.telephony.Connection: void migrateFrom(com.android.internal.telephony.Connection)>(r1);

        $r2 = virtualinvoke r1.<com.android.internal.telephony.Connection: com.android.internal.telephony.UUSInfo getUUSInfo()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.UUSInfo mUusInfo> = $r2;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Connection: java.lang.Object getUserData()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setUserData(java.lang.Object)>($r3);

        return;
    }

    void onConnectedConnectionMigrated()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void releaseWakeLock()>();

        return;
    }

    void onConnectedInOrOut()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        long $l0, $l1, $l2;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: long mConnectTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: long mConnectTimeReal> = $l1;

        r0.<com.android.internal.telephony.GsmCdmaConnection: long mDuration> = 0L;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onConnectedInOrOut: connectTime=");

        $l2 = r0.<com.android.internal.telephony.GsmCdmaConnection: long mConnectTime>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void log(java.lang.String)>($r5);

        $z0 = r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mIsIncoming>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void processNextPostDialChar()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void releaseWakeLock()>();

     label2:
        return;
    }

    public boolean onDisconnect(int)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        int i0;
        boolean $z1, z2;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        com.android.internal.telephony.GsmCdmaCallTracker $r5;
        com.android.internal.telephony.GsmCdmaPhone $r6;
        com.android.internal.telephony.GsmCdmaCall r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        i0 := @parameter0: int;

        z2 = 0;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mCause> = i0;

        $z1 = r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mDisconnected>;

        if $z1 != 0 goto label2;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void doDisconnect()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDisconnect: cause=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaConnection", $r4);

        $r5 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone getPhone()>();

        virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: void notifyDisconnect(com.android.internal.telephony.Connection)>(r0);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void notifyDisconnect(int)>(i0);

        r8 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        z2 = 0;

        if r8 == null goto label1;

        z2 = virtualinvoke r8.<com.android.internal.telephony.GsmCdmaCall: boolean connectionDisconnected(com.android.internal.telephony.GsmCdmaConnection)>(r0);

     label1:
        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection mOrigConnection> = null;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void clearPostDialListeners()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void releaseWakeLock()>();

        return z2;
    }

    void onHangupLocal()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mCause> = 3;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mPreciseCause> = 0;

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mVendorCause> = null;

        return;
    }

    void onLocalDisconnect()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.GsmCdmaCall r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $z0 = r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mDisconnected>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void doDisconnect()>();

        r1 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.telephony.GsmCdmaCall: void detach(com.android.internal.telephony.GsmCdmaConnection)>(r0);

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void releaseWakeLock()>();

        return;
    }

    void onRemoteDisconnect(int, java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        int i0, $i1;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mPreciseCause> = i0;

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mVendorCause> = r1;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: int disconnectCauseFromCode(int)>(i0);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean onDisconnect(int)>($i1);

        return;
    }

    void onStartedHolding()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: long mHoldingStartTime> = $l0;

        return;
    }

    public void proceedAfterWaitChar()
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r2, $r3, $r4, $r7;
        java.lang.StringBuilder $r5;
        java.lang.String $r9;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r2 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WAIT>;

        if $r3 == $r2 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GsmCdmaConnection.proceedAfterWaitChar(): Expected getPostDialState() to be WAIT but was ");

        $r7 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("GsmCdmaConnection", $r9);

        return;

     label1:
        $r4 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r4);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void processNextPostDialChar()>();

        return;
    }

    public void proceedAfterWildChar(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1, $r2, $r3, $r16;
        java.lang.StringBuilder $r4, $r9, $r14;
        int $i0;
        java.lang.String $r5, $r6, $r8, $r11, $r13, $r18, r19;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r19 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WILD>;

        if $r2 == $r1 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GsmCdmaConnection.proceedAfterWaitChar(): Expected getPostDialState() to be WILD but was ");

        $r16 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("GsmCdmaConnection", $r18);

        return;

     label1:
        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r19);

        $r5 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mPostDialString>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaConnection: int mNextPostDialChar>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mPostDialString> = $r8;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mNextPostDialChar> = 0;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proceedAfterWildChar: new postDialString is ");

        $r11 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mPostDialString>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void log(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void processNextPostDialChar()>();

        return;
    }

    public void separate() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r1;
        com.android.internal.telephony.GsmCdmaCallTracker $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        $z0 = r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mDisconnected>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCallTracker: void separate(com.android.internal.telephony.GsmCdmaConnection)>(r0);

        return;

     label1:
        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("disconnected");

        throw $r1;
    }

    public void transfer(java.lang.String, boolean) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        java.lang.String r1;
        boolean z0;
        com.android.internal.telephony.CallStateException $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r2.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("Transfer is not supported for CS");

        throw $r2;
    }

    public boolean update(com.android.internal.telephony.DriverCall)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z12, z13, z14, z15, z16;
        com.android.internal.telephony.DriverCall$State $r2;
        java.lang.StringBuilder $r3, $r38, $r54, $r59;
        com.android.internal.telephony.GsmCdmaCall $r5, r51, r58, $r61, $r62;
        java.lang.String $r9, $r10, $r11, $r12, $r27, $r30, $r31, $r41, $r42, $r43, $r44, $r45, $r46, r53, $r56, $r57;
        com.android.internal.telephony.Call$State $r28, $r29, r49, r50;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10;
        com.android.internal.telephony.GsmCdmaCallTracker $r32, $r35;
        com.android.internal.telephony.metrics.TelephonyMetrics $r33;
        com.android.internal.telephony.GsmCdmaPhone $r34, $r36;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r37;
        com.android.internal.telephony.Connection $r47;
        com.android.internal.telephony.DriverCall r48;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r48 := @parameter0: com.android.internal.telephony.DriverCall;

        z0 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isConnectingInOrOut()>();

        r49 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Call$State getState()>();

        r50 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        z12 = 1;

        if r49 != r50 goto label01;

        z13 = 1;

        goto label02;

     label01:
        z13 = 0;

     label02:
        $r2 = r48.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        r51 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall parentFromDCState(com.android.internal.telephony.DriverCall$State)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parent= ");

        $r5 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newParent= ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void log(java.lang.String)>($r9);

        $z1 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label03;

        $r47 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Connection mOrigConnection>;

        if $r47 == null goto label03;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void log(java.lang.String)>("update: mOrigConnection is not null");

        z14 = 0;

        goto label05;

     label03:
        z14 = 0;

        $z2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isIncoming()>();

        if $z2 == 0 goto label05;

        z14 = 0;

        $r43 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mAddress>;

        $r42 = r48.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $z8 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean equalsBaseDialString(java.lang.String,java.lang.String)>($r43, $r42);

        if $z8 != 0 goto label05;

        $z9 = r0.<com.android.internal.telephony.GsmCdmaConnection: boolean mNumberConverted>;

        if $z9 == 0 goto label04;

        z14 = 0;

        $r46 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mConvertedNumber>;

        $r45 = r48.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $z10 = staticinvoke <com.android.internal.telephony.GsmCdmaConnection: boolean equalsBaseDialString(java.lang.String,java.lang.String)>($r46, $r45);

        if $z10 != 0 goto label05;

     label04:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void log(java.lang.String)>("update: phone # changed!");

        $r44 = r48.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mAddress> = $r44;

        z14 = 1;

     label05:
        $i4 = r48.<com.android.internal.telephony.DriverCall: int audioQuality>;

        i5 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: int getAudioQualityFromDC(int)>($i4);

        $i6 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: int getAudioQuality()>();

        if $i6 == i5 goto label08;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update: audioQuality # changed!:  ");

        if i5 != 2 goto label06;

        r53 = "high";

        goto label07;

     label06:
        r53 = "standard";

     label07:
        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void log(java.lang.String)>($r41);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void setAudioQuality(int)>(i5);

        z14 = 1;

     label08:
        $i7 = r48.<com.android.internal.telephony.DriverCall: int audioQuality>;

        $i8 = r0.<com.android.internal.telephony.GsmCdmaConnection: int mAudioCodec>;

        if $i7 == $i8 goto label09;

        $i0 = r48.<com.android.internal.telephony.DriverCall: int audioQuality>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mAudioCodec> = $i0;

        $r33 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r32 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r34 = virtualinvoke $r32.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone getPhone()>();

        $i1 = virtualinvoke $r34.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $i2 = r48.<com.android.internal.telephony.DriverCall: int audioQuality>;

        virtualinvoke $r33.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeAudioCodecGsmCdma(int,int)>($i1, $i2);

        $r35 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCallTracker mOwner>;

        $r36 = virtualinvoke $r35.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaPhone getPhone()>();

        $r37 = virtualinvoke $r36.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        $i3 = r48.<com.android.internal.telephony.DriverCall: int audioQuality>;

        virtualinvoke $r37.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onAudioCodecChanged(com.android.internal.telephony.Connection,int)>(r0, $i3);

     label09:
        $r10 = r48.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r10);

        if $z3 == 0 goto label10;

        $r31 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mCnapName>;

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r31);

        if $z7 != 0 goto label11;

        z14 = 1;

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mCnapName> = "";

        goto label11;

     label10:
        $r12 = r48.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        $r11 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mCnapName>;

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z4 != 0 goto label11;

        z14 = 1;

        $r30 = r48.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mCnapName> = $r30;

     label11:
        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--dssds----");

        $r56 = r0.<com.android.internal.telephony.GsmCdmaConnection: java.lang.String mCnapName>;

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r57 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void log(java.lang.String)>($r57);

        $i9 = r48.<com.android.internal.telephony.DriverCall: int namePresentation>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mCnapNamePresentation> = $i9;

        $i10 = r48.<com.android.internal.telephony.DriverCall: int numberPresentation>;

        r0.<com.android.internal.telephony.GsmCdmaConnection: int mNumberPresentation> = $i10;

        r58 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        if r51 == r58 goto label13;

        if r58 == null goto label12;

        virtualinvoke r58.<com.android.internal.telephony.GsmCdmaCall: void detach(com.android.internal.telephony.GsmCdmaConnection)>(r0);

     label12:
        virtualinvoke r51.<com.android.internal.telephony.GsmCdmaCall: void attach(com.android.internal.telephony.Connection,com.android.internal.telephony.DriverCall)>(r0, r48);

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent> = r51;

        z15 = 1;

        goto label16;

     label13:
        z16 = virtualinvoke r58.<com.android.internal.telephony.GsmCdmaCall: boolean update(com.android.internal.telephony.GsmCdmaConnection,com.android.internal.telephony.DriverCall)>(r0, r48);

        if z14 != 0 goto label15;

        if z16 == 0 goto label14;

        goto label15;

     label14:
        z15 = 0;

        goto label16;

     label15:
        z15 = 1;

     label16:
        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update: parent=");

        $r61 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r61);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hasNewParent=");

        $r62 = r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent>;

        if r51 == $r62 goto label17;

        goto label18;

     label17:
        z12 = 0;

     label18:
        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z12);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", wasConnectingInOrOut=");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", wasHolding=");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z13);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isConnectingInOrOut=");

        $z5 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isConnectingInOrOut()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", changed=");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z15);

        $r27 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void log(java.lang.String)>($r27);

        if z0 == 0 goto label19;

        $z6 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: boolean isConnectingInOrOut()>();

        if $z6 != 0 goto label19;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void onConnectedInOrOut()>();

     label19:
        if z15 == 0 goto label20;

        if z13 != 0 goto label20;

        $r28 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.Call$State getState()>();

        $r29 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r28 != $r29 goto label20;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaConnection: void onStartedHolding()>();

     label20:
        return z15;
    }

    public void updateParent(com.android.internal.telephony.GsmCdmaCall, com.android.internal.telephony.GsmCdmaCall)
    {
        com.android.internal.telephony.GsmCdmaConnection r0;
        com.android.internal.telephony.GsmCdmaCall r1, r2;
        com.android.internal.telephony.Call$State $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.GsmCdmaCall;

        r2 := @parameter1: com.android.internal.telephony.GsmCdmaCall;

        if r2 == r1 goto label2;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.telephony.GsmCdmaCall: void detach(com.android.internal.telephony.GsmCdmaConnection)>(r0);

     label1:
        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        virtualinvoke r2.<com.android.internal.telephony.GsmCdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r3);

        r0.<com.android.internal.telephony.GsmCdmaConnection: com.android.internal.telephony.GsmCdmaCall mParent> = r2;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.GsmCdmaConnection: int WAKE_LOCK_TIMEOUT_MILLIS> = 60000;

        <com.android.internal.telephony.GsmCdmaConnection: boolean VDBG> = 0;

        <com.android.internal.telephony.GsmCdmaConnection: int PAUSE_DELAY_MILLIS_GSM> = 3000;

        <com.android.internal.telephony.GsmCdmaConnection: int PAUSE_DELAY_MILLIS_CDMA> = 2000;

        <com.android.internal.telephony.GsmCdmaConnection: java.lang.String OTASP_NUMBER> = "*22899";

        <com.android.internal.telephony.GsmCdmaConnection: java.lang.String LOG_TAG> = "GsmCdmaConnection";

        <com.android.internal.telephony.GsmCdmaConnection: int EVENT_WAKE_LOCK_TIMEOUT> = 4;

        <com.android.internal.telephony.GsmCdmaConnection: int EVENT_PAUSE_DONE> = 2;

        <com.android.internal.telephony.GsmCdmaConnection: int EVENT_NEXT_POST_DIAL> = 3;

        <com.android.internal.telephony.GsmCdmaConnection: int EVENT_DTMF_DONE> = 1;

        <com.android.internal.telephony.GsmCdmaConnection: int EVENT_DTMF_DELAY_DONE> = 5;

        <com.android.internal.telephony.GsmCdmaConnection: boolean DBG> = 1;

        return;
    }
}
