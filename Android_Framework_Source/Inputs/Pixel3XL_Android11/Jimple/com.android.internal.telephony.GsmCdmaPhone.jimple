public class com.android.internal.telephony.GsmCdmaPhone extends com.android.internal.telephony.Phone
{
    public static final int CANCEL_ECM_TIMER;
    private static final boolean DBG;
    private static final long DEFAULT_ECM_EXIT_TIMER_VALUE;
    public static int ENABLE_UICC_APPS_MAX_RETRIES;
    private static final int INVALID_SYSTEM_SELECTION_CODE;
    private static final java.lang.String IS683A_FEATURE_CODE;
    private static final int IS683A_FEATURE_CODE_NUM_DIGITS;
    private static final int IS683A_SYS_SEL_CODE_NUM_DIGITS;
    private static final int IS683A_SYS_SEL_CODE_OFFSET;
    private static final int IS683_CONST_1900MHZ_A_BLOCK;
    private static final int IS683_CONST_1900MHZ_B_BLOCK;
    private static final int IS683_CONST_1900MHZ_C_BLOCK;
    private static final int IS683_CONST_1900MHZ_D_BLOCK;
    private static final int IS683_CONST_1900MHZ_E_BLOCK;
    private static final int IS683_CONST_1900MHZ_F_BLOCK;
    private static final int IS683_CONST_800MHZ_A_BAND;
    private static final int IS683_CONST_800MHZ_B_BAND;
    public static final java.lang.String LOG_TAG;
    private static final java.lang.String PREFIX_WPS;
    public static final java.lang.String PROPERTY_CDMA_HOME_OPERATOR_NUMERIC;
    private static final int REAPPLY_UICC_APPS_SETTING_RETRY_TIME_GAP_IN_MS;
    private static final int REPORTING_HYSTERESIS_DB;
    private static final int REPORTING_HYSTERESIS_KBPS;
    private static final int REPORTING_HYSTERESIS_MILLIS;
    public static final int RESTART_ECM_TIMER;
    private static final boolean VDBG;
    private static final java.lang.String VM_NUMBER;
    private static final java.lang.String VM_NUMBER_CDMA;
    private static final java.lang.String VM_SIM_IMSI;
    private static final int[] VOICE_PS_CALL_RADIO_TECHNOLOGY;
    private static java.util.regex.Pattern pOtaSpNumSchema;
    private boolean mBroadcastEmergencyCallStateChanges;
    private android.content.BroadcastReceiver mBroadcastReceiver;
    private com.android.internal.telephony.CarrierKeyDownloadManager mCDM;
    private com.android.internal.telephony.CarrierInfoManager mCIM;
    public com.android.internal.telephony.GsmCdmaCallTracker mCT;
    private java.lang.String mCarrierOtaSpNumSchema;
    private com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM;
    public int mCdmaSubscriptionSource;
    private com.android.internal.telephony.PhoneInternalInterface$DialArgs mDialArgs;
    private com.android.internal.telephony.Registrant mEcmExitRespRegistrant;
    private final com.android.internal.telephony.RegistrantList mEcmTimerResetRegistrants;
    public com.android.internal.telephony.emergency.EmergencyNumberTracker mEmergencyNumberTracker;
    private java.lang.String mEsn;
    private java.lang.Runnable mExitEcmRunnable;
    private com.android.internal.telephony.IccPhoneBookInterfaceManager mIccPhoneBookIntManager;
    private com.android.internal.telephony.IccSmsInterfaceManager mIccSmsInterfaceManager;
    private java.lang.String mImei;
    private java.lang.String mImeiSv;
    private boolean mIsTestingEmergencyCallbackMode;
    private com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords;
    private java.lang.String mManualNetworkSelectionPlmn;
    private java.lang.String mMeid;
    private java.util.ArrayList mPendingMMIs;
    private int mPrecisePhoneType;
    private boolean mResetModemOnRadioTechnologyChange;
    private int mRilVersion;
    public com.android.internal.telephony.ServiceStateTracker mSST;
    private final com.android.internal.telephony.SettingsObserver mSettingsObserver;
    private com.android.internal.telephony.uicc.SIMRecords mSimRecords;
    private com.android.internal.telephony.RegistrantList mSsnRegistrants;
    private java.lang.Boolean mUiccApplicationsEnabled;
    private java.lang.String mVmNumber;
    private final com.android.internal.telephony.RegistrantList mVolteSilentRedialRegistrants;
    private android.os.PowerManager$WakeLock mWakeLock;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        int[] $r1;

        <com.android.internal.telephony.GsmCdmaPhone: java.lang.String VM_SIM_IMSI> = "vm_sim_imsi_key";

        <com.android.internal.telephony.GsmCdmaPhone: java.lang.String VM_NUMBER_CDMA> = "vm_number_key_cdma";

        <com.android.internal.telephony.GsmCdmaPhone: java.lang.String VM_NUMBER> = "vm_number_key";

        <com.android.internal.telephony.GsmCdmaPhone: boolean VDBG> = 0;

        <com.android.internal.telephony.GsmCdmaPhone: int RESTART_ECM_TIMER> = 0;

        <com.android.internal.telephony.GsmCdmaPhone: int REPORTING_HYSTERESIS_MILLIS> = 3000;

        <com.android.internal.telephony.GsmCdmaPhone: int REPORTING_HYSTERESIS_KBPS> = 50;

        <com.android.internal.telephony.GsmCdmaPhone: int REPORTING_HYSTERESIS_DB> = 2;

        <com.android.internal.telephony.GsmCdmaPhone: int REAPPLY_UICC_APPS_SETTING_RETRY_TIME_GAP_IN_MS> = 5000;

        <com.android.internal.telephony.GsmCdmaPhone: java.lang.String PROPERTY_CDMA_HOME_OPERATOR_NUMERIC> = "ro.cdma.home.operator.numeric";

        <com.android.internal.telephony.GsmCdmaPhone: java.lang.String PREFIX_WPS> = "*272";

        <com.android.internal.telephony.GsmCdmaPhone: java.lang.String LOG_TAG> = "GsmCdmaPhone";

        <com.android.internal.telephony.GsmCdmaPhone: int IS683_CONST_800MHZ_B_BAND> = 1;

        <com.android.internal.telephony.GsmCdmaPhone: int IS683_CONST_800MHZ_A_BAND> = 0;

        <com.android.internal.telephony.GsmCdmaPhone: int IS683_CONST_1900MHZ_F_BLOCK> = 7;

        <com.android.internal.telephony.GsmCdmaPhone: int IS683_CONST_1900MHZ_E_BLOCK> = 6;

        <com.android.internal.telephony.GsmCdmaPhone: int IS683_CONST_1900MHZ_D_BLOCK> = 5;

        <com.android.internal.telephony.GsmCdmaPhone: int IS683_CONST_1900MHZ_C_BLOCK> = 4;

        <com.android.internal.telephony.GsmCdmaPhone: int IS683_CONST_1900MHZ_B_BLOCK> = 3;

        <com.android.internal.telephony.GsmCdmaPhone: int IS683_CONST_1900MHZ_A_BLOCK> = 2;

        <com.android.internal.telephony.GsmCdmaPhone: int IS683A_SYS_SEL_CODE_OFFSET> = 4;

        <com.android.internal.telephony.GsmCdmaPhone: int IS683A_SYS_SEL_CODE_NUM_DIGITS> = 2;

        <com.android.internal.telephony.GsmCdmaPhone: int IS683A_FEATURE_CODE_NUM_DIGITS> = 4;

        <com.android.internal.telephony.GsmCdmaPhone: java.lang.String IS683A_FEATURE_CODE> = "*228";

        <com.android.internal.telephony.GsmCdmaPhone: int INVALID_SYSTEM_SELECTION_CODE> = -1;

        <com.android.internal.telephony.GsmCdmaPhone: long DEFAULT_ECM_EXIT_TIMER_VALUE> = 300000L;

        <com.android.internal.telephony.GsmCdmaPhone: boolean DBG> = 1;

        <com.android.internal.telephony.GsmCdmaPhone: int CANCEL_ECM_TIMER> = 1;

        <com.android.internal.telephony.GsmCdmaPhone: int ENABLE_UICC_APPS_MAX_RETRIES> = 3;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[,\\s]+");

        <com.android.internal.telephony.GsmCdmaPhone: java.util.regex.Pattern pOtaSpNumSchema> = $r0;

        $r1 = newarray (int)[4];

        $r1[0] = 14;

        $r1[1] = 19;

        $r1[2] = 18;

        $r1[3] = 20;

        <com.android.internal.telephony.GsmCdmaPhone: int[] VOICE_PS_CALL_RADIO_TECHNOLOGY> = $r1;

        return;
    }

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier, int, int, com.android.internal.telephony.TelephonyComponentFactory)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface r2;
        com.android.internal.telephony.PhoneNotifier r3;
        int i0, i1;
        com.android.internal.telephony.TelephonyComponentFactory r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r3 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: com.android.internal.telephony.TelephonyComponentFactory;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int,int,com.android.internal.telephony.TelephonyComponentFactory)>(r1, r2, r3, 0, i0, i1, r4);

        return;
    }

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier, boolean, int, int, com.android.internal.telephony.TelephonyComponentFactory)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.PhoneNotifier r1;
        boolean z0;
        com.android.internal.telephony.TelephonyComponentFactory r2, $r11, $r13, $r16, $r18, $r21, $r23, $r26, $r28, $r32, $r34, $r38, $r40, $r43, $r45, $r48, $r50, $r54, $r56, $r72, $r74;
        int i0, $i1, $i2, i3, i4, i5, i6;
        com.android.internal.telephony.RegistrantList $r3, $r6, $r7;
        com.android.internal.telephony.GsmCdmaPhone$1 $r4;
        java.util.ArrayList $r5;
        com.android.internal.telephony.GsmCdmaPhone$2 $r8;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r9;
        java.lang.Class $r10, $r15, $r20, $r25, $r31, $r37, $r42, $r47, $r53, $r70;
        java.lang.String $r12, $r17, $r22, $r27, $r33, $r39, $r44, $r49, $r55, $r69, $r73, r78;
        com.android.internal.telephony.CarrierActionAgent $r14, $r58;
        com.android.internal.telephony.CarrierSignalAgent $r19;
        com.android.internal.telephony.dataconnection.TransportManager $r24, $r52;
        com.android.internal.telephony.CommandsInterface $r29, $r35, r77;
        com.android.internal.telephony.ServiceStateTracker $r30, $r59, $r60;
        com.android.internal.telephony.emergency.EmergencyNumberTracker $r36;
        com.android.internal.telephony.dataconnection.DataEnabledSettings $r41;
        com.android.internal.telephony.DeviceStateMonitor $r46;
        com.android.internal.telephony.DisplayInfoController $r51;
        com.android.internal.telephony.CarrierResolver $r57;
        com.android.internal.telephony.SettingsObserver $r61, $r63;
        android.net.Uri $r62, $r64;
        com.android.internal.telephony.SubscriptionController $r65;
        java.lang.StringBuilder $r66;
        android.util.SparseArray $r71;
        com.android.internal.telephony.dataconnection.DcTracker $r75;
        android.content.Context r76;
        int[] r79;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r76 := @parameter0: android.content.Context;

        r77 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r1 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        z0 := @parameter3: boolean;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: com.android.internal.telephony.TelephonyComponentFactory;

        if i4 != 1 goto label1;

        r78 = "GSM";

        goto label2;

     label1:
        r78 = "CDMA";

     label2:
        specialinvoke r0.<com.android.internal.telephony.Phone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int,com.android.internal.telephony.TelephonyComponentFactory)>(r78, r1, r76, r77, z0, i3, r2);

        $r3 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r3.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mSsnRegistrants> = $r3;

        r0.<com.android.internal.telephony.GsmCdmaPhone: int mCdmaSubscriptionSource> = -1;

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.Boolean mUiccApplicationsEnabled> = null;

        r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mIsTestingEmergencyCallbackMode> = 0;

        $r4 = new com.android.internal.telephony.GsmCdmaPhone$1;

        specialinvoke $r4.<com.android.internal.telephony.GsmCdmaPhone$1: void <init>(com.android.internal.telephony.GsmCdmaPhone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.Runnable mExitEcmRunnable> = $r4;

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mManualNetworkSelectionPlmn> = "";

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs> = $r5;

        $r6 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r6.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mEcmTimerResetRegistrants> = $r6;

        $r7 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r7.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mVolteSilentRedialRegistrants> = $r7;

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.PhoneInternalInterface$DialArgs mDialArgs> = null;

        r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mResetModemOnRadioTechnologyChange> = 0;

        r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mBroadcastEmergencyCallStateChanges> = 0;

        $r8 = new com.android.internal.telephony.GsmCdmaPhone$2;

        specialinvoke $r8.<com.android.internal.telephony.GsmCdmaPhone$2: void <init>(com.android.internal.telephony.GsmCdmaPhone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.BroadcastReceiver mBroadcastReceiver> = $r8;

        r0.<com.android.internal.telephony.GsmCdmaPhone: int mPrecisePhoneType> = i4;

        $r9 = new com.android.internal.telephony.metrics.VoiceCallSessionStats;

        $i1 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        specialinvoke $r9.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void <init>(int,com.android.internal.telephony.Phone)>($i1, r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats mVoiceCallSessionStats> = $r9;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void initOnce(com.android.internal.telephony.CommandsInterface)>(r77);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void initRatSpecific(int)>(i4);

        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r10 = class "Lcom/android/internal/telephony/CarrierActionAgent;";

        $r12 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.CarrierActionAgent makeCarrierActionAgent(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierActionAgent mCarrierActionAgent> = $r14;

        $r16 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r15 = class "Lcom/android/internal/telephony/CarrierSignalAgent;";

        $r17 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.CarrierSignalAgent makeCarrierSignalAgent(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierSignalAgent mCarrierSignalAgent> = $r19;

        $r21 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r20 = class "Lcom/android/internal/telephony/dataconnection/TransportManager;";

        $r22 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r21.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.dataconnection.TransportManager makeTransportManager(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.TransportManager mTransportManager> = $r24;

        $r26 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r25 = class "Lcom/android/internal/telephony/ServiceStateTracker;";

        $r27 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r28 = virtualinvoke $r26.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r27);

        $r29 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r30 = virtualinvoke $r28.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.ServiceStateTracker makeServiceStateTracker(com.android.internal.telephony.GsmCdmaPhone,com.android.internal.telephony.CommandsInterface)>(r0, $r29);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST> = $r30;

        $r32 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r31 = class "Lcom/android/internal/telephony/emergency/EmergencyNumberTracker;";

        $r33 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>();

        $r34 = virtualinvoke $r32.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r33);

        $r35 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r36 = virtualinvoke $r34.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.emergency.EmergencyNumberTracker makeEmergencyNumberTracker(com.android.internal.telephony.Phone,com.android.internal.telephony.CommandsInterface)>(r0, $r35);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.emergency.EmergencyNumberTracker mEmergencyNumberTracker> = $r36;

        $r38 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r37 = class "Lcom/android/internal/telephony/dataconnection/DataEnabledSettings;";

        $r39 = virtualinvoke $r37.<java.lang.Class: java.lang.String getName()>();

        $r40 = virtualinvoke $r38.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.dataconnection.DataEnabledSettings makeDataEnabledSettings(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DataEnabledSettings mDataEnabledSettings> = $r41;

        $r43 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r42 = class "Lcom/android/internal/telephony/DeviceStateMonitor;";

        $r44 = virtualinvoke $r42.<java.lang.Class: java.lang.String getName()>();

        $r45 = virtualinvoke $r43.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.DeviceStateMonitor makeDeviceStateMonitor(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.DeviceStateMonitor mDeviceStateMonitor> = $r46;

        $r48 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r47 = class "Lcom/android/internal/telephony/DisplayInfoController;";

        $r49 = virtualinvoke $r47.<java.lang.Class: java.lang.String getName()>();

        $r50 = virtualinvoke $r48.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.DisplayInfoController makeDisplayInfoController(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.DisplayInfoController mDisplayInfoController> = $r51;

        $r52 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        r79 = virtualinvoke $r52.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        i5 = lengthof r79;

        i6 = 0;

     label3:
        if i6 >= i5 goto label4;

        i0 = r79[i6];

        $r71 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.util.SparseArray mDcTrackers>;

        $r72 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r70 = class "Lcom/android/internal/telephony/dataconnection/DcTracker;";

        $r73 = virtualinvoke $r70.<java.lang.Class: java.lang.String getName()>();

        $r74 = virtualinvoke $r72.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.dataconnection.DcTracker makeDcTracker(com.android.internal.telephony.Phone,int)>(r0, i0);

        virtualinvoke $r71.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r75);

        i6 = i6 + 1;

        goto label3;

     label4:
        $r54 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r53 = class "Lcom/android/internal/telephony/CarrierResolver;";

        $r55 = virtualinvoke $r53.<java.lang.Class: java.lang.String getName()>();

        $r56 = virtualinvoke $r54.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.CarrierResolver makeCarrierResolver(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierResolver mCarrierResolver> = $r57;

        $r58 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierActionAgent getCarrierActionAgent()>();

        virtualinvoke $r58.<com.android.internal.telephony.CarrierActionAgent: void registerForCarrierAction(int,android.os.Handler,int,java.lang.Object,boolean)>(0, r0, 48, null, 0);

        $r59 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r59.<com.android.internal.telephony.ServiceStateTracker: void registerForNetworkAttached(android.os.Handler,int,java.lang.Object)>(r0, 19, null);

        $r60 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r60.<com.android.internal.telephony.ServiceStateTracker: void registerForVoiceRegStateOrRatChanged(android.os.Handler,int,java.lang.Object)>(r0, 46, null);

        $r61 = new com.android.internal.telephony.SettingsObserver;

        specialinvoke $r61.<com.android.internal.telephony.SettingsObserver: void <init>(android.content.Context,android.os.Handler)>(r76, r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.SettingsObserver mSettingsObserver> = $r61;

        $r62 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("device_provisioned");

        virtualinvoke $r61.<com.android.internal.telephony.SettingsObserver: void observe(android.net.Uri,int)>($r62, 49);

        $r63 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.SettingsObserver mSettingsObserver>;

        $r64 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("device_provisioning_mobile_data");

        virtualinvoke $r63.<com.android.internal.telephony.SettingsObserver: void observe(android.net.Uri,int)>($r64, 50);

        $r65 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        virtualinvoke $r65.<com.android.internal.telephony.SubscriptionController: void registerForUiccAppsEnabled(android.os.Handler,int,java.lang.Object,boolean)>(r0, 54, null, 0);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loadTtyMode()>();

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GsmCdmaPhone: constructor: sub = ");

        $i2 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r69);

        return;
    }

    static void access$000(com.android.internal.telephony.GsmCdmaPhone, int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void updateTtyMode(int)>(i0);

        return;
    }

    static void access$100(com.android.internal.telephony.GsmCdmaPhone, int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void updateUiTtyMode(int)>(i0);

        return;
    }

    private java.lang.String checkForTestEmergencyNumber(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r5, $r6, $r7, $r12, $r14, r15, r16;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r8;
        int $i0, $i1;
        java.lang.String[] r17;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        r15 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ril.test.emergencynumber");

        r16 = r1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z0 != 0 goto label1;

        r17 = virtualinvoke r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkForTestEmergencyNumber: values.length=");

        $i0 = lengthof r17;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r5);

        r16 = r1;

        $i1 = lengthof r17;

        if $i1 != 2 goto label1;

        r16 = r1;

        $r6 = r17[0];

        $r7 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>(r1);

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkForTestEmergencyNumber: remap ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r12 = r17[1];

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r14);

        r16 = r17[1];

     label1:
        return r16;
    }

    private static boolean checkOtaSpNumBasedOnSysSelCode(int, java.lang.String[])
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i9;
        java.lang.String $r0, $r1, $r2, $r3, $r4;
        boolean $z2, $z3, z4;
        java.lang.Throwable $r5;
        java.lang.String[] r6;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String[];

     label1:
        $r0 = r6[1];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        i9 = 0;

     label3:
        z4 = 0;

        if i9 >= i1 goto label7;

     label4:
        $i4 = i9 + 2;

        $r1 = r6[$i4];

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z2 != 0 goto label6;

        $i5 = i9 + 3;

        $r2 = r6[$i5];

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z3 != 0 goto label6;

        $i6 = i9 + 2;

        $r3 = r6[$i6];

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $i7 = i9 + 3;

        $r4 = r6[$i7];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label5:
        if i0 < i2 goto label6;

        if i0 > i3 goto label6;

        z4 = 1;

        goto label7;

     label6:
        i9 = i9 + 1;

        goto label3;

     label7:
        goto label9;

     label8:
        $r5 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GsmCdmaPhone", "checkOtaSpNumBasedOnSysSelCode, error", $r5);

        z4 = 0;

     label9:
        return z4;

        catch java.lang.NumberFormatException from label1 to label2 with label8;
        catch java.lang.NumberFormatException from label4 to label5 with label8;
    }

    private static int extractSelCodeFromOtaSpNum(java.lang.String)
    {
        int i0, i3;
        boolean $z0;
        java.lang.String $r2, r3, $r6;
        java.lang.StringBuilder $r4;

        r3 := @parameter0: java.lang.String;

        i0 = virtualinvoke r3.<java.lang.String: int length()>();

        i3 = -1;

        $z0 = virtualinvoke r3.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, "*228", 0, 4);

        if $z0 == 0 goto label1;

        i3 = -1;

        if i0 < 6 goto label1;

        $r2 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(4, 6);

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extractSelCodeFromOtaSpNum ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r6);

        return i3;
    }

    private com.android.internal.telephony.dataconnection.DcTracker getActiveDcTrackerForApn(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.dataconnection.TransportManager $r2;
        int $i0, $i1;
        com.android.internal.telephony.dataconnection.DcTracker $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        $i0 = staticinvoke <android.telephony.data.ApnSetting: int getApnTypesBitmaskFromString(java.lang.String)>(r1);

        $i1 = virtualinvoke $r2.<com.android.internal.telephony.dataconnection.TransportManager: int getCurrentTransport(int)>($i0);

        $r3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>($i1);

        return $r3;
    }

    private int getCsCallRadioTech(int, int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, i1, i2;
        java.lang.StringBuilder $r1, $r11;
        java.lang.String $r6, $r13;
        int[] $r9;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getCsCallRadioTech, current vrs=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", vrat=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r6);

        i2 = i1;

        if i0 != 0 goto label1;

        $r9 = <com.android.internal.telephony.GsmCdmaPhone: int[] VOICE_PS_CALL_RADIO_TECHNOLOGY>;

        $z0 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: boolean contains(int[],int)>($r9, i1);

        if $z0 == 0 goto label2;

     label1:
        i2 = 0;

     label2:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getCsCallRadioTech, result calcVrat=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r13);

        return i2;
    }

    private com.android.internal.telephony.uicc.UiccProfile getUiccProfile()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.uicc.UiccController $r1;
        int $i0;
        com.android.internal.telephony.uicc.UiccProfile $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = staticinvoke <com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance()>();

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccProfile getUiccProfileForPhone(int)>($i0);

        return $r2;
    }

    private java.lang.String getVmSimImsi()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.content.SharedPreferences r1;
        android.content.Context $r3;
        java.lang.StringBuilder $r4;
        int $i0;
        java.lang.String $r7, $r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm_sim_imsi_key");

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r7, null);

        return $r8;
    }

    private boolean handleCallDeflectionIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int $i0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Call$State $r2, $r3, $r5, $r6;
        com.android.internal.telephony.GsmCdmaCall $r4;
        com.android.internal.telephony.GsmCdmaCallTracker $r7, $r8;
        com.android.internal.telephony.CallStateException $r9;
        com.android.internal.telephony.PhoneInternalInterface$SuppService $r10;
        java.lang.String r11;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r11 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r11.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Call getRingingCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r2 == $r3 goto label6;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("MmiCode 0: rejectCall");

     label2:
        $r8 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r8.<com.android.internal.telephony.GsmCdmaCallTracker: void rejectCall()>();

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GsmCdmaPhone", "reject failed", $r9);

        $r10 = <com.android.internal.telephony.PhoneInternalInterface$SuppService: com.android.internal.telephony.PhoneInternalInterface$SuppService REJECT>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void notifySuppServiceFailed(com.android.internal.telephony.PhoneInternalInterface$SuppService)>($r10);

     label5:
        goto label7;

     label6:
        $r4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCall getBackgroundCall()>();

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r5 == $r6 goto label7;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("MmiCode 0: hangupWaitingOrBackground");

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaCallTracker: void hangupWaitingOrBackground()>();

     label7:
        return 1;

        catch com.android.internal.telephony.CallStateException from label2 to label3 with label4;
    }

    private boolean handleCallHoldIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Call$State $r2, $r3;
        com.android.internal.telephony.GsmCdmaCallTracker $r4, $r5, $r6, $r12;
        char $c0;
        java.lang.String $r11, r17, $r22;
        com.android.internal.telephony.CallStateException $r13, $r15;
        com.android.internal.telephony.PhoneInternalInterface$SuppService $r14, $r16, $r23;
        int i3, i4;
        com.android.internal.telephony.GsmCdmaCall r18;
        com.android.internal.telephony.GsmCdmaConnection r19;
        java.lang.StringBuilder r20, r21;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r17 := @parameter0: java.lang.String;

        i3 = virtualinvoke r17.<java.lang.String: int length()>();

        if i3 <= 2 goto label01;

        return 0;

     label01:
        r18 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCall getForegroundCall()>();

        if i3 <= 1 goto label10;

     label02:
        $c0 = virtualinvoke r17.<java.lang.String: char charAt(int)>(1);

        i4 = $c0 - 48;

        $r6 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        r19 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaConnection getConnectionByIndex(com.android.internal.telephony.GsmCdmaCall,int)>(r18, i4);

     label03:
        if r19 == null goto label06;

        if i4 < 1 goto label06;

        if i4 > 19 goto label06;

     label04:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmiCode 2: separate call ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r11 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r11);

        $r12 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r12.<com.android.internal.telephony.GsmCdmaCallTracker: void separate(com.android.internal.telephony.GsmCdmaConnection)>(r19);

     label05:
        goto label09;

     label06:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("separate: invalid call index ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r22 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r22);

        $r23 = <com.android.internal.telephony.PhoneInternalInterface$SuppService: com.android.internal.telephony.PhoneInternalInterface$SuppService SEPARATE>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void notifySuppServiceFailed(com.android.internal.telephony.PhoneInternalInterface$SuppService)>($r23);

     label07:
        goto label09;

     label08:
        $r13 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GsmCdmaPhone", "separate failed", $r13);

        $r14 = <com.android.internal.telephony.PhoneInternalInterface$SuppService: com.android.internal.telephony.PhoneInternalInterface$SuppService SEPARATE>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void notifySuppServiceFailed(com.android.internal.telephony.PhoneInternalInterface$SuppService)>($r14);

     label09:
        goto label15;

     label10:
        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Call getRingingCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r2 == $r3 goto label12;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("MmiCode 2: accept ringing call");

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaCallTracker: void acceptCall()>();

     label11:
        goto label13;

     label12:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("MmiCode 2: switchWaitingOrHoldingAndActive");

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaCallTracker: void switchWaitingOrHoldingAndActive()>();

     label13:
        goto label15;

     label14:
        $r15 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GsmCdmaPhone", "switch failed", $r15);

        $r16 = <com.android.internal.telephony.PhoneInternalInterface$SuppService: com.android.internal.telephony.PhoneInternalInterface$SuppService SWITCH>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void notifySuppServiceFailed(com.android.internal.telephony.PhoneInternalInterface$SuppService)>($r16);

     label15:
        return 1;

        catch com.android.internal.telephony.CallStateException from label02 to label03 with label08;
        catch com.android.internal.telephony.CallStateException from label04 to label05 with label08;
        catch com.android.internal.telephony.CallStateException from label06 to label07 with label08;
        catch com.android.internal.telephony.CallStateException from label10 to label11 with label14;
        catch com.android.internal.telephony.CallStateException from label12 to label13 with label14;
    }

    private boolean handleCallWaitingIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.GsmCdmaCall r1;
        com.android.internal.telephony.Call$State $r2, $r3;
        com.android.internal.telephony.GsmCdmaCallTracker $r4, $r5, $r9;
        char $c0;
        java.lang.String $r8, r12;
        com.android.internal.telephony.CallStateException $r10;
        com.android.internal.telephony.PhoneInternalInterface$SuppService $r11;
        int i2, i3;
        java.lang.StringBuilder r13;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r12 := @parameter0: java.lang.String;

        i2 = virtualinvoke r12.<java.lang.String: int length()>();

        if i2 <= 2 goto label01;

        return 0;

     label01:
        r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCall getForegroundCall()>();

        if i2 <= 1 goto label06;

     label02:
        $c0 = virtualinvoke r12.<java.lang.String: char charAt(int)>(1);

        i3 = $c0 - 48;

     label03:
        if i3 < 1 goto label05;

        if i3 > 19 goto label05;

     label04:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmiCode 1: hangupConnectionByIndex ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r8 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r8);

        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r9.<com.android.internal.telephony.GsmCdmaCallTracker: void hangupConnectionByIndex(com.android.internal.telephony.GsmCdmaCall,int)>(r1, i3);

     label05:
        goto label09;

     label06:
        $r2 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r2 == $r3 goto label08;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("MmiCode 1: hangup foreground");

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaCallTracker: void hangup(com.android.internal.telephony.GsmCdmaCall)>(r1);

     label07:
        goto label09;

     label08:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("MmiCode 1: switchWaitingOrHoldingAndActive");

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaCallTracker: void switchWaitingOrHoldingAndActive()>();

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GsmCdmaPhone", "hangup failed", $r10);

        $r11 = <com.android.internal.telephony.PhoneInternalInterface$SuppService: com.android.internal.telephony.PhoneInternalInterface$SuppService HANGUP>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void notifySuppServiceFailed(com.android.internal.telephony.PhoneInternalInterface$SuppService)>($r11);

     label11:
        return 1;

        catch com.android.internal.telephony.CallStateException from label02 to label03 with label10;
        catch com.android.internal.telephony.CallStateException from label04 to label05 with label10;
        catch com.android.internal.telephony.CallStateException from label06 to label07 with label10;
        catch com.android.internal.telephony.CallStateException from label08 to label09 with label10;
    }

    private boolean handleCcbsIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1;
        int $i0;
        com.android.internal.telephony.PhoneInternalInterface$SuppService $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        return 0;

     label1:
        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaPhone", "MmiCode 5: CCBS not supported!");

        $r2 = <com.android.internal.telephony.PhoneInternalInterface$SuppService: com.android.internal.telephony.PhoneInternalInterface$SuppService UNKNOWN>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void notifySuppServiceFailed(com.android.internal.telephony.PhoneInternalInterface$SuppService)>($r2);

        return 1;
    }

    private void handleCfuQueryResult(com.android.internal.telephony.CallForwardInfo[])
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.CallForwardInfo[] r1;
        int i0, $i1, $i2, $i3, $i4, i5;
        com.android.internal.telephony.CallForwardInfo $r2, $r3, $r4;
        java.lang.String $r5;
        boolean z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: com.android.internal.telephony.CallForwardInfo[];

        z0 = 0;

        if r1 == null goto label5;

        $i1 = lengthof r1;

        if $i1 != 0 goto label1;

        goto label5;

     label1:
        i5 = 0;

        i0 = lengthof r1;

     label2:
        if i5 >= i0 goto label6;

        $r2 = r1[i5];

        $i2 = $r2.<com.android.internal.telephony.CallForwardInfo: int serviceClass>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label4;

        $r3 = r1[i5];

        $i4 = $r3.<com.android.internal.telephony.CallForwardInfo: int status>;

        if $i4 != 1 goto label3;

        z0 = 1;

     label3:
        $r4 = r1[i5];

        $r5 = $r4.<com.android.internal.telephony.CallForwardInfo: java.lang.String number>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>(1, z0, $r5);

        goto label6;

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>(1, 0, null);

     label6:
        return;
    }

    private boolean handleEctIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 1 goto label1;

        return 0;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("MmiCode 4: explicit call transfer");

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void explicitCallTransfer()>();

        return 1;
    }

    private void handleEnterEmergencyCallbackMode(android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        long l0;
        java.lang.StringBuilder $r1;
        boolean $z0, $z1;
        java.lang.String $r4;
        java.util.Optional $r5;
        java.lang.Long $r6, $r8;
        java.lang.Object $r7;
        java.lang.Runnable $r9;
        android.os.PowerManager$WakeLock $r10;
        android.os.Message r11;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r11 := @parameter0: android.os.Message;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleEnterEmergencyCallbackMode, isInEcm()=");

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isInEcm()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r4);

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isInEcm()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setIsInEcm(boolean)>(1);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void sendEmergencyCallbackModeChange()>();

        $r5 = staticinvoke <android.internal.telephony.sysprop.TelephonyProperties: java.util.Optional ecm_exit_timer()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(300000L);

        $r7 = virtualinvoke $r5.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r6);

        $r8 = (java.lang.Long) $r7;

        l0 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.Runnable mExitEcmRunnable>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean postDelayed(java.lang.Runnable,long)>($r9, l0);

        $r10 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r10.<android.os.PowerManager$WakeLock: void acquire()>();

     label1:
        return;
    }

    private void handleExitEmergencyCallbackMode(android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2;
        java.lang.Throwable $r4, $r9;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r7;
        java.lang.Runnable $r8;
        android.os.PowerManager$WakeLock $r10, $r12;
        com.android.internal.telephony.dataconnection.DataEnabledSettings $r11;
        android.os.Message r13;
        android.os.AsyncResult r14;
        com.android.internal.telephony.Registrant r16;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r13 := @parameter0: android.os.Message;

        $r1 = r13.<android.os.Message: java.lang.Object obj>;

        r14 = (android.os.AsyncResult) $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleExitEmergencyCallbackMode,ar.exception , isInEcm=");

        $r4 = r14.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isInEcm()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r7);

        $r8 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.Runnable mExitEcmRunnable>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void removeCallbacks(java.lang.Runnable)>($r8);

        r16 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Registrant mEcmExitRespRegistrant>;

        if r16 == null goto label1;

        virtualinvoke r16.<com.android.internal.telephony.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r14);

     label1:
        $r9 = r14.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r9 == null goto label2;

        $z3 = r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mIsTestingEmergencyCallbackMode>;

        if $z3 == 0 goto label5;

     label2:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isInEcm()>();

        if $z1 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setIsInEcm(boolean)>(0);

     label3:
        $r10 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.PowerManager$WakeLock mWakeLock>;

        $z2 = virtualinvoke $r10.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z2 == 0 goto label4;

        $r12 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r12.<android.os.PowerManager$WakeLock: void release()>();

     label4:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void sendEmergencyCallbackModeChange()>();

        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DataEnabledSettings mDataEnabledSettings>;

        virtualinvoke $r11.<com.android.internal.telephony.dataconnection.DataEnabledSettings: void setInternalDataEnabled(boolean)>(1);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void notifyEmergencyCallRegistrants(boolean)>(0);

     label5:
        r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mIsTestingEmergencyCallbackMode> = 0;

        return;
    }

    private boolean handleMultipartyIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        return 0;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("MmiCode 3: merge calls");

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void conference()>();

        return 1;
    }

    private void handleRadioAvailable()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.CommandsInterface $r1, $r3, $r5, $r7;
        android.os.Message $r2, $r4, $r6, $r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int)>(6);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void getBasebandVersion(android.os.Message)>($r2);

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int)>(21);

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void getDeviceIdentity(android.os.Message)>($r4);

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r6 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int)>(35);

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void getRadioCapability(android.os.Message)>($r6);

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r8 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int)>(55);

        interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: void areUiccApplicationsEnabled(android.os.Message)>($r8);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void startLceAfterRadioIsAvailable()>();

        return;
    }

    private void handleRadioOffOrNotAvailable()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0, $z1;
        com.android.internal.telephony.RegistrantList $r1;
        java.util.ArrayList $r2, $r3, $r6;
        int $i0, i1;
        java.lang.Object $r4, $r7;
        com.android.internal.telephony.gsm.GsmMmiCode $r5, $r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.internal.telephony.gsm.GsmMmiCode) $r4;

        $z1 = virtualinvoke $r5.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isPendingUSSD()>();

        if $z1 == 0 goto label2;

        $r6 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (com.android.internal.telephony.gsm.GsmMmiCode) $r7;

        virtualinvoke $r8.<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdFinishedError()>();

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mRadioOffOrNotAvailableRegistrants>;

        virtualinvoke $r1.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        return;
    }

    private void handleRadioOn()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;
        boolean $z0;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r3;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int)>(40);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void getVoiceRadioTechnology(android.os.Message)>($r2);

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $i0 = virtualinvoke $r3.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        r0.<com.android.internal.telephony.GsmCdmaPhone: int mCdmaSubscriptionSource> = $i0;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setPreferredNetworkTypeIfSimLoaded()>();

        return;
    }

    private void handleRadioPowerStateChange()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.StringBuilder $r2;
        com.android.internal.telephony.CommandsInterface $r4, $r7;
        int $i0, $i2;
        java.lang.String $r6;
        com.android.internal.telephony.PhoneNotifier $r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleRadioPowerStateChange, state= ");

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $i0 = interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r6);

        $r8 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $i2 = interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        interfaceinvoke $r8.<com.android.internal.telephony.PhoneNotifier: void notifyRadioPowerStateChanged(com.android.internal.telephony.Phone,int)>(r0, $i2);

        return;
    }

    private void initOnce(com.android.internal.telephony.CommandsInterface)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0, $z1;
        java.lang.Class $r1, $r6, $r15, $r30;
        com.android.internal.telephony.TelephonyComponentFactory $r2, $r4, $r7, $r9, $r16, $r18, $r31, $r33;
        java.lang.String $r3, $r8, $r17, $r32, $r42;
        com.android.internal.telephony.GsmCdmaCallTracker $r5;
        com.android.internal.telephony.IccPhoneBookInterfaceManager $r10;
        android.content.Context $r11, $r35, $r40, $r51;
        java.lang.Object $r12, $r45;
        android.os.PowerManager $r13;
        android.os.PowerManager$WakeLock $r14;
        com.android.internal.telephony.IccSmsInterfaceManager $r19;
        com.android.internal.telephony.CommandsInterface $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r34, $r37, $r38, $r39, $r47, $r48, r56;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r36;
        android.telephony.TelephonyManager $r41;
        int $i0;
        java.util.Optional $r43;
        java.lang.Boolean $r44, $r46;
        android.content.IntentFilter $r49;
        android.content.BroadcastReceiver $r50;
        com.android.internal.telephony.CarrierKeyDownloadManager $r53;
        com.android.internal.telephony.CarrierInfoManager $r54;
        com.android.internal.telephony.test.SimulatedRadioControl $r55;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r56 := @parameter0: com.android.internal.telephony.CommandsInterface;

        $z0 = r56 instanceof com.android.internal.telephony.test.SimulatedRadioControl;

        if $z0 == 0 goto label1;

        $r55 = (com.android.internal.telephony.test.SimulatedRadioControl) r56;

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.test.SimulatedRadioControl mSimulatedRadioControl> = $r55;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r1 = class "Lcom/android/internal/telephony/GsmCdmaCallTracker;";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.GsmCdmaCallTracker makeGsmCdmaCallTracker(com.android.internal.telephony.GsmCdmaPhone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT> = $r5;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r6 = class "Lcom/android/internal/telephony/IccPhoneBookInterfaceManager;";

        $r8 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.IccPhoneBookInterfaceManager makeIccPhoneBookInterfaceManager(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager mIccPhoneBookIntManager> = $r10;

        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r13 = (android.os.PowerManager) $r12;

        $r14 = virtualinvoke $r13.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "GsmCdmaPhone");

        r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.PowerManager$WakeLock mWakeLock> = $r14;

        $r16 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r15 = class "Lcom/android/internal/telephony/IccSmsInterfaceManager;";

        $r17 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.IccSmsInterfaceManager makeIccSmsInterfaceManager(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.IccSmsInterfaceManager mIccSmsInterfaceManager> = $r19;

        $r20 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r20.<com.android.internal.telephony.CommandsInterface: void registerForAvailable(android.os.Handler,int,java.lang.Object)>(r0, 1, null);

        $r21 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r21.<com.android.internal.telephony.CommandsInterface: void registerForOffOrNotAvailable(android.os.Handler,int,java.lang.Object)>(r0, 8, null);

        $r22 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r22.<com.android.internal.telephony.CommandsInterface: void registerForOn(android.os.Handler,int,java.lang.Object)>(r0, 5, null);

        $r23 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r23.<com.android.internal.telephony.CommandsInterface: void registerForRadioStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 47, null);

        $r24 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r24.<com.android.internal.telephony.CommandsInterface: void registerUiccApplicationEnablementChanged(android.os.Handler,int,java.lang.Object)>(r0, 53, null);

        $r25 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r25.<com.android.internal.telephony.CommandsInterface: void setOnSuppServiceNotification(android.os.Handler,int,java.lang.Object)>(r0, 2, null);

        $r26 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r26.<com.android.internal.telephony.CommandsInterface: void setOnRegistrationFailed(android.os.Handler,int,java.lang.Object)>(r0, 57, null);

        $r27 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r27.<com.android.internal.telephony.CommandsInterface: void registerForBarringInfoChanged(android.os.Handler,int,java.lang.Object)>(r0, 58, null);

        $r28 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r28.<com.android.internal.telephony.CommandsInterface: void setOnUSSD(android.os.Handler,int,java.lang.Object)>(r0, 7, null);

        $r29 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r29.<com.android.internal.telephony.CommandsInterface: void setOnSs(android.os.Handler,int,java.lang.Object)>(r0, 36, null);

        $r31 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyComponentFactory mTelephonyComponentFactory>;

        $r30 = class "Lcom/android/internal/telephony/cdma/CdmaSubscriptionSourceManager;";

        $r32 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>();

        $r33 = virtualinvoke $r31.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r32);

        $r35 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r34 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r36 = virtualinvoke $r33.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager getCdmaSubscriptionSourceManagerInstance(android.content.Context,com.android.internal.telephony.CommandsInterface,android.os.Handler,int,java.lang.Object)>($r35, $r34, r0, 27, null);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM> = $r36;

        $r37 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r37.<com.android.internal.telephony.CommandsInterface: void setEmergencyCallbackMode(android.os.Handler,int,java.lang.Object)>(r0, 25, null);

        $r38 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r38.<com.android.internal.telephony.CommandsInterface: void registerForExitEmergencyCallbackMode(android.os.Handler,int,java.lang.Object)>(r0, 26, null);

        $r39 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r39.<com.android.internal.telephony.CommandsInterface: void registerForModemReset(android.os.Handler,int,java.lang.Object)>(r0, 45, null);

        $r40 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r41 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>($r40);

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r42 = virtualinvoke $r41.<android.telephony.TelephonyManager: java.lang.String getOtaSpNumberSchemaForPhone(int,java.lang.String)>($i0, "");

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mCarrierOtaSpNumSchema> = $r42;

        $r43 = staticinvoke <android.internal.telephony.sysprop.TelephonyProperties: java.util.Optional reset_on_radio_tech_change()>();

        $r44 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r45 = virtualinvoke $r43.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r44);

        $r46 = (java.lang.Boolean) $r45;

        $z1 = virtualinvoke $r46.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mResetModemOnRadioTechnologyChange> = $z1;

        $r47 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r47.<com.android.internal.telephony.CommandsInterface: void registerForRilConnected(android.os.Handler,int,java.lang.Object)>(r0, 41, null);

        $r48 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r48.<com.android.internal.telephony.CommandsInterface: void registerForVoiceRadioTechChanged(android.os.Handler,int,java.lang.Object)>(r0, 39, null);

        $r49 = new android.content.IntentFilter;

        specialinvoke $r49.<android.content.IntentFilter: void <init>(java.lang.String)>("android.telephony.action.CARRIER_CONFIG_CHANGED");

        virtualinvoke $r49.<android.content.IntentFilter: void addAction(java.lang.String)>("android.telecom.action.CURRENT_TTY_MODE_CHANGED");

        virtualinvoke $r49.<android.content.IntentFilter: void addAction(java.lang.String)>("android.telecom.action.TTY_PREFERRED_MODE_CHANGED");

        $r51 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r50 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r51.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r50, $r49);

        $r53 = new com.android.internal.telephony.CarrierKeyDownloadManager;

        specialinvoke $r53.<com.android.internal.telephony.CarrierKeyDownloadManager: void <init>(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierKeyDownloadManager mCDM> = $r53;

        $r54 = new com.android.internal.telephony.CarrierInfoManager;

        specialinvoke $r54.<com.android.internal.telephony.CarrierInfoManager: void <init>()>();

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierInfoManager mCIM> = $r54;

        return;
    }

    private void initRatSpecific(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        java.util.ArrayList $r1;
        com.android.internal.telephony.IccPhoneBookInterfaceManager $r2;
        java.lang.StringBuilder $r3, $r10, $r17, $r22, $r27, $r32;
        java.lang.String $r6, $r16, $r21, $r25, $r30, $r36, r42, r43;
        android.content.Context $r7, $r31;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r8;
        com.android.internal.telephony.CommandsInterface $r9, $r37, $r38;
        com.android.internal.telephony.SubscriptionController $r26;
        android.telephony.TelephonyManager r40;
        com.android.internal.telephony.uicc.UiccProfile r41;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager mIccPhoneBookIntManager>;

        virtualinvoke $r2.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void updateIccRecords(com.android.internal.telephony.uicc.IccRecords)>(null);

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mEsn> = null;

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mMeid> = null;

        r0.<com.android.internal.telephony.GsmCdmaPhone: int mPrecisePhoneType> = i0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Precise phone type ");

        $i1 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPrecisePhoneType>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r6);

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        r40 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>($r7);

        r41 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccProfile getUiccProfile()>();

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r38 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r38.<com.android.internal.telephony.CommandsInterface: void setPhoneType(int)>(1);

        $i8 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke r40.<android.telephony.TelephonyManager: void setPhoneType(int,int)>($i8, 1);

        if r41 == null goto label6;

        virtualinvoke r41.<com.android.internal.telephony.uicc.UiccProfile: void setVoiceRadioTech(int)>(3);

        goto label6;

     label1:
        $r8 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $i2 = virtualinvoke $r8.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        r0.<com.android.internal.telephony.GsmCdmaPhone: int mCdmaSubscriptionSource> = $i2;

        $z1 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: boolean getInEcmMode()>();

        r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mIsPhoneInEcmState> = $z1;

        $z2 = r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mIsPhoneInEcmState>;

        if $z2 == 0 goto label2;

        $r37 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r37.<com.android.internal.telephony.CommandsInterface: void exitEmergencyCallbackMode(android.os.Message)>(null);

     label2:
        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r9.<com.android.internal.telephony.CommandsInterface: void setPhoneType(int)>(2);

        $i3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke r40.<android.telephony.TelephonyManager: void setPhoneType(int,int)>($i3, 2);

        if r41 == null goto label3;

        virtualinvoke r41.<com.android.internal.telephony.uicc.UiccProfile: void setVoiceRadioTech(int)>(6);

     label3:
        r42 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.cdma.home.operator.alpha");

        r43 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.cdma.home.operator.numeric");

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init: operatorAlpha=\'");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' operatorNumeric=\'");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r16);

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r42);

        if $z3 != 0 goto label4;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init: set \'gsm.sim.operator.alpha\' to operator=\'");

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r36);

        $i7 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        virtualinvoke r40.<android.telephony.TelephonyManager: void setSimOperatorNameForPhone(int,java.lang.String)>($i7, r42);

     label4:
        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r43);

        if $z4 != 0 goto label5;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init: set \'gsm.sim.operator.numeric\' to operator=\'");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update icc_operator_numeric=");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r25);

        $i4 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        virtualinvoke r40.<android.telephony.TelephonyManager: void setSimOperatorNumericForPhone(int,java.lang.String)>($i4, r43);

        $r26 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $i5 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        virtualinvoke $r26.<com.android.internal.telephony.SubscriptionController: int setMccMnc(java.lang.String,int)>(r43, $i5);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setIsoCountryProperty(java.lang.String)>(r43);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update mccmnc=");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r30);

        $r31 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        staticinvoke <com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String)>($r31, r43);

     label5:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean updateCurrentCarrierInProvider(java.lang.String)>(r43);

     label6:
        return;
    }

    private boolean isCarrierOtaSpNum(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.util.regex.Matcher r1;
        java.lang.String $r2, $r3, $r7, $r9, $r12, $r14, $r15, $r17, $r18, $r21, $r23, $r24, $r25, $r26, $r27, r28;
        boolean $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        java.util.regex.Pattern $r4, $r16;
        java.lang.StringBuilder $r5, $r10, $r19;
        int i6, i7;
        java.lang.String[] r30;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r28 := @parameter0: java.lang.String;

        z10 = 0;

        i6 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: int extractSelCodeFromOtaSpNum(java.lang.String)>(r28);

        if i6 != -1 goto label01;

        return 0;

     label01:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mCarrierOtaSpNumSchema>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z3 != 0 goto label10;

        $r4 = <com.android.internal.telephony.GsmCdmaPhone: java.util.regex.Pattern pOtaSpNumSchema>;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mCarrierOtaSpNumSchema>;

        r1 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isCarrierOtaSpNum,schema");

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mCarrierOtaSpNumSchema>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r9);

        $z4 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();

        if $z4 == 0 goto label08;

        $r16 = <com.android.internal.telephony.GsmCdmaPhone: java.util.regex.Pattern pOtaSpNumSchema>;

        $r15 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mCarrierOtaSpNumSchema>;

        r30 = virtualinvoke $r16.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>($r15);

        $r17 = r30[0];

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r17);

        if $z5 != 0 goto label03;

        $r27 = r30[0];

        $z9 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("SELC");

        if $z9 == 0 goto label03;

        if i6 == -1 goto label02;

        z10 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: boolean checkOtaSpNumBasedOnSysSelCode(int,java.lang.String[])>(i6, r30);

        goto label07;

     label02:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", "isCarrierOtaSpNum,sysSelCodeInt is invalid");

        z10 = 0;

        goto label07;

     label03:
        $r18 = r30[0];

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r18);

        if $z6 != 0 goto label06;

        $r24 = r30[0];

        $z7 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("FC");

        if $z7 == 0 goto label06;

        $r25 = r30[1];

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        $r26 = r30[2];

        $z8 = virtualinvoke r28.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, $r26, 0, i7);

        if $z8 == 0 goto label04;

        z10 = 1;

        goto label05;

     label04:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", "isCarrierOtaSpNum,not otasp number");

     label05:
        goto label07;

     label06:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isCarrierOtaSpNum,ota schema not supported");

        $r21 = r30[0];

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r23);

        z10 = 0;

     label07:
        goto label09;

     label08:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isCarrierOtaSpNum,ota schema pattern not right");

        $r12 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mCarrierOtaSpNumSchema>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r14);

        z10 = 0;

     label09:
        goto label11;

     label10:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", "isCarrierOtaSpNum,ota schema pattern empty");

        z10 = 0;

     label11:
        return z10;
    }

    private boolean isCfEnable(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        boolean z1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        z1 = 1;

        if i0 == 1 goto label2;

        if i0 != 3 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isImsUtEnabledOverCdma()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0, $z1, z2;
        com.android.internal.telephony.Phone $r1, $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private static boolean isIs683OtaSpDialStr(java.lang.String)
    {
        java.lang.String r0;
        int $i0, $i1;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.String;

        z1 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 4 goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("*228");

        if $z0 == 0 goto label4;

        z1 = 1;

        goto label4;

     label1:
        $i1 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: int extractSelCodeFromOtaSpNum(java.lang.String)>(r0);

        tableswitch($i1)
        {
            case 0: goto label3;
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label3;
            default: goto label2;
        };

     label2:
        goto label4;

     label3:
        z1 = 1;

     label4:
        return z1;
    }

    private boolean isManualSelProhibitedInGlobalMode()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        boolean $z1, $z2, $z3, $z4, $z5, z6;
        int $i0, $i1;
        java.lang.String $r5, $r6, $r7, $r8, r9, $r13;
        java.lang.String[] r10;
        java.lang.StringBuilder $r11;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        r9 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17041093);

        z6 = 0;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z1 != 0 goto label3;

        r10 = virtualinvoke r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        z6 = 0;

        if r10 == null goto label3;

        $i0 = lengthof r10;

        if $i0 != 1 goto label1;

        $r8 = r10[0];

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z5 != 0 goto label2;

     label1:
        z6 = 0;

        $i1 = lengthof r10;

        if $i1 != 2 goto label3;

        z6 = 0;

        $r5 = r10[1];

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z2 != 0 goto label3;

        z6 = 0;

        $r6 = r10[0];

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z3 == 0 goto label3;

        z6 = 0;

        $r7 = r10[1];

        $z4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isMatchGid(java.lang.String)>($r7);

        if $z4 == 0 goto label3;

     label2:
        z6 = 1;

     label3:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isManualNetSelAllowedInGlobal in current carrier is ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z6);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r13);

        return z6;
    }

    private boolean isValidCommandInterfaceCFAction(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        if i0 == 3 goto label1;

        if i0 == 4 goto label1;

        return 0;

     label1:
        return 1;
    }

    private boolean isValidCommandInterfaceCFReason(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        if i0 == 4 goto label1;

        if i0 == 5 goto label1;

        return 0;

     label1:
        return 1;
    }

    private void loadTtyMode()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.telecom.TelecomManager r1;
        android.content.Context $r2, $r4;
        java.lang.Object $r3;
        android.content.ContentResolver $r5;
        int $i0, i1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i1 = 0;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telecom/TelecomManager;");

        r1 = (android.telecom.TelecomManager) $r3;

        if r1 == null goto label1;

        i1 = virtualinvoke r1.<android.telecom.TelecomManager: int getCurrentTtyMode()>();

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void updateTtyMode(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r5, "preferred_tty_mode", 0);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void updateUiTtyMode(int)>($i0);

        return;
    }

    private void logd(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r8;
        java.lang.StringBuilder $r3;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r8);

        return;
    }

    private void loge(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r8;
        java.lang.StringBuilder $r3;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r8);

        return;
    }

    private void logi(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r8;
        java.lang.StringBuilder $r3;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r8);

        return;
    }

    private android.telephony.ServiceState mergeServiceStates(android.telephony.ServiceState, android.telephony.ServiceState)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.telephony.ServiceState r1, $r2, r3;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.telephony.ServiceState;

        r3 := @parameter1: android.telephony.ServiceState;

        $i0 = virtualinvoke r1.<android.telephony.ServiceState: int getState()>();

        if $i0 != 0 goto label1;

        return r1;

     label1:
        $i1 = virtualinvoke r3.<android.telephony.ServiceState: int getState()>();

        if $i1 == 0 goto label2;

        return r1;

     label2:
        $r2 = new android.telephony.ServiceState;

        specialinvoke $r2.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>(r1);

        $i2 = virtualinvoke r1.<android.telephony.ServiceState: int getDataRegistrationState()>();

        virtualinvoke $r2.<android.telephony.ServiceState: void setVoiceRegState(int)>($i2);

        virtualinvoke $r2.<android.telephony.ServiceState: void setEmergencyOnly(boolean)>(0);

        return $r2;
    }

    private void migrateClirSettingIfNeeded(android.content.SharedPreferences)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1, $i2, $i3, $i5, $i6;
        java.lang.StringBuilder $r1, $r5, $r14, $r19;
        java.lang.String $r4, $r13, $r17, $r22;
        android.content.SharedPreferences$Editor $r23, r27;
        android.content.SharedPreferences r24;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r24 := @parameter0: android.content.SharedPreferences;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clir_key");

        $i1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = interfaceinvoke r24.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r4, -1);

        if i0 < 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Migrate CLIR setting: value=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clir_key");

        $i2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clir_sub_key");

        $i3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r13);

        r27 = interfaceinvoke r24.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clir_sub_key");

        $i5 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r27.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r17, i0);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clir_key");

        $i6 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = interfaceinvoke r27.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r22);

        interfaceinvoke $r23.<android.content.SharedPreferences$Editor: boolean commit()>();

     label1:
        return;
    }

    private void onIncomingUSSD(int, java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1;
        int i0, i1, i2;
        boolean $z0, $z1, $z2, z3, z4, z5;
        java.util.ArrayList $r2, $r7, $r10;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4, $r8, $r11;
        com.android.internal.telephony.uicc.UiccCardApplication $r5;
        com.android.internal.telephony.gsm.GsmMmiCode $r6, $r9, r12;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label01;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("onIncomingUSSD: not expected on GSM");

     label01:
        z3 = 0;

        if i1 != 1 goto label02;

        z4 = 1;

        goto label03;

     label02:
        z4 = 0;

     label03:
        if i1 == 0 goto label04;

        if i1 == 1 goto label04;

        z5 = 1;

        goto label05;

     label04:
        z5 = 0;

     label05:
        if i1 != 2 goto label06;

        z3 = 1;

     label06:
        i2 = 0;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label07:
        r12 = null;

        if i2 >= i0 goto label09;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r9 = (com.android.internal.telephony.gsm.GsmMmiCode) $r8;

        $z2 = virtualinvoke $r9.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isPendingUSSD()>();

        if $z2 == 0 goto label08;

        $r10 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r12 = (com.android.internal.telephony.gsm.GsmMmiCode) $r11;

        goto label09;

     label08:
        i2 = i2 + 1;

        goto label07;

     label09:
        if r12 == null goto label12;

        if z3 == 0 goto label10;

        virtualinvoke r12.<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdRelease()>();

        goto label13;

     label10:
        if z5 == 0 goto label11;

        virtualinvoke r12.<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdFinishedError()>();

        goto label13;

     label11:
        virtualinvoke r12.<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdFinished(java.lang.String,boolean)>(r1, z4);

        goto label13;

     label12:
        if z5 != 0 goto label13;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label13;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r5 = (com.android.internal.telephony.uicc.UiccCardApplication) $r4;

        $r6 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newNetworkInitiatedUssd(java.lang.String,boolean,com.android.internal.telephony.GsmCdmaPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r1, z4, r0, $r5);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void onNetworkInitiatedUssd(com.android.internal.telephony.MmiCode)>($r6);

     label13:
        return;
    }

    private void onNetworkInitiatedUssd(com.android.internal.telephony.MmiCode)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.MmiCode r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.os.AsyncResult $r7;
        com.android.internal.telephony.RegistrantList $r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: com.android.internal.telephony.MmiCode;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onNetworkInitiatedUssd: mmi=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r6);

        $r8 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mMmiCompleteRegistrants>;

        $r7 = new android.os.AsyncResult;

        specialinvoke $r7.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r1, null);

        virtualinvoke $r8.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r7);

        return;
    }

    private void onVoiceRegStateOrRatChanged(int, int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, i1, $i2;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("onVoiceRegStateOrRatChanged");

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $i2 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getCsCallRadioTech(int,int)>(i0, i1);

        virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCallTracker: void dispatchCsCallRadioTech(int)>($i2);

        return;
    }

    private static java.lang.String pii(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("GsmCdmaPhone", r0);

        return $r1;
    }

    private void processIccRecordEvents(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logi(java.lang.String)>("processIccRecordEvents: EVENT_CFI");

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void notifyCallForwardingIndicator()>();

     label2:
        return;
    }

    private void reapplyUiccAppsEnablementIfNeeded(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1;
        com.android.internal.telephony.uicc.UiccController $r1;
        com.android.internal.telephony.uicc.IccCardStatus$CardState $r2, $r3;
        java.lang.Boolean $r4, $r7, $r10;
        com.android.internal.telephony.SubscriptionController $r5;
        java.lang.String $r6, r14;
        boolean $z0, z1;
        android.util.Pair $r8;
        com.android.internal.telephony.CommandsInterface $r9;
        java.lang.Integer $r11;
        android.os.Message $r12;
        com.android.internal.telephony.uicc.UiccSlot r13;
        android.telephony.SubscriptionInfo r15;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i1 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r13 = virtualinvoke $r1.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccSlot getUiccSlotForPhone(int)>($i1);

        if r13 == null goto label6;

        $r2 = virtualinvoke r13.<com.android.internal.telephony.uicc.UiccSlot: com.android.internal.telephony.uicc.IccCardStatus$CardState getCardState()>();

        $r3 = <com.android.internal.telephony.uicc.IccCardStatus$CardState: com.android.internal.telephony.uicc.IccCardStatus$CardState CARDSTATE_PRESENT>;

        if $r2 != $r3 goto label6;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.Boolean mUiccApplicationsEnabled>;

        if $r4 != null goto label1;

        goto label6;

     label1:
        r14 = virtualinvoke r13.<com.android.internal.telephony.uicc.UiccSlot: java.lang.String getIccId()>();

        if r14 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $r6 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String stripTrailingFs(java.lang.String)>(r14);

        r15 = virtualinvoke $r5.<com.android.internal.telephony.SubscriptionController: android.telephony.SubscriptionInfo getSubInfoForIccId(java.lang.String)>($r6);

        if r15 != null goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = virtualinvoke r15.<android.telephony.SubscriptionInfo: boolean areUiccApplicationsEnabled()>();

     label4:
        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.Boolean mUiccApplicationsEnabled>;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if z1 == $z0 goto label5;

        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r8 = new android.util.Pair;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r8.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r10, $r11);

        $r12 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>(r0, 56, $r8);

        interfaceinvoke $r9.<com.android.internal.telephony.CommandsInterface: void enableUiccApplications(boolean,android.os.Message)>(z1, $r12);

     label5:
        return;

     label6:
        return;
    }

    private void registerForIccRecordEvents()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void registerForNetworkSelectionModeAutomatic(android.os.Handler,int,java.lang.Object)>(r0, 28, null);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsEvents(android.os.Handler,int,java.lang.Object)>(r0, 29, null);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsLoaded(android.os.Handler,int,java.lang.Object)>(r0, 3, null);

        goto label3;

     label2:
        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsLoaded(android.os.Handler,int,java.lang.Object)>(r0, 22, null);

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z1 == 0 goto label3;

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsLoaded(android.os.Handler,int,java.lang.Object)>(r0, 3, null);

     label3:
        return;
    }

    private void sendEmergencyCallbackModeChange()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.content.Intent $r2;
        boolean $z0;
        int $i0;
        android.os.UserHandle $r4;
        android.content.Context $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.EMERGENCY_CALLBACK_MODE_CHANGED");

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isInEcm()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.telephony.extra.PHONE_IN_ECM_STATE", $z0);

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int)>($r2, $i0);

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r4 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r5.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r2, $r4);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logi(java.lang.String)>("sendEmergencyCallbackModeChange");

        return;
    }

    private void sendUssdResponse(java.lang.String, java.lang.CharSequence, int, android.os.ResultReceiver)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        android.os.ResultReceiver r1;
        android.telephony.UssdResponse $r2;
        android.os.Bundle $r3;
        java.lang.String r4;
        java.lang.CharSequence r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        r1 := @parameter3: android.os.ResultReceiver;

        $r2 = new android.telephony.UssdResponse;

        specialinvoke $r2.<android.telephony.UssdResponse: void <init>(java.lang.String,java.lang.CharSequence)>(r4, r5);

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        virtualinvoke $r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("USSD_RESPONSE", $r2);

        virtualinvoke r1.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(i0, $r3);

        return;
    }

    private void setIsoCountryProperty(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.telephony.TelephonyManager r1;
        android.content.Context $r2;
        boolean $z0;
        java.lang.String $r3, $r7, r11, r13;
        java.lang.StringBuilder $r4;
        int $i0, $i1, $i3, $i4;
        com.android.internal.telephony.SubscriptionController $r8, $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r11 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        r1 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>($r2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r11);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("setIsoCountryProperty: clear \'gsm.sim.operator.iso-country\'");

        $i3 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        virtualinvoke r1.<android.telephony.TelephonyManager: void setSimCountryIsoForPhone(int,java.lang.String)>($i3, "");

        $r9 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $i4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        virtualinvoke $r9.<com.android.internal.telephony.SubscriptionController: int setCountryIso(java.lang.String,int)>("", $i4);

        goto label5;

     label1:
        $r3 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        r13 = staticinvoke <com.android.internal.telephony.MccTable: java.lang.String countryCodeForMcc(java.lang.String)>($r3);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GsmCdmaPhone", "setIsoCountryProperty: countryCodeForMcc error", $r10);

        r13 = "";

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setIsoCountryProperty: set \'gsm.sim.operator.iso-country\' to iso=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r7);

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        virtualinvoke r1.<android.telephony.TelephonyManager: void setSimCountryIsoForPhone(int,java.lang.String)>($i0, r13);

        $r8 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $i1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        virtualinvoke $r8.<com.android.internal.telephony.SubscriptionController: int setCountryIso(java.lang.String,int)>(r13, $i1);

     label5:
        return;

        catch java.lang.StringIndexOutOfBoundsException from label1 to label2 with label3;
    }

    private void setVmSimImsi(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r9;
        android.content.SharedPreferences$Editor r2;
        android.content.Context $r4;
        android.content.SharedPreferences $r5;
        java.lang.StringBuilder $r6;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r5 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r4);

        r2 = interfaceinvoke $r5.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm_sim_imsi_key");

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r9, r1);

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    private void storeVoiceMailNumber(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r5, $r11, $r15, $r20;
        android.content.SharedPreferences$Editor r2;
        android.content.Context $r3;
        android.content.SharedPreferences $r4;
        java.lang.StringBuilder $r6, $r12, $r17;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r4 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r3);

        r2 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r5 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getSubscriberId()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setVmSimImsi(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeVoiceMailNumber: mPrecisePhoneType=");

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPrecisePhoneType>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vmNumber=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r11);

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm_number_key");

        $i2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r20, r1);

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: void apply()>();

        goto label2;

     label1:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm_number_key_cdma");

        $i1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r15, r1);

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: void apply()>();

     label2:
        return;
    }

    private void switchPhoneType(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.Runnable $r1;
        com.android.internal.telephony.ServiceStateTracker $r2;
        com.android.internal.telephony.GsmCdmaCallTracker $r3;
        com.android.internal.telephony.CommandsInterface $r4;
        int i0, i1;
        java.lang.String r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.Runnable mExitEcmRunnable>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void removeCallbacks(java.lang.Runnable)>($r1);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void initRatSpecific(int)>(i0);

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r2.<com.android.internal.telephony.ServiceStateTracker: void updatePhoneType()>();

        if i0 != 1 goto label1;

        r5 = "GSM";

        goto label2;

     label1:
        r5 = "CDMA";

     label2:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setPhoneName(java.lang.String)>(r5);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void onUpdateIccAvailability()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void unregisterForIccRecordEvents()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void registerForIccRecordEvents()>();

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaCallTracker: void updatePhoneType()>();

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        i1 = interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if i1 == 2 goto label3;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void handleRadioAvailable()>();

        if i1 != 1 goto label3;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void handleRadioOn()>();

     label3:
        if i1 == 1 goto label4;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void handleRadioOffOrNotAvailable()>();

     label4:
        return;
    }

    private void switchVoiceRadioTech(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r8;
        boolean $z0, $z1, $z2;
        java.lang.String $r7, $r12, r16, r17;
        com.android.internal.telephony.uicc.UiccController $r13;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType $r14, $r15;
        com.android.internal.telephony.uicc.UiccCardApplication r18;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        r16 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getPhoneName()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Switching Voice Phone : ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >>> ");

        $z0 = staticinvoke <android.telephony.ServiceState: boolean isGsm(int)>(i0);

        if $z0 == 0 goto label1;

        r17 = "GSM";

        goto label2;

     label1:
        r17 = "CDMA";

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r7);

        $z1 = staticinvoke <android.telephony.ServiceState: boolean isCdma(int)>(i0);

        if $z1 == 0 goto label5;

        $r13 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i1 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r18 = virtualinvoke $r13.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i1, 2);

        if r18 == null goto label3;

        $r14 = virtualinvoke r18.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType getType()>();

        $r15 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType APPTYPE_RUIM>;

        if $r14 != $r15 goto label3;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void switchPhoneType(int)>(2);

        goto label4;

     label3:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void switchPhoneType(int)>(6);

     label4:
        goto label6;

     label5:
        $z2 = staticinvoke <android.telephony.ServiceState: boolean isGsm(int)>(i0);

        if $z2 == 0 goto label7;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void switchPhoneType(int)>(1);

     label6:
        return;

     label7:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleteAndCreatePhone: newVoiceRadioTech=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not CDMA or GSM (error) - aborting!");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>($r12);

        return;
    }

    private void syncClirSetting()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1, $i2;
        android.content.Context $r2;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r6, $r12;
        com.android.internal.telephony.CommandsInterface $r13;
        android.content.SharedPreferences r14;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        r14 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r2);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void migrateClirSettingIfNeeded(android.content.SharedPreferences)>(r14);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clir_sub_key");

        $i1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = interfaceinvoke r14.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r6, -1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("syncClirSetting: clir_sub_key");

        $i2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r12);

        if i0 < 0 goto label1;

        $r13 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void setCLIR(int,android.os.Message)>(i0, null);

     label1:
        return;
    }

    private static int telecomModeToPhoneMode(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        return 0;

     label1:
        return 1;
    }

    private void unregisterForIccRecordEvents()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void unregisterForNetworkSelectionModeAutomatic(android.os.Handler)>(r0);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void unregisterForRecordsEvents(android.os.Handler)>(r0);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void unregisterForRecordsLoaded(android.os.Handler)>(r0);

        return;
    }

    private boolean updateCurrentCarrierInProvider(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.net.Uri r1, $r3;
        java.lang.StringBuilder r2, r19;
        boolean $z0, $z1, $z2;
        java.lang.String $r6, $r12, r17;
        android.content.Context $r7, $r13;
        android.content.ContentResolver $r8;
        int $i0;
        com.android.internal.telephony.uicc.UiccController $r14;
        com.android.internal.telephony.uicc.UiccCardApplication $r15;
        android.database.SQLException $r16;
        android.content.ContentValues r18;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r17 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z0 != 0 goto label2;

        $z2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z2 == 0 goto label1;

        $r14 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        $r15 = virtualinvoke $r14.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i0, 1);

        if $r15 != null goto label1;

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("updateCurrentCarrierInProvider not updated X retVal=true");

        return 1;

     label2:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("CDMAPhone: updateCurrentCarrierInProvider called");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r17);

        if $z1 != 0 goto label6;

     label3:
        $r3 = <android.provider.Telephony$Carriers: android.net.Uri CONTENT_URI>;

        r1 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r3, "current");

        r18 = new android.content.ContentValues;

        specialinvoke r18.<android.content.ContentValues: void <init>()>();

        virtualinvoke r18.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("numeric", r17);

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateCurrentCarrierInProvider from system: numeric=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r6);

        $r7 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r8.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r1, r18);

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update mccmnc=");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r12 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r12);

        $r13 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        staticinvoke <com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String)>($r13, r17);

     label4:
        return 1;

     label5:
        $r16 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GsmCdmaPhone", "Can\'t store current operator", $r16);

     label6:
        return 0;

        catch android.database.SQLException from label3 to label4 with label5;
    }

    private void updateTtyMode(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("updateTtyMode ttyMode=%d", $r1);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logi(java.lang.String)>($r3);

        $i1 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: int telecomModeToPhoneMode(int)>(i0);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setTTYMode(int,android.os.Message)>($i1, null);

        return;
    }

    private void updateUiTtyMode(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("updateUiTtyMode ttyMode=%d", $r1);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logi(java.lang.String)>($r3);

        $i1 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: int telecomModeToPhoneMode(int)>(i0);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setUiTTYMode(int,android.os.Message)>($i1, null);

        return;
    }

    private boolean useImsForCall(com.android.internal.telephony.PhoneInternalInterface$DialArgs)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs r1;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        com.android.internal.telephony.Phone $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;
        android.telephony.ServiceState $r7;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: com.android.internal.telephony.PhoneInternalInterface$DialArgs;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isImsUseEnabled()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $z1 = virtualinvoke $r3.<com.android.internal.telephony.Phone: boolean isVolteEnabled()>();

        if $z1 != 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $z2 = virtualinvoke $r4.<com.android.internal.telephony.Phone: boolean isWifiCallingEnabled()>();

        if $z2 != 0 goto label1;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $z3 = virtualinvoke $r5.<com.android.internal.telephony.Phone: boolean isVideoEnabled()>();

        if $z3 == 0 goto label2;

        $i0 = r1.<com.android.internal.telephony.PhoneInternalInterface$DialArgs: int videoState>;

        $z4 = staticinvoke <android.telecom.VideoProfile: boolean isVideo(int)>($i0);

        if $z4 == 0 goto label2;

     label1:
        $r6 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i1 = virtualinvoke $r7.<android.telephony.ServiceState: int getState()>();

        if $i1 != 0 goto label2;

        z5 = 1;

        goto label3;

     label2:
        z5 = 0;

     label3:
        return z5;
    }

    public void acceptCall(int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        com.android.internal.telephony.Phone r1;
        com.android.internal.telephony.GsmCdmaCallTracker $r2;
        com.android.internal.telephony.Call $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.Call: boolean isRinging()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.android.internal.telephony.Phone: void acceptCall(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCallTracker: void acceptCall()>();

     label2:
        return;
    }

    public void activateCellBroadcastSms(int, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("[GsmCdmaPhone] activateCellBroadcastSms() is obsolete; use SmsManager");

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    public boolean canConference()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.Phone $r1, $r3;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.GsmCdmaCallTracker $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $z2 = virtualinvoke $r3.<com.android.internal.telephony.Phone: boolean canConference()>();

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCallTracker: boolean canConference()>();

        return $z1;

     label2:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("canConference: not possible in CDMA");

        return 0;
    }

    public boolean canDisablePhysicalSubscription()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.CommandsInterface $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: boolean canToggleUiccApplicationsEnablement()>();

        return $z0;
    }

    public boolean canTransfer()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0, $z1;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $z1 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCallTracker: boolean canTransfer()>();

        return $z1;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("canTransfer: not possible in CDMA");

        return 0;
    }

    public void changeCallBarringPassword(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, r2, r3;
        android.os.Message r4;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, r3, r4);

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("changeCallBarringPassword: not possible in CDMA");

     label2:
        return;
    }

    public void clearDisconnected()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCallTracker: void clearDisconnected()>();

        return;
    }

    public void conference()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.Phone $r2, $r4, $r5;
        boolean $z0, $z1;
        com.android.internal.telephony.GsmCdmaCallTracker $r3;
        com.android.internal.telephony.CallStateException $r6;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if $r2 == null goto label5;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $z1 = virtualinvoke $r4.<com.android.internal.telephony.Phone: boolean canConference()>();

        if $z1 == 0 goto label5;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("conference() - delegated to IMS phone");

     label1:
        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        virtualinvoke $r5.<com.android.internal.telephony.Phone: void conference()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.CallStateException: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>($r7);

     label4:
        return;

     label5:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label6;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaCallTracker: void conference()>();

        goto label7;

     label6:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("conference: not possible in CDMA");

     label7:
        return;

        catch com.android.internal.telephony.CallStateException from label1 to label2 with label3;
    }

    public com.android.internal.telephony.Connection dial(java.lang.String, com.android.internal.telephony.PhoneInternalInterface$DialArgs) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs r1, $r41;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, z19, z20, $z21, z22, z23, z24, $z25, z26, $z27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.content.Context $r2, $r35, $r57;
        java.lang.Object $r3;
        android.os.PersistableBundle $r4, $r5;
        java.lang.String $r34, $r64, $r75, $r76, $r77, $r80, $r83, $r85, r87, r88, $r92, r93;
        com.android.internal.telephony.Phone $r36, r90;
        com.android.internal.telephony.Connection $r37, $r42, r100;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder $r38, $r40;
        android.os.Bundle $r39;
        com.android.internal.telephony.CommandsInterface $r43;
        android.telephony.ServiceState $r44, $r46, $r49, $r50, $r52, $r54, $r56;
        com.android.internal.telephony.ServiceStateTracker $r45, $r48, $r53, r105, r106, r107;
        com.android.internal.telephony.CallStateException $r47, $r51, $r55, $r66, $r67, $r84;
        com.android.ims.ImsManager $r58;
        java.lang.StringBuilder $r59, $r68, $r78, $r94;
        com.android.internal.telephony.UUSInfo $r65;
        java.lang.StackTraceElement[] $r86;
        android.telephony.CarrierConfigManager r91;
        java.io.Serializable r96, r97, r98, r99;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r87 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.telephony.PhoneInternalInterface$DialArgs;

        $z4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z4 != 0 goto label02;

        $r65 = r1.<com.android.internal.telephony.PhoneInternalInterface$DialArgs: com.android.internal.telephony.UUSInfo uusInfo>;

        if $r65 != null goto label01;

        goto label02;

     label01:
        $r66 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r66.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("Sending UUS information NOT supported in CDMA!");

        throw $r66;

     label02:
        r88 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String checkForTestEmergencyNumber(java.lang.String)>(r87);

        $z5 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r87, r88);

        z0 = $z5 ^ 1;

        if z0 == 0 goto label03;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialString replaced for possible emergency number: ");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r87);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r88);

        $r64 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logi(java.lang.String)>($r64);

        r87 = r88;

        goto label03;

     label03:
        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(int,java.lang.String)>($i0, r87);

        r90 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.PhoneInternalInterface$DialArgs mDialArgs> = r1;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        r91 = (android.telephony.CarrierConfigManager) $r3;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $r4 = virtualinvoke r91.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i1);

        z18 = virtualinvoke $r4.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("carrier_use_ims_first_for_emergency_bool");

        if r87 == null goto label04;

        z19 = virtualinvoke r87.<java.lang.String: boolean startsWith(java.lang.String)>("*272");

        goto label05;

     label04:
        z19 = 0;

     label05:
        $i2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $r5 = virtualinvoke r91.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i2);

        z2 = virtualinvoke $r5.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("support_wps_over_ims_bool");

        if r90 == null goto label06;

        if z1 == 0 goto label06;

        if z18 == 0 goto label06;

        $r57 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $i13 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        $r58 = staticinvoke <com.android.ims.ImsManager: com.android.ims.ImsManager getInstance(android.content.Context,int)>($r57, $i13);

        $z15 = virtualinvoke $r58.<com.android.ims.ImsManager: boolean isNonTtyOrTtyOnVolteEnabled()>();

        if $z15 == 0 goto label06;

        $z16 = virtualinvoke r90.<com.android.internal.telephony.Phone: boolean isImsAvailable()>();

        if $z16 == 0 goto label06;

        z20 = 1;

        goto label07;

     label06:
        z20 = 0;

     label07:
        $r92 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>(r87);

        r93 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>($r92);

        $z21 = virtualinvoke r93.<java.lang.String: boolean startsWith(java.lang.String)>("*");

        if $z21 != 0 goto label08;

        $z14 = virtualinvoke r93.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z14 == 0 goto label09;

     label08:
        $z6 = virtualinvoke r93.<java.lang.String: boolean endsWith(java.lang.String)>("#");

        if $z6 == 0 goto label09;

        z22 = 1;

        goto label10;

     label09:
        z22 = 0;

     label10:
        z3 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isSuppServiceCodes(java.lang.String,com.android.internal.telephony.Phone)>(r93, r0);

        if z22 == 0 goto label11;

        if z3 != 0 goto label11;

        z23 = 1;

        goto label12;

     label11:
        z23 = 0;

     label12:
        if r90 == null goto label13;

        $z13 = virtualinvoke r90.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        if $z13 == 0 goto label13;

        z24 = 1;

        goto label14;

     label13:
        z24 = 0;

     label14:
        $z25 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean useImsForCall(com.android.internal.telephony.PhoneInternalInterface$DialArgs)>(r1);

        if $z25 == 0 goto label16;

        if z19 == 0 goto label15;

        if z2 == 0 goto label16;

     label15:
        z26 = 1;

        goto label17;

     label16:
        z26 = 0;

     label17:
        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("useImsForCall=");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z26);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isEmergency=");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", useImsForEmergency=");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z20);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", useImsForUt=");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z24);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isUt=");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z22);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isSuppServiceCode=");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isPotentialUssdCode=");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z23);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isWpsCall=");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z19);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", allowWpsOverIms=");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", imsPhone=");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r90);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", imsPhone.isVolteEnabled()=");

        r96 = "N/A";

        if r90 == null goto label18;

        $z12 = virtualinvoke r90.<com.android.internal.telephony.Phone: boolean isVolteEnabled()>();

        r96 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12);

        goto label18;

     label18:
        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r96);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", imsPhone.isVowifiEnabled()=");

        if r90 == null goto label19;

        $z11 = virtualinvoke r90.<com.android.internal.telephony.Phone: boolean isWifiCallingEnabled()>();

        r97 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11);

        goto label20;

     label19:
        r97 = "N/A";

     label20:
        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r97);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", imsPhone.isVideoEnabled()=");

        if r90 == null goto label21;

        $z10 = virtualinvoke r90.<com.android.internal.telephony.Phone: boolean isVideoEnabled()>();

        r98 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10);

        goto label22;

     label21:
        r98 = "N/A";

     label22:
        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r98);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", imsPhone.getServiceState().getState()=");

        if r90 == null goto label23;

        $r56 = virtualinvoke r90.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i12 = virtualinvoke $r56.<android.telephony.ServiceState: int getState()>();

        r99 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        goto label24;

     label23:
        r99 = "N/A";

     label24:
        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r99);

        $r34 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r34);

        $r36 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $i3 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        $r35 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        staticinvoke <com.android.internal.telephony.Phone: void checkWfcWifiOnlyModeBeforeDial(com.android.internal.telephony.Phone,int,android.content.Context)>($r36, $i3, $r35);

        if z26 == 0 goto label25;

        if z22 == 0 goto label27;

        if z23 != 0 goto label27;

     label25:
        if z22 == 0 goto label26;

        if z24 != 0 goto label27;

     label26:
        if z20 == 0 goto label32;

     label27:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Trying IMS PS call");

        r100 = virtualinvoke r90.<com.android.internal.telephony.Phone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.PhoneInternalInterface$DialArgs)>(r87, r1);

     label28:
        return r100;

     label29:
        $r67 := @caughtexception;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMS PS call exception ");

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("useImsForCall =");

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z26);

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", imsPhone =");

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r90);

        $r75 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r75);

        $r76 = "cs_fallback";

        $r77 = virtualinvoke $r67.<com.android.internal.telephony.CallStateException: java.lang.String getMessage()>();

        $z17 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>($r77);

        if $z17 != 0 goto label31;

        if z1 == 0 goto label30;

        goto label31;

     label30:
        $r84 = new com.android.internal.telephony.CallStateException;

        $i14 = virtualinvoke $r67.<com.android.internal.telephony.CallStateException: int getError()>();

        $r85 = virtualinvoke $r67.<com.android.internal.telephony.CallStateException: java.lang.String getMessage()>();

        specialinvoke $r84.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>($i14, $r85);

        $r86 = virtualinvoke $r67.<com.android.internal.telephony.CallStateException: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r84.<com.android.internal.telephony.CallStateException: void setStackTrace(java.lang.StackTraceElement[])>($r86);

        throw $r84;

     label31:
        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMS call failed with Exception: ");

        $r80 = virtualinvoke $r67.<com.android.internal.telephony.CallStateException: java.lang.String getMessage()>();

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Falling back to CS.");

        $r83 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logi(java.lang.String)>($r83);

        goto label32;

     label32:
        r105 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        if r105 == null goto label34;

        $r52 = r105.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i10 = virtualinvoke $r52.<android.telephony.ServiceState: int getState()>();

        if $i10 != 1 goto label34;

        $r53 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r54 = $r53.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i11 = virtualinvoke $r54.<android.telephony.ServiceState: int getDataRegistrationState()>();

        if $i11 == 0 goto label34;

        if z1 == 0 goto label33;

        goto label34;

     label33:
        $r55 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r55.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot dial in current state");

        throw $r55;

     label34:
        r106 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        if r106 == null goto label37;

        $r50 = r106.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i8 = virtualinvoke $r50.<android.telephony.ServiceState: int getState()>();

        if $i8 != 3 goto label37;

        $i9 = r1.<com.android.internal.telephony.PhoneInternalInterface$DialArgs: int videoState>;

        $z9 = staticinvoke <android.telecom.VideoProfile: boolean isVideo(int)>($i9);

        if $z9 != 0 goto label37;

        if z1 != 0 goto label37;

        if z22 == 0 goto label35;

        if z24 != 0 goto label37;

     label35:
        if z23 == 0 goto label36;

        goto label37;

     label36:
        $r51 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r51.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(2, "cannot dial voice call in airplane mode");

        throw $r51;

     label37:
        r107 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        if r107 == null goto label40;

        $r44 = r107.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i4 = virtualinvoke $r44.<android.telephony.ServiceState: int getState()>();

        if $i4 != 1 goto label40;

        $r45 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r46 = $r45.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i5 = virtualinvoke $r46.<android.telephony.ServiceState: int getDataRegistrationState()>();

        if $i5 != 0 goto label38;

        $r48 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r49 = $r48.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i7 = virtualinvoke $r49.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        $z8 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>($i7);

        if $z8 != 0 goto label40;

     label38:
        $i6 = r1.<com.android.internal.telephony.PhoneInternalInterface$DialArgs: int videoState>;

        $z7 = staticinvoke <android.telecom.VideoProfile: boolean isVideo(int)>($i6);

        if $z7 != 0 goto label40;

        if z1 != 0 goto label40;

        if z23 == 0 goto label39;

        goto label40;

     label39:
        $r47 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r47.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(1, "cannot dial voice call in out of service");

        throw $r47;

     label40:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Trying (non-IMS) CS call");

        if z0 == 0 goto label41;

        if z1 == 0 goto label41;

        r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mIsTestingEmergencyCallbackMode> = 1;

        $r43 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r43.<com.android.internal.telephony.CommandsInterface: void testingEmergencyCall()>();

     label41:
        $z27 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z27 == 0 goto label42;

        $r38 = new com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder;

        specialinvoke $r38.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: void <init>()>();

        $r39 = r1.<com.android.internal.telephony.PhoneInternalInterface$DialArgs: android.os.Bundle intentExtras>;

        $r40 = virtualinvoke $r38.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder setIntentExtras(android.os.Bundle)>($r39);

        $r41 = virtualinvoke $r40.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: com.android.internal.telephony.PhoneInternalInterface$DialArgs build()>();

        $r42 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.PhoneInternalInterface$DialArgs)>(r87, $r41);

        return $r42;

     label42:
        $r37 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.PhoneInternalInterface$DialArgs)>(r87, r1);

        return $r37;

        catch com.android.internal.telephony.CallStateException from label27 to label28 with label29;
    }

    protected com.android.internal.telephony.Connection dialInternal(java.lang.String, com.android.internal.telephony.PhoneInternalInterface$DialArgs) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs r2;
        com.android.internal.telephony.Connection $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.PhoneInternalInterface$DialArgs;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.PhoneInternalInterface$DialArgs,android.os.ResultReceiver)>(r1, r2, null);

        return $r3;
    }

    protected com.android.internal.telephony.Connection dialInternal(java.lang.String, com.android.internal.telephony.PhoneInternalInterface$DialArgs, android.os.ResultReceiver) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs r1;
        com.android.internal.telephony.gsm.GsmMmiCode r2;
        boolean $z0, $z1, $z2;
        android.os.Bundle $r3, $r20, $r23;
        com.android.internal.telephony.GsmCdmaCallTracker $r4, $r18, $r25;
        com.android.internal.telephony.Connection $r5, $r22, $r26;
        java.lang.String $r6, $r14, $r19, r27, r29;
        java.util.concurrent.atomic.AtomicReference $r7;
        java.lang.Object $r8;
        com.android.internal.telephony.uicc.UiccCardApplication $r9;
        java.lang.StringBuilder $r10;
        java.util.ArrayList $r15;
        android.os.AsyncResult $r16;
        com.android.internal.telephony.RegistrantList $r17;
        int $i0;
        com.android.internal.telephony.UUSInfo $r21, $r24;
        android.os.ResultReceiver r28;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r27 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.telephony.PhoneInternalInterface$DialArgs;

        r28 := @parameter2: android.os.ResultReceiver;

        r29 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>(r27);

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean handleInCallMmiCommands(java.lang.String)>(r29);

        if $z1 == 0 goto label1;

        return null;

     label1:
        $r6 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r29);

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r8 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r9 = (com.android.internal.telephony.uicc.UiccCardApplication) $r8;

        r2 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newFromDialString(java.lang.String,com.android.internal.telephony.GsmCdmaPhone,com.android.internal.telephony.uicc.UiccCardApplication,android.os.ResultReceiver)>($r6, r0, $r9, r28);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialInternal: dialing w/ mmi \'");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'...");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r14);

        if r2 != null goto label2;

        $r25 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r24 = r1.<com.android.internal.telephony.PhoneInternalInterface$DialArgs: com.android.internal.telephony.UUSInfo uusInfo>;

        $r23 = r1.<com.android.internal.telephony.PhoneInternalInterface$DialArgs: android.os.Bundle intentExtras>;

        $r26 = virtualinvoke $r25.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection dialGsm(java.lang.String,com.android.internal.telephony.UUSInfo,android.os.Bundle)>(r29, $r24, $r23);

        return $r26;

     label2:
        $z2 = virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isTemporaryModeCLIR()>();

        if $z2 == 0 goto label3;

        $r18 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r19 = r2.<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.String mDialingNumber>;

        $i0 = virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: int getCLIRMode()>();

        $r21 = r1.<com.android.internal.telephony.PhoneInternalInterface$DialArgs: com.android.internal.telephony.UUSInfo uusInfo>;

        $r20 = r1.<com.android.internal.telephony.PhoneInternalInterface$DialArgs: android.os.Bundle intentExtras>;

        $r22 = virtualinvoke $r18.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection dialGsm(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Bundle)>($r19, $i0, $r21, $r20);

        return $r22;

     label3:
        $r15 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r17 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mMmiRegistrants>;

        $r16 = new android.os.AsyncResult;

        specialinvoke $r16.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r17.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r16);

        virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: void processCode()>();

        return null;

     label4:
        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r3 = r1.<com.android.internal.telephony.PhoneInternalInterface$DialArgs: android.os.Bundle intentExtras>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,android.os.Bundle)>(r29, $r3);

        return $r5;
    }

    public void disableLocationUpdates()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.ServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.ServiceStateTracker: void disableLocationUpdates()>();

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.SubscriptionController $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        specialinvoke r0.<com.android.internal.telephony.Phone: void dispose()>();

        $r1 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        virtualinvoke $r1.<com.android.internal.telephony.SubscriptionController: void unregisterForUiccAppsEnabled(android.os.Handler)>(r0);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.lang.StringBuilder $r3, $r7, $r12, $r17, $r22, $r27, $r33, $r39, $r45, $r50, $r54, $r59, $r63, $r69, $r75, $r80, $r84, $r89, $r93, $r97, $r102;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6, $r11, $r16, $r21, $r26, $r29, $r30, $r32, $r35, $r36, $r38, $r41, $r42, $r44, $r49, $r53, $r58, $r62, $r65, $r66, $r68, $r71, $r72, $r74, $r77, $r79, $r83, $r86, $r88, $r92, $r96, $r99, $r101, $r105;
        com.android.internal.telephony.GsmCdmaCallTracker $r9;
        com.android.internal.telephony.ServiceStateTracker $r14;
        java.util.ArrayList $r19;
        com.android.internal.telephony.IccPhoneBookInterfaceManager $r24;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r47;
        android.os.PowerManager$WakeLock $r56;
        boolean $z0, $z1, $z2, $z3;
        java.io.FileDescriptor r106;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r106 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("GsmCdmaPhone extends:");

        specialinvoke r0.<com.android.internal.telephony.Phone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r106, r1, r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPrecisePhoneType=");

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPrecisePhoneType>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCT=");

        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSST=");

        $r14 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingMMIs=");

        $r19 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIccPhoneBookIntManager=");

        $r24 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager mIccPhoneBookIntManager>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mImei=");

        $r29 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mImei>;

        $r30 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: java.lang.String pii(java.lang.String)>($r29);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mImeiSv=");

        $r35 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mImeiSv>;

        $r36 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: java.lang.String pii(java.lang.String)>($r35);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r38);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVmNumber=");

        $r41 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mVmNumber>;

        $r42 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: java.lang.String pii(java.lang.String)>($r41);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCdmaSSM=");

        $r47 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r49);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCdmaSubscriptionSource=");

        $i1 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mCdmaSubscriptionSource>;

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r53);

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLock=");

        $r56 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r58);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isInEcm()=");

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isInEcm()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r62);

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mEsn=");

        $r65 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mEsn>;

        $r66 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: java.lang.String pii(java.lang.String)>($r65);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r68);

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMeid=");

        $r71 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mMeid>;

        $r72 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: java.lang.String pii(java.lang.String)>($r71);

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r74);

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCarrierOtaSpNumSchema=");

        $r77 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mCarrierOtaSpNumSchema>;

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r79);

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 != 0 goto label1;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getCdmaEriIconIndex()=");

        $i2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getCdmaEriIconIndex()>();

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r92);

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getCdmaEriIconMode()=");

        $i3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getCdmaEriIconMode()>();

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r96 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r96);

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getCdmaEriText()=");

        $r99 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getCdmaEriText()>();

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99);

        $r101 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r101);

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isMinInfoReady()=");

        $z3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isMinInfoReady()>();

        virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r105 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r105);

     label1:
        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isCspPlmnEnabled()=");

        $z2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isCspPlmnEnabled()>();

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r83 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r83);

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mManualNetworkSelectionPlmn=");

        $r86 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mManualNetworkSelectionPlmn>;

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r88 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r88);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

        return;
    }

    public void enableEnhancedVoicePrivacy(boolean, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, $z1;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("enableEnhancedVoicePrivacy: not expected on GSM");

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void setPreferredVoicePrivacy(boolean,android.os.Message)>(z0, r1);

     label2:
        return;
    }

    public void enableLocationUpdates()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.ServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.ServiceStateTracker: void enableLocationUpdates()>();

        return;
    }

    public void enableUiccApplications(boolean, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.uicc.UiccSlot r2;
        int $i0;
        com.android.internal.telephony.uicc.UiccController $r3;
        java.lang.IllegalStateException $r4;
        com.android.internal.telephony.uicc.IccCardStatus$CardState $r6, $r7;
        com.android.internal.telephony.CommandsInterface $r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r2 = virtualinvoke $r3.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccSlot getUiccSlotForPhone(int)>($i0);

        if r2 == null goto label2;

        $r6 = virtualinvoke r2.<com.android.internal.telephony.uicc.UiccSlot: com.android.internal.telephony.uicc.IccCardStatus$CardState getCardState()>();

        $r7 = <com.android.internal.telephony.uicc.IccCardStatus$CardState: com.android.internal.telephony.uicc.IccCardStatus$CardState CARDSTATE_PRESENT>;

        if $r6 == $r7 goto label1;

        goto label2;

     label1:
        $r8 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void enableUiccApplications(boolean,android.os.Message)>(z0, r1);

        return;

     label2:
        if r1 == null goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No SIM card is present");

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r1, null, $r4);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

     label3:
        return;
    }

    public void exitEmergencyCallbackMode()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.StringBuilder $r1;
        com.android.internal.telephony.Phone $r3, $r8, $r12, $r13;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r7;
        android.os.PowerManager$WakeLock $r9, $r11;
        com.android.internal.telephony.CommandsInterface $r10;
        android.os.Message r15;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exitEmergencyCallbackMode: mImsPhone=");

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isPhoneTypeGsm=");

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r7);

        $r8 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if $r8 == null goto label1;

        $r12 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $z3 = virtualinvoke $r12.<com.android.internal.telephony.Phone: boolean isInImsEcm()>();

        if $z3 == 0 goto label1;

        $r13 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        virtualinvoke $r13.<com.android.internal.telephony.Phone: void exitEmergencyCallbackMode()>();

        goto label4;

     label1:
        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.PowerManager$WakeLock mWakeLock>;

        $z1 = virtualinvoke $r9.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z1 == 0 goto label2;

        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r11.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        r15 = null;

        $z2 = r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mIsTestingEmergencyCallbackMode>;

        if $z2 == 0 goto label3;

        r15 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int)>(26);

     label3:
        $r10 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r10.<com.android.internal.telephony.CommandsInterface: void exitEmergencyCallbackMode(android.os.Message)>(r15);

     label4:
        return;
    }

    public void explicitCallTransfer()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCallTracker: void explicitCallTransfer()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("explicitCallTransfer: not possible in CDMA");

     label2:
        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.PowerManager$WakeLock r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("GsmCdmaPhone finalized");

        r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.PowerManager$WakeLock mWakeLock>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaPhone", "UNEXPECTED; mWakeLock is held when finalizing.");

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void release()>();

     label1:
        return;
    }

    public void getAvailableNetworks(android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0, $z1;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message r2, r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r2 := @parameter0: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("getAvailableNetworks: not possible in CDMA");

        goto label3;

     label2:
        r3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int,java.lang.Object)>(51, r2);

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void getAvailableNetworks(android.os.Message)>(r3);

     label3:
        return;
    }

    public volatile com.android.internal.telephony.Call getBackgroundCall()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.GsmCdmaCall $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCall getBackgroundCall()>();

        return $r1;
    }

    public com.android.internal.telephony.GsmCdmaCall getBackgroundCall()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;
        com.android.internal.telephony.GsmCdmaCall $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r2 = $r1.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        return $r2;
    }

    public void getCallBarring(java.lang.String, java.lang.String, android.os.Message, int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, r2;
        android.os.Message r3;
        int i0;
        com.android.internal.telephony.Phone r4;
        boolean $z0, $z1;
        com.android.internal.telephony.CommandsInterface $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        i0 := @parameter3: int;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label2;

        r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r4 == null goto label1;

        $z1 = virtualinvoke r4.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        if $z1 == 0 goto label1;

        virtualinvoke r4.<com.android.internal.telephony.Phone: void getCallBarring(java.lang.String,java.lang.String,android.os.Message,int)>(r1, r2, r3, i0);

        return;

     label1:
        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>(r1, r2, i0, r3);

        goto label3;

     label2:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("getCallBarringOption: not possible in CDMA");

     label3:
        return;
    }

    public void getCallForwardingOption(int, int, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, i1, $i2;
        com.android.internal.telephony.Phone r1;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.telephony.CommandsInterface $r2;
        android.telephony.ServiceState $r3;
        com.android.internal.telephony.CommandException $r4;
        android.os.Message r6;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label2;

        $z3 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isImsUtEnabledOverCdma()>();

        if $z3 == 0 goto label1;

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("getCallForwardingOption: not possible in CDMA without IMS");

        $r4 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r6, null, $r4);

        virtualinvoke r6.<android.os.Message: void sendToTarget()>();

        goto label6;

     label2:
        r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r1 == null goto label4;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i2 = virtualinvoke $r3.<android.telephony.ServiceState: int getState()>();

        if $i2 == 0 goto label3;

        $z2 = virtualinvoke r1.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        if $z2 == 0 goto label4;

     label3:
        virtualinvoke r1.<com.android.internal.telephony.Phone: void getCallForwardingOption(int,int,android.os.Message)>(i0, i1, r6);

        return;

     label4:
        $z1 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isValidCommandInterfaceCFReason(int)>(i0);

        if $z1 == 0 goto label6;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("requesting call forwarding query.");

        if i0 != 0 goto label5;

        r6 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int,java.lang.Object)>(13, r6);

        goto label5;

     label5:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>(i0, i1, null, r6);

     label6:
        return;
    }

    public void getCallForwardingOption(int, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void getCallForwardingOption(int,int,android.os.Message)>(i0, 1, r1);

        return;
    }

    public com.android.internal.telephony.CallTracker getCallTracker()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        return $r1;
    }

    public void getCallWaiting(android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone r2;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.CommandsInterface $r3, $r5;
        android.telephony.ServiceState $r4;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label2;

        $z2 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isImsUtEnabledOverCdma()>();

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void queryCallWaiting(int,android.os.Message)>(1, r1);

        goto label5;

     label2:
        r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r2 == null goto label4;

        $r4 = virtualinvoke r2.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i0 = virtualinvoke $r4.<android.telephony.ServiceState: int getState()>();

        if $i0 == 0 goto label3;

        $z1 = virtualinvoke r2.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        if $z1 == 0 goto label4;

     label3:
        virtualinvoke r2.<com.android.internal.telephony.Phone: void getCallWaiting(android.os.Message)>(r1);

        return;

     label4:
        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void queryCallWaiting(int,android.os.Message)>(0, r1);

     label5:
        return;
    }

    public int getCarrierId()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.CarrierResolver $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierResolver mCarrierResolver>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.CarrierResolver: int getCarrierId()>();

        return $i0;
    }

    public int getCarrierIdListVersion()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.CarrierResolver $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierResolver mCarrierResolver>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.CarrierResolver: int getCarrierListVersion()>();

        return $i0;
    }

    public android.telephony.ImsiEncryptionInfo getCarrierInfoForImsiEncryption(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1;
        java.lang.String r1;
        android.content.Context $r2, $r4;
        android.telephony.TelephonyManager $r3;
        android.telephony.ImsiEncryptionInfo $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r3 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>($r2);

        $i1 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r1 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumericForPhone(int)>($i1);

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r5 = staticinvoke <com.android.internal.telephony.CarrierInfoManager: android.telephony.ImsiEncryptionInfo getCarrierInfoForImsiEncryption(int,android.content.Context,java.lang.String)>(i0, $r4, r1);

        return $r5;
    }

    public java.lang.String getCarrierName()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.CarrierResolver $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierResolver mCarrierResolver>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.CarrierResolver: java.lang.String getCarrierName()>();

        return $r2;
    }

    public int getCdmaEriIconIndex()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0;
        android.telephony.ServiceState $r1;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<com.android.internal.telephony.Phone: int getCdmaEriIconIndex()>();

        return $i1;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.ServiceState getServiceState()>();

        $i0 = virtualinvoke $r1.<android.telephony.ServiceState: int getCdmaEriIconIndex()>();

        return $i0;
    }

    public int getCdmaEriIconMode()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0;
        android.telephony.ServiceState $r1;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<com.android.internal.telephony.Phone: int getCdmaEriIconMode()>();

        return $i1;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.ServiceState getServiceState()>();

        $i0 = virtualinvoke $r1.<android.telephony.ServiceState: int getCdmaEriIconMode()>();

        return $i0;
    }

    public java.lang.String getCdmaEriText()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, i1;
        boolean $z0;
        android.telephony.ServiceState $r1, $r2;
        com.android.internal.telephony.ServiceStateTracker $r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r5 = specialinvoke r0.<com.android.internal.telephony.Phone: java.lang.String getCdmaEriText()>();

        return $r5;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.ServiceState getServiceState()>();

        i0 = virtualinvoke $r1.<android.telephony.ServiceState: int getCdmaRoamingIndicator()>();

        $r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.ServiceState getServiceState()>();

        i1 = virtualinvoke $r2.<android.telephony.ServiceState: int getCdmaDefaultRoamingIndicator()>();

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getCdmaEriText(int,int)>(i0, i1);

        return $r4;
    }

    public java.lang.String getCdmaMin()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.ServiceStateTracker $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getCdmaMin()>();

        return $r2;
    }

    public java.lang.String getCdmaPrlVersion()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.ServiceStateTracker $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getPrlVersion()>();

        return $r2;
    }

    public void getCellBroadcastSmsConfig(android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("[GsmCdmaPhone] getCellBroadcastSmsConfig() is obsolete; use SmsManager");

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void getCellIdentity(android.os.WorkSource, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.WorkSource r1;
        android.os.Message r2;
        com.android.internal.telephony.ServiceStateTracker $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.WorkSource;

        r2 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r3.<com.android.internal.telephony.ServiceStateTracker: void requestCellIdentity(android.os.WorkSource,android.os.Message)>(r1, r2);

        return;
    }

    public java.lang.String getCountryIso()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        android.telephony.SubscriptionInfo r1;
        android.content.Context $r2;
        android.telephony.SubscriptionManager $r3;
        java.lang.String $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r3 = staticinvoke <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager 'from'(android.content.Context)>($r2);

        r1 = virtualinvoke $r3.<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>(i0);

        if r1 == null goto label2;

        $r4 = virtualinvoke r1.<android.telephony.SubscriptionInfo: java.lang.String getCountryIso()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<android.telephony.SubscriptionInfo: java.lang.String getCountryIso()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase()>();

        return $r6;

     label2:
        return null;
    }

    public int getCsCallRadioTech()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.ServiceStateTracker r1, $r3;
        android.telephony.ServiceState $r2, $r4;
        int $i0, $i1, i2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i2 = 0;

        r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        if r1 == null goto label1;

        $r2 = r1.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i0 = virtualinvoke $r2.<android.telephony.ServiceState: int getState()>();

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r4 = $r3.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i1 = virtualinvoke $r4.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        i2 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getCsCallRadioTech(int,int)>($i0, $i1);

     label1:
        return i2;
    }

    public com.android.internal.telephony.PhoneInternalInterface$DataActivityState getDataActivityState()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.PhoneInternalInterface$DataActivityState r1, r7;
        int i0, $i1, $i2;
        com.android.internal.telephony.ServiceStateTracker $r2;
        com.android.internal.telephony.dataconnection.DcTracker $r3, $r5;
        int[] $r4;
        com.android.internal.telephony.DctConstants$Activity $r6;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 = <com.android.internal.telephony.PhoneInternalInterface$DataActivityState: com.android.internal.telephony.PhoneInternalInterface$DataActivityState NONE>;

        r7 = r1;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $i1 = virtualinvoke $r2.<com.android.internal.telephony.ServiceStateTracker: int getCurrentDataConnectionState()>();

        if $i1 != 0 goto label5;

        r7 = r1;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(1);

        if $r3 == null goto label5;

        $r4 = <com.android.internal.telephony.GsmCdmaPhone$3: int[] $SwitchMap$com$android$internal$telephony$DctConstants$Activity>;

        $r5 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(1);

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.dataconnection.DcTracker: com.android.internal.telephony.DctConstants$Activity getActivity()>();

        $i2 = virtualinvoke $r6.<com.android.internal.telephony.DctConstants$Activity: int ordinal()>();

        i0 = $r4[$i2];

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        r7 = <com.android.internal.telephony.PhoneInternalInterface$DataActivityState: com.android.internal.telephony.PhoneInternalInterface$DataActivityState NONE>;

        goto label5;

     label1:
        r7 = <com.android.internal.telephony.PhoneInternalInterface$DataActivityState: com.android.internal.telephony.PhoneInternalInterface$DataActivityState DORMANT>;

        goto label5;

     label2:
        r7 = <com.android.internal.telephony.PhoneInternalInterface$DataActivityState: com.android.internal.telephony.PhoneInternalInterface$DataActivityState DATAINANDOUT>;

        goto label5;

     label3:
        r7 = <com.android.internal.telephony.PhoneInternalInterface$DataActivityState: com.android.internal.telephony.PhoneInternalInterface$DataActivityState DATAOUT>;

        goto label5;

     label4:
        r7 = <com.android.internal.telephony.PhoneInternalInterface$DataActivityState: com.android.internal.telephony.PhoneInternalInterface$DataActivityState DATAIN>;

     label5:
        return r7;
    }

    public com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r15;
        int $i0, $i1, $i2, i3, i4;
        int[] $r6;
        com.android.internal.telephony.dataconnection.DcTracker $r7, $r12;
        com.android.internal.telephony.DctConstants$State $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.internal.telephony.PhoneConstants$DataState r9;
        com.android.internal.telephony.ServiceStateTracker r10;
        com.android.internal.telephony.dataconnection.TransportManager $r11;
        java.lang.StringBuilder $r13;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        r9 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        r10 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        if r10 != null goto label1;

        r9 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label7;

     label1:
        $i0 = virtualinvoke r10.<com.android.internal.telephony.ServiceStateTracker: int getCurrentDataConnectionState()>();

        if $i0 == 0 goto label3;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z3 == 0 goto label3;

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("emergency");

        if $z4 != 0 goto label3;

     label2:
        r9 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label7;

     label3:
        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        $i2 = staticinvoke <android.telephony.data.ApnSetting: int getApnTypesBitmaskFromString(java.lang.String)>(r1);

        i3 = virtualinvoke $r11.<com.android.internal.telephony.dataconnection.TransportManager: int getCurrentTransport(int)>($i2);

        $r12 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(i3);

        if $r12 == null goto label7;

        $r6 = <com.android.internal.telephony.GsmCdmaPhone$3: int[] $SwitchMap$com$android$internal$telephony$DctConstants$State>;

        $r7 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(i3);

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.dataconnection.DcTracker: com.android.internal.telephony.DctConstants$State getState(java.lang.String)>(r1);

        $i1 = virtualinvoke $r8.<com.android.internal.telephony.DctConstants$State: int ordinal()>();

        i4 = $r6[$i1];

        if i4 == 1 goto label5;

        if i4 == 2 goto label5;

        if i4 == 3 goto label4;

        r9 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label7;

     label4:
        r9 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState CONNECTING>;

        goto label7;

     label5:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isDataSuspended()>();

        if $z0 == 0 goto label6;

        r9 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState SUSPENDED>;

        goto label7;

     label6:
        r9 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState CONNECTED>;

     label7:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getDataConnectionState apnType=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ret=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r15);

        return r9;
    }

    public boolean getDataRoamingEnabled()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.dataconnection.DcTracker $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(1);

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(1);

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.dataconnection.DcTracker: boolean getDataRoamingEnabled()>();

        return $z0;

     label1:
        return 0;
    }

    public java.lang.String getDeviceId()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r6, $r7, r8;
        boolean $z0, $z1, $z2;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.telephony.CarrierConfigManager $r4;
        int $i0;
        android.os.PersistableBundle $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mImei>;

        return $r7;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r4 = (android.telephony.CarrierConfigManager) $r3;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $r5 = virtualinvoke $r4.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        $z1 = virtualinvoke $r5.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("force_imei_bool");

        if $z1 == 0 goto label2;

        $r6 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mImei>;

        return $r6;

     label2:
        r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getMeid()>();

        if r1 == null goto label3;

        r8 = r1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("^0*$");

        if $z2 == 0 goto label4;

     label3:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("getDeviceId(): MEID is not initialized use ESN");

        r8 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getEsn()>();

     label4:
        return r8;
    }

    public com.android.internal.telephony.DeviceStateMonitor getDeviceStateMonitor()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.DeviceStateMonitor $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.DeviceStateMonitor mDeviceStateMonitor>;

        return $r1;
    }

    public java.lang.String getDeviceSvn()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0, $z1;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("getDeviceSvn(): return 0");

        return "0";

     label2:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mImeiSv>;

        return $r1;
    }

    public com.android.internal.telephony.DisplayInfoController getDisplayInfoController()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.DisplayInfoController $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.DisplayInfoController mDisplayInfoController>;

        return $r1;
    }

    public java.lang.String getDtmfToneDelayKey()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        r1 = "gsm_dtmf_tone_delay_int";

        goto label2;

     label1:
        r1 = "cdma_dtmf_tone_delay_int";

     label2:
        return r1;
    }

    public int getEmergencyNumberDbVersion()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.emergency.EmergencyNumberTracker $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.emergency.EmergencyNumberTracker getEmergencyNumberTracker()>();

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.emergency.EmergencyNumberTracker: int getEmergencyNumberDbVersion()>();

        return $i0;
    }

    public com.android.internal.telephony.emergency.EmergencyNumberTracker getEmergencyNumberTracker()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.emergency.EmergencyNumberTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.emergency.EmergencyNumberTracker mEmergencyNumberTracker>;

        return $r1;
    }

    public void getEnhancedVoicePrivacy(android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Message r1;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("getEnhancedVoicePrivacy: not expected on GSM");

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getPreferredVoicePrivacy(android.os.Message)>(r1);

     label2:
        return;
    }

    public java.lang.String getEsn()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("[GsmCdmaPhone] getEsn() is a CDMA method");

        return "0";

     label1:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mEsn>;

        return $r1;
    }

    public volatile com.android.internal.telephony.Call getForegroundCall()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.GsmCdmaCall $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCall getForegroundCall()>();

        return $r1;
    }

    public com.android.internal.telephony.GsmCdmaCall getForegroundCall()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;
        com.android.internal.telephony.GsmCdmaCall $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r2 = $r1.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        return $r2;
    }

    public java.lang.String getFullIccSerialNumber()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1, r5;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        boolean $z0;
        int $i0;
        com.android.internal.telephony.uicc.UiccController $r4;
        java.lang.String r6;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        r5 = r1;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label1;

        r5 = r1;

        if r1 != null goto label1;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r5 = virtualinvoke $r4.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.IccRecords getIccRecords(int,int)>($i0, 1);

     label1:
        if r5 == null goto label2;

        r6 = virtualinvoke r5.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getFullIccId()>();

        goto label3;

     label2:
        r6 = null;

     label3:
        return r6;
    }

    public java.lang.String getGroupIdLevel1()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, $z1;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String r4, r6;
        com.android.internal.telephony.uicc.SIMRecords r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        r4 = null;

        if z0 == 0 goto label2;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getGid1()>();

     label1:
        return r4;

     label2:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("GID1 is not available in CDMA");

        return null;

     label3:
        r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if r5 == null goto label4;

        r6 = virtualinvoke r5.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getGid1()>();

        goto label5;

     label4:
        r6 = "";

     label5:
        return r6;
    }

    public java.lang.String getGroupIdLevel2()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, $z1;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String r4, r6;
        com.android.internal.telephony.uicc.SIMRecords r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        r4 = null;

        if z0 == 0 goto label2;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getGid2()>();

     label1:
        return r4;

     label2:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("GID2 is not available in CDMA");

        return null;

     label3:
        r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if r5 == null goto label4;

        r6 = virtualinvoke r5.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getGid2()>();

        goto label5;

     label4:
        r6 = "";

     label5:
        return r6;
    }

    public com.android.internal.telephony.IccCard getIccCard()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int $i0;
        com.android.internal.telephony.uicc.UiccController $r1;
        com.android.internal.telephony.IccCard $r2, $r4;
        com.android.internal.telephony.IccCardConstants$State $r3, $r5;
        boolean $z0;
        com.android.internal.telephony.uicc.UiccProfile r6;
        com.android.internal.telephony.uicc.UiccSlot r7;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r6 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccProfile getUiccProfile()>();

        if r6 == null goto label1;

        return r6;

     label1:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r7 = virtualinvoke $r1.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccSlot getUiccSlotForPhone(int)>($i0);

        if r7 == null goto label3;

        $z0 = virtualinvoke r7.<com.android.internal.telephony.uicc.UiccSlot: boolean isStateUnknown()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r4 = new com.android.internal.telephony.IccCard;

        $r5 = <com.android.internal.telephony.IccCardConstants$State: com.android.internal.telephony.IccCardConstants$State ABSENT>;

        specialinvoke $r4.<com.android.internal.telephony.IccCard: void <init>(com.android.internal.telephony.IccCardConstants$State)>($r5);

        return $r4;

     label3:
        $r2 = new com.android.internal.telephony.IccCard;

        $r3 = <com.android.internal.telephony.IccCardConstants$State: com.android.internal.telephony.IccCardConstants$State UNKNOWN>;

        specialinvoke $r2.<com.android.internal.telephony.IccCard: void <init>(com.android.internal.telephony.IccCardConstants$State)>($r3);

        return $r2;
    }

    public com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.IccPhoneBookInterfaceManager $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager mIccPhoneBookIntManager>;

        return $r1;
    }

    public boolean getIccRecordsLoaded()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.uicc.UiccProfile r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccProfile getUiccProfile()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccProfile: boolean getIccRecordsLoaded()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public java.lang.String getIccSerialNumber()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1, r5;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        boolean $z0;
        int $i0;
        com.android.internal.telephony.uicc.UiccController $r4;
        java.lang.String r6;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        r5 = r1;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label1;

        r5 = r1;

        if r1 != null goto label1;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r5 = virtualinvoke $r4.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.IccRecords getIccRecords(int,int)>($i0, 1);

     label1:
        if r5 == null goto label2;

        r6 = virtualinvoke r5.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getIccId()>();

        goto label3;

     label2:
        r6 = null;

     label3:
        return r6;
    }

    public com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.IccSmsInterfaceManager $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.IccSmsInterfaceManager mIccSmsInterfaceManager>;

        return $r1;
    }

    public java.lang.String getImei()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mImei>;

        return $r1;
    }

    public com.android.internal.telephony.uicc.IsimRecords getIsimRecords()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.uicc.IsimUiccRecords $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords>;

        return $r1;
    }

    public java.lang.String getLine1AlphaTag()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        r4 = null;

        if z0 == 0 goto label2;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getMsisdnAlphaTag()>();

     label1:
        return r4;

     label2:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("getLine1AlphaTag: not possible in CDMA");

        return null;
    }

    public java.lang.String getLine1Number()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, $z1;
        com.android.internal.telephony.uicc.SIMRecords r1;
        android.content.Context $r2;
        java.lang.Object $r3, $r9;
        android.telephony.CarrierConfigManager $r4;
        int $i0;
        android.os.PersistableBundle $r5;
        com.android.internal.telephony.ServiceStateTracker $r6;
        java.lang.String $r7, r10, r12;
        java.util.concurrent.atomic.AtomicReference $r8;
        com.android.internal.telephony.uicc.IccRecords r11;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        r10 = null;

        if z0 == 0 goto label2;

        $r8 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r11 = (com.android.internal.telephony.uicc.IccRecords) $r9;

        if r11 == null goto label1;

        r10 = virtualinvoke r11.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getMsisdnNumber()>();

     label1:
        return r10;

     label2:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r4 = (android.telephony.CarrierConfigManager) $r3;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $r5 = virtualinvoke $r4.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        $z1 = virtualinvoke $r5.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("use_usim_bool");

        if $z1 == 0 goto label4;

        r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        r12 = null;

        if r1 == null goto label3;

        r12 = virtualinvoke r1.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getMsisdnNumber()>();

     label3:
        return r12;

     label4:
        $r6 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getMdnNumber()>();

        return $r7;
    }

    public int getLteOnCdmaMode()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1;
        com.android.internal.telephony.uicc.UiccCardApplication r1;
        com.android.internal.telephony.uicc.UiccController $r2;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType $r3, $r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 = specialinvoke r0.<com.android.internal.telephony.Phone: int getLteOnCdmaMode()>();

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i1 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r1 = virtualinvoke $r2.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i1, 2);

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType getType()>();

        $r4 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType APPTYPE_RUIM>;

        if $r3 != $r4 goto label1;

        if i0 != 1 goto label1;

        return 0;

     label1:
        return i0;
    }

    public int getMNOCarrierId()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.CarrierResolver $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierResolver mCarrierResolver>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.CarrierResolver: int getMnoCarrierId()>();

        return $i0;
    }

    public java.lang.String getManualNetworkSelectionPlmn()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mManualNetworkSelectionPlmn>;

        r2 = r1;

        if r1 != null goto label1;

        r2 = "";

     label1:
        return r2;
    }

    public java.lang.String getMeid()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mMeid>;

        return $r1;
    }

    public java.lang.String getMsisdn()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, $z1;
        com.android.internal.telephony.uicc.SIMRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String r4, r6;
        com.android.internal.telephony.uicc.IccRecords r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        r4 = null;

        if z0 == 0 goto label2;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r5 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r5 == null goto label1;

        r4 = virtualinvoke r5.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getMsisdnNumber()>();

     label1:
        return r4;

     label2:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z1 == 0 goto label4;

        r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        r6 = null;

        if r1 == null goto label3;

        r6 = virtualinvoke r1.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getMsisdnNumber()>();

     label3:
        return r6;

     label4:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("getMsisdn: not expected on CDMA");

        return null;
    }

    public boolean getMute()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCallTracker: boolean getMute()>();

        return $z0;
    }

    public java.lang.String getNai()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int $i0;
        com.android.internal.telephony.uicc.UiccController $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r8;
        com.android.internal.telephony.uicc.IccRecords r7;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r7 = virtualinvoke $r2.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.IccRecords getIccRecords(int,int)>($i0, 2);

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GsmCdmaPhone", 2);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IccRecords is ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r6);

     label1:
        if r7 == null goto label2;

        r8 = virtualinvoke r7.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getNAI()>();

        goto label3;

     label2:
        r8 = null;

     label3:
        return r8;
    }

    public java.lang.String getOperatorNumeric()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1, $i2;
        com.android.internal.telephony.uicc.IccRecords r1, r17, r18;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r22;
        java.lang.String $r3, r16, $r24, $r25;
        java.util.concurrent.atomic.AtomicReference $r4, $r6, $r12, $r14;
        java.lang.Object $r5, $r7, $r13, $r15;
        com.android.internal.telephony.uicc.RuimRecords $r8;
        com.android.internal.telephony.uicc.SIMRecords $r9;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType $r10, $r11;
        com.android.internal.telephony.uicc.UiccCardApplication r19;
        java.lang.Boolean r21;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r16 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label02;

        $r14 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r15 = virtualinvoke $r14.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r17 = (com.android.internal.telephony.uicc.IccRecords) $r15;

        if r17 == null goto label01;

        r16 = virtualinvoke r17.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getOperatorNumeric()>();

     label01:
        goto label11;

     label02:
        r18 = null;

        i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mCdmaSubscriptionSource>;

        if i0 != 1 goto label03;

        r16 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.cdma.home.operator.numeric");

        goto label07;

     label03:
        r16 = null;

        if i0 != 0 goto label07;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r19 = (com.android.internal.telephony.uicc.UiccCardApplication) $r5;

        if r19 == null goto label04;

        $r10 = virtualinvoke r19.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType getType()>();

        $r11 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType APPTYPE_RUIM>;

        if $r10 != $r11 goto label04;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Legacy RUIM app present");

        $r12 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r13 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r18 = (com.android.internal.telephony.uicc.IccRecords) $r13;

        goto label05;

     label04:
        r18 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

     label05:
        if r18 == null goto label06;

        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if r18 != $r9 goto label06;

        r16 = virtualinvoke r18.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getOperatorNumeric()>();

        goto label07;

     label06:
        $r6 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r7;

        r16 = null;

        r18 = r1;

        if r1 == null goto label07;

        r16 = null;

        r18 = r1;

        $z2 = r1 instanceof com.android.internal.telephony.uicc.RuimRecords;

        if $z2 == 0 goto label07;

        $r8 = (com.android.internal.telephony.uicc.RuimRecords) r1;

        r16 = virtualinvoke $r8.<com.android.internal.telephony.uicc.RuimRecords: java.lang.String getRUIMOperatorNumeric()>();

        r18 = r1;

     label07:
        if r16 != null goto label10;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOperatorNumeric: Cannot retrieve operatorNumeric: mCdmaSubscriptionSource = ");

        $i1 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mCdmaSubscriptionSource>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIccRecords = ");

        if r18 == null goto label08;

        $z1 = virtualinvoke r18.<com.android.internal.telephony.uicc.IccRecords: boolean getRecordsLoaded()>();

        r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        goto label09;

     label08:
        r21 = null;

     label09:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>($r3);

     label10:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOperatorNumeric: mCdmaSubscriptionSource = ");

        $i2 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mCdmaSubscriptionSource>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" operatorNumeric = ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r24);

     label11:
        $r25 = staticinvoke <android.text.TextUtils: java.lang.String emptyIfNull(java.lang.String)>(r16);

        return $r25;
    }

    public int getOtasp()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.ServiceStateTracker $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.ServiceStateTracker: int getOtasp()>();

        return $i0;
    }

    public void getOutgoingCallerIdDisplay(android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone r2;
        boolean $z0, $z1;
        com.android.internal.telephony.CommandsInterface $r3;
        android.telephony.ServiceState $r4;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label3;

        r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r2 == null goto label2;

        $r4 = virtualinvoke r2.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i0 = virtualinvoke $r4.<android.telephony.ServiceState: int getState()>();

        if $i0 == 0 goto label1;

        $z1 = virtualinvoke r2.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        if $z1 == 0 goto label2;

     label1:
        virtualinvoke r2.<com.android.internal.telephony.Phone: void getOutgoingCallerIdDisplay(android.os.Message)>(r1);

        return;

     label2:
        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void getCLIR(android.os.Message)>(r1);

        goto label4;

     label3:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("getOutgoingCallerIdDisplay: not possible in CDMA");

     label4:
        return;
    }

    public java.util.List getPendingMmiCodes()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        return $r1;
    }

    public int getPhoneType()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPrecisePhoneType>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 2;
    }

    public java.lang.String getPlmn()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, $z1;
        com.android.internal.telephony.uicc.SIMRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String r4, r6;
        com.android.internal.telephony.uicc.IccRecords r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        r4 = null;

        if z0 == 0 goto label2;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r5 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r5 == null goto label1;

        r4 = virtualinvoke r5.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getPnnHomeName()>();

     label1:
        return r4;

     label2:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("Plmn is not available in CDMA");

        return null;

     label3:
        r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        r6 = null;

        if r1 == null goto label4;

        r6 = virtualinvoke r1.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getPnnHomeName()>();

     label4:
        return r6;
    }

    public android.telephony.PreciseDataConnectionState getPreciseDataConnectionState(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1;
        android.telephony.ServiceState r2;
        boolean $z0, $z1, $z2, z3;
        android.telephony.PreciseDataConnectionState $r3, $r4;
        int $i0, $i1, i2;
        com.android.internal.telephony.ServiceStateTracker r5;
        com.android.internal.telephony.dataconnection.DcTracker r6;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("emergency");

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        if r5 == null goto label5;

        $i1 = virtualinvoke r5.<com.android.internal.telephony.ServiceStateTracker: int getCurrentDataConnectionState()>();

        if $i1 == 0 goto label3;

        if z3 != 0 goto label3;

        goto label5;

     label3:
        r6 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getActiveDcTrackerForApn(java.lang.String)>(r1);

        i2 = 0;

        r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.ServiceState getServiceState()>();

        if r2 == null goto label4;

        i2 = virtualinvoke r2.<android.telephony.ServiceState: int getDataNetworkType()>();

     label4:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isDataSuspended()>();

        $r4 = virtualinvoke r6.<com.android.internal.telephony.dataconnection.DcTracker: android.telephony.PreciseDataConnectionState getPreciseDataConnectionState(java.lang.String,boolean,int)>(r1, $z1, i2);

        return $r4;

     label5:
        $r3 = new android.telephony.PreciseDataConnectionState;

        $i0 = staticinvoke <android.telephony.data.ApnSetting: int getApnTypesBitmaskFromString(java.lang.String)>(r1);

        specialinvoke $r3.<android.telephony.PreciseDataConnectionState: void <init>(int,int,int,java.lang.String,android.net.LinkProperties,int,android.telephony.data.ApnSetting)>(0, 0, $i0, r1, null, 0, null);

        return $r3;
    }

    public com.android.internal.telephony.Call getRingingCall()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.Phone r1;
        com.android.internal.telephony.GsmCdmaCallTracker $r2, $r4, $r6, $r9, $r12, $r17;
        com.android.internal.telephony.GsmCdmaCall $r3, $r18;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.Connection $r5, $r7, $r10, $r13;
        com.android.internal.telephony.Call $r8, $r11, $r14, $r15, $r16;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r1 == null goto label1;

        $r15 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

        $z2 = virtualinvoke $r15.<com.android.internal.telephony.Call: boolean isRinging()>();

        if $z2 == 0 goto label1;

        $r16 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

        return $r16;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r3 = $r2.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaCall: boolean isRinging()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection getRingingHandoverConnection()>();

        if $r5 == null goto label2;

        $r6 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection getRingingHandoverConnection()>();

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call getCall()>();

        if $r8 == null goto label2;

        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection getRingingHandoverConnection()>();

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call getCall()>();

        $z1 = virtualinvoke $r11.<com.android.internal.telephony.Call: boolean isRinging()>();

        if $z1 == 0 goto label2;

        $r12 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.Connection getRingingHandoverConnection()>();

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call getCall()>();

        return $r14;

     label2:
        $r17 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r18 = $r17.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        return $r18;
    }

    public android.telephony.ServiceState getServiceState()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.Phone $r1, $r4;
        android.telephony.ServiceState $r2, $r3, $r5, $r6, $r7, $r8, r11;
        int $i0;
        com.android.internal.telephony.ServiceStateTracker r9, r10, r12;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        if r9 == null goto label1;

        $r8 = r9.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i0 = virtualinvoke $r8.<android.telephony.ServiceState: int getState()>();

        if $i0 == 0 goto label4;

     label1:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if $r1 == null goto label4;

        r10 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        if r10 != null goto label2;

        $r7 = new android.telephony.ServiceState;

        specialinvoke $r7.<android.telephony.ServiceState: void <init>()>();

        r11 = $r7;

        goto label3;

     label2:
        r11 = r10.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

     label3:
        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $r6 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.ServiceState mergeServiceStates(android.telephony.ServiceState,android.telephony.ServiceState)>(r11, $r5);

        return $r6;

     label4:
        r12 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        if r12 == null goto label5;

        $r3 = r12.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        return $r3;

     label5:
        $r2 = new android.telephony.ServiceState;

        specialinvoke $r2.<android.telephony.ServiceState: void <init>()>();

        return $r2;
    }

    public com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.ServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        return $r1;
    }

    public int getSpecificCarrierId()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.CarrierResolver $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierResolver mCarrierResolver>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.CarrierResolver: int getSpecificCarrierId()>();

        return $i0;
    }

    public java.lang.String getSpecificCarrierName()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.CarrierResolver $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierResolver mCarrierResolver>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.CarrierResolver: java.lang.String getSpecificCarrierName()>();

        return $r2;
    }

    public com.android.internal.telephony.PhoneConstants$State getState()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.PhoneConstants$State r1, $r4, $r6;
        com.android.internal.telephony.Phone $r2, $r5;
        com.android.internal.telephony.GsmCdmaCallTracker $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        r1 = virtualinvoke $r5.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$State getState()>();

        $r6 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if r1 == $r6 goto label1;

        return r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r4 = $r3.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        return $r4;
    }

    public java.lang.String getSubscriberId()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        boolean $z0;
        int $i0;
        com.android.internal.telephony.uicc.UiccController $r2;
        com.android.internal.telephony.ServiceStateTracker $r3;
        java.lang.String r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r4 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        r4 = virtualinvoke $r3.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getImsi()>();

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r1 = virtualinvoke $r2.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.IccRecords getIccRecords(int,int)>($i0, 1);

        if r1 == null goto label2;

        r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getIMSI()>();

     label2:
        return r4;
    }

    public java.lang.String getSystemProperty(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean getUnitTestMode()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        $r3 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(int,java.lang.String,java.lang.String)>($i0, r1, r2);

        return $r3;
    }

    public com.android.internal.telephony.dataconnection.TransportManager getTransportManager()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.dataconnection.TransportManager $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        return $r1;
    }

    public com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0;
        int $i0, $i1;
        com.android.internal.telephony.uicc.UiccController $r1, $r3;
        com.android.internal.telephony.uicc.UiccCardApplication $r2, $r4;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i1 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i1, 1);

        return $r4;

     label1:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i0, 2);

        return $r2;
    }

    public java.lang.String getVoiceMailAlphaTag()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3, r6;
        int $i0;
        java.util.concurrent.atomic.AtomicReference $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.uicc.IccRecords r7;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r6 = "";

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r7 = (com.android.internal.telephony.uicc.IccRecords) $r5;

        if r7 == null goto label1;

        r6 = virtualinvoke r7.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getVoiceMailAlphaTag()>();

        goto label2;

     label1:
        r6 = "";

     label2:
        if r6 == null goto label4;

        $i0 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        goto label4;

     label3:
        return r6;

     label4:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(17039364);

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getVoiceMailNumber()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.lang.StringBuilder $r1, $r15, $r19, $r24, $r28;
        java.lang.String $r4, $r18, $r22, $r27, $r33, r37, r40, r42, r45, r49, r51, r52, r53, r54;
        android.content.Context $r5, $r8, $r14, $r23;
        java.lang.Object $r6, $r9, $r35;
        android.telephony.CarrierConfigManager $r7, $r10;
        int $i0, $i1, $i2, $i3;
        com.android.internal.telephony.ServiceStateTracker $r11, $r13;
        android.telephony.ServiceState $r12;
        java.util.concurrent.atomic.AtomicReference $r34;
        com.android.internal.telephony.uicc.SIMRecords $r36;
        com.android.internal.telephony.uicc.IccRecords r38;
        android.content.SharedPreferences r39, r46;
        android.os.PersistableBundle r50, r55;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r37 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label01;

        $r36 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r36 == null goto label09;

     label01:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label02;

        $r34 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r35 = virtualinvoke $r34.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r38 = (com.android.internal.telephony.uicc.IccRecords) $r35;

        goto label03;

     label02:
        r38 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

     label03:
        if r38 == null goto label04;

        r37 = virtualinvoke r38.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getVoiceMailNumber()>();

        goto label05;

     label04:
        r37 = "";

     label05:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r37);

        if $z2 == 0 goto label08;

        $r23 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        r39 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r23);

        $z10 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z10 == 0 goto label06;

        r40 = "vm_number_key";

        goto label07;

     label06:
        r40 = "vm_number_key_cdma";

     label07:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $i3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        r42 = interfaceinvoke r39.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r27, null);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getVoiceMailNumber: from ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" number=");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r33);

        r37 = r42;

        goto label09;

     label08:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getVoiceMailNumber: from IccRecords number=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r4);

     label09:
        r45 = r37;

        $z11 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z11 != 0 goto label10;

        r45 = r37;

        $z9 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r37);

        if $z9 == 0 goto label10;

        $r14 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        r46 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm_number_key_cdma");

        $i2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r45 = interfaceinvoke r46.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r18, null);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getVoiceMailNumber: from VM_NUMBER_CDMA number=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r22);

     label10:
        r49 = r45;

        $z12 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r45);

        if $z12 == 0 goto label13;

        $r8 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r10 = (android.telephony.CarrierConfigManager) $r9;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        r50 = virtualinvoke $r10.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i1);

        r49 = r45;

        if r50 == null goto label13;

        r51 = virtualinvoke r50.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("default_vm_number_string");

        r52 = virtualinvoke r50.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("default_vm_number_roaming_string");

        r53 = virtualinvoke r50.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("default_vm_number_roaming_and_ims_unregistered_string");

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r51);

        if $z4 != 0 goto label11;

        r45 = r51;

     label11:
        r49 = r45;

        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r12 = $r11.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z5 = virtualinvoke $r12.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z5 == 0 goto label13;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r53);

        if $z6 != 0 goto label12;

        $r13 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $z8 = virtualinvoke $r13.<com.android.internal.telephony.ServiceStateTracker: boolean isImsRegistered()>();

        if $z8 != 0 goto label12;

        r49 = r53;

        goto label13;

     label12:
        r49 = r45;

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r52);

        if $z7 != 0 goto label13;

        r49 = r52;

     label13:
        r54 = r49;

        $z13 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r49);

        if $z13 == 0 goto label14;

        $r5 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r7 = (android.telephony.CarrierConfigManager) $r6;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        r55 = virtualinvoke $r7.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        r54 = r49;

        if r55 == null goto label14;

        r54 = r49;

        $z3 = virtualinvoke r55.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("config_telephony_use_own_number_for_voicemail_bool");

        if $z3 == 0 goto label14;

        r54 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getLine1Number()>();

     label14:
        return r54;
    }

    public android.os.PowerManager$WakeLock getWakeLock()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.PowerManager$WakeLock mWakeLock>;

        return $r1;
    }

    public boolean handleInCallMmiCommands(java.lang.String) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone r2;
        boolean $z0, $z1, $z2, $z3, z4;
        char $c0;
        android.telephony.ServiceState $r3;
        int $i1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label01;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("method handleInCallMmiCommands is NOT supported in CDMA!");

        return 0;

     label01:
        r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r2 == null goto label02;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i1 = virtualinvoke $r3.<android.telephony.ServiceState: int getState()>();

        if $i1 != 0 goto label02;

        $z3 = virtualinvoke r2.<com.android.internal.telephony.Phone: boolean handleInCallMmiCommands(java.lang.String)>(r1);

        return $z3;

     label02:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isInCall()>();

        if $z1 != 0 goto label03;

        return 0;

     label03:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 == 0 goto label04;

        return 0;

     label04:
        z4 = 0;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        tableswitch($c0)
        {
            case 48: goto label11;
            case 49: goto label10;
            case 50: goto label09;
            case 51: goto label08;
            case 52: goto label07;
            case 53: goto label06;
            default: goto label05;
        };

     label05:
        goto label12;

     label06:
        z4 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean handleCcbsIncallSupplementaryService(java.lang.String)>(r1);

        goto label12;

     label07:
        z4 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean handleEctIncallSupplementaryService(java.lang.String)>(r1);

        goto label12;

     label08:
        z4 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean handleMultipartyIncallSupplementaryService(java.lang.String)>(r1);

        goto label12;

     label09:
        z4 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean handleCallHoldIncallSupplementaryService(java.lang.String)>(r1);

        goto label12;

     label10:
        z4 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean handleCallWaitingIncallSupplementaryService(java.lang.String)>(r1);

        goto label12;

     label11:
        z4 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean handleCallDeflectionIncallSupplementaryService(java.lang.String)>(r1);

     label12:
        return z4;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.util.Iterator r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i25, i26, i27, i28;
        java.lang.Object $r2, $r4, $r6, $r8, $r12, $r14, $r15, $r17, $r34, $r36, $r45, $r48, $r50, $r52, $r54, $r68, $r70, $r73, $r75, $r76, $r78, $r95, $r114, $r116, $r117, $r119, $r127, $r132, $r134, $r141, $r144, $r146, $r147, $r153, $r155, $r157, $r160, $r163, $r165, $r170, $r175, $r181, $r183, $r185, $r187, $r189, $r191, $r193, $r195, $r196, $r199, $r204, $r206, $r208, $r210, $r212, $r214, $r217, $r221, $r226, $r228, $r229, $r245, $r274;
        android.os.AsyncResult $r3, $r7, $r69, $r74, $r154, $r213, r235, r239, r241, r260, r262, r266, r267, r270, r271, r273, r276, r278, r280, r283, r284, r287, r292;
        com.android.internal.telephony.PhoneNotifier $r5, $r11;
        java.lang.String $r9, $r30, $r44, $r59, $r60, $r62, $r63, $r64, $r88, $r104, $r111, $r126, $r131, $r140, $r152, $r166, $r167, $r168, $r169, $r173, $r203, $r207, $r211, $r215, $r216, $r223, $r227, $r254, $r259, r261, r289, r290;
        android.telephony.CellIdentity $r10;
        java.lang.Throwable $r13, $r19, $r35, $r42, $r46, $r47, $r115, $r120, $r124, $r148, $r164, $r171, $r174, $r178, $r182, $r184, $r188, $r190, $r197, $r198, $r205, $r209, $r218, $r231;
        java.lang.Boolean $r16, $r37, $r71;
        java.lang.Integer $r18, $r77, $r79, $r118, $r156;
        com.android.internal.telephony.CommandException $r20;
        java.lang.StringBuilder $r21, $r38, $r80, $r101, $r108, $r121, $r128, $r136, $r149, $r219, $r252, $r257;
        com.android.internal.telephony.CommandException$Error $r31, $r33, r237;
        com.android.internal.telephony._$$Lambda$GsmCdmaPhone$a6kJ0nUDqELtm2sJkfQTt59rKcU $r32;
        com.android.internal.telephony.ServiceStateTracker $r51, $r58, $r61, $r158;
        java.util.ArrayList $r53;
        boolean $z1, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z15, $z16, $z17, $z19, $z20, $z21, z22, z23, z24, z25;
        com.android.internal.telephony.OperatorInfo$State $r55, $r56, $r65;
        com.android.internal.telephony.OperatorInfo $r57, r244;
        com.android.internal.telephony.dataconnection.DataEnabledSettings $r66, $r67, $r72;
        com.android.internal.telephony.Phone $r86, $r89, $r90;
        android.content.Context $r91, $r93, $r94, $r97, $r224;
        android.content.res.Resources $r92;
        android.telephony.CarrierConfigManager $r96;
        android.content.ContentResolver $r98;
        android.os.Message $r105, $r113, $r161, $r200, $r202, r232, r246, $r255, r275, r277, r279, $r282;
        com.android.internal.telephony.CommandsInterface $r112;
        int[] $r133, $r135;
        com.android.internal.telephony.gsm.GsmMmiCode $r142;
        java.util.concurrent.atomic.AtomicReference $r143;
        com.android.internal.telephony.uicc.UiccCardApplication $r145;
        android.telephony.ServiceState $r159;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r162;
        java.lang.Class $r172, $r179;
        com.android.internal.telephony.uicc.SIMRecords $r177, $r180;
        com.android.internal.telephony.CallForwardInfo[] $r194;
        android.telephony.TelephonyManager $r225;
        com.android.internal.telephony.RegistrantList $r230, $r291;
        android.telephony.BarringInfo r233;
        com.android.internal.telephony.RegistrationFailedEvent r234;
        android.util.Pair r236, r247;
        java.util.List r242;
        com.android.ims.ImsManager r249;
        android.os.PersistableBundle r250;
        com.android.internal.telephony.RadioCapability r268;
        java.lang.String[] r272, r285;
        com.android.internal.telephony.GsmCdmaPhone$Cfu r281;
        com.android.internal.telephony.gsm.SuppServiceNotification r293;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r232 := @parameter0: android.os.Message;

        i25 = r232.<android.os.Message: int what>;

        z22 = 0;

        tableswitch(i25)
        {
            case 1: goto label89;
            case 2: goto label88;
            case 3: goto label85;
            case 4: goto label01;
            case 5: goto label84;
            case 6: goto label82;
            case 7: goto label77;
            case 8: goto label76;
            case 9: goto label74;
            case 10: goto label72;
            case 11: goto label01;
            case 12: goto label69;
            case 13: goto label67;
            case 14: goto label01;
            case 15: goto label01;
            case 16: goto label01;
            case 17: goto label01;
            case 18: goto label65;
            case 19: goto label64;
            case 20: goto label59;
            case 21: goto label57;
            case 22: goto label56;
            case 23: goto label01;
            case 24: goto label01;
            case 25: goto label55;
            case 26: goto label54;
            case 27: goto label53;
            case 28: goto label51;
            case 29: goto label50;
            case 30: goto label01;
            case 31: goto label01;
            case 32: goto label01;
            case 33: goto label01;
            case 34: goto label01;
            case 35: goto label47;
            case 36: goto label46;
            case 37: goto label01;
            case 38: goto label01;
            case 39: goto label41;
            case 40: goto label41;
            case 41: goto label39;
            case 42: goto label38;
            case 43: goto label27;
            case 44: goto label26;
            case 45: goto label24;
            case 46: goto label23;
            case 47: goto label22;
            case 48: goto label21;
            case 49: goto label20;
            case 50: goto label19;
            case 51: goto label13;
            case 52: goto label01;
            case 53: goto label09;
            case 54: goto label12;
            case 55: goto label09;
            case 56: goto label04;
            case 57: goto label03;
            case 58: goto label02;
            default: goto label01;
        };

     label01:
        specialinvoke r0.<com.android.internal.telephony.Phone: void handleMessage(android.os.Message)>(r232);

        goto label90;

     label02:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Event BarringInfoChanged Received");

        $r2 = r232.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.os.AsyncResult) $r2;

        $r4 = $r3.<android.os.AsyncResult: java.lang.Object result>;

        r233 = (android.telephony.BarringInfo) $r4;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        interfaceinvoke $r5.<com.android.internal.telephony.PhoneNotifier: void notifyBarringInfoChanged(com.android.internal.telephony.Phone,android.telephony.BarringInfo)>(r0, r233);

        goto label90;

     label03:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Event RegistrationFailed Received");

        $r6 = r232.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.os.AsyncResult) $r6;

        $r8 = $r7.<android.os.AsyncResult: java.lang.Object result>;

        r234 = (com.android.internal.telephony.RegistrationFailedEvent) $r8;

        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        $r10 = r234.<com.android.internal.telephony.RegistrationFailedEvent: android.telephony.CellIdentity cellIdentity>;

        $r9 = r234.<com.android.internal.telephony.RegistrationFailedEvent: java.lang.String chosenPlmn>;

        $i3 = r234.<com.android.internal.telephony.RegistrationFailedEvent: int domain>;

        $i2 = r234.<com.android.internal.telephony.RegistrationFailedEvent: int causeCode>;

        $i1 = r234.<com.android.internal.telephony.RegistrationFailedEvent: int additionalCauseCode>;

        interfaceinvoke $r11.<com.android.internal.telephony.PhoneNotifier: void notifyRegistrationFailed(com.android.internal.telephony.Phone,android.telephony.CellIdentity,java.lang.String,int,int,int)>(r0, $r10, $r9, $i3, $i2, $i1);

        goto label90;

     label04:
        $r12 = r232.<android.os.Message: java.lang.Object obj>;

        r235 = (android.os.AsyncResult) $r12;

        if r235 == null goto label08;

        $r13 = r235.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r13 != null goto label05;

        goto label08;

     label05:
        $r14 = r235.<android.os.AsyncResult: java.lang.Object userObj>;

        r236 = (android.util.Pair) $r14;

        if r236 != null goto label06;

        return;

     label06:
        $r15 = r236.<android.util.Pair: java.lang.Object first>;

        $r16 = (java.lang.Boolean) $r15;

        z23 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        $r17 = r236.<android.util.Pair: java.lang.Object second>;

        $r18 = (java.lang.Integer) $r17;

        i26 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        $r19 = r235.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r20 = (com.android.internal.telephony.CommandException) $r19;

        r237 = virtualinvoke $r20.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error received when re-applying uicc application setting to ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z23);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on phone ");

        $i4 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Error code: ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r237);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" retry count left: ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);

        $r30 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>($r30);

        if i26 <= 0 goto label90;

        $r31 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error GENERIC_FAILURE>;

        if r237 == $r31 goto label07;

        $r33 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error SIM_BUSY>;

        if r237 != $r33 goto label90;

     label07:
        $r32 = new com.android.internal.telephony._$$Lambda$GsmCdmaPhone$a6kJ0nUDqELtm2sJkfQTt59rKcU;

        specialinvoke $r32.<com.android.internal.telephony._$$Lambda$GsmCdmaPhone$a6kJ0nUDqELtm2sJkfQTt59rKcU: void <init>(com.android.internal.telephony.GsmCdmaPhone,int)>(r0, i26);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean postDelayed(java.lang.Runnable,long)>($r32, 5000L);

        goto label90;

     label08:
        return;

     label09:
        $r34 = r232.<android.os.Message: java.lang.Object obj>;

        r239 = (android.os.AsyncResult) $r34;

        if r239 != null goto label10;

        return;

     label10:
        $r35 = r239.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r35 == null goto label11;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received exception on event");

        $i6 = r232.<android.os.Message: int what>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r42 = r239.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r44);

        return;

     label11:
        $r36 = r239.<android.os.AsyncResult: java.lang.Object result>;

        $r37 = (java.lang.Boolean) $r36;

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.Boolean mUiccApplicationsEnabled> = $r37;

     label12:
        $i5 = <com.android.internal.telephony.GsmCdmaPhone: int ENABLE_UICC_APPS_MAX_RETRIES>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void reapplyUiccAppsEnablementIfNeeded(int)>($i5);

        goto label90;

     label13:
        $r45 = r232.<android.os.Message: java.lang.Object obj>;

        r241 = (android.os.AsyncResult) $r45;

        $r46 = r241.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r46 != null goto label18;

        $r50 = r241.<android.os.AsyncResult: java.lang.Object result>;

        if $r50 == null goto label18;

        $r51 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        if $r51 == null goto label18;

        $r52 = r241.<android.os.AsyncResult: java.lang.Object result>;

        r242 = (java.util.List) $r52;

        $r53 = new java.util.ArrayList;

        specialinvoke $r53.<java.util.ArrayList: void <init>()>();

        r1 = interfaceinvoke r242.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r54 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r244 = (com.android.internal.telephony.OperatorInfo) $r54;

        $r55 = <com.android.internal.telephony.OperatorInfo$State: com.android.internal.telephony.OperatorInfo$State CURRENT>;

        $r56 = virtualinvoke r244.<com.android.internal.telephony.OperatorInfo: com.android.internal.telephony.OperatorInfo$State getState()>();

        if $r55 != $r56 goto label15;

        $r57 = new com.android.internal.telephony.OperatorInfo;

        $r58 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r59 = virtualinvoke r244.<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaLong()>();

        $r60 = virtualinvoke $r58.<com.android.internal.telephony.ServiceStateTracker: java.lang.String filterOperatorNameByPattern(java.lang.String)>($r59);

        $r61 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r62 = virtualinvoke r244.<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaShort()>();

        $r63 = virtualinvoke $r61.<com.android.internal.telephony.ServiceStateTracker: java.lang.String filterOperatorNameByPattern(java.lang.String)>($r62);

        $r64 = virtualinvoke r244.<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorNumeric()>();

        $r65 = virtualinvoke r244.<com.android.internal.telephony.OperatorInfo: com.android.internal.telephony.OperatorInfo$State getState()>();

        specialinvoke $r57.<com.android.internal.telephony.OperatorInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.OperatorInfo$State)>($r60, $r63, $r64, $r65);

        interfaceinvoke $r53.<java.util.List: boolean add(java.lang.Object)>($r57);

        goto label16;

     label15:
        interfaceinvoke $r53.<java.util.List: boolean add(java.lang.Object)>(r244);

     label16:
        goto label14;

     label17:
        r241.<android.os.AsyncResult: java.lang.Object result> = $r53;

     label18:
        $r245 = r241.<android.os.AsyncResult: java.lang.Object userObj>;

        r246 = (android.os.Message) $r245;

        if r246 == null goto label90;

        $r48 = r241.<android.os.AsyncResult: java.lang.Object result>;

        $r47 = r241.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r246, $r48, $r47);

        virtualinvoke r246.<android.os.Message: void sendToTarget()>();

        goto label90;

     label19:
        $r66 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DataEnabledSettings mDataEnabledSettings>;

        virtualinvoke $r66.<com.android.internal.telephony.dataconnection.DataEnabledSettings: void updateProvisioningDataEnabled()>();

        goto label90;

     label20:
        $r67 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DataEnabledSettings mDataEnabledSettings>;

        virtualinvoke $r67.<com.android.internal.telephony.dataconnection.DataEnabledSettings: void updateProvisionedChanged()>();

        goto label90;

     label21:
        $r68 = r232.<android.os.Message: java.lang.Object obj>;

        $r69 = (android.os.AsyncResult) $r68;

        $r70 = $r69.<android.os.AsyncResult: java.lang.Object result>;

        $r71 = (java.lang.Boolean) $r70;

        z24 = virtualinvoke $r71.<java.lang.Boolean: boolean booleanValue()>();

        $r72 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DataEnabledSettings mDataEnabledSettings>;

        virtualinvoke $r72.<com.android.internal.telephony.dataconnection.DataEnabledSettings: void setCarrierDataEnabled(boolean)>(z24);

        goto label90;

     label22:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("EVENT EVENT_RADIO_STATE_CHANGED");

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void handleRadioPowerStateChange()>();

        goto label90;

     label23:
        $r73 = r232.<android.os.Message: java.lang.Object obj>;

        $r74 = (android.os.AsyncResult) $r73;

        $r75 = $r74.<android.os.AsyncResult: java.lang.Object result>;

        r247 = (android.util.Pair) $r75;

        $r76 = r247.<android.util.Pair: java.lang.Object first>;

        $r77 = (java.lang.Integer) $r76;

        $i7 = virtualinvoke $r77.<java.lang.Integer: int intValue()>();

        $r78 = r247.<android.util.Pair: java.lang.Object second>;

        $r79 = (java.lang.Integer) $r78;

        $i8 = virtualinvoke $r79.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void onVoiceRegStateOrRatChanged(int,int)>($i7, $i8);

        goto label90;

     label24:
        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Event EVENT_MODEM_RESET Received isInEcm = ");

        $z4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isInEcm()>();

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isPhoneTypeGsm = ");

        $z5 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mImsPhone = ");

        $r86 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r86);

        $r88 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r88);

        $z6 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isInEcm()>();

        if $z6 == 0 goto label90;

        $z7 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z7 == 0 goto label25;

        $r89 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if $r89 == null goto label90;

        $r90 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        virtualinvoke $r90.<com.android.internal.telephony.Phone: void handleExitEmergencyCallbackMode()>();

        goto label90;

     label25:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void handleExitEmergencyCallbackMode(android.os.Message)>(r232);

        goto label90;

     label26:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("cdma_roaming_mode change is done");

        goto label90;

     label27:
        $r91 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r92 = virtualinvoke $r91.<android.content.Context: android.content.res.Resources getResources()>();

        $z8 = virtualinvoke $r92.<android.content.res.Resources: boolean getBoolean(int)>(17891559);

        if $z8 != 0 goto label28;

        $r112 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r113 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int)>(40);

        interfaceinvoke $r112.<com.android.internal.telephony.CommandsInterface: void getVoiceRadioTechnology(android.os.Message)>($r113);

     label28:
        $r93 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $i9 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r249 = staticinvoke <com.android.ims.ImsManager: com.android.ims.ImsManager getInstance(android.content.Context,int)>($r93, $i9);

        $z9 = virtualinvoke r249.<com.android.ims.ImsManager: boolean isServiceAvailable()>();

        if $z9 == 0 goto label29;

        virtualinvoke r249.<com.android.ims.ImsManager: void updateImsServiceConfig(boolean)>(1);

        goto label30;

     label29:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("ImsManager is not available to update CarrierConfig.");

     label30:
        $r94 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r95 = virtualinvoke $r94.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r96 = (android.telephony.CarrierConfigManager) $r95;

        $i10 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        r250 = virtualinvoke $r96.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i10);

        if r250 == null goto label31;

        z25 = virtualinvoke r250.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("broadcast_emergency_call_state_changes_bool");

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("broadcastEmergencyCallStateChanges = ");

        virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z25);

        $r111 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r111);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setBroadcastEmergencyCallStateChanges(boolean)>(z25);

        goto label32;

     label31:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("didn\'t get broadcastEmergencyCallStateChanges from carrier config");

     label32:
        if r250 == null goto label37;

        i27 = virtualinvoke r250.<android.os.PersistableBundle: int getInt(java.lang.String)>("cdma_roaming_mode_int");

        $r97 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r98 = virtualinvoke $r97.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r98, "roaming_settings", -1);

        if i27 == -1 goto label34;

        if i27 == 0 goto label33;

        if i27 == 1 goto label33;

        if i27 == 2 goto label33;

        goto label35;

     label33:
        $r252 = new java.lang.StringBuilder;

        specialinvoke $r252.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r252.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cdma_roaming_mode is going to changed to ");

        virtualinvoke $r252.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        $r254 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r254);

        $r255 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int)>(44);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setCdmaRoamingPreference(int,android.os.Message)>(i27, $r255);

        goto label36;

     label34:
        if i0 == i27 goto label35;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cdma_roaming_mode is going to changed to ");

        virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r104 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r104);

        $r105 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int)>(44);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setCdmaRoamingPreference(int,android.os.Message)>(i0, $r105);

     label35:
        $r257 = new java.lang.StringBuilder;

        specialinvoke $r257.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid cdma_roaming_mode settings: ");

        virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        $r259 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>($r259);

     label36:
        goto label90;

     label37:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("didn\'t get the cdma_roaming_mode changes from the carrier config.");

        goto label90;

     label38:
        $i11 = r232.<android.os.Message: int arg1>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void phoneObjectUpdater(int)>($i11);

        goto label90;

     label39:
        $r114 = r232.<android.os.Message: java.lang.Object obj>;

        r260 = (android.os.AsyncResult) $r114;

        $r115 = r260.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r115 != null goto label40;

        $r116 = r260.<android.os.AsyncResult: java.lang.Object result>;

        if $r116 == null goto label40;

        $r117 = r260.<android.os.AsyncResult: java.lang.Object result>;

        $r118 = (java.lang.Integer) $r117;

        $i12 = virtualinvoke $r118.<java.lang.Integer: int intValue()>();

        r0.<com.android.internal.telephony.GsmCdmaPhone: int mRilVersion> = $i12;

        goto label90;

     label40:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Unexpected exception on EVENT_RIL_CONNECTED");

        r0.<com.android.internal.telephony.GsmCdmaPhone: int mRilVersion> = -1;

        goto label90;

     label41:
        $i13 = r232.<android.os.Message: int what>;

        if $i13 != 39 goto label42;

        r261 = "EVENT_VOICE_RADIO_TECH_CHANGED";

        goto label43;

     label42:
        r261 = "EVENT_REQUEST_VOICE_RADIO_TECH_DONE";

     label43:
        $r119 = r232.<android.os.Message: java.lang.Object obj>;

        r262 = (android.os.AsyncResult) $r119;

        $r120 = r262.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r120 != null goto label45;

        $r127 = r262.<android.os.AsyncResult: java.lang.Object result>;

        if $r127 == null goto label44;

        $r132 = r262.<android.os.AsyncResult: java.lang.Object result>;

        $r133 = (int[]) $r132;

        $i14 = lengthof $r133;

        if $i14 == 0 goto label44;

        $r134 = r262.<android.os.AsyncResult: java.lang.Object result>;

        $r135 = (int[]) $r134;

        i28 = $r135[0];

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r261);

        virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": newVoiceTech=");

        virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);

        $r140 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r140);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void phoneObjectUpdater(int)>(i28);

        goto label90;

     label44:
        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r261);

        virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": has no tech!");

        $r131 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>($r131);

        goto label90;

     label45:
        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r261);

        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": exception=");

        $r124 = r262.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r124);

        $r126 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>($r126);

        goto label90;

     label46:
        $r141 = r232.<android.os.Message: java.lang.Object obj>;

        r266 = (android.os.AsyncResult) $r141;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Event EVENT_SS received");

        $z10 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z10 == 0 goto label90;

        $r142 = new com.android.internal.telephony.gsm.GsmMmiCode;

        $r143 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r144 = virtualinvoke $r143.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r145 = (com.android.internal.telephony.uicc.UiccCardApplication) $r144;

        specialinvoke $r142.<com.android.internal.telephony.gsm.GsmMmiCode: void <init>(com.android.internal.telephony.GsmCdmaPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r0, $r145);

        virtualinvoke $r142.<com.android.internal.telephony.gsm.GsmMmiCode: void processSsData(android.os.AsyncResult)>(r266);

        goto label90;

     label47:
        $r146 = r232.<android.os.Message: java.lang.Object obj>;

        r267 = (android.os.AsyncResult) $r146;

        $r147 = r267.<android.os.AsyncResult: java.lang.Object result>;

        r268 = (com.android.internal.telephony.RadioCapability) $r147;

        $r148 = r267.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r148 == null goto label48;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", "get phone radio capability fail, no need to change mRadioCapability");

        goto label49;

     label48:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void radioCapabilityUpdated(com.android.internal.telephony.RadioCapability)>(r268);

     label49:
        $r149 = new java.lang.StringBuilder;

        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_GET_RADIO_CAPABILITY: phone rc: ");

        virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r268);

        $r152 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r152);

        goto label90;

     label50:
        $r153 = r232.<android.os.Message: java.lang.Object obj>;

        $r154 = (android.os.AsyncResult) $r153;

        $r155 = $r154.<android.os.AsyncResult: java.lang.Object result>;

        $r156 = (java.lang.Integer) $r155;

        $i17 = virtualinvoke $r156.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void processIccRecordEvents(int)>($i17);

        goto label90;

     label51:
        $r157 = r232.<android.os.Message: java.lang.Object obj>;

        r270 = (android.os.AsyncResult) $r157;

        $r158 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r159 = $r158.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z11 = virtualinvoke $r159.<android.telephony.ServiceState: boolean getIsManualSelection()>();

        if $z11 == 0 goto label52;

        $r160 = r270.<android.os.AsyncResult: java.lang.Object result>;

        $r161 = (android.os.Message) $r160;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>($r161);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("SET_NETWORK_SELECTION_AUTOMATIC: set to automatic");

        goto label90;

     label52:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("SET_NETWORK_SELECTION_AUTOMATIC: already automatic, ignore");

        goto label90;

     label53:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("EVENT_CDMA_SUBSCRIPTION_SOURCE_CHANGED");

        $r162 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $i18 = virtualinvoke $r162.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        r0.<com.android.internal.telephony.GsmCdmaPhone: int mCdmaSubscriptionSource> = $i18;

        goto label90;

     label54:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void handleExitEmergencyCallbackMode(android.os.Message)>(r232);

        goto label90;

     label55:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void handleEnterEmergencyCallbackMode(android.os.Message)>(r232);

        goto label90;

     label56:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Event EVENT_RUIM_RECORDS_LOADED Received");

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean updateCurrentCarrierInProvider()>();

        goto label90;

     label57:
        $r163 = r232.<android.os.Message: java.lang.Object obj>;

        r271 = (android.os.AsyncResult) $r163;

        $r164 = r271.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r164 == null goto label58;

        goto label90;

     label58:
        $r165 = r271.<android.os.AsyncResult: java.lang.Object result>;

        r272 = (java.lang.String[]) $r165;

        $r166 = r272[0];

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mImei> = $r166;

        $r167 = r272[1];

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mImeiSv> = $r167;

        $r168 = r272[2];

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mEsn> = $r168;

        $r169 = r272[3];

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mMeid> = $r169;

        goto label90;

     label59:
        $r170 = r232.<android.os.Message: java.lang.Object obj>;

        r273 = (android.os.AsyncResult) $r170;

        $z13 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z13 != 0 goto label60;

        $r180 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r180 == null goto label61;

     label60:
        $r172 = class "Lcom/android/internal/telephony/uicc/IccVmNotSupportedException;";

        $r171 = r273.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z14 = virtualinvoke $r172.<java.lang.Class: boolean isInstance(java.lang.Object)>($r171);

        if $z14 != 0 goto label62;

     label61:
        $z15 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z15 != 0 goto label63;

        $r177 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r177 != null goto label63;

        $r179 = class "Lcom/android/internal/telephony/uicc/IccException;";

        $r178 = r273.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z16 = virtualinvoke $r179.<java.lang.Class: boolean isInstance(java.lang.Object)>($r178);

        if $z16 == 0 goto label63;

     label62:
        $r173 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mVmNumber>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void storeVoiceMailNumber(java.lang.String)>($r173);

        r273.<android.os.AsyncResult: java.lang.Throwable exception> = null;

     label63:
        $r274 = r273.<android.os.AsyncResult: java.lang.Object userObj>;

        r275 = (android.os.Message) $r274;

        if r275 == null goto label90;

        $r175 = r273.<android.os.AsyncResult: java.lang.Object result>;

        $r174 = r273.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r275, $r175, $r174);

        virtualinvoke r275.<android.os.Message: void sendToTarget()>();

        goto label90;

     label64:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Event EVENT_REGISTERED_TO_NETWORK Received");

        $z17 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z17 == 0 goto label90;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void syncClirSetting()>();

        goto label90;

     label65:
        $r181 = r232.<android.os.Message: java.lang.Object obj>;

        r276 = (android.os.AsyncResult) $r181;

        $r182 = r276.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r182 != null goto label66;

        $i19 = r232.<android.os.Message: int arg1>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void saveClirSetting(int)>($i19);

     label66:
        $r183 = r276.<android.os.AsyncResult: java.lang.Object userObj>;

        r277 = (android.os.Message) $r183;

        if r277 == null goto label90;

        $r185 = r276.<android.os.AsyncResult: java.lang.Object result>;

        $r184 = r276.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r277, $r185, $r184);

        virtualinvoke r277.<android.os.Message: void sendToTarget()>();

        goto label90;

     label67:
        $r187 = r232.<android.os.Message: java.lang.Object obj>;

        r278 = (android.os.AsyncResult) $r187;

        $r188 = r278.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r188 != null goto label68;

        $r193 = r278.<android.os.AsyncResult: java.lang.Object result>;

        $r194 = (com.android.internal.telephony.CallForwardInfo[]) $r193;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void handleCfuQueryResult(com.android.internal.telephony.CallForwardInfo[])>($r194);

     label68:
        $r189 = r278.<android.os.AsyncResult: java.lang.Object userObj>;

        r279 = (android.os.Message) $r189;

        if r279 == null goto label90;

        $r191 = r278.<android.os.AsyncResult: java.lang.Object result>;

        $r190 = r278.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r279, $r191, $r190);

        virtualinvoke r279.<android.os.Message: void sendToTarget()>();

        goto label90;

     label69:
        $r195 = r232.<android.os.Message: java.lang.Object obj>;

        r280 = (android.os.AsyncResult) $r195;

        $r196 = r280.<android.os.AsyncResult: java.lang.Object userObj>;

        r281 = (com.android.internal.telephony.GsmCdmaPhone$Cfu) $r196;

        $r197 = r280.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r197 != null goto label71;

        $i20 = r232.<android.os.Message: int arg1>;

        if $i20 != 1 goto label70;

        z22 = 1;

     label70:
        $r203 = r281.<com.android.internal.telephony.GsmCdmaPhone$Cfu: java.lang.String mSetCfNumber>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>(1, z22, $r203);

     label71:
        $r282 = r281.<com.android.internal.telephony.GsmCdmaPhone$Cfu: android.os.Message mOnComplete>;

        if $r282 == null goto label90;

        $r200 = r281.<com.android.internal.telephony.GsmCdmaPhone$Cfu: android.os.Message mOnComplete>;

        $r199 = r280.<android.os.AsyncResult: java.lang.Object result>;

        $r198 = r280.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r200, $r199, $r198);

        $r202 = r281.<com.android.internal.telephony.GsmCdmaPhone$Cfu: android.os.Message mOnComplete>;

        virtualinvoke $r202.<android.os.Message: void sendToTarget()>();

        goto label90;

     label72:
        $r204 = r232.<android.os.Message: java.lang.Object obj>;

        r283 = (android.os.AsyncResult) $r204;

        $r205 = r283.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r205 == null goto label73;

        goto label90;

     label73:
        $r206 = r283.<android.os.AsyncResult: java.lang.Object result>;

        $r207 = (java.lang.String) $r206;

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mImeiSv> = $r207;

        goto label90;

     label74:
        $r208 = r232.<android.os.Message: java.lang.Object obj>;

        r284 = (android.os.AsyncResult) $r208;

        $r209 = r284.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r209 == null goto label75;

        goto label90;

     label75:
        $r210 = r284.<android.os.AsyncResult: java.lang.Object result>;

        $r211 = (java.lang.String) $r210;

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mImei> = $r211;

        goto label90;

     label76:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Event EVENT_RADIO_OFF_OR_NOT_AVAILABLE Received");

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void handleRadioOffOrNotAvailable()>();

        goto label90;

     label77:
        $r212 = r232.<android.os.Message: java.lang.Object obj>;

        $r213 = (android.os.AsyncResult) $r212;

        $r214 = $r213.<android.os.AsyncResult: java.lang.Object result>;

        r285 = (java.lang.String[]) $r214;

        $i21 = lengthof r285;

        if $i21 <= 1 goto label90;

     label78:
        $r215 = r285[0];

        $i22 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r215);

        $r216 = r285[1];

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void onIncomingUSSD(int,java.lang.String)>($i22, $r216);

     label79:
        goto label81;

     label80:
        $r231 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("GsmCdmaPhone", "error parsing USSD");

     label81:
        goto label90;

     label82:
        $r217 = r232.<android.os.Message: java.lang.Object obj>;

        r287 = (android.os.AsyncResult) $r217;

        $r218 = r287.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r218 == null goto label83;

        goto label90;

     label83:
        $r219 = new java.lang.StringBuilder;

        specialinvoke $r219.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Baseband version: ");

        $r221 = r287.<android.os.AsyncResult: java.lang.Object result>;

        virtualinvoke $r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r221);

        $r223 = virtualinvoke $r219.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r223);

        $r224 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r225 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>($r224);

        $i23 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r226 = r287.<android.os.AsyncResult: java.lang.Object result>;

        $r227 = (java.lang.String) $r226;

        virtualinvoke $r225.<android.telephony.TelephonyManager: void setBasebandVersionForPhone(int,java.lang.String)>($i23, $r227);

        goto label90;

     label84:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Event EVENT_RADIO_ON Received");

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void handleRadioOn()>();

        goto label90;

     label85:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean updateCurrentCarrierInProvider()>();

        r289 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getVmSimImsi()>();

        r290 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getSubscriberId()>();

        $z19 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z19 == 0 goto label86;

        if r289 == null goto label87;

     label86:
        if r290 == null goto label87;

        $z20 = virtualinvoke r290.<java.lang.String: boolean equals(java.lang.Object)>(r289);

        if $z20 != 0 goto label87;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void storeVoiceMailNumber(java.lang.String)>(null);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setVmSimImsi(java.lang.String)>(null);

     label87:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void updateVoiceMail()>();

        $r291 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mSimRecordsLoadedRegistrants>;

        virtualinvoke $r291.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        goto label90;

     label88:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Event EVENT_SSN Received");

        $z21 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z21 == 0 goto label90;

        $r228 = r232.<android.os.Message: java.lang.Object obj>;

        r292 = (android.os.AsyncResult) $r228;

        $r229 = r292.<android.os.AsyncResult: java.lang.Object result>;

        r293 = (com.android.internal.telephony.gsm.SuppServiceNotification) $r229;

        $r230 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mSsnRegistrants>;

        virtualinvoke $r230.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r292);

        goto label90;

     label89:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void handleRadioAvailable()>();

     label90:
        return;

        catch java.lang.NumberFormatException from label78 to label79 with label80;
    }

    public boolean handlePinMmi(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0, $z1;
        java.util.concurrent.atomic.AtomicReference $r1, $r7;
        java.lang.Object $r2, $r8;
        com.android.internal.telephony.uicc.UiccCardApplication $r3, $r9;
        java.util.ArrayList $r4;
        android.os.AsyncResult $r5;
        com.android.internal.telephony.RegistrantList $r6;
        com.android.internal.telephony.CallStateException $r10;
        java.lang.String r11;
        com.android.internal.telephony.MmiCode r12;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r11 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r8 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r9 = (com.android.internal.telephony.uicc.UiccCardApplication) $r8;

        r12 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newFromDialString(java.lang.String,com.android.internal.telephony.GsmCdmaPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r11, r0, $r9);

        goto label2;

     label1:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r3 = (com.android.internal.telephony.uicc.UiccCardApplication) $r2;

        r12 = staticinvoke <com.android.internal.telephony.cdma.CdmaMmiCode: com.android.internal.telephony.cdma.CdmaMmiCode newFromDialString(java.lang.String,com.android.internal.telephony.GsmCdmaPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r11, r0, $r3);

     label2:
        if r12 == null goto label7;

        $z1 = interfaceinvoke r12.<com.android.internal.telephony.MmiCode: boolean isPinPukCommand()>();

        if $z1 == 0 goto label7;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        $r6 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mMmiRegistrants>;

        $r5 = new android.os.AsyncResult;

        specialinvoke $r5.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r12, null);

        virtualinvoke $r6.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r5);

     label3:
        interfaceinvoke r12.<com.android.internal.telephony.MmiCode: void processCode()>();

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

     label6:
        return 1;

     label7:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("Mmi is null or unrecognized!");

        return 0;

        catch com.android.internal.telephony.CallStateException from label3 to label4 with label5;
    }

    public void handleTimerInEmergencyCallbackMode(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        long l1;
        java.util.Optional $r2;
        java.lang.Long $r3, $r5;
        java.lang.Object $r4;
        java.lang.Runnable $r6, $r9;
        java.lang.Boolean $r7, $r10;
        com.android.internal.telephony.RegistrantList $r8, $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r15;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 1 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleTimerInEmergencyCallbackMode, unsupported action ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r15);

        goto label3;

     label1:
        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.Runnable mExitEcmRunnable>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void removeCallbacks(java.lang.Runnable)>($r9);

        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mEcmTimerResetRegistrants>;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r11.<com.android.internal.telephony.RegistrantList: void notifyResult(java.lang.Object)>($r10);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setEcmCanceledForEmergency(boolean)>(1);

        goto label3;

     label2:
        $r2 = staticinvoke <android.internal.telephony.sysprop.TelephonyProperties: java.util.Optional ecm_exit_timer()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(300000L);

        $r4 = virtualinvoke $r2.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r3);

        $r5 = (java.lang.Long) $r4;

        l1 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $r6 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.Runnable mExitEcmRunnable>;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean postDelayed(java.lang.Runnable,long)>($r6, l1);

        $r8 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mEcmTimerResetRegistrants>;

        $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r8.<com.android.internal.telephony.RegistrantList: void notifyResult(java.lang.Object)>($r7);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setEcmCanceledForEmergency(boolean)>(0);

     label3:
        return;
    }

    public boolean handleUssdRequest(java.lang.String, android.os.ResultReceiver)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, $z1, $z2, $z3;
        java.util.ArrayList $r1;
        int $i0, $i1;
        android.telephony.ServiceState $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8, $r10, $r11, r12;
        com.android.internal.telephony.CallStateException $r9;
        android.os.ResultReceiver r13;
        com.android.internal.telephony.Phone r14;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder r16;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs $r17;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r12 := @parameter0: java.lang.String;

        r13 := @parameter1: android.os.ResultReceiver;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label9;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        goto label9;

     label1:
        r14 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r14 == null goto label6;

        $r3 = virtualinvoke r14.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i1 = virtualinvoke $r3.<android.telephony.ServiceState: int getState()>();

        if $i1 == 0 goto label2;

        $z2 = virtualinvoke r14.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        if $z2 == 0 goto label6;

     label2:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("handleUssdRequest: attempting over IMS");

        z0 = virtualinvoke r14.<com.android.internal.telephony.Phone: boolean handleUssdRequest(java.lang.String,android.os.ResultReceiver)>(r12, r13);

     label3:
        return z0;

     label4:
        $r9 := @caughtexception;

        $r10 = "cs_fallback";

        $r11 = virtualinvoke $r9.<com.android.internal.telephony.CallStateException: java.lang.String getMessage()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("handleUssdRequest: fallback to CS required");

     label6:
        r16 = new com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder;

        specialinvoke r16.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: void <init>()>();

        $r17 = virtualinvoke r16.<com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder: com.android.internal.telephony.PhoneInternalInterface$DialArgs build()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.PhoneInternalInterface$DialArgs,android.os.ResultReceiver)>(r12, $r17, r13);

     label7:
        return 1;

     label8:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleUssdRequest: exception");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r8);

        return 0;

     label9:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void sendUssdResponse(java.lang.String,java.lang.CharSequence,int,android.os.ResultReceiver)>(r12, null, -1, r13);

        return 1;

        catch com.android.internal.telephony.CallStateException from label2 to label3 with label4;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public boolean isCdmaSubscriptionAppPresent()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.uicc.UiccCardApplication r1;
        int $i0;
        com.android.internal.telephony.uicc.UiccController $r2;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType $r3, $r4, $r5, $r6;
        boolean z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r1 = virtualinvoke $r2.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i0, 2);

        if r1 == null goto label2;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType getType()>();

        $r4 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType APPTYPE_CSIM>;

        if $r3 == $r4 goto label1;

        $r5 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType getType()>();

        $r6 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType APPTYPE_RUIM>;

        if $r5 != $r6 goto label2;

     label1:
        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    public boolean isCspPlmnEnabled()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        boolean z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        z0 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: boolean isCspPlmnEnabled()>();

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isDataSuspended()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;
        com.android.internal.telephony.PhoneConstants$State $r2, $r3;
        com.android.internal.telephony.ServiceStateTracker $r4;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r3 = $r1.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r2 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r3 == $r2 goto label1;

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $z0 = virtualinvoke $r4.<com.android.internal.telephony.ServiceStateTracker: boolean isConcurrentVoiceAndDataAllowed()>();

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isInCall()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.Call$State r1, r2, r3;
        com.android.internal.telephony.GsmCdmaCall $r4, $r5;
        com.android.internal.telephony.Call $r6;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCall getForegroundCall()>();

        r1 = virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r5 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCall getBackgroundCall()>();

        r2 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Call getRingingCall()>();

        r3 = virtualinvoke $r6.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke r1.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r2.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r3.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    public boolean isInEmergencyCall()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0, $z1;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $z1 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCallTracker: boolean isInEmergencyCall()>();

        return $z1;
    }

    public boolean isInEmergencySmsMode()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0, $z1, z2;
        com.android.internal.telephony.Phone $r1, $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = specialinvoke r0.<com.android.internal.telephony.Phone: boolean isInEmergencySmsMode()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.Phone: boolean isInEmergencySmsMode()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public boolean isMinInfoReady()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.ServiceStateTracker $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.ServiceStateTracker: boolean isMinInfoReady()>();

        return $z0;
    }

    public boolean isNotificationOfWfcCallRequired(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.telephony.CarrierConfigManager $r4;
        int $i0, $i1;
        android.os.PersistableBundle r6;
        com.android.internal.telephony.Phone r7;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r4 = (android.telephony.CarrierConfigManager) $r3;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        r6 = virtualinvoke $r4.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        z6 = 1;

        if r6 == null goto label1;

        $z5 = virtualinvoke r6.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("notify_international_call_on_wfc_bool");

        if $z5 == 0 goto label1;

        z7 = 1;

        goto label2;

     label1:
        z7 = 0;

     label2:
        if z7 != 0 goto label3;

        return 0;

     label3:
        r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(int,java.lang.String)>($i1, r1);

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isImsUseEnabled()>();

        if $z1 == 0 goto label4;

        if r7 == null goto label4;

        $z2 = virtualinvoke r7.<com.android.internal.telephony.Phone: boolean isVolteEnabled()>();

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke r7.<com.android.internal.telephony.Phone: boolean isWifiCallingEnabled()>();

        if $z3 == 0 goto label4;

        if z0 != 0 goto label4;

        $r5 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getCountryIso()>();

        $z4 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isInternationalNumber(java.lang.String,java.lang.String)>(r1, $r5);

        if $z4 == 0 goto label4;

        goto label5;

     label4:
        z6 = 0;

     label5:
        return z6;
    }

    public boolean isOtaSpNumber(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, $z1, $z2, z3;
        java.lang.String r3, r4, $r7;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r3 := @parameter0: java.lang.String;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.internal.telephony.Phone: boolean isOtaSpNumber(java.lang.String)>(r3);

        return $z2;

     label1:
        z3 = 0;

        r4 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r3);

        if r4 == null goto label2;

        z0 = staticinvoke <com.android.internal.telephony.GsmCdmaPhone: boolean isIs683OtaSpDialStr(java.lang.String)>(r4);

        z3 = z0;

        if z0 != 0 goto label2;

        z3 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isCarrierOtaSpNum(java.lang.String)>(r4);

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isOtaSpNumber ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r7);

        return z3;
    }

    public boolean isPhoneTypeCdma()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPrecisePhoneType>;

        if $i0 != 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPhoneTypeCdmaLte()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPrecisePhoneType>;

        if $i0 != 6 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPhoneTypeGsm()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPrecisePhoneType>;

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isUserDataEnabled()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.dataconnection.DataEnabledSettings $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DataEnabledSettings mDataEnabledSettings>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.dataconnection.DataEnabledSettings: boolean isProvisioning()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DataEnabledSettings mDataEnabledSettings>;

        $z2 = virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DataEnabledSettings: boolean isProvisioningDataEnabled()>();

        return $z2;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DataEnabledSettings mDataEnabledSettings>;

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.dataconnection.DataEnabledSettings: boolean isUserDataEnabled()>();

        return $z1;
    }

    public boolean isUtEnabled()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.Phone r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        return $z0;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("isUtEnabled: called for GsmCdma");

        return 0;
    }

    public void lambda$handleMessage$0$GsmCdmaPhone(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        $i1 = i0 - 1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void reapplyUiccAppsEnablementIfNeeded(int)>($i1);

        return;
    }

    public boolean needsOtaServiceProvisioning()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, z1;
        com.android.internal.telephony.ServiceStateTracker $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        z1 = 0;

        if z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.ServiceStateTracker: int getOtasp()>();

        if $i0 == 3 goto label2;

        z1 = 1;

     label2:
        return z1;
    }

    public void notifyCallForwardingIndicator()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.PhoneNotifier $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        interfaceinvoke $r1.<com.android.internal.telephony.PhoneNotifier: void notifyCallForwardingChanged(com.android.internal.telephony.Phone)>(r0);

        return;
    }

    public void notifyDisconnect(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.Connection r1;
        com.android.internal.telephony.RegistrantList $r2;
        com.android.internal.telephony.PhoneNotifier $r3;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mDisconnectRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void notifyResult(java.lang.Object)>(r1);

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.Connection: int getDisconnectCause()>();

        $i1 = virtualinvoke r1.<com.android.internal.telephony.Connection: int getPreciseDisconnectCause()>();

        interfaceinvoke $r3.<com.android.internal.telephony.PhoneNotifier: void notifyDisconnectCause(com.android.internal.telephony.Phone,int,int)>(r0, $i0, $i1);

        return;
    }

    public void notifyEcbmTimerReset(java.lang.Boolean)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.Boolean r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.Boolean;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mEcmTimerResetRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void notifyResult(java.lang.Object)>(r1);

        return;
    }

    public void notifyEmergencyCallRegistrants(boolean)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0;
        com.android.internal.telephony.RegistrantList $r1;
        java.lang.Integer $r2;
        int i0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mEmergencyCallToggledRegistrants>;

        i0 = (int) z0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<com.android.internal.telephony.RegistrantList: void notifyResult(java.lang.Object)>($r2);

        return;
    }

    public void notifyLocationChanged(android.telephony.CellIdentity)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.telephony.CellIdentity r1;
        com.android.internal.telephony.PhoneNotifier $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.telephony.CellIdentity;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        interfaceinvoke $r2.<com.android.internal.telephony.PhoneNotifier: void notifyCellLocation(com.android.internal.telephony.Phone,android.telephony.CellIdentity)>(r0, r1);

        return;
    }

    public void notifyNewRingingConnection(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.Connection r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        specialinvoke r0.<com.android.internal.telephony.Phone: void notifyNewRingingConnectionP(com.android.internal.telephony.Connection)>(r1);

        return;
    }

    public void notifyPhoneStateChanged()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.PhoneNotifier $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        interfaceinvoke $r1.<com.android.internal.telephony.PhoneNotifier: void notifyPhoneState(com.android.internal.telephony.Phone)>(r0);

        return;
    }

    public void notifyPreciseCallStateChanged()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        specialinvoke r0.<com.android.internal.telephony.Phone: void notifyPreciseCallStateChangedP()>();

        return;
    }

    public void notifyServiceStateChanged(android.telephony.ServiceState)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.telephony.ServiceState r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.telephony.ServiceState;

        specialinvoke r0.<com.android.internal.telephony.Phone: void notifyServiceStateChangedP(android.telephony.ServiceState)>(r1);

        return;
    }

    public void notifySuppServiceFailed(com.android.internal.telephony.PhoneInternalInterface$SuppService)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.PhoneInternalInterface$SuppService r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: com.android.internal.telephony.PhoneInternalInterface$SuppService;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mSuppServiceFailedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void notifyResult(java.lang.Object)>(r1);

        return;
    }

    public void notifyUnknownConnection(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.Connection r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        specialinvoke r0.<com.android.internal.telephony.Phone: void notifyUnknownConnectionP(com.android.internal.telephony.Connection)>(r1);

        return;
    }

    public void notifyVolteSilentRedial(java.lang.String, int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r7, r12;
        android.os.AsyncResult $r8;
        com.android.internal.telephony.Phone$SilentRedialParam $r9;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs $r10;
        com.android.internal.telephony.RegistrantList $r11;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r12 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyVolteSilentRedial: dialString=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" causeCode=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r7);

        $r8 = new android.os.AsyncResult;

        $r9 = new com.android.internal.telephony.Phone$SilentRedialParam;

        $r10 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.PhoneInternalInterface$DialArgs mDialArgs>;

        specialinvoke $r9.<com.android.internal.telephony.Phone$SilentRedialParam: void <init>(java.lang.String,int,com.android.internal.telephony.PhoneInternalInterface$DialArgs)>(r12, i0, $r10);

        specialinvoke $r8.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r9, null);

        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mVolteSilentRedialRegistrants>;

        virtualinvoke $r11.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r8);

        return;
    }

    public void onMMIDone(com.android.internal.telephony.MmiCode)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.MmiCode r1;
        android.os.ResultReceiver r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r4, $r10, $r18;
        java.lang.String $r7, $r13, $r16, $r21;
        android.os.AsyncResult $r8;
        com.android.internal.telephony.RegistrantList $r9;
        com.android.internal.telephony.MmiCode$State $r14, $r15;
        java.lang.CharSequence $r17;
        com.android.internal.telephony.gsm.GsmMmiCode $r22;
        byte b3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: com.android.internal.telephony.MmiCode;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label1;

        $z2 = interfaceinvoke r1.<com.android.internal.telephony.MmiCode: boolean isUssdRequest()>();

        if $z2 != 0 goto label2;

        $r22 = (com.android.internal.telephony.gsm.GsmMmiCode) r1;

        $z3 = virtualinvoke $r22.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isSsInfo()>();

        if $z3 == 0 goto label1;

        goto label2;

     label1:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onMMIDone: invalid response or already handled; ignoring: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r21);

        goto label6;

     label2:
        r2 = interfaceinvoke r1.<com.android.internal.telephony.MmiCode: android.os.ResultReceiver getUssdCallbackReceiver()>();

        if r2 == null goto label5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onMMIDone: invoking callback: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r13);

        $r14 = interfaceinvoke r1.<com.android.internal.telephony.MmiCode: com.android.internal.telephony.MmiCode$State getState()>();

        $r15 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        if $r14 != $r15 goto label3;

        b3 = 100;

        goto label4;

     label3:
        b3 = -1;

     label4:
        $r16 = interfaceinvoke r1.<com.android.internal.telephony.MmiCode: java.lang.String getDialString()>();

        $r17 = interfaceinvoke r1.<com.android.internal.telephony.MmiCode: java.lang.CharSequence getMessage()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void sendUssdResponse(java.lang.String,java.lang.CharSequence,int,android.os.ResultReceiver)>($r16, $r17, b3, r2);

        goto label6;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onMMIDone: notifying registrants: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r7);

        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mMmiCompleteRegistrants>;

        $r8 = new android.os.AsyncResult;

        specialinvoke $r8.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r1, null);

        virtualinvoke $r9.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r8);

     label6:
        return;
    }

    protected void onUpdateIccAvailability()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.uicc.UiccController $r1, $r2, $r3, $r23;
        boolean $z0, $z1, $z3, $z4, $z5, $z6;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r4, $r12;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType $r6;
        java.lang.String $r8, $r15, r38;
        java.util.concurrent.atomic.AtomicReference $r9, $r10, $r18, $r20, $r21, $r33;
        com.android.internal.telephony.IccPhoneBookInterfaceManager $r11, $r22;
        android.content.Context $r16;
        android.telephony.TelephonyManager $r17;
        java.lang.Object $r19, $r34;
        com.android.internal.telephony.uicc.IccRecords $r24, $r25, r37;
        com.android.internal.telephony.uicc.UiccCardApplication r26, r29, r31, r32, r35;
        com.android.internal.telephony.uicc.IsimUiccRecords r27;
        com.android.internal.telephony.uicc.SIMRecords r28, r30;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        if $r1 != null goto label01;

        return;

     label01:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label02;

        $z5 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z5 == 0 goto label04;

     label02:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r26 = virtualinvoke $r2.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i0, 3);

        r27 = null;

        if r26 == null goto label03;

        $r25 = virtualinvoke r26.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        r27 = (com.android.internal.telephony.uicc.IsimUiccRecords) $r25;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("New ISIM application found");

     label03:
        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords> = r27;

     label04:
        r28 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if r28 == null goto label05;

        virtualinvoke r28.<com.android.internal.telephony.uicc.SIMRecords: void unregisterForRecordsLoaded(android.os.Handler)>(r0);

     label05:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z1 != 0 goto label07;

        $z4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z4 == 0 goto label06;

        goto label07;

     label06:
        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords> = null;

        goto label09;

     label07:
        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i1 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r29 = virtualinvoke $r3.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i1, 1);

        r30 = null;

        if r29 == null goto label08;

        $r24 = virtualinvoke r29.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        r30 = (com.android.internal.telephony.uicc.SIMRecords) $r24;

     label08:
        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords> = r30;

        if r30 == null goto label09;

        virtualinvoke r30.<com.android.internal.telephony.uicc.SIMRecords: void registerForRecordsLoaded(android.os.Handler,int,java.lang.Object)>(r0, 3, null);

     label09:
        r31 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication()>();

        r32 = r31;

        $z6 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z6 != 0 goto label10;

        r32 = r31;

        if r31 != null goto label10;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("can\'t find 3GPP2 application; trying APP_FAM_3GPP");

        $r23 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i3 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        r32 = virtualinvoke $r23.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i3, 1);

     label10:
        $r33 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r34 = virtualinvoke $r33.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r35 = (com.android.internal.telephony.uicc.UiccCardApplication) $r34;

        if r35 == r32 goto label14;

        if r35 == null goto label12;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Removing stale icc objects.");

        $r18 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r19 = virtualinvoke $r18.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r19 == null goto label11;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void unregisterForIccRecordEvents()>();

        $r22 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager mIccPhoneBookIntManager>;

        virtualinvoke $r22.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void updateIccRecords(com.android.internal.telephony.uicc.IccRecords)>(null);

     label11:
        $r20 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        virtualinvoke $r20.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r21 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        virtualinvoke $r21.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

     label12:
        if r32 == null goto label14;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New Uicc application found. type = ");

        $r6 = virtualinvoke r32.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType getType()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r8);

        r37 = virtualinvoke r32.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        virtualinvoke $r9.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r32);

        $r10 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        virtualinvoke $r10.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r37);

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void registerForIccRecordEvents()>();

        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager mIccPhoneBookIntManager>;

        virtualinvoke $r11.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void updateIccRecords(com.android.internal.telephony.uicc.IccRecords)>(r37);

        if r37 == null goto label13;

        r38 = virtualinvoke r37.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getOperatorNumeric()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New simOperatorNumeric = ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r15);

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r38);

        if $z3 != 0 goto label13;

        $r16 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r17 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>($r16);

        $i2 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        virtualinvoke $r17.<android.telephony.TelephonyManager: void setSimOperatorNumericForPhone(int,java.lang.String)>($i2, r38);

     label13:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean updateCurrentCarrierInProvider()>();

     label14:
        $i4 = <com.android.internal.telephony.GsmCdmaPhone: int ENABLE_UICC_APPS_MAX_RETRIES>;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void reapplyUiccAppsEnablementIfNeeded(int)>($i4);

        return;
    }

    protected void phoneObjectUpdater(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10, i11;
        java.lang.StringBuilder $r1, $r16, $r21, $r26, $r33, $r40, $r47;
        java.lang.String $r4, $r9, $r18, $r20, $r25, $r30, $r32, $r37, $r39, $r44, $r46, $r50;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, z8, $z9;
        android.content.Context $r5, $r12;
        java.lang.Object $r6;
        android.telephony.CarrierConfigManager $r7;
        android.content.Intent $r8;
        android.os.UserHandle $r11;
        com.android.internal.telephony.CommandsInterface $r13, $r14, $r15;
        android.os.PersistableBundle r52;
        com.android.internal.telephony.uicc.UiccProfile r59;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i8 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: newVoiceRadioTech=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r4);

        $z0 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>(i8);

        if $z0 != 0 goto label01;

        i9 = i8;

        if i8 != 0 goto label05;

     label01:
        $r5 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r7 = (android.telephony.CarrierConfigManager) $r6;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        r52 = virtualinvoke $r7.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i1);

        if r52 == null goto label04;

        i0 = virtualinvoke r52.<android.os.PersistableBundle: int getInt(java.lang.String)>("volte_replacement_rat_int");

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: volteReplacementRat=");

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r50);

        i9 = i8;

        if i0 == 0 goto label03;

        $z3 = staticinvoke <android.telephony.ServiceState: boolean isGsm(int)>(i0);

        if $z3 != 0 goto label02;

        i9 = i8;

        $z4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isCdmaSubscriptionAppPresent()>();

        if $z4 == 0 goto label03;

     label02:
        i9 = i0;

     label03:
        goto label05;

     label04:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("phoneObjectUpdater: didn\'t get volteReplacementRat from carrier config");

        i9 = i8;

     label05:
        $i10 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mRilVersion>;

        if $i10 != 6 goto label07;

        $i6 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getLteOnCdmaMode()>();

        if $i6 != 1 goto label07;

        $i7 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        if $i7 != 2 goto label06;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: LTE ON CDMA property is set. Use CDMA Phone newVoiceRadioTech=");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mActivePhone=");

        $r44 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getPhoneName()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r46);

        return;

     label06:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: LTE ON CDMA property is set. Switch to CDMALTEPhone newVoiceRadioTech=");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mActivePhone=");

        $r37 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getPhoneName()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r39);

        i11 = 6;

        goto label12;

     label07:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isShuttingDown()>();

        if $z1 == 0 goto label08;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Device is shutting down. No need to switch phone now.");

        return;

     label08:
        z5 = staticinvoke <android.telephony.ServiceState: boolean isCdma(int)>(i9);

        z6 = staticinvoke <android.telephony.ServiceState: boolean isGsm(int)>(i9);

        if z5 == 0 goto label09;

        $i5 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        if $i5 == 2 goto label10;

     label09:
        if z6 == 0 goto label11;

        $i4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        if $i4 != 1 goto label11;

     label10:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: No change ignore, newVoiceRadioTech=");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mActivePhone=");

        $r30 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getPhoneName()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r32);

        return;

     label11:
        i11 = i9;

        if z5 != 0 goto label12;

        i11 = i9;

        if z6 != 0 goto label12;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: newVoiceRadioTech=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match either CDMA or GSM - error! No phone change");

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>($r25);

        return;

     label12:
        if i11 != 0 goto label13;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: Unknown rat ignore,  newVoiceRadioTech=Unknown. mActivePhone=");

        $r18 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getPhoneName()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r20);

        return;

     label13:
        z8 = 0;

        $z2 = r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mResetModemOnRadioTechnologyChange>;

        if $z2 == 0 goto label14;

        z8 = 0;

        $r14 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $i3 = interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i3 != 1 goto label14;

        z8 = 1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("phoneObjectUpdater: Setting Radio Power to Off");

        $r15 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r15.<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>(0, null);

     label14:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void switchVoiceRadioTech(int)>(i11);

        $z9 = r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mResetModemOnRadioTechnologyChange>;

        if $z9 == 0 goto label15;

        if z8 == 0 goto label15;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("phoneObjectUpdater: Resetting Radio");

        $r13 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>(z8, null);

     label15:
        r59 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccProfile getUiccProfile()>();

        if r59 == null goto label16;

        virtualinvoke r59.<com.android.internal.telephony.uicc.UiccProfile: void setVoiceRadioTech(int)>(i11);

     label16:
        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.RADIO_TECHNOLOGY");

        $r9 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getPhoneName()>();

        virtualinvoke $r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("phoneName", $r9);

        $i2 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int)>($r8, $i2);

        $r12 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r11 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r12.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r8, $r11);

        return;
    }

    public void registerForCallWaiting(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.GsmCdmaCallTracker $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaCallTracker: void registerForCallWaiting(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForCdmaOtaStatusChange(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void registerForCdmaOtaProvision(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForEcmTimerReset(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mEcmTimerResetRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSimRecordsLoaded(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mSimRecordsLoadedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSubscriptionInfoReady(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.ServiceStateTracker $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r3.<com.android.internal.telephony.ServiceStateTracker: void registerForSubscriptionInfoReady(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSuppServiceNotification(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mSsnRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForVolteSilentRedial(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mVolteSilentRedialRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void rejectCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCallTracker: void rejectCall()>();

        return;
    }

    public void resetCarrierKeysForImsiEncryption()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int $i0;
        android.content.Context $r1;
        com.android.internal.telephony.CarrierInfoManager $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierInfoManager mCIM>;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        virtualinvoke $r2.<com.android.internal.telephony.CarrierInfoManager: void resetCarrierKeysForImsiEncryption(android.content.Context,int)>($r1, $i0);

        return;
    }

    public void resolveSubscriptionCarrierId(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.CarrierResolver $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierResolver mCarrierResolver>;

        virtualinvoke $r2.<com.android.internal.telephony.CarrierResolver: void resolveSubscriptionCarrierId(java.lang.String)>(r1);

        return;
    }

    public void sendBurstDtmf(java.lang.String, int, int, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r12;
        int i0, i1, $i2, i6;
        android.os.Message r2;
        boolean $z1, $z2, z3;
        com.android.internal.telephony.GsmCdmaCallTracker $r4;
        com.android.internal.telephony.PhoneConstants$State $r5, $r6;
        com.android.internal.telephony.CommandsInterface $r7;
        char $c3, $c4;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Message;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("[GsmCdmaPhone] sendBurstDtmf() is a CDMA method");

        goto label5;

     label1:
        i6 = 0;

     label2:
        z3 = 1;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i6 >= $i2 goto label4;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>($c3);

        if $z2 != 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendDtmf called with invalid character \'");

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r12);

        z3 = 0;

        goto label4;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r6 = $r4.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r5 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        if $r6 != $r5 goto label5;

        if z3 == 0 goto label5;

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>(r1, i0, i1, r2);

     label5:
        return;
    }

    public void sendDtmf(char)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        char c0;
        boolean $z0;
        com.android.internal.telephony.GsmCdmaCallTracker $r2;
        com.android.internal.telephony.PhoneConstants$State $r3, $r4;
        com.android.internal.telephony.CommandsInterface $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>(c0);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendDtmf called with invalid character \'");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>($r10);

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r4 = $r2.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r3 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        if $r4 != $r3 goto label2;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void sendDtmf(char,android.os.Message)>(c0, null);

     label2:
        return;
    }

    public void sendEmergencyCallStateChange(boolean)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, $z1, $z2;
        android.content.Intent $r1;
        int $i0;
        android.os.UserHandle $r3;
        android.content.Context $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logi(java.lang.String)>("sendEmergencyCallStateChange - skip for non-cdma");

        return;

     label1:
        $z2 = r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mBroadcastEmergencyCallStateChanges>;

        if $z2 == 0 goto label2;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.EMERGENCY_CALL_STATE_CHANGED");

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.telephony.extra.PHONE_IN_EMERGENCY_CALL", z0);

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int)>($r1, $i0);

        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r3 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r4.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r1, $r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendEmergencyCallStateChange: callActive ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r8);

     label2:
        return;
    }

    public void sendUssdResponse(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.gsm.GsmMmiCode r2;
        boolean $z0;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        com.android.internal.telephony.uicc.UiccCardApplication $r5;
        java.util.ArrayList $r6;
        android.os.AsyncResult $r7;
        com.android.internal.telephony.RegistrantList $r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r5 = (com.android.internal.telephony.uicc.UiccCardApplication) $r4;

        r2 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newFromUssdUserInput(java.lang.String,com.android.internal.telephony.GsmCdmaPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r1, r0, $r5);

        $r6 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r8 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mMmiRegistrants>;

        $r7 = new android.os.AsyncResult;

        specialinvoke $r7.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r8.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r7);

        virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: void sendUssd(java.lang.String)>(r1);

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("sendUssdResponse: not possible in CDMA");

     label2:
        return;
    }

    public void setBroadcastEmergencyCallStateChanges(boolean)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.GsmCdmaPhone: boolean mBroadcastEmergencyCallStateChanges> = z0;

        return;
    }

    public void setCallBarring(java.lang.String, boolean, java.lang.String, android.os.Message, int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, r2;
        boolean z0, $z1, $z2;
        android.os.Message r3;
        int i0;
        com.android.internal.telephony.Phone r4;
        com.android.internal.telephony.CommandsInterface $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Message;

        i0 := @parameter4: int;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label2;

        r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r4 == null goto label1;

        $z2 = virtualinvoke r4.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        if $z2 == 0 goto label1;

        virtualinvoke r4.<com.android.internal.telephony.Phone: void setCallBarring(java.lang.String,boolean,java.lang.String,android.os.Message,int)>(r1, z0, r2, r3, i0);

        return;

     label1:
        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>(r1, z0, r2, i0, r3);

        goto label3;

     label2:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("setCallBarringOption: not possible in CDMA");

     label3:
        return;
    }

    public void setCallForwardingOption(int, int, java.lang.String, int, int, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, i1, i2, i3, $i4, i5;
        java.lang.String r1;
        com.android.internal.telephony.Phone r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.internal.telephony.CommandsInterface $r3;
        com.android.internal.telephony.GsmCdmaPhone$Cfu $r4;
        android.telephony.ServiceState $r5;
        com.android.internal.telephony.CommandException $r6;
        android.os.Message r8;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r8 := @parameter5: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label2;

        $z5 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isImsUtEnabledOverCdma()>();

        if $z5 == 0 goto label1;

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("setCallForwardingOption: not possible in CDMA without IMS");

        $r6 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r8, null, $r6);

        virtualinvoke r8.<android.os.Message: void sendToTarget()>();

        goto label6;

     label2:
        r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r2 == null goto label4;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i4 = virtualinvoke $r5.<android.telephony.ServiceState: int getState()>();

        if $i4 == 0 goto label3;

        $z4 = virtualinvoke r2.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        if $z4 == 0 goto label4;

     label3:
        virtualinvoke r2.<com.android.internal.telephony.Phone: void setCallForwardingOption(int,int,java.lang.String,int,int,android.os.Message)>(i0, i1, r1, i2, i3, r8);

        return;

     label4:
        $z1 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isValidCommandInterfaceCFAction(int)>(i0);

        if $z1 == 0 goto label6;

        $z2 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isValidCommandInterfaceCFReason(int)>(i1);

        if $z2 == 0 goto label6;

        if i1 != 0 goto label5;

        $r4 = new com.android.internal.telephony.GsmCdmaPhone$Cfu;

        specialinvoke $r4.<com.android.internal.telephony.GsmCdmaPhone$Cfu: void <init>(java.lang.String,android.os.Message)>(r1, r8);

        $z3 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isCfEnable(int)>(i0);

        i5 = (int) $z3;

        r8 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(12, i5, 0, $r4);

        goto label5;

     label5:
        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>(i0, i1, i2, r1, i3, r8);

     label6:
        return;
    }

    public void setCallForwardingOption(int, int, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setCallForwardingOption(int,int,java.lang.String,int,int,android.os.Message)>(i0, i1, r1, 1, i2, r2);

        return;
    }

    public void setCallWaiting(boolean, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, $z1, $z2, $z3;
        android.os.Message r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.telephony.CarrierConfigManager $r4;
        int $i0, $i1, i2;
        com.android.internal.telephony.CommandsInterface $r5;
        android.telephony.ServiceState $r6;
        com.android.internal.telephony.CommandException $r7;
        com.android.internal.telephony.Phone r9;
        android.os.PersistableBundle r10;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 != 0 goto label2;

        $z3 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isImsUtEnabledOverCdma()>();

        if $z3 == 0 goto label1;

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("method setCallWaiting is NOT supported in CDMA without IMS!");

        $r7 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r1, null, $r7);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        goto label6;

     label2:
        r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r9 == null goto label4;

        $r6 = virtualinvoke r9.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i1 = virtualinvoke $r6.<android.telephony.ServiceState: int getState()>();

        if $i1 == 0 goto label3;

        $z2 = virtualinvoke r9.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        if $z2 == 0 goto label4;

     label3:
        virtualinvoke r9.<com.android.internal.telephony.Phone: void setCallWaiting(boolean,android.os.Message)>(z0, r1);

        return;

     label4:
        i2 = 1;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r4 = (android.telephony.CarrierConfigManager) $r3;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        r10 = virtualinvoke $r4.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        if r10 == null goto label5;

        i2 = virtualinvoke r10.<android.os.PersistableBundle: int getInt(java.lang.String,int)>("call_waiting_service_class_int", 1);

     label5:
        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void setCallWaiting(boolean,int,android.os.Message)>(z0, i2, r1);

     label6:
        return;
    }

    public void setCarrierInfoForImsiEncryption(android.telephony.ImsiEncryptionInfo)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.telephony.ImsiEncryptionInfo r1;
        int $i0;
        android.content.Context $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.telephony.ImsiEncryptionInfo;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $i0 = r0.<com.android.internal.telephony.GsmCdmaPhone: int mPhoneId>;

        staticinvoke <com.android.internal.telephony.CarrierInfoManager: void setCarrierInfoForImsiEncryption(android.telephony.ImsiEncryptionInfo,android.content.Context,int)>(r1, $r2, $i0);

        return;
    }

    public void setCarrierTestOverride(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, r8, r13;
        com.android.internal.telephony.CarrierResolver $r9, $r10;
        boolean $z0, $z1;
        java.util.concurrent.atomic.AtomicReference $r11;
        java.lang.Object $r12;
        com.android.internal.telephony.uicc.IccRecords r14;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r13 := @parameter7: java.lang.String;

        r8 := @parameter8: java.lang.String;

        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierResolver mCarrierResolver>;

        virtualinvoke $r9.<com.android.internal.telephony.CarrierResolver: void setTestOverrideApn(java.lang.String)>(r8);

        $r10 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierResolver mCarrierResolver>;

        virtualinvoke $r10.<com.android.internal.telephony.CarrierResolver: void setTestOverrideCarrierPriviledgeRule(java.lang.String)>(r13);

        r14 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r12 = virtualinvoke $r11.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r14 = (com.android.internal.telephony.uicc.IccRecords) $r12;

        goto label3;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z1 == 0 goto label2;

        r14 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        goto label3;

     label2:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("setCarrierTestOverride fails in CDMA only");

     label3:
        if r14 == null goto label4;

        virtualinvoke r14.<com.android.internal.telephony.uicc.IccRecords: void setCarrierTestOverride(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5, r6, r7);

     label4:
        return;
    }

    public void setCellBroadcastSmsConfig(int[], android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int[] r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("[GsmCdmaPhone] setCellBroadcastSmsConfig() is obsolete; use SmsManager");

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void setDataRoamingEnabled(boolean)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0;
        com.android.internal.telephony.dataconnection.DcTracker $r1, $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(1);

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(1);

        virtualinvoke $r2.<com.android.internal.telephony.dataconnection.DcTracker: void setDataRoamingEnabledByUser(boolean)>(z0);

     label1:
        return;
    }

    public void setImsRegistrationState(boolean)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0;
        com.android.internal.telephony.ServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.ServiceStateTracker: void setImsRegistrationState(boolean)>(z0);

        return;
    }

    protected void setIsInEmergencyCall()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCallTracker: void setIsInEmergencyCall()>();

     label1:
        return;
    }

    public boolean setLine1Number(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, r2;
        android.os.Message r3;
        com.android.internal.telephony.uicc.IccRecords r4;
        boolean $z0;
        java.util.concurrent.atomic.AtomicReference $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r4 = (com.android.internal.telephony.uicc.IccRecords) $r6;

        if r4 == null goto label1;

        virtualinvoke r4.<com.android.internal.telephony.uicc.IccRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>(r1, r2, r3);

        return 1;

     label1:
        return 0;

     label2:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("setLine1Number: not possible in CDMA");

        return 0;
    }

    public void setLinkCapacityReportingCriteria(int[], int[], int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int[] r1, r2;
        int i0;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void setLinkCapacityReportingCriteria(int,int,int,int[],int[],int,android.os.Message)>(3000, 50, 50, r1, r2, i0, null);

        return;
    }

    public void setMute(boolean)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCallTracker: void setMute(boolean)>(z0);

        return;
    }

    public void setOnEcbModeExitResponse(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Registrant mEcmExitRespRegistrant> = $r3;

        return;
    }

    public boolean setOperatorBrandOverride(java.lang.String)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r8;
        com.android.internal.telephony.uicc.UiccCard r2;
        boolean z0;
        com.android.internal.telephony.uicc.UiccController $r3, $r4;
        int $i0, $i1;
        android.content.Context $r5;
        android.telephony.TelephonyManager $r6;
        com.android.internal.telephony.ServiceStateTracker $r7, $r9;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        if $r3 != null goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        r2 = virtualinvoke $r4.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard(int)>($i0);

        if r2 != null goto label2;

        return 0;

     label2:
        z0 = virtualinvoke r2.<com.android.internal.telephony.uicc.UiccCard: boolean setOperatorBrandOverride(java.lang.String)>(r1);

        if z0 == 0 goto label3;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r6 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>($r5);

        $i1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r7 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getServiceProviderName()>();

        virtualinvoke $r6.<android.telephony.TelephonyManager: void setSimOperatorNameForPhone(int,java.lang.String)>($i1, $r8);

        $r9 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r9.<com.android.internal.telephony.ServiceStateTracker: void pollState()>();

     label3:
        return z0;
    }

    public void setOutgoingCallerIdDisplay(int, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, $i1;
        android.os.Message r1, $r4;
        com.android.internal.telephony.Phone r2;
        boolean $z0, $z1;
        com.android.internal.telephony.CommandsInterface $r3;
        android.telephony.ServiceState $r5;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label3;

        r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if r2 == null goto label2;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i1 = virtualinvoke $r5.<android.telephony.ServiceState: int getState()>();

        if $i1 == 0 goto label1;

        $z1 = virtualinvoke r2.<com.android.internal.telephony.Phone: boolean isUtEnabled()>();

        if $z1 == 0 goto label2;

     label1:
        virtualinvoke r2.<com.android.internal.telephony.Phone: void setOutgoingCallerIdDisplay(int,android.os.Message)>(i0, r1);

        return;

     label2:
        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(18, i0, 0, r1);

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void setCLIR(int,android.os.Message)>(i0, $r4);

        goto label4;

     label3:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>("setOutgoingCallerIdDisplay: not possible in CDMA");

     label4:
        return;
    }

    public void setRadioPower(boolean, boolean, boolean, boolean)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean z0, z1, z2, z3;
        com.android.internal.telephony.ServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.ServiceStateTracker: void setRadioPower(boolean,boolean,boolean,boolean)>(z0, z1, z2, z3);

        return;
    }

    public void setSignalStrengthReportingCriteria(int, int[], int, boolean)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, i1;
        int[] r1;
        boolean z0;
        android.telephony.SignalThresholdInfo $r2;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = new android.telephony.SignalThresholdInfo;

        specialinvoke $r2.<android.telephony.SignalThresholdInfo: void <init>(int,int,int,int[],boolean)>(i0, 3000, 2, r1, z0);

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void setSignalStrengthReportingCriteria(android.telephony.SignalThresholdInfo,int,android.os.Message)>($r2, i1, null);

        return;
    }

    public void setTTYMode(int, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2, $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.Phone: void setTTYMode(int,android.os.Message)>(i0, r1);

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        virtualinvoke $r3.<com.android.internal.telephony.Phone: void setTTYMode(int,android.os.Message)>(i0, r1);

     label1:
        return;
    }

    public void setUiTTYMode(int, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2, $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        virtualinvoke $r3.<com.android.internal.telephony.Phone: void setUiTTYMode(int,android.os.Message)>(i0, r1);

     label1:
        return;
    }

    public void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        java.lang.String r1, $r5, r7;
        android.os.Message r2, r8;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        boolean $z0;
        com.android.internal.telephony.uicc.SIMRecords $r6;
        com.android.internal.telephony.uicc.IccRecords r9, r10;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: android.os.Message;

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mVmNumber> = r7;

        r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(20, 0, 0, r8);

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r9 = (com.android.internal.telephony.uicc.IccRecords) $r4;

        r10 = r9;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label1;

        r10 = r9;

        $r6 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r6 == null goto label1;

        r10 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

     label1:
        if r10 == null goto label2;

        $r5 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mVmNumber>;

        virtualinvoke r10.<com.android.internal.telephony.uicc.IccRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>(r1, $r5, r2);

     label2:
        return;
    }

    public void setVoiceMessageWaiting(int, int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, i1;
        com.android.internal.telephony.uicc.IccRecords r1;
        boolean $z0;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void setVoiceMessageWaiting(int,int)>(i0, i1);

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("SIM Records not found, MWI not updated");

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setVoiceMessageCount(int)>(i1);

     label4:
        return;
    }

    public boolean shouldForceAutoNetworkSelect()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0, i1, i2;
        android.content.ContentResolver r1;
        boolean $z0, $z1;
        android.content.Context $r2;
        java.lang.StringBuilder $r3, $r7, $r11, $r15;
        java.lang.String $r6, $r10, $r14, $r18;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i1 = <com.android.internal.telephony.Phone: int PREFERRED_NT_MODE>;

        i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("preferred_network_mode");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, $r6, i1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shouldForceAutoNetworkSelect in mode = ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r10);

        $z1 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isManualSelProhibitedInGlobalMode()>();

        if $z1 == 0 goto label3;

        if i2 == 10 goto label2;

        if i2 != 7 goto label3;

     label2:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Should force auto network select mode = ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r18);

        return 1;

     label3:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Should not force auto network select mode = ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r14);

        return 0;
    }

    public com.android.internal.telephony.Connection startConference(java.lang.String[], com.android.internal.telephony.PhoneInternalInterface$DialArgs) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.Phone r1;
        boolean z0;
        java.lang.StringBuilder $r3, $r9;
        java.lang.String $r6, $r16, $r18;
        com.android.internal.telephony.CallStateException $r7, $r8, $r17;
        int $i0;
        java.lang.StackTraceElement[] $r19;
        java.lang.String[] r20;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs r21;
        com.android.internal.telephony.Connection r22;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r20 := @parameter0: java.lang.String[];

        r21 := @parameter1: com.android.internal.telephony.PhoneInternalInterface$DialArgs;

        r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone mImsPhone>;

        z0 = specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean useImsForCall(com.android.internal.telephony.PhoneInternalInterface$DialArgs)>(r21);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("useImsForCall=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r6);

        if z0 == 0 goto label4;

     label1:
        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>("Trying IMS PS Conference call");

        r22 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Connection startConference(java.lang.String[],com.android.internal.telephony.PhoneInternalInterface$DialArgs)>(r20, r21);

     label2:
        return r22;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMS PS conference call exception ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("useImsForCall =");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", imsPhone =");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r16);

        $r17 = new com.android.internal.telephony.CallStateException;

        $i0 = virtualinvoke $r8.<com.android.internal.telephony.CallStateException: int getError()>();

        $r18 = virtualinvoke $r8.<com.android.internal.telephony.CallStateException: java.lang.String getMessage()>();

        specialinvoke $r17.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>($i0, $r18);

        $r19 = virtualinvoke $r8.<com.android.internal.telephony.CallStateException: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r17.<com.android.internal.telephony.CallStateException: void setStackTrace(java.lang.StackTraceElement[])>($r19);

        throw $r17;

     label4:
        $r7 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r7.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(1, "cannot dial conference call in out of service");

        throw $r7;

        catch com.android.internal.telephony.CallStateException from label1 to label2 with label3;
    }

    public void startDtmf(char)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        char c0;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>(c0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startDtmf called with invalid character \'");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void loge(java.lang.String)>($r7);

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void startDtmf(char,android.os.Message)>(c0, null);

     label2:
        return;
    }

    public void startNetworkScan(android.telephony.NetworkScanRequest, android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.telephony.NetworkScanRequest r1;
        android.os.Message r2;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.telephony.NetworkScanRequest;

        r2 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void startNetworkScan(android.telephony.NetworkScanRequest,android.os.Message)>(r1, r2);

        return;
    }

    public void stopDtmf()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.CommandsInterface $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void stopDtmf(android.os.Message)>(null);

        return;
    }

    public void stopNetworkScan(android.os.Message)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void stopNetworkScan(android.os.Message)>(r1);

        return;
    }

    public boolean supports3gppCallForwardingWhileRoaming()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.PersistableBundle r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.telephony.CarrierConfigManager $r4;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r4 = (android.telephony.CarrierConfigManager) $r3;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        r1 = virtualinvoke $r4.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.PersistableBundle: boolean getBoolean(java.lang.String,boolean)>("support_3gpp_call_forwarding_while_roaming_bool", 1);

        return $z0;

     label1:
        return 1;
    }

    public void switchHoldingAndActive() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.GsmCdmaCallTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaCallTracker: void switchWaitingOrHoldingAndActive()>();

        return;
    }

    public void unregisterForCallWaiting(android.os.Handler)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        com.android.internal.telephony.GsmCdmaCallTracker $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaCallTracker: void unregisterForCallWaiting(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForCdmaOtaStatusChange(android.os.Handler)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void unregisterForCdmaOtaProvision(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForEcmTimerReset(android.os.Handler)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mEcmTimerResetRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSimRecordsLoaded(android.os.Handler)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mSimRecordsLoadedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSubscriptionInfoReady(android.os.Handler)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        com.android.internal.telephony.ServiceStateTracker $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r2.<com.android.internal.telephony.ServiceStateTracker: void unregisterForSubscriptionInfoReady(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSuppServiceNotification(android.os.Handler)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mSsnRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForVolteSilentRedial(android.os.Handler)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.RegistrantList mVolteSilentRedialRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unsetOnEcbModeExitResponse(android.os.Handler)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        android.os.Handler r1;
        com.android.internal.telephony.Registrant $r2;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Registrant mEcmExitRespRegistrant>;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void clear()>();

        return;
    }

    public boolean updateCurrentCarrierInProvider()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        long l0, $l4;
        android.content.ContentValues r1;
        int $i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r9, r15;
        boolean $z0;
        byte $b5;
        android.net.Uri $r10, r17;
        android.content.Context $r11;
        android.content.ContentResolver $r12;
        android.database.SQLException $r14;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $i1 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>();

        l0 = (long) $i1;

        r15 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getOperatorNumeric()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateCurrentCarrierInProvider: mSubId = ");

        $i2 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" currentDds = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" operatorNumeric = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r9);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z0 != 0 goto label4;

        $i3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $l4 = (long) $i3;

        $b5 = $l4 cmp l0;

        if $b5 != 0 goto label4;

     label1:
        $r10 = <android.provider.Telephony$Carriers: android.net.Uri CONTENT_URI>;

        r17 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r10, "current");

        r1 = new android.content.ContentValues;

        specialinvoke r1.<android.content.ContentValues: void <init>()>();

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("numeric", r15);

        $r11 = r0.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r12.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r17, r1);

     label2:
        return 1;

     label3:
        $r14 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GsmCdmaPhone", "Can\'t store current operator", $r14);

     label4:
        return 0;

        catch android.database.SQLException from label1 to label2 with label3;
    }

    protected void updateManualNetworkSelection(com.android.internal.telephony.Phone$NetworkSelectMessage)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, $r5;
        com.android.internal.telephony.Phone$NetworkSelectMessage r6;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        r6 := @parameter0: com.android.internal.telephony.Phone$NetworkSelectMessage;

        i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z0 == 0 goto label1;

        $r5 = r6.<com.android.internal.telephony.Phone$NetworkSelectMessage: java.lang.String operatorNumeric>;

        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mManualNetworkSelectionPlmn> = $r5;

        goto label2;

     label1:
        r0.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String mManualNetworkSelectionPlmn> = "";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot update network selection due to invalid subId ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GsmCdmaPhone", $r4);

     label2:
        return;
    }

    public void updatePhoneObject(int)
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.os.Message $r6;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updatePhoneObject: radioTechnology=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r5);

        $r6 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(42, i0, 0, null);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

    public void updateServiceLocation()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        com.android.internal.telephony.ServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.ServiceStateTracker: void enableSingleLocationUpdate()>();

        return;
    }

    public void updateVoiceMail()
    {
        com.android.internal.telephony.GsmCdmaPhone r0;
        boolean $z0;
        int $i0, $i1, i2, i3;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r8;
        com.android.internal.telephony.uicc.IccRecords r9;

        r0 := @this: com.android.internal.telephony.GsmCdmaPhone;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label3;

        i2 = 0;

        $r1 = r0.<com.android.internal.telephony.GsmCdmaPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r9 = (com.android.internal.telephony.uicc.IccRecords) $r2;

        if r9 == null goto label1;

        i2 = virtualinvoke r9.<com.android.internal.telephony.uicc.IccRecords: int getVoiceMessageCount()>();

     label1:
        i3 = i2;

        if i2 != -2 goto label2;

        i3 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getStoredVoiceMessageCount()>();

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateVoiceMail countVoiceMessages = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subId ");

        $i1 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void logd(java.lang.String)>($r8);

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setVoiceMessageCount(int)>(i3);

        goto label4;

     label3:
        $i0 = virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: int getStoredVoiceMessageCount()>();

        virtualinvoke r0.<com.android.internal.telephony.GsmCdmaPhone: void setVoiceMessageCount(int)>($i0);

     label4:
        return;
    }
}
