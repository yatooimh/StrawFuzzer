class com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy extends java.lang.Object implements com.android.internal.telephony.ICarrierConfigLoader
{
    public static com.android.internal.telephony.ICarrierConfigLoader sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy;

        $r1 = r0.<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.os.PersistableBundle getConfigForSubId(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.ICarrierConfigLoader $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.os.PersistableBundle r10, r11;

        r0 := @this: com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ICarrierConfigLoader");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<com.android.internal.telephony.ICarrierConfigLoader: android.os.PersistableBundle getConfigForSubId(int,java.lang.String)>(i0, r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.os.PersistableBundle: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.os.PersistableBundle) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.os.PersistableBundle getConfigForSubIdWithFeature(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy r0;
        int i0, $i1;
        java.lang.String r1, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        com.android.internal.telephony.ICarrierConfigLoader $r7, $r8;
        java.lang.Throwable $r9;
        android.os.PersistableBundle r11, r12;

        r0 := @this: com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ICarrierConfigLoader");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<com.android.internal.telephony.ICarrierConfigLoader: android.os.PersistableBundle getConfigForSubIdWithFeature(int,java.lang.String,java.lang.String)>(i0, r10, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r5 = <android.os.PersistableBundle: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r12 = (android.os.PersistableBundle) $r6;

     label4:
        goto label6;

     label5:
        r12 = null;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getDefaultCarrierServicePackageName() throws android.os.RemoteException
    {
        com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ICarrierConfigLoader $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ICarrierConfigLoader");

        $r3 = r0.<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ICarrierConfigLoader: java.lang.String getDefaultCarrierServicePackageName()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy r0;

        r0 := @this: com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy;

        return "com.android.internal.telephony.ICarrierConfigLoader";
    }

    public void notifyConfigChangedForSubId(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ICarrierConfigLoader $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ICarrierConfigLoader");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ICarrierConfigLoader: void notifyConfigChangedForSubId(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void overrideConfig(int, android.os.PersistableBundle, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        com.android.internal.telephony.ICarrierConfigLoader $r4, $r5;
        java.lang.Throwable $r6;
        android.os.PersistableBundle r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.os.PersistableBundle;

        z0 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ICarrierConfigLoader");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        b1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.PersistableBundle: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        goto label08;

     label07:
        b1 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r3 = r0.<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z1 != 0 goto label10;

        $r4 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        if $r4 == null goto label10;

        $r5 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ICarrierConfigLoader: void overrideConfig(int,android.os.PersistableBundle,boolean)>(i0, r7, z0);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public void updateConfigForPhoneId(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ICarrierConfigLoader $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ICarrierConfigLoader");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ICarrierConfigLoader$Stub: com.android.internal.telephony.ICarrierConfigLoader getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ICarrierConfigLoader: void updateConfigForPhoneId(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
