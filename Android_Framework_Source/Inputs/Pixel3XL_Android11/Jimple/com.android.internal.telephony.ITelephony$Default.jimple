public class com.android.internal.telephony.ITelephony$Default extends java.lang.Object implements com.android.internal.telephony.ITelephony
{

    public void <init>()
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return null;
    }

    public void cacheMmTelCapabilityProvisioning(int, int, int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        return;
    }

    public void call(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public boolean canChangeDtmfToneLength(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public boolean canConnectTo5GInDsdsMode() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public void carrierActionReportDefaultNetworkStatus(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void carrierActionResetAll(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public void carrierActionSetMeteredApnsEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void carrierActionSetRadioEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public int changeIccLockPassword(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public int checkCarrierPrivilegesForPackage(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void dial(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public boolean disableDataConnectivity() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public void disableIms(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public void disableLocationUpdates() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return;
    }

    public void disableLocationUpdatesForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public void disableVisualVoicemailSmsFilter(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return;
    }

    public boolean doesSwitchMultiSimConfigTriggerReboot(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public boolean enableDataConnectivity() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public void enableIms(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public void enableLocationUpdates() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return;
    }

    public void enableLocationUpdatesForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public boolean enableModemForSlot(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return 0;
    }

    public void enableVideoCalling(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void enableVisualVoicemailSmsFilter(java.lang.String, int, android.telephony.VisualVoicemailSmsFilterSettings) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;
        int i0;
        android.telephony.VisualVoicemailSmsFilterSettings r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telephony.VisualVoicemailSmsFilterSettings;

        return;
    }

    public void enqueueSmsPickResult(java.lang.String, java.lang.String, com.android.internal.telephony.IIntegerConsumer) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;
        com.android.internal.telephony.IIntegerConsumer r3;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.telephony.IIntegerConsumer;

        return;
    }

    public void factoryReset(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public int getActivePhoneType() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public int getActivePhoneTypeForSlot(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.lang.String getAidForAppType(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

    public java.util.List getAllCellInfo(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public android.telephony.CarrierRestrictionRules getAllowedCarriers() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return null;
    }

    public long getAllowedNetworkTypes(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0L;
    }

    public long getAllowedNetworkTypesForReason(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0L;
    }

    public java.lang.String getBoundImsServicePackage(int, boolean, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        return null;
    }

    public int getCalculatedPreferredNetworkType(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public android.telephony.CallForwardingInfo getCallForwarding(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

    public int getCallState() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public int getCallStateForSlot(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public int getCallWaitingStatus(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public int getCardIdForDefaultEuicc(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public int getCarrierIdFromMccMnc(int, java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return 0;
    }

    public int getCarrierIdListVersion(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        android.content.Intent r1;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        return null;
    }

    public int getCarrierPrivilegeStatus(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public int getCarrierPrivilegeStatusForUid(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public int getCdmaEriIconIndex(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public int getCdmaEriIconIndexForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public int getCdmaEriIconMode(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public int getCdmaEriIconModeForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public java.lang.String getCdmaEriText(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public java.lang.String getCdmaEriTextForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public java.lang.String getCdmaMdn(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.lang.String getCdmaMin(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.lang.String getCdmaPrlVersion(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public int getCdmaRoamingMode(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public android.telephony.CellIdentity getCellLocation(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public com.android.internal.telephony.CellNetworkScanResult getCellNetworkScanResults(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public java.util.List getCertsFromCarrierPrivilegeAccessRules(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.util.List getClientRequestStats(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return null;
    }

    public java.lang.String getCurrentPackageName() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return null;
    }

    public int getDataActivationState(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public int getDataActivity() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public int getDataActivityForSubId(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean getDataEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public int getDataNetworkType(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public int getDataNetworkTypeForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public int getDataState() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public int getDataStateForSubId(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public java.lang.String getDeviceId(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String getDeviceIdWithFeature(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public java.lang.String getDeviceSoftwareVersionForSlot(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public long getEffectiveAllowedNetworkTypes(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0L;
    }

    public boolean getEmergencyCallbackMode(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public int getEmergencyNumberDbVersion(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public java.util.Map getEmergencyNumberList(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public java.util.List getEmergencyNumberListTestMode() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return null;
    }

    public java.lang.String getEsn(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.lang.String[] getForbiddenPlmns(int, int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        return null;
    }

    public java.lang.String getImeiForSlot(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public android.telephony.ims.aidl.IImsConfig getImsConfig(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

    public void getImsMmTelFeatureState(int, com.android.internal.telephony.IIntegerConsumer) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        com.android.internal.telephony.IIntegerConsumer r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.telephony.IIntegerConsumer;

        return;
    }

    public void getImsMmTelRegistrationState(int, com.android.internal.telephony.IIntegerConsumer) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        com.android.internal.telephony.IIntegerConsumer r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.telephony.IIntegerConsumer;

        return;
    }

    public void getImsMmTelRegistrationTransportType(int, com.android.internal.telephony.IIntegerConsumer) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        com.android.internal.telephony.IIntegerConsumer r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.telephony.IIntegerConsumer;

        return;
    }

    public int getImsProvisioningInt(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public boolean getImsProvisioningStatusForCapability(int, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return 0;
    }

    public java.lang.String getImsProvisioningString(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

    public int getImsRegTechnologyForMmTel(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public android.telephony.ims.aidl.IImsRegistration getImsRegistration(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

    public java.lang.String getLine1AlphaTagForDisplay(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public java.lang.String getLine1NumberForDisplay(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public int getLteOnCdmaMode(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public int getLteOnCdmaModeForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public java.lang.String getManualNetworkSelectionPlmn(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.lang.String getManufacturerCodeForSlot(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.lang.String getMeidForSlot(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public java.lang.String[] getMergedImsisFromGroup(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return null;
    }

    public java.lang.String[] getMergedSubscriberIds(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public android.telephony.ims.aidl.IImsMmTelFeature getMmTelFeatureAndListen(int, com.android.ims.internal.IImsServiceFeatureCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        com.android.ims.internal.IImsServiceFeatureCallback r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.ims.internal.IImsServiceFeatureCallback;

        return null;
    }

    public java.lang.String getMmsUAProfUrl(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.lang.String getMmsUserAgent(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.util.List getNeighboringCellInfo(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public java.lang.String getNetworkCountryIsoForPhone(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public int getNetworkSelectionMode(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public int getNetworkTypeForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public int getNumberOfModemsWithSimultaneousDataConnections(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public java.util.List getPackagesWithCarrierPrivileges(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.util.List getPackagesWithCarrierPrivilegesForAllPhones() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return null;
    }

    public java.lang.String[] getPcscfAddress(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return null;
    }

    public android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubscriptionId(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public int getPreferredNetworkType(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public int getRadioAccessFamily(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public int getRadioHalVersion() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public int getRadioPowerState(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public android.telephony.ims.aidl.IImsRcsFeature getRcsFeatureAndListen(int, com.android.ims.internal.IImsServiceFeatureCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        com.android.ims.internal.IImsServiceFeatureCallback r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.ims.internal.IImsServiceFeatureCallback;

        return null;
    }

    public boolean getRcsProvisioningStatusForCapability(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public android.telephony.ServiceState getServiceStateForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public android.telephony.SignalStrength getSignalStrength(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.lang.String getSimLocaleForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public int[] getSlotsMapping() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return null;
    }

    public int getSubIdForPhoneAccount(android.telecom.PhoneAccount) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        android.telecom.PhoneAccount r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: android.telecom.PhoneAccount;

        return 0;
    }

    public int getSubIdForPhoneAccountHandle(android.telecom.PhoneAccountHandle, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        android.telecom.PhoneAccountHandle r1;
        java.lang.String r2, r3;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return 0;
    }

    public int getSubscriptionCarrierId(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public java.lang.String getSubscriptionCarrierName(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public int getSubscriptionSpecificCarrierId(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public java.lang.String getSubscriptionSpecificCarrierName(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.util.List getTelephonyHistograms() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return null;
    }

    public java.lang.String getTypeAllocationCodeForSlot(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.util.List getUiccCardsInfo(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public android.telephony.UiccSlotInfo[] getUiccSlotsInfo() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return null;
    }

    public java.lang.String getVisualVoicemailPackageName(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return null;
    }

    public android.os.Bundle getVisualVoicemailSettings(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return null;
    }

    public android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return null;
    }

    public int getVoWiFiModeSetting(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public int getVoWiFiRoamingModeSetting(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public int getVoiceActivationState(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public int getVoiceMessageCountForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public int getVoiceNetworkTypeForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        android.telecom.PhoneAccountHandle r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        return null;
    }

    public boolean handlePinMmi(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public boolean handlePinMmiForSubscriber(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public void handleUssdRequest(int, java.lang.String, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;
        android.os.ResultReceiver r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.ResultReceiver;

        return;
    }

    public boolean hasIccCard() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public boolean hasIccCardUsingSlotIndex(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean iccCloseLogicalChannel(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public boolean iccCloseLogicalChannelBySlot(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public byte[] iccExchangeSimIO(int, int, int, int, int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 := @parameter6: java.lang.String;

        return null;
    }

    public android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        return null;
    }

    public android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        return null;
    }

    public java.lang.String iccTransmitApduBasicChannel(int, java.lang.String, int, int, int, int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        r2 := @parameter7: java.lang.String;

        return null;
    }

    public java.lang.String iccTransmitApduBasicChannelBySlot(int, java.lang.String, int, int, int, int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        r2 := @parameter7: java.lang.String;

        return null;
    }

    public java.lang.String iccTransmitApduLogicalChannel(int, int, int, int, int, int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: java.lang.String;

        return null;
    }

    public java.lang.String iccTransmitApduLogicalChannelBySlot(int, int, int, int, int, int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: java.lang.String;

        return null;
    }

    public int invokeOemRilRequestRaw(byte[], byte[]) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        byte[] r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        return 0;
    }

    public boolean isAdvancedCallingSettingEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isApnMetered(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public boolean isApplicationOnUicc(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public boolean isAvailable(int, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return 0;
    }

    public boolean isCapable(int, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return 0;
    }

    public boolean isConcurrentVoiceAndDataAllowed(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isDataAllowedInVoiceCall(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isDataConnectivityPossible(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isDataEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isDataEnabledForApn(int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        return 0;
    }

    public boolean isDataRoamingEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isEmergencyNumber(java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        return 0;
    }

    public boolean isHearingAidCompatibilitySupported() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public boolean isIccLockEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isImsRegistered(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isInEmergencySmsMode() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public boolean isManualNetworkSelectionAllowed(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isMmTelCapabilityProvisionedInCache(int, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return 0;
    }

    public void isMmTelCapabilitySupported(int, com.android.internal.telephony.IIntegerConsumer, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2;
        com.android.internal.telephony.IIntegerConsumer r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.telephony.IIntegerConsumer;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public boolean isModemEnabledForSlot(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public int isMultiSimSupported(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public boolean isMvnoMatched(int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        return 0;
    }

    public boolean isRadioOn(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public boolean isRadioOnForSubscriber(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public boolean isRadioOnForSubscriberWithFeature(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public boolean isRadioOnWithFeature(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public boolean isRttSupported(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isTetheringApnRequiredForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isTtyModeSupported() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public boolean isTtyOverVolteEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isUserDataEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isVideoCallingEnabled(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public boolean isVideoTelephonyAvailable(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isVoWiFiRoamingSettingEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isVoWiFiSettingEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        android.telecom.PhoneAccountHandle r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        return 0;
    }

    public boolean isVtSettingEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isWifiCallingAvailable(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isWorldPhone(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public boolean needMobileRadioShutdown() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public boolean needsOtaServiceProvisioning() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return 0;
    }

    public void notifyOtaEmergencyNumberDbInstalled() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return;
    }

    public void notifyRcsAutoConfigurationReceived(int, byte[], boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        byte[] r1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        z0 := @parameter2: boolean;

        return;
    }

    public java.lang.String nvReadItem(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return null;
    }

    public boolean nvWriteCdmaPrl(byte[]) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        byte[] r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: byte[];

        return 0;
    }

    public boolean nvWriteItem(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public boolean rebootModem(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public void refreshUiccProfile(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public void registerImsProvisioningChangedCallback(int, android.telephony.ims.aidl.IImsConfigCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        android.telephony.ims.aidl.IImsConfigCallback r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.aidl.IImsConfigCallback;

        return;
    }

    public void registerImsRegistrationCallback(int, android.telephony.ims.aidl.IImsRegistrationCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

        return;
    }

    public void registerMmTelCapabilityCallback(int, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        return;
    }

    public void requestCellInfoUpdate(int, android.telephony.ICellInfoCallback, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        android.telephony.ICellInfoCallback r1;
        java.lang.String r2, r3;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ICellInfoCallback;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        return;
    }

    public void requestCellInfoUpdateWithWorkSource(int, android.telephony.ICellInfoCallback, java.lang.String, java.lang.String, android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        android.telephony.ICellInfoCallback r1;
        java.lang.String r2, r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ICellInfoCallback;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.WorkSource;

        return;
    }

    public void requestModemActivityInfo(android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        android.os.ResultReceiver r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: android.os.ResultReceiver;

        return;
    }

    public int requestNetworkScan(int, android.telephony.NetworkScanRequest, android.os.Messenger, android.os.IBinder, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        android.telephony.NetworkScanRequest r1;
        android.os.Messenger r2;
        android.os.IBinder r3;
        java.lang.String r4, r5;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.NetworkScanRequest;

        r2 := @parameter2: android.os.Messenger;

        r3 := @parameter3: android.os.IBinder;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        return 0;
    }

    public void requestNumberVerification(android.telephony.PhoneNumberRange, long, com.android.internal.telephony.INumberVerificationCallback, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        android.telephony.PhoneNumberRange r1;
        long l0;
        com.android.internal.telephony.INumberVerificationCallback r2;
        java.lang.String r3;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: android.telephony.PhoneNumberRange;

        l0 := @parameter1: long;

        r2 := @parameter2: com.android.internal.telephony.INumberVerificationCallback;

        r3 := @parameter3: java.lang.String;

        return;
    }

    public void requestUserActivityNotification() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return;
    }

    public void resetIms(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public boolean resetModemConfig(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public void resetOtaEmergencyNumberDbFilePath() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return;
    }

    public void sendDialerSpecialCode(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public java.lang.String sendEnvelopeWithStatus(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return null;
    }

    public void sendVisualVoicemailSmsForSubscriber(java.lang.String, java.lang.String, int, java.lang.String, int, java.lang.String, android.app.PendingIntent) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1, r2, r3, r4;
        int i0, i1;
        android.app.PendingIntent r5;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: android.app.PendingIntent;

        return;
    }

    public void setAdvancedCallingSettingEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public int setAllowedCarriers(android.telephony.CarrierRestrictionRules) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        android.telephony.CarrierRestrictionRules r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: android.telephony.CarrierRestrictionRules;

        return 0;
    }

    public boolean setAllowedNetworkTypes(int, long) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        long l1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        return 0;
    }

    public boolean setAllowedNetworkTypesForReason(int, int, long) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        long l2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        return 0;
    }

    public boolean setAlwaysAllowMmsData(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return 0;
    }

    public void setAlwaysReportSignalStrength(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public boolean setBoundImsServiceOverride(int, boolean, int[], java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;
        int[] r1;
        java.lang.String r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: int[];

        r2 := @parameter3: java.lang.String;

        return 0;
    }

    public boolean setCallForwarding(int, android.telephony.CallForwardingInfo) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        android.telephony.CallForwardingInfo r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.CallForwardingInfo;

        return 0;
    }

    public boolean setCallWaitingStatus(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return 0;
    }

    public void setCarrierTestOverride(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, r8, r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: java.lang.String;

        r8 := @parameter8: java.lang.String;

        r9 := @parameter9: java.lang.String;

        return;
    }

    public boolean setCdmaRoamingMode(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public boolean setCdmaSubscriptionMode(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public void setCellInfoListRate(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public void setCepEnabled(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void setDataActivationState(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public boolean setDataAllowedDuringVoiceCall(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return 0;
    }

    public void setDataRoamingEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public int setForbiddenPlmns(int, int, java.util.List, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        java.util.List r1;
        java.lang.String r2, r3;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        return 0;
    }

    public int setIccLockEnabled(int, boolean, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        return 0;
    }

    public int setImsProvisioningInt(int, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return 0;
    }

    public void setImsProvisioningStatusForCapability(int, int, int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        return;
    }

    public int setImsProvisioningString(int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        return 0;
    }

    public void setImsRegistrationState(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean setLine1NumberForDisplayForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public void setMultiSimCarrierRestriction(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void setNetworkSelectionModeAutomatic(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public boolean setNetworkSelectionModeManual(int, com.android.internal.telephony.OperatorInfo, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        com.android.internal.telephony.OperatorInfo r1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.telephony.OperatorInfo;

        z0 := @parameter2: boolean;

        return 0;
    }

    public boolean setOperatorBrandOverride(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public void setPolicyDataEnabled(boolean, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        boolean z0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        return;
    }

    public boolean setPreferredNetworkType(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public boolean setRadio(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        z0 := @parameter0: boolean;

        return 0;
    }

    public void setRadioCapability(android.telephony.RadioAccessFamily[]) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        android.telephony.RadioAccessFamily[] r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: android.telephony.RadioAccessFamily[];

        return;
    }

    public boolean setRadioForSubscriber(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return 0;
    }

    public boolean setRadioPower(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        z0 := @parameter0: boolean;

        return 0;
    }

    public void setRcsProvisioningStatusForCapability(int, int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        return;
    }

    public boolean setRoamingOverride(int, java.util.List, java.util.List, java.util.List, java.util.List) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.util.List r1, r2, r3, r4;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        return 0;
    }

    public void setRttCapabilitySetting(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void setSimPowerStateForSlot(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void setSystemSelectionChannels(java.util.List, int, com.android.internal.telephony.IBooleanConsumer) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.util.List r1;
        int i0;
        com.android.internal.telephony.IBooleanConsumer r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.telephony.IBooleanConsumer;

        return;
    }

    public void setUserDataEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void setVoWiFiModeSetting(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void setVoWiFiNonPersistent(int, boolean, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        return;
    }

    public void setVoWiFiRoamingModeSetting(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void setVoWiFiRoamingSettingEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void setVoWiFiSettingEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void setVoiceActivationState(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public boolean setVoiceMailNumber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public void setVoicemailRingtoneUri(java.lang.String, android.telecom.PhoneAccountHandle, android.net.Uri) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;
        android.telecom.PhoneAccountHandle r2;
        android.net.Uri r3;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.PhoneAccountHandle;

        r3 := @parameter2: android.net.Uri;

        return;
    }

    public void setVoicemailVibrationEnabled(java.lang.String, android.telecom.PhoneAccountHandle, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        java.lang.String r1;
        android.telecom.PhoneAccountHandle r2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.PhoneAccountHandle;

        z0 := @parameter2: boolean;

        return;
    }

    public void setVtSettingEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void shutdownMobileRadios() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return;
    }

    public void stopNetworkScan(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public boolean supplyPinForSubscriber(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public int[] supplyPinReportResultForSubscriber(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return null;
    }

    public boolean supplyPukForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return 0;
    }

    public int[] supplyPukReportResultForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public void switchMultiSimConfig(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public boolean switchSlots(int[]) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int[] r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: int[];

        return 0;
    }

    public void toggleRadioOnOff() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return;
    }

    public void toggleRadioOnOffForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public void unregisterImsFeatureCallback(int, int, com.android.ims.internal.IImsServiceFeatureCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0, i1;
        com.android.ims.internal.IImsServiceFeatureCallback r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.ims.internal.IImsServiceFeatureCallback;

        return;
    }

    public void unregisterImsProvisioningChangedCallback(int, android.telephony.ims.aidl.IImsConfigCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        android.telephony.ims.aidl.IImsConfigCallback r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.aidl.IImsConfigCallback;

        return;
    }

    public void unregisterImsRegistrationCallback(int, android.telephony.ims.aidl.IImsRegistrationCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

        return;
    }

    public void unregisterMmTelCapabilityCallback(int, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        return;
    }

    public void updateEmergencyNumberListTestMode(int, android.telephony.emergency.EmergencyNumber) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;
        android.telephony.emergency.EmergencyNumber r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.emergency.EmergencyNumber;

        return;
    }

    public void updateOtaEmergencyNumberDbFilePath(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        android.os.ParcelFileDescriptor r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        return;
    }

    public void updateServiceLocation() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return;
    }

    public void updateServiceLocationForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        i0 := @parameter0: int;

        return;
    }

    public void userActivity() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Default r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Default;

        return;
    }
}
