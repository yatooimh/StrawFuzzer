class com.android.internal.telephony.ITelephony$Stub$Proxy extends java.lang.Object implements com.android.internal.telephony.ITelephony
{
    public static com.android.internal.telephony.ITelephony sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        $r1 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void cacheMmTelCapabilityProvisioning(int, int, int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b3;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

     label2:
        if z0 == 0 goto label3;

        b3 = 1;

        goto label4;

     label3:
        b3 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b3);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(248, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void cacheMmTelCapabilityProvisioning(int,int,int,boolean)>(i0, i1, i2, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void call(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void call(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean canChangeDtmfToneLength(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(143, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean canChangeDtmfToneLength(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean canConnectTo5GInDsdsMode() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(287, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean canConnectTo5GInDsdsMode()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void carrierActionReportDefaultNetworkStatus(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(185, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void carrierActionReportDefaultNetworkStatus(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void carrierActionResetAll(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(186, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void carrierActionResetAll(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void carrierActionSetMeteredApnsEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(183, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void carrierActionSetMeteredApnsEnabled(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void carrierActionSetRadioEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(184, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void carrierActionSetRadioEnabled(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int changeIccLockPassword(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(283, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int changeIccLockPassword(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int checkCarrierPrivilegesForPackage(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(126, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int checkCarrierPrivilegesForPackage(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(127, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void dial(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void dial(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean disableDataConnectivity() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean disableDataConnectivity()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void disableIms(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(92, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void disableIms(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void disableLocationUpdates() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void disableLocationUpdates()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void disableLocationUpdatesForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void disableLocationUpdatesForSubscriber(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void disableVisualVoicemailSmsFilter(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(56, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: void disableVisualVoicemailSmsFilter(java.lang.String,int)>(r6, i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public boolean doesSwitchMultiSimConfigTriggerReboot(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(263, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean doesSwitchMultiSimConfigTriggerReboot(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean enableDataConnectivity() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean enableDataConnectivity()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void enableIms(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(91, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void enableIms(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void enableLocationUpdates() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void enableLocationUpdates()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void enableLocationUpdatesForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void enableLocationUpdatesForSubscriber(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean enableModemForSlot(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i2;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z2 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if z2 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(259, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean enableModemForSlot(int,boolean)>(i0, z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i2 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void enableVideoCalling(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(141, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void enableVideoCalling(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void enableVisualVoicemailSmsFilter(java.lang.String, int, android.telephony.VisualVoicemailSmsFilterSettings) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.telephony.VisualVoicemailSmsFilterSettings r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.telephony.VisualVoicemailSmsFilterSettings;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.telephony.VisualVoicemailSmsFilterSettings: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(55, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void enableVisualVoicemailSmsFilter(java.lang.String,int,android.telephony.VisualVoicemailSmsFilterSettings)>(r8, i0, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void enqueueSmsPickResult(java.lang.String, java.lang.String, com.android.internal.telephony.IIntegerConsumer) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        com.android.internal.telephony.IIntegerConsumer r2;
        android.os.Parcel r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.telephony.IIntegerConsumer;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        if r2 == null goto label5;

     label3:
        r9 = interfaceinvoke r2.<com.android.internal.telephony.IIntegerConsumer: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r9 = null;

     label6:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(273, r3, null, 1);

        if $z0 != 0 goto label8;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label8;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void enqueueSmsPickResult(java.lang.String,java.lang.String,com.android.internal.telephony.IIntegerConsumer)>(r8, r1, r2);

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void factoryReset(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(162, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void factoryReset(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getActivePhoneType() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getActivePhoneType()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getActivePhoneTypeForSlot(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getActivePhoneTypeForSlot(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.VisualVoicemailSmsFilterSettings r9, r10;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(58, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.telephony.VisualVoicemailSmsFilterSettings: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.telephony.VisualVoicemailSmsFilterSettings) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getAidForAppType(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(172, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getAidForAppType(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getAllCellInfo(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r9;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        java.util.List r10;
        java.util.ArrayList r11;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(69, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: java.util.List getAllCellInfo(java.lang.String,java.lang.String)>(r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = <android.telephony.CellInfo: android.os.Parcelable$Creator CREATOR>;

        r11 = virtualinvoke r3.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r5);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.CarrierRestrictionRules getAllowedCarriers() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.CarrierRestrictionRules r9, r10;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(177, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: android.telephony.CarrierRestrictionRules getAllowedCarriers()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.telephony.CarrierRestrictionRules: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.telephony.CarrierRestrictionRules) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public long getAllowedNetworkTypes(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        long l1, l2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(107, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        l1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: long getAllowedNetworkTypes(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getAllowedNetworkTypesForReason(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        long l2, l3;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(109, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        l2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: long getAllowedNetworkTypesForReason(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l3 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l3;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getBoundImsServicePackage(int, boolean, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        byte b2;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(100, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getBoundImsServicePackage(int,boolean,int)>(i0, z0, i1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int getCalculatedPreferredNetworkType(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(88, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCalculatedPreferredNetworkType(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.CallForwardingInfo getCallForwarding(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, $i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.CallForwardingInfo r9, r10;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(187, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: android.telephony.CallForwardingInfo getCallForwarding(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label5;

        $r4 = <android.telephony.CallForwardingInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.telephony.CallForwardingInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int getCallState() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCallState()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCallStateForSlot(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCallStateForSlot(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCallWaitingStatus(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(189, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCallWaitingStatus(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCardIdForDefaultEuicc(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(198, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int getCardIdForDefaultEuicc(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCarrierIdFromMccMnc(int, java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i2, i3;
        java.lang.String r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(182, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int getCarrierIdFromMccMnc(int,java.lang.String,boolean)>(i0, r7, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int getCarrierIdListVersion(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(208, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCarrierIdListVersion(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.content.Intent r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.content.Intent: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(128, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int getCarrierPrivilegeStatus(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(124, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCarrierPrivilegeStatus(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCarrierPrivilegeStatusForUid(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(125, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCarrierPrivilegeStatusForUid(int,int)>(i1, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCdmaEriIconIndex(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCdmaEriIconIndex(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCdmaEriIconIndexForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCdmaEriIconIndexForSubscriber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCdmaEriIconMode(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCdmaEriIconMode(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCdmaEriIconModeForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCdmaEriIconModeForSubscriber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getCdmaEriText(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8, r9, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String getCdmaEriText(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getCdmaEriTextForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r8, r9, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(44, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String getCdmaEriTextForSubscriber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getCdmaMdn(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(121, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getCdmaMdn(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getCdmaMin(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(122, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getCdmaMin(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getCdmaPrlVersion(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(174, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getCdmaPrlVersion(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCdmaRoamingMode(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(204, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getCdmaRoamingMode(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.CellIdentity getCellLocation(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        com.android.internal.telephony.ITelephony $r7, $r8;
        java.lang.Throwable $r9;
        android.telephony.CellIdentity r11, r12;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<com.android.internal.telephony.ITelephony: android.telephony.CellIdentity getCellLocation(java.lang.String,java.lang.String)>(r10, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r5 = <android.telephony.CellIdentity: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r12 = (android.telephony.CellIdentity) $r6;

     label4:
        goto label6;

     label5:
        r12 = null;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public com.android.internal.telephony.CellNetworkScanResult getCellNetworkScanResults(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, $i1;
        java.lang.String r1, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        com.android.internal.telephony.ITelephony $r7, $r8;
        java.lang.Throwable $r9;
        com.android.internal.telephony.CellNetworkScanResult r11, r12;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(103, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<com.android.internal.telephony.ITelephony: com.android.internal.telephony.CellNetworkScanResult getCellNetworkScanResults(int,java.lang.String,java.lang.String)>(i0, r10, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r5 = <com.android.internal.telephony.CellNetworkScanResult: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r12 = (com.android.internal.telephony.CellNetworkScanResult) $r6;

     label4:
        goto label6;

     label5:
        r12 = null;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.util.List getCertsFromCarrierPrivilegeAccessRules(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;
        java.util.ArrayList r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(240, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.util.List getCertsFromCarrierPrivilegeAccessRules(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getClientRequestStats(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r9;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        java.util.List r10;
        java.util.ArrayList r11;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(192, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: java.util.List getClientRequestStats(java.lang.String,java.lang.String,int)>(r9, r1, i0);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = <android.telephony.ClientRequestStats: android.os.Parcelable$Creator CREATOR>;

        r11 = virtualinvoke r3.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r5);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getCurrentPackageName() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(266, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getCurrentPackageName()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getDataActivationState(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(50, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int getDataActivationState(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getDataActivity() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getDataActivity()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getDataActivityForSubId(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getDataActivityForSubId(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean getDataEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(114, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean getDataEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int getDataNetworkType(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(62, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getDataNetworkType(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getDataNetworkTypeForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(63, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getDataNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getDataState() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getDataState()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getDataStateForSubId(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getDataStateForSubId(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getDeviceId(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(152, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getDeviceId(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getDeviceIdWithFeature(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8, r9, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(153, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String getDeviceIdWithFeature(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getDeviceSoftwareVersionForSlot(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r8, r9, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(158, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String getDeviceSoftwareVersionForSlot(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getEffectiveAllowedNetworkTypes(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        long l1, l2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(110, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        l1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: long getEffectiveAllowedNetworkTypes(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean getEmergencyCallbackMode(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(196, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean getEmergencyCallbackMode(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int getEmergencyNumberDbVersion(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(255, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getEmergencyNumberDbVersion(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.Map getEmergencyNumberList(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        java.lang.Class $r5;
        java.lang.ClassLoader $r6;
        com.android.internal.telephony.ITelephony $r7, $r8;
        java.lang.Throwable $r9;
        java.util.Map r11;
        java.util.HashMap r12;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(238, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<com.android.internal.telephony.ITelephony: java.util.Map getEmergencyNumberList(java.lang.String,java.lang.String)>(r10, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r12 = virtualinvoke r3.<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>($r6);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label5:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getEmergencyNumberListTestMode() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;
        java.util.ArrayList r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(254, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.util.List getEmergencyNumberListTestMode()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getEsn(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(173, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getEsn(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getForbiddenPlmns(int, int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r9, r10;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r8 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(194, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String[] getForbiddenPlmns(int,int,java.lang.String,java.lang.String)>(i0, i1, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getImeiForSlot(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r8, r9, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(154, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String getImeiForSlot(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.ims.aidl.IImsConfig getImsConfig(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        android.telephony.ims.aidl.IImsConfig r8, r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(98, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: android.telephony.ims.aidl.IImsConfig getImsConfig(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <android.telephony.ims.aidl.IImsConfig$Stub: android.telephony.ims.aidl.IImsConfig asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void getImsMmTelFeatureState(int, com.android.internal.telephony.IIntegerConsumer) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        com.android.internal.telephony.IIntegerConsumer r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: com.android.internal.telephony.IIntegerConsumer;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.internal.telephony.IIntegerConsumer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(101, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void getImsMmTelFeatureState(int,com.android.internal.telephony.IIntegerConsumer)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void getImsMmTelRegistrationState(int, com.android.internal.telephony.IIntegerConsumer) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        com.android.internal.telephony.IIntegerConsumer r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: com.android.internal.telephony.IIntegerConsumer;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.internal.telephony.IIntegerConsumer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(216, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void getImsMmTelRegistrationState(int,com.android.internal.telephony.IIntegerConsumer)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void getImsMmTelRegistrationTransportType(int, com.android.internal.telephony.IIntegerConsumer) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        com.android.internal.telephony.IIntegerConsumer r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: com.android.internal.telephony.IIntegerConsumer;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.internal.telephony.IIntegerConsumer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(217, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void getImsMmTelRegistrationTransportType(int,com.android.internal.telephony.IIntegerConsumer)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int getImsProvisioningInt(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(249, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getImsProvisioningInt(int,int)>(i1, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean getImsProvisioningStatusForCapability(int, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(244, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean getImsProvisioningStatusForCapability(int,int,int)>(i2, i0, i1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i3 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public java.lang.String getImsProvisioningString(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(250, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getImsProvisioningString(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getImsRegTechnologyForMmTel(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(151, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getImsRegTechnologyForMmTel(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.ims.aidl.IImsRegistration getImsRegistration(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        android.telephony.ims.aidl.IImsRegistration r8, r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(97, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: android.telephony.ims.aidl.IImsRegistration getImsRegistration(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <android.telephony.ims.aidl.IImsRegistration$Stub: android.telephony.ims.aidl.IImsRegistration asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        return "com.android.internal.telephony.ITelephony";
    }

    public java.lang.String getLine1AlphaTagForDisplay(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r8, r9, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(131, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String getLine1AlphaTagForDisplay(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getLine1NumberForDisplay(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r8, r9, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(130, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String getLine1NumberForDisplay(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getLteOnCdmaMode(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(67, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getLteOnCdmaMode(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getLteOnCdmaModeForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(68, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getLteOnCdmaModeForSubscriber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getManualNetworkSelectionPlmn(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(286, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getManualNetworkSelectionPlmn(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getManufacturerCodeForSlot(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(157, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getManufacturerCodeForSlot(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getMeidForSlot(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r8, r9, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(156, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String getMeidForSlot(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getMergedImsisFromGroup(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        java.lang.String[] r8, r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(133, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String[] getMergedImsisFromGroup(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getMergedSubscriberIds(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r9, r10;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(132, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String[] getMergedSubscriberIds(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.ims.aidl.IImsMmTelFeature getMmTelFeatureAndListen(int, com.android.ims.internal.IImsServiceFeatureCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4, r9;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        com.android.ims.internal.IImsServiceFeatureCallback r8;
        android.telephony.ims.aidl.IImsMmTelFeature r10, r11;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: com.android.ims.internal.IImsServiceFeatureCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<com.android.ims.internal.IImsServiceFeatureCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(94, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r10 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: android.telephony.ims.aidl.IImsMmTelFeature getMmTelFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>(i0, r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r11 = staticinvoke <android.telephony.ims.aidl.IImsMmTelFeature$Stub: android.telephony.ims.aidl.IImsMmTelFeature asInterface(android.os.IBinder)>($r4);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public java.lang.String getMmsUAProfUrl(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(275, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getMmsUAProfUrl(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getMmsUserAgent(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(274, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getMmsUserAgent(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getNeighboringCellInfo(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r9;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        java.util.List r10;
        java.util.ArrayList r11;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: java.util.List getNeighboringCellInfo(java.lang.String,java.lang.String)>(r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = <android.telephony.NeighboringCellInfo: android.os.Parcelable$Creator CREATOR>;

        r11 = virtualinvoke r3.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r5);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getNetworkCountryIsoForPhone(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getNetworkCountryIsoForPhone(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getNetworkSelectionMode(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(211, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getNetworkSelectionMode(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getNetworkTypeForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(61, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getNumberOfModemsWithSimultaneousDataConnections(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(210, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getNumberOfModemsWithSimultaneousDataConnections(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getPackagesWithCarrierPrivileges(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;
        java.util.ArrayList r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(170, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.util.List getPackagesWithCarrierPrivileges(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getPackagesWithCarrierPrivilegesForAllPhones() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;
        java.util.ArrayList r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(171, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.util.List getPackagesWithCarrierPrivilegesForAllPhones()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getPcscfAddress(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r2, r9;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String[] r10, r11;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(119, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: java.lang.String[] getPcscfAddress(java.lang.String,java.lang.String,java.lang.String)>(r9, r1, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        r11 = virtualinvoke r4.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubscriptionId(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        android.telecom.PhoneAccountHandle r9, r10;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(161, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubscriptionId(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.telecom.PhoneAccountHandle: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.telecom.PhoneAccountHandle) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int getPreferredNetworkType(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(89, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getPreferredNetworkType(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getRadioAccessFamily(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(140, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int getRadioAccessFamily(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getRadioHalVersion() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(265, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getRadioHalVersion()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getRadioPowerState(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(213, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getRadioPowerState(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.ims.aidl.IImsRcsFeature getRcsFeatureAndListen(int, com.android.ims.internal.IImsServiceFeatureCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4, r9;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        com.android.ims.internal.IImsServiceFeatureCallback r8;
        android.telephony.ims.aidl.IImsRcsFeature r10, r11;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: com.android.ims.internal.IImsServiceFeatureCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<com.android.ims.internal.IImsServiceFeatureCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(95, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r10 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: android.telephony.ims.aidl.IImsRcsFeature getRcsFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>(i0, r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r11 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature asInterface(android.os.IBinder)>($r4);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean getRcsProvisioningStatusForCapability(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(245, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean getRcsProvisioningStatusForCapability(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public android.telephony.ServiceState getServiceStateForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, $i1;
        java.lang.String r1, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        com.android.internal.telephony.ITelephony $r7, $r8;
        java.lang.Throwable $r9;
        android.telephony.ServiceState r11, r12;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(165, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<com.android.internal.telephony.ITelephony: android.telephony.ServiceState getServiceStateForSubscriber(int,java.lang.String,java.lang.String)>(i0, r10, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r5 = <android.telephony.ServiceState: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r12 = (android.telephony.ServiceState) $r6;

     label4:
        goto label6;

     label5:
        r12 = null;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.telephony.SignalStrength getSignalStrength(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.SignalStrength r9, r10;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(197, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: android.telephony.SignalStrength getSignalStrength(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.telephony.SignalStrength: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.telephony.SignalStrength) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getSimLocaleForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(163, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getSimLocaleForSubscriber(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int[] getSlotsMapping() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(264, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int[] getSlotsMapping()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getSubIdForPhoneAccount(android.telecom.PhoneAccount) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.telecom.PhoneAccount r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: android.telecom.PhoneAccount;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.telecom.PhoneAccount: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(159, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int getSubIdForPhoneAccount(android.telecom.PhoneAccount)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int getSubIdForPhoneAccountHandle(android.telecom.PhoneAccountHandle, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        android.telecom.PhoneAccountHandle r9;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r9 := @parameter0: android.telecom.PhoneAccountHandle;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.telecom.PhoneAccountHandle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(160, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: int getSubIdForPhoneAccountHandle(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)>(r9, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int getSubscriptionCarrierId(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(178, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getSubscriptionCarrierId(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getSubscriptionCarrierName(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(179, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getSubscriptionCarrierName(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getSubscriptionSpecificCarrierId(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(180, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getSubscriptionSpecificCarrierId(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getSubscriptionSpecificCarrierName(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(181, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getSubscriptionSpecificCarrierName(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getTelephonyHistograms() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(175, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.util.List getTelephonyHistograms()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.telephony.TelephonyHistogram: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getTypeAllocationCodeForSlot(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(155, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String getTypeAllocationCodeForSlot(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getUiccCardsInfo(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        java.util.List r9;
        java.util.ArrayList r10;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(199, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.util.List getUiccCardsInfo(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.telephony.UiccCardInfo: android.os.Parcelable$Creator CREATOR>;

        r10 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.UiccSlotInfo[] getUiccSlotsInfo() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.UiccSlotInfo[] r9, r10;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(200, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: android.telephony.UiccSlotInfo[] getUiccSlotsInfo()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.telephony.UiccSlotInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.telephony.UiccSlotInfo[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getVisualVoicemailPackageName(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8, r9, r10;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(54, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String getVisualVoicemailPackageName(java.lang.String,java.lang.String,int)>(r8, r1, i0);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.Bundle getVisualVoicemailSettings(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.os.Bundle r10, r11;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(53, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: android.os.Bundle getVisualVoicemailSettings(java.lang.String,int)>(r9, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.os.Bundle) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.telephony.VisualVoicemailSmsFilterSettings r10, r11;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(57, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(java.lang.String,int)>(r9, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.telephony.VisualVoicemailSmsFilterSettings: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.telephony.VisualVoicemailSmsFilterSettings) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int getVoWiFiModeSetting(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(232, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getVoWiFiModeSetting(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getVoWiFiRoamingModeSetting(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(234, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getVoWiFiRoamingModeSetting(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getVoiceActivationState(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(49, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int getVoiceActivationState(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getVoiceMessageCountForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(51, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getVoiceMessageCountForSubscriber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getVoiceNetworkTypeForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(64, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int getVoiceNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        android.telecom.PhoneAccountHandle r9;
        android.net.Uri r10, r11;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r9 := @parameter0: android.telecom.PhoneAccountHandle;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.telecom.PhoneAccountHandle: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(166, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)>(r9);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r4 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.Uri) $r5;

     label09:
        goto label11;

     label10:
        r11 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public boolean handlePinMmi(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean handlePinMmi(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean handlePinMmiForSubscriber(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean handlePinMmiForSubscriber(int,java.lang.String)>(i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void handleUssdRequest(int, java.lang.String, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.ResultReceiver r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: android.os.ResultReceiver;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void handleUssdRequest(int,java.lang.String,android.os.ResultReceiver)>(i0, r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean hasIccCard() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(65, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean hasIccCard()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean hasIccCardUsingSlotIndex(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(66, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean hasIccCardUsingSlotIndex(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean iccCloseLogicalChannel(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(76, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean iccCloseLogicalChannel(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean iccCloseLogicalChannelBySlot(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(75, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean iccCloseLogicalChannelBySlot(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public byte[] iccExchangeSimIO(int, int, int, int, int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, $r11, r15;
        java.lang.String r12;
        byte[] r13, r14;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r12 := @parameter6: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r12);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(81, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r13 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: byte[] iccExchangeSimIO(int,int,int,int,int,int,java.lang.String)>(i0, i1, i2, i3, i4, i5, r12);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r13;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r14 = virtualinvoke r2.<android.os.Parcel: byte[] createByteArray()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r14;

     label10:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label16;

     label11:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label16;

     label12:
        $r7 := @caughtexception;

        r15 = $r7;

        goto label16;

     label13:
        $r6 := @caughtexception;

        r15 = $r6;

        goto label16;

     label14:
        $r10 := @caughtexception;

        r15 = $r10;

        goto label16;

     label15:
        $r8 := @caughtexception;

        r15 = $r8;

     label16:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, $i2;
        java.lang.String r1, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        com.android.internal.telephony.ITelephony $r7, $r8;
        java.lang.Throwable $r9;
        android.telephony.IccOpenLogicalChannelResponse r11, r12;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(74, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<com.android.internal.telephony.ITelephony: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(int,java.lang.String,java.lang.String,int)>(i0, r10, r1, i1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label5;

        $r5 = <android.telephony.IccOpenLogicalChannelResponse: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r12 = (android.telephony.IccOpenLogicalChannelResponse) $r6;

     label4:
        goto label6;

     label5:
        r12 = null;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, $i2;
        java.lang.String r1, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        com.android.internal.telephony.ITelephony $r7, $r8;
        java.lang.Throwable $r9;
        android.telephony.IccOpenLogicalChannelResponse r11, r12;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(73, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<com.android.internal.telephony.ITelephony: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int,java.lang.String,java.lang.String,int)>(i0, r10, r1, i1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label5;

        $r5 = <android.telephony.IccOpenLogicalChannelResponse: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r12 = (android.telephony.IccOpenLogicalChannelResponse) $r6;

     label4:
        goto label6;

     label5:
        r12 = null;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String iccTransmitApduBasicChannel(int, java.lang.String, int, int, int, int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r1, r12, r13, r14;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, r15;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        r1 := @parameter7: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r12);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i5);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(80, r2, r3, 0);

        if $z0 != 0 goto label07;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label07;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r13 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String iccTransmitApduBasicChannel(int,java.lang.String,int,int,int,int,int,java.lang.String)>(i0, r12, i1, i2, i3, i4, i5, r1);

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r13;

     label07:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r14 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r14;

     label09:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label14;

     label10:
        $r7 := @caughtexception;

        r15 = $r7;

        goto label14;

     label11:
        $r8 := @caughtexception;

        r15 = $r8;

        goto label14;

     label12:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label14;

     label13:
        $r10 := @caughtexception;

        r15 = $r10;

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public java.lang.String iccTransmitApduBasicChannelBySlot(int, java.lang.String, int, int, int, int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r1, r12, r13, r14;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, r15;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        r1 := @parameter7: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r12);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i5);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(79, r2, r3, 0);

        if $z0 != 0 goto label07;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label07;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r13 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: java.lang.String iccTransmitApduBasicChannelBySlot(int,java.lang.String,int,int,int,int,int,java.lang.String)>(i0, r12, i1, i2, i3, i4, i5, r1);

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r13;

     label07:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r14 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r14;

     label09:
        $r10 := @caughtexception;

        r15 = $r10;

        goto label14;

     label10:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label14;

     label11:
        $r8 := @caughtexception;

        r15 = $r8;

        goto label14;

     label12:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label14;

     label13:
        $r7 := @caughtexception;

        r15 = $r7;

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public java.lang.String iccTransmitApduLogicalChannel(int, int, int, int, int, int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5, i6;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, r14;
        java.lang.String r11, r12, r13;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r11 := @parameter7: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r11);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(78, r1, r2, 0);

        if $z0 != 0 goto label07;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label07;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r12 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,int,java.lang.String)>(i0, i1, i2, i3, i4, i5, i6, r11);

     label06:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r12;

     label07:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r13 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r13;

     label09:
        $r7 := @caughtexception;

        r14 = $r7;

        goto label14;

     label10:
        $r6 := @caughtexception;

        r14 = $r6;

        goto label14;

     label11:
        $r8 := @caughtexception;

        r14 = $r8;

        goto label14;

     label12:
        $r9 := @caughtexception;

        r14 = $r9;

        goto label14;

     label13:
        $r10 := @caughtexception;

        r14 = $r10;

     label14:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public java.lang.String iccTransmitApduLogicalChannelBySlot(int, int, int, int, int, int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5, i6;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, r14;
        java.lang.String r11, r12, r13;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r11 := @parameter7: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r11);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(77, r1, r2, 0);

        if $z0 != 0 goto label07;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label07;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r12 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String iccTransmitApduLogicalChannelBySlot(int,int,int,int,int,int,int,java.lang.String)>(i0, i1, i2, i3, i4, i5, i6, r11);

     label06:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r12;

     label07:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r13 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r13;

     label09:
        $r7 := @caughtexception;

        r14 = $r7;

        goto label14;

     label10:
        $r8 := @caughtexception;

        r14 = $r8;

        goto label14;

     label11:
        $r10 := @caughtexception;

        r14 = $r10;

        goto label14;

     label12:
        $r6 := @caughtexception;

        r14 = $r6;

        goto label14;

     label13:
        $r9 := @caughtexception;

        r14 = $r9;

     label14:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public int invokeOemRilRequestRaw(byte[], byte[]) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        byte[] r1, r8;
        android.os.Parcel r2, r3;
        int $i0, i1, i2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeByteArray(byte[])>(r8);

     label02:
        if r1 != null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(-1);

     label04:
        goto label06;

     label05:
        $i0 = lengthof r1;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($i0);

     label06:
        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(136, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int invokeOemRilRequestRaw(byte[],byte[])>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        virtualinvoke r3.<android.os.Parcel: void readByteArray(byte[])>(r1);

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean isAdvancedCallingSettingEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(223, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isAdvancedCallingSettingEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isApnMetered(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(270, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isApnMetered(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isApplicationOnUicc(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(267, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isApplicationOnUicc(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isAvailable(int, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(221, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isAvailable(int,int,int)>(i2, i0, i1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i3 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isCapable(int, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(220, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isCapable(int,int,int)>(i2, i0, i1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i3 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isConcurrentVoiceAndDataAllowed(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(52, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isConcurrentVoiceAndDataAllowed(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isDataAllowedInVoiceCall(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(277, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isDataAllowedInVoiceCall(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isDataConnectivityPossible(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isDataConnectivityPossible(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isDataEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(116, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isDataEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isDataEnabledForApn(int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(269, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean isDataEnabledForApn(int,int,java.lang.String)>(i1, i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isDataRoamingEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(202, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isDataRoamingEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isEmergencyNumber(java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z1, z2, z3, z4;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b0;
        int i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        z2 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label02:
        if z2 == 0 goto label03;

        b0 = 1;

        goto label04;

     label03:
        b0 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(239, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label06;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z3 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean isEmergencyNumber(java.lang.String,boolean)>(r7, z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i1 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public boolean isHearingAidCompatibilitySupported() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(147, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isHearingAidCompatibilitySupported()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isIccLockEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(281, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isIccLockEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isImsRegistered(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(148, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isImsRegistered(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isInEmergencySmsMode() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(212, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isInEmergencySmsMode()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isManualNetworkSelectionAllowed(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(117, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isManualNetworkSelectionAllowed(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isMmTelCapabilityProvisionedInCache(int, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(247, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isMmTelCapabilityProvisionedInCache(int,int,int)>(i2, i0, i1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i3 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void isMmTelCapabilitySupported(int, com.android.internal.telephony.IIntegerConsumer, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        com.android.internal.telephony.IIntegerConsumer r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: com.android.internal.telephony.IIntegerConsumer;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.internal.telephony.IIntegerConsumer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(222, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void isMmTelCapabilitySupported(int,com.android.internal.telephony.IIntegerConsumer,int,int)>(i0, r7, i1, i2);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean isModemEnabledForSlot(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(268, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean isModemEnabledForSlot(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int isMultiSimSupported(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(261, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int isMultiSimSupported(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isMvnoMatched(int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(272, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean isMvnoMatched(int,int,java.lang.String)>(i1, i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isRadioOn(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean isRadioOn(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isRadioOnForSubscriber(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean isRadioOnForSubscriber(int,java.lang.String)>(i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isRadioOnForSubscriberWithFeature(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean isRadioOnForSubscriberWithFeature(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isRadioOnWithFeature(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean isRadioOnWithFeature(java.lang.String,java.lang.String)>(r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isRttSupported(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(146, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isRttSupported(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isTetheringApnRequiredForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(90, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isTetheringApnRequiredForSubscriber(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isTtyModeSupported() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(145, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isTtyModeSupported()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isTtyOverVolteEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(237, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isTtyOverVolteEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isUserDataEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(115, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isUserDataEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isVideoCallingEnabled(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(142, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean isVideoCallingEnabled(java.lang.String,java.lang.String)>(r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isVideoTelephonyAvailable(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(150, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isVideoTelephonyAvailable(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isVoWiFiRoamingSettingEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(229, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isVoWiFiRoamingSettingEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isVoWiFiSettingEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(227, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isVoWiFiSettingEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.telecom.PhoneAccountHandle r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: android.telecom.PhoneAccountHandle;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.telecom.PhoneAccountHandle: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(168, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i0 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public boolean isVtSettingEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(225, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isVtSettingEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isWifiCallingAvailable(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(149, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean isWifiCallingAvailable(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isWorldPhone(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(144, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean isWorldPhone(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean needMobileRadioShutdown() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(137, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean needMobileRadioShutdown()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean needsOtaServiceProvisioning() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean needsOtaServiceProvisioning()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void notifyOtaEmergencyNumberDbInstalled() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(256, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void notifyOtaEmergencyNumberDbInstalled()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void notifyRcsAutoConfigurationReceived(int, byte[], boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: byte[];

        z0 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r7);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(280, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void notifyRcsAutoConfigurationReceived(int,byte[],boolean)>(i0, r7, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public java.lang.String nvReadItem(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(83, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String nvReadItem(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean nvWriteCdmaPrl(byte[]) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: byte[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r7);

        r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(85, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean nvWriteCdmaPrl(byte[])>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean nvWriteItem(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(84, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean nvWriteItem(int,java.lang.String)>(i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean rebootModem(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(87, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean rebootModem(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void refreshUiccProfile(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(209, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void refreshUiccProfile(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void registerImsProvisioningChangedCallback(int, android.telephony.ims.aidl.IImsConfigCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IImsConfigCallback r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.aidl.IImsConfigCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IImsConfigCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(241, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void registerImsProvisioningChangedCallback(int,android.telephony.ims.aidl.IImsConfigCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerImsRegistrationCallback(int, android.telephony.ims.aidl.IImsRegistrationCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IImsRegistrationCallback r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IImsRegistrationCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(214, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void registerImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerMmTelCapabilityCallback(int, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IImsCapabilityCallback r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IImsCapabilityCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(218, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void registerMmTelCapabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void requestCellInfoUpdate(int, android.telephony.ICellInfoCallback, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.ICellInfoCallback r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: android.telephony.ICellInfoCallback;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<android.telephony.ICellInfoCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(70, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: void requestCellInfoUpdate(int,android.telephony.ICellInfoCallback,java.lang.String,java.lang.String)>(i0, r9, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void requestCellInfoUpdateWithWorkSource(int, android.telephony.ICellInfoCallback, java.lang.String, java.lang.String, android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r2;
        android.os.WorkSource r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, r11;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r7, $r8;
        java.lang.Throwable $r9;
        android.telephony.ICellInfoCallback r10;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r10 := @parameter1: android.telephony.ICellInfoCallback;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.WorkSource;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r10 == null goto label05;

     label03:
        r11 = interfaceinvoke r10.<android.telephony.ICellInfoCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r11 = null;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label07:
        if r3 == null goto label10;

     label08:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(71, r4, r5, 0);

        if $z0 != 0 goto label13;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r7 == null goto label13;

        $r8 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r8.<com.android.internal.telephony.ITelephony: void requestCellInfoUpdateWithWorkSource(int,android.telephony.ICellInfoCallback,java.lang.String,java.lang.String,android.os.WorkSource)>(i0, r10, r1, r2, r3);

     label12:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void requestModemActivityInfo(android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.ResultReceiver r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r6 := @parameter0: android.os.ResultReceiver;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(164, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: void requestModemActivityInfo(android.os.ResultReceiver)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public int requestNetworkScan(int, android.telephony.NetworkScanRequest, android.os.Messenger, android.os.IBinder, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Messenger r1;
        android.os.IBinder r2, $r7;
        java.lang.String r3, r4;
        android.os.Parcel r5, r6;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r8, $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, r16;
        int i0, i1, i2;
        android.telephony.NetworkScanRequest r15;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r15 := @parameter1: android.telephony.NetworkScanRequest;

        r1 := @parameter2: android.os.Messenger;

        r2 := @parameter3: android.os.IBinder;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        if r15 == null goto label06;

     label04:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r15.<android.telephony.NetworkScanRequest: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label05:
        goto label07;

     label06:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r2);

     label12:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r3);

     label13:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        $r7 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(104, r5, r6, 0);

        if $z0 != 0 goto label15;

        $r8 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r8 == null goto label15;

        $r9 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i1 = interfaceinvoke $r9.<com.android.internal.telephony.ITelephony: int requestNetworkScan(int,android.telephony.NetworkScanRequest,android.os.Messenger,android.os.IBinder,java.lang.String,java.lang.String)>(i0, r15, r1, r2, r3, r4);

     label14:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return i1;

     label15:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

     label16:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return i2;

     label17:
        $r10 := @caughtexception;

        r16 = $r10;

        goto label22;

     label18:
        $r11 := @caughtexception;

        r16 = $r11;

        goto label22;

     label19:
        $r12 := @caughtexception;

        r16 = $r12;

        goto label22;

     label20:
        $r13 := @caughtexception;

        r16 = $r13;

        goto label22;

     label21:
        $r14 := @caughtexception;

        r16 = $r14;

     label22:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r16;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    public void requestNumberVerification(android.telephony.PhoneNumberRange, long, com.android.internal.telephony.INumberVerificationCallback, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        long l0;
        com.android.internal.telephony.INumberVerificationCallback r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.PhoneNumberRange r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r9 := @parameter0: android.telephony.PhoneNumberRange;

        l0 := @parameter1: long;

        r1 := @parameter2: com.android.internal.telephony.INumberVerificationCallback;

        r2 := @parameter3: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.telephony.PhoneNumberRange: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l0);

     label07:
        if r1 == null goto label10;

     label08:
        r10 = interfaceinvoke r1.<com.android.internal.telephony.INumberVerificationCallback: android.os.IBinder asBinder()>();

     label09:
        goto label11;

     label10:
        r10 = null;

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(123, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: void requestNumberVerification(android.telephony.PhoneNumberRange,long,com.android.internal.telephony.INumberVerificationCallback,java.lang.String)>(r9, l0, r1, r2);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void requestUserActivityNotification() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(284, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void requestUserActivityNotification()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void resetIms(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(93, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void resetIms(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean resetModemConfig(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(86, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean resetModemConfig(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void resetOtaEmergencyNumberDbFilePath() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(258, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void resetOtaEmergencyNumberDbFilePath()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void sendDialerSpecialCode(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(60, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void sendDialerSpecialCode(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String sendEnvelopeWithStatus(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(82, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: java.lang.String sendEnvelopeWithStatus(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void sendVisualVoicemailSmsForSubscriber(java.lang.String, java.lang.String, int, java.lang.String, int, java.lang.String, android.app.PendingIntent) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r2, r3, r15;
        int i0, i1;
        android.app.PendingIntent r4;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r8, $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, r16;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: android.app.PendingIntent;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r15);

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label04:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i0);

     label05:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r3);

     label06:
        if r4 == null goto label09;

     label07:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r7 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(59, r5, r6, 0);

        if $z0 != 0 goto label12;

        $r8 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r8 == null goto label12;

        $r9 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r9.<com.android.internal.telephony.ITelephony: void sendVisualVoicemailSmsForSubscriber(java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,android.app.PendingIntent)>(r15, r1, i0, r2, i1, r3, r4);

     label11:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r11 := @caughtexception;

        r16 = $r11;

        goto label19;

     label15:
        $r12 := @caughtexception;

        r16 = $r12;

        goto label19;

     label16:
        $r10 := @caughtexception;

        r16 = $r10;

        goto label19;

     label17:
        $r13 := @caughtexception;

        r16 = $r13;

        goto label19;

     label18:
        $r14 := @caughtexception;

        r16 = $r14;

     label19:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r16;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void setAdvancedCallingSettingEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(224, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setAdvancedCallingSettingEnabled(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int setAllowedCarriers(android.telephony.CarrierRestrictionRules) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.CarrierRestrictionRules r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: android.telephony.CarrierRestrictionRules;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.telephony.CarrierRestrictionRules: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(176, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int setAllowedCarriers(android.telephony.CarrierRestrictionRules)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean setAllowedNetworkTypes(int, long) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        int i1, i2;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        l0 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(108, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean setAllowedNetworkTypes(int,long)>(i1, l0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean setAllowedNetworkTypesForReason(int, int, long) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i2, i3;
        long l1;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(111, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean setAllowedNetworkTypesForReason(int,int,long)>(i2, i0, l1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i3 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean setAlwaysAllowMmsData(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i2;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z2 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if z2 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(278, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean setAlwaysAllowMmsData(int,boolean)>(i0, z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i2 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void setAlwaysReportSignalStrength(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(118, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setAlwaysReportSignalStrength(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean setBoundImsServiceOverride(int, boolean, int[], java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i2;
        int[] r8;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z2 := @parameter1: boolean;

        r8 := @parameter2: int[];

        r1 := @parameter3: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if z2 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(99, r2, r3, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean setBoundImsServiceOverride(int,boolean,int[],java.lang.String)>(i0, z2, r8, r1);

     label05:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label07:
        if i2 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public boolean setCallForwarding(int, android.telephony.CallForwardingInfo) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        android.telephony.CallForwardingInfo r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.CallForwardingInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.telephony.CallForwardingInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(188, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean setCallForwarding(int,android.telephony.CallForwardingInfo)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i1 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public boolean setCallWaitingStatus(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i2;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z2 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if z2 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(190, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean setCallWaitingStatus(int,boolean)>(i0, z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i2 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void setCarrierTestOverride(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, r8, r17;
        android.os.Parcel r9, r10;
        android.os.IBinder $r11;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r12, $r13;
        java.lang.Throwable $r14, $r15, $r16, r18;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r17 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: java.lang.String;

        r6 := @parameter7: java.lang.String;

        r7 := @parameter8: java.lang.String;

        r8 := @parameter9: java.lang.String;

        r9 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r10 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r9.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        virtualinvoke r9.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r17);

        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r5);

        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r11 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r11.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(207, r9, r10, 0);

        if $z0 != 0 goto label05;

        $r12 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r12 == null goto label05;

        $r13 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r13.<com.android.internal.telephony.ITelephony: void setCarrierTestOverride(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(i0, r17, r1, r2, r3, r4, r5, r6, r7, r8);

     label04:
        virtualinvoke r10.<android.os.Parcel: void recycle()>();

        virtualinvoke r9.<android.os.Parcel: void recycle()>();

        return;

     label05:
        virtualinvoke r10.<android.os.Parcel: void readException()>();

     label06:
        virtualinvoke r10.<android.os.Parcel: void recycle()>();

        virtualinvoke r9.<android.os.Parcel: void recycle()>();

        return;

     label07:
        $r14 := @caughtexception;

        r18 = $r14;

        goto label10;

     label08:
        $r15 := @caughtexception;

        r18 = $r15;

        goto label10;

     label09:
        $r16 := @caughtexception;

        r18 = $r16;

     label10:
        virtualinvoke r10.<android.os.Parcel: void recycle()>();

        virtualinvoke r9.<android.os.Parcel: void recycle()>();

        throw r18;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
    }

    public boolean setCdmaRoamingMode(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(205, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean setCdmaRoamingMode(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean setCdmaSubscriptionMode(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(206, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean setCdmaSubscriptionMode(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void setCellInfoListRate(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(72, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setCellInfoListRate(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setCepEnabled(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(279, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void setCepEnabled(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void setDataActivationState(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(48, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setDataActivationState(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean setDataAllowedDuringVoiceCall(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i2;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z2 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if z2 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(276, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean setDataAllowedDuringVoiceCall(int,boolean)>(i0, z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i2 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void setDataRoamingEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(203, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setDataRoamingEnabled(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int setForbiddenPlmns(int, int, java.util.List, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        java.util.List r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r9 := @parameter2: java.util.List;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeStringList(java.util.List)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(195, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i2 = interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: int setForbiddenPlmns(int,int,java.util.List,java.lang.String,java.lang.String)>(i1, i0, r9, r1, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int setIccLockEnabled(int, boolean, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i2, i3;
        java.lang.String r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r7 := @parameter2: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(282, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int setIccLockEnabled(int,boolean,java.lang.String)>(i0, z0, r7);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int setImsProvisioningInt(int, int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3, i4;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(251, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i3 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int setImsProvisioningInt(int,int,int)>(i2, i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i4 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i4;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setImsProvisioningStatusForCapability(int, int, int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b3;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

     label2:
        if z0 == 0 goto label3;

        b3 = 1;

        goto label4;

     label3:
        b3 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b3);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(243, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setImsProvisioningStatusForCapability(int,int,int,boolean)>(i0, i1, i2, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int setImsProvisioningString(int, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(252, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        i2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int setImsProvisioningString(int,int,java.lang.String)>(i1, i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setImsRegistrationState(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(120, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setImsRegistrationState(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean setLine1NumberForDisplayForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(129, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean setLine1NumberForDisplayForSubscriber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void setMultiSimCarrierRestriction(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(260, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setMultiSimCarrierRestriction(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setNetworkSelectionModeAutomatic(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(102, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setNetworkSelectionModeAutomatic(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean setNetworkSelectionModeManual(int, com.android.internal.telephony.OperatorInfo, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z1, z2, z3, z4;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i2;
        com.android.internal.telephony.OperatorInfo r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: com.android.internal.telephony.OperatorInfo;

        z2 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<com.android.internal.telephony.OperatorInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z2 == 0 goto label07;

        b1 = 1;

        goto label08;

     label07:
        b1 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(106, r1, r2, 0);

        if $z1 != 0 goto label10;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label10;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z3 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean setNetworkSelectionModeManual(int,com.android.internal.telephony.OperatorInfo,boolean)>(i0, r7, z2);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i2 == 0 goto label12;

        z4 = 1;

        goto label13;

     label12:
        z4 = 0;

     label13:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label14:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
    }

    public boolean setOperatorBrandOverride(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(134, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean setOperatorBrandOverride(int,java.lang.String)>(i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void setPolicyDataEnabled(boolean, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean z0, $z1;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(191, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setPolicyDataEnabled(boolean,int)>(z0, i0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean setPreferredNetworkType(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(112, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean setPreferredNetworkType(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean setRadio(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;
        int i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        z2 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        if z2 == 0 goto label03;

        b0 = 1;

        goto label04;

     label03:
        b0 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean setRadio(boolean)>(z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i1 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void setRadioCapability(android.telephony.RadioAccessFamily[]) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.RadioAccessFamily[] r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: android.telephony.RadioAccessFamily[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r7, 0);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(139, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void setRadioCapability(android.telephony.RadioAccessFamily[])>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean setRadioForSubscriber(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i2;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z2 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if z2 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean setRadioForSubscriber(int,boolean)>(i0, z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i2 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public boolean setRadioPower(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;
        int i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        z2 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        if z2 == 0 goto label03;

        b0 = 1;

        goto label04;

     label03:
        b0 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean setRadioPower(boolean)>(z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i1 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void setRcsProvisioningStatusForCapability(int, int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(246, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setRcsProvisioningStatusForCapability(int,int,boolean)>(i0, i1, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean setRoamingOverride(int, java.util.List, java.util.List, java.util.List, java.util.List) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.util.List r1, r2, r3, r16;
        android.os.Parcel r4, r5;
        android.os.IBinder r6;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r7, $r8;
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r14, $r15, r17;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r16 := @parameter1: java.util.List;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: java.util.List;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeStringList(java.util.List)>(r16);

     label04:
        virtualinvoke r4.<android.os.Parcel: void writeStringList(java.util.List)>(r1);

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeStringList(java.util.List)>(r2);

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeStringList(java.util.List)>(r3);

     label07:
        r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label08:
        z1 = 0;

     label09:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(135, r4, r5, 0);

        if $z0 != 0 goto label11;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r7 == null goto label11;

        $r8 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r8.<com.android.internal.telephony.ITelephony: boolean setRoamingOverride(int,java.util.List,java.util.List,java.util.List,java.util.List)>(i0, r16, r1, r2, r3);

     label10:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return z2;

     label11:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label12:
        if i1 == 0 goto label13;

        z1 = 1;

     label13:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return z1;

     label14:
        $r14 := @caughtexception;

        r17 = $r14;

        goto label21;

     label15:
        $r13 := @caughtexception;

        r17 = $r13;

        goto label21;

     label16:
        $r11 := @caughtexception;

        r17 = $r11;

        goto label21;

     label17:
        $r9 := @caughtexception;

        r17 = $r9;

        goto label21;

     label18:
        $r10 := @caughtexception;

        r17 = $r10;

        goto label21;

     label19:
        $r15 := @caughtexception;

        r17 = $r15;

        goto label21;

     label20:
        $r12 := @caughtexception;

        r17 = $r12;

     label21:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r17;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
    }

    public void setRttCapabilitySetting(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(236, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setRttCapabilitySetting(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setSimPowerStateForSlot(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(193, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setSimPowerStateForSlot(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setSystemSelectionChannels(java.util.List, int, com.android.internal.telephony.IBooleanConsumer) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        com.android.internal.telephony.IBooleanConsumer r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.telephony.IBooleanConsumer;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeTypedList(java.util.List)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r1 == null goto label5;

     label3:
        r8 = interfaceinvoke r1.<com.android.internal.telephony.IBooleanConsumer: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r8 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(271, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void setSystemSelectionChannels(java.util.List,int,com.android.internal.telephony.IBooleanConsumer)>(r7, i0, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void setUserDataEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(113, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setUserDataEnabled(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setVoWiFiModeSetting(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(233, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setVoWiFiModeSetting(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setVoWiFiNonPersistent(int, boolean, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(231, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setVoWiFiNonPersistent(int,boolean,int)>(i0, z0, i1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setVoWiFiRoamingModeSetting(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(235, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setVoWiFiRoamingModeSetting(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setVoWiFiRoamingSettingEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(230, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setVoWiFiRoamingSettingEnabled(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setVoWiFiSettingEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(228, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setVoWiFiSettingEnabled(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setVoiceActivationState(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setVoiceActivationState(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean setVoiceMailNumber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean setVoiceMailNumber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void setVoicemailRingtoneUri(java.lang.String, android.telecom.PhoneAccountHandle, android.net.Uri) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.telecom.PhoneAccountHandle r1;
        android.net.Uri r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: android.telecom.PhoneAccountHandle;

        r2 := @parameter2: android.net.Uri;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.telecom.PhoneAccountHandle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r2 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r5 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(167, r3, r4, 0);

        if $z0 != 0 goto label12;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r6 == null goto label12;

        $r7 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r7.<com.android.internal.telephony.ITelephony: void setVoicemailRingtoneUri(java.lang.String,android.telecom.PhoneAccountHandle,android.net.Uri)>(r9, r1, r2);

     label11:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void setVoicemailVibrationEnabled(java.lang.String, android.telecom.PhoneAccountHandle, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.telecom.PhoneAccountHandle r1;
        boolean z0, $z1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        byte b0;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.telecom.PhoneAccountHandle;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        b0 = 1;

        if r1 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.telecom.PhoneAccountHandle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        goto label08;

     label07:
        b0 = 0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(169, r2, r3, 0);

        if $z1 != 0 goto label10;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label10;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setVoicemailVibrationEnabled(java.lang.String,android.telecom.PhoneAccountHandle,boolean)>(r8, r1, z0);

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public void setVtSettingEnabled(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(226, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void setVtSettingEnabled(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void shutdownMobileRadios() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(138, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void shutdownMobileRadios()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void stopNetworkScan(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(105, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void stopNetworkScan(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean supplyPinForSubscriber(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean supplyPinForSubscriber(int,java.lang.String)>(i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int[] supplyPinReportResultForSubscriber(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int[] r8, r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int[] supplyPinReportResultForSubscriber(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean supplyPukForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: boolean supplyPukForSubscriber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int[] supplyPukReportResultForSubscriber(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;
        int[] r9, r10;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: int[] supplyPukReportResultForSubscriber(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void switchMultiSimConfig(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(262, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void switchMultiSimConfig(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean switchSlots(int[]) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: int[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r7);

        r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(201, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean switchSlots(int[])>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void toggleRadioOnOff() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void toggleRadioOnOff()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void toggleRadioOnOffForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void toggleRadioOnOffForSubscriber(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void unregisterImsFeatureCallback(int, int, com.android.ims.internal.IImsServiceFeatureCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        com.android.ims.internal.IImsServiceFeatureCallback r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: com.android.ims.internal.IImsServiceFeatureCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.ims.internal.IImsServiceFeatureCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(96, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void unregisterImsFeatureCallback(int,int,com.android.ims.internal.IImsServiceFeatureCallback)>(i0, i1, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterImsProvisioningChangedCallback(int, android.telephony.ims.aidl.IImsConfigCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IImsConfigCallback r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.aidl.IImsConfigCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IImsConfigCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(242, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void unregisterImsProvisioningChangedCallback(int,android.telephony.ims.aidl.IImsConfigCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterImsRegistrationCallback(int, android.telephony.ims.aidl.IImsRegistrationCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IImsRegistrationCallback r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IImsRegistrationCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(215, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void unregisterImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterMmTelCapabilityCallback(int, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IImsCapabilityCallback r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IImsCapabilityCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(219, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void unregisterMmTelCapabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void updateEmergencyNumberListTestMode(int, android.telephony.emergency.EmergencyNumber) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.emergency.EmergencyNumber r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.emergency.EmergencyNumber;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.telephony.emergency.EmergencyNumber: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(253, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void updateEmergencyNumberListTestMode(int,android.telephony.emergency.EmergencyNumber)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void updateOtaEmergencyNumberDbFilePath(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;
        android.os.ParcelFileDescriptor r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r7 := @parameter0: android.os.ParcelFileDescriptor;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(257, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void updateOtaEmergencyNumberDbFilePath(android.os.ParcelFileDescriptor)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void updateServiceLocation() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void updateServiceLocation()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void updateServiceLocationForSubscriber(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void updateServiceLocationForSubscriber(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void userActivity() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(285, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void userActivity()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
