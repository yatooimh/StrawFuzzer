public abstract class com.android.internal.telephony.ITelephony$Stub extends android.os.Binder implements com.android.internal.telephony.ITelephony
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_cacheMmTelCapabilityProvisioning;
    static final int TRANSACTION_call;
    static final int TRANSACTION_canChangeDtmfToneLength;
    static final int TRANSACTION_canConnectTo5GInDsdsMode;
    static final int TRANSACTION_carrierActionReportDefaultNetworkStatus;
    static final int TRANSACTION_carrierActionResetAll;
    static final int TRANSACTION_carrierActionSetMeteredApnsEnabled;
    static final int TRANSACTION_carrierActionSetRadioEnabled;
    static final int TRANSACTION_changeIccLockPassword;
    static final int TRANSACTION_checkCarrierPrivilegesForPackage;
    static final int TRANSACTION_checkCarrierPrivilegesForPackageAnyPhone;
    static final int TRANSACTION_dial;
    static final int TRANSACTION_disableDataConnectivity;
    static final int TRANSACTION_disableIms;
    static final int TRANSACTION_disableLocationUpdates;
    static final int TRANSACTION_disableLocationUpdatesForSubscriber;
    static final int TRANSACTION_disableVisualVoicemailSmsFilter;
    static final int TRANSACTION_doesSwitchMultiSimConfigTriggerReboot;
    static final int TRANSACTION_enableDataConnectivity;
    static final int TRANSACTION_enableIms;
    static final int TRANSACTION_enableLocationUpdates;
    static final int TRANSACTION_enableLocationUpdatesForSubscriber;
    static final int TRANSACTION_enableModemForSlot;
    static final int TRANSACTION_enableVideoCalling;
    static final int TRANSACTION_enableVisualVoicemailSmsFilter;
    static final int TRANSACTION_enqueueSmsPickResult;
    static final int TRANSACTION_factoryReset;
    static final int TRANSACTION_getActivePhoneType;
    static final int TRANSACTION_getActivePhoneTypeForSlot;
    static final int TRANSACTION_getActiveVisualVoicemailSmsFilterSettings;
    static final int TRANSACTION_getAidForAppType;
    static final int TRANSACTION_getAllCellInfo;
    static final int TRANSACTION_getAllowedCarriers;
    static final int TRANSACTION_getAllowedNetworkTypes;
    static final int TRANSACTION_getAllowedNetworkTypesForReason;
    static final int TRANSACTION_getBoundImsServicePackage;
    static final int TRANSACTION_getCalculatedPreferredNetworkType;
    static final int TRANSACTION_getCallForwarding;
    static final int TRANSACTION_getCallState;
    static final int TRANSACTION_getCallStateForSlot;
    static final int TRANSACTION_getCallWaitingStatus;
    static final int TRANSACTION_getCardIdForDefaultEuicc;
    static final int TRANSACTION_getCarrierIdFromMccMnc;
    static final int TRANSACTION_getCarrierIdListVersion;
    static final int TRANSACTION_getCarrierPackageNamesForIntentAndPhone;
    static final int TRANSACTION_getCarrierPrivilegeStatus;
    static final int TRANSACTION_getCarrierPrivilegeStatusForUid;
    static final int TRANSACTION_getCdmaEriIconIndex;
    static final int TRANSACTION_getCdmaEriIconIndexForSubscriber;
    static final int TRANSACTION_getCdmaEriIconMode;
    static final int TRANSACTION_getCdmaEriIconModeForSubscriber;
    static final int TRANSACTION_getCdmaEriText;
    static final int TRANSACTION_getCdmaEriTextForSubscriber;
    static final int TRANSACTION_getCdmaMdn;
    static final int TRANSACTION_getCdmaMin;
    static final int TRANSACTION_getCdmaPrlVersion;
    static final int TRANSACTION_getCdmaRoamingMode;
    static final int TRANSACTION_getCellLocation;
    static final int TRANSACTION_getCellNetworkScanResults;
    static final int TRANSACTION_getCertsFromCarrierPrivilegeAccessRules;
    static final int TRANSACTION_getClientRequestStats;
    static final int TRANSACTION_getCurrentPackageName;
    static final int TRANSACTION_getDataActivationState;
    static final int TRANSACTION_getDataActivity;
    static final int TRANSACTION_getDataActivityForSubId;
    static final int TRANSACTION_getDataEnabled;
    static final int TRANSACTION_getDataNetworkType;
    static final int TRANSACTION_getDataNetworkTypeForSubscriber;
    static final int TRANSACTION_getDataState;
    static final int TRANSACTION_getDataStateForSubId;
    static final int TRANSACTION_getDeviceId;
    static final int TRANSACTION_getDeviceIdWithFeature;
    static final int TRANSACTION_getDeviceSoftwareVersionForSlot;
    static final int TRANSACTION_getEffectiveAllowedNetworkTypes;
    static final int TRANSACTION_getEmergencyCallbackMode;
    static final int TRANSACTION_getEmergencyNumberDbVersion;
    static final int TRANSACTION_getEmergencyNumberList;
    static final int TRANSACTION_getEmergencyNumberListTestMode;
    static final int TRANSACTION_getEsn;
    static final int TRANSACTION_getForbiddenPlmns;
    static final int TRANSACTION_getImeiForSlot;
    static final int TRANSACTION_getImsConfig;
    static final int TRANSACTION_getImsMmTelFeatureState;
    static final int TRANSACTION_getImsMmTelRegistrationState;
    static final int TRANSACTION_getImsMmTelRegistrationTransportType;
    static final int TRANSACTION_getImsProvisioningInt;
    static final int TRANSACTION_getImsProvisioningStatusForCapability;
    static final int TRANSACTION_getImsProvisioningString;
    static final int TRANSACTION_getImsRegTechnologyForMmTel;
    static final int TRANSACTION_getImsRegistration;
    static final int TRANSACTION_getLine1AlphaTagForDisplay;
    static final int TRANSACTION_getLine1NumberForDisplay;
    static final int TRANSACTION_getLteOnCdmaMode;
    static final int TRANSACTION_getLteOnCdmaModeForSubscriber;
    static final int TRANSACTION_getManualNetworkSelectionPlmn;
    static final int TRANSACTION_getManufacturerCodeForSlot;
    static final int TRANSACTION_getMeidForSlot;
    static final int TRANSACTION_getMergedImsisFromGroup;
    static final int TRANSACTION_getMergedSubscriberIds;
    static final int TRANSACTION_getMmTelFeatureAndListen;
    static final int TRANSACTION_getMmsUAProfUrl;
    static final int TRANSACTION_getMmsUserAgent;
    static final int TRANSACTION_getNeighboringCellInfo;
    static final int TRANSACTION_getNetworkCountryIsoForPhone;
    static final int TRANSACTION_getNetworkSelectionMode;
    static final int TRANSACTION_getNetworkTypeForSubscriber;
    static final int TRANSACTION_getNumberOfModemsWithSimultaneousDataConnections;
    static final int TRANSACTION_getPackagesWithCarrierPrivileges;
    static final int TRANSACTION_getPackagesWithCarrierPrivilegesForAllPhones;
    static final int TRANSACTION_getPcscfAddress;
    static final int TRANSACTION_getPhoneAccountHandleForSubscriptionId;
    static final int TRANSACTION_getPreferredNetworkType;
    static final int TRANSACTION_getRadioAccessFamily;
    static final int TRANSACTION_getRadioHalVersion;
    static final int TRANSACTION_getRadioPowerState;
    static final int TRANSACTION_getRcsFeatureAndListen;
    static final int TRANSACTION_getRcsProvisioningStatusForCapability;
    static final int TRANSACTION_getServiceStateForSubscriber;
    static final int TRANSACTION_getSignalStrength;
    static final int TRANSACTION_getSimLocaleForSubscriber;
    static final int TRANSACTION_getSlotsMapping;
    static final int TRANSACTION_getSubIdForPhoneAccount;
    static final int TRANSACTION_getSubIdForPhoneAccountHandle;
    static final int TRANSACTION_getSubscriptionCarrierId;
    static final int TRANSACTION_getSubscriptionCarrierName;
    static final int TRANSACTION_getSubscriptionSpecificCarrierId;
    static final int TRANSACTION_getSubscriptionSpecificCarrierName;
    static final int TRANSACTION_getTelephonyHistograms;
    static final int TRANSACTION_getTypeAllocationCodeForSlot;
    static final int TRANSACTION_getUiccCardsInfo;
    static final int TRANSACTION_getUiccSlotsInfo;
    static final int TRANSACTION_getVisualVoicemailPackageName;
    static final int TRANSACTION_getVisualVoicemailSettings;
    static final int TRANSACTION_getVisualVoicemailSmsFilterSettings;
    static final int TRANSACTION_getVoWiFiModeSetting;
    static final int TRANSACTION_getVoWiFiRoamingModeSetting;
    static final int TRANSACTION_getVoiceActivationState;
    static final int TRANSACTION_getVoiceMessageCountForSubscriber;
    static final int TRANSACTION_getVoiceNetworkTypeForSubscriber;
    static final int TRANSACTION_getVoicemailRingtoneUri;
    static final int TRANSACTION_handlePinMmi;
    static final int TRANSACTION_handlePinMmiForSubscriber;
    static final int TRANSACTION_handleUssdRequest;
    static final int TRANSACTION_hasIccCard;
    static final int TRANSACTION_hasIccCardUsingSlotIndex;
    static final int TRANSACTION_iccCloseLogicalChannel;
    static final int TRANSACTION_iccCloseLogicalChannelBySlot;
    static final int TRANSACTION_iccExchangeSimIO;
    static final int TRANSACTION_iccOpenLogicalChannel;
    static final int TRANSACTION_iccOpenLogicalChannelBySlot;
    static final int TRANSACTION_iccTransmitApduBasicChannel;
    static final int TRANSACTION_iccTransmitApduBasicChannelBySlot;
    static final int TRANSACTION_iccTransmitApduLogicalChannel;
    static final int TRANSACTION_iccTransmitApduLogicalChannelBySlot;
    static final int TRANSACTION_invokeOemRilRequestRaw;
    static final int TRANSACTION_isAdvancedCallingSettingEnabled;
    static final int TRANSACTION_isApnMetered;
    static final int TRANSACTION_isApplicationOnUicc;
    static final int TRANSACTION_isAvailable;
    static final int TRANSACTION_isCapable;
    static final int TRANSACTION_isConcurrentVoiceAndDataAllowed;
    static final int TRANSACTION_isDataAllowedInVoiceCall;
    static final int TRANSACTION_isDataConnectivityPossible;
    static final int TRANSACTION_isDataEnabled;
    static final int TRANSACTION_isDataEnabledForApn;
    static final int TRANSACTION_isDataRoamingEnabled;
    static final int TRANSACTION_isEmergencyNumber;
    static final int TRANSACTION_isHearingAidCompatibilitySupported;
    static final int TRANSACTION_isIccLockEnabled;
    static final int TRANSACTION_isImsRegistered;
    static final int TRANSACTION_isInEmergencySmsMode;
    static final int TRANSACTION_isManualNetworkSelectionAllowed;
    static final int TRANSACTION_isMmTelCapabilityProvisionedInCache;
    static final int TRANSACTION_isMmTelCapabilitySupported;
    static final int TRANSACTION_isModemEnabledForSlot;
    static final int TRANSACTION_isMultiSimSupported;
    static final int TRANSACTION_isMvnoMatched;
    static final int TRANSACTION_isRadioOn;
    static final int TRANSACTION_isRadioOnForSubscriber;
    static final int TRANSACTION_isRadioOnForSubscriberWithFeature;
    static final int TRANSACTION_isRadioOnWithFeature;
    static final int TRANSACTION_isRttSupported;
    static final int TRANSACTION_isTetheringApnRequiredForSubscriber;
    static final int TRANSACTION_isTtyModeSupported;
    static final int TRANSACTION_isTtyOverVolteEnabled;
    static final int TRANSACTION_isUserDataEnabled;
    static final int TRANSACTION_isVideoCallingEnabled;
    static final int TRANSACTION_isVideoTelephonyAvailable;
    static final int TRANSACTION_isVoWiFiRoamingSettingEnabled;
    static final int TRANSACTION_isVoWiFiSettingEnabled;
    static final int TRANSACTION_isVoicemailVibrationEnabled;
    static final int TRANSACTION_isVtSettingEnabled;
    static final int TRANSACTION_isWifiCallingAvailable;
    static final int TRANSACTION_isWorldPhone;
    static final int TRANSACTION_needMobileRadioShutdown;
    static final int TRANSACTION_needsOtaServiceProvisioning;
    static final int TRANSACTION_notifyOtaEmergencyNumberDbInstalled;
    static final int TRANSACTION_notifyRcsAutoConfigurationReceived;
    static final int TRANSACTION_nvReadItem;
    static final int TRANSACTION_nvWriteCdmaPrl;
    static final int TRANSACTION_nvWriteItem;
    static final int TRANSACTION_rebootModem;
    static final int TRANSACTION_refreshUiccProfile;
    static final int TRANSACTION_registerImsProvisioningChangedCallback;
    static final int TRANSACTION_registerImsRegistrationCallback;
    static final int TRANSACTION_registerMmTelCapabilityCallback;
    static final int TRANSACTION_requestCellInfoUpdate;
    static final int TRANSACTION_requestCellInfoUpdateWithWorkSource;
    static final int TRANSACTION_requestModemActivityInfo;
    static final int TRANSACTION_requestNetworkScan;
    static final int TRANSACTION_requestNumberVerification;
    static final int TRANSACTION_requestUserActivityNotification;
    static final int TRANSACTION_resetIms;
    static final int TRANSACTION_resetModemConfig;
    static final int TRANSACTION_resetOtaEmergencyNumberDbFilePath;
    static final int TRANSACTION_sendDialerSpecialCode;
    static final int TRANSACTION_sendEnvelopeWithStatus;
    static final int TRANSACTION_sendVisualVoicemailSmsForSubscriber;
    static final int TRANSACTION_setAdvancedCallingSettingEnabled;
    static final int TRANSACTION_setAllowedCarriers;
    static final int TRANSACTION_setAllowedNetworkTypes;
    static final int TRANSACTION_setAllowedNetworkTypesForReason;
    static final int TRANSACTION_setAlwaysAllowMmsData;
    static final int TRANSACTION_setAlwaysReportSignalStrength;
    static final int TRANSACTION_setBoundImsServiceOverride;
    static final int TRANSACTION_setCallForwarding;
    static final int TRANSACTION_setCallWaitingStatus;
    static final int TRANSACTION_setCarrierTestOverride;
    static final int TRANSACTION_setCdmaRoamingMode;
    static final int TRANSACTION_setCdmaSubscriptionMode;
    static final int TRANSACTION_setCellInfoListRate;
    static final int TRANSACTION_setCepEnabled;
    static final int TRANSACTION_setDataActivationState;
    static final int TRANSACTION_setDataAllowedDuringVoiceCall;
    static final int TRANSACTION_setDataRoamingEnabled;
    static final int TRANSACTION_setForbiddenPlmns;
    static final int TRANSACTION_setIccLockEnabled;
    static final int TRANSACTION_setImsProvisioningInt;
    static final int TRANSACTION_setImsProvisioningStatusForCapability;
    static final int TRANSACTION_setImsProvisioningString;
    static final int TRANSACTION_setImsRegistrationState;
    static final int TRANSACTION_setLine1NumberForDisplayForSubscriber;
    static final int TRANSACTION_setMultiSimCarrierRestriction;
    static final int TRANSACTION_setNetworkSelectionModeAutomatic;
    static final int TRANSACTION_setNetworkSelectionModeManual;
    static final int TRANSACTION_setOperatorBrandOverride;
    static final int TRANSACTION_setPolicyDataEnabled;
    static final int TRANSACTION_setPreferredNetworkType;
    static final int TRANSACTION_setRadio;
    static final int TRANSACTION_setRadioCapability;
    static final int TRANSACTION_setRadioForSubscriber;
    static final int TRANSACTION_setRadioPower;
    static final int TRANSACTION_setRcsProvisioningStatusForCapability;
    static final int TRANSACTION_setRoamingOverride;
    static final int TRANSACTION_setRttCapabilitySetting;
    static final int TRANSACTION_setSimPowerStateForSlot;
    static final int TRANSACTION_setSystemSelectionChannels;
    static final int TRANSACTION_setUserDataEnabled;
    static final int TRANSACTION_setVoWiFiModeSetting;
    static final int TRANSACTION_setVoWiFiNonPersistent;
    static final int TRANSACTION_setVoWiFiRoamingModeSetting;
    static final int TRANSACTION_setVoWiFiRoamingSettingEnabled;
    static final int TRANSACTION_setVoWiFiSettingEnabled;
    static final int TRANSACTION_setVoiceActivationState;
    static final int TRANSACTION_setVoiceMailNumber;
    static final int TRANSACTION_setVoicemailRingtoneUri;
    static final int TRANSACTION_setVoicemailVibrationEnabled;
    static final int TRANSACTION_setVtSettingEnabled;
    static final int TRANSACTION_shutdownMobileRadios;
    static final int TRANSACTION_stopNetworkScan;
    static final int TRANSACTION_supplyPinForSubscriber;
    static final int TRANSACTION_supplyPinReportResultForSubscriber;
    static final int TRANSACTION_supplyPukForSubscriber;
    static final int TRANSACTION_supplyPukReportResultForSubscriber;
    static final int TRANSACTION_switchMultiSimConfig;
    static final int TRANSACTION_switchSlots;
    static final int TRANSACTION_toggleRadioOnOff;
    static final int TRANSACTION_toggleRadioOnOffForSubscriber;
    static final int TRANSACTION_unregisterImsFeatureCallback;
    static final int TRANSACTION_unregisterImsProvisioningChangedCallback;
    static final int TRANSACTION_unregisterImsRegistrationCallback;
    static final int TRANSACTION_unregisterMmTelCapabilityCallback;
    static final int TRANSACTION_updateEmergencyNumberListTestMode;
    static final int TRANSACTION_updateOtaEmergencyNumberDbFilePath;
    static final int TRANSACTION_updateServiceLocation;
    static final int TRANSACTION_updateServiceLocationForSubscriber;
    static final int TRANSACTION_userActivity;

    public void <init>()
    {
        com.android.internal.telephony.ITelephony$Stub r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "com.android.internal.telephony.ITelephony");

        return;
    }

    public static com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        com.android.internal.telephony.ITelephony$Stub$Proxy $r2;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        if r1 == null goto label2;

        $z0 = r1 instanceof com.android.internal.telephony.ITelephony;

        if $z0 == 0 goto label2;

        $r3 = (com.android.internal.telephony.ITelephony) r1;

        return $r3;

     label2:
        $r2 = new com.android.internal.telephony.ITelephony$Stub$Proxy;

        specialinvoke $r2.<com.android.internal.telephony.ITelephony$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static com.android.internal.telephony.ITelephony getDefaultImpl()
    {
        com.android.internal.telephony.ITelephony $r0;

        $r0 = <com.android.internal.telephony.ITelephony$Stub$Proxy: com.android.internal.telephony.ITelephony sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label288;
            case 2: goto label287;
            case 3: goto label286;
            case 4: goto label285;
            case 5: goto label284;
            case 6: goto label283;
            case 7: goto label282;
            case 8: goto label281;
            case 9: goto label280;
            case 10: goto label279;
            case 11: goto label278;
            case 12: goto label277;
            case 13: goto label276;
            case 14: goto label275;
            case 15: goto label274;
            case 16: goto label273;
            case 17: goto label272;
            case 18: goto label271;
            case 19: goto label270;
            case 20: goto label269;
            case 21: goto label268;
            case 22: goto label267;
            case 23: goto label266;
            case 24: goto label265;
            case 25: goto label264;
            case 26: goto label263;
            case 27: goto label262;
            case 28: goto label261;
            case 29: goto label260;
            case 30: goto label259;
            case 31: goto label258;
            case 32: goto label257;
            case 33: goto label256;
            case 34: goto label255;
            case 35: goto label254;
            case 36: goto label253;
            case 37: goto label252;
            case 38: goto label251;
            case 39: goto label250;
            case 40: goto label249;
            case 41: goto label248;
            case 42: goto label247;
            case 43: goto label246;
            case 44: goto label245;
            case 45: goto label244;
            case 46: goto label243;
            case 47: goto label242;
            case 48: goto label241;
            case 49: goto label240;
            case 50: goto label239;
            case 51: goto label238;
            case 52: goto label237;
            case 53: goto label236;
            case 54: goto label235;
            case 55: goto label234;
            case 56: goto label233;
            case 57: goto label232;
            case 58: goto label231;
            case 59: goto label230;
            case 60: goto label229;
            case 61: goto label228;
            case 62: goto label227;
            case 63: goto label226;
            case 64: goto label225;
            case 65: goto label224;
            case 66: goto label223;
            case 67: goto label222;
            case 68: goto label221;
            case 69: goto label220;
            case 70: goto label219;
            case 71: goto label218;
            case 72: goto label217;
            case 73: goto label216;
            case 74: goto label215;
            case 75: goto label214;
            case 76: goto label213;
            case 77: goto label212;
            case 78: goto label211;
            case 79: goto label210;
            case 80: goto label209;
            case 81: goto label208;
            case 82: goto label207;
            case 83: goto label206;
            case 84: goto label205;
            case 85: goto label204;
            case 86: goto label203;
            case 87: goto label202;
            case 88: goto label201;
            case 89: goto label200;
            case 90: goto label199;
            case 91: goto label198;
            case 92: goto label197;
            case 93: goto label196;
            case 94: goto label195;
            case 95: goto label194;
            case 96: goto label193;
            case 97: goto label192;
            case 98: goto label191;
            case 99: goto label190;
            case 100: goto label189;
            case 101: goto label188;
            case 102: goto label187;
            case 103: goto label186;
            case 104: goto label185;
            case 105: goto label184;
            case 106: goto label183;
            case 107: goto label182;
            case 108: goto label181;
            case 109: goto label180;
            case 110: goto label179;
            case 111: goto label178;
            case 112: goto label177;
            case 113: goto label176;
            case 114: goto label175;
            case 115: goto label174;
            case 116: goto label173;
            case 117: goto label172;
            case 118: goto label171;
            case 119: goto label170;
            case 120: goto label169;
            case 121: goto label168;
            case 122: goto label167;
            case 123: goto label166;
            case 124: goto label165;
            case 125: goto label164;
            case 126: goto label163;
            case 127: goto label162;
            case 128: goto label161;
            case 129: goto label160;
            case 130: goto label159;
            case 131: goto label158;
            case 132: goto label157;
            case 133: goto label156;
            case 134: goto label155;
            case 135: goto label154;
            case 136: goto label153;
            case 137: goto label152;
            case 138: goto label151;
            case 139: goto label150;
            case 140: goto label149;
            case 141: goto label148;
            case 142: goto label147;
            case 143: goto label146;
            case 144: goto label145;
            case 145: goto label144;
            case 146: goto label143;
            case 147: goto label142;
            case 148: goto label141;
            case 149: goto label140;
            case 150: goto label139;
            case 151: goto label138;
            case 152: goto label137;
            case 153: goto label136;
            case 154: goto label135;
            case 155: goto label134;
            case 156: goto label133;
            case 157: goto label132;
            case 158: goto label131;
            case 159: goto label130;
            case 160: goto label129;
            case 161: goto label128;
            case 162: goto label127;
            case 163: goto label126;
            case 164: goto label125;
            case 165: goto label124;
            case 166: goto label123;
            case 167: goto label122;
            case 168: goto label121;
            case 169: goto label120;
            case 170: goto label119;
            case 171: goto label118;
            case 172: goto label117;
            case 173: goto label116;
            case 174: goto label115;
            case 175: goto label114;
            case 176: goto label113;
            case 177: goto label112;
            case 178: goto label111;
            case 179: goto label110;
            case 180: goto label109;
            case 181: goto label108;
            case 182: goto label107;
            case 183: goto label106;
            case 184: goto label105;
            case 185: goto label104;
            case 186: goto label103;
            case 187: goto label102;
            case 188: goto label101;
            case 189: goto label100;
            case 190: goto label099;
            case 191: goto label098;
            case 192: goto label097;
            case 193: goto label096;
            case 194: goto label095;
            case 195: goto label094;
            case 196: goto label093;
            case 197: goto label092;
            case 198: goto label091;
            case 199: goto label090;
            case 200: goto label089;
            case 201: goto label088;
            case 202: goto label087;
            case 203: goto label086;
            case 204: goto label085;
            case 205: goto label084;
            case 206: goto label083;
            case 207: goto label082;
            case 208: goto label081;
            case 209: goto label080;
            case 210: goto label079;
            case 211: goto label078;
            case 212: goto label077;
            case 213: goto label076;
            case 214: goto label075;
            case 215: goto label074;
            case 216: goto label073;
            case 217: goto label072;
            case 218: goto label071;
            case 219: goto label070;
            case 220: goto label069;
            case 221: goto label068;
            case 222: goto label067;
            case 223: goto label066;
            case 224: goto label065;
            case 225: goto label064;
            case 226: goto label063;
            case 227: goto label062;
            case 228: goto label061;
            case 229: goto label060;
            case 230: goto label059;
            case 231: goto label058;
            case 232: goto label057;
            case 233: goto label056;
            case 234: goto label055;
            case 235: goto label054;
            case 236: goto label053;
            case 237: goto label052;
            case 238: goto label051;
            case 239: goto label050;
            case 240: goto label049;
            case 241: goto label048;
            case 242: goto label047;
            case 243: goto label046;
            case 244: goto label045;
            case 245: goto label044;
            case 246: goto label043;
            case 247: goto label042;
            case 248: goto label041;
            case 249: goto label040;
            case 250: goto label039;
            case 251: goto label038;
            case 252: goto label037;
            case 253: goto label036;
            case 254: goto label035;
            case 255: goto label034;
            case 256: goto label033;
            case 257: goto label032;
            case 258: goto label031;
            case 259: goto label030;
            case 260: goto label029;
            case 261: goto label028;
            case 262: goto label027;
            case 263: goto label026;
            case 264: goto label025;
            case 265: goto label024;
            case 266: goto label023;
            case 267: goto label022;
            case 268: goto label021;
            case 269: goto label020;
            case 270: goto label019;
            case 271: goto label018;
            case 272: goto label017;
            case 273: goto label016;
            case 274: goto label015;
            case 275: goto label014;
            case 276: goto label013;
            case 277: goto label012;
            case 278: goto label011;
            case 279: goto label010;
            case 280: goto label009;
            case 281: goto label008;
            case 282: goto label007;
            case 283: goto label006;
            case 284: goto label005;
            case 285: goto label004;
            case 286: goto label003;
            case 287: goto label002;
            default: goto label001;
        };

     label001:
        return null;

     label002:
        return "canConnectTo5GInDsdsMode";

     label003:
        return "getManualNetworkSelectionPlmn";

     label004:
        return "userActivity";

     label005:
        return "requestUserActivityNotification";

     label006:
        return "changeIccLockPassword";

     label007:
        return "setIccLockEnabled";

     label008:
        return "isIccLockEnabled";

     label009:
        return "notifyRcsAutoConfigurationReceived";

     label010:
        return "setCepEnabled";

     label011:
        return "setAlwaysAllowMmsData";

     label012:
        return "isDataAllowedInVoiceCall";

     label013:
        return "setDataAllowedDuringVoiceCall";

     label014:
        return "getMmsUAProfUrl";

     label015:
        return "getMmsUserAgent";

     label016:
        return "enqueueSmsPickResult";

     label017:
        return "isMvnoMatched";

     label018:
        return "setSystemSelectionChannels";

     label019:
        return "isApnMetered";

     label020:
        return "isDataEnabledForApn";

     label021:
        return "isModemEnabledForSlot";

     label022:
        return "isApplicationOnUicc";

     label023:
        return "getCurrentPackageName";

     label024:
        return "getRadioHalVersion";

     label025:
        return "getSlotsMapping";

     label026:
        return "doesSwitchMultiSimConfigTriggerReboot";

     label027:
        return "switchMultiSimConfig";

     label028:
        return "isMultiSimSupported";

     label029:
        return "setMultiSimCarrierRestriction";

     label030:
        return "enableModemForSlot";

     label031:
        return "resetOtaEmergencyNumberDbFilePath";

     label032:
        return "updateOtaEmergencyNumberDbFilePath";

     label033:
        return "notifyOtaEmergencyNumberDbInstalled";

     label034:
        return "getEmergencyNumberDbVersion";

     label035:
        return "getEmergencyNumberListTestMode";

     label036:
        return "updateEmergencyNumberListTestMode";

     label037:
        return "setImsProvisioningString";

     label038:
        return "setImsProvisioningInt";

     label039:
        return "getImsProvisioningString";

     label040:
        return "getImsProvisioningInt";

     label041:
        return "cacheMmTelCapabilityProvisioning";

     label042:
        return "isMmTelCapabilityProvisionedInCache";

     label043:
        return "setRcsProvisioningStatusForCapability";

     label044:
        return "getRcsProvisioningStatusForCapability";

     label045:
        return "getImsProvisioningStatusForCapability";

     label046:
        return "setImsProvisioningStatusForCapability";

     label047:
        return "unregisterImsProvisioningChangedCallback";

     label048:
        return "registerImsProvisioningChangedCallback";

     label049:
        return "getCertsFromCarrierPrivilegeAccessRules";

     label050:
        return "isEmergencyNumber";

     label051:
        return "getEmergencyNumberList";

     label052:
        return "isTtyOverVolteEnabled";

     label053:
        return "setRttCapabilitySetting";

     label054:
        return "setVoWiFiRoamingModeSetting";

     label055:
        return "getVoWiFiRoamingModeSetting";

     label056:
        return "setVoWiFiModeSetting";

     label057:
        return "getVoWiFiModeSetting";

     label058:
        return "setVoWiFiNonPersistent";

     label059:
        return "setVoWiFiRoamingSettingEnabled";

     label060:
        return "isVoWiFiRoamingSettingEnabled";

     label061:
        return "setVoWiFiSettingEnabled";

     label062:
        return "isVoWiFiSettingEnabled";

     label063:
        return "setVtSettingEnabled";

     label064:
        return "isVtSettingEnabled";

     label065:
        return "setAdvancedCallingSettingEnabled";

     label066:
        return "isAdvancedCallingSettingEnabled";

     label067:
        return "isMmTelCapabilitySupported";

     label068:
        return "isAvailable";

     label069:
        return "isCapable";

     label070:
        return "unregisterMmTelCapabilityCallback";

     label071:
        return "registerMmTelCapabilityCallback";

     label072:
        return "getImsMmTelRegistrationTransportType";

     label073:
        return "getImsMmTelRegistrationState";

     label074:
        return "unregisterImsRegistrationCallback";

     label075:
        return "registerImsRegistrationCallback";

     label076:
        return "getRadioPowerState";

     label077:
        return "isInEmergencySmsMode";

     label078:
        return "getNetworkSelectionMode";

     label079:
        return "getNumberOfModemsWithSimultaneousDataConnections";

     label080:
        return "refreshUiccProfile";

     label081:
        return "getCarrierIdListVersion";

     label082:
        return "setCarrierTestOverride";

     label083:
        return "setCdmaSubscriptionMode";

     label084:
        return "setCdmaRoamingMode";

     label085:
        return "getCdmaRoamingMode";

     label086:
        return "setDataRoamingEnabled";

     label087:
        return "isDataRoamingEnabled";

     label088:
        return "switchSlots";

     label089:
        return "getUiccSlotsInfo";

     label090:
        return "getUiccCardsInfo";

     label091:
        return "getCardIdForDefaultEuicc";

     label092:
        return "getSignalStrength";

     label093:
        return "getEmergencyCallbackMode";

     label094:
        return "setForbiddenPlmns";

     label095:
        return "getForbiddenPlmns";

     label096:
        return "setSimPowerStateForSlot";

     label097:
        return "getClientRequestStats";

     label098:
        return "setPolicyDataEnabled";

     label099:
        return "setCallWaitingStatus";

     label100:
        return "getCallWaitingStatus";

     label101:
        return "setCallForwarding";

     label102:
        return "getCallForwarding";

     label103:
        return "carrierActionResetAll";

     label104:
        return "carrierActionReportDefaultNetworkStatus";

     label105:
        return "carrierActionSetRadioEnabled";

     label106:
        return "carrierActionSetMeteredApnsEnabled";

     label107:
        return "getCarrierIdFromMccMnc";

     label108:
        return "getSubscriptionSpecificCarrierName";

     label109:
        return "getSubscriptionSpecificCarrierId";

     label110:
        return "getSubscriptionCarrierName";

     label111:
        return "getSubscriptionCarrierId";

     label112:
        return "getAllowedCarriers";

     label113:
        return "setAllowedCarriers";

     label114:
        return "getTelephonyHistograms";

     label115:
        return "getCdmaPrlVersion";

     label116:
        return "getEsn";

     label117:
        return "getAidForAppType";

     label118:
        return "getPackagesWithCarrierPrivilegesForAllPhones";

     label119:
        return "getPackagesWithCarrierPrivileges";

     label120:
        return "setVoicemailVibrationEnabled";

     label121:
        return "isVoicemailVibrationEnabled";

     label122:
        return "setVoicemailRingtoneUri";

     label123:
        return "getVoicemailRingtoneUri";

     label124:
        return "getServiceStateForSubscriber";

     label125:
        return "requestModemActivityInfo";

     label126:
        return "getSimLocaleForSubscriber";

     label127:
        return "factoryReset";

     label128:
        return "getPhoneAccountHandleForSubscriptionId";

     label129:
        return "getSubIdForPhoneAccountHandle";

     label130:
        return "getSubIdForPhoneAccount";

     label131:
        return "getDeviceSoftwareVersionForSlot";

     label132:
        return "getManufacturerCodeForSlot";

     label133:
        return "getMeidForSlot";

     label134:
        return "getTypeAllocationCodeForSlot";

     label135:
        return "getImeiForSlot";

     label136:
        return "getDeviceIdWithFeature";

     label137:
        return "getDeviceId";

     label138:
        return "getImsRegTechnologyForMmTel";

     label139:
        return "isVideoTelephonyAvailable";

     label140:
        return "isWifiCallingAvailable";

     label141:
        return "isImsRegistered";

     label142:
        return "isHearingAidCompatibilitySupported";

     label143:
        return "isRttSupported";

     label144:
        return "isTtyModeSupported";

     label145:
        return "isWorldPhone";

     label146:
        return "canChangeDtmfToneLength";

     label147:
        return "isVideoCallingEnabled";

     label148:
        return "enableVideoCalling";

     label149:
        return "getRadioAccessFamily";

     label150:
        return "setRadioCapability";

     label151:
        return "shutdownMobileRadios";

     label152:
        return "needMobileRadioShutdown";

     label153:
        return "invokeOemRilRequestRaw";

     label154:
        return "setRoamingOverride";

     label155:
        return "setOperatorBrandOverride";

     label156:
        return "getMergedImsisFromGroup";

     label157:
        return "getMergedSubscriberIds";

     label158:
        return "getLine1AlphaTagForDisplay";

     label159:
        return "getLine1NumberForDisplay";

     label160:
        return "setLine1NumberForDisplayForSubscriber";

     label161:
        return "getCarrierPackageNamesForIntentAndPhone";

     label162:
        return "checkCarrierPrivilegesForPackageAnyPhone";

     label163:
        return "checkCarrierPrivilegesForPackage";

     label164:
        return "getCarrierPrivilegeStatusForUid";

     label165:
        return "getCarrierPrivilegeStatus";

     label166:
        return "requestNumberVerification";

     label167:
        return "getCdmaMin";

     label168:
        return "getCdmaMdn";

     label169:
        return "setImsRegistrationState";

     label170:
        return "getPcscfAddress";

     label171:
        return "setAlwaysReportSignalStrength";

     label172:
        return "isManualNetworkSelectionAllowed";

     label173:
        return "isDataEnabled";

     label174:
        return "isUserDataEnabled";

     label175:
        return "getDataEnabled";

     label176:
        return "setUserDataEnabled";

     label177:
        return "setPreferredNetworkType";

     label178:
        return "setAllowedNetworkTypesForReason";

     label179:
        return "getEffectiveAllowedNetworkTypes";

     label180:
        return "getAllowedNetworkTypesForReason";

     label181:
        return "setAllowedNetworkTypes";

     label182:
        return "getAllowedNetworkTypes";

     label183:
        return "setNetworkSelectionModeManual";

     label184:
        return "stopNetworkScan";

     label185:
        return "requestNetworkScan";

     label186:
        return "getCellNetworkScanResults";

     label187:
        return "setNetworkSelectionModeAutomatic";

     label188:
        return "getImsMmTelFeatureState";

     label189:
        return "getBoundImsServicePackage";

     label190:
        return "setBoundImsServiceOverride";

     label191:
        return "getImsConfig";

     label192:
        return "getImsRegistration";

     label193:
        return "unregisterImsFeatureCallback";

     label194:
        return "getRcsFeatureAndListen";

     label195:
        return "getMmTelFeatureAndListen";

     label196:
        return "resetIms";

     label197:
        return "disableIms";

     label198:
        return "enableIms";

     label199:
        return "isTetheringApnRequiredForSubscriber";

     label200:
        return "getPreferredNetworkType";

     label201:
        return "getCalculatedPreferredNetworkType";

     label202:
        return "rebootModem";

     label203:
        return "resetModemConfig";

     label204:
        return "nvWriteCdmaPrl";

     label205:
        return "nvWriteItem";

     label206:
        return "nvReadItem";

     label207:
        return "sendEnvelopeWithStatus";

     label208:
        return "iccExchangeSimIO";

     label209:
        return "iccTransmitApduBasicChannel";

     label210:
        return "iccTransmitApduBasicChannelBySlot";

     label211:
        return "iccTransmitApduLogicalChannel";

     label212:
        return "iccTransmitApduLogicalChannelBySlot";

     label213:
        return "iccCloseLogicalChannel";

     label214:
        return "iccCloseLogicalChannelBySlot";

     label215:
        return "iccOpenLogicalChannel";

     label216:
        return "iccOpenLogicalChannelBySlot";

     label217:
        return "setCellInfoListRate";

     label218:
        return "requestCellInfoUpdateWithWorkSource";

     label219:
        return "requestCellInfoUpdate";

     label220:
        return "getAllCellInfo";

     label221:
        return "getLteOnCdmaModeForSubscriber";

     label222:
        return "getLteOnCdmaMode";

     label223:
        return "hasIccCardUsingSlotIndex";

     label224:
        return "hasIccCard";

     label225:
        return "getVoiceNetworkTypeForSubscriber";

     label226:
        return "getDataNetworkTypeForSubscriber";

     label227:
        return "getDataNetworkType";

     label228:
        return "getNetworkTypeForSubscriber";

     label229:
        return "sendDialerSpecialCode";

     label230:
        return "sendVisualVoicemailSmsForSubscriber";

     label231:
        return "getActiveVisualVoicemailSmsFilterSettings";

     label232:
        return "getVisualVoicemailSmsFilterSettings";

     label233:
        return "disableVisualVoicemailSmsFilter";

     label234:
        return "enableVisualVoicemailSmsFilter";

     label235:
        return "getVisualVoicemailPackageName";

     label236:
        return "getVisualVoicemailSettings";

     label237:
        return "isConcurrentVoiceAndDataAllowed";

     label238:
        return "getVoiceMessageCountForSubscriber";

     label239:
        return "getDataActivationState";

     label240:
        return "getVoiceActivationState";

     label241:
        return "setDataActivationState";

     label242:
        return "setVoiceActivationState";

     label243:
        return "setVoiceMailNumber";

     label244:
        return "needsOtaServiceProvisioning";

     label245:
        return "getCdmaEriTextForSubscriber";

     label246:
        return "getCdmaEriText";

     label247:
        return "getCdmaEriIconModeForSubscriber";

     label248:
        return "getCdmaEriIconMode";

     label249:
        return "getCdmaEriIconIndexForSubscriber";

     label250:
        return "getCdmaEriIconIndex";

     label251:
        return "getActivePhoneTypeForSlot";

     label252:
        return "getActivePhoneType";

     label253:
        return "getDataStateForSubId";

     label254:
        return "getDataState";

     label255:
        return "getDataActivityForSubId";

     label256:
        return "getDataActivity";

     label257:
        return "getCallStateForSlot";

     label258:
        return "getCallState";

     label259:
        return "getNeighboringCellInfo";

     label260:
        return "getNetworkCountryIsoForPhone";

     label261:
        return "getCellLocation";

     label262:
        return "isDataConnectivityPossible";

     label263:
        return "disableDataConnectivity";

     label264:
        return "enableDataConnectivity";

     label265:
        return "disableLocationUpdatesForSubscriber";

     label266:
        return "disableLocationUpdates";

     label267:
        return "enableLocationUpdatesForSubscriber";

     label268:
        return "enableLocationUpdates";

     label269:
        return "updateServiceLocationForSubscriber";

     label270:
        return "updateServiceLocation";

     label271:
        return "setRadioPower";

     label272:
        return "setRadioForSubscriber";

     label273:
        return "setRadio";

     label274:
        return "toggleRadioOnOffForSubscriber";

     label275:
        return "toggleRadioOnOff";

     label276:
        return "handlePinMmiForSubscriber";

     label277:
        return "handleUssdRequest";

     label278:
        return "handlePinMmi";

     label279:
        return "supplyPukReportResultForSubscriber";

     label280:
        return "supplyPinReportResultForSubscriber";

     label281:
        return "supplyPukForSubscriber";

     label282:
        return "supplyPinForSubscriber";

     label283:
        return "isRadioOnForSubscriberWithFeature";

     label284:
        return "isRadioOnForSubscriber";

     label285:
        return "isRadioOnWithFeature";

     label286:
        return "isRadioOn";

     label287:
        return "call";

     label288:
        return "dial";
    }

    private boolean onTransact$cacheMmTelCapabilityProvisioning$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r2;
        int i0, i1, i2, $i3;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.Parcel;

        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void cacheMmTelCapabilityProvisioning(int,int,int,boolean)>(i0, i1, i2, z0);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;
    }

    private boolean onTransact$iccExchangeSimIO$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2;
        byte[] r4;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r3 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcel;

        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $r2 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

        r4 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: byte[] iccExchangeSimIO(int,int,int,int,int,int,java.lang.String)>($i0, $i1, $i2, $i3, $i4, $i5, $r2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r4);

        return 1;
    }

    private boolean onTransact$iccTransmitApduBasicChannel$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2, $r3, r5;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r4 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcel;

        virtualinvoke r4.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $r2 = virtualinvoke r4.<android.os.Parcel: java.lang.String readString()>();

        $i1 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $r3 = virtualinvoke r4.<android.os.Parcel: java.lang.String readString()>();

        r5 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String iccTransmitApduBasicChannel(int,java.lang.String,int,int,int,int,int,java.lang.String)>($i0, $r2, $i1, $i2, $i3, $i4, $i5, $r3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r5);

        return 1;
    }

    private boolean onTransact$iccTransmitApduBasicChannelBySlot$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2, $r3, r5;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r4 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcel;

        virtualinvoke r4.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $r2 = virtualinvoke r4.<android.os.Parcel: java.lang.String readString()>();

        $i1 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        $r3 = virtualinvoke r4.<android.os.Parcel: java.lang.String readString()>();

        r5 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String iccTransmitApduBasicChannelBySlot(int,java.lang.String,int,int,int,int,int,java.lang.String)>($i0, $r2, $i1, $i2, $i3, $i4, $i5, $r3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r5);

        return 1;
    }

    private boolean onTransact$iccTransmitApduLogicalChannel$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r2, r4;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r3 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcel;

        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $r2 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

        r4 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,int,java.lang.String)>($i0, $i1, $i2, $i3, $i4, $i5, $i6, $r2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        return 1;
    }

    private boolean onTransact$iccTransmitApduLogicalChannelBySlot$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r2, r4;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r3 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcel;

        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $r2 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

        r4 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String iccTransmitApduLogicalChannelBySlot(int,int,int,int,int,int,int,java.lang.String)>($i0, $i1, $i2, $i3, $i4, $i5, $i6, $r2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        return 1;
    }

    private boolean onTransact$requestCellInfoUpdateWithWorkSource$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r8;
        int i0, $i1;
        android.telephony.ICellInfoCallback r2;
        java.lang.String r3, r4;
        android.os.IBinder $r5;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;
        android.os.WorkSource r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r8 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcel;

        virtualinvoke r8.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i0 = virtualinvoke r8.<android.os.Parcel: int readInt()>();

        $r5 = virtualinvoke r8.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r2 = staticinvoke <android.telephony.ICellInfoCallback$Stub: android.telephony.ICellInfoCallback asInterface(android.os.IBinder)>($r5);

        r3 = virtualinvoke r8.<android.os.Parcel: java.lang.String readString()>();

        r4 = virtualinvoke r8.<android.os.Parcel: java.lang.String readString()>();

        $i1 = virtualinvoke r8.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label1;

        $r6 = <android.os.WorkSource: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r8);

        r9 = (android.os.WorkSource) $r7;

        goto label2;

     label1:
        r9 = null;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void requestCellInfoUpdateWithWorkSource(int,android.telephony.ICellInfoCallback,java.lang.String,java.lang.String,android.os.WorkSource)>(i0, r2, r3, r4, r9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;
    }

    private boolean onTransact$requestNetworkScan$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r2;
        int $i0, $i1, i2, i3;
        android.os.IBinder $r3;
        java.lang.String $r4, $r5;
        android.os.Parcelable$Creator $r6, $r8;
        java.lang.Object $r7, $r9;
        android.telephony.NetworkScanRequest r10;
        android.os.Messenger r11;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.Parcel;

        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        $r8 = <android.telephony.NetworkScanRequest: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r10 = (android.telephony.NetworkScanRequest) $r9;

        goto label2;

     label1:
        r10 = null;

     label2:
        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label3;

        $r6 = <android.os.Messenger: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r11 = (android.os.Messenger) $r7;

        goto label4;

     label3:
        r11 = null;

     label4:
        $r3 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i3 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int requestNetworkScan(int,android.telephony.NetworkScanRequest,android.os.Messenger,android.os.IBinder,java.lang.String,java.lang.String)>(i2, r10, r11, $r3, $r4, $r5);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

        return 1;
    }

    private boolean onTransact$sendVisualVoicemailSmsForSubscriber$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r8;
        java.lang.String r2, r3, r4, r5;
        int i0, i1, $i2;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;
        android.app.PendingIntent r9;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r8 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcel;

        virtualinvoke r8.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r2 = virtualinvoke r8.<android.os.Parcel: java.lang.String readString()>();

        r3 = virtualinvoke r8.<android.os.Parcel: java.lang.String readString()>();

        i0 = virtualinvoke r8.<android.os.Parcel: int readInt()>();

        r4 = virtualinvoke r8.<android.os.Parcel: java.lang.String readString()>();

        i1 = virtualinvoke r8.<android.os.Parcel: int readInt()>();

        r5 = virtualinvoke r8.<android.os.Parcel: java.lang.String readString()>();

        $i2 = virtualinvoke r8.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label1;

        $r6 = <android.app.PendingIntent: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r8);

        r9 = (android.app.PendingIntent) $r7;

        goto label2;

     label1:
        r9 = null;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void sendVisualVoicemailSmsForSubscriber(java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,android.app.PendingIntent)>(r2, r3, i0, r4, i1, r5, r9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;
    }

    private boolean onTransact$setCarrierTestOverride$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r2;
        int $i0;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.Parcel;

        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r10 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setCarrierTestOverride(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($i0, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;
    }

    private boolean onTransact$setForbiddenPlmns$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r2;
        int i0, $i1, $i2;
        java.util.ArrayList $r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.Parcel;

        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i0 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int setForbiddenPlmns(int,int,java.util.List,java.lang.String,java.lang.String)>($i1, $i2, $r3, $r4, $r5);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        return 1;
    }

    private boolean onTransact$setRoamingOverride$(android.os.Parcel, android.os.Parcel) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r2;
        boolean z0;
        int $i0, i1;
        java.util.ArrayList $r3, $r4, $r5, $r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.Parcel;

        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        $r4 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        $r5 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        $r6 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        z0 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setRoamingOverride(int,java.util.List,java.util.List,java.util.List,java.util.List)>($i0, $r3, $r4, $r5, $r6);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        i1 = (int) z0;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        return 1;
    }

    public static boolean setDefaultImpl(com.android.internal.telephony.ITelephony)
    {
        com.android.internal.telephony.ITelephony r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: com.android.internal.telephony.ITelephony;

        $r1 = <com.android.internal.telephony.ITelephony$Stub$Proxy: com.android.internal.telephony.ITelephony sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <com.android.internal.telephony.ITelephony$Stub$Proxy: com.android.internal.telephony.ITelephony sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.telephony.ITelephony$Stub r0;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        android.os.Parcel r1, r213;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i182, $i183, $i184, $i185, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, i270, i271, i272, i273, i274, i275, i276, i277, i278, i279, i280, i281, i282, i283, i284, i285, i286, i287, i288, i289, i290, i291, i292, i293, i294, i295, i296, i297, i298, i299, i300, i301, i302, i303, i304, i305, i306, i307, i308, i309, i310, i311, i312, i313, i314, i315, i316, i317, i318, i319, i320, i321, i322, i323, i324, i325, i326, i327, i331, i332, i333, i334, i335, i336, i337, i338, i339, i340, i341, i342, i343, i344, i345, i346, i347, i348, i349, i350, i351, i352, i353, i354, i355, i356, i357, i358, i359, i360, i361, i362, i363, i364, i365, i366, i367, i368, i369, i370, i371, i372, i373, i374, i375, i376, i377, i378, i379, i380, i381, i382, i383, i384, i385, i386, i387, i388, i389, i390, i391, i392, i393, i394, i395, i396, i397, i398, i399, i400, i401, i402, i403, i404, i405, i406, i407, i408, i409, i410, i411, i412, i413, i414, i415, i416, i417, i418, i419, i420, i421, i422, i423, i424, i425, i426, i427, i428, i429, i430, i431, i432, i433, i434, i435, i436, i437, i438;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r9, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r25, $r30, $r31, $r46, $r47, $r48, $r49, $r51, $r52, $r53, $r54, $r55, $r56, $r71, $r72, $r75, $r76, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r112, $r113, $r116, $r119, $r120, $r121, $r124, $r125, $r129, $r136, $r137, $r139, $r140, $r141, $r142, $r143, $r144, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r197, $r198, $r199, $r200, $r201, $r202, $r203, $r204, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, r214, r216, r217, r218, r223, r225, r234, r235, r236, r240, r241, r242, r245, r248, r255, r259, r260, r261, r262, r263, r264, r265, r270, r271, r275, r276, r280, r289, r290, r296, r298, r300, r301, r303, r305;
        android.os.IBinder $r7, $r12, $r26, $r28, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r114, $r126, $r130, $r132, $r134, $r145, r282, r284, r286, r288;
        com.android.internal.telephony.IIntegerConsumer $r8, $r33, $r39, $r41, $r127;
        android.os.Parcelable$Creator $r10, $r21, $r23, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r73, $r77, $r79, $r97, $r110, $r117, $r122, $r167, $r195;
        java.util.ArrayList $r11;
        com.android.internal.telephony.IBooleanConsumer $r13;
        java.lang.Object $r22, $r24, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r74, $r78, $r80, $r111, $r118, $r123, $r168, $r196;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43, z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z55, z56, z57, z58, z59, z60, z61, z62, z63, z64, z65, z66, z67, z68, z69, z70, z71, z72, z73, z74, z75, z76, z77, z78, z79, z80, z81, z82, z83, z84, z85, z86, z87, z88, z89, z90, z91, z92, z93, z94, z95, z96, z97, z98, z99, z100, z101, z102, z103, z104, z105, z106, z107, z108, z109, z110, z111, z112, z113, z114, z115, z116, z117, z118, z119, z120, z121, z122, z123, z124, z125;
        android.telephony.ims.aidl.IImsConfigCallback $r27, $r29;
        android.telephony.ims.aidl.IImsCapabilityCallback $r35, $r37;
        android.telephony.ims.aidl.IImsRegistrationCallback $r43, $r45;
        int[] $r50, $r128, r219, r307, r308;
        java.lang.Object[] $r98;
        android.telephony.RadioAccessFamily[] $r99;
        long $l167, $l181, $l186, l328, l329, l330;
        com.android.internal.telephony.INumberVerificationCallback $r115;
        com.android.ims.internal.IImsServiceFeatureCallback $r131, $r133, $r135;
        byte[] $r138, r215, r266, r267;
        android.telephony.ICellInfoCallback $r146;
        android.os.ParcelFileDescriptor r220;
        java.util.List r221, r224, r228, r231, r239, r243, r244, r273, r293, r302;
        android.telephony.emergency.EmergencyNumber r222;
        java.util.Map r226;
        android.telephony.UiccSlotInfo[] r227;
        android.telephony.SignalStrength r229;
        java.lang.String[] r230, r268, r269, r277;
        android.telephony.CallForwardingInfo r232, r233;
        android.telephony.CarrierRestrictionRules r237, r238;
        android.telecom.PhoneAccountHandle r246, r247, r249, r251, r256, r257;
        android.net.Uri r250, r252;
        android.telephony.ServiceState r253;
        android.os.ResultReceiver r254, r306;
        android.telecom.PhoneAccount r258;
        android.content.Intent r272;
        android.telephony.PhoneNumberRange r274;
        com.android.internal.telephony.OperatorInfo r278;
        com.android.internal.telephony.CellNetworkScanResult r279;
        android.telephony.ims.aidl.IImsConfig r281;
        android.telephony.ims.aidl.IImsRegistration r283;
        android.telephony.ims.aidl.IImsRcsFeature r285;
        android.telephony.ims.aidl.IImsMmTelFeature r287;
        android.telephony.IccOpenLogicalChannelResponse r291, r292;
        android.telephony.VisualVoicemailSmsFilterSettings r294, r295, r297;
        android.os.Bundle r299;
        android.telephony.CellIdentity r304;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;

        i270 := @parameter0: int;

        r213 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i271 := @parameter3: int;

        if i270 == 1598968902 goto label389;

        z13 = 0;

        tableswitch(i270)
        {
            case 1: goto label388;
            case 2: goto label387;
            case 3: goto label386;
            case 4: goto label385;
            case 5: goto label384;
            case 6: goto label383;
            case 7: goto label382;
            case 8: goto label381;
            case 9: goto label380;
            case 10: goto label379;
            case 11: goto label378;
            case 12: goto label375;
            case 13: goto label374;
            case 14: goto label373;
            case 15: goto label372;
            case 16: goto label370;
            case 17: goto label368;
            case 18: goto label366;
            case 19: goto label365;
            case 20: goto label364;
            case 21: goto label363;
            case 22: goto label362;
            case 23: goto label361;
            case 24: goto label360;
            case 25: goto label359;
            case 26: goto label358;
            case 27: goto label357;
            case 28: goto label354;
            case 29: goto label353;
            case 30: goto label352;
            case 31: goto label351;
            case 32: goto label350;
            case 33: goto label349;
            case 34: goto label348;
            case 35: goto label347;
            case 36: goto label346;
            case 37: goto label345;
            case 38: goto label344;
            case 39: goto label343;
            case 40: goto label342;
            case 41: goto label341;
            case 42: goto label340;
            case 43: goto label339;
            case 44: goto label338;
            case 45: goto label337;
            case 46: goto label336;
            case 47: goto label335;
            case 48: goto label334;
            case 49: goto label333;
            case 50: goto label332;
            case 51: goto label331;
            case 52: goto label330;
            case 53: goto label327;
            case 54: goto label326;
            case 55: goto label323;
            case 56: goto label322;
            case 57: goto label319;
            case 58: goto label316;
            case 59: goto label315;
            case 60: goto label314;
            case 61: goto label313;
            case 62: goto label312;
            case 63: goto label311;
            case 64: goto label310;
            case 65: goto label309;
            case 66: goto label308;
            case 67: goto label307;
            case 68: goto label306;
            case 69: goto label305;
            case 70: goto label304;
            case 71: goto label303;
            case 72: goto label302;
            case 73: goto label299;
            case 74: goto label296;
            case 75: goto label295;
            case 76: goto label294;
            case 77: goto label293;
            case 78: goto label292;
            case 79: goto label291;
            case 80: goto label290;
            case 81: goto label289;
            case 82: goto label288;
            case 83: goto label287;
            case 84: goto label286;
            case 85: goto label285;
            case 86: goto label284;
            case 87: goto label283;
            case 88: goto label282;
            case 89: goto label281;
            case 90: goto label280;
            case 91: goto label279;
            case 92: goto label278;
            case 93: goto label277;
            case 94: goto label275;
            case 95: goto label273;
            case 96: goto label272;
            case 97: goto label270;
            case 98: goto label268;
            case 99: goto label266;
            case 100: goto label264;
            case 101: goto label263;
            case 102: goto label262;
            case 103: goto label259;
            case 104: goto label258;
            case 105: goto label257;
            case 106: goto label253;
            case 107: goto label252;
            case 108: goto label251;
            case 109: goto label250;
            case 110: goto label249;
            case 111: goto label248;
            case 112: goto label247;
            case 113: goto label245;
            case 114: goto label244;
            case 115: goto label243;
            case 116: goto label242;
            case 117: goto label241;
            case 118: goto label239;
            case 119: goto label238;
            case 120: goto label236;
            case 121: goto label235;
            case 122: goto label234;
            case 123: goto label231;
            case 124: goto label230;
            case 125: goto label229;
            case 126: goto label228;
            case 127: goto label227;
            case 128: goto label224;
            case 129: goto label223;
            case 130: goto label222;
            case 131: goto label221;
            case 132: goto label220;
            case 133: goto label219;
            case 134: goto label218;
            case 135: goto label217;
            case 136: goto label214;
            case 137: goto label213;
            case 138: goto label212;
            case 139: goto label211;
            case 140: goto label210;
            case 141: goto label208;
            case 142: goto label207;
            case 143: goto label206;
            case 144: goto label205;
            case 145: goto label204;
            case 146: goto label203;
            case 147: goto label202;
            case 148: goto label201;
            case 149: goto label200;
            case 150: goto label199;
            case 151: goto label198;
            case 152: goto label197;
            case 153: goto label196;
            case 154: goto label195;
            case 155: goto label194;
            case 156: goto label193;
            case 157: goto label192;
            case 158: goto label191;
            case 159: goto label188;
            case 160: goto label185;
            case 161: goto label182;
            case 162: goto label181;
            case 163: goto label180;
            case 164: goto label177;
            case 165: goto label174;
            case 166: goto label169;
            case 167: goto label164;
            case 168: goto label161;
            case 169: goto label157;
            case 170: goto label156;
            case 171: goto label155;
            case 172: goto label154;
            case 173: goto label153;
            case 174: goto label152;
            case 175: goto label151;
            case 176: goto label148;
            case 177: goto label145;
            case 178: goto label144;
            case 179: goto label143;
            case 180: goto label142;
            case 181: goto label141;
            case 182: goto label139;
            case 183: goto label137;
            case 184: goto label135;
            case 185: goto label133;
            case 186: goto label132;
            case 187: goto label129;
            case 188: goto label126;
            case 189: goto label125;
            case 190: goto label123;
            case 191: goto label121;
            case 192: goto label120;
            case 193: goto label119;
            case 194: goto label118;
            case 195: goto label117;
            case 196: goto label116;
            case 197: goto label113;
            case 198: goto label112;
            case 199: goto label111;
            case 200: goto label110;
            case 201: goto label109;
            case 202: goto label108;
            case 203: goto label106;
            case 204: goto label105;
            case 205: goto label104;
            case 206: goto label103;
            case 207: goto label102;
            case 208: goto label101;
            case 209: goto label100;
            case 210: goto label099;
            case 211: goto label098;
            case 212: goto label097;
            case 213: goto label096;
            case 214: goto label095;
            case 215: goto label094;
            case 216: goto label093;
            case 217: goto label092;
            case 218: goto label091;
            case 219: goto label090;
            case 220: goto label089;
            case 221: goto label088;
            case 222: goto label087;
            case 223: goto label086;
            case 224: goto label084;
            case 225: goto label083;
            case 226: goto label081;
            case 227: goto label080;
            case 228: goto label078;
            case 229: goto label077;
            case 230: goto label075;
            case 231: goto label073;
            case 232: goto label072;
            case 233: goto label071;
            case 234: goto label070;
            case 235: goto label069;
            case 236: goto label067;
            case 237: goto label066;
            case 238: goto label065;
            case 239: goto label063;
            case 240: goto label062;
            case 241: goto label061;
            case 242: goto label060;
            case 243: goto label058;
            case 244: goto label057;
            case 245: goto label056;
            case 246: goto label054;
            case 247: goto label053;
            case 248: goto label052;
            case 249: goto label051;
            case 250: goto label050;
            case 251: goto label049;
            case 252: goto label048;
            case 253: goto label045;
            case 254: goto label044;
            case 255: goto label043;
            case 256: goto label042;
            case 257: goto label039;
            case 258: goto label038;
            case 259: goto label036;
            case 260: goto label034;
            case 261: goto label033;
            case 262: goto label032;
            case 263: goto label031;
            case 264: goto label030;
            case 265: goto label029;
            case 266: goto label028;
            case 267: goto label027;
            case 268: goto label026;
            case 269: goto label025;
            case 270: goto label024;
            case 271: goto label023;
            case 272: goto label022;
            case 273: goto label021;
            case 274: goto label020;
            case 275: goto label019;
            case 276: goto label017;
            case 277: goto label016;
            case 278: goto label014;
            case 279: goto label012;
            case 280: goto label010;
            case 281: goto label009;
            case 282: goto label007;
            case 283: goto label006;
            case 284: goto label005;
            case 285: goto label004;
            case 286: goto label003;
            case 287: goto label002;
            default: goto label001;
        };

     label001:
        $z12 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i270, r213, r1, i271);

        return $z12;

     label002:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z14 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean canConnectTo5GInDsdsMode()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i360 = (int) z14;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i360);

        return 1;

     label003:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i1 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r214 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getManualNetworkSelectionPlmn(int)>($i1);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r214);

        return 1;

     label004:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void userActivity()>();

        return 1;

     label005:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void requestUserActivityNotification()>();

        return 1;

     label006:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i2 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r2 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r3 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i272 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int changeIccLockPassword(int,java.lang.String,java.lang.String)>($i2, $r2, $r3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i272);

        return 1;

     label007:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i273 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label008;

        z13 = 1;

     label008:
        $r4 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i274 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int setIccLockEnabled(int,boolean,java.lang.String)>(i273, z13, $r4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i274);

        return 1;

     label009:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i4 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z15 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isIccLockEnabled(int)>($i4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i361 = (int) z15;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i361);

        return 1;

     label010:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i275 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r215 = virtualinvoke r213.<android.os.Parcel: byte[] createByteArray()>();

        z16 = 0;

        $i5 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label011;

        z16 = 1;

     label011:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void notifyRcsAutoConfigurationReceived(int,byte[],boolean)>(i275, r215, z16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label012:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z17 = 0;

        $i6 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label013;

        z17 = 1;

     label013:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setCepEnabled(boolean)>(z17);

        return 1;

     label014:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i276 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z18 = 0;

        $i7 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i7 == 0 goto label015;

        z18 = 1;

     label015:
        z19 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setAlwaysAllowMmsData(int,boolean)>(i276, z18);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i362 = (int) z19;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i362);

        return 1;

     label016:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i8 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z20 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isDataAllowedInVoiceCall(int)>($i8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i363 = (int) z20;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i363);

        return 1;

     label017:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i277 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z21 = 0;

        $i9 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i9 == 0 goto label018;

        z21 = 1;

     label018:
        z22 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setDataAllowedDuringVoiceCall(int,boolean)>(i277, z21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i364 = (int) z22;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i364);

        return 1;

     label019:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i10 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r216 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getMmsUAProfUrl(int)>($i10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r216);

        return 1;

     label020:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i11 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r217 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getMmsUserAgent(int)>($i11);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r217);

        return 1;

     label021:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r5 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r6 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r7 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r8 = staticinvoke <com.android.internal.telephony.IIntegerConsumer$Stub: com.android.internal.telephony.IIntegerConsumer asInterface(android.os.IBinder)>($r7);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void enqueueSmsPickResult(java.lang.String,java.lang.String,com.android.internal.telephony.IIntegerConsumer)>($r5, $r6, $r8);

        return 1;

     label022:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i12 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i13 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r9 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z23 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isMvnoMatched(int,int,java.lang.String)>($i12, $i13, $r9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i365 = (int) z23;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i365);

        return 1;

     label023:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r10 = <android.telephony.RadioAccessSpecifier: android.os.Parcelable$Creator CREATOR>;

        $r11 = virtualinvoke r213.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r10);

        $i14 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r12 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r13 = staticinvoke <com.android.internal.telephony.IBooleanConsumer$Stub: com.android.internal.telephony.IBooleanConsumer asInterface(android.os.IBinder)>($r12);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setSystemSelectionChannels(java.util.List,int,com.android.internal.telephony.IBooleanConsumer)>($r11, $i14, $r13);

        return 1;

     label024:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i15 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i16 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z24 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isApnMetered(int,int)>($i15, $i16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i366 = (int) z24;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i366);

        return 1;

     label025:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i17 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i18 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r14 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z25 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isDataEnabledForApn(int,int,java.lang.String)>($i17, $i18, $r14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i367 = (int) z25;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i367);

        return 1;

     label026:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i19 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r15 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r16 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z26 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isModemEnabledForSlot(int,java.lang.String,java.lang.String)>($i19, $r15, $r16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i368 = (int) z26;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i368);

        return 1;

     label027:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i20 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i21 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z27 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isApplicationOnUicc(int,int)>($i20, $i21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i369 = (int) z27;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i369);

        return 1;

     label028:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r218 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getCurrentPackageName()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r218);

        return 1;

     label029:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i278 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getRadioHalVersion()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i278);

        return 1;

     label030:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r219 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int[] getSlotsMapping()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r219);

        return 1;

     label031:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i22 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r17 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r18 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z28 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean doesSwitchMultiSimConfigTriggerReboot(int,java.lang.String,java.lang.String)>($i22, $r17, $r18);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i370 = (int) z28;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i370);

        return 1;

     label032:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i23 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void switchMultiSimConfig(int)>($i23);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label033:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r19 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r20 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i279 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int isMultiSimSupported(java.lang.String,java.lang.String)>($r19, $r20);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i279);

        return 1;

     label034:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z29 = 0;

        $i24 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i24 == 0 goto label035;

        z29 = 1;

     label035:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setMultiSimCarrierRestriction(boolean)>(z29);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label036:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i280 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z30 = 0;

        $i25 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i25 == 0 goto label037;

        z30 = 1;

     label037:
        z31 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean enableModemForSlot(int,boolean)>(i280, z30);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i371 = (int) z31;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i371);

        return 1;

     label038:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void resetOtaEmergencyNumberDbFilePath()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label039:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i26 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i26 == 0 goto label040;

        $r21 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r22 = interfaceinvoke $r21.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r220 = (android.os.ParcelFileDescriptor) $r22;

        goto label041;

     label040:
        r220 = null;

     label041:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void updateOtaEmergencyNumberDbFilePath(android.os.ParcelFileDescriptor)>(r220);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label042:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void notifyOtaEmergencyNumberDbInstalled()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label043:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i27 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i281 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getEmergencyNumberDbVersion(int)>($i27);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i281);

        return 1;

     label044:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r221 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.util.List getEmergencyNumberListTestMode()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>(r221);

        return 1;

     label045:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i282 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i28 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i28 == 0 goto label046;

        $r23 = <android.telephony.emergency.EmergencyNumber: android.os.Parcelable$Creator CREATOR>;

        $r24 = interfaceinvoke $r23.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r222 = (android.telephony.emergency.EmergencyNumber) $r24;

        goto label047;

     label046:
        r222 = null;

     label047:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void updateEmergencyNumberListTestMode(int,android.telephony.emergency.EmergencyNumber)>(i282, r222);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label048:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i29 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i30 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r25 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i283 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int setImsProvisioningString(int,int,java.lang.String)>($i29, $i30, $r25);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i283);

        return 1;

     label049:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i31 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i32 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i33 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i284 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int setImsProvisioningInt(int,int,int)>($i31, $i32, $i33);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i284);

        return 1;

     label050:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i34 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i35 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r223 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getImsProvisioningString(int,int)>($i34, $i35);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r223);

        return 1;

     label051:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i36 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i37 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i285 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getImsProvisioningInt(int,int)>($i36, $i37);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i285);

        return 1;

     label052:
        $z0 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$cacheMmTelCapabilityProvisioning$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z0;

     label053:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i38 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i39 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i40 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z32 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isMmTelCapabilityProvisionedInCache(int,int,int)>($i38, $i39, $i40);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i372 = (int) z32;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i372);

        return 1;

     label054:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i286 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i287 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z33 = 0;

        $i41 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i41 == 0 goto label055;

        z33 = 1;

     label055:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setRcsProvisioningStatusForCapability(int,int,boolean)>(i286, i287, z33);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label056:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i42 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i43 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z34 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean getRcsProvisioningStatusForCapability(int,int)>($i42, $i43);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i373 = (int) z34;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i373);

        return 1;

     label057:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i44 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i45 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i46 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z35 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean getImsProvisioningStatusForCapability(int,int,int)>($i44, $i45, $i46);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i374 = (int) z35;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i374);

        return 1;

     label058:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i0 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i288 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i289 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z36 = 0;

        $i47 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i47 == 0 goto label059;

        z36 = 1;

     label059:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setImsProvisioningStatusForCapability(int,int,int,boolean)>(i0, i288, i289, z36);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label060:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i48 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r26 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r27 = staticinvoke <android.telephony.ims.aidl.IImsConfigCallback$Stub: android.telephony.ims.aidl.IImsConfigCallback asInterface(android.os.IBinder)>($r26);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void unregisterImsProvisioningChangedCallback(int,android.telephony.ims.aidl.IImsConfigCallback)>($i48, $r27);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label061:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i49 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r28 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r29 = staticinvoke <android.telephony.ims.aidl.IImsConfigCallback$Stub: android.telephony.ims.aidl.IImsConfigCallback asInterface(android.os.IBinder)>($r28);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void registerImsProvisioningChangedCallback(int,android.telephony.ims.aidl.IImsConfigCallback)>($i49, $r29);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label062:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i50 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r224 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.util.List getCertsFromCarrierPrivilegeAccessRules(int)>($i50);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>(r224);

        return 1;

     label063:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r225 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z37 = 0;

        $i51 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i51 == 0 goto label064;

        z37 = 1;

     label064:
        z38 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isEmergencyNumber(java.lang.String,boolean)>(r225, z37);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i375 = (int) z38;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i375);

        return 1;

     label065:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r30 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r31 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r226 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.util.Map getEmergencyNumberList(java.lang.String,java.lang.String)>($r30, $r31);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeMap(java.util.Map)>(r226);

        return 1;

     label066:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i52 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z39 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isTtyOverVolteEnabled(int)>($i52);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i376 = (int) z39;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i376);

        return 1;

     label067:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i290 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z40 = 0;

        $i53 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i53 == 0 goto label068;

        z40 = 1;

     label068:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setRttCapabilitySetting(int,boolean)>(i290, z40);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label069:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i54 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i55 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setVoWiFiRoamingModeSetting(int,int)>($i54, $i55);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label070:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i56 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i291 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getVoWiFiRoamingModeSetting(int)>($i56);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i291);

        return 1;

     label071:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i57 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i58 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setVoWiFiModeSetting(int,int)>($i57, $i58);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label072:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i59 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i292 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getVoWiFiModeSetting(int)>($i59);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i292);

        return 1;

     label073:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i293 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z41 = 0;

        $i60 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i60 == 0 goto label074;

        z41 = 1;

     label074:
        $i61 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setVoWiFiNonPersistent(int,boolean,int)>(i293, z41, $i61);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label075:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i294 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z42 = 0;

        $i62 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i62 == 0 goto label076;

        z42 = 1;

     label076:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setVoWiFiRoamingSettingEnabled(int,boolean)>(i294, z42);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label077:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i63 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z43 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isVoWiFiRoamingSettingEnabled(int)>($i63);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i377 = (int) z43;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i377);

        return 1;

     label078:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i295 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z44 = 0;

        $i64 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i64 == 0 goto label079;

        z44 = 1;

     label079:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setVoWiFiSettingEnabled(int,boolean)>(i295, z44);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label080:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i65 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z45 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isVoWiFiSettingEnabled(int)>($i65);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i378 = (int) z45;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i378);

        return 1;

     label081:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i296 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z46 = 0;

        $i66 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i66 == 0 goto label082;

        z46 = 1;

     label082:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setVtSettingEnabled(int,boolean)>(i296, z46);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label083:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i67 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z47 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isVtSettingEnabled(int)>($i67);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i379 = (int) z47;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i379);

        return 1;

     label084:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i297 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z48 = 0;

        $i68 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i68 == 0 goto label085;

        z48 = 1;

     label085:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setAdvancedCallingSettingEnabled(int,boolean)>(i297, z48);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label086:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i69 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z49 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isAdvancedCallingSettingEnabled(int)>($i69);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i380 = (int) z49;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i380);

        return 1;

     label087:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i70 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r32 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r33 = staticinvoke <com.android.internal.telephony.IIntegerConsumer$Stub: com.android.internal.telephony.IIntegerConsumer asInterface(android.os.IBinder)>($r32);

        $i71 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i72 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void isMmTelCapabilitySupported(int,com.android.internal.telephony.IIntegerConsumer,int,int)>($i70, $r33, $i71, $i72);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label088:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i73 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i74 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i75 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z50 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isAvailable(int,int,int)>($i73, $i74, $i75);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i381 = (int) z50;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i381);

        return 1;

     label089:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i76 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i77 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i78 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z51 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isCapable(int,int,int)>($i76, $i77, $i78);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i382 = (int) z51;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i382);

        return 1;

     label090:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i79 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r34 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r35 = staticinvoke <android.telephony.ims.aidl.IImsCapabilityCallback$Stub: android.telephony.ims.aidl.IImsCapabilityCallback asInterface(android.os.IBinder)>($r34);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void unregisterMmTelCapabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback)>($i79, $r35);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label091:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i80 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r36 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r37 = staticinvoke <android.telephony.ims.aidl.IImsCapabilityCallback$Stub: android.telephony.ims.aidl.IImsCapabilityCallback asInterface(android.os.IBinder)>($r36);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void registerMmTelCapabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback)>($i80, $r37);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label092:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i81 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r38 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r39 = staticinvoke <com.android.internal.telephony.IIntegerConsumer$Stub: com.android.internal.telephony.IIntegerConsumer asInterface(android.os.IBinder)>($r38);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void getImsMmTelRegistrationTransportType(int,com.android.internal.telephony.IIntegerConsumer)>($i81, $r39);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label093:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i82 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r40 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r41 = staticinvoke <com.android.internal.telephony.IIntegerConsumer$Stub: com.android.internal.telephony.IIntegerConsumer asInterface(android.os.IBinder)>($r40);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void getImsMmTelRegistrationState(int,com.android.internal.telephony.IIntegerConsumer)>($i82, $r41);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label094:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i83 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r42 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r43 = staticinvoke <android.telephony.ims.aidl.IImsRegistrationCallback$Stub: android.telephony.ims.aidl.IImsRegistrationCallback asInterface(android.os.IBinder)>($r42);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void unregisterImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback)>($i83, $r43);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label095:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i84 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r44 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r45 = staticinvoke <android.telephony.ims.aidl.IImsRegistrationCallback$Stub: android.telephony.ims.aidl.IImsRegistrationCallback asInterface(android.os.IBinder)>($r44);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void registerImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback)>($i84, $r45);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label096:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i85 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r46 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r47 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i298 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getRadioPowerState(int,java.lang.String,java.lang.String)>($i85, $r46, $r47);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i298);

        return 1;

     label097:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z52 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isInEmergencySmsMode()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i383 = (int) z52;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i383);

        return 1;

     label098:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i86 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i299 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getNetworkSelectionMode(int)>($i86);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i299);

        return 1;

     label099:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i87 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r48 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r49 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i300 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getNumberOfModemsWithSimultaneousDataConnections(int,java.lang.String,java.lang.String)>($i87, $r48, $r49);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i300);

        return 1;

     label100:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i88 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void refreshUiccProfile(int)>($i88);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label101:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i89 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i301 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCarrierIdListVersion(int)>($i89);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i301);

        return 1;

     label102:
        $z1 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$setCarrierTestOverride$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z1;

     label103:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i90 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i91 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z53 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setCdmaSubscriptionMode(int,int)>($i90, $i91);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i384 = (int) z53;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i384);

        return 1;

     label104:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i92 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i93 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z54 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setCdmaRoamingMode(int,int)>($i92, $i93);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i385 = (int) z54;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i385);

        return 1;

     label105:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i94 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i302 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCdmaRoamingMode(int)>($i94);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i302);

        return 1;

     label106:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i303 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z55 = 0;

        $i95 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i95 == 0 goto label107;

        z55 = 1;

     label107:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setDataRoamingEnabled(int,boolean)>(i303, z55);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label108:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i96 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z56 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isDataRoamingEnabled(int)>($i96);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i386 = (int) z56;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i386);

        return 1;

     label109:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r50 = virtualinvoke r213.<android.os.Parcel: int[] createIntArray()>();

        z57 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean switchSlots(int[])>($r50);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i387 = (int) z57;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i387);

        return 1;

     label110:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r227 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.UiccSlotInfo[] getUiccSlotsInfo()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r227, 1);

        return 1;

     label111:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r51 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r228 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.util.List getUiccCardsInfo(java.lang.String)>($r51);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r228);

        return 1;

     label112:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i97 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r52 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i304 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCardIdForDefaultEuicc(int,java.lang.String)>($i97, $r52);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i304);

        return 1;

     label113:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i98 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r229 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.SignalStrength getSignalStrength(int)>($i98);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r229 == null goto label114;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r229.<android.telephony.SignalStrength: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label115;

     label114:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label115:
        return 1;

     label116:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i99 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z58 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean getEmergencyCallbackMode(int)>($i99);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i388 = (int) z58;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i388);

        return 1;

     label117:
        $z2 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$setForbiddenPlmns$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z2;

     label118:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i100 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i101 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r53 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r54 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r230 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String[] getForbiddenPlmns(int,int,java.lang.String,java.lang.String)>($i100, $i101, $r53, $r54);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r230);

        return 1;

     label119:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i102 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i103 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setSimPowerStateForSlot(int,int)>($i102, $i103);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label120:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r55 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r56 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $i104 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r231 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.util.List getClientRequestStats(java.lang.String,java.lang.String,int)>($r55, $r56, $i104);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r231);

        return 1;

     label121:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z59 = 0;

        $i105 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i105 == 0 goto label122;

        z59 = 1;

     label122:
        $i106 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setPolicyDataEnabled(boolean,int)>(z59, $i106);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label123:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i305 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z60 = 0;

        $i107 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i107 == 0 goto label124;

        z60 = 1;

     label124:
        z61 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setCallWaitingStatus(int,boolean)>(i305, z60);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i389 = (int) z61;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i389);

        return 1;

     label125:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i108 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i306 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCallWaitingStatus(int)>($i108);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i306);

        return 1;

     label126:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i307 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i109 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i109 == 0 goto label127;

        $r57 = <android.telephony.CallForwardingInfo: android.os.Parcelable$Creator CREATOR>;

        $r58 = interfaceinvoke $r57.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r232 = (android.telephony.CallForwardingInfo) $r58;

        goto label128;

     label127:
        r232 = null;

     label128:
        z62 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setCallForwarding(int,android.telephony.CallForwardingInfo)>(i307, r232);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i390 = (int) z62;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i390);

        return 1;

     label129:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i110 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i111 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r233 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.CallForwardingInfo getCallForwarding(int,int)>($i110, $i111);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r233 == null goto label130;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r233.<android.telephony.CallForwardingInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label131;

     label130:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label131:
        return 1;

     label132:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i112 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void carrierActionResetAll(int)>($i112);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label133:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i308 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z63 = 0;

        $i113 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i113 == 0 goto label134;

        z63 = 1;

     label134:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void carrierActionReportDefaultNetworkStatus(int,boolean)>(i308, z63);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label135:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i309 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z64 = 0;

        $i114 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i114 == 0 goto label136;

        z64 = 1;

     label136:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void carrierActionSetRadioEnabled(int,boolean)>(i309, z64);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label137:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i310 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z65 = 0;

        $i115 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i115 == 0 goto label138;

        z65 = 1;

     label138:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void carrierActionSetMeteredApnsEnabled(int,boolean)>(i310, z65);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label139:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i311 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r234 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z66 = 0;

        $i116 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i116 == 0 goto label140;

        z66 = 1;

     label140:
        i312 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCarrierIdFromMccMnc(int,java.lang.String,boolean)>(i311, r234, z66);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i312);

        return 1;

     label141:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i117 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r235 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getSubscriptionSpecificCarrierName(int)>($i117);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r235);

        return 1;

     label142:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i118 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i313 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getSubscriptionSpecificCarrierId(int)>($i118);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i313);

        return 1;

     label143:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i119 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r236 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getSubscriptionCarrierName(int)>($i119);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r236);

        return 1;

     label144:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i120 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i314 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getSubscriptionCarrierId(int)>($i120);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i314);

        return 1;

     label145:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r237 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.CarrierRestrictionRules getAllowedCarriers()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r237 == null goto label146;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r237.<android.telephony.CarrierRestrictionRules: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label147;

     label146:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label147:
        return 1;

     label148:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i121 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i121 == 0 goto label149;

        $r59 = <android.telephony.CarrierRestrictionRules: android.os.Parcelable$Creator CREATOR>;

        $r60 = interfaceinvoke $r59.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r238 = (android.telephony.CarrierRestrictionRules) $r60;

        goto label150;

     label149:
        r238 = null;

     label150:
        i315 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int setAllowedCarriers(android.telephony.CarrierRestrictionRules)>(r238);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i315);

        return 1;

     label151:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r239 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.util.List getTelephonyHistograms()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r239);

        return 1;

     label152:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i122 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r240 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getCdmaPrlVersion(int)>($i122);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r240);

        return 1;

     label153:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i123 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r241 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getEsn(int)>($i123);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r241);

        return 1;

     label154:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i124 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i125 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r242 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getAidForAppType(int,int)>($i124, $i125);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r242);

        return 1;

     label155:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r243 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.util.List getPackagesWithCarrierPrivilegesForAllPhones()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>(r243);

        return 1;

     label156:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i126 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r244 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.util.List getPackagesWithCarrierPrivileges(int)>($i126);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>(r244);

        return 1;

     label157:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r245 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $i127 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i127 == 0 goto label158;

        $r61 = <android.telecom.PhoneAccountHandle: android.os.Parcelable$Creator CREATOR>;

        $r62 = interfaceinvoke $r61.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r246 = (android.telecom.PhoneAccountHandle) $r62;

        goto label159;

     label158:
        r246 = null;

     label159:
        z67 = 0;

        $i128 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i128 == 0 goto label160;

        z67 = 1;

     label160:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setVoicemailVibrationEnabled(java.lang.String,android.telecom.PhoneAccountHandle,boolean)>(r245, r246, z67);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label161:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i129 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i129 == 0 goto label162;

        $r63 = <android.telecom.PhoneAccountHandle: android.os.Parcelable$Creator CREATOR>;

        $r64 = interfaceinvoke $r63.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r247 = (android.telecom.PhoneAccountHandle) $r64;

        goto label163;

     label162:
        r247 = null;

     label163:
        z68 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)>(r247);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i391 = (int) z68;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i391);

        return 1;

     label164:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r248 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $i130 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i130 == 0 goto label165;

        $r67 = <android.telecom.PhoneAccountHandle: android.os.Parcelable$Creator CREATOR>;

        $r68 = interfaceinvoke $r67.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r249 = (android.telecom.PhoneAccountHandle) $r68;

        goto label166;

     label165:
        r249 = null;

     label166:
        $i131 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i131 == 0 goto label167;

        $r65 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r66 = interfaceinvoke $r65.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r250 = (android.net.Uri) $r66;

        goto label168;

     label167:
        r250 = null;

     label168:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setVoicemailRingtoneUri(java.lang.String,android.telecom.PhoneAccountHandle,android.net.Uri)>(r248, r249, r250);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label169:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i132 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i132 == 0 goto label170;

        $r69 = <android.telecom.PhoneAccountHandle: android.os.Parcelable$Creator CREATOR>;

        $r70 = interfaceinvoke $r69.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r251 = (android.telecom.PhoneAccountHandle) $r70;

        goto label171;

     label170:
        r251 = null;

     label171:
        r252 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)>(r251);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r252 == null goto label172;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r252.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label173;

     label172:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label173:
        return 1;

     label174:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i133 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r71 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r72 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r253 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.ServiceState getServiceStateForSubscriber(int,java.lang.String,java.lang.String)>($i133, $r71, $r72);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r253 == null goto label175;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r253.<android.telephony.ServiceState: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label176;

     label175:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label176:
        return 1;

     label177:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i134 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i134 == 0 goto label178;

        $r73 = <android.os.ResultReceiver: android.os.Parcelable$Creator CREATOR>;

        $r74 = interfaceinvoke $r73.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r254 = (android.os.ResultReceiver) $r74;

        goto label179;

     label178:
        r254 = null;

     label179:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void requestModemActivityInfo(android.os.ResultReceiver)>(r254);

        return 1;

     label180:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i135 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r255 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getSimLocaleForSubscriber(int)>($i135);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r255);

        return 1;

     label181:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i136 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void factoryReset(int)>($i136);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label182:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i137 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r256 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubscriptionId(int)>($i137);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r256 == null goto label183;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r256.<android.telecom.PhoneAccountHandle: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label184;

     label183:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label184:
        return 1;

     label185:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i138 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i138 == 0 goto label186;

        $r77 = <android.telecom.PhoneAccountHandle: android.os.Parcelable$Creator CREATOR>;

        $r78 = interfaceinvoke $r77.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r257 = (android.telecom.PhoneAccountHandle) $r78;

        goto label187;

     label186:
        r257 = null;

     label187:
        $r75 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r76 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i316 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getSubIdForPhoneAccountHandle(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)>(r257, $r75, $r76);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i316);

        return 1;

     label188:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i139 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i139 == 0 goto label189;

        $r79 = <android.telecom.PhoneAccount: android.os.Parcelable$Creator CREATOR>;

        $r80 = interfaceinvoke $r79.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r258 = (android.telecom.PhoneAccount) $r80;

        goto label190;

     label189:
        r258 = null;

     label190:
        i317 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getSubIdForPhoneAccount(android.telecom.PhoneAccount)>(r258);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i317);

        return 1;

     label191:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i140 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r81 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r82 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r259 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getDeviceSoftwareVersionForSlot(int,java.lang.String,java.lang.String)>($i140, $r81, $r82);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r259);

        return 1;

     label192:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i141 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r260 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getManufacturerCodeForSlot(int)>($i141);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r260);

        return 1;

     label193:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i142 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r83 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r84 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r261 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getMeidForSlot(int,java.lang.String,java.lang.String)>($i142, $r83, $r84);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r261);

        return 1;

     label194:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i143 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r262 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getTypeAllocationCodeForSlot(int)>($i143);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r262);

        return 1;

     label195:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i144 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r85 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r86 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r263 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getImeiForSlot(int,java.lang.String,java.lang.String)>($i144, $r85, $r86);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r263);

        return 1;

     label196:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r87 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r88 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r264 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getDeviceIdWithFeature(java.lang.String,java.lang.String)>($r87, $r88);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r264);

        return 1;

     label197:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r89 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r265 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getDeviceId(java.lang.String)>($r89);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r265);

        return 1;

     label198:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i145 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i318 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getImsRegTechnologyForMmTel(int)>($i145);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i318);

        return 1;

     label199:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i146 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z69 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isVideoTelephonyAvailable(int)>($i146);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i392 = (int) z69;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i392);

        return 1;

     label200:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i147 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z70 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isWifiCallingAvailable(int)>($i147);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i393 = (int) z70;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i393);

        return 1;

     label201:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i148 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z71 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isImsRegistered(int)>($i148);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i394 = (int) z71;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i394);

        return 1;

     label202:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z72 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isHearingAidCompatibilitySupported()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i395 = (int) z72;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i395);

        return 1;

     label203:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i149 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z73 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isRttSupported(int)>($i149);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i396 = (int) z73;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i396);

        return 1;

     label204:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z74 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isTtyModeSupported()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i397 = (int) z74;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i397);

        return 1;

     label205:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i150 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r90 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r91 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z75 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isWorldPhone(int,java.lang.String,java.lang.String)>($i150, $r90, $r91);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i398 = (int) z75;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i398);

        return 1;

     label206:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i151 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r92 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r93 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z76 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean canChangeDtmfToneLength(int,java.lang.String,java.lang.String)>($i151, $r92, $r93);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i399 = (int) z76;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i399);

        return 1;

     label207:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r94 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r95 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z77 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isVideoCallingEnabled(java.lang.String,java.lang.String)>($r94, $r95);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i400 = (int) z77;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i400);

        return 1;

     label208:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z78 = 0;

        $i152 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i152 == 0 goto label209;

        z78 = 1;

     label209:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void enableVideoCalling(boolean)>(z78);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label210:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i153 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r96 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i319 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getRadioAccessFamily(int,java.lang.String)>($i153, $r96);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i319);

        return 1;

     label211:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r97 = <android.telephony.RadioAccessFamily: android.os.Parcelable$Creator CREATOR>;

        $r98 = virtualinvoke r213.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r97);

        $r99 = (android.telephony.RadioAccessFamily[]) $r98;

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setRadioCapability(android.telephony.RadioAccessFamily[])>($r99);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label212:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void shutdownMobileRadios()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label213:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z79 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean needMobileRadioShutdown()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i401 = (int) z79;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i401);

        return 1;

     label214:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r266 = virtualinvoke r213.<android.os.Parcel: byte[] createByteArray()>();

        i320 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if i320 >= 0 goto label215;

        r267 = null;

        goto label216;

     label215:
        r267 = newarray (byte)[i320];

     label216:
        i321 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int invokeOemRilRequestRaw(byte[],byte[])>(r266, r267);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i321);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r267);

        return 1;

     label217:
        $z3 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$setRoamingOverride$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z3;

     label218:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i154 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r100 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z80 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setOperatorBrandOverride(int,java.lang.String)>($i154, $r100);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i402 = (int) z80;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i402);

        return 1;

     label219:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i155 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r101 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r268 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String[] getMergedImsisFromGroup(int,java.lang.String)>($i155, $r101);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r268);

        return 1;

     label220:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i156 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r102 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r103 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r269 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String[] getMergedSubscriberIds(int,java.lang.String,java.lang.String)>($i156, $r102, $r103);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r269);

        return 1;

     label221:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i157 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r104 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r105 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r270 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getLine1AlphaTagForDisplay(int,java.lang.String,java.lang.String)>($i157, $r104, $r105);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r270);

        return 1;

     label222:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i158 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r106 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r107 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r271 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getLine1NumberForDisplay(int,java.lang.String,java.lang.String)>($i158, $r106, $r107);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r271);

        return 1;

     label223:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i159 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r108 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r109 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z81 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setLine1NumberForDisplayForSubscriber(int,java.lang.String,java.lang.String)>($i159, $r108, $r109);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i403 = (int) z81;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i403);

        return 1;

     label224:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i160 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i160 == 0 goto label225;

        $r110 = <android.content.Intent: android.os.Parcelable$Creator CREATOR>;

        $r111 = interfaceinvoke $r110.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r272 = (android.content.Intent) $r111;

        goto label226;

     label225:
        r272 = null;

     label226:
        $i161 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r273 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int)>(r272, $i161);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>(r273);

        return 1;

     label227:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r112 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i322 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String)>($r112);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i322);

        return 1;

     label228:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i162 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r113 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i323 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int checkCarrierPrivilegesForPackage(int,java.lang.String)>($i162, $r113);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i323);

        return 1;

     label229:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i163 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i164 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i324 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCarrierPrivilegeStatusForUid(int,int)>($i163, $i164);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i324);

        return 1;

     label230:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i165 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i325 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCarrierPrivilegeStatus(int)>($i165);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i325);

        return 1;

     label231:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i166 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i166 == 0 goto label232;

        $r117 = <android.telephony.PhoneNumberRange: android.os.Parcelable$Creator CREATOR>;

        $r118 = interfaceinvoke $r117.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r274 = (android.telephony.PhoneNumberRange) $r118;

        goto label233;

     label232:
        r274 = null;

     label233:
        $l167 = virtualinvoke r213.<android.os.Parcel: long readLong()>();

        $r114 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r115 = staticinvoke <com.android.internal.telephony.INumberVerificationCallback$Stub: com.android.internal.telephony.INumberVerificationCallback asInterface(android.os.IBinder)>($r114);

        $r116 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void requestNumberVerification(android.telephony.PhoneNumberRange,long,com.android.internal.telephony.INumberVerificationCallback,java.lang.String)>(r274, $l167, $r115, $r116);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label234:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i168 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r275 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getCdmaMin(int)>($i168);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r275);

        return 1;

     label235:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i169 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r276 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getCdmaMdn(int)>($i169);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r276);

        return 1;

     label236:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z82 = 0;

        $i170 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i170 == 0 goto label237;

        z82 = 1;

     label237:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setImsRegistrationState(boolean)>(z82);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label238:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r119 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r120 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r121 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r277 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String[] getPcscfAddress(java.lang.String,java.lang.String,java.lang.String)>($r119, $r120, $r121);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r277);

        return 1;

     label239:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i326 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z83 = 0;

        $i171 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i171 == 0 goto label240;

        z83 = 1;

     label240:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setAlwaysReportSignalStrength(int,boolean)>(i326, z83);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label241:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i172 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z84 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isManualNetworkSelectionAllowed(int)>($i172);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i404 = (int) z84;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i404);

        return 1;

     label242:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i173 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z85 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isDataEnabled(int)>($i173);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i405 = (int) z85;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i405);

        return 1;

     label243:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i174 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z86 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isUserDataEnabled(int)>($i174);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i406 = (int) z86;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i406);

        return 1;

     label244:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i175 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z87 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean getDataEnabled(int)>($i175);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i407 = (int) z87;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i407);

        return 1;

     label245:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i327 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z88 = 0;

        $i176 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i176 == 0 goto label246;

        z88 = 1;

     label246:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setUserDataEnabled(int,boolean)>(i327, z88);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label247:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i177 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i178 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z89 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setPreferredNetworkType(int,int)>($i177, $i178);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i408 = (int) z89;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i408);

        return 1;

     label248:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i179 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i180 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $l181 = virtualinvoke r213.<android.os.Parcel: long readLong()>();

        z90 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setAllowedNetworkTypesForReason(int,int,long)>($i179, $i180, $l181);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i409 = (int) z90;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i409);

        return 1;

     label249:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i182 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        l328 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: long getEffectiveAllowedNetworkTypes(int)>($i182);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l328);

        return 1;

     label250:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i183 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i184 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        l329 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: long getAllowedNetworkTypesForReason(int,int)>($i183, $i184);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l329);

        return 1;

     label251:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i185 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $l186 = virtualinvoke r213.<android.os.Parcel: long readLong()>();

        z91 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setAllowedNetworkTypes(int,long)>($i185, $l186);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i410 = (int) z91;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i410);

        return 1;

     label252:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i187 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        l330 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: long getAllowedNetworkTypes(int)>($i187);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l330);

        return 1;

     label253:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i331 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i188 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i188 == 0 goto label254;

        $r122 = <com.android.internal.telephony.OperatorInfo: android.os.Parcelable$Creator CREATOR>;

        $r123 = interfaceinvoke $r122.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r278 = (com.android.internal.telephony.OperatorInfo) $r123;

        goto label255;

     label254:
        r278 = null;

     label255:
        z92 = 0;

        $i189 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i189 == 0 goto label256;

        z92 = 1;

     label256:
        z93 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setNetworkSelectionModeManual(int,com.android.internal.telephony.OperatorInfo,boolean)>(i331, r278, z92);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i411 = (int) z93;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i411);

        return 1;

     label257:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i190 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i191 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void stopNetworkScan(int,int)>($i190, $i191);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label258:
        $z4 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$requestNetworkScan$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z4;

     label259:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i192 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r124 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r125 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r279 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.CellNetworkScanResult getCellNetworkScanResults(int,java.lang.String,java.lang.String)>($i192, $r124, $r125);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r279 == null goto label260;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r279.<com.android.internal.telephony.CellNetworkScanResult: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label261;

     label260:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label261:
        return 1;

     label262:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i193 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setNetworkSelectionModeAutomatic(int)>($i193);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label263:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i194 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r126 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r127 = staticinvoke <com.android.internal.telephony.IIntegerConsumer$Stub: com.android.internal.telephony.IIntegerConsumer asInterface(android.os.IBinder)>($r126);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void getImsMmTelFeatureState(int,com.android.internal.telephony.IIntegerConsumer)>($i194, $r127);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label264:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i332 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z94 = 0;

        $i195 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i195 == 0 goto label265;

        z94 = 1;

     label265:
        $i196 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r280 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getBoundImsServicePackage(int,boolean,int)>(i332, z94, $i196);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r280);

        return 1;

     label266:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i333 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z95 = 0;

        $i197 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i197 == 0 goto label267;

        z95 = 1;

     label267:
        $r128 = virtualinvoke r213.<android.os.Parcel: int[] createIntArray()>();

        $r129 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z96 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setBoundImsServiceOverride(int,boolean,int[],java.lang.String)>(i333, z95, $r128, $r129);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i412 = (int) z96;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i412);

        return 1;

     label268:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i198 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i199 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r281 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.ims.aidl.IImsConfig getImsConfig(int,int)>($i198, $i199);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        r282 = null;

        if r281 == null goto label269;

        r282 = interfaceinvoke r281.<android.telephony.ims.aidl.IImsConfig: android.os.IBinder asBinder()>();

     label269:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r282);

        return 1;

     label270:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i200 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i201 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r283 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.ims.aidl.IImsRegistration getImsRegistration(int,int)>($i200, $i201);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        r284 = null;

        if r283 == null goto label271;

        r284 = interfaceinvoke r283.<android.telephony.ims.aidl.IImsRegistration: android.os.IBinder asBinder()>();

     label271:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r284);

        return 1;

     label272:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i202 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i203 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r130 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r131 = staticinvoke <com.android.ims.internal.IImsServiceFeatureCallback$Stub: com.android.ims.internal.IImsServiceFeatureCallback asInterface(android.os.IBinder)>($r130);

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void unregisterImsFeatureCallback(int,int,com.android.ims.internal.IImsServiceFeatureCallback)>($i202, $i203, $r131);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label273:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i204 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r132 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r133 = staticinvoke <com.android.ims.internal.IImsServiceFeatureCallback$Stub: com.android.ims.internal.IImsServiceFeatureCallback asInterface(android.os.IBinder)>($r132);

        r285 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.ims.aidl.IImsRcsFeature getRcsFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>($i204, $r133);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        r286 = null;

        if r285 == null goto label274;

        r286 = interfaceinvoke r285.<android.telephony.ims.aidl.IImsRcsFeature: android.os.IBinder asBinder()>();

     label274:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r286);

        return 1;

     label275:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i205 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r134 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r135 = staticinvoke <com.android.ims.internal.IImsServiceFeatureCallback$Stub: com.android.ims.internal.IImsServiceFeatureCallback asInterface(android.os.IBinder)>($r134);

        r287 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.ims.aidl.IImsMmTelFeature getMmTelFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>($i205, $r135);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        r288 = null;

        if r287 == null goto label276;

        r288 = interfaceinvoke r287.<android.telephony.ims.aidl.IImsMmTelFeature: android.os.IBinder asBinder()>();

     label276:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r288);

        return 1;

     label277:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i206 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void resetIms(int)>($i206);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label278:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i207 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void disableIms(int)>($i207);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label279:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i208 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void enableIms(int)>($i208);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label280:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i209 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z97 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isTetheringApnRequiredForSubscriber(int)>($i209);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i413 = (int) z97;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i413);

        return 1;

     label281:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i210 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i334 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getPreferredNetworkType(int)>($i210);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i334);

        return 1;

     label282:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r136 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r137 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i335 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCalculatedPreferredNetworkType(java.lang.String,java.lang.String)>($r136, $r137);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i335);

        return 1;

     label283:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i211 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z98 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean rebootModem(int)>($i211);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i414 = (int) z98;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i414);

        return 1;

     label284:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i212 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z99 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean resetModemConfig(int)>($i212);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i415 = (int) z99;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i415);

        return 1;

     label285:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r138 = virtualinvoke r213.<android.os.Parcel: byte[] createByteArray()>();

        z100 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean nvWriteCdmaPrl(byte[])>($r138);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i416 = (int) z100;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i416);

        return 1;

     label286:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i213 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r139 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z101 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean nvWriteItem(int,java.lang.String)>($i213, $r139);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i417 = (int) z101;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i417);

        return 1;

     label287:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i214 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r289 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String nvReadItem(int)>($i214);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r289);

        return 1;

     label288:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i215 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r140 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r290 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String sendEnvelopeWithStatus(int,java.lang.String)>($i215, $r140);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r290);

        return 1;

     label289:
        $z5 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$iccExchangeSimIO$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z5;

     label290:
        $z6 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$iccTransmitApduBasicChannel$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z6;

     label291:
        $z7 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$iccTransmitApduBasicChannelBySlot$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z7;

     label292:
        $z8 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$iccTransmitApduLogicalChannel$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z8;

     label293:
        $z9 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$iccTransmitApduLogicalChannelBySlot$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z9;

     label294:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i216 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i217 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z102 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean iccCloseLogicalChannel(int,int)>($i216, $i217);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i418 = (int) z102;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i418);

        return 1;

     label295:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i218 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i219 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z103 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean iccCloseLogicalChannelBySlot(int,int)>($i218, $i219);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i419 = (int) z103;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i419);

        return 1;

     label296:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i220 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r141 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r142 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $i221 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r291 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(int,java.lang.String,java.lang.String,int)>($i220, $r141, $r142, $i221);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r291 == null goto label297;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r291.<android.telephony.IccOpenLogicalChannelResponse: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label298;

     label297:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label298:
        return 1;

     label299:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i222 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r143 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r144 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $i223 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r292 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int,java.lang.String,java.lang.String,int)>($i222, $r143, $r144, $i223);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r292 == null goto label300;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r292.<android.telephony.IccOpenLogicalChannelResponse: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label301;

     label300:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label301:
        return 1;

     label302:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i224 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setCellInfoListRate(int)>($i224);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label303:
        $z10 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$requestCellInfoUpdateWithWorkSource$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z10;

     label304:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i225 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r145 = virtualinvoke r213.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r146 = staticinvoke <android.telephony.ICellInfoCallback$Stub: android.telephony.ICellInfoCallback asInterface(android.os.IBinder)>($r145);

        $r147 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r148 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void requestCellInfoUpdate(int,android.telephony.ICellInfoCallback,java.lang.String,java.lang.String)>($i225, $r146, $r147, $r148);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label305:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r149 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r150 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r293 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.util.List getAllCellInfo(java.lang.String,java.lang.String)>($r149, $r150);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r293);

        return 1;

     label306:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i226 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r151 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r152 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i336 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getLteOnCdmaModeForSubscriber(int,java.lang.String,java.lang.String)>($i226, $r151, $r152);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i336);

        return 1;

     label307:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r153 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r154 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i337 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getLteOnCdmaMode(java.lang.String,java.lang.String)>($r153, $r154);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i337);

        return 1;

     label308:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i227 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z104 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean hasIccCardUsingSlotIndex(int)>($i227);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i420 = (int) z104;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i420);

        return 1;

     label309:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z105 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean hasIccCard()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i421 = (int) z105;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i421);

        return 1;

     label310:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i228 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r155 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r156 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i338 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getVoiceNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>($i228, $r155, $r156);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i338);

        return 1;

     label311:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i229 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r157 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r158 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i339 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getDataNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>($i229, $r157, $r158);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i339);

        return 1;

     label312:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r159 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r160 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i340 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getDataNetworkType(java.lang.String,java.lang.String)>($r159, $r160);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i340);

        return 1;

     label313:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i230 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r161 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r162 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i341 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getNetworkTypeForSubscriber(int,java.lang.String,java.lang.String)>($i230, $r161, $r162);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i341);

        return 1;

     label314:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r163 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r164 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void sendDialerSpecialCode(java.lang.String,java.lang.String)>($r163, $r164);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label315:
        $z11 = specialinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean onTransact$sendVisualVoicemailSmsForSubscriber$(android.os.Parcel,android.os.Parcel)>(r213, r1);

        return $z11;

     label316:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i231 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r294 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int)>($i231);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r294 == null goto label317;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r294.<android.telephony.VisualVoicemailSmsFilterSettings: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label318;

     label317:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label318:
        return 1;

     label319:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r165 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $i232 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r295 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(java.lang.String,int)>($r165, $i232);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r295 == null goto label320;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r295.<android.telephony.VisualVoicemailSmsFilterSettings: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label321;

     label320:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label321:
        return 1;

     label322:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r166 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $i233 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void disableVisualVoicemailSmsFilter(java.lang.String,int)>($r166, $i233);

        return 1;

     label323:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        r296 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i342 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i234 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i234 == 0 goto label324;

        $r167 = <android.telephony.VisualVoicemailSmsFilterSettings: android.os.Parcelable$Creator CREATOR>;

        $r168 = interfaceinvoke $r167.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r297 = (android.telephony.VisualVoicemailSmsFilterSettings) $r168;

        goto label325;

     label324:
        r297 = null;

     label325:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void enableVisualVoicemailSmsFilter(java.lang.String,int,android.telephony.VisualVoicemailSmsFilterSettings)>(r296, i342, r297);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label326:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r169 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r170 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $i235 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r298 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getVisualVoicemailPackageName(java.lang.String,java.lang.String,int)>($r169, $r170, $i235);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r298);

        return 1;

     label327:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r171 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $i236 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r299 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.os.Bundle getVisualVoicemailSettings(java.lang.String,int)>($r171, $i236);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r299 == null goto label328;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r299.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label329;

     label328:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label329:
        return 1;

     label330:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i237 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z106 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isConcurrentVoiceAndDataAllowed(int)>($i237);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i422 = (int) z106;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i422);

        return 1;

     label331:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i238 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r172 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r173 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i343 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getVoiceMessageCountForSubscriber(int,java.lang.String,java.lang.String)>($i238, $r172, $r173);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i343);

        return 1;

     label332:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i239 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r174 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i344 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getDataActivationState(int,java.lang.String)>($i239, $r174);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i344);

        return 1;

     label333:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i240 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r175 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i345 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getVoiceActivationState(int,java.lang.String)>($i240, $r175);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i345);

        return 1;

     label334:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i241 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i242 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setDataActivationState(int,int)>($i241, $i242);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label335:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i243 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $i244 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void setVoiceActivationState(int,int)>($i243, $i244);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label336:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i245 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r176 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r177 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z107 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setVoiceMailNumber(int,java.lang.String,java.lang.String)>($i245, $r176, $r177);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i423 = (int) z107;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i423);

        return 1;

     label337:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z108 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean needsOtaServiceProvisioning()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i424 = (int) z108;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i424);

        return 1;

     label338:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i246 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r178 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r179 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r300 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getCdmaEriTextForSubscriber(int,java.lang.String,java.lang.String)>($i246, $r178, $r179);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r300);

        return 1;

     label339:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r180 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r181 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r301 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getCdmaEriText(java.lang.String,java.lang.String)>($r180, $r181);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r301);

        return 1;

     label340:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i247 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r182 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r183 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i346 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCdmaEriIconModeForSubscriber(int,java.lang.String,java.lang.String)>($i247, $r182, $r183);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i346);

        return 1;

     label341:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r184 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r185 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i347 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCdmaEriIconMode(java.lang.String,java.lang.String)>($r184, $r185);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i347);

        return 1;

     label342:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i248 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r186 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r187 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i348 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCdmaEriIconIndexForSubscriber(int,java.lang.String,java.lang.String)>($i248, $r186, $r187);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i348);

        return 1;

     label343:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r188 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r189 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        i349 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCdmaEriIconIndex(java.lang.String,java.lang.String)>($r188, $r189);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i349);

        return 1;

     label344:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i249 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i350 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getActivePhoneTypeForSlot(int)>($i249);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i350);

        return 1;

     label345:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i351 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getActivePhoneType()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i351);

        return 1;

     label346:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i250 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i352 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getDataStateForSubId(int)>($i250);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i352);

        return 1;

     label347:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i353 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getDataState()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i353);

        return 1;

     label348:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i251 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i354 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getDataActivityForSubId(int)>($i251);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i354);

        return 1;

     label349:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i355 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getDataActivity()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i355);

        return 1;

     label350:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i252 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        i356 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCallStateForSlot(int)>($i252);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i356);

        return 1;

     label351:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i357 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int getCallState()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i357);

        return 1;

     label352:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r190 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r191 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r302 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.util.List getNeighboringCellInfo(java.lang.String,java.lang.String)>($r190, $r191);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r302);

        return 1;

     label353:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i253 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r303 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: java.lang.String getNetworkCountryIsoForPhone(int)>($i253);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r303);

        return 1;

     label354:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r192 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r193 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r304 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: android.telephony.CellIdentity getCellLocation(java.lang.String,java.lang.String)>($r192, $r193);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r304 == null goto label355;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r304.<android.telephony.CellIdentity: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label356;

     label355:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label356:
        return 1;

     label357:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i254 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z109 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isDataConnectivityPossible(int)>($i254);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i425 = (int) z109;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i425);

        return 1;

     label358:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z110 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean disableDataConnectivity()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i426 = (int) z110;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i426);

        return 1;

     label359:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z111 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean enableDataConnectivity()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i427 = (int) z111;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i427);

        return 1;

     label360:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i255 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void disableLocationUpdatesForSubscriber(int)>($i255);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label361:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void disableLocationUpdates()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label362:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i256 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void enableLocationUpdatesForSubscriber(int)>($i256);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label363:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void enableLocationUpdates()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label364:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i257 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void updateServiceLocationForSubscriber(int)>($i257);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label365:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void updateServiceLocation()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label366:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z112 = 0;

        $i258 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i258 == 0 goto label367;

        z112 = 1;

     label367:
        z113 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setRadioPower(boolean)>(z112);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i428 = (int) z113;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i428);

        return 1;

     label368:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i358 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        z114 = 0;

        $i259 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i259 == 0 goto label369;

        z114 = 1;

     label369:
        z115 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setRadioForSubscriber(int,boolean)>(i358, z114);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i429 = (int) z115;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i429);

        return 1;

     label370:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        z116 = 0;

        $i260 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i260 == 0 goto label371;

        z116 = 1;

     label371:
        z117 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean setRadio(boolean)>(z116);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i430 = (int) z117;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i430);

        return 1;

     label372:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i261 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void toggleRadioOnOffForSubscriber(int)>($i261);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label373:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void toggleRadioOnOff()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label374:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i262 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r194 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z118 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean handlePinMmiForSubscriber(int,java.lang.String)>($i262, $r194);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i431 = (int) z118;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i431);

        return 1;

     label375:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        i359 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        r305 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $i263 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        if $i263 == 0 goto label376;

        $r195 = <android.os.ResultReceiver: android.os.Parcelable$Creator CREATOR>;

        $r196 = interfaceinvoke $r195.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r213);

        r306 = (android.os.ResultReceiver) $r196;

        goto label377;

     label376:
        r306 = null;

     label377:
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void handleUssdRequest(int,java.lang.String,android.os.ResultReceiver)>(i359, r305, r306);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label378:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r197 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z119 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean handlePinMmi(java.lang.String)>($r197);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i432 = (int) z119;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i432);

        return 1;

     label379:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i264 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r198 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r199 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r307 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int[] supplyPukReportResultForSubscriber(int,java.lang.String,java.lang.String)>($i264, $r198, $r199);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r307);

        return 1;

     label380:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i265 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r200 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        r308 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: int[] supplyPinReportResultForSubscriber(int,java.lang.String)>($i265, $r200);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r308);

        return 1;

     label381:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i266 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r201 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r202 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z120 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean supplyPukForSubscriber(int,java.lang.String,java.lang.String)>($i266, $r201, $r202);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i433 = (int) z120;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i433);

        return 1;

     label382:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i267 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r203 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z121 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean supplyPinForSubscriber(int,java.lang.String)>($i267, $r203);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i434 = (int) z121;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i434);

        return 1;

     label383:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i268 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r204 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r205 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z122 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isRadioOnForSubscriberWithFeature(int,java.lang.String,java.lang.String)>($i268, $r204, $r205);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i435 = (int) z122;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i435);

        return 1;

     label384:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $i269 = virtualinvoke r213.<android.os.Parcel: int readInt()>();

        $r206 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z123 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isRadioOnForSubscriber(int,java.lang.String)>($i269, $r206);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i436 = (int) z123;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i436);

        return 1;

     label385:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r207 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r208 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z124 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isRadioOnWithFeature(java.lang.String,java.lang.String)>($r207, $r208);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i437 = (int) z124;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i437);

        return 1;

     label386:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r209 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        z125 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean isRadioOn(java.lang.String)>($r209);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i438 = (int) z125;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i438);

        return 1;

     label387:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r210 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        $r211 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void call(java.lang.String,java.lang.String)>($r210, $r211);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label388:
        virtualinvoke r213.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");

        $r212 = virtualinvoke r213.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void dial(java.lang.String)>($r212);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label389:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("com.android.internal.telephony.ITelephony");

        return 1;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_userActivity> = 285;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_updateServiceLocationForSubscriber> = 20;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_updateServiceLocation> = 19;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_updateOtaEmergencyNumberDbFilePath> = 257;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_updateEmergencyNumberListTestMode> = 253;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_unregisterMmTelCapabilityCallback> = 219;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_unregisterImsRegistrationCallback> = 215;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_unregisterImsProvisioningChangedCallback> = 242;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_unregisterImsFeatureCallback> = 96;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_toggleRadioOnOffForSubscriber> = 15;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_toggleRadioOnOff> = 14;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_switchSlots> = 201;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_switchMultiSimConfig> = 262;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_supplyPukReportResultForSubscriber> = 10;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_supplyPukForSubscriber> = 8;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_supplyPinReportResultForSubscriber> = 9;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_supplyPinForSubscriber> = 7;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_stopNetworkScan> = 105;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_shutdownMobileRadios> = 138;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setVtSettingEnabled> = 226;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setVoicemailVibrationEnabled> = 169;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setVoicemailRingtoneUri> = 167;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setVoiceMailNumber> = 46;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setVoiceActivationState> = 47;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setVoWiFiSettingEnabled> = 228;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setVoWiFiRoamingSettingEnabled> = 230;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setVoWiFiRoamingModeSetting> = 235;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setVoWiFiNonPersistent> = 231;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setVoWiFiModeSetting> = 233;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setUserDataEnabled> = 113;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setSystemSelectionChannels> = 271;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setSimPowerStateForSlot> = 193;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setRttCapabilitySetting> = 236;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setRoamingOverride> = 135;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setRcsProvisioningStatusForCapability> = 246;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setRadioPower> = 18;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setRadioForSubscriber> = 17;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setRadioCapability> = 139;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setRadio> = 16;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setPreferredNetworkType> = 112;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setPolicyDataEnabled> = 191;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setOperatorBrandOverride> = 134;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setNetworkSelectionModeManual> = 106;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setNetworkSelectionModeAutomatic> = 102;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setMultiSimCarrierRestriction> = 260;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setLine1NumberForDisplayForSubscriber> = 129;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setImsRegistrationState> = 120;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setImsProvisioningString> = 252;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setImsProvisioningStatusForCapability> = 243;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setImsProvisioningInt> = 251;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setIccLockEnabled> = 282;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setForbiddenPlmns> = 195;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setDataRoamingEnabled> = 203;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setDataAllowedDuringVoiceCall> = 276;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setDataActivationState> = 48;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setCepEnabled> = 279;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setCellInfoListRate> = 72;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setCdmaSubscriptionMode> = 206;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setCdmaRoamingMode> = 205;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setCarrierTestOverride> = 207;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setCallWaitingStatus> = 190;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setCallForwarding> = 188;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setBoundImsServiceOverride> = 99;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setAlwaysReportSignalStrength> = 118;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setAlwaysAllowMmsData> = 278;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setAllowedNetworkTypesForReason> = 111;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setAllowedNetworkTypes> = 108;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setAllowedCarriers> = 176;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_setAdvancedCallingSettingEnabled> = 224;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_sendVisualVoicemailSmsForSubscriber> = 59;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_sendEnvelopeWithStatus> = 82;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_sendDialerSpecialCode> = 60;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_resetOtaEmergencyNumberDbFilePath> = 258;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_resetModemConfig> = 86;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_resetIms> = 93;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_requestUserActivityNotification> = 284;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_requestNumberVerification> = 123;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_requestNetworkScan> = 104;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_requestModemActivityInfo> = 164;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_requestCellInfoUpdateWithWorkSource> = 71;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_requestCellInfoUpdate> = 70;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_registerMmTelCapabilityCallback> = 218;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_registerImsRegistrationCallback> = 214;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_registerImsProvisioningChangedCallback> = 241;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_refreshUiccProfile> = 209;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_rebootModem> = 87;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_nvWriteItem> = 84;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_nvWriteCdmaPrl> = 85;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_nvReadItem> = 83;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_notifyRcsAutoConfigurationReceived> = 280;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_notifyOtaEmergencyNumberDbInstalled> = 256;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_needsOtaServiceProvisioning> = 45;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_needMobileRadioShutdown> = 137;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isWorldPhone> = 144;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isWifiCallingAvailable> = 149;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isVtSettingEnabled> = 225;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isVoicemailVibrationEnabled> = 168;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isVoWiFiSettingEnabled> = 227;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isVoWiFiRoamingSettingEnabled> = 229;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isVideoTelephonyAvailable> = 150;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isVideoCallingEnabled> = 142;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isUserDataEnabled> = 115;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isTtyOverVolteEnabled> = 237;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isTtyModeSupported> = 145;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isTetheringApnRequiredForSubscriber> = 90;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isRttSupported> = 146;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isRadioOnWithFeature> = 4;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isRadioOnForSubscriberWithFeature> = 6;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isRadioOnForSubscriber> = 5;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isRadioOn> = 3;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isMvnoMatched> = 272;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isMultiSimSupported> = 261;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isModemEnabledForSlot> = 268;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isMmTelCapabilitySupported> = 222;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isMmTelCapabilityProvisionedInCache> = 247;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isManualNetworkSelectionAllowed> = 117;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isInEmergencySmsMode> = 212;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isImsRegistered> = 148;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isIccLockEnabled> = 281;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isHearingAidCompatibilitySupported> = 147;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isEmergencyNumber> = 239;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isDataRoamingEnabled> = 202;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isDataEnabledForApn> = 269;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isDataEnabled> = 116;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isDataConnectivityPossible> = 27;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isDataAllowedInVoiceCall> = 277;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isConcurrentVoiceAndDataAllowed> = 52;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isCapable> = 220;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isAvailable> = 221;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isApplicationOnUicc> = 267;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isApnMetered> = 270;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_isAdvancedCallingSettingEnabled> = 223;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_invokeOemRilRequestRaw> = 136;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_iccTransmitApduLogicalChannelBySlot> = 77;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_iccTransmitApduLogicalChannel> = 78;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_iccTransmitApduBasicChannelBySlot> = 79;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_iccTransmitApduBasicChannel> = 80;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_iccOpenLogicalChannelBySlot> = 73;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_iccOpenLogicalChannel> = 74;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_iccExchangeSimIO> = 81;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_iccCloseLogicalChannelBySlot> = 75;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_iccCloseLogicalChannel> = 76;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_hasIccCardUsingSlotIndex> = 66;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_hasIccCard> = 65;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_handleUssdRequest> = 12;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_handlePinMmiForSubscriber> = 13;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_handlePinMmi> = 11;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getVoicemailRingtoneUri> = 166;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getVoiceNetworkTypeForSubscriber> = 64;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getVoiceMessageCountForSubscriber> = 51;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getVoiceActivationState> = 49;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getVoWiFiRoamingModeSetting> = 234;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getVoWiFiModeSetting> = 232;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getVisualVoicemailSmsFilterSettings> = 57;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getVisualVoicemailSettings> = 53;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getVisualVoicemailPackageName> = 54;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getUiccSlotsInfo> = 200;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getUiccCardsInfo> = 199;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getTypeAllocationCodeForSlot> = 155;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getTelephonyHistograms> = 175;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getSubscriptionSpecificCarrierName> = 181;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getSubscriptionSpecificCarrierId> = 180;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getSubscriptionCarrierName> = 179;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getSubscriptionCarrierId> = 178;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getSubIdForPhoneAccountHandle> = 160;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getSubIdForPhoneAccount> = 159;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getSlotsMapping> = 264;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getSimLocaleForSubscriber> = 163;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getSignalStrength> = 197;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getServiceStateForSubscriber> = 165;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getRcsProvisioningStatusForCapability> = 245;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getRcsFeatureAndListen> = 95;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getRadioPowerState> = 213;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getRadioHalVersion> = 265;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getRadioAccessFamily> = 140;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getPreferredNetworkType> = 89;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getPhoneAccountHandleForSubscriptionId> = 161;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getPcscfAddress> = 119;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getPackagesWithCarrierPrivilegesForAllPhones> = 171;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getPackagesWithCarrierPrivileges> = 170;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getNumberOfModemsWithSimultaneousDataConnections> = 210;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getNetworkTypeForSubscriber> = 61;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getNetworkSelectionMode> = 211;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getNetworkCountryIsoForPhone> = 29;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getNeighboringCellInfo> = 30;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getMmsUserAgent> = 274;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getMmsUAProfUrl> = 275;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getMmTelFeatureAndListen> = 94;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getMergedSubscriberIds> = 132;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getMergedImsisFromGroup> = 133;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getMeidForSlot> = 156;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getManufacturerCodeForSlot> = 157;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getManualNetworkSelectionPlmn> = 286;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getLteOnCdmaModeForSubscriber> = 68;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getLteOnCdmaMode> = 67;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getLine1NumberForDisplay> = 130;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getLine1AlphaTagForDisplay> = 131;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getImsRegistration> = 97;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getImsRegTechnologyForMmTel> = 151;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getImsProvisioningString> = 250;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getImsProvisioningStatusForCapability> = 244;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getImsProvisioningInt> = 249;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getImsMmTelRegistrationTransportType> = 217;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getImsMmTelRegistrationState> = 216;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getImsMmTelFeatureState> = 101;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getImsConfig> = 98;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getImeiForSlot> = 154;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getForbiddenPlmns> = 194;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getEsn> = 173;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getEmergencyNumberListTestMode> = 254;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getEmergencyNumberList> = 238;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getEmergencyNumberDbVersion> = 255;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getEmergencyCallbackMode> = 196;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getEffectiveAllowedNetworkTypes> = 110;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getDeviceSoftwareVersionForSlot> = 158;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getDeviceIdWithFeature> = 153;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getDeviceId> = 152;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getDataStateForSubId> = 36;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getDataState> = 35;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getDataNetworkTypeForSubscriber> = 63;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getDataNetworkType> = 62;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getDataEnabled> = 114;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getDataActivityForSubId> = 34;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getDataActivity> = 33;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getDataActivationState> = 50;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCurrentPackageName> = 266;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getClientRequestStats> = 192;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCertsFromCarrierPrivilegeAccessRules> = 240;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCellNetworkScanResults> = 103;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCellLocation> = 28;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCdmaRoamingMode> = 204;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCdmaPrlVersion> = 174;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCdmaMin> = 122;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCdmaMdn> = 121;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCdmaEriTextForSubscriber> = 44;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCdmaEriText> = 43;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCdmaEriIconModeForSubscriber> = 42;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCdmaEriIconMode> = 41;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCdmaEriIconIndexForSubscriber> = 40;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCdmaEriIconIndex> = 39;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCarrierPrivilegeStatusForUid> = 125;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCarrierPrivilegeStatus> = 124;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCarrierPackageNamesForIntentAndPhone> = 128;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCarrierIdListVersion> = 208;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCarrierIdFromMccMnc> = 182;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCardIdForDefaultEuicc> = 198;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCallWaitingStatus> = 189;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCallStateForSlot> = 32;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCallState> = 31;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCallForwarding> = 187;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getCalculatedPreferredNetworkType> = 88;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getBoundImsServicePackage> = 100;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getAllowedNetworkTypesForReason> = 109;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getAllowedNetworkTypes> = 107;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getAllowedCarriers> = 177;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getAllCellInfo> = 69;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getAidForAppType> = 172;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getActiveVisualVoicemailSmsFilterSettings> = 58;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getActivePhoneTypeForSlot> = 38;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_getActivePhoneType> = 37;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_factoryReset> = 162;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_enqueueSmsPickResult> = 273;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_enableVisualVoicemailSmsFilter> = 55;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_enableVideoCalling> = 141;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_enableModemForSlot> = 259;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_enableLocationUpdatesForSubscriber> = 22;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_enableLocationUpdates> = 21;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_enableIms> = 91;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_enableDataConnectivity> = 25;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_doesSwitchMultiSimConfigTriggerReboot> = 263;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_disableVisualVoicemailSmsFilter> = 56;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_disableLocationUpdatesForSubscriber> = 24;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_disableLocationUpdates> = 23;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_disableIms> = 92;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_disableDataConnectivity> = 26;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_dial> = 1;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_checkCarrierPrivilegesForPackageAnyPhone> = 127;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_checkCarrierPrivilegesForPackage> = 126;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_changeIccLockPassword> = 283;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_carrierActionSetRadioEnabled> = 184;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_carrierActionSetMeteredApnsEnabled> = 183;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_carrierActionResetAll> = 186;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_carrierActionReportDefaultNetworkStatus> = 185;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_canConnectTo5GInDsdsMode> = 287;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_canChangeDtmfToneLength> = 143;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_call> = 2;

        <com.android.internal.telephony.ITelephony$Stub: int TRANSACTION_cacheMmTelCapabilityProvisioning> = 248;

        <com.android.internal.telephony.ITelephony$Stub: java.lang.String DESCRIPTOR> = "com.android.internal.telephony.ITelephony";

        return;
    }
}
