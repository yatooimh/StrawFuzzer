public class com.android.internal.telephony.IccPhoneBookInterfaceManager extends java.lang.Object
{
    protected static final boolean DBG;
    protected static final int EVENT_GET_SIZE_DONE;
    protected static final int EVENT_LOAD_DONE;
    protected static final int EVENT_UPDATE_DONE;
    static final java.lang.String LOG_TAG;
    protected com.android.internal.telephony.uicc.AdnRecordCache mAdnCache;
    protected android.os.Handler mBaseHandler;
    protected com.android.internal.telephony.Phone mPhone;

    public void <init>(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        com.android.internal.telephony.IccPhoneBookInterfaceManager$1 $r1;
        com.android.internal.telephony.uicc.AdnRecordCache $r2;
        com.android.internal.telephony.Phone r3;
        com.android.internal.telephony.uicc.IccRecords r4;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        r3 := @parameter0: com.android.internal.telephony.Phone;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.internal.telephony.IccPhoneBookInterfaceManager$1;

        specialinvoke $r1.<com.android.internal.telephony.IccPhoneBookInterfaceManager$1: void <init>(com.android.internal.telephony.IccPhoneBookInterfaceManager)>(r0);

        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: android.os.Handler mBaseHandler> = $r1;

        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.Phone mPhone> = r3;

        r4 = virtualinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        if r4 == null goto label1;

        $r2 = virtualinvoke r4.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.AdnRecordCache getAdnCache()>();

        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache> = $r2;

     label1:
        return;
    }

    private int updateEfForIccType(int)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        int i0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType $r2, $r3;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        i0 := @parameter0: int;

        if i0 != 28474 goto label1;

        $r1 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.Phone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType getCurrentUiccAppType()>();

        $r3 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType APPTYPE_USIM>;

        if $r2 != $r3 goto label1;

        return 20272;

     label1:
        return i0;
    }

    protected void checkThread()
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        android.os.Handler $r1;
        android.os.Looper $r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        $r1 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: android.os.Handler mBaseHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Looper getLooper()>();

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void loge(java.lang.String)>("query() called on the main UI thread!");

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You cannot call query on this provder from the main UI thread.");

        throw $r4;
    }

    public void dispose()
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        return;
    }

    public java.util.List getAdnRecordsInEf(int)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        com.android.internal.telephony.Phone $r1;
        android.content.Context $r2;
        int $i0, $i1, i2, i3;
        java.lang.SecurityException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r7, $r9;
        com.android.internal.telephony.IccPhoneBookInterfaceManager$Request $r10;
        android.os.Handler $r11;
        com.android.internal.telephony.uicc.AdnRecordCache $r12, $r13, $r14;
        java.lang.Object $r15;
        java.lang.Throwable $r16;
        android.os.Message r19;
        java.util.List r20;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        i2 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.Phone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_CONTACTS");

        if $i0 != 0 goto label8;

        i3 = specialinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: int updateEfForIccType(int)>(i2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAdnRecordsInEF: efid=0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void logd(java.lang.String)>($r9);

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void checkThread()>();

        $r10 = new com.android.internal.telephony.IccPhoneBookInterfaceManager$Request;

        specialinvoke $r10.<com.android.internal.telephony.IccPhoneBookInterfaceManager$Request: void <init>(com.android.internal.telephony.IccPhoneBookInterfaceManager$1)>(null);

        entermonitor $r10;

     label1:
        $r11 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: android.os.Handler mBaseHandler>;

        r19 = virtualinvoke $r11.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r10);

        $r12 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        if $r12 == null goto label3;

        $r14 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        $r13 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        $i1 = virtualinvoke $r13.<com.android.internal.telephony.uicc.AdnRecordCache: int extensionEfForEf(int)>(i3);

        virtualinvoke $r14.<com.android.internal.telephony.uicc.AdnRecordCache: void requestLoadAllAdnLike(int,int,android.os.Message)>(i3, $i1, r19);

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void waitForResult(com.android.internal.telephony.IccPhoneBookInterfaceManager$Request)>($r10);

        $r15 = $r10.<com.android.internal.telephony.IccPhoneBookInterfaceManager$Request: java.lang.Object mResult>;

        r20 = (java.util.List) $r15;

        exitmonitor $r10;

     label2:
        return r20;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void loge(java.lang.String)>("Failure while trying to load from SIM due to uninitialised adncache");

        exitmonitor $r10;

     label4:
        return null;

     label5:
        $r16 := @caughtexception;

     label6:
        exitmonitor $r10;

     label7:
        throw $r16;

     label8:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires android.permission.READ_CONTACTS permission");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int[] getAdnRecordsSize(int)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        int i0;
        com.android.internal.telephony.uicc.IccFileHandler r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        com.android.internal.telephony.IccPhoneBookInterfaceManager$Request $r6;
        android.os.Handler $r7;
        com.android.internal.telephony.Phone $r8;
        java.lang.Object $r9, $r10;
        java.lang.Throwable $r11;
        android.os.Message r14;
        int[] r15;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAdnRecordsSize: efid=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void logd(java.lang.String)>($r5);

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void checkThread()>();

        $r6 = new com.android.internal.telephony.IccPhoneBookInterfaceManager$Request;

        specialinvoke $r6.<com.android.internal.telephony.IccPhoneBookInterfaceManager$Request: void <init>(com.android.internal.telephony.IccPhoneBookInterfaceManager$1)>(null);

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: android.os.Handler mBaseHandler>;

        r14 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r6);

        $r8 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.Phone mPhone>;

        r1 = virtualinvoke $r8.<com.android.internal.telephony.Phone: com.android.internal.telephony.uicc.IccFileHandler getIccFileHandler()>();

     label02:
        if r1 == null goto label04;

     label03:
        virtualinvoke r1.<com.android.internal.telephony.uicc.IccFileHandler: void getEFLinearRecordSize(int,android.os.Message)>(i0, r14);

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void waitForResult(com.android.internal.telephony.IccPhoneBookInterfaceManager$Request)>($r6);

     label04:
        exitmonitor $r6;

     label05:
        $r9 = $r6.<com.android.internal.telephony.IccPhoneBookInterfaceManager$Request: java.lang.Object mResult>;

        if $r9 != null goto label06;

        r15 = newarray (int)[3];

        goto label07;

     label06:
        $r10 = $r6.<com.android.internal.telephony.IccPhoneBookInterfaceManager$Request: java.lang.Object mResult>;

        r15 = (int[]) $r10;

     label07:
        return r15;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor $r6;

     label10:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    protected void logd(java.lang.String)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[IccPbInterfaceManager] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("IccPhoneBookIM", $r6);

        return;
    }

    protected void loge(java.lang.String)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[IccPbInterfaceManager] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccPhoneBookIM", $r6);

        return;
    }

    public boolean updateAdnRecordsInEfByIndex(int, java.lang.String, java.lang.String, int, java.lang.String)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        int i0, i1, $i2;
        java.lang.String r1, r2, $r10, $r11, $r16, $r19, $r22, $r24, r32;
        android.os.Message r3;
        com.android.internal.telephony.uicc.AdnRecord r4;
        boolean z0;
        com.android.internal.telephony.Phone $r5;
        android.content.Context $r6;
        java.lang.SecurityException $r7;
        java.lang.StringBuilder $r8;
        com.android.internal.telephony.IccPhoneBookInterfaceManager$Request $r25;
        android.os.Handler $r26;
        com.android.internal.telephony.uicc.AdnRecordCache $r27, $r28;
        java.lang.Object $r29;
        java.lang.Boolean $r30;
        java.lang.Throwable $r31;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        i0 := @parameter0: int;

        r32 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        $r5 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.Phone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $i2 = virtualinvoke $r6.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WRITE_CONTACTS");

        if $i2 != 0 goto label8;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAdnRecordsInEfByIndex: efid=0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Index=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ==> (");

        $r16 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("IccPhoneBookIM", r32);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r19 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("IccPhoneBookIM", r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") pin2=");

        $r22 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("IccPhoneBookIM", r2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void logd(java.lang.String)>($r24);

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void checkThread()>();

        $r25 = new com.android.internal.telephony.IccPhoneBookInterfaceManager$Request;

        specialinvoke $r25.<com.android.internal.telephony.IccPhoneBookInterfaceManager$Request: void <init>(com.android.internal.telephony.IccPhoneBookInterfaceManager$1)>(null);

        entermonitor $r25;

     label1:
        $r26 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: android.os.Handler mBaseHandler>;

        r3 = virtualinvoke $r26.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r25);

        r4 = new com.android.internal.telephony.uicc.AdnRecord;

        specialinvoke r4.<com.android.internal.telephony.uicc.AdnRecord: void <init>(java.lang.String,java.lang.String)>(r32, r1);

        $r27 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        if $r27 == null goto label3;

        $r28 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        virtualinvoke $r28.<com.android.internal.telephony.uicc.AdnRecordCache: void updateAdnByIndex(int,com.android.internal.telephony.uicc.AdnRecord,int,java.lang.String,android.os.Message)>(i0, r4, i1, r2, r3);

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void waitForResult(com.android.internal.telephony.IccPhoneBookInterfaceManager$Request)>($r25);

        $r29 = $r25.<com.android.internal.telephony.IccPhoneBookInterfaceManager$Request: java.lang.Object mResult>;

        $r30 = (java.lang.Boolean) $r29;

        z0 = virtualinvoke $r30.<java.lang.Boolean: boolean booleanValue()>();

        exitmonitor $r25;

     label2:
        return z0;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void loge(java.lang.String)>("Failure while trying to update by index due to uninitialised adncache");

        exitmonitor $r25;

     label4:
        return 0;

     label5:
        $r31 := @caughtexception;

     label6:
        exitmonitor $r25;

     label7:
        throw $r31;

     label8:
        $r7 = new java.lang.SecurityException;

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires android.permission.WRITE_CONTACTS permission");

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean updateAdnRecordsInEfBySearch(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        java.lang.String r1, r2, r3, r4, $r12, $r13, $r16, $r19, $r22, $r25, $r28, $r30, r38;
        android.os.Message r5;
        com.android.internal.telephony.uicc.AdnRecord r6, r41;
        boolean z0;
        com.android.internal.telephony.Phone $r7;
        android.content.Context $r8;
        int $i0, i1, i2;
        java.lang.SecurityException $r9;
        java.lang.StringBuilder $r10;
        com.android.internal.telephony.IccPhoneBookInterfaceManager$Request $r31;
        android.os.Handler $r32;
        com.android.internal.telephony.uicc.AdnRecordCache $r33, $r34;
        java.lang.Object $r35;
        java.lang.Boolean $r36;
        java.lang.Throwable $r37;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        i1 := @parameter0: int;

        r38 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        $r7 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.Phone mPhone>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $i0 = virtualinvoke $r8.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WRITE_CONTACTS");

        if $i0 != 0 goto label8;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAdnRecordsInEfBySearch: efid=0x");

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r16 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("IccPhoneBookIM", r38);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r19 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("IccPhoneBookIM", r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")==> (");

        $r22 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("IccPhoneBookIM", r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r25 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("IccPhoneBookIM", r3);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") pin2=");

        $r28 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("IccPhoneBookIM", r4);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void logd(java.lang.String)>($r30);

        i2 = specialinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: int updateEfForIccType(int)>(i1);

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void checkThread()>();

        $r31 = new com.android.internal.telephony.IccPhoneBookInterfaceManager$Request;

        specialinvoke $r31.<com.android.internal.telephony.IccPhoneBookInterfaceManager$Request: void <init>(com.android.internal.telephony.IccPhoneBookInterfaceManager$1)>(null);

        entermonitor $r31;

     label1:
        $r32 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: android.os.Handler mBaseHandler>;

        r5 = virtualinvoke $r32.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r31);

        r6 = new com.android.internal.telephony.uicc.AdnRecord;

        specialinvoke r6.<com.android.internal.telephony.uicc.AdnRecord: void <init>(java.lang.String,java.lang.String)>(r38, r1);

        r41 = new com.android.internal.telephony.uicc.AdnRecord;

        specialinvoke r41.<com.android.internal.telephony.uicc.AdnRecord: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        $r33 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        if $r33 == null goto label3;

        $r34 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        virtualinvoke $r34.<com.android.internal.telephony.uicc.AdnRecordCache: void updateAdnBySearch(int,com.android.internal.telephony.uicc.AdnRecord,com.android.internal.telephony.uicc.AdnRecord,java.lang.String,android.os.Message)>(i2, r6, r41, r4, r5);

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void waitForResult(com.android.internal.telephony.IccPhoneBookInterfaceManager$Request)>($r31);

        $r35 = $r31.<com.android.internal.telephony.IccPhoneBookInterfaceManager$Request: java.lang.Object mResult>;

        $r36 = (java.lang.Boolean) $r35;

        z0 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>();

        exitmonitor $r31;

     label2:
        return z0;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void loge(java.lang.String)>("Failure while trying to update by search due to uninitialised adncache");

        exitmonitor $r31;

     label4:
        return 0;

     label5:
        $r37 := @caughtexception;

     label6:
        exitmonitor $r31;

     label7:
        throw $r37;

     label8:
        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires android.permission.WRITE_CONTACTS permission");

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void updateIccRecords(com.android.internal.telephony.uicc.IccRecords)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        com.android.internal.telephony.uicc.AdnRecordCache $r2;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.uicc.IccRecords;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.AdnRecordCache getAdnCache()>();

        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache> = $r2;

        goto label2;

     label1:
        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache> = null;

     label2:
        return;
    }

    protected void waitForResult(com.android.internal.telephony.IccPhoneBookInterfaceManager$Request)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        com.android.internal.telephony.IccPhoneBookInterfaceManager$Request r1;
        boolean z0;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        java.lang.Throwable $r3, $r4;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.IccPhoneBookInterfaceManager$Request;

        entermonitor r1;

     label01:
        $r2 = r1.<com.android.internal.telephony.IccPhoneBookInterfaceManager$Request: java.util.concurrent.atomic.AtomicBoolean mStatus>;

        z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

     label02:
        if z0 != 0 goto label08;

     label03:
        virtualinvoke r1.<java.lang.Object: void wait()>();

     label04:
        goto label01;

     label05:
        $r3 := @caughtexception;

     label06:
        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void logd(java.lang.String)>("interrupted while trying to update by search");

     label07:
        goto label04;

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.IccPhoneBookInterfaceManager: java.lang.String LOG_TAG> = "IccPhoneBookIM";

        <com.android.internal.telephony.IccPhoneBookInterfaceManager: int EVENT_UPDATE_DONE> = 3;

        <com.android.internal.telephony.IccPhoneBookInterfaceManager: int EVENT_LOAD_DONE> = 2;

        <com.android.internal.telephony.IccPhoneBookInterfaceManager: int EVENT_GET_SIZE_DONE> = 1;

        <com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean DBG> = 1;

        return;
    }
}
