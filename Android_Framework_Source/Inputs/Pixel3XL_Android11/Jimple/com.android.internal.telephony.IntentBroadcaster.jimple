public class com.android.internal.telephony.IntentBroadcaster extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static com.android.internal.telephony.IntentBroadcaster sIntentBroadcaster;
    private java.util.Map mRebroadcastIntents;
    private final android.content.BroadcastReceiver mReceiver;

    private void <init>(android.content.Context)
    {
        com.android.internal.telephony.IntentBroadcaster r0;
        android.content.Context r1;
        java.util.HashMap $r3;
        com.android.internal.telephony.IntentBroadcaster$1 $r4;
        android.content.IntentFilter $r5;

        r0 := @this: com.android.internal.telephony.IntentBroadcaster;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.IntentBroadcaster: java.util.Map mRebroadcastIntents> = $r3;

        $r4 = new com.android.internal.telephony.IntentBroadcaster$1;

        specialinvoke $r4.<com.android.internal.telephony.IntentBroadcaster$1: void <init>(com.android.internal.telephony.IntentBroadcaster)>(r0);

        r0.<com.android.internal.telephony.IntentBroadcaster: android.content.BroadcastReceiver mReceiver> = $r4;

        $r5 = new android.content.IntentFilter;

        specialinvoke $r5.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.USER_UNLOCKED");

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r4, $r5);

        return;
    }

    static java.util.Map access$000(com.android.internal.telephony.IntentBroadcaster)
    {
        com.android.internal.telephony.IntentBroadcaster r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.internal.telephony.IntentBroadcaster;

        $r1 = r0.<com.android.internal.telephony.IntentBroadcaster: java.util.Map mRebroadcastIntents>;

        return $r1;
    }

    static void access$100(com.android.internal.telephony.IntentBroadcaster, java.lang.String)
    {
        com.android.internal.telephony.IntentBroadcaster r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.IntentBroadcaster;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.telephony.IntentBroadcaster: void logd(java.lang.String)>(r1);

        return;
    }

    public static com.android.internal.telephony.IntentBroadcaster getInstance()
    {
        com.android.internal.telephony.IntentBroadcaster $r0;

        $r0 = <com.android.internal.telephony.IntentBroadcaster: com.android.internal.telephony.IntentBroadcaster sIntentBroadcaster>;

        return $r0;
    }

    public static com.android.internal.telephony.IntentBroadcaster getInstance(android.content.Context)
    {
        android.content.Context r0;
        com.android.internal.telephony.IntentBroadcaster $r1, $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = <com.android.internal.telephony.IntentBroadcaster: com.android.internal.telephony.IntentBroadcaster sIntentBroadcaster>;

        if $r1 != null goto label1;

        $r3 = new com.android.internal.telephony.IntentBroadcaster;

        specialinvoke $r3.<com.android.internal.telephony.IntentBroadcaster: void <init>(android.content.Context)>(r0);

        <com.android.internal.telephony.IntentBroadcaster: com.android.internal.telephony.IntentBroadcaster sIntentBroadcaster> = $r3;

     label1:
        $r2 = <com.android.internal.telephony.IntentBroadcaster: com.android.internal.telephony.IntentBroadcaster sIntentBroadcaster>;

        return $r2;
    }

    private void logd(java.lang.String)
    {
        com.android.internal.telephony.IntentBroadcaster r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.IntentBroadcaster;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("IntentBroadcaster", r1);

        return;
    }

    public void broadcastStickyIntent(android.content.Context, android.content.Intent, int)
    {
        com.android.internal.telephony.IntentBroadcaster r0;
        android.content.Intent r1;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7, $r11;
        android.os.UserHandle $r12;
        java.util.Map $r13, r19;
        java.lang.Integer $r14;
        java.lang.Throwable $r16;
        android.content.Context r17;

        r0 := @this: com.android.internal.telephony.IntentBroadcaster;

        r17 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcasting and adding intent for rebroadcast: ");

        $r4 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("ss");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for phoneId ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.IntentBroadcaster: void logd(java.lang.String)>($r11);

        r19 = r0.<com.android.internal.telephony.IntentBroadcaster: java.util.Map mRebroadcastIntents>;

        entermonitor r19;

     label1:
        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke r17.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r12);

        $r13 = r0.<com.android.internal.telephony.IntentBroadcaster: java.util.Map mRebroadcastIntents>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r1);

        exitmonitor r19;

     label2:
        return;

     label3:
        $r16 := @caughtexception;

     label4:
        exitmonitor r19;

     label5:
        throw $r16;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.IntentBroadcaster: java.lang.String TAG> = "IntentBroadcaster";

        return;
    }
}
