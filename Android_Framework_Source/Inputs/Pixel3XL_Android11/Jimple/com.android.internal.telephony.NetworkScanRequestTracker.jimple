public final class com.android.internal.telephony.NetworkScanRequestTracker extends java.lang.Object
{
    private static final int CMD_INTERRUPT_NETWORK_SCAN;
    private static final int CMD_START_NETWORK_SCAN;
    private static final int CMD_STOP_NETWORK_SCAN;
    private static final int EVENT_INTERRUPT_NETWORK_SCAN_DONE;
    private static final int EVENT_MODEM_RESET;
    private static final int EVENT_RECEIVE_NETWORK_SCAN_RESULT;
    private static final int EVENT_START_NETWORK_SCAN_DONE;
    private static final int EVENT_STOP_NETWORK_SCAN_DONE;
    private static final java.lang.String TAG;
    private final android.os.Handler mHandler;
    private final java.util.concurrent.atomic.AtomicInteger mNextNetworkScanRequestId;
    private final com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler mScheduler;

    public void <init>()
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        com.android.internal.telephony.NetworkScanRequestTracker$1 $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler $r3;

        r0 := @this: com.android.internal.telephony.NetworkScanRequestTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.internal.telephony.NetworkScanRequestTracker$1;

        specialinvoke $r1.<com.android.internal.telephony.NetworkScanRequestTracker$1: void <init>(com.android.internal.telephony.NetworkScanRequestTracker)>(r0);

        r0.<com.android.internal.telephony.NetworkScanRequestTracker: android.os.Handler mHandler> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<com.android.internal.telephony.NetworkScanRequestTracker: java.util.concurrent.atomic.AtomicInteger mNextNetworkScanRequestId> = $r2;

        $r3 = new com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler;

        specialinvoke $r3.<com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler: void <init>(com.android.internal.telephony.NetworkScanRequestTracker,com.android.internal.telephony.NetworkScanRequestTracker$1)>(r0, null);

        r0.<com.android.internal.telephony.NetworkScanRequestTracker: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler mScheduler> = $r3;

        return;
    }

    static com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler access$000(com.android.internal.telephony.NetworkScanRequestTracker)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler $r1;

        r0 := @parameter0: com.android.internal.telephony.NetworkScanRequestTracker;

        $r1 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler mScheduler>;

        return $r1;
    }

    static void access$1400(com.android.internal.telephony.NetworkScanRequestTracker, int)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.NetworkScanRequestTracker;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.telephony.NetworkScanRequestTracker: void interruptNetworkScan(int)>(i0);

        return;
    }

    static boolean access$1500(com.android.internal.telephony.NetworkScanRequestTracker, com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo r1;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.NetworkScanRequestTracker;

        r1 := @parameter1: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo;

        $z0 = specialinvoke r0.<com.android.internal.telephony.NetworkScanRequestTracker: boolean isValidScan(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        return $z0;
    }

    static void access$1600(com.android.internal.telephony.NetworkScanRequestTracker, com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo, int, int, java.util.List)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo r1;
        int i0, i1;
        java.util.List r2;

        r0 := @parameter0: com.android.internal.telephony.NetworkScanRequestTracker;

        r1 := @parameter1: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.util.List;

        specialinvoke r0.<com.android.internal.telephony.NetworkScanRequestTracker: void notifyMessenger(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo,int,int,java.util.List)>(r1, i0, i1, r2);

        return;
    }

    static android.os.Handler access$1700(com.android.internal.telephony.NetworkScanRequestTracker)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.internal.telephony.NetworkScanRequestTracker;

        $r1 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$1800(com.android.internal.telephony.NetworkScanRequestTracker, android.os.AsyncResult)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        android.os.AsyncResult r1;

        r0 := @parameter0: com.android.internal.telephony.NetworkScanRequestTracker;

        r1 := @parameter1: android.os.AsyncResult;

        specialinvoke r0.<com.android.internal.telephony.NetworkScanRequestTracker: void logEmptyResultOrException(android.os.AsyncResult)>(r1);

        return;
    }

    private static boolean doesCellInfoCorrespondToKnownMccMnc(android.telephony.CellInfo, java.util.Collection)
    {
        android.telephony.CellInfo r0;
        java.util.Collection r1;
        java.lang.StringBuilder $r3;
        android.telephony.CellIdentity $r4, $r7;
        java.lang.String $r5, $r8, $r10;
        boolean $z0;

        r0 := @parameter0: android.telephony.CellInfo;

        r1 := @parameter1: java.util.Collection;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<android.telephony.CellInfo: android.telephony.CellIdentity getCellIdentity()>();

        $r5 = virtualinvoke $r4.<android.telephony.CellIdentity: java.lang.String getMccString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<android.telephony.CellInfo: android.telephony.CellIdentity getCellIdentity()>();

        $r8 = virtualinvoke $r7.<android.telephony.CellIdentity: java.lang.String getMncString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r10);

        return $z0;
    }

    private static java.util.stream.Stream getAllowableMccMncsFromSubscriptionInfo(android.telephony.SubscriptionInfo)
    {
        android.telephony.SubscriptionInfo r0;
        java.util.stream.Stream r1, $r5, $r15, r16;
        java.util.List[] $r2;
        java.util.List $r3, $r4;
        com.android.internal.telephony.'-$$Lambda$seyL25CSW2NInOydsTbSDrNW6pM' $r6;
        java.lang.String $r7, $r8, $r10, $r12, $r14;
        java.lang.StringBuilder r18;
        java.util.function.Function r19;

        r0 := @parameter0: android.telephony.SubscriptionInfo;

        $r2 = newarray (java.util.List)[2];

        $r3 = virtualinvoke r0.<android.telephony.SubscriptionInfo: java.util.List getEhplmns()>();

        $r2[0] = $r3;

        $r4 = virtualinvoke r0.<android.telephony.SubscriptionInfo: java.util.List getHplmns()>();

        $r2[1] = $r4;

        $r5 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream of(java.lang.Object[])>($r2);

        $r6 = <com.android.internal.telephony._$$Lambda$seyL25CSW2NInOydsTbSDrNW6pM: com.android.internal.telephony.'-$$Lambda$seyL25CSW2NInOydsTbSDrNW6pM' INSTANCE>;

        r19 = (java.util.function.Function) $r6;

        r1 = interfaceinvoke $r5.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>(r19);

        r16 = r1;

        $r7 = virtualinvoke r0.<android.telephony.SubscriptionInfo: java.lang.String getMccString()>();

        if $r7 == null goto label1;

        r16 = r1;

        $r8 = virtualinvoke r0.<android.telephony.SubscriptionInfo: java.lang.String getMncString()>();

        if $r8 == null goto label1;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<android.telephony.SubscriptionInfo: java.lang.String getMccString()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r0.<android.telephony.SubscriptionInfo: java.lang.String getMncString()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream of(java.lang.Object)>($r14);

        r16 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream concat(java.util.stream.Stream,java.util.stream.Stream)>(r1, $r15);

     label1:
        return r16;
    }

    public static java.util.Set getAllowedMccMncsForLocationRestrictedScan(android.content.Context)
    {
        long l0;
        com.android.internal.telephony.SubscriptionController $r0;
        java.lang.String $r1, $r2;
        java.util.List $r3;
        java.util.stream.Stream $r4, $r6;
        com.android.internal.telephony.'-$$Lambda$NetworkScanRequestTracker$ElkGiXq_pSMxogeu8FScyf5E2jg' $r5;
        java.util.stream.Collector $r7;
        java.lang.Object $r8;
        java.lang.Throwable $r9;
        android.content.Context r10;
        java.util.Set r11;
        java.util.function.Function r13;

        r10 := @parameter0: android.content.Context;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r0 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $r1 = virtualinvoke r10.<android.content.Context: java.lang.String getOpPackageName()>();

        $r2 = virtualinvoke r10.<android.content.Context: java.lang.String getAttributionTag()>();

        $r3 = virtualinvoke $r0.<com.android.internal.telephony.SubscriptionController: java.util.List getAvailableSubscriptionInfoList(java.lang.String,java.lang.String)>($r1, $r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.stream.Stream stream()>();

        $r5 = <com.android.internal.telephony._$$Lambda$NetworkScanRequestTracker$ElkGiXq_pSMxogeu8FScyf5E2jg: com.android.internal.telephony.'-$$Lambda$NetworkScanRequestTracker$ElkGiXq_pSMxogeu8FScyf5E2jg' INSTANCE>;

        r13 = (java.util.function.Function) $r5;

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>(r13);

        $r7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toSet()>();

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r7);

        r11 = (java.util.Set) $r8;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r11;

     label3:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void interruptNetworkScan(int)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        int i0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.NetworkScanRequestTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(6, i0, 0);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    private boolean isValidScan(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo r1;
        android.telephony.RadioAccessSpecifier[] r2, $r6, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        android.telephony.RadioAccessSpecifier r3;
        android.telephony.NetworkScanRequest $r4, $r5, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22;
        java.util.ArrayList $r21, $r23;
        int[] $r24, $r25, $r26, $r27;

        r0 := @this: com.android.internal.telephony.NetworkScanRequestTracker;

        r1 := @parameter0: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo;

        $r4 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        if $r4 == null goto label17;

        $r5 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $r6 = virtualinvoke $r5.<android.telephony.NetworkScanRequest: android.telephony.RadioAccessSpecifier[] getSpecifiers()>();

        if $r6 != null goto label01;

        goto label17;

     label01:
        $r7 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $r8 = virtualinvoke $r7.<android.telephony.NetworkScanRequest: android.telephony.RadioAccessSpecifier[] getSpecifiers()>();

        $i1 = lengthof $r8;

        if $i1 <= 8 goto label02;

        return 0;

     label02:
        $r9 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        r2 = virtualinvoke $r9.<android.telephony.NetworkScanRequest: android.telephony.RadioAccessSpecifier[] getSpecifiers()>();

        i0 = lengthof r2;

        i19 = 0;

     label03:
        if i19 >= i0 goto label07;

        r3 = r2[i19];

        $i13 = virtualinvoke r3.<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()>();

        if $i13 == 1 goto label04;

        $i16 = virtualinvoke r3.<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()>();

        if $i16 == 2 goto label04;

        $i17 = virtualinvoke r3.<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()>();

        if $i17 == 3 goto label04;

        $i18 = virtualinvoke r3.<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()>();

        if $i18 == 6 goto label04;

        return 0;

     label04:
        $r27 = virtualinvoke r3.<android.telephony.RadioAccessSpecifier: int[] getBands()>();

        if $r27 == null goto label05;

        $r26 = virtualinvoke r3.<android.telephony.RadioAccessSpecifier: int[] getBands()>();

        $i15 = lengthof $r26;

        if $i15 <= 8 goto label05;

        return 0;

     label05:
        $r24 = virtualinvoke r3.<android.telephony.RadioAccessSpecifier: int[] getChannels()>();

        if $r24 == null goto label06;

        $r25 = virtualinvoke r3.<android.telephony.RadioAccessSpecifier: int[] getChannels()>();

        $i14 = lengthof $r25;

        if $i14 <= 32 goto label06;

        return 0;

     label06:
        i19 = i19 + 1;

        goto label03;

     label07:
        $r10 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $i2 = virtualinvoke $r10.<android.telephony.NetworkScanRequest: int getSearchPeriodicity()>();

        if $i2 < 5 goto label16;

        $r11 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $i3 = virtualinvoke $r11.<android.telephony.NetworkScanRequest: int getSearchPeriodicity()>();

        if $i3 <= 300 goto label08;

        goto label16;

     label08:
        $r12 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $i4 = virtualinvoke $r12.<android.telephony.NetworkScanRequest: int getMaxSearchTime()>();

        if $i4 < 60 goto label15;

        $r13 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $i5 = virtualinvoke $r13.<android.telephony.NetworkScanRequest: int getMaxSearchTime()>();

        if $i5 <= 3600 goto label09;

        goto label15;

     label09:
        $r14 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $i6 = virtualinvoke $r14.<android.telephony.NetworkScanRequest: int getIncrementalResultsPeriodicity()>();

        if $i6 < 1 goto label14;

        $r15 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $i7 = virtualinvoke $r15.<android.telephony.NetworkScanRequest: int getIncrementalResultsPeriodicity()>();

        if $i7 <= 10 goto label10;

        goto label14;

     label10:
        $r16 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $i8 = virtualinvoke $r16.<android.telephony.NetworkScanRequest: int getSearchPeriodicity()>();

        $r17 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $i9 = virtualinvoke $r17.<android.telephony.NetworkScanRequest: int getMaxSearchTime()>();

        if $i8 > $i9 goto label13;

        $r18 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $i10 = virtualinvoke $r18.<android.telephony.NetworkScanRequest: int getIncrementalResultsPeriodicity()>();

        $r19 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $i11 = virtualinvoke $r19.<android.telephony.NetworkScanRequest: int getMaxSearchTime()>();

        if $i10 <= $i11 goto label11;

        goto label13;

     label11:
        $r20 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $r21 = virtualinvoke $r20.<android.telephony.NetworkScanRequest: java.util.ArrayList getPlmns()>();

        if $r21 == null goto label12;

        $r22 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.telephony.NetworkScanRequest access$1000(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r1);

        $r23 = virtualinvoke $r22.<android.telephony.NetworkScanRequest: java.util.ArrayList getPlmns()>();

        $i12 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        if $i12 <= 20 goto label12;

        return 0;

     label12:
        return 1;

     label13:
        return 0;

     label14:
        return 0;

     label15:
        return 0;

     label16:
        return 0;

     label17:
        return 0;
    }

    public static java.util.stream.Stream lambda$ElkGiXq_pSMxogeu8FScyf5E2jg(android.telephony.SubscriptionInfo)
    {
        android.telephony.SubscriptionInfo r0;
        java.util.stream.Stream $r1;

        r0 := @parameter0: android.telephony.SubscriptionInfo;

        $r1 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker: java.util.stream.Stream getAllowableMccMncsFromSubscriptionInfo(android.telephony.SubscriptionInfo)>(r0);

        return $r1;
    }

    static boolean lambda$notifyMessenger$0(java.util.Set, android.telephony.CellInfo)
    {
        java.util.Set r0;
        android.telephony.CellInfo r1;
        boolean $z0;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: android.telephony.CellInfo;

        $z0 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker: boolean doesCellInfoCorrespondToKnownMccMnc(android.telephony.CellInfo,java.util.Collection)>(r1, r0);

        return $z0;
    }

    private void logEmptyResultOrException(android.os.AsyncResult)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        android.os.AsyncResult r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        java.lang.Throwable $r6;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.NetworkScanRequestTracker;

        r1 := @parameter0: android.os.AsyncResult;

        $r3 = r1.<android.os.AsyncResult: java.lang.Object result>;

        if $r3 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ScanRequestTracker", "NetworkScanResult: Empty result");

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NetworkScanResult: Exception: ");

        $r6 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ScanRequestTracker", $r8);

     label2:
        return;
    }

    private void notifyMessenger(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo, int, int, java.util.List)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        int i0, i1, $i2, $i3;
        android.os.Messenger r1;
        android.os.Message r2;
        android.telephony.CellInfo[] $r3, r24;
        java.lang.Object[] $r4;
        com.android.internal.telephony.Phone $r6;
        android.content.Context $r7;
        java.util.stream.Stream $r8, $r10, $r12;
        com.android.internal.telephony.'-$$Lambda$OXXtpNvVeJw7E7y9hLioSYgFy9A' $r9;
        java.util.stream.Collector $r13;
        java.lang.Object $r14;
        android.os.RemoteException $r15;
        java.lang.String $r19;
        com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo r20;
        java.util.List r21, r22;
        java.util.Set r23;
        com.android.internal.telephony._$$Lambda$NetworkScanRequestTracker$cX1kDK1bRnCvUbuLxXYG9VLUvhA r28;
        android.os.Bundle r29;
        java.lang.StringBuilder r30;
        java.util.function.Function r31;

        r0 := @this: com.android.internal.telephony.NetworkScanRequestTracker;

        r20 := @parameter0: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r21 := @parameter3: java.util.List;

        r1 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: android.os.Messenger access$1100(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r20);

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: int arg1> = i1;

        $i2 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: int access$1200(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r20);

        r2.<android.os.Message: int arg2> = $i2;

        if r21 == null goto label2;

        r22 = r21;

        if i0 != 4 goto label1;

        $r6 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: com.android.internal.telephony.Phone access$1300(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>(r20);

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        r23 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker: java.util.Set getAllowedMccMncsForLocationRestrictedScan(android.content.Context)>($r7);

        $r8 = interfaceinvoke r21.<java.util.List: java.util.stream.Stream stream()>();

        $r9 = <com.android.internal.telephony._$$Lambda$OXXtpNvVeJw7E7y9hLioSYgFy9A: com.android.internal.telephony.'-$$Lambda$OXXtpNvVeJw7E7y9hLioSYgFy9A' INSTANCE>;

        r31 = (java.util.function.Function) $r9;

        $r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r31);

        r28 = new com.android.internal.telephony._$$Lambda$NetworkScanRequestTracker$cX1kDK1bRnCvUbuLxXYG9VLUvhA;

        specialinvoke r28.<com.android.internal.telephony._$$Lambda$NetworkScanRequestTracker$cX1kDK1bRnCvUbuLxXYG9VLUvhA: void <init>(java.util.Set)>(r23);

        $r12 = interfaceinvoke $r10.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r28);

        $r13 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r14 = interfaceinvoke $r12.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r13);

        r22 = (java.util.List) $r14;

     label1:
        $i3 = interfaceinvoke r22.<java.util.List: int size()>();

        $r3 = newarray (android.telephony.CellInfo)[$i3];

        $r4 = interfaceinvoke r22.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        r24 = (android.telephony.CellInfo[]) $r4;

        r29 = new android.os.Bundle;

        specialinvoke r29.<android.os.Bundle: void <init>()>();

        virtualinvoke r29.<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>("scanResult", r24);

        virtualinvoke r2.<android.os.Message: void setData(android.os.Bundle)>(r29);

        goto label3;

     label2:
        r2.<android.os.Message: java.lang.Object obj> = null;

     label3:
        virtualinvoke r1.<android.os.Messenger: void send(android.os.Message)>(r2);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in notifyMessenger: ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r19 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ScanRequestTracker", $r19);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public int startNetworkScan(android.telephony.NetworkScanRequest, android.os.Messenger, android.os.IBinder, com.android.internal.telephony.Phone, int, int, java.lang.String)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        android.os.Messenger r1;
        android.os.IBinder r2;
        com.android.internal.telephony.Phone r3;
        int i0, i1, i2;
        java.lang.String r4;
        java.util.concurrent.atomic.AtomicInteger $r5;
        com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo $r6;
        android.os.Handler $r7;
        android.os.Message $r8;
        android.telephony.NetworkScanRequest r9;

        r0 := @this: com.android.internal.telephony.NetworkScanRequestTracker;

        r9 := @parameter0: android.telephony.NetworkScanRequest;

        r1 := @parameter1: android.os.Messenger;

        r2 := @parameter2: android.os.IBinder;

        r3 := @parameter3: com.android.internal.telephony.Phone;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        r4 := @parameter6: java.lang.String;

        $r5 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: java.util.concurrent.atomic.AtomicInteger mNextNetworkScanRequestId>;

        i2 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r6 = new com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo;

        specialinvoke $r6.<com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: void <init>(com.android.internal.telephony.NetworkScanRequestTracker,android.telephony.NetworkScanRequest,android.os.Messenger,android.os.IBinder,int,com.android.internal.telephony.Phone,int,int,java.lang.String)>(r0, r9, r1, r2, i2, r3, i0, i1, r4);

        $r7 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: android.os.Handler mHandler>;

        $r8 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r6);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

        return i2;
    }

    public void stopNetworkScan(int, int)
    {
        com.android.internal.telephony.NetworkScanRequestTracker r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler r1, $r3, $r8, $r10, $r14, $r16, $r19;
        java.lang.StringBuilder r2;
        com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo $r4, $r9, $r11, $r15, $r17, $r20;
        android.os.Handler $r12;
        android.os.Message $r13;
        java.lang.Throwable $r18;
        java.lang.IllegalArgumentException r21;
        java.lang.String $r22;

        r0 := @this: com.android.internal.telephony.NetworkScanRequestTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler mScheduler>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler mScheduler>;

        $r4 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo access$2200(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler)>($r3);

        if $r4 == null goto label2;

        $r14 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler mScheduler>;

        $r15 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo access$2200(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler)>($r14);

        $i4 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: int access$1200(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>($r15);

        if i0 != $i4 goto label2;

        $r16 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler mScheduler>;

        $r17 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo access$2200(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler)>($r16);

        $i5 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: int access$1900(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>($r17);

        if i1 == $i5 goto label3;

     label2:
        $r19 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler mScheduler>;

        $r20 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo access$2300(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler)>($r19);

        if $r20 == null goto label5;

        $r8 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler mScheduler>;

        $r9 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo access$2300(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler)>($r8);

        $i2 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: int access$1200(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>($r9);

        if i0 != $i2 goto label5;

        $r10 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler mScheduler>;

        $r11 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler: com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo access$2300(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestScheduler)>($r10);

        $i3 = staticinvoke <com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo: int access$1900(com.android.internal.telephony.NetworkScanRequestTracker$NetworkScanRequestInfo)>($r11);

        if i1 != $i3 goto label5;

     label3:
        $r12 = r0.<com.android.internal.telephony.NetworkScanRequestTracker: android.os.Handler mHandler>;

        $r13 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(4, i0, 0);

        virtualinvoke $r13.<android.os.Message: void sendToTarget()>();

        exitmonitor r1;

     label4:
        return;

     label5:
        r21 = new java.lang.IllegalArgumentException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scan with id: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist!");

        $r22 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw r21;

     label6:
        $r18 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r18;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.NetworkScanRequestTracker: java.lang.String TAG> = "ScanRequestTracker";

        <com.android.internal.telephony.NetworkScanRequestTracker: int EVENT_STOP_NETWORK_SCAN_DONE> = 5;

        <com.android.internal.telephony.NetworkScanRequestTracker: int EVENT_START_NETWORK_SCAN_DONE> = 2;

        <com.android.internal.telephony.NetworkScanRequestTracker: int EVENT_RECEIVE_NETWORK_SCAN_RESULT> = 3;

        <com.android.internal.telephony.NetworkScanRequestTracker: int EVENT_MODEM_RESET> = 8;

        <com.android.internal.telephony.NetworkScanRequestTracker: int EVENT_INTERRUPT_NETWORK_SCAN_DONE> = 7;

        <com.android.internal.telephony.NetworkScanRequestTracker: int CMD_STOP_NETWORK_SCAN> = 4;

        <com.android.internal.telephony.NetworkScanRequestTracker: int CMD_START_NETWORK_SCAN> = 1;

        <com.android.internal.telephony.NetworkScanRequestTracker: int CMD_INTERRUPT_NETWORK_SCAN> = 6;

        return;
    }
}
