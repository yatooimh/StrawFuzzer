public class com.android.internal.telephony.PhoneFactory extends java.lang.Object
{
    static final boolean DBG;
    static final java.lang.String LOG_TAG;
    static final int SOCKET_OPEN_MAX_RETRY;
    static final int SOCKET_OPEN_RETRY_MILLIS;
    private static com.android.internal.telephony.CellularNetworkValidator sCellularNetworkValidator;
    private static com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces;
    private static android.content.Context sContext;
    private static com.android.internal.telephony.euicc.EuiccCardController sEuiccCardController;
    private static com.android.internal.telephony.euicc.EuiccController sEuiccController;
    private static com.android.internal.telephony.IntentBroadcaster sIntentBroadcaster;
    private static final java.util.HashMap sLocalLogs;
    static final java.lang.Object sLockProxyPhones;
    private static boolean sMadeDefaults;
    private static com.android.internal.telephony.metrics.MetricsCollector sMetricsCollector;
    private static com.android.internal.telephony.util.NotificationChannelController sNotificationChannelController;
    private static com.android.internal.telephony.Phone sPhone;
    private static com.android.internal.telephony.PhoneConfigurationManager sPhoneConfigurationManager;
    private static com.android.internal.telephony.PhoneNotifier sPhoneNotifier;
    private static com.android.internal.telephony.PhoneSwitcher sPhoneSwitcher;
    private static com.android.internal.telephony.Phone[] sPhones;
    private static com.android.internal.telephony.ProxyController sProxyController;
    private static com.android.internal.telephony.SubscriptionInfoUpdater sSubInfoRecordUpdater;
    private static com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] sTelephonyNetworkFactories;
    private static com.android.internal.telephony.uicc.UiccController sUiccController;

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.util.HashMap $r1;

        <com.android.internal.telephony.PhoneFactory: int SOCKET_OPEN_RETRY_MILLIS> = 2000;

        <com.android.internal.telephony.PhoneFactory: int SOCKET_OPEN_MAX_RETRY> = 3;

        <com.android.internal.telephony.PhoneFactory: java.lang.String LOG_TAG> = "PhoneFactory";

        <com.android.internal.telephony.PhoneFactory: boolean DBG> = 0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones> = $r0;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones> = null;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone sPhone> = null;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces> = null;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.SubscriptionInfoUpdater sSubInfoRecordUpdater> = null;

        <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.android.internal.telephony.PhoneFactory: java.util.HashMap sLocalLogs> = $r1;

        return;
    }

    public void <init>()
    {
        com.android.internal.telephony.PhoneFactory r0;

        r0 := @this: com.android.internal.telephony.PhoneFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addLocalLog(java.lang.String, int)
    {
        int i0;
        java.util.HashMap r0, $r1, r9;
        boolean $z0;
        java.lang.String $r5, r8;
        java.lang.Throwable $r7;
        com.android.internal.telephony.LocalLog r10;
        java.lang.IllegalArgumentException r11;
        java.lang.StringBuilder r12;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r0 = <com.android.internal.telephony.PhoneFactory: java.util.HashMap sLocalLogs>;

        entermonitor r0;

     label1:
        $r1 = <com.android.internal.telephony.PhoneFactory: java.util.HashMap sLocalLogs>;

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r8);

        if $z0 != 0 goto label3;

        r9 = <com.android.internal.telephony.PhoneFactory: java.util.HashMap sLocalLogs>;

        r10 = new com.android.internal.telephony.LocalLog;

        specialinvoke r10.<com.android.internal.telephony.LocalLog: void <init>(int)>(i0);

        virtualinvoke r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r10);

        exitmonitor r0;

     label2:
        return;

     label3:
        r11 = new java.lang.IllegalArgumentException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already present");

        $r5 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw r11;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static int calculatePreferredNetworkType(android.content.Context, int)
    {
        android.content.ContentResolver r0, $r11;
        int i0, $i2, i4, i5, i6;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r4, $r10;
        com.android.internal.telephony.SubscriptionController $r12;
        android.provider.Settings$SettingNotFoundException $r13;
        android.content.Context r14;

        r14 := @parameter0: android.content.Context;

        i4 := @parameter1: int;

        r0 = virtualinvoke r14.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("preferred_network_mode");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r0, $r4, -1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("calculatePreferredNetworkType: phoneSubId = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" networkType = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r10);

        i5 = i0;

        if i0 != -1 goto label4;

        i5 = <com.android.internal.telephony.RILConstants: int PREFERRED_NETWORK_MODE>;

     label1:
        $r11 = virtualinvoke r14.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $i2 = virtualinvoke $r12.<com.android.internal.telephony.SubscriptionController: int getPhoneId(int)>(i4);

        i6 = staticinvoke <android.telephony.TelephonyManager: int getIntAtIndex(android.content.ContentResolver,java.lang.String,int)>($r11, "preferred_network_mode", $i2);

     label2:
        i5 = i6;

        goto label4;

     label3:
        $r13 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PhoneFactory", "Settings Exception Reading Value At Index for Settings.Global.PREFERRED_NETWORK_MODE");

     label4:
        return i5;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label3;
    }

    private static com.android.internal.telephony.Phone createPhone(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, i1, $i2, i4;
        java.lang.StringBuilder $r2;
        java.lang.String $r7, $r10;
        com.android.internal.telephony.TelephonyComponentFactory $r8, $r11, $r15;
        java.lang.Class $r9;
        com.android.internal.telephony.CommandsInterface[] $r12;
        com.android.internal.telephony.CommandsInterface $r13;
        com.android.internal.telephony.PhoneNotifier $r14;
        com.android.internal.telephony.Phone $r16;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $i2 = <com.android.internal.telephony.RILConstants: int PREFERRED_NETWORK_MODE>;

        i1 = staticinvoke <android.telephony.TelephonyManager: int getPhoneType(int)>($i2);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating Phone with type = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" phoneId = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r7);

        i4 = i1;

        if i1 != 2 goto label1;

        i4 = 6;

     label1:
        $r8 = staticinvoke <com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory getInstance()>();

        $r9 = class "Lcom/android/internal/telephony/GsmCdmaPhone;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r10);

        $r12 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r13 = $r12[i0];

        $r14 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        $r15 = staticinvoke <com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory getInstance()>();

        $r16 = virtualinvoke $r11.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.Phone makePhone(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int,int,com.android.internal.telephony.TelephonyComponentFactory)>(r0, $r13, $r14, i0, i4, $r15);

        return $r16;
    }

    public static void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.Object r1, $r31, $r34, $r37;
        com.android.internal.telephony.IndentingPrintWriter $r2;
        java.lang.StringBuilder $r3, $r48, r73;
        boolean $z0, $z1, $z2;
        java.lang.String $r6, $r33, $r53, r70;
        com.android.internal.telephony.PhoneSwitcher $r7;
        int $i0, i1;
        com.android.internal.telephony.uicc.UiccController $r9;
        com.android.internal.telephony.SubscriptionController $r12;
        com.android.internal.telephony.SubscriptionInfoUpdater $r15;
        java.util.HashMap $r18, $r36, r68;
        java.util.Set $r19, $r28;
        android.content.Context $r22, $r26;
        android.content.SharedPreferences $r27;
        com.android.internal.telephony.LocalLog $r38;
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] $r41;
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory $r42;
        java.lang.Throwable $r44;
        java.lang.Exception $r45, $r46, $r47, $r54, $r55, $r56;
        java.io.FileDescriptor r57;
        java.io.PrintWriter r58;
        com.android.internal.telephony.Phone[] r61;
        com.android.internal.telephony.Phone r62;
        java.util.Iterator r69, r72;
        java.util.Map r71;

        r57 := @parameter0: java.io.FileDescriptor;

        r58 := @parameter1: java.io.PrintWriter;

        r0 := @parameter2: java.lang.String[];

        $r2 = new com.android.internal.telephony.IndentingPrintWriter;

        specialinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r58, "  ");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("PhoneFactory:");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sMadeDefaults=");

        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r6);

        $r7 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneSwitcher sPhoneSwitcher>;

        virtualinvoke $r7.<com.android.internal.telephony.PhoneSwitcher: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r57, $r2, r0);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println()>();

        r61 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] getPhones()>();

        i1 = 0;

     label01:
        $i0 = lengthof r61;

        if i1 >= $i0 goto label06;

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        r62 = r61[i1];

     label02:
        virtualinvoke r62.<com.android.internal.telephony.Phone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r57, $r2, r0);

     label03:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void flush()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

        $r41 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] sTelephonyNetworkFactories>;

        $r42 = $r41[i1];

        virtualinvoke $r42.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r57, $r2, r0);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void flush()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

        goto label05;

     label04:
        $r47 := @caughtexception;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Telephony DebugService: Could not get Phone[");

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] e=");

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r53 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r53);

     label05:
        i1 = i1 + 1;

        goto label01;

     label06:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("UiccController:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

     label07:
        $r9 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.uicc.UiccController sUiccController>;

        virtualinvoke $r9.<com.android.internal.telephony.uicc.UiccController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r57, $r2, r0);

     label08:
        goto label10;

     label09:
        $r56 := @caughtexception;

        virtualinvoke $r56.<java.lang.Exception: void printStackTrace()>();

     label10:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void flush()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("SubscriptionController:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

     label11:
        $r12 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        virtualinvoke $r12.<com.android.internal.telephony.SubscriptionController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r57, $r2, r0);

     label12:
        goto label14;

     label13:
        $r46 := @caughtexception;

        virtualinvoke $r46.<java.lang.Exception: void printStackTrace()>();

     label14:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void flush()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("SubInfoRecordUpdater:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

     label15:
        $r15 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.SubscriptionInfoUpdater sSubInfoRecordUpdater>;

        virtualinvoke $r15.<com.android.internal.telephony.SubscriptionInfoUpdater: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r57, $r2, r0);

     label16:
        goto label18;

     label17:
        $r55 := @caughtexception;

        virtualinvoke $r55.<java.lang.Exception: void printStackTrace()>();

     label18:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void flush()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("LocalLogs:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        r68 = <com.android.internal.telephony.PhoneFactory: java.util.HashMap sLocalLogs>;

        entermonitor r68;

     label19:
        $r18 = <com.android.internal.telephony.PhoneFactory: java.util.HashMap sLocalLogs>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.util.Set keySet()>();

        r69 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label20:
        $z2 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label22;

        $r34 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>();

        r70 = (java.lang.String) $r34;

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>(r70);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r36 = <com.android.internal.telephony.PhoneFactory: java.util.HashMap sLocalLogs>;

        $r37 = virtualinvoke $r36.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r70);

        $r38 = (com.android.internal.telephony.LocalLog) $r37;

        virtualinvoke $r38.<com.android.internal.telephony.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r57, $r2, r0);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

     label21:
        goto label20;

     label22:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void flush()>();

        exitmonitor r68;

     label23:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("SharedPreferences:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

     label24:
        $r22 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        if $r22 == null goto label27;

        $r26 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r27 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r26);

        r71 = interfaceinvoke $r27.<android.content.SharedPreferences: java.util.Map getAll()>();

        $r28 = interfaceinvoke r71.<java.util.Map: java.util.Set keySet()>();

        r72 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>();

     label25:
        $z1 = interfaceinvoke r72.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label27;

        r1 = interfaceinvoke r72.<java.util.Iterator: java.lang.Object next()>();

        r73 = new java.lang.StringBuilder;

        specialinvoke r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r31 = interfaceinvoke r71.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r33);

     label26:
        goto label25;

     label27:
        goto label29;

     label28:
        $r45 := @caughtexception;

        virtualinvoke $r45.<java.lang.Exception: void printStackTrace()>();

     label29:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("DebugEvents:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

     label30:
        staticinvoke <android.telephony.AnomalyReporter: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r57, $r2, r0);

     label31:
        goto label33;

     label32:
        $r54 := @caughtexception;

        virtualinvoke $r54.<java.lang.Exception: void printStackTrace()>();

     label33:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void flush()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        return;

     label34:
        $r44 := @caughtexception;

     label35:
        exitmonitor r68;

     label36:
        throw $r44;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Throwable from label19 to label20 with label34;
        catch java.lang.Throwable from label20 to label21 with label34;
        catch java.lang.Throwable from label22 to label23 with label34;
        catch java.lang.Exception from label24 to label25 with label28;
        catch java.lang.Exception from label25 to label26 with label28;
        catch java.lang.Exception from label30 to label31 with label32;
        catch java.lang.Throwable from label35 to label36 with label34;
    }

    public static com.android.internal.telephony.CommandsInterface[] getCommandsInterfaces()
    {
        java.lang.Object r0;
        java.lang.Throwable $r1;
        com.android.internal.telephony.CommandsInterface[] r2;

        r0 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        entermonitor r0;

     label1:
        r2 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        exitmonitor r0;

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static com.android.internal.telephony.Phone getDefaultPhone()
    {
        java.lang.Object r0;
        boolean $z0;
        java.lang.Throwable $r1;
        com.android.internal.telephony.Phone r2;
        java.lang.IllegalStateException r3;

        r0 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        entermonitor r0;

     label1:
        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z0 == 0 goto label3;

        r2 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone sPhone>;

        exitmonitor r0;

     label2:
        return r2;

     label3:
        r3 = new java.lang.IllegalStateException;

        specialinvoke r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default phones haven\'t been made yet!");

        throw r3;

     label4:
        $r1 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static int getDefaultSubscription()
    {
        com.android.internal.telephony.SubscriptionController $r0;
        int $i0;

        $r0 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $i0 = virtualinvoke $r0.<com.android.internal.telephony.SubscriptionController: int getDefaultSubId()>();

        return $i0;
    }

    public static com.android.internal.telephony.metrics.MetricsCollector getMetricsCollector()
    {
        com.android.internal.telephony.metrics.MetricsCollector $r0;

        $r0 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.metrics.MetricsCollector sMetricsCollector>;

        return $r0;
    }

    public static com.android.internal.telephony.dataconnection.TelephonyNetworkFactory getNetworkFactory(int)
    {
        java.lang.Object r0;
        boolean $z0;
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] $r1, $r2, $r3;
        int $i0, i1;
        com.android.internal.telephony.Phone $r4;
        java.lang.Throwable $r5;
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r6;
        java.lang.IllegalStateException r7;

        i1 := @parameter0: int;

        r0 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        entermonitor r0;

     label01:
        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z0 == 0 goto label12;

     label02:
        if i1 != 2147483647 goto label05;

     label03:
        $r4 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone sPhone>;

        i1 = virtualinvoke $r4.<com.android.internal.telephony.Phone: int getSubId()>();

     label04:
        goto label05;

     label05:
        $r1 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] sTelephonyNetworkFactories>;

        if $r1 == null goto label09;

     label06:
        if i1 < 0 goto label09;

     label07:
        $r2 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] sTelephonyNetworkFactories>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label09;

        $r3 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] sTelephonyNetworkFactories>;

        r6 = $r3[i1];

     label08:
        goto label10;

     label09:
        r6 = null;

     label10:
        exitmonitor r0;

     label11:
        return r6;

     label12:
        r7 = new java.lang.IllegalStateException;

        specialinvoke r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default phones haven\'t been made yet!");

        throw r7;

     label13:
        $r5 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public static com.android.internal.telephony.Phone getPhone(int)
    {
        int i0, $i1;
        java.lang.Object r0;
        boolean $z0;
        com.android.internal.telephony.Phone[] $r1, $r2;
        java.lang.Throwable $r3;
        com.android.internal.telephony.Phone r4;
        java.lang.IllegalStateException r5;

        i0 := @parameter0: int;

        r0 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        entermonitor r0;

     label01:
        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z0 == 0 goto label11;

     label02:
        if i0 != 2147483647 goto label05;

     label03:
        r4 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone sPhone>;

     label04:
        goto label09;

     label05:
        if i0 < 0 goto label08;

     label06:
        $r1 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label08;

        $r2 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        r4 = $r2[i0];

     label07:
        goto label09;

     label08:
        r4 = null;

     label09:
        exitmonitor r0;

     label10:
        return r4;

     label11:
        r5 = new java.lang.IllegalStateException;

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default phones haven\'t been made yet!");

        throw r5;

     label12:
        $r3 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public static com.android.internal.telephony.Phone[] getPhones()
    {
        java.lang.Object r0;
        boolean $z0;
        java.lang.Throwable $r1;
        com.android.internal.telephony.Phone[] r2;
        java.lang.IllegalStateException r3;

        r0 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        entermonitor r0;

     label1:
        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z0 == 0 goto label3;

        r2 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        exitmonitor r0;

     label2:
        return r2;

     label3:
        r3 = new java.lang.IllegalStateException;

        specialinvoke r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default phones haven\'t been made yet!");

        throw r3;

     label4:
        $r1 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static com.android.internal.telephony.SmsController getSmsController()
    {
        java.lang.Object r0;
        boolean $z0;
        com.android.internal.telephony.ProxyController $r1;
        java.lang.Throwable $r2;
        com.android.internal.telephony.SmsController r3;
        java.lang.IllegalStateException r4;

        r0 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        entermonitor r0;

     label1:
        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z0 == 0 goto label3;

        $r1 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.ProxyController sProxyController>;

        r3 = virtualinvoke $r1.<com.android.internal.telephony.ProxyController: com.android.internal.telephony.SmsController getSmsController()>();

        exitmonitor r0;

     label2:
        return r3;

     label3:
        r4 = new java.lang.IllegalStateException;

        specialinvoke r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default phones haven\'t been made yet!");

        throw r4;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static com.android.internal.telephony.SubscriptionInfoUpdater getSubscriptionInfoUpdater()
    {
        com.android.internal.telephony.SubscriptionInfoUpdater $r0;

        $r0 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.SubscriptionInfoUpdater sSubInfoRecordUpdater>;

        return $r0;
    }

    public static boolean isSMSPromptEnabled()
    {
        android.content.Context $r0;
        android.content.ContentResolver $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.provider.Settings$SettingNotFoundException $r6;
        int i3;
        boolean z0;

     label1:
        $r0 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i3 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>($r1, "multi_sim_sms_prompt");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PhoneFactory", "Settings Exception Reading Dual Sim SMS Prompt Values");

        i3 = 0;

     label4:
        if i3 != 0 goto label5;

        z0 = 0;

        goto label6;

     label5:
        z0 = 1;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SMS Prompt option:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r5);

        return z0;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label3;
    }

    public static void localLog(java.lang.String, java.lang.String)
    {
        java.util.HashMap r0, $r2, $r7;
        java.lang.IllegalArgumentException r1;
        boolean $z0;
        java.lang.String $r6, r11, r12;
        java.lang.Object $r8;
        com.android.internal.telephony.LocalLog $r9;
        java.lang.Throwable $r10;
        java.lang.StringBuilder r13;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        r0 = <com.android.internal.telephony.PhoneFactory: java.util.HashMap sLocalLogs>;

        entermonitor r0;

     label1:
        $r2 = <com.android.internal.telephony.PhoneFactory: java.util.HashMap sLocalLogs>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r11);

        if $z0 == 0 goto label3;

        $r7 = <com.android.internal.telephony.PhoneFactory: java.util.HashMap sLocalLogs>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r11);

        $r9 = (com.android.internal.telephony.LocalLog) $r8;

        virtualinvoke $r9.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>(r12);

        exitmonitor r0;

     label2:
        return;

     label3:
        r1 = new java.lang.IllegalArgumentException;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r6 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw r1;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void makeDefaultPhone(android.content.Context)
    {
        java.lang.Object r0;
        boolean $z0, $z1, $z2, z4;
        com.android.internal.telephony.metrics.TelephonyMetrics $r2;
        android.net.LocalServerSocket $r3;
        java.lang.String $r6, $r14, $r19, $r26, $r29, $r42, $r63, $r65, r80;
        android.telephony.TelephonyManager $r7;
        com.android.internal.telephony.Phone[] $r8, $r52, $r54, $r56, $r58;
        com.android.internal.telephony.RIL[] $r9;
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] $r10, $r50;
        com.android.internal.telephony.uicc.UiccController $r11;
        com.android.internal.telephony.TelephonyComponentFactory $r12, $r15, $r17, $r20, $r27, $r30, $r40, $r43;
        java.lang.Class $r13, $r18, $r28, $r41;
        com.android.internal.telephony.SubscriptionController $r21;
        android.content.pm.PackageManager $r23, $r34;
        android.os.Looper $r31, $r45, $r51;
        com.android.internal.telephony.CommandsInterface[] $r32, $r67;
        com.android.internal.telephony.SubscriptionInfoUpdater $r33;
        android.content.Context $r35, $r37, $r44, r72;
        com.android.internal.telephony.PhoneConfigurationManager $r36, $r39;
        com.android.internal.telephony.CellularNetworkValidator $r38;
        com.android.internal.telephony.PhoneSwitcher $r46;
        com.android.internal.telephony.ProxyController $r47;
        com.android.internal.telephony.IntentBroadcaster $r48;
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory $r49;
        com.android.internal.telephony.Phone $r53, $r55, $r57, $r59;
        com.android.internal.telephony.euicc.EuiccController $r60;
        com.android.internal.telephony.euicc.EuiccCardController $r61;
        int $i5, $i6, $i8, i9, i10, i11, i12, i13, i14, i15, i16, i17;
        com.android.internal.telephony.RIL $r66;
        java.lang.Integer $r68;
        java.lang.Throwable $r69, $r70, $r71;
        com.android.internal.telephony.metrics.MetricsCollector r74;
        com.android.internal.telephony.DefaultPhoneNotifier r75;
        java.lang.StringBuilder r76, r78, r81;
        int[] r77;
        android.content.ComponentName r79;
        android.os.HandlerThread r82;
        com.android.internal.telephony.util.NotificationChannelController r83;
        java.lang.RuntimeException r85;

        r72 := @parameter0: android.content.Context;

        r0 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        entermonitor r0;

     label01:
        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z0 != 0 goto label41;

        <com.android.internal.telephony.PhoneFactory: android.content.Context sContext> = r72;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController create()>();

        $r2 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        virtualinvoke $r2.<com.android.internal.telephony.metrics.TelephonyMetrics: void setContext(android.content.Context)>(r72);

     label02:
        i9 = 0;

     label03:
        i10 = i9 + 1;

     label04:
        $r3 = new android.net.LocalServerSocket;

        specialinvoke $r3.<android.net.LocalServerSocket: void <init>(java.lang.String)>("com.android.internal.telephony");

     label05:
        z4 = 0;

        goto label07;

     label06:
        $r71 := @caughtexception;

        z4 = 1;

     label07:
        if z4 != 0 goto label35;

     label08:
        r74 = new com.android.internal.telephony.metrics.MetricsCollector;

        specialinvoke r74.<com.android.internal.telephony.metrics.MetricsCollector: void <init>(android.content.Context)>(r72);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.metrics.MetricsCollector sMetricsCollector> = r74;

        r75 = new com.android.internal.telephony.DefaultPhoneNotifier;

        specialinvoke r75.<com.android.internal.telephony.DefaultPhoneNotifier: void <init>(android.content.Context)>(r72);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier> = r75;

        i11 = staticinvoke <com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getDefault(android.content.Context)>(r72);

        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cdma Subscription set to ");

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r6 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r6);

        $r7 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        i12 = virtualinvoke $r7.<android.telephony.TelephonyManager: int getActiveModemCount()>();

        r77 = newarray (int)[i12];

        $r8 = newarray (com.android.internal.telephony.Phone)[i12];

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones> = $r8;

        $r9 = newarray (com.android.internal.telephony.RIL)[i12];

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces> = $r9;

        $r10 = newarray (com.android.internal.telephony.dataconnection.TelephonyNetworkFactory)[i12];

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] sTelephonyNetworkFactories> = $r10;

     label09:
        i13 = 0;

     label10:
        if i13 >= i12 goto label13;

     label11:
        $i5 = <com.android.internal.telephony.RILConstants: int PREFERRED_NETWORK_MODE>;

        r77[i13] = $i5;

        r78 = new java.lang.StringBuilder;

        specialinvoke r78.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Network Mode set to ");

        $i6 = r77[i13];

        $r63 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r65);

        $r67 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r66 = new com.android.internal.telephony.RIL;

        $i8 = r77[i13];

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        specialinvoke $r66.<com.android.internal.telephony.RIL: void <init>(android.content.Context,int,int,java.lang.Integer)>(r72, $i8, i11, $r68);

        $r67[i13] = $r66;

     label12:
        i13 = i13 + 1;

        goto label10;

     label13:
        $r11 = staticinvoke <com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController make(android.content.Context)>(r72);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.uicc.UiccController sUiccController> = $r11;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", "Creating SubscriptionController");

        $r12 = staticinvoke <com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory getInstance()>();

        $r13 = class "Lcom/android/internal/telephony/SubscriptionController;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r14);

        virtualinvoke $r15.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.SubscriptionController initSubscriptionController(android.content.Context)>(r72);

        $r17 = staticinvoke <com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory getInstance()>();

        $r18 = class "Lcom/android/internal/telephony/MultiSimSettingController;";

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r17.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r19);

        $r21 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        virtualinvoke $r20.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.MultiSimSettingController initMultiSimSettingController(android.content.Context,com.android.internal.telephony.SubscriptionController)>(r72, $r21);

        $r23 = virtualinvoke r72.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z1 = virtualinvoke $r23.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.telephony.euicc");

        if $z1 == 0 goto label14;

        $r60 = staticinvoke <com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccController init(android.content.Context)>(r72);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.euicc.EuiccController sEuiccController> = $r60;

        $r61 = staticinvoke <com.android.internal.telephony.euicc.EuiccCardController: com.android.internal.telephony.euicc.EuiccCardController init(android.content.Context)>(r72);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.euicc.EuiccCardController sEuiccCardController> = $r61;

     label14:
        i14 = 0;

     label15:
        if i14 >= i12 goto label18;

     label16:
        $r58 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        $r59 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone createPhone(android.content.Context,int)>(r72, i14);

        $r58[i14] = $r59;

     label17:
        i14 = i14 + 1;

        goto label15;

     label18:
        if i12 <= 0 goto label20;

     label19:
        $r56 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        $r57 = $r56[0];

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone sPhone> = $r57;

     label20:
        r79 = staticinvoke <com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSmsApplication(android.content.Context,boolean)>(r72, 1);

     label21:
        r80 = "NONE";

        if r79 == null goto label23;

     label22:
        r80 = virtualinvoke r79.<android.content.ComponentName: java.lang.String getPackageName()>();

     label23:
        r81 = new java.lang.StringBuilder;

        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("defaultSmsApplication: ");

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);

        $r26 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r26);

        staticinvoke <com.android.internal.telephony.SmsApplication: void initSmsPackageMonitor(android.content.Context)>(r72);

        <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults> = 1;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", "Creating SubInfoRecordUpdater ");

        r82 = new android.os.HandlerThread;

        specialinvoke r82.<android.os.HandlerThread: void <init>(java.lang.String)>("PhoneFactoryHandlerThread");

        virtualinvoke r82.<android.os.HandlerThread: void start()>();

        $r27 = staticinvoke <com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory getInstance()>();

        $r28 = class "Lcom/android/internal/telephony/SubscriptionInfoUpdater;";

        $r29 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();

        $r30 = virtualinvoke $r27.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r29);

        $r31 = virtualinvoke r82.<android.os.HandlerThread: android.os.Looper getLooper()>();

        $r32 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r33 = virtualinvoke $r30.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.SubscriptionInfoUpdater makeSubscriptionInfoUpdater(android.os.Looper,android.content.Context,com.android.internal.telephony.CommandsInterface[])>($r31, r72, $r32);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.SubscriptionInfoUpdater sSubInfoRecordUpdater> = $r33;

        $r34 = virtualinvoke r72.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z2 = virtualinvoke $r34.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.telephony.ims");

        if $z2 == 0 goto label29;

     label24:
        i15 = 0;

     label25:
        if i15 >= i12 goto label28;

     label26:
        $r54 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        $r55 = $r54[i15];

        virtualinvoke $r55.<com.android.internal.telephony.Phone: void createImsPhone()>();

     label27:
        i15 = i15 + 1;

        goto label25;

     label28:
        goto label30;

     label29:
        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", "IMS is not supported on this device, skipping ImsResolver.");

     label30:
        $r35 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r36 = staticinvoke <com.android.internal.telephony.PhoneConfigurationManager: com.android.internal.telephony.PhoneConfigurationManager init(android.content.Context)>($r35);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneConfigurationManager sPhoneConfigurationManager> = $r36;

        $r37 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r38 = staticinvoke <com.android.internal.telephony.CellularNetworkValidator: com.android.internal.telephony.CellularNetworkValidator make(android.content.Context)>($r37);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CellularNetworkValidator sCellularNetworkValidator> = $r38;

        $r39 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneConfigurationManager sPhoneConfigurationManager>;

        i16 = virtualinvoke $r39.<com.android.internal.telephony.PhoneConfigurationManager: int getNumberOfModemsWithSimultaneousDataConnections()>();

        $r40 = staticinvoke <com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory getInstance()>();

        $r41 = class "Lcom/android/internal/telephony/PhoneSwitcher;";

        $r42 = virtualinvoke $r41.<java.lang.Class: java.lang.String getName()>();

        $r43 = virtualinvoke $r40.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r42);

        $r44 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r45 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r46 = virtualinvoke $r43.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.PhoneSwitcher makePhoneSwitcher(int,android.content.Context,android.os.Looper)>(i16, $r44, $r45);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneSwitcher sPhoneSwitcher> = $r46;

        $r47 = staticinvoke <com.android.internal.telephony.ProxyController: com.android.internal.telephony.ProxyController getInstance(android.content.Context)>(r72);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.ProxyController sProxyController> = $r47;

        $r48 = staticinvoke <com.android.internal.telephony.IntentBroadcaster: com.android.internal.telephony.IntentBroadcaster getInstance(android.content.Context)>(r72);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.IntentBroadcaster sIntentBroadcaster> = $r48;

        r83 = new com.android.internal.telephony.util.NotificationChannelController;

        specialinvoke r83.<com.android.internal.telephony.util.NotificationChannelController: void <init>(android.content.Context)>(r72);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.util.NotificationChannelController sNotificationChannelController> = r83;

     label31:
        i17 = 0;

     label32:
        if i17 >= i12 goto label41;

     label33:
        $r50 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] sTelephonyNetworkFactories>;

        $r49 = new com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        $r51 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r52 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        $r53 = $r52[i17];

        specialinvoke $r49.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void <init>(android.os.Looper,com.android.internal.telephony.Phone)>($r51, $r53);

        $r50[i17] = $r49;

     label34:
        i17 = i17 + 1;

        goto label32;

     label35:
        if i10 > 3 goto label40;

     label36:
        staticinvoke <java.lang.Thread: void sleep(long)>(2000L);

     label37:
        goto label39;

     label38:
        $r69 := @caughtexception;

     label39:
        i9 = i10;

        goto label03;

     label40:
        r85 = new java.lang.RuntimeException;

        specialinvoke r85.<java.lang.RuntimeException: void <init>(java.lang.String)>("PhoneFactory probably already running");

        throw r85;

     label41:
        exitmonitor r0;

     label42:
        return;

     label43:
        $r70 := @caughtexception;

     label44:
        exitmonitor r0;

     label45:
        throw $r70;

        catch java.lang.Throwable from label01 to label02 with label43;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label43;
        catch java.lang.Throwable from label08 to label09 with label43;
        catch java.lang.Throwable from label11 to label12 with label43;
        catch java.lang.Throwable from label13 to label14 with label43;
        catch java.lang.Throwable from label16 to label17 with label43;
        catch java.lang.Throwable from label19 to label20 with label43;
        catch java.lang.Throwable from label20 to label21 with label43;
        catch java.lang.Throwable from label22 to label23 with label43;
        catch java.lang.Throwable from label23 to label24 with label43;
        catch java.lang.Throwable from label26 to label27 with label43;
        catch java.lang.Throwable from label29 to label30 with label43;
        catch java.lang.Throwable from label30 to label31 with label43;
        catch java.lang.Throwable from label33 to label34 with label43;
        catch java.lang.InterruptedException from label36 to label37 with label38;
        catch java.lang.Throwable from label36 to label37 with label43;
        catch java.lang.Throwable from label40 to label41 with label43;
        catch java.lang.Throwable from label41 to label42 with label43;
        catch java.lang.Throwable from label44 to label45 with label43;
    }

    public static void makeDefaultPhones(android.content.Context)
    {
        android.content.Context r0;

        r0 := @parameter0: android.content.Context;

        staticinvoke <com.android.internal.telephony.PhoneFactory: void makeDefaultPhone(android.content.Context)>(r0);

        return;
    }

    public static com.android.internal.telephony.Phone makeImsPhone(com.android.internal.telephony.PhoneNotifier, com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.PhoneNotifier r0;
        com.android.internal.telephony.Phone r1;
        android.content.Context $r2;
        com.android.internal.telephony.imsphone.ImsPhone $r3;

        r0 := @parameter0: com.android.internal.telephony.PhoneNotifier;

        r1 := @parameter1: com.android.internal.telephony.Phone;

        $r2 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r3 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneFactory: com.android.internal.telephony.imsphone.ImsPhone makePhone(android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone)>($r2, r0, r1);

        return $r3;
    }

    public static com.android.internal.telephony.sip.SipPhone makeSipPhone(java.lang.String)
    {
        java.lang.String r0;
        com.android.internal.telephony.PhoneNotifier $r1;
        android.content.Context $r2;
        com.android.internal.telephony.sip.SipPhone $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r1 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        $r3 = staticinvoke <com.android.internal.telephony.sip.SipPhoneFactory: com.android.internal.telephony.sip.SipPhone makePhone(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>(r0, $r2, $r1);

        return $r3;
    }

    public static void onMultiSimConfigChanged(android.content.Context, int)
    {
        int i0, i1, $i2, i3;
        java.lang.Object r0;
        com.android.internal.telephony.CommandsInterface[] r1, $r7, $r9;
        com.android.internal.telephony.RIL r2;
        com.android.internal.telephony.Phone[] $r3, $r4, $r6, $r14, $r20, $r22;
        java.lang.Object[] $r5, $r8, $r11;
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] $r10, $r12, $r18;
        java.lang.Integer $r13;
        com.android.internal.telephony.Phone $r15, $r21, $r23;
        android.content.pm.PackageManager $r16;
        boolean $z0;
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory $r17;
        android.os.Looper $r19;
        java.lang.Throwable $r24;
        android.content.Context r25;

        r25 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r0 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        entermonitor r0;

     label01:
        $r3 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        i3 = lengthof $r3;

     label02:
        if i3 != i0 goto label05;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        if i3 <= i0 goto label08;

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r4 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        $r5 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r4, i0);

        $r6 = (com.android.internal.telephony.Phone[]) $r5;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones> = $r6;

        $r7 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r8 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r7, i0);

        $r9 = (com.android.internal.telephony.CommandsInterface[]) $r8;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces> = $r9;

        $r10 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] sTelephonyNetworkFactories>;

        $r11 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r10, i0);

        $r12 = (com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[]) $r11;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] sTelephonyNetworkFactories> = $r12;

        i1 = staticinvoke <com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getDefault(android.content.Context)>(r25);

     label09:
        if i3 >= i0 goto label15;

     label10:
        r1 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        r2 = new com.android.internal.telephony.RIL;

        $i2 = <com.android.internal.telephony.RILConstants: int PREFERRED_NETWORK_MODE>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        specialinvoke r2.<com.android.internal.telephony.RIL: void <init>(android.content.Context,int,int,java.lang.Integer)>(r25, $i2, i1, $r13);

     label11:
        r1[i3] = r2;

     label12:
        $r14 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        $r15 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone createPhone(android.content.Context,int)>(r25, i3);

        $r14[i3] = $r15;

        $r16 = virtualinvoke r25.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r16.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.telephony.ims");

        if $z0 == 0 goto label13;

        $r22 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        $r23 = $r22[i3];

        virtualinvoke $r23.<com.android.internal.telephony.Phone: void createImsPhone()>();

     label13:
        $r18 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory[] sTelephonyNetworkFactories>;

        $r17 = new com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        $r19 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r20 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] sPhones>;

        $r21 = $r20[i3];

        specialinvoke $r17.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void <init>(android.os.Looper,com.android.internal.telephony.Phone)>($r19, $r21);

        $r18[i3] = $r17;

     label14:
        i3 = i3 + 1;

        goto label09;

     label15:
        exitmonitor r0;

     label16:
        return;

     label17:
        $r24 := @caughtexception;

     label18:
        exitmonitor r0;

     label19:
        throw $r24;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public static void requestEmbeddedSubscriptionInfoListRefresh(int, java.lang.Runnable)
    {
        int i0;
        java.lang.Runnable r0;
        com.android.internal.telephony.SubscriptionInfoUpdater $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Runnable;

        $r1 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.SubscriptionInfoUpdater sSubInfoRecordUpdater>;

        virtualinvoke $r1.<com.android.internal.telephony.SubscriptionInfoUpdater: void requestEmbeddedSubscriptionInfoListRefresh(int,java.lang.Runnable)>(i0, r0);

        return;
    }
}
