public class com.android.internal.telephony.RIL extends com.android.internal.telephony.BaseCommands implements com.android.internal.telephony.CommandsInterface
{
    private static final int DEFAULT_ACK_WAKE_LOCK_TIMEOUT_MS;
    private static final int DEFAULT_BLOCKING_MESSAGE_RESPONSE_TIMEOUT_MS;
    private static final int DEFAULT_WAKE_LOCK_TIMEOUT_MS;
    static final java.lang.String EMPTY_ALPHA_LONG;
    static final java.lang.String EMPTY_ALPHA_SHORT;
    static final int EVENT_ACK_WAKE_LOCK_TIMEOUT;
    static final int EVENT_BLOCKING_RESPONSE_TIMEOUT;
    static final int EVENT_RADIO_PROXY_DEAD;
    static final int EVENT_WAKE_LOCK_TIMEOUT;
    public static final int FOR_ACK_WAKELOCK;
    public static final int FOR_WAKELOCK;
    static final java.lang.String[] HIDL_SERVICE_NAME;
    private static final int INDICATION_FILTERS_ALL_V1_0;
    private static final int INDICATION_FILTERS_ALL_V1_2;
    private static final int INDICATION_FILTERS_ALL_V1_5;
    public static final int INVALID_WAKELOCK;
    static final int IRADIO_GET_SERVICE_DELAY_MILLIS;
    public static final com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_0;
    public static final com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_1;
    public static final com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2;
    public static final com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_3;
    public static final com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4;
    public static final com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5;
    public static final com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_UNKNOWN;
    static final java.lang.String RILJ_ACK_WAKELOCK_NAME;
    static final boolean RILJ_LOGD;
    static final boolean RILJ_LOGV;
    static final java.lang.String RILJ_LOG_TAG;
    static final java.lang.String RILJ_WAKELOCK_TAG;
    static final int RIL_HISTOGRAM_BUCKET_COUNT;
    static android.util.SparseArray mRilTimeHistograms;
    public final android.os.PowerManager$WakeLock mAckWakeLock;
    final int mAckWakeLockTimeout;
    volatile int mAckWlSequenceNum;
    private android.os.WorkSource mActiveWakelockWorkSource;
    private final com.android.internal.telephony.ClientWakelockTracker mClientWakelockTracker;
    private java.util.concurrent.ConcurrentHashMap mCompatOverrides;
    java.util.Set mDisabledOemHookServices;
    java.util.Set mDisabledRadioServices;
    boolean mIsCellularSupported;
    java.lang.Object[] mLastNITZTimeInfo;
    private com.android.internal.telephony.metrics.TelephonyMetrics mMetrics;
    com.android.internal.telephony.OemHookIndication mOemHookIndication;
    volatile android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy;
    com.android.internal.telephony.OemHookResponse mOemHookResponse;
    final java.lang.Integer mPhoneId;
    private android.os.WorkSource mRILDefaultWorkSource;
    private com.android.internal.telephony.RadioBugDetector mRadioBugDetector;
    com.android.internal.telephony.RadioIndication mRadioIndication;
    volatile android.hardware.radio.V1_0.IRadio mRadioProxy;
    final java.util.concurrent.atomic.AtomicLong mRadioProxyCookie;
    final com.android.internal.telephony.RIL$RadioProxyDeathRecipient mRadioProxyDeathRecipient;
    com.android.internal.telephony.RadioResponse mRadioResponse;
    private com.android.internal.telephony.HalVersion mRadioVersion;
    android.util.SparseArray mRequestList;
    final com.android.internal.telephony.RIL$RilHandler mRilHandler;
    java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall;
    public final android.os.PowerManager$WakeLock mWakeLock;
    int mWakeLockCount;
    final int mWakeLockTimeout;
    volatile int mWlSequenceNum;

    static void <clinit>()
    {
        com.android.internal.telephony.HalVersion $r0, $r1, $r2, $r3, $r4, $r5, $r6;
        android.util.SparseArray $r7;
        java.lang.String[] $r8;

        <com.android.internal.telephony.RIL: int RIL_HISTOGRAM_BUCKET_COUNT> = 5;

        <com.android.internal.telephony.RIL: java.lang.String RILJ_WAKELOCK_TAG> = "*telephony-radio*";

        <com.android.internal.telephony.RIL: java.lang.String RILJ_LOG_TAG> = "RILJ";

        <com.android.internal.telephony.RIL: boolean RILJ_LOGV> = 0;

        <com.android.internal.telephony.RIL: boolean RILJ_LOGD> = 1;

        <com.android.internal.telephony.RIL: java.lang.String RILJ_ACK_WAKELOCK_NAME> = "RILJ_ACK_WL";

        <com.android.internal.telephony.RIL: int IRADIO_GET_SERVICE_DELAY_MILLIS> = 4000;

        <com.android.internal.telephony.RIL: int INVALID_WAKELOCK> = -1;

        <com.android.internal.telephony.RIL: int INDICATION_FILTERS_ALL_V1_5> = 127;

        <com.android.internal.telephony.RIL: int INDICATION_FILTERS_ALL_V1_2> = 31;

        <com.android.internal.telephony.RIL: int INDICATION_FILTERS_ALL_V1_0> = 7;

        <com.android.internal.telephony.RIL: int FOR_WAKELOCK> = 0;

        <com.android.internal.telephony.RIL: int FOR_ACK_WAKELOCK> = 1;

        <com.android.internal.telephony.RIL: int EVENT_WAKE_LOCK_TIMEOUT> = 2;

        <com.android.internal.telephony.RIL: int EVENT_RADIO_PROXY_DEAD> = 6;

        <com.android.internal.telephony.RIL: int EVENT_BLOCKING_RESPONSE_TIMEOUT> = 5;

        <com.android.internal.telephony.RIL: int EVENT_ACK_WAKE_LOCK_TIMEOUT> = 4;

        <com.android.internal.telephony.RIL: java.lang.String EMPTY_ALPHA_SHORT> = "";

        <com.android.internal.telephony.RIL: java.lang.String EMPTY_ALPHA_LONG> = "";

        <com.android.internal.telephony.RIL: int DEFAULT_WAKE_LOCK_TIMEOUT_MS> = 60000;

        <com.android.internal.telephony.RIL: int DEFAULT_BLOCKING_MESSAGE_RESPONSE_TIMEOUT_MS> = 2000;

        <com.android.internal.telephony.RIL: int DEFAULT_ACK_WAKE_LOCK_TIMEOUT_MS> = 200;

        $r0 = <com.android.internal.telephony.HalVersion: com.android.internal.telephony.HalVersion UNKNOWN>;

        <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_UNKNOWN> = $r0;

        $r1 = new com.android.internal.telephony.HalVersion;

        specialinvoke $r1.<com.android.internal.telephony.HalVersion: void <init>(int,int)>(1, 0);

        <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_0> = $r1;

        $r2 = new com.android.internal.telephony.HalVersion;

        specialinvoke $r2.<com.android.internal.telephony.HalVersion: void <init>(int,int)>(1, 1);

        <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_1> = $r2;

        $r3 = new com.android.internal.telephony.HalVersion;

        specialinvoke $r3.<com.android.internal.telephony.HalVersion: void <init>(int,int)>(1, 2);

        <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2> = $r3;

        $r4 = new com.android.internal.telephony.HalVersion;

        specialinvoke $r4.<com.android.internal.telephony.HalVersion: void <init>(int,int)>(1, 3);

        <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_3> = $r4;

        $r5 = new com.android.internal.telephony.HalVersion;

        specialinvoke $r5.<com.android.internal.telephony.HalVersion: void <init>(int,int)>(1, 4);

        <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4> = $r5;

        $r6 = new com.android.internal.telephony.HalVersion;

        specialinvoke $r6.<com.android.internal.telephony.HalVersion: void <init>(int,int)>(1, 5);

        <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        <com.android.internal.telephony.RIL: android.util.SparseArray mRilTimeHistograms> = $r7;

        $r8 = newarray (java.lang.String)[3];

        $r8[0] = "slot1";

        $r8[1] = "slot2";

        $r8[2] = "slot3";

        <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME> = $r8;

        return;
    }

    public void <init>(android.content.Context, int, int)
    {
        com.android.internal.telephony.RIL r0;
        android.content.Context r1;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.internal.telephony.RIL: void <init>(android.content.Context,int,int,java.lang.Integer)>(r1, i0, i1, null);

        return;
    }

    public void <init>(android.content.Context, int, int, java.lang.Integer)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, i2, i3, $i4, $i5, $i6;
        com.android.internal.telephony.ClientWakelockTracker $r1;
        com.android.internal.telephony.HalVersion $r2, $r54;
        android.util.SparseArray $r3;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        java.util.HashSet $r5, $r6;
        com.android.internal.telephony.metrics.TelephonyMetrics $r7;
        java.util.concurrent.atomic.AtomicLong $r8;
        java.util.concurrent.ConcurrentHashMap $r9;
        java.lang.StringBuilder $r10, $r52;
        java.lang.String $r16, $r50, $r55;
        java.lang.Integer $r17, $r25, r27, $r41, $r43, $r45, $r47;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.Object $r18, $r36, $r42, $r46;
        com.android.internal.telephony.RadioBugDetector $r24;
        android.content.Context r26;
        android.telephony.TelephonyManager r29;
        com.android.internal.telephony.RadioResponse $r30;
        com.android.internal.telephony.RadioIndication $r31;
        com.android.internal.telephony.OemHookResponse $r32;
        com.android.internal.telephony.OemHookIndication $r33;
        com.android.internal.telephony.RIL$RilHandler $r34;
        com.android.internal.telephony.RIL$RadioProxyDeathRecipient $r35;
        android.os.PowerManager r37;
        android.os.PowerManager$WakeLock r38, r39;
        java.util.Optional $r40, $r44;
        android.os.WorkSource $r48, $r51;
        android.content.pm.ApplicationInfo $r49;

        r0 := @this: com.android.internal.telephony.RIL;

        r26 := @parameter0: android.content.Context;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r27 := @parameter3: java.lang.Integer;

        specialinvoke r0.<com.android.internal.telephony.BaseCommands: void <init>(android.content.Context)>(r26);

        $r1 = new com.android.internal.telephony.ClientWakelockTracker;

        specialinvoke $r1.<com.android.internal.telephony.ClientWakelockTracker: void <init>()>();

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.ClientWakelockTracker mClientWakelockTracker> = $r1;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_UNKNOWN>;

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion> = $r2;

        r0.<com.android.internal.telephony.RIL: int mWlSequenceNum> = 0;

        r0.<com.android.internal.telephony.RIL: int mAckWlSequenceNum> = 0;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList> = $r3;

        $r4 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall> = $r4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<com.android.internal.telephony.RIL: java.util.Set mDisabledRadioServices> = $r5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<com.android.internal.telephony.RIL: java.util.Set mDisabledOemHookServices> = $r6;

        $r7 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics> = $r7;

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioBugDetector mRadioBugDetector> = null;

        r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy> = null;

        r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy> = null;

        $r8 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r8.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicLong mRadioProxyCookie> = $r8;

        $r9 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r9.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.android.internal.telephony.RIL: java.util.concurrent.ConcurrentHashMap mCompatOverrides> = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL: init preferredNetworkType=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cdmaSubscription=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

        r0.<com.android.internal.telephony.RIL: android.content.Context mContext> = r26;

        r0.<com.android.internal.telephony.RIL: int mCdmaSubscription> = i0;

        r0.<com.android.internal.telephony.RIL: int mPreferredNetworkType> = i2;

        r0.<com.android.internal.telephony.RIL: int mPhoneType> = 0;

        if r27 != null goto label1;

        i3 = 0;

        goto label2;

     label1:
        i3 = virtualinvoke r27.<java.lang.Integer: int intValue()>();

     label2:
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId> = $r17;

        $z0 = specialinvoke r0.<com.android.internal.telephony.RIL: boolean isRadioBugDetectionEnabled()>();

        if $z0 == 0 goto label3;

        $r24 = new com.android.internal.telephony.RadioBugDetector;

        $r25 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i1 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        specialinvoke $r24.<com.android.internal.telephony.RadioBugDetector: void <init>(android.content.Context,int)>(r26, $i1);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioBugDetector mRadioBugDetector> = $r24;

     label3:
        $r18 = virtualinvoke r26.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r29 = (android.telephony.TelephonyManager) $r18;

        $z1 = virtualinvoke r29.<android.telephony.TelephonyManager: boolean isVoiceCapable()>();

        if $z1 != 0 goto label5;

        $z2 = virtualinvoke r29.<android.telephony.TelephonyManager: boolean isSmsCapable()>();

        if $z2 != 0 goto label5;

        $z3 = virtualinvoke r29.<android.telephony.TelephonyManager: boolean isDataCapable()>();

        if $z3 == 0 goto label4;

        goto label5;

     label4:
        z4 = 0;

        goto label6;

     label5:
        z4 = 1;

     label6:
        r0.<com.android.internal.telephony.RIL: boolean mIsCellularSupported> = z4;

        $r30 = new com.android.internal.telephony.RadioResponse;

        specialinvoke $r30.<com.android.internal.telephony.RadioResponse: void <init>(com.android.internal.telephony.RIL)>(r0);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioResponse mRadioResponse> = $r30;

        $r31 = new com.android.internal.telephony.RadioIndication;

        specialinvoke $r31.<com.android.internal.telephony.RadioIndication: void <init>(com.android.internal.telephony.RIL)>(r0);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioIndication mRadioIndication> = $r31;

        $r32 = new com.android.internal.telephony.OemHookResponse;

        specialinvoke $r32.<com.android.internal.telephony.OemHookResponse: void <init>(com.android.internal.telephony.RIL)>(r0);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.OemHookResponse mOemHookResponse> = $r32;

        $r33 = new com.android.internal.telephony.OemHookIndication;

        specialinvoke $r33.<com.android.internal.telephony.OemHookIndication: void <init>(com.android.internal.telephony.RIL)>(r0);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.OemHookIndication mOemHookIndication> = $r33;

        $r34 = new com.android.internal.telephony.RIL$RilHandler;

        specialinvoke $r34.<com.android.internal.telephony.RIL$RilHandler: void <init>(com.android.internal.telephony.RIL)>(r0);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RilHandler mRilHandler> = $r34;

        $r35 = new com.android.internal.telephony.RIL$RadioProxyDeathRecipient;

        specialinvoke $r35.<com.android.internal.telephony.RIL$RadioProxyDeathRecipient: void <init>(com.android.internal.telephony.RIL)>(r0);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RadioProxyDeathRecipient mRadioProxyDeathRecipient> = $r35;

        $r36 = virtualinvoke r26.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r37 = (android.os.PowerManager) $r36;

        r38 = virtualinvoke r37.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "*telephony-radio*");

        r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock> = r38;

        virtualinvoke r38.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        r39 = virtualinvoke r37.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "RILJ_ACK_WL");

        r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mAckWakeLock> = r39;

        virtualinvoke r39.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        $r40 = staticinvoke <android.internal.telephony.sysprop.TelephonyProperties: java.util.Optional wake_lock_timeout()>();

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(60000);

        $r42 = virtualinvoke $r40.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r41);

        $r43 = (java.lang.Integer) $r42;

        $i4 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();

        r0.<com.android.internal.telephony.RIL: int mWakeLockTimeout> = $i4;

        $r44 = staticinvoke <android.internal.telephony.sysprop.TelephonyProperties: java.util.Optional wake_lock_timeout()>();

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(200);

        $r46 = virtualinvoke $r44.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r45);

        $r47 = (java.lang.Integer) $r46;

        $i5 = virtualinvoke $r47.<java.lang.Integer: int intValue()>();

        r0.<com.android.internal.telephony.RIL: int mAckWakeLockTimeout> = $i5;

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = 0;

        $r48 = new android.os.WorkSource;

        $r49 = virtualinvoke r26.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i6 = $r49.<android.content.pm.ApplicationInfo: int uid>;

        $r50 = virtualinvoke r26.<android.content.Context: java.lang.String getPackageName()>();

        specialinvoke $r48.<android.os.WorkSource: void <init>(int,java.lang.String)>($i6, $r50);

        r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource> = $r48;

        $r51 = new android.os.WorkSource;

        specialinvoke $r51.<android.os.WorkSource: void <init>()>();

        r0.<com.android.internal.telephony.RIL: android.os.WorkSource mActiveWakelockWorkSource> = $r51;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController getInstance()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void registerRIL(com.android.internal.telephony.CommandsInterface)>(r0);

        virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(null);

        virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook getOemHookProxy(android.os.Message)>(null);

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Radio HAL version: ");

        $r54 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r54);

        $r55 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r55);

        return;
    }

    static boolean access$000(com.android.internal.telephony.RIL, int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.internal.telephony.RIL: boolean clearWakeLock(int)>(i0);

        return $z0;
    }

    static com.android.internal.telephony.RadioBugDetector access$100(com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RadioBugDetector $r1;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        $r1 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioBugDetector mRadioBugDetector>;

        return $r1;
    }

    static com.android.internal.telephony.RILRequest access$200(com.android.internal.telephony.RIL, int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        com.android.internal.telephony.RILRequest $r1;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest findAndRemoveRequestFromList(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$300(com.android.internal.telephony.RILRequest)
    {
        com.android.internal.telephony.RILRequest r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.internal.telephony.RILRequest;

        $r1 = staticinvoke <com.android.internal.telephony.RIL: java.lang.Object getResponseForTimedOutRILRequest(com.android.internal.telephony.RILRequest)>(r0);

        return $r1;
    }

    static com.android.internal.telephony.metrics.TelephonyMetrics access$400(com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.metrics.TelephonyMetrics $r1;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        $r1 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        return $r1;
    }

    static void access$500(com.android.internal.telephony.RIL, com.android.internal.telephony.RILRequest)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        r1 := @parameter1: com.android.internal.telephony.RILRequest;

        specialinvoke r0.<com.android.internal.telephony.RIL: void decrementWakeLock(com.android.internal.telephony.RILRequest)>(r1);

        return;
    }

    static void access$600(com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL r0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        specialinvoke r0.<com.android.internal.telephony.RIL: void resetProxyAndRequestList()>();

        return;
    }

    private void acquireWakeLock(com.android.internal.telephony.RILRequest, int)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15;
        android.os.PowerManager$WakeLock $r2, $r11, $r12, r27, r30;
        com.android.internal.telephony.ClientWakelockTracker $r3, $r5;
        boolean $z0;
        java.lang.String $r4, $r17, $r19, $r21, r31;
        com.android.internal.telephony.RIL$RilHandler $r6, $r7, $r13, $r14;
        long $l11, $l16;
        android.os.WorkSource $r8, $r9, $r10;
        java.lang.Throwable $r22, $r23, $r24;
        java.lang.StringBuilder r25, r26;
        android.os.Message r28, r32;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.RILRequest;

        i0 := @parameter1: int;

        entermonitor r1;

     label01:
        $i1 = r1.<com.android.internal.telephony.RILRequest: int mWakeLockType>;

        if $i1 == -1 goto label03;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to aquire wakelock for ");

        $r19 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r21);

        exitmonitor r1;

     label02:
        return;

     label03:
        if i0 == 0 goto label13;

        if i0 == 1 goto label06;

     label04:
        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Acquiring Invalid Wakelock type ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("RILJ", $r17);

        exitmonitor r1;

     label05:
        return;

     label06:
        r27 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mAckWakeLock>;

        entermonitor r27;

     label07:
        $r12 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mAckWakeLock>;

        virtualinvoke $r12.<android.os.PowerManager$WakeLock: void acquire()>();

        $i12 = r0.<com.android.internal.telephony.RIL: int mAckWlSequenceNum>;

        $i13 = $i12 + 1;

        r0.<com.android.internal.telephony.RIL: int mAckWlSequenceNum> = $i13;

        $r13 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RilHandler mRilHandler>;

        r28 = virtualinvoke $r13.<com.android.internal.telephony.RIL$RilHandler: android.os.Message obtainMessage(int)>(4);

        $i14 = r0.<com.android.internal.telephony.RIL: int mAckWlSequenceNum>;

        r28.<android.os.Message: int arg1> = $i14;

        $r14 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RilHandler mRilHandler>;

        $i15 = r0.<com.android.internal.telephony.RIL: int mAckWakeLockTimeout>;

        $l16 = (long) $i15;

        virtualinvoke $r14.<com.android.internal.telephony.RIL$RilHandler: boolean sendMessageDelayed(android.os.Message,long)>(r28, $l16);

     label08:
        exitmonitor r27;

     label09:
        goto label17;

     label10:
        $r23 := @caughtexception;

     label11:
        exitmonitor r27;

     label12:
        throw $r23;

     label13:
        r30 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        entermonitor r30;

     label14:
        $r2 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void acquire()>();

        $i2 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $i3 = $i2 + 1;

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = $i3;

        $i4 = r0.<com.android.internal.telephony.RIL: int mWlSequenceNum>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.telephony.RIL: int mWlSequenceNum> = $i5;

        r31 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String getWorkSourceClientId()>();

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.ClientWakelockTracker mClientWakelockTracker>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.ClientWakelockTracker: boolean isClientActive(java.lang.String)>(r31);

        if $z0 != 0 goto label15;

        $r9 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mActiveWakelockWorkSource>;

        $r8 = r1.<com.android.internal.telephony.RILRequest: android.os.WorkSource mWorkSource>;

        virtualinvoke $r9.<android.os.WorkSource: boolean add(android.os.WorkSource)>($r8);

        $r11 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        $r10 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mActiveWakelockWorkSource>;

        virtualinvoke $r11.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>($r10);

     label15:
        $r5 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.ClientWakelockTracker mClientWakelockTracker>;

        $r4 = r1.<com.android.internal.telephony.RILRequest: java.lang.String mClientId>;

        $i8 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $i7 = r1.<com.android.internal.telephony.RILRequest: int mSerial>;

        $i6 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        virtualinvoke $r5.<com.android.internal.telephony.ClientWakelockTracker: void startTracking(java.lang.String,int,int,int)>($r4, $i8, $i7, $i6);

        $r6 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RilHandler mRilHandler>;

        r32 = virtualinvoke $r6.<com.android.internal.telephony.RIL$RilHandler: android.os.Message obtainMessage(int)>(2);

        $i9 = r0.<com.android.internal.telephony.RIL: int mWlSequenceNum>;

        r32.<android.os.Message: int arg1> = $i9;

        $r7 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RilHandler mRilHandler>;

        $i10 = r0.<com.android.internal.telephony.RIL: int mWakeLockTimeout>;

        $l11 = (long) $i10;

        virtualinvoke $r7.<com.android.internal.telephony.RIL$RilHandler: boolean sendMessageDelayed(android.os.Message,long)>(r32, $l11);

     label16:
        exitmonitor r30;

     label17:
        r1.<com.android.internal.telephony.RILRequest: int mWakeLockType> = i0;

        exitmonitor r1;

     label18:
        return;

     label19:
        $r22 := @caughtexception;

     label20:
        exitmonitor r30;

     label21:
        throw $r22;

     label22:
        $r24 := @caughtexception;

     label23:
        exitmonitor r1;

     label24:
        throw $r24;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label21 to label22 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    private void addRequest(com.android.internal.telephony.RILRequest)
    {
        com.android.internal.telephony.RIL r0;
        android.util.SparseArray r1, $r2;
        long $l0;
        int $i1;
        java.lang.Throwable $r3;
        com.android.internal.telephony.RILRequest r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r4 := @parameter0: com.android.internal.telephony.RILRequest;

        specialinvoke r0.<com.android.internal.telephony.RIL: void acquireWakeLock(com.android.internal.telephony.RILRequest,int)>(r4, 0);

        r1 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        entermonitor r1;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r4.<com.android.internal.telephony.RILRequest: long mStartTimeMs> = $l0;

        $r2 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $i1 = r4.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke $r2.<android.util.SparseArray: void append(int,java.lang.Object)>($i1, r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void addToRilHistogram(com.android.internal.telephony.RILRequest)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i4, $i5, $i6;
        android.util.SparseArray r1, $r3, $r5;
        android.telephony.TelephonyHistogram r2, r8;
        long $l1, $l2, $l3;
        java.lang.Object $r4;
        java.lang.Throwable $r6;
        com.android.internal.telephony.RILRequest r7;

        r0 := @this: com.android.internal.telephony.RIL;

        r7 := @parameter0: com.android.internal.telephony.RILRequest;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r7.<com.android.internal.telephony.RILRequest: long mStartTimeMs>;

        $l3 = $l1 - $l2;

        i0 = (int) $l3;

        r1 = <com.android.internal.telephony.RIL: android.util.SparseArray mRilTimeHistograms>;

        entermonitor r1;

     label1:
        $r3 = <com.android.internal.telephony.RIL: android.util.SparseArray mRilTimeHistograms>;

        $i4 = r7.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i4);

        r2 = (android.telephony.TelephonyHistogram) $r4;

     label2:
        r8 = r2;

        if r2 != null goto label5;

     label3:
        r8 = new android.telephony.TelephonyHistogram;

        $i5 = r7.<com.android.internal.telephony.RILRequest: int mRequest>;

        specialinvoke r8.<android.telephony.TelephonyHistogram: void <init>(int,int,int)>(1, $i5, 5);

     label4:
        $r5 = <com.android.internal.telephony.RIL: android.util.SparseArray mRilTimeHistograms>;

        $i6 = r7.<com.android.internal.telephony.RILRequest: int mRequest>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>($i6, r8);

     label5:
        virtualinvoke r8.<android.telephony.TelephonyHistogram: void addTimeTaken(int)>(i0);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static void appendPrimitiveArrayToArrayList(byte[], java.util.ArrayList)
    {
        byte[] r0;
        java.util.ArrayList r1;
        int i0, i2;
        byte $b1;
        java.lang.Byte $r2;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.util.ArrayList;

        i0 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $b1 = r0[i2];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static byte[] arrayListToPrimitiveArray(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        byte[] r1;
        int $i0, $i1, i3;
        java.lang.Object $r2;
        java.lang.Byte $r3;
        byte $b2;

        r0 := @parameter0: java.util.ArrayList;

        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        r1 = newarray (byte)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label2;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r3 = (java.lang.Byte) $r2;

        $b2 = virtualinvoke $r3.<java.lang.Byte: byte byteValue()>();

        r1[i3] = $b2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    private java.lang.String censoredTerminalResponse(java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.cat.ComprehensionTlv r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i7, i8;
        boolean $z0;
        java.lang.Object $r2;
        com.android.internal.telephony.cat.ComprehensionTlvTag $r3;
        byte[] $r4, r14, r19;
        java.lang.String $r5, $r6, $r7, $r12, r13, r15, r18;
        java.lang.Exception $r8;
        java.lang.StringBuilder $r9;
        java.util.List r16;
        java.util.Iterator r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r13 := @parameter0: java.lang.String;

     label01:
        r14 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte[] hexStringToBytes(java.lang.String)>(r13);

     label02:
        r15 = r13;

        if r14 == null goto label12;

     label03:
        r16 = staticinvoke <com.android.internal.telephony.cat.ComprehensionTlv: java.util.List decodeMany(byte[],int)>(r14, 0);

     label04:
        i7 = 0;

     label05:
        r17 = interfaceinvoke r16.<java.util.List: java.util.Iterator iterator()>();

     label06:
        r15 = r13;

     label07:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r2 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.android.internal.telephony.cat.ComprehensionTlv) $r2;

     label08:
        r18 = r13;

     label09:
        $r3 = <com.android.internal.telephony.cat.ComprehensionTlvTag: com.android.internal.telephony.cat.ComprehensionTlvTag TEXT_STRING>;

        $i1 = virtualinvoke $r3.<com.android.internal.telephony.cat.ComprehensionTlvTag: int value()>();

        $i2 = virtualinvoke r1.<com.android.internal.telephony.cat.ComprehensionTlv: int getTag()>();

        if $i1 != $i2 goto label10;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.cat.ComprehensionTlv: byte[] getRawValue()>();

        $i3 = virtualinvoke r1.<com.android.internal.telephony.cat.ComprehensionTlv: int getValueIndex()>();

        $i4 = virtualinvoke r1.<com.android.internal.telephony.cat.ComprehensionTlv: int getLength()>();

        $i5 = $i3 + $i4;

        r19 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r4, i7, $i5);

        $r5 = virtualinvoke r13.<java.lang.String: java.lang.String toLowerCase()>();

        $r6 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r19);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        r18 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r7, "********");

     label10:
        i8 = virtualinvoke r1.<com.android.internal.telephony.cat.ComprehensionTlv: int getValueIndex()>();

        i0 = virtualinvoke r1.<com.android.internal.telephony.cat.ComprehensionTlv: int getLength()>();

     label11:
        i7 = i8 + i0;

        r13 = r18;

        goto label06;

     label12:
        goto label14;

     label13:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not censor the terminal response: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", $r12);

        r15 = null;

     label14:
        return r15;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label10 to label11 with label13;
    }

    private void clearRequestList(int, boolean)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, $i2, $i3, $i5, i7;
        boolean z0;
        android.util.SparseArray r1, $r3, $r4, $r5;
        com.android.internal.telephony.RILRequest r2;
        java.lang.Object $r6;
        java.lang.String $r11, $r13, $r18;
        java.lang.Throwable $r19;
        java.lang.StringBuilder r20, r21;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label02:
        if z0 == 0 goto label04;

     label03:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearRequestList  mWakeLockCount=");

        $i5 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRequestList=");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r18);

     label04:
        i7 = 0;

     label05:
        if i7 >= i1 goto label11;

     label06:
        $r5 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r2 = (com.android.internal.telephony.RILRequest) $r6;

     label07:
        if z0 == 0 goto label09;

     label08:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": [");

        $i2 = r2.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $i3 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r13);

     label09:
        virtualinvoke r2.<com.android.internal.telephony.RILRequest: void onError(int,java.lang.Object)>(i0, null);

        specialinvoke r0.<com.android.internal.telephony.RIL: void decrementWakeLock(com.android.internal.telephony.RILRequest)>(r2);

        virtualinvoke r2.<com.android.internal.telephony.RILRequest: void release()>();

     label10:
        i7 = i7 + 1;

        goto label05;

     label11:
        $r4 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        virtualinvoke $r4.<android.util.SparseArray: void clear()>();

        exitmonitor r1;

     label12:
        return;

     label13:
        $r19 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private boolean clearWakeLock(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        android.os.PowerManager$WakeLock $r1, $r2, $r7, $r9, r12, r16;
        boolean $z0, $z1;
        java.lang.String $r6;
        com.android.internal.telephony.ClientWakelockTracker $r8;
        java.lang.Throwable $r10, $r11;
        java.lang.StringBuilder r13;
        android.os.WorkSource r14;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        if i0 != 0 goto label08;

        r12 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        entermonitor r12;

     label01:
        $i1 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        if $i1 != 0 goto label03;

        $r9 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        $z1 = virtualinvoke $r9.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z1 != 0 goto label03;

        exitmonitor r12;

     label02:
        return 0;

     label03:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOTE: mWakeLockCount is ");

        $i2 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at time of clearing");

        $r6 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r6);

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = 0;

        $r7 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r7.<android.os.PowerManager$WakeLock: void release()>();

        $r8 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.ClientWakelockTracker mClientWakelockTracker>;

        virtualinvoke $r8.<com.android.internal.telephony.ClientWakelockTracker: void stopTrackingAll()>();

        r14 = new android.os.WorkSource;

        specialinvoke r14.<android.os.WorkSource: void <init>()>();

        r0.<com.android.internal.telephony.RIL: android.os.WorkSource mActiveWakelockWorkSource> = r14;

        exitmonitor r12;

     label04:
        return 1;

     label05:
        $r10 := @caughtexception;

     label06:
        exitmonitor r12;

     label07:
        throw $r10;

     label08:
        r16 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mAckWakeLock>;

        entermonitor r16;

     label09:
        $r1 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mAckWakeLock>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 != 0 goto label11;

        exitmonitor r16;

     label10:
        return 0;

     label11:
        $r2 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mAckWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void release()>();

        exitmonitor r16;

     label12:
        return 1;

     label13:
        $r11 := @caughtexception;

     label14:
        exitmonitor r16;

     label15:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private void constructCdmaSendSmsRilRequest(android.hardware.radio.V1_0.CdmaSmsMessage, byte[])
    {
        com.android.internal.telephony.RIL r0;
        java.io.DataInputStream $r2;
        java.io.ByteArrayInputStream $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, i17, i19, i20, i21;
        android.hardware.radio.V1_0.CdmaSmsAddress $r4, $r5, $r6, $r7, $r14;
        android.hardware.radio.V1_0.CdmaSmsSubaddress $r8, $r11, r24;
        byte $b10, $b12, $b13, $b14, b15, b16, b18;
        java.util.ArrayList $r9, $r12, $r15;
        java.lang.Byte $r10, $r13, $r16;
        java.lang.Throwable $r17;
        java.lang.StringBuilder $r18;
        java.lang.String $r21;
        android.hardware.radio.V1_0.CdmaSmsMessage r22;
        byte[] r23;
        boolean z4, z5;

        r0 := @this: com.android.internal.telephony.RIL;

        r22 := @parameter0: android.hardware.radio.V1_0.CdmaSmsMessage;

        r23 := @parameter1: byte[];

        $r2 = new java.io.DataInputStream;

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r23);

        specialinvoke $r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r3);

     label01:
        $i0 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

        r22.<android.hardware.radio.V1_0.CdmaSmsMessage: int teleserviceId> = $i0;

        $i1 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

        b15 = (byte) $i1;

     label02:
        if b15 != 1 goto label03;

        z4 = 1;

        goto label04;

     label03:
        z4 = 0;

     label04:
        r22.<android.hardware.radio.V1_0.CdmaSmsMessage: boolean isServicePresent> = z4;

        $i2 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

        r22.<android.hardware.radio.V1_0.CdmaSmsMessage: int serviceCategory> = $i2;

        $r4 = r22.<android.hardware.radio.V1_0.CdmaSmsMessage: android.hardware.radio.V1_0.CdmaSmsAddress address>;

        $i3 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $r4.<android.hardware.radio.V1_0.CdmaSmsAddress: int digitMode> = $i3;

        $r5 = r22.<android.hardware.radio.V1_0.CdmaSmsMessage: android.hardware.radio.V1_0.CdmaSmsAddress address>;

        $i4 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $r5.<android.hardware.radio.V1_0.CdmaSmsAddress: int numberMode> = $i4;

        $r6 = r22.<android.hardware.radio.V1_0.CdmaSmsMessage: android.hardware.radio.V1_0.CdmaSmsAddress address>;

        $i5 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $r6.<android.hardware.radio.V1_0.CdmaSmsAddress: int numberType> = $i5;

        $r7 = r22.<android.hardware.radio.V1_0.CdmaSmsMessage: android.hardware.radio.V1_0.CdmaSmsAddress address>;

        $i6 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $r7.<android.hardware.radio.V1_0.CdmaSmsAddress: int numberPlan> = $i6;

        $i7 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        b16 = (byte) $i7;

     label05:
        i17 = 0;

     label06:
        if i17 >= b16 goto label09;

     label07:
        $r14 = r22.<android.hardware.radio.V1_0.CdmaSmsMessage: android.hardware.radio.V1_0.CdmaSmsAddress address>;

        $r15 = $r14.<android.hardware.radio.V1_0.CdmaSmsAddress: java.util.ArrayList digits>;

        $b14 = virtualinvoke $r2.<java.io.DataInputStream: byte readByte()>();

        $r16 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b14);

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label08:
        i17 = i17 + 1;

        goto label06;

     label09:
        $r8 = r22.<android.hardware.radio.V1_0.CdmaSmsMessage: android.hardware.radio.V1_0.CdmaSmsSubaddress subAddress>;

        $i8 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $r8.<android.hardware.radio.V1_0.CdmaSmsSubaddress: int subaddressType> = $i8;

        r24 = r22.<android.hardware.radio.V1_0.CdmaSmsMessage: android.hardware.radio.V1_0.CdmaSmsSubaddress subAddress>;

     label10:
        z5 = 0;

     label11:
        $i9 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $b10 = (byte) $i9;

        if $b10 != 1 goto label13;

     label12:
        z5 = 1;

     label13:
        r24.<android.hardware.radio.V1_0.CdmaSmsSubaddress: boolean odd> = z5;

        $i11 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        b18 = (byte) $i11;

     label14:
        i19 = 0;

     label15:
        if i19 >= b18 goto label18;

     label16:
        $r11 = r22.<android.hardware.radio.V1_0.CdmaSmsMessage: android.hardware.radio.V1_0.CdmaSmsSubaddress subAddress>;

        $r12 = $r11.<android.hardware.radio.V1_0.CdmaSmsSubaddress: java.util.ArrayList digits>;

        $b13 = virtualinvoke $r2.<java.io.DataInputStream: byte readByte()>();

        $r13 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b13);

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label17:
        i19 = i19 + 1;

        goto label15;

     label18:
        i20 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

     label19:
        i21 = 0;

     label20:
        if i21 >= i20 goto label23;

     label21:
        $r9 = r22.<android.hardware.radio.V1_0.CdmaSmsMessage: java.util.ArrayList bearerData>;

        $b12 = virtualinvoke $r2.<java.io.DataInputStream: byte readByte()>();

        $r10 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b12);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label22:
        i21 = i21 + 1;

        goto label20;

     label23:
        goto label25;

     label24:
        $r17 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendSmsCdma: conversion from input stream to object failed: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r21);

     label25:
        return;

        catch java.io.IOException from label01 to label02 with label24;
        catch java.io.IOException from label04 to label05 with label24;
        catch java.io.IOException from label07 to label08 with label24;
        catch java.io.IOException from label09 to label10 with label24;
        catch java.io.IOException from label11 to label12 with label24;
        catch java.io.IOException from label13 to label14 with label24;
        catch java.io.IOException from label16 to label17 with label24;
        catch java.io.IOException from label18 to label19 with label24;
        catch java.io.IOException from label21 to label22 with label24;
    }

    private android.hardware.radio.V1_0.GsmSmsMessage constructGsmSendSmsRilRequest(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r5, r6;
        android.hardware.radio.V1_0.GsmSmsMessage $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r4 = new android.hardware.radio.V1_0.GsmSmsMessage;

        specialinvoke $r4.<android.hardware.radio.V1_0.GsmSmsMessage: void <init>()>();

        if r5 != null goto label1;

        r5 = "";

        goto label1;

     label1:
        $r4.<android.hardware.radio.V1_0.GsmSmsMessage: java.lang.String smscPdu> = r5;

        if r1 != null goto label2;

        r6 = "";

        goto label3;

     label2:
        r6 = r1;

     label3:
        $r4.<android.hardware.radio.V1_0.GsmSmsMessage: java.lang.String pdu> = r6;

        return $r4;
    }

    private static int convertAntToHalAnt(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 6;

     label3:
        return 5;

     label4:
        return 4;

     label5:
        return 3;

     label6:
        return 2;

     label7:
        return 1;
    }

    private static int convertAntToRan(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 3 goto label3;

        if i0 == 4 goto label2;

        if i0 == 6 goto label1;

        return 0;

     label1:
        return 4;

     label2:
        return 5;

     label3:
        return 3;

     label4:
        return 2;

     label5:
        return 1;
    }

    public static android.telephony.data.DataCallResponse convertDataCallResult(java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String $r2, $r38, $r40, $r42, $r59, $r61, $r62, $r63, $r64, $r65, $r66, $r68, $r69, $r70, $r71, $r74, $r78, $r81, r88, r92, r98, r104, r108;
        java.util.ArrayList $r3, $r9, $r13, $r17, $r43, $r47, $r51, $r55, r102, r112, r113, r115, r117;
        java.util.stream.Stream $r4, $r6, $r10, $r14, $r18, $r44, $r48, $r52, $r56;
        com.android.internal.telephony.'-$$Lambda$RIL$XE8Va8wMXDk-SvQdeyB1tf4amss' $r5;
        java.util.stream.Collector $r7;
        java.lang.Object $r8, r82, r86;
        com.android.internal.telephony.'-$$Lambda$RIL$nRnfcWVeBsK297nGcRmfk4egF-M' $r11;
        java.lang.Object[] $r12, $r16, $r20, $r46, $r50, $r54, $r58;
        com.android.internal.telephony.'-$$Lambda$RIL$ug0GfB-Lhlc24HB2LHxIR5JKFlE' $r15;
        com.android.internal.telephony.'-$$Lambda$RIL$Lnm-68Cot9n7_t0DUqb729qQHkQ' $r19;
        int $i0, $i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21;
        android.telephony.data.DataCallResponse$Builder $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, r119;
        android.telephony.data.DataCallResponse $r37;
        java.net.InetAddress $r39, $r41, r99;
        com.android.internal.telephony.'-$$Lambda$RIL$zYsQZAc3z9bM5fCaq_J0dn5kjjo' $r45;
        com.android.internal.telephony.'-$$Lambda$RIL$Ir4pOMTf7R0Jtw4O3F7JgMVtXO4' $r49;
        com.android.internal.telephony.'-$$Lambda$RIL$803u4JiCud_JSoDndvAhT13ZZqU' $r53;
        com.android.internal.telephony.'-$$Lambda$RIL$ZGWeCQ9boMO1_J1_yQ82l_jK-Nc' $r57;
        android.net.LinkAddress $r60, $r67;
        java.lang.Throwable $r72, $r75, $r76, $r79, r100;
        java.lang.String[] r83, r84, r85, r89, r90, r91, r94;
        android.hardware.radio.V1_0.SetupDataCallResult r87;
        android.hardware.radio.V1_4.SetupDataCallResult r93;
        android.hardware.radio.V1_5.SetupDataCallResult r95;
        java.lang.StringBuilder r114, r116, r118, r120;
        java.util.List r121, r126, r131;
        java.util.function.IntFunction r122, r123, r124, r125, r128, r129, r130;
        java.util.function.Function r127;

        r82 := @parameter0: java.lang.Object;

        if r82 != null goto label01;

        return null;

     label01:
        r83 = null;

        r84 = null;

        r85 = null;

        r112 = new java.util.ArrayList;

        specialinvoke r112.<java.util.ArrayList: void <init>()>();

        r86 = r112;

        $z0 = r82 instanceof android.hardware.radio.V1_0.SetupDataCallResult;

        if $z0 == 0 goto label08;

        r87 = (android.hardware.radio.V1_0.SetupDataCallResult) r82;

        i2 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: int status>;

        i3 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: int suggestedRetryTime>;

        i4 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: int cid>;

        i5 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: int active>;

        $r61 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: java.lang.String type>;

        i6 = staticinvoke <android.telephony.data.ApnSetting: int getProtocolIntFromString(java.lang.String)>($r61);

        r88 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: java.lang.String ifname>;

        $r62 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: java.lang.String addresses>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r62);

        if $z3 != 0 goto label02;

        $r71 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: java.lang.String addresses>;

        r83 = virtualinvoke $r71.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

     label02:
        r89 = null;

        $r63 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: java.lang.String dnses>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r63);

        if $z4 != 0 goto label03;

        $r70 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: java.lang.String dnses>;

        r89 = virtualinvoke $r70.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

     label03:
        $r64 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: java.lang.String gateways>;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r64);

        if $z5 != 0 goto label04;

        $r69 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: java.lang.String gateways>;

        r84 = virtualinvoke $r69.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

     label04:
        $r65 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: java.lang.String pcscf>;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r65);

        if $z6 != 0 goto label05;

        $r68 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: java.lang.String pcscf>;

        r85 = virtualinvoke $r68.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

     label05:
        i7 = r87.<android.hardware.radio.V1_0.SetupDataCallResult: int mtu>;

        i8 = i7;

        if r83 == null goto label07;

        i9 = lengthof r83;

        i10 = 0;

     label06:
        if i10 >= i9 goto label07;

        $r66 = r83[i10];

        $r67 = staticinvoke <com.android.internal.telephony.RIL: android.net.LinkAddress createLinkAddressFromString(java.lang.String)>($r66);

        r121 = (java.util.List) r112;

        interfaceinvoke r121.<java.util.List: boolean add(java.lang.Object)>($r67);

        i10 = i10 + 1;

        goto label06;

     label07:
        i11 = i7;

        r90 = r89;

        r91 = r85;

        i12 = i2;

        r92 = r88;

        goto label12;

     label08:
        $z1 = r82 instanceof android.hardware.radio.V1_4.SetupDataCallResult;

        if $z1 == 0 goto label11;

        r93 = (android.hardware.radio.V1_4.SetupDataCallResult) r82;

        i13 = r93.<android.hardware.radio.V1_4.SetupDataCallResult: int cause>;

        i3 = r93.<android.hardware.radio.V1_4.SetupDataCallResult: int suggestedRetryTime>;

        i4 = r93.<android.hardware.radio.V1_4.SetupDataCallResult: int cid>;

        i5 = r93.<android.hardware.radio.V1_4.SetupDataCallResult: int active>;

        i6 = r93.<android.hardware.radio.V1_4.SetupDataCallResult: int type>;

        r92 = r93.<android.hardware.radio.V1_4.SetupDataCallResult: java.lang.String ifname>;

        $r43 = r93.<android.hardware.radio.V1_4.SetupDataCallResult: java.util.ArrayList addresses>;

        $r44 = virtualinvoke $r43.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r45 = <com.android.internal.telephony._$$Lambda$RIL$zYsQZAc3z9bM5fCaq_J0dn5kjjo: com.android.internal.telephony.'-$$Lambda$RIL$zYsQZAc3z9bM5fCaq_J0dn5kjjo' INSTANCE>;

        r122 = (java.util.function.IntFunction) $r45;

        $r46 = interfaceinvoke $r44.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(r122);

        r94 = (java.lang.String[]) $r46;

        $r47 = r93.<android.hardware.radio.V1_4.SetupDataCallResult: java.util.ArrayList dnses>;

        $r48 = virtualinvoke $r47.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r49 = <com.android.internal.telephony._$$Lambda$RIL$Ir4pOMTf7R0Jtw4O3F7JgMVtXO4: com.android.internal.telephony.'-$$Lambda$RIL$Ir4pOMTf7R0Jtw4O3F7JgMVtXO4' INSTANCE>;

        r123 = (java.util.function.IntFunction) $r49;

        $r50 = interfaceinvoke $r48.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(r123);

        r90 = (java.lang.String[]) $r50;

        $r51 = r93.<android.hardware.radio.V1_4.SetupDataCallResult: java.util.ArrayList gateways>;

        $r52 = virtualinvoke $r51.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r53 = <com.android.internal.telephony._$$Lambda$RIL$803u4JiCud_JSoDndvAhT13ZZqU: com.android.internal.telephony.'-$$Lambda$RIL$803u4JiCud_JSoDndvAhT13ZZqU' INSTANCE>;

        r124 = (java.util.function.IntFunction) $r53;

        $r54 = interfaceinvoke $r52.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(r124);

        r84 = (java.lang.String[]) $r54;

        $r55 = r93.<android.hardware.radio.V1_4.SetupDataCallResult: java.util.ArrayList pcscf>;

        $r56 = virtualinvoke $r55.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r57 = <com.android.internal.telephony._$$Lambda$RIL$ZGWeCQ9boMO1_J1_yQ82l_jK_Nc: com.android.internal.telephony.'-$$Lambda$RIL$ZGWeCQ9boMO1_J1_yQ82l_jK-Nc' INSTANCE>;

        r125 = (java.util.function.IntFunction) $r57;

        $r58 = interfaceinvoke $r56.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(r125);

        r91 = (java.lang.String[]) $r58;

        i7 = r93.<android.hardware.radio.V1_4.SetupDataCallResult: int mtu>;

        i8 = i7;

        if r94 == null goto label10;

        i14 = lengthof r94;

        i15 = 0;

     label09:
        if i15 >= i14 goto label10;

        $r59 = r94[i15];

        $r60 = staticinvoke <com.android.internal.telephony.RIL: android.net.LinkAddress createLinkAddressFromString(java.lang.String)>($r59);

        r126 = (java.util.List) r112;

        interfaceinvoke r126.<java.util.List: boolean add(java.lang.Object)>($r60);

        i15 = i15 + 1;

        goto label09;

     label10:
        i11 = i7;

        i12 = i13;

        goto label12;

     label11:
        $z2 = r82 instanceof android.hardware.radio.V1_5.SetupDataCallResult;

        if $z2 == 0 goto label38;

        r95 = (android.hardware.radio.V1_5.SetupDataCallResult) r82;

        i12 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: int cause>;

        i3 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: int suggestedRetryTime>;

        i4 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: int cid>;

        i5 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: int active>;

        i6 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: int type>;

        r92 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: java.lang.String ifname>;

        $r3 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: java.util.ArrayList addresses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r5 = <com.android.internal.telephony._$$Lambda$RIL$XE8Va8wMXDk_SvQdeyB1tf4amss: com.android.internal.telephony.'-$$Lambda$RIL$XE8Va8wMXDk-SvQdeyB1tf4amss' INSTANCE>;

        r127 = (java.util.function.Function) $r5;

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r127);

        $r7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r7);

        r86 = (java.util.List) $r8;

        $r9 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: java.util.ArrayList dnses>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r11 = <com.android.internal.telephony._$$Lambda$RIL$nRnfcWVeBsK297nGcRmfk4egF_M: com.android.internal.telephony.'-$$Lambda$RIL$nRnfcWVeBsK297nGcRmfk4egF-M' INSTANCE>;

        r128 = (java.util.function.IntFunction) $r11;

        $r12 = interfaceinvoke $r10.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(r128);

        r90 = (java.lang.String[]) $r12;

        $r13 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: java.util.ArrayList gateways>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r15 = <com.android.internal.telephony._$$Lambda$RIL$ug0GfB_Lhlc24HB2LHxIR5JKFlE: com.android.internal.telephony.'-$$Lambda$RIL$ug0GfB-Lhlc24HB2LHxIR5JKFlE' INSTANCE>;

        r129 = (java.util.function.IntFunction) $r15;

        $r16 = interfaceinvoke $r14.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(r129);

        r84 = (java.lang.String[]) $r16;

        $r17 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: java.util.ArrayList pcscf>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r19 = <com.android.internal.telephony._$$Lambda$RIL$Lnm_68Cot9n7_t0DUqb729qQHkQ: com.android.internal.telephony.'-$$Lambda$RIL$Lnm-68Cot9n7_t0DUqb729qQHkQ' INSTANCE>;

        r130 = (java.util.function.IntFunction) $r19;

        $r20 = interfaceinvoke $r18.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(r130);

        r91 = (java.lang.String[]) $r20;

        $i1 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: int mtuV4>;

        $i0 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: int mtuV6>;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);

        i11 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: int mtuV4>;

        i8 = r95.<android.hardware.radio.V1_5.SetupDataCallResult: int mtuV6>;

     label12:
        r113 = new java.util.ArrayList;

        specialinvoke r113.<java.util.ArrayList: void <init>()>();

        if r90 == null goto label22;

        i16 = lengthof r90;

        i17 = 0;

     label13:
        if i17 >= i16 goto label21;

        $r42 = r90[i17];

        r98 = virtualinvoke $r42.<java.lang.String: java.lang.String trim()>();

     label14:
        r99 = staticinvoke <android.net.InetAddresses: java.net.InetAddress parseNumericAddress(java.lang.String)>(r98);

     label15:
        interfaceinvoke r113.<java.util.List: boolean add(java.lang.Object)>(r99);

     label16:
        goto label20;

     label17:
        $r75 := @caughtexception;

        r100 = $r75;

        goto label19;

     label18:
        $r72 := @caughtexception;

        r100 = $r72;

     label19:
        r114 = new java.lang.StringBuilder;

        specialinvoke r114.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown dns: ");

        virtualinvoke r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r98);

        $r74 = virtualinvoke r114.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RILJ", $r74, r100);

     label20:
        i17 = i17 + 1;

        goto label13;

     label21:
        r102 = r113;

        goto label23;

     label22:
        r102 = r113;

     label23:
        r115 = new java.util.ArrayList;

        specialinvoke r115.<java.util.ArrayList: void <init>()>();

        if r84 == null goto label30;

        i18 = lengthof r84;

        i19 = 0;

     label24:
        if i19 >= i18 goto label29;

        $r40 = r84[i19];

        r104 = virtualinvoke $r40.<java.lang.String: java.lang.String trim()>();

     label25:
        $r41 = staticinvoke <android.net.InetAddresses: java.net.InetAddress parseNumericAddress(java.lang.String)>(r104);

        interfaceinvoke r115.<java.util.List: boolean add(java.lang.Object)>($r41);

     label26:
        goto label28;

     label27:
        $r79 := @caughtexception;

        r116 = new java.lang.StringBuilder;

        specialinvoke r116.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown gateway: ");

        virtualinvoke r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r104);

        $r81 = virtualinvoke r116.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RILJ", $r81, $r79);

     label28:
        i19 = i19 + 1;

        goto label24;

     label29:
        goto label30;

     label30:
        r117 = new java.util.ArrayList;

        specialinvoke r117.<java.util.ArrayList: void <init>()>();

        if r91 == null goto label37;

        i20 = lengthof r91;

        i21 = 0;

     label31:
        if i21 >= i20 goto label36;

        $r38 = r91[i21];

        r108 = virtualinvoke $r38.<java.lang.String: java.lang.String trim()>();

     label32:
        $r39 = staticinvoke <android.net.InetAddresses: java.net.InetAddress parseNumericAddress(java.lang.String)>(r108);

        interfaceinvoke r117.<java.util.List: boolean add(java.lang.Object)>($r39);

     label33:
        goto label35;

     label34:
        $r76 := @caughtexception;

        r118 = new java.lang.StringBuilder;

        specialinvoke r118.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown pcscf: ");

        virtualinvoke r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r108);

        $r78 = virtualinvoke r118.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RILJ", $r78, $r76);

     label35:
        i21 = i21 + 1;

        goto label31;

     label36:
        goto label37;

     label37:
        r119 = new android.telephony.data.DataCallResponse$Builder;

        specialinvoke r119.<android.telephony.data.DataCallResponse$Builder: void <init>()>();

        $r24 = virtualinvoke r119.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setCause(int)>(i12);

        $r25 = virtualinvoke $r24.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setSuggestedRetryTime(int)>(i3);

        $r26 = virtualinvoke $r25.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setId(int)>(i4);

        $r27 = virtualinvoke $r26.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setLinkStatus(int)>(i5);

        $r28 = virtualinvoke $r27.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setProtocolType(int)>(i6);

        $r29 = virtualinvoke $r28.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setInterfaceName(java.lang.String)>(r92);

        r131 = (java.util.List) r86;

        $r30 = virtualinvoke $r29.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setAddresses(java.util.List)>(r131);

        $r31 = virtualinvoke $r30.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setDnsAddresses(java.util.List)>(r102);

        $r32 = virtualinvoke $r31.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setGatewayAddresses(java.util.List)>(r115);

        $r33 = virtualinvoke $r32.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setPcscfAddresses(java.util.List)>(r117);

        $r34 = virtualinvoke $r33.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setMtu(int)>(i7);

        $r35 = virtualinvoke $r34.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setMtuV4(int)>(i11);

        $r36 = virtualinvoke $r35.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse$Builder setMtuV6(int)>(i8);

        $r37 = virtualinvoke $r36.<android.telephony.data.DataCallResponse$Builder: android.telephony.data.DataCallResponse build()>();

        return $r37;

     label38:
        r120 = new java.lang.StringBuilder;

        specialinvoke r120.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported SetupDataCallResult ");

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r82);

        $r2 = virtualinvoke r120.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", $r2);

        return null;

        catch java.lang.IllegalArgumentException from label14 to label15 with label18;
        catch java.lang.IllegalArgumentException from label15 to label16 with label17;
        catch java.lang.IllegalArgumentException from label25 to label26 with label27;
        catch java.lang.IllegalArgumentException from label32 to label33 with label34;
    }

    public static java.util.ArrayList convertDataCallResultList(java.util.List)
    {
        java.util.ArrayList $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        android.telephony.data.DataCallResponse $r3;
        java.util.List r4;
        java.util.Iterator r5;

        r4 := @parameter0: java.util.List;

        $r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = staticinvoke <com.android.internal.telephony.RIL: android.telephony.data.DataCallResponse convertDataCallResult(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return $r1;
    }

    public static java.util.ArrayList convertHalCellInfoList(java.util.ArrayList)
    {
        long l0;
        android.hardware.radio.V1_0.CellInfo r1;
        java.util.ArrayList $r2, r5;
        int $i1;
        boolean $z0;
        java.lang.Object $r3;
        android.telephony.CellInfo $r4;
        java.util.Iterator r6;

        r5 := @parameter0: java.util.ArrayList;

        $r2 = new java.util.ArrayList;

        $i1 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i1);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        r6 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.hardware.radio.V1_0.CellInfo) $r3;

        r1.<android.hardware.radio.V1_0.CellInfo: long timeStamp> = l0;

        $r4 = staticinvoke <android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_0.CellInfo)>(r1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r2;
    }

    public static java.util.ArrayList convertHalCellInfoList_1_2(java.util.ArrayList)
    {
        long l0;
        java.util.Iterator r1;
        java.util.ArrayList $r2, r5;
        int $i1;
        boolean $z0;
        java.lang.Object $r3;
        android.telephony.CellInfo $r4;
        android.hardware.radio.V1_2.CellInfo r6;

        r5 := @parameter0: java.util.ArrayList;

        $r2 = new java.util.ArrayList;

        $i1 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i1);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        r1 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.hardware.radio.V1_2.CellInfo) $r3;

        r6.<android.hardware.radio.V1_2.CellInfo: long timeStamp> = l0;

        $r4 = staticinvoke <android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_2.CellInfo)>(r6);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r2;
    }

    public static java.util.ArrayList convertHalCellInfoList_1_4(java.util.ArrayList)
    {
        long l0;
        java.util.ArrayList $r1, r5;
        int $i1;
        boolean $z0;
        java.lang.Object $r2;
        android.hardware.radio.V1_4.CellInfo $r3;
        android.telephony.CellInfo $r4;
        java.util.Iterator r6;

        r5 := @parameter0: java.util.ArrayList;

        $r1 = new java.util.ArrayList;

        $i1 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i1);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        r6 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.hardware.radio.V1_4.CellInfo) $r2;

        $r4 = staticinvoke <android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_4.CellInfo,long)>($r3, l0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r1;
    }

    public static java.util.ArrayList convertHalCellInfoList_1_5(java.util.ArrayList)
    {
        long l0;
        java.util.ArrayList $r1, r5;
        int $i1;
        boolean $z0;
        java.lang.Object $r2;
        android.hardware.radio.V1_5.CellInfo $r3;
        android.telephony.CellInfo $r4;
        java.util.Iterator r6;

        r5 := @parameter0: java.util.ArrayList;

        $r1 = new java.util.ArrayList;

        $i1 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i1);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        r6 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.hardware.radio.V1_5.CellInfo) $r2;

        $r4 = staticinvoke <android.telephony.CellInfo: android.telephony.CellInfo create(android.hardware.radio.V1_5.CellInfo,long)>($r3, l0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r1;
    }

    static java.util.ArrayList convertHalHwConfigList(java.util.ArrayList, com.android.internal.telephony.RIL)
    {
        java.util.Iterator r0;
        android.hardware.radio.V1_0.HardwareConfig r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.hardware.radio.V1_0.HardwareConfigModem r2;
        java.util.ArrayList $r3, $r6, $r15, r20;
        boolean $z0;
        java.lang.Object $r4, $r7, $r17;
        com.android.internal.telephony.HardwareConfig $r5, $r14, r23;
        java.lang.String $r8, $r13, $r16, $r19;
        java.lang.StringBuilder $r9;
        java.lang.RuntimeException $r12;
        android.hardware.radio.V1_0.HardwareConfigSim $r18;
        com.android.internal.telephony.RIL r21;

        r20 := @parameter0: java.util.ArrayList;

        r21 := @parameter1: com.android.internal.telephony.RIL;

        $r3 = new java.util.ArrayList;

        $i1 = virtualinvoke r20.<java.util.ArrayList: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i1);

        r0 = virtualinvoke r20.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.hardware.radio.V1_0.HardwareConfig) $r4;

        i0 = r1.<android.hardware.radio.V1_0.HardwareConfig: int type>;

        if i0 == 0 goto label3;

        if i0 != 1 goto label2;

        $r14 = new com.android.internal.telephony.HardwareConfig;

        specialinvoke $r14.<com.android.internal.telephony.HardwareConfig: void <init>(int)>(i0);

        r23 = $r14;

        $r16 = r1.<android.hardware.radio.V1_0.HardwareConfig: java.lang.String uuid>;

        $i8 = r1.<android.hardware.radio.V1_0.HardwareConfig: int state>;

        $r15 = r1.<android.hardware.radio.V1_0.HardwareConfig: java.util.ArrayList sim>;

        $r17 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r18 = (android.hardware.radio.V1_0.HardwareConfigSim) $r17;

        $r19 = $r18.<android.hardware.radio.V1_0.HardwareConfigSim: java.lang.String modemUuid>;

        virtualinvoke $r14.<com.android.internal.telephony.HardwareConfig: void assignSim(java.lang.String,int,java.lang.String)>($r16, $i8, $r19);

        goto label4;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL_REQUEST_GET_HARDWARE_CONFIG invalid hardward type:");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = new java.lang.RuntimeException;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label3:
        $r5 = new com.android.internal.telephony.HardwareConfig;

        specialinvoke $r5.<com.android.internal.telephony.HardwareConfig: void <init>(int)>(i0);

        r23 = $r5;

        $r6 = r1.<android.hardware.radio.V1_0.HardwareConfig: java.util.ArrayList modem>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r2 = (android.hardware.radio.V1_0.HardwareConfigModem) $r7;

        $r8 = r1.<android.hardware.radio.V1_0.HardwareConfig: java.lang.String uuid>;

        $i7 = r1.<android.hardware.radio.V1_0.HardwareConfig: int state>;

        $i6 = r2.<android.hardware.radio.V1_0.HardwareConfigModem: int rilModel>;

        $i5 = r2.<android.hardware.radio.V1_0.HardwareConfigModem: int rat>;

        $i4 = r2.<android.hardware.radio.V1_0.HardwareConfigModem: int maxVoice>;

        $i3 = r2.<android.hardware.radio.V1_0.HardwareConfigModem: int maxData>;

        $i2 = r2.<android.hardware.radio.V1_0.HardwareConfigModem: int maxStandby>;

        virtualinvoke $r5.<com.android.internal.telephony.HardwareConfig: void assignModem(java.lang.String,int,int,int,int,int,int)>($r8, $i7, $i6, $i5, $i4, $i3, $i2);

     label4:
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r23);

        goto label1;

     label5:
        return $r3;
    }

    static com.android.internal.telephony.LinkCapacityEstimate convertHalLceData(android.hardware.radio.V1_0.LceDataInfo, com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1;
        byte $b2, b3;
        boolean $z0;
        com.android.internal.telephony.LinkCapacityEstimate $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.hardware.radio.V1_0.LceDataInfo r7;

        r7 := @parameter0: android.hardware.radio.V1_0.LceDataInfo;

        r0 := @parameter1: com.android.internal.telephony.RIL;

        i0 = r7.<android.hardware.radio.V1_0.LceDataInfo: int lastHopCapacityKbps>;

        $b2 = r7.<android.hardware.radio.V1_0.LceDataInfo: byte confidenceLevel>;

        i1 = staticinvoke <java.lang.Byte: int toUnsignedInt(byte)>($b2);

        $z0 = r7.<android.hardware.radio.V1_0.LceDataInfo: boolean lceSuspended>;

        if $z0 == 0 goto label1;

        b3 = 1;

        goto label2;

     label1:
        b3 = 0;

     label2:
        $r2 = new com.android.internal.telephony.LinkCapacityEstimate;

        specialinvoke $r2.<com.android.internal.telephony.LinkCapacityEstimate: void <init>(int,int,int)>(i0, i1, b3);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LCE capacity information received:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r6);

        return $r2;
    }

    static com.android.internal.telephony.LinkCapacityEstimate convertHalLceData(android.hardware.radio.V1_2.LinkCapacityEstimate, com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.LinkCapacityEstimate $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.hardware.radio.V1_2.LinkCapacityEstimate r7;

        r7 := @parameter0: android.hardware.radio.V1_2.LinkCapacityEstimate;

        r0 := @parameter1: com.android.internal.telephony.RIL;

        $r2 = new com.android.internal.telephony.LinkCapacityEstimate;

        $i1 = r7.<android.hardware.radio.V1_2.LinkCapacityEstimate: int downlinkCapacityKbps>;

        $i0 = r7.<android.hardware.radio.V1_2.LinkCapacityEstimate: int uplinkCapacityKbps>;

        specialinvoke $r2.<com.android.internal.telephony.LinkCapacityEstimate: void <init>(int,int)>($i1, $i0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LCE capacity information received:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r6);

        return $r2;
    }

    static com.android.internal.telephony.RadioCapability convertHalRadioCapability(android.hardware.radio.V1_0.RadioCapability, com.android.internal.telephony.RIL)
    {
        android.hardware.radio.V1_0.RadioCapability r0;
        com.android.internal.telephony.RIL r1;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        java.lang.String r2, $r17;
        java.lang.StringBuilder $r4;
        com.android.internal.telephony.RadioCapability $r18;
        java.lang.Integer $r19;

        r0 := @parameter0: android.hardware.radio.V1_0.RadioCapability;

        r1 := @parameter1: com.android.internal.telephony.RIL;

        i0 = r0.<android.hardware.radio.V1_0.RadioCapability: int session>;

        i1 = r0.<android.hardware.radio.V1_0.RadioCapability: int phase>;

        $i4 = r0.<android.hardware.radio.V1_0.RadioCapability: int raf>;

        i2 = staticinvoke <com.android.internal.telephony.RIL: int convertToNetworkTypeBitMask(int)>($i4);

        r2 = r0.<android.hardware.radio.V1_0.RadioCapability: java.lang.String logicalModemUuid>;

        i3 = r0.<android.hardware.radio.V1_0.RadioCapability: int status>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("convertHalRadioCapability: session=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", phase=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rat=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", logicModemUuid=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", status=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rcRil.raf=");

        $i5 = r0.<android.hardware.radio.V1_0.RadioCapability: int raf>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r17 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r17);

        $r18 = new com.android.internal.telephony.RadioCapability;

        $r19 = r1.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i6 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        specialinvoke $r18.<com.android.internal.telephony.RadioCapability: void <init>(int,int,int,int,java.lang.String,int)>($i6, i0, i1, i2, r2, i3);

        return $r18;
    }

    private static java.lang.String convertNullToEmptyString(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        goto label2;

     label1:
        r0 = "";

     label2:
        return r0;
    }

    private static int convertPersoTypeToHalPersoType(com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState)
    {
        com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @parameter0: com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState;

        $r1 = <com.android.internal.telephony.RIL$1: int[] $SwitchMap$com$android$internal$telephony$uicc$IccCardApplicationStatus$PersoSubState>;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label35;
            case 2: goto label34;
            case 3: goto label33;
            case 4: goto label32;
            case 5: goto label31;
            case 6: goto label30;
            case 7: goto label29;
            case 8: goto label28;
            case 9: goto label27;
            case 10: goto label26;
            case 11: goto label25;
            case 12: goto label24;
            case 13: goto label23;
            case 14: goto label22;
            case 15: goto label21;
            case 16: goto label20;
            case 17: goto label19;
            case 18: goto label18;
            case 19: goto label17;
            case 20: goto label16;
            case 21: goto label15;
            case 22: goto label14;
            case 23: goto label13;
            case 24: goto label12;
            case 25: goto label11;
            case 26: goto label10;
            case 27: goto label09;
            case 28: goto label08;
            case 29: goto label07;
            case 30: goto label06;
            case 31: goto label05;
            case 32: goto label04;
            case 33: goto label03;
            case 34: goto label02;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        return 34;

     label03:
        return 33;

     label04:
        return 32;

     label05:
        return 31;

     label06:
        return 30;

     label07:
        return 29;

     label08:
        return 28;

     label09:
        return 27;

     label10:
        return 26;

     label11:
        return 25;

     label12:
        return 24;

     label13:
        return 23;

     label14:
        return 22;

     label15:
        return 21;

     label16:
        return 20;

     label17:
        return 19;

     label18:
        return 18;

     label19:
        return 17;

     label20:
        return 16;

     label21:
        return 15;

     label22:
        return 14;

     label23:
        return 13;

     label24:
        return 12;

     label25:
        return 11;

     label26:
        return 10;

     label27:
        return 9;

     label28:
        return 8;

     label29:
        return 7;

     label30:
        return 6;

     label31:
        return 5;

     label32:
        return 4;

     label33:
        return 3;

     label34:
        return 2;

     label35:
        return 1;
    }

    private android.hardware.radio.V1_1.RadioAccessSpecifier convertRadioAccessSpecifierToRadioHAL(android.telephony.RadioAccessSpecifier)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_1.RadioAccessSpecifier $r2;
        int $i0, $i1, $i3, i5, i6, i7, i8, i9, i10;
        java.util.ArrayList $r3, $r4;
        java.lang.Integer $r5, $r11;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;
        android.telephony.RadioAccessSpecifier r12;
        int[] r14, r15, $r17, r18;

        r0 := @this: com.android.internal.telephony.RIL;

        r12 := @parameter0: android.telephony.RadioAccessSpecifier;

        $r2 = new android.hardware.radio.V1_1.RadioAccessSpecifier;

        specialinvoke $r2.<android.hardware.radio.V1_1.RadioAccessSpecifier: void <init>()>();

        $i0 = virtualinvoke r12.<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()>();

        $r2.<android.hardware.radio.V1_1.RadioAccessSpecifier: int radioAccessNetwork> = $i0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r14 = virtualinvoke r12.<android.telephony.RadioAccessSpecifier: int[] getBands()>();

        if r14 == null goto label2;

        r15 = virtualinvoke r12.<android.telephony.RadioAccessSpecifier: int[] getBands()>();

        i5 = lengthof r15;

        i6 = 0;

     label1:
        if i6 >= i5 goto label2;

        $i3 = r15[i6];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        i6 = i6 + 1;

        goto label1;

     label2:
        i7 = virtualinvoke r12.<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()>();

        if i7 == 1 goto label5;

        if i7 == 2 goto label4;

        if i7 == 3 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("radioAccessNetwork ");

        $i1 = virtualinvoke r12.<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported on IRadio < 1.5!");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("RILJ", $r10);

        return null;

     label3:
        $r2.<android.hardware.radio.V1_1.RadioAccessSpecifier: java.util.ArrayList eutranBands> = $r3;

        goto label6;

     label4:
        $r2.<android.hardware.radio.V1_1.RadioAccessSpecifier: java.util.ArrayList utranBands> = $r3;

        goto label6;

     label5:
        $r2.<android.hardware.radio.V1_1.RadioAccessSpecifier: java.util.ArrayList geranBands> = $r3;

     label6:
        $r17 = virtualinvoke r12.<android.telephony.RadioAccessSpecifier: int[] getChannels()>();

        if $r17 == null goto label8;

        r18 = virtualinvoke r12.<android.telephony.RadioAccessSpecifier: int[] getChannels()>();

        i8 = lengthof r18;

        i9 = 0;

     label7:
        if i9 >= i8 goto label8;

        i10 = r18[i9];

        $r4 = $r2.<android.hardware.radio.V1_1.RadioAccessSpecifier: java.util.ArrayList channels>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        i9 = i9 + 1;

        goto label7;

     label8:
        return $r2;
    }

    private android.hardware.radio.V1_5.RadioAccessSpecifier convertRadioAccessSpecifierToRadioHAL_1_5(android.telephony.RadioAccessSpecifier)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_5.RadioAccessSpecifier $r3;
        android.hardware.radio.V1_5.RadioAccessSpecifier$Bands $r4;
        int $i0, $i1, $i2, $i4, i6, i7, i8, i9, i10, i11;
        java.util.ArrayList $r5, $r6;
        java.lang.Integer $r7, $r13;
        java.lang.StringBuilder $r8;
        java.lang.String $r12;
        android.telephony.RadioAccessSpecifier r14;
        int[] r16, r17, $r19, r20;

        r0 := @this: com.android.internal.telephony.RIL;

        r14 := @parameter0: android.telephony.RadioAccessSpecifier;

        $r3 = new android.hardware.radio.V1_5.RadioAccessSpecifier;

        specialinvoke $r3.<android.hardware.radio.V1_5.RadioAccessSpecifier: void <init>()>();

        $r4 = new android.hardware.radio.V1_5.RadioAccessSpecifier$Bands;

        specialinvoke $r4.<android.hardware.radio.V1_5.RadioAccessSpecifier$Bands: void <init>()>();

        $i0 = virtualinvoke r14.<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()>();

        $i1 = staticinvoke <com.android.internal.telephony.RIL: int convertAntToRan(int)>($i0);

        $r3.<android.hardware.radio.V1_5.RadioAccessSpecifier: int radioAccessNetwork> = $i1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r16 = virtualinvoke r14.<android.telephony.RadioAccessSpecifier: int[] getBands()>();

        if r16 == null goto label2;

        r17 = virtualinvoke r14.<android.telephony.RadioAccessSpecifier: int[] getBands()>();

        i6 = lengthof r17;

        i7 = 0;

     label1:
        if i7 >= i6 goto label2;

        $i4 = r17[i7];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        i7 = i7 + 1;

        goto label1;

     label2:
        i8 = virtualinvoke r14.<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()>();

        if i8 == 1 goto label6;

        if i8 == 2 goto label5;

        if i8 == 3 goto label4;

        if i8 == 6 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("radioAccessNetwork ");

        $i2 = virtualinvoke r14.<android.telephony.RadioAccessSpecifier: int getRadioAccessNetwork()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported on IRadio 1.5!");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("RILJ", $r12);

        return null;

     label3:
        virtualinvoke $r4.<android.hardware.radio.V1_5.RadioAccessSpecifier$Bands: void ngranBands(java.util.ArrayList)>($r5);

        goto label7;

     label4:
        virtualinvoke $r4.<android.hardware.radio.V1_5.RadioAccessSpecifier$Bands: void eutranBands(java.util.ArrayList)>($r5);

        goto label7;

     label5:
        virtualinvoke $r4.<android.hardware.radio.V1_5.RadioAccessSpecifier$Bands: void utranBands(java.util.ArrayList)>($r5);

        goto label7;

     label6:
        virtualinvoke $r4.<android.hardware.radio.V1_5.RadioAccessSpecifier$Bands: void geranBands(java.util.ArrayList)>($r5);

     label7:
        $r3.<android.hardware.radio.V1_5.RadioAccessSpecifier: android.hardware.radio.V1_5.RadioAccessSpecifier$Bands bands> = $r4;

        $r19 = virtualinvoke r14.<android.telephony.RadioAccessSpecifier: int[] getChannels()>();

        if $r19 == null goto label9;

        r20 = virtualinvoke r14.<android.telephony.RadioAccessSpecifier: int[] getChannels()>();

        i9 = lengthof r20;

        i10 = 0;

     label8:
        if i10 >= i9 goto label9;

        i11 = r20[i10];

        $r6 = $r3.<android.hardware.radio.V1_5.RadioAccessSpecifier: java.util.ArrayList channels>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        i10 = i10 + 1;

        goto label8;

     label9:
        return $r3;
    }

    private static android.hardware.radio.V1_0.DataProfileInfo convertToHalDataProfile10(android.telephony.data.DataProfile)
    {
        android.telephony.data.DataProfile r0;
        android.hardware.radio.V1_0.DataProfileInfo $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @parameter0: android.telephony.data.DataProfile;

        $r2 = new android.hardware.radio.V1_0.DataProfileInfo;

        specialinvoke $r2.<android.hardware.radio.V1_0.DataProfileInfo: void <init>()>();

        $i0 = virtualinvoke r0.<android.telephony.data.DataProfile: int getProfileId()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: int profileId> = $i0;

        $r3 = virtualinvoke r0.<android.telephony.data.DataProfile: java.lang.String getApn()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: java.lang.String apn> = $r3;

        $i1 = virtualinvoke r0.<android.telephony.data.DataProfile: int getProtocolType()>();

        $r4 = staticinvoke <android.telephony.data.ApnSetting: java.lang.String getProtocolStringFromInt(int)>($i1);

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: java.lang.String protocol> = $r4;

        $i2 = virtualinvoke r0.<android.telephony.data.DataProfile: int getRoamingProtocolType()>();

        $r5 = staticinvoke <android.telephony.data.ApnSetting: java.lang.String getProtocolStringFromInt(int)>($i2);

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: java.lang.String roamingProtocol> = $r5;

        $i3 = virtualinvoke r0.<android.telephony.data.DataProfile: int getAuthType()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: int authType> = $i3;

        $r6 = virtualinvoke r0.<android.telephony.data.DataProfile: java.lang.String getUserName()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: java.lang.String user> = $r6;

        $r7 = virtualinvoke r0.<android.telephony.data.DataProfile: java.lang.String getPassword()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: java.lang.String password> = $r7;

        $i4 = virtualinvoke r0.<android.telephony.data.DataProfile: int getType()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: int type> = $i4;

        $i5 = virtualinvoke r0.<android.telephony.data.DataProfile: int getMaxConnectionsTime()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: int maxConnsTime> = $i5;

        $i6 = virtualinvoke r0.<android.telephony.data.DataProfile: int getMaxConnections()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: int maxConns> = $i6;

        $i7 = virtualinvoke r0.<android.telephony.data.DataProfile: int getWaitTime()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: int waitTime> = $i7;

        $z0 = virtualinvoke r0.<android.telephony.data.DataProfile: boolean isEnabled()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: boolean enabled> = $z0;

        $i8 = virtualinvoke r0.<android.telephony.data.DataProfile: int getSupportedApnTypesBitmask()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: int supportedApnTypesBitmap> = $i8;

        $i9 = virtualinvoke r0.<android.telephony.data.DataProfile: int getBearerBitmask()>();

        $i10 = staticinvoke <android.telephony.ServiceState: int convertNetworkTypeBitmaskToBearerBitmask(int)>($i9);

        $i11 = $i10 << 1;

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: int bearerBitmap> = $i11;

        $i12 = virtualinvoke r0.<android.telephony.data.DataProfile: int getMtuV4()>();

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: int mtu> = $i12;

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: int mvnoType> = 0;

        $r2.<android.hardware.radio.V1_0.DataProfileInfo: java.lang.String mvnoMatchData> = "";

        return $r2;
    }

    private static android.hardware.radio.V1_4.DataProfileInfo convertToHalDataProfile14(android.telephony.data.DataProfile)
    {
        android.telephony.data.DataProfile r0;
        android.hardware.radio.V1_4.DataProfileInfo $r2;
        java.lang.String $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: android.telephony.data.DataProfile;

        $r2 = new android.hardware.radio.V1_4.DataProfileInfo;

        specialinvoke $r2.<android.hardware.radio.V1_4.DataProfileInfo: void <init>()>();

        $r3 = virtualinvoke r0.<android.telephony.data.DataProfile: java.lang.String getApn()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: java.lang.String apn> = $r3;

        $i0 = virtualinvoke r0.<android.telephony.data.DataProfile: int getProtocolType()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: int protocol> = $i0;

        $i1 = virtualinvoke r0.<android.telephony.data.DataProfile: int getRoamingProtocolType()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: int roamingProtocol> = $i1;

        $i2 = virtualinvoke r0.<android.telephony.data.DataProfile: int getAuthType()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: int authType> = $i2;

        $r4 = virtualinvoke r0.<android.telephony.data.DataProfile: java.lang.String getUserName()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: java.lang.String user> = $r4;

        $r5 = virtualinvoke r0.<android.telephony.data.DataProfile: java.lang.String getPassword()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: java.lang.String password> = $r5;

        $i3 = virtualinvoke r0.<android.telephony.data.DataProfile: int getType()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: int type> = $i3;

        $i4 = virtualinvoke r0.<android.telephony.data.DataProfile: int getMaxConnectionsTime()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: int maxConnsTime> = $i4;

        $i5 = virtualinvoke r0.<android.telephony.data.DataProfile: int getMaxConnections()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: int maxConns> = $i5;

        $i6 = virtualinvoke r0.<android.telephony.data.DataProfile: int getWaitTime()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: int waitTime> = $i6;

        $z0 = virtualinvoke r0.<android.telephony.data.DataProfile: boolean isEnabled()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: boolean enabled> = $z0;

        $i7 = virtualinvoke r0.<android.telephony.data.DataProfile: int getSupportedApnTypesBitmask()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: int supportedApnTypesBitmap> = $i7;

        $i8 = virtualinvoke r0.<android.telephony.data.DataProfile: int getBearerBitmask()>();

        $i9 = staticinvoke <android.telephony.ServiceState: int convertNetworkTypeBitmaskToBearerBitmask(int)>($i8);

        $i10 = $i9 << 1;

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: int bearerBitmap> = $i10;

        $i11 = virtualinvoke r0.<android.telephony.data.DataProfile: int getMtuV4()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: int mtu> = $i11;

        $z1 = virtualinvoke r0.<android.telephony.data.DataProfile: boolean isPersistent()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: boolean persistent> = $z1;

        $z2 = virtualinvoke r0.<android.telephony.data.DataProfile: boolean isPreferred()>();

        $r2.<android.hardware.radio.V1_4.DataProfileInfo: boolean preferred> = $z2;

        $z3 = $r2.<android.hardware.radio.V1_4.DataProfileInfo: boolean persistent>;

        if $z3 == 0 goto label1;

        i12 = virtualinvoke r0.<android.telephony.data.DataProfile: int getProfileId()>();

        goto label2;

     label1:
        i12 = -1;

     label2:
        $r2.<android.hardware.radio.V1_4.DataProfileInfo: int profileId> = i12;

        return $r2;
    }

    private static android.hardware.radio.V1_5.DataProfileInfo convertToHalDataProfile15(android.telephony.data.DataProfile)
    {
        android.telephony.data.DataProfile r0;
        android.hardware.radio.V1_5.DataProfileInfo $r2;
        java.lang.String $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: android.telephony.data.DataProfile;

        $r2 = new android.hardware.radio.V1_5.DataProfileInfo;

        specialinvoke $r2.<android.hardware.radio.V1_5.DataProfileInfo: void <init>()>();

        $r3 = virtualinvoke r0.<android.telephony.data.DataProfile: java.lang.String getApn()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: java.lang.String apn> = $r3;

        $i0 = virtualinvoke r0.<android.telephony.data.DataProfile: int getProtocolType()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int protocol> = $i0;

        $i1 = virtualinvoke r0.<android.telephony.data.DataProfile: int getRoamingProtocolType()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int roamingProtocol> = $i1;

        $i2 = virtualinvoke r0.<android.telephony.data.DataProfile: int getAuthType()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int authType> = $i2;

        $r4 = virtualinvoke r0.<android.telephony.data.DataProfile: java.lang.String getUserName()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: java.lang.String user> = $r4;

        $r5 = virtualinvoke r0.<android.telephony.data.DataProfile: java.lang.String getPassword()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: java.lang.String password> = $r5;

        $i3 = virtualinvoke r0.<android.telephony.data.DataProfile: int getType()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int type> = $i3;

        $i4 = virtualinvoke r0.<android.telephony.data.DataProfile: int getMaxConnectionsTime()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int maxConnsTime> = $i4;

        $i5 = virtualinvoke r0.<android.telephony.data.DataProfile: int getMaxConnections()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int maxConns> = $i5;

        $i6 = virtualinvoke r0.<android.telephony.data.DataProfile: int getWaitTime()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int waitTime> = $i6;

        $z0 = virtualinvoke r0.<android.telephony.data.DataProfile: boolean isEnabled()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: boolean enabled> = $z0;

        $i7 = virtualinvoke r0.<android.telephony.data.DataProfile: int getSupportedApnTypesBitmask()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int supportedApnTypesBitmap> = $i7;

        $i8 = virtualinvoke r0.<android.telephony.data.DataProfile: int getBearerBitmask()>();

        $i9 = staticinvoke <android.telephony.ServiceState: int convertNetworkTypeBitmaskToBearerBitmask(int)>($i8);

        $i10 = $i9 << 1;

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int bearerBitmap> = $i10;

        $i11 = virtualinvoke r0.<android.telephony.data.DataProfile: int getMtuV4()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int mtuV4> = $i11;

        $i12 = virtualinvoke r0.<android.telephony.data.DataProfile: int getMtuV6()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int mtuV6> = $i12;

        $z1 = virtualinvoke r0.<android.telephony.data.DataProfile: boolean isPersistent()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: boolean persistent> = $z1;

        $z2 = virtualinvoke r0.<android.telephony.data.DataProfile: boolean isPreferred()>();

        $r2.<android.hardware.radio.V1_5.DataProfileInfo: boolean preferred> = $z2;

        $z3 = $r2.<android.hardware.radio.V1_5.DataProfileInfo: boolean persistent>;

        if $z3 == 0 goto label1;

        i13 = virtualinvoke r0.<android.telephony.data.DataProfile: int getProfileId()>();

        goto label2;

     label1:
        i13 = -1;

     label2:
        $r2.<android.hardware.radio.V1_5.DataProfileInfo: int profileId> = i13;

        return $r2;
    }

    private static int convertToHalMvnoType(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2;
        int i0;
        byte b1;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        if i0 == 102338 goto label4;

        if i0 == 114097 goto label3;

        if i0 == 3236474 goto label2;

     label1:
        goto label5;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("imsi");

        if $z2 == 0 goto label1;

        b1 = 0;

        goto label6;

     label3:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("spn");

        if $z1 == 0 goto label1;

        b1 = 2;

        goto label6;

     label4:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("gid");

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label6;

     label5:
        b1 = -1;

     label6:
        if b1 == 0 goto label9;

        if b1 == 1 goto label8;

        if b1 == 2 goto label7;

        return 0;

     label7:
        return 3;

     label8:
        return 2;

     label9:
        return 1;
    }

    private static int convertToHalRadioAccessFamily(int)
    {
        int i0, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72;
        long $l1, $l2, $l4, $l5, $l7, $l8, $l10, $l11, $l13, $l14, $l16, $l17, $l19, $l20, $l22, $l23, $l25, $l26, $l28, $l29, $l31, $l32, $l34, $l35, $l37, $l38, $l40, $l41, $l43, $l44, $l46, $l47, $l49, $l50, $l52, $l53;
        byte $b3, $b6, $b9, $b12, $b15, $b18, $b21, $b24, $b27, $b30, $b33, $b36, $b39, $b42, $b45, $b48, $b51, $b54;

        i0 := @parameter0: int;

        i55 = 0;

        $l1 = (long) i0;

        $l2 = $l1 & 32768L;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label01;

        i55 = 0 | 65536;

     label01:
        i56 = i55;

        $l4 = (long) i0;

        $l5 = $l4 & 1L;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label02;

        i56 = i55 | 2;

     label02:
        i57 = i56;

        $l7 = (long) i0;

        $l8 = $l7 & 2L;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label03;

        i57 = i56 | 4;

     label03:
        i58 = i57;

        $l10 = (long) i0;

        $l11 = $l10 & 8L;

        $b12 = $l11 cmp 0L;

        if $b12 == 0 goto label04;

        i58 = i57 | 16;

     label04:
        i59 = i58;

        $l13 = (long) i0;

        $l14 = $l13 & 64L;

        $b15 = $l14 cmp 0L;

        if $b15 == 0 goto label05;

        i59 = i58 | 64;

     label05:
        i60 = i59;

        $l16 = (long) i0;

        $l17 = $l16 & 16L;

        $b18 = $l17 cmp 0L;

        if $b18 == 0 goto label06;

        i60 = i59 | 128;

     label06:
        i61 = i60;

        $l19 = (long) i0;

        $l20 = $l19 & 32L;

        $b21 = $l20 cmp 0L;

        if $b21 == 0 goto label07;

        i61 = i60 | 256;

     label07:
        i62 = i61;

        $l22 = (long) i0;

        $l23 = $l22 & 2048L;

        $b24 = $l23 cmp 0L;

        if $b24 == 0 goto label08;

        i62 = i61 | 4096;

     label08:
        i63 = i62;

        $l25 = (long) i0;

        $l26 = $l25 & 8192L;

        $b27 = $l26 cmp 0L;

        if $b27 == 0 goto label09;

        i63 = i62 | 8192;

     label09:
        i64 = i63;

        $l28 = (long) i0;

        $l29 = $l28 & 256L;

        $b30 = $l29 cmp 0L;

        if $b30 == 0 goto label10;

        i64 = i63 | 1024;

     label10:
        i65 = i64;

        $l31 = (long) i0;

        $l32 = $l31 & 128L;

        $b33 = $l32 cmp 0L;

        if $b33 == 0 goto label11;

        i65 = i64 | 512;

     label11:
        i66 = i65;

        $l34 = (long) i0;

        $l35 = $l34 & 512L;

        $b36 = $l35 cmp 0L;

        if $b36 == 0 goto label12;

        i66 = i65 | 2048;

     label12:
        i67 = i66;

        $l37 = (long) i0;

        $l38 = $l37 & 16384L;

        $b39 = $l38 cmp 0L;

        if $b39 == 0 goto label13;

        i67 = i66 | 32768;

     label13:
        i68 = i67;

        $l40 = (long) i0;

        $l41 = $l40 & 4L;

        $b42 = $l41 cmp 0L;

        if $b42 == 0 goto label14;

        i68 = i67 | 8;

     label14:
        i69 = i68;

        $l43 = (long) i0;

        $l44 = $l43 & 65536L;

        $b45 = $l44 cmp 0L;

        if $b45 == 0 goto label15;

        i69 = i68 | 131072;

     label15:
        i70 = i69;

        $l46 = (long) i0;

        $l47 = $l46 & 4096L;

        $b48 = $l47 cmp 0L;

        if $b48 == 0 goto label16;

        i70 = i69 | 16384;

     label16:
        i71 = i70;

        $l49 = (long) i0;

        $l50 = $l49 & 262144L;

        $b51 = $l50 cmp 0L;

        if $b51 == 0 goto label17;

        i71 = i70 | 524288;

     label17:
        i72 = i71;

        $l52 = (long) i0;

        $l53 = $l52 & 524288L;

        $b54 = $l53 cmp 0L;

        if $b54 == 0 goto label18;

        i72 = i71 | 1048576;

     label18:
        if i72 != 0 goto label19;

        i72 = 1;

        goto label19;

     label19:
        return i72;
    }

    private static int convertToHalResetNvType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return -1;

     label1:
        return 2;

     label2:
        return 1;

     label3:
        return 0;
    }

    private static android.hardware.radio.V1_5.SignalThresholdInfo convertToHalSignalThresholdInfo(android.telephony.SignalThresholdInfo)
    {
        android.telephony.SignalThresholdInfo r0;
        android.hardware.radio.V1_5.SignalThresholdInfo $r2;
        int $i0, $i1, $i2;
        int[] $r3;
        java.util.ArrayList $r4;
        boolean $z0;

        r0 := @parameter0: android.telephony.SignalThresholdInfo;

        $r2 = new android.hardware.radio.V1_5.SignalThresholdInfo;

        specialinvoke $r2.<android.hardware.radio.V1_5.SignalThresholdInfo: void <init>()>();

        $i0 = virtualinvoke r0.<android.telephony.SignalThresholdInfo: int getSignalMeasurement()>();

        $r2.<android.hardware.radio.V1_5.SignalThresholdInfo: int signalMeasurement> = $i0;

        $i1 = virtualinvoke r0.<android.telephony.SignalThresholdInfo: int getHysteresisMs()>();

        $r2.<android.hardware.radio.V1_5.SignalThresholdInfo: int hysteresisMs> = $i1;

        $i2 = virtualinvoke r0.<android.telephony.SignalThresholdInfo: int getHysteresisDb()>();

        $r2.<android.hardware.radio.V1_5.SignalThresholdInfo: int hysteresisDb> = $i2;

        $r3 = virtualinvoke r0.<android.telephony.SignalThresholdInfo: int[] getThresholds()>();

        $r4 = staticinvoke <com.android.internal.telephony.RIL: java.util.ArrayList primitiveArrayToArrayList(int[])>($r3);

        $r2.<android.hardware.radio.V1_5.SignalThresholdInfo: java.util.ArrayList thresholds> = $r4;

        $z0 = virtualinvoke r0.<android.telephony.SignalThresholdInfo: boolean isEnabled()>();

        $r2.<android.hardware.radio.V1_5.SignalThresholdInfo: boolean isEnabled> = $z0;

        return $r2;
    }

    public static int convertToNetworkTypeBitMask(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80;
        long $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l36, $l37, $l38, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l48, $l49, $l50, $l51, $l52, $l53, $l54, $l55, $l56, $l57, $l58, $l59, $l60;

        i0 := @parameter0: int;

        i61 = 0;

        $i1 = 65536 & i0;

        if $i1 == 0 goto label01;

        $l59 = (long) 0;

        $l60 = $l59 | 32768L;

        i61 = (int) $l60;

     label01:
        i62 = i61;

        $i2 = i0 & 2;

        if $i2 == 0 goto label02;

        $l57 = (long) i61;

        $l58 = $l57 | 1L;

        i62 = (int) $l58;

     label02:
        i63 = i62;

        $i3 = i0 & 4;

        if $i3 == 0 goto label03;

        $l55 = (long) i62;

        $l56 = $l55 | 2L;

        i63 = (int) $l56;

     label03:
        i64 = i63;

        $i4 = i0 & 16;

        if $i4 == 0 goto label04;

        $l53 = (long) i63;

        $l54 = $l53 | 8L;

        i64 = (int) $l54;

     label04:
        i65 = i64;

        $i5 = i0 & 32;

        if $i5 == 0 goto label05;

        $l51 = (long) i64;

        $l52 = $l51 | 8L;

        i65 = (int) $l52;

     label05:
        i66 = i65;

        $i6 = i0 & 64;

        if $i6 == 0 goto label06;

        $l49 = (long) i65;

        $l50 = $l49 | 64L;

        i66 = (int) $l50;

     label06:
        i67 = i66;

        $i7 = i0 & 128;

        if $i7 == 0 goto label07;

        $l47 = (long) i66;

        $l48 = $l47 | 16L;

        i67 = (int) $l48;

     label07:
        i68 = i67;

        $i8 = i0 & 256;

        if $i8 == 0 goto label08;

        $l45 = (long) i67;

        $l46 = $l45 | 32L;

        i68 = (int) $l46;

     label08:
        i69 = i68;

        $i9 = i0 & 4096;

        if $i9 == 0 goto label09;

        $l43 = (long) i68;

        $l44 = $l43 | 2048L;

        i69 = (int) $l44;

     label09:
        i70 = i69;

        $i10 = i0 & 8192;

        if $i10 == 0 goto label10;

        $l41 = (long) i69;

        $l42 = $l41 | 8192L;

        i70 = (int) $l42;

     label10:
        i71 = i70;

        $i11 = i0 & 1024;

        if $i11 == 0 goto label11;

        $l39 = (long) i70;

        $l40 = $l39 | 256L;

        i71 = (int) $l40;

     label11:
        i72 = i71;

        $i12 = i0 & 512;

        if $i12 == 0 goto label12;

        $l37 = (long) i71;

        $l38 = $l37 | 128L;

        i72 = (int) $l38;

     label12:
        i73 = i72;

        $i13 = i0 & 2048;

        if $i13 == 0 goto label13;

        $l35 = (long) i72;

        $l36 = $l35 | 512L;

        i73 = (int) $l36;

     label13:
        i74 = i73;

        $i14 = 32768 & i0;

        if $i14 == 0 goto label14;

        $l33 = (long) i73;

        $l34 = $l33 | 16384L;

        i74 = (int) $l34;

     label14:
        i75 = i74;

        $i15 = i0 & 8;

        if $i15 == 0 goto label15;

        $l31 = (long) i74;

        $l32 = $l31 | 4L;

        i75 = (int) $l32;

     label15:
        i76 = i75;

        $i16 = 131072 & i0;

        if $i16 == 0 goto label16;

        $l29 = (long) i75;

        $l30 = $l29 | 65536L;

        i76 = (int) $l30;

     label16:
        i77 = i76;

        $i17 = i0 & 16384;

        if $i17 == 0 goto label17;

        $l27 = (long) i76;

        $l28 = $l27 | 4096L;

        i77 = (int) $l28;

     label17:
        i78 = i77;

        $i18 = 524288 & i0;

        if $i18 == 0 goto label18;

        $l25 = (long) i77;

        $l26 = $l25 | 262144L;

        i78 = (int) $l26;

     label18:
        i79 = i78;

        $i19 = 1048576 & i0;

        if $i19 == 0 goto label19;

        $l23 = (long) i78;

        $l24 = $l23 | 524288L;

        i79 = (int) $l24;

     label19:
        i80 = i79;

        $i20 = 262144 & i0;

        if $i20 == 0 goto label20;

        $l21 = (long) i79;

        $l22 = $l21 | 131072L;

        i80 = (int) $l22;

     label20:
        if i80 != 0 goto label21;

        i80 = 0;

        goto label21;

     label21:
        return i80;
    }

    public static java.util.ArrayList createCarrierRestrictionList(java.util.List)
    {
        java.util.Iterator r1;
        android.service.carrier.CarrierIdentifier r2;
        java.util.ArrayList $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r5;
        android.hardware.radio.V1_0.Carrier $r6;
        java.lang.String $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, r16, $r17;
        java.util.List r15;
        byte b0;

        r15 := @parameter0: java.util.List;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.service.carrier.CarrierIdentifier) $r5;

        $r6 = new android.hardware.radio.V1_0.Carrier;

        specialinvoke $r6.<android.hardware.radio.V1_0.Carrier: void <init>()>();

        $r7 = virtualinvoke r2.<android.service.carrier.CarrierIdentifier: java.lang.String getMcc()>();

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>($r7);

        $r6.<android.hardware.radio.V1_0.Carrier: java.lang.String mcc> = $r8;

        $r9 = virtualinvoke r2.<android.service.carrier.CarrierIdentifier: java.lang.String getMnc()>();

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>($r9);

        $r6.<android.hardware.radio.V1_0.Carrier: java.lang.String mnc> = $r10;

        b0 = 0;

        r16 = null;

        $r11 = virtualinvoke r2.<android.service.carrier.CarrierIdentifier: java.lang.String getSpn()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r11);

        if $z1 != 0 goto label2;

        b0 = 1;

        r16 = virtualinvoke r2.<android.service.carrier.CarrierIdentifier: java.lang.String getSpn()>();

        goto label5;

     label2:
        $r12 = virtualinvoke r2.<android.service.carrier.CarrierIdentifier: java.lang.String getImsi()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r12);

        if $z2 != 0 goto label3;

        b0 = 2;

        r16 = virtualinvoke r2.<android.service.carrier.CarrierIdentifier: java.lang.String getImsi()>();

        goto label5;

     label3:
        $r13 = virtualinvoke r2.<android.service.carrier.CarrierIdentifier: java.lang.String getGid1()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r13);

        if $z3 != 0 goto label4;

        b0 = 3;

        r16 = virtualinvoke r2.<android.service.carrier.CarrierIdentifier: java.lang.String getGid1()>();

        goto label5;

     label4:
        $r14 = virtualinvoke r2.<android.service.carrier.CarrierIdentifier: java.lang.String getGid2()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r14);

        if $z4 != 0 goto label5;

        b0 = 4;

        r16 = virtualinvoke r2.<android.service.carrier.CarrierIdentifier: java.lang.String getGid2()>();

     label5:
        $r6.<android.hardware.radio.V1_0.Carrier: int matchType> = b0;

        $r17 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r16);

        $r6.<android.hardware.radio.V1_0.Carrier: java.lang.String matchData> = $r17;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label1;

     label6:
        return $r4;
    }

    private static android.net.LinkAddress createLinkAddressFromString(java.lang.String)
    {
        java.lang.String r0;
        android.net.LinkAddress $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.internal.telephony.RIL: android.net.LinkAddress createLinkAddressFromString(java.lang.String,int,long,long)>(r0, 0, -1L, -1L);

        return $r1;
    }

    private static android.net.LinkAddress createLinkAddressFromString(java.lang.String, int, long, long)
    {
        int i0, $i3, $i4, i5;
        long l1, l2;
        java.lang.String r0, $r2, $r5, $r7, r12;
        java.lang.String[] r1;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r4;
        android.net.LinkAddress $r6;
        boolean $z0;
        java.lang.NullPointerException $r8;
        java.lang.ArrayIndexOutOfBoundsException $r9;
        java.lang.Throwable $r10, $r11;
        java.net.InetAddress r13, r14, r15, r16, r17, r18;

        r12 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        r0 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>();

        r13 = null;

        r14 = null;

        r15 = null;

        r16 = null;

     label01:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", 2);

     label02:
        r13 = null;

        r14 = null;

        r15 = null;

        r16 = null;

     label03:
        $r2 = r1[0];

        r17 = staticinvoke <android.net.InetAddresses: java.net.InetAddress parseNumericAddress(java.lang.String)>($r2);

     label04:
        r13 = r17;

        r14 = r17;

        r15 = r17;

        r16 = r17;

     label05:
        $i3 = lengthof r1;

        if $i3 != 1 goto label11;

     label06:
        r13 = r17;

        r14 = r17;

        r15 = r17;

        r16 = r17;

     label07:
        $z0 = r17 instanceof java.net.Inet4Address;

        if $z0 == 0 goto label09;

     label08:
        i5 = 32;

        goto label10;

     label09:
        i5 = 128;

     label10:
        r18 = r17;

        goto label20;

     label11:
        r13 = r17;

        r14 = r17;

        r15 = r17;

        r16 = r17;

        r18 = r17;

        i5 = -1;

     label12:
        $i4 = lengthof r1;

        if $i4 != 2 goto label20;

     label13:
        r13 = r17;

        r14 = r17;

        r15 = r17;

        r16 = r17;

     label14:
        $r7 = r1[1];

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

     label15:
        r18 = r17;

        goto label20;

     label16:
        $r11 := @caughtexception;

        r18 = r13;

        i5 = -1;

        goto label20;

     label17:
        $r10 := @caughtexception;

        r18 = r14;

        i5 = -1;

        goto label20;

     label18:
        $r9 := @caughtexception;

        r18 = r15;

        i5 = -1;

        goto label20;

     label19:
        $r8 := @caughtexception;

        i5 = -1;

        r18 = r16;

     label20:
        if r18 == null goto label21;

        if i5 == -1 goto label21;

        $r6 = new android.net.LinkAddress;

        specialinvoke $r6.<android.net.LinkAddress: void <init>(java.net.InetAddress,int,int,int,long,long)>(r18, i5, i0, 0, l1, l2);

        return $r6;

     label21:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid link address ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.NullPointerException from label01 to label02 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label02 with label18;
        catch java.lang.NumberFormatException from label01 to label02 with label17;
        catch java.lang.IllegalArgumentException from label01 to label02 with label16;
        catch java.lang.NullPointerException from label03 to label04 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label18;
        catch java.lang.NumberFormatException from label03 to label04 with label17;
        catch java.lang.IllegalArgumentException from label03 to label04 with label16;
        catch java.lang.NullPointerException from label05 to label06 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label06 with label18;
        catch java.lang.NumberFormatException from label05 to label06 with label17;
        catch java.lang.IllegalArgumentException from label05 to label06 with label16;
        catch java.lang.NullPointerException from label07 to label08 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label07 to label08 with label18;
        catch java.lang.NumberFormatException from label07 to label08 with label17;
        catch java.lang.IllegalArgumentException from label07 to label08 with label16;
        catch java.lang.NullPointerException from label12 to label13 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label12 to label13 with label18;
        catch java.lang.NumberFormatException from label12 to label13 with label17;
        catch java.lang.IllegalArgumentException from label12 to label13 with label16;
        catch java.lang.NullPointerException from label14 to label15 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label14 to label15 with label18;
        catch java.lang.NumberFormatException from label14 to label15 with label17;
        catch java.lang.IllegalArgumentException from label14 to label15 with label16;
    }

    private android.hardware.radio.V1_0.SimApdu createSimApdu(int, int, int, int, int, int, java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r1, $r4;
        android.hardware.radio.V1_0.SimApdu $r3;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 := @parameter6: java.lang.String;

        $r3 = new android.hardware.radio.V1_0.SimApdu;

        specialinvoke $r3.<android.hardware.radio.V1_0.SimApdu: void <init>()>();

        $r3.<android.hardware.radio.V1_0.SimApdu: int sessionId> = i0;

        $r3.<android.hardware.radio.V1_0.SimApdu: int cla> = i1;

        $r3.<android.hardware.radio.V1_0.SimApdu: int instruction> = i2;

        $r3.<android.hardware.radio.V1_0.SimApdu: int p1> = i3;

        $r3.<android.hardware.radio.V1_0.SimApdu: int p2> = i4;

        $r3.<android.hardware.radio.V1_0.SimApdu: int p3> = i5;

        $r4 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        $r3.<android.hardware.radio.V1_0.SimApdu: java.lang.String data> = $r4;

        return $r3;
    }

    private void decrementWakeLock(com.android.internal.telephony.RILRequest)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        java.lang.String r2, $r11, r17;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i9, i10;
        com.android.internal.telephony.ClientWakelockTracker $r3, r16;
        boolean $z0;
        android.os.PowerManager$WakeLock $r4, $r8, r15;
        android.os.WorkSource $r5, $r6, $r7;
        java.lang.Throwable $r12, $r13;
        java.lang.StringBuilder r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.RILRequest;

        entermonitor r1;

     label01:
        i9 = r1.<com.android.internal.telephony.RILRequest: int mWakeLockType>;

     label02:
        if i9 == -1 goto label19;

        if i9 == 0 goto label06;

        if i9 == 1 goto label05;

     label03:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decrementing Invalid Wakelock type ");

        $i7 = r1.<com.android.internal.telephony.RILRequest: int mWakeLockType>;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r11 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("RILJ", $r11);

     label04:
        goto label19;

     label05:
        goto label19;

     label06:
        r15 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        entermonitor r15;

     label07:
        r16 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.ClientWakelockTracker mClientWakelockTracker>;

        r2 = r1.<com.android.internal.telephony.RILRequest: java.lang.String mClientId>;

        i0 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        i1 = r1.<com.android.internal.telephony.RILRequest: int mSerial>;

        $i2 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        if $i2 <= 1 goto label09;

        $i6 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        i10 = $i6 - 1;

     label08:
        goto label10;

     label09:
        i10 = 0;

     label10:
        virtualinvoke r16.<com.android.internal.telephony.ClientWakelockTracker: void stopTracking(java.lang.String,int,int,int)>(r2, i0, i1, i10);

        r17 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String getWorkSourceClientId()>();

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.ClientWakelockTracker mClientWakelockTracker>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.ClientWakelockTracker: boolean isClientActive(java.lang.String)>(r17);

        if $z0 != 0 goto label11;

        $r6 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mActiveWakelockWorkSource>;

        $r5 = r1.<com.android.internal.telephony.RILRequest: android.os.WorkSource mWorkSource>;

        virtualinvoke $r6.<android.os.WorkSource: boolean remove(android.os.WorkSource)>($r5);

        $r8 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        $r7 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mActiveWakelockWorkSource>;

        virtualinvoke $r8.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>($r7);

     label11:
        $i3 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        if $i3 <= 1 goto label13;

        $i4 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $i5 = $i4 - 1;

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = $i5;

     label12:
        goto label14;

     label13:
        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = 0;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

     label14:
        exitmonitor r15;

     label15:
        goto label19;

     label16:
        $r13 := @caughtexception;

     label17:
        exitmonitor r15;

     label18:
        throw $r13;

     label19:
        r1.<com.android.internal.telephony.RILRequest: int mWakeLockType> = -1;

        exitmonitor r1;

     label20:
        return;

     label21:
        $r12 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    private void emergencyDial(java.lang.String, android.telephony.emergency.EmergencyNumber, boolean, int, com.android.internal.telephony.UUSInfo, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.telephony.emergency.EmergencyNumber r1;
        boolean z0, z2;
        com.android.internal.telephony.UUSInfo r2;
        android.hardware.radio.V1_4.IRadio r3;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        android.os.WorkSource $r4;
        android.hardware.radio.V1_0.Dial $r5;
        java.lang.String $r6, $r8, $r11, $r13, $r18, r22;
        java.lang.StringBuilder $r7;
        java.util.List $r14, $r16;
        java.util.ArrayList $r15, $r20, r29;
        android.hardware.radio.V1_0.UusInfo $r17;
        byte[] $r19;
        java.lang.Exception $r21;
        android.os.Message r23;
        android.hardware.radio.V1_0.IRadio r24;
        com.android.internal.telephony.RILRequest r25;

        r0 := @this: com.android.internal.telephony.RIL;

        r22 := @parameter0: java.lang.String;

        r1 := @parameter1: android.telephony.emergency.EmergencyNumber;

        z0 := @parameter2: boolean;

        i6 := @parameter3: int;

        r2 := @parameter4: com.android.internal.telephony.UUSInfo;

        r23 := @parameter5: android.os.Message;

        r24 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r23);

        r3 = (android.hardware.radio.V1_4.IRadio) r24;

        if r24 == null goto label11;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r25 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(205, r23, $r4);

        $r5 = new android.hardware.radio.V1_0.Dial;

        specialinvoke $r5.<android.hardware.radio.V1_0.Dial: void <init>()>();

        $r6 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r22);

        $r5.<android.hardware.radio.V1_0.Dial: java.lang.String address> = $r6;

        $r5.<android.hardware.radio.V1_0.Dial: int clir> = i6;

        if r2 == null goto label01;

        $r17 = new android.hardware.radio.V1_0.UusInfo;

        specialinvoke $r17.<android.hardware.radio.V1_0.UusInfo: void <init>()>();

        $i4 = virtualinvoke r2.<com.android.internal.telephony.UUSInfo: int getType()>();

        $r17.<android.hardware.radio.V1_0.UusInfo: int uusType> = $i4;

        $i5 = virtualinvoke r2.<com.android.internal.telephony.UUSInfo: int getDcs()>();

        $r17.<android.hardware.radio.V1_0.UusInfo: int uusDcs> = $i5;

        $r18 = new java.lang.String;

        $r19 = virtualinvoke r2.<com.android.internal.telephony.UUSInfo: byte[] getUserData()>();

        specialinvoke $r18.<java.lang.String: void <init>(byte[])>($r19);

        $r17.<android.hardware.radio.V1_0.UusInfo: java.lang.String uusData> = $r18;

        $r20 = $r5.<android.hardware.radio.V1_0.Dial: java.util.ArrayList uusInfo>;

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

     label01:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r25.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r25.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label02:
        i7 = r25.<com.android.internal.telephony.RILRequest: int mSerial>;

        i0 = virtualinvoke r1.<android.telephony.emergency.EmergencyNumber: int getEmergencyServiceCategoryBitmaskInternalDial()>();

        $r14 = virtualinvoke r1.<android.telephony.emergency.EmergencyNumber: java.util.List getEmergencyUrns()>();

        if $r14 == null goto label04;

        r29 = new java.util.ArrayList;

        $r16 = virtualinvoke r1.<android.telephony.emergency.EmergencyNumber: java.util.List getEmergencyUrns()>();

        specialinvoke r29.<java.util.ArrayList: void <init>(java.util.Collection)>($r16);

     label03:
        goto label05;

     label04:
        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r29 = $r15;

     label05:
        i1 = virtualinvoke r1.<android.telephony.emergency.EmergencyNumber: int getEmergencyCallRouting()>();

        $i3 = virtualinvoke r1.<android.telephony.emergency.EmergencyNumber: int getEmergencyNumberSourceBitmask()>();

        if $i3 != 32 goto label07;

     label06:
        z2 = 1;

        goto label08;

     label07:
        z2 = 0;

     label08:
        interfaceinvoke r3.<android.hardware.radio.V1_4.IRadio: void emergencyDial(int,android.hardware.radio.V1_0.Dial,int,java.util.ArrayList,int,boolean,boolean)>(i7, $r5, i0, r29, i1, z0, z2);

     label09:
        goto label11;

     label10:
        $r21 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r25, "emergencyDial", $r21);

        goto label11;

     label11:
        return;

        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.lang.RuntimeException from label02 to label03 with label10;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch java.lang.RuntimeException from label04 to label05 with label10;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.lang.RuntimeException from label05 to label06 with label10;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.RuntimeException from label08 to label09 with label10;
    }

    private com.android.internal.telephony.RILRequest findAndRemoveRequestFromList(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.util.SparseArray r1, $r2, $r4;
        java.lang.Object $r3;
        java.lang.Throwable $r5;
        com.android.internal.telephony.RILRequest r6;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (com.android.internal.telephony.RILRequest) $r3;

     label2:
        if r6 == null goto label4;

     label3:
        $r4 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

     label4:
        exitmonitor r1;

     label5:
        return r6;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private android.os.WorkSource getDeafultWorkSourceIfInvalid(android.os.WorkSource)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource r1, r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.WorkSource;

        r2 = r1;

        if r1 != null goto label1;

        r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

     label1:
        return r2;
    }

    private static java.lang.Object getResponseForTimedOutRILRequest(com.android.internal.telephony.RILRequest)
    {
        int $i0;
        android.telephony.ModemActivityInfo $r0, r3;
        int[] $r1;
        com.android.internal.telephony.RILRequest r2;

        r2 := @parameter0: com.android.internal.telephony.RILRequest;

        if r2 != null goto label1;

        return null;

     label1:
        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        if $i0 == 135 goto label2;

        r3 = null;

        goto label3;

     label2:
        $r0 = new android.telephony.ModemActivityInfo;

        $r1 = newarray (int)[5];

        specialinvoke $r0.<android.telephony.ModemActivityInfo: void <init>(long,int,int,int[],int)>(0L, 0, 0, $r1, 0);

        r3 = $r0;

     label3:
        return r3;
    }

    public static java.util.List getTelephonyRILTimingHistograms()
    {
        android.util.SparseArray r0, $r2, $r3, $r4;
        java.util.ArrayList r1;
        int $i0, $i1, i2;
        java.lang.Object $r5;
        android.telephony.TelephonyHistogram $r6, r8;
        java.lang.Throwable $r7;

        r0 = <com.android.internal.telephony.RIL: android.util.SparseArray mRilTimeHistograms>;

        entermonitor r0;

     label1:
        r1 = new java.util.ArrayList;

        $r2 = <com.android.internal.telephony.RIL: android.util.SparseArray mRilTimeHistograms>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>($i0);

     label2:
        i2 = 0;

     label3:
        $r3 = <com.android.internal.telephony.RIL: android.util.SparseArray mRilTimeHistograms>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i2 >= $i1 goto label5;

        r8 = new android.telephony.TelephonyHistogram;

        $r4 = <com.android.internal.telephony.RIL: android.util.SparseArray mRilTimeHistograms>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r6 = (android.telephony.TelephonyHistogram) $r5;

        specialinvoke r8.<android.telephony.TelephonyHistogram: void <init>(android.telephony.TelephonyHistogram)>($r6);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r8);

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        exitmonitor r0;

     label6:
        return r1;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest, java.lang.String, java.lang.Exception)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r7;
        java.lang.Exception r2;
        java.lang.StringBuilder $r3;
        com.android.internal.telephony.RILRequest r8;

        r0 := @this: com.android.internal.telephony.RIL;

        r8 := @parameter0: com.android.internal.telephony.RILRequest;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Exception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>($r7);

        specialinvoke r0.<com.android.internal.telephony.RIL: void resetProxyAndRequestList()>();

        return;
    }

    private boolean isRadioBugDetectionEnabled()
    {
        com.android.internal.telephony.RIL r0;
        android.content.ContentResolver r1;
        android.content.Context $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.RIL;

        $r2 = r0.<com.android.internal.telephony.RIL: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 1;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "enable_radio_bug_detection", 1);

        if $i0 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static android.hardware.radio.V1_1.RadioAccessSpecifier lambda$3M12y7er3djFac5aI5ti1mzY0Q4(com.android.internal.telephony.RIL, android.telephony.RadioAccessSpecifier)
    {
        com.android.internal.telephony.RIL r0;
        android.telephony.RadioAccessSpecifier r1;
        android.hardware.radio.V1_1.RadioAccessSpecifier $r2;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        r1 := @parameter1: android.telephony.RadioAccessSpecifier;

        $r2 = specialinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_1.RadioAccessSpecifier convertRadioAccessSpecifierToRadioHAL(android.telephony.RadioAccessSpecifier)>(r1);

        return $r2;
    }

    public static android.hardware.radio.V1_5.RadioAccessSpecifier lambda$EScLaQUO-UHerMweNBKxezoJAb4(com.android.internal.telephony.RIL, android.telephony.RadioAccessSpecifier)
    {
        com.android.internal.telephony.RIL r0;
        android.telephony.RadioAccessSpecifier r1;
        android.hardware.radio.V1_5.RadioAccessSpecifier $r2;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        r1 := @parameter1: android.telephony.RadioAccessSpecifier;

        $r2 = specialinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_5.RadioAccessSpecifier convertRadioAccessSpecifierToRadioHAL_1_5(android.telephony.RadioAccessSpecifier)>(r1);

        return $r2;
    }

    static java.lang.String[] lambda$convertDataCallResult$0(int)
    {
        int i0;
        java.lang.String[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (java.lang.String)[i0];

        return $r0;
    }

    static java.lang.String[] lambda$convertDataCallResult$1(int)
    {
        int i0;
        java.lang.String[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (java.lang.String)[i0];

        return $r0;
    }

    static java.lang.String[] lambda$convertDataCallResult$2(int)
    {
        int i0;
        java.lang.String[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (java.lang.String)[i0];

        return $r0;
    }

    static java.lang.String[] lambda$convertDataCallResult$3(int)
    {
        int i0;
        java.lang.String[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (java.lang.String)[i0];

        return $r0;
    }

    static android.net.LinkAddress lambda$convertDataCallResult$4(android.hardware.radio.V1_5.LinkAddress)
    {
        android.hardware.radio.V1_5.LinkAddress r0;
        long $l0, $l1;
        int $i2;
        java.lang.String $r1;
        android.net.LinkAddress $r2;

        r0 := @parameter0: android.hardware.radio.V1_5.LinkAddress;

        $r1 = r0.<android.hardware.radio.V1_5.LinkAddress: java.lang.String address>;

        $i2 = r0.<android.hardware.radio.V1_5.LinkAddress: int properties>;

        $l1 = r0.<android.hardware.radio.V1_5.LinkAddress: long deprecationTime>;

        $l0 = r0.<android.hardware.radio.V1_5.LinkAddress: long expirationTime>;

        $r2 = staticinvoke <com.android.internal.telephony.RIL: android.net.LinkAddress createLinkAddressFromString(java.lang.String,int,long,long)>($r1, $i2, $l1, $l0);

        return $r2;
    }

    static java.lang.String[] lambda$convertDataCallResult$5(int)
    {
        int i0;
        java.lang.String[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (java.lang.String)[i0];

        return $r0;
    }

    static java.lang.String[] lambda$convertDataCallResult$6(int)
    {
        int i0;
        java.lang.String[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (java.lang.String)[i0];

        return $r0;
    }

    static java.lang.String[] lambda$convertDataCallResult$7(int)
    {
        int i0;
        java.lang.String[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (java.lang.String)[i0];

        return $r0;
    }

    private com.android.internal.telephony.RILRequest obtainRequest(int, android.os.Message, android.os.WorkSource)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.os.WorkSource r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r2 := @parameter1: android.os.Message;

        r1 := @parameter2: android.os.WorkSource;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message,android.os.WorkSource)>(i0, r2, r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void addRequest(com.android.internal.telephony.RILRequest)>(r3);

        return r3;
    }

    private transient com.android.internal.telephony.RILRequest obtainRequest(int, android.os.Message, android.os.WorkSource, java.lang.Object[])
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.os.WorkSource r1;
        java.lang.Object[] r2;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r3 := @parameter1: android.os.Message;

        r1 := @parameter2: android.os.WorkSource;

        r2 := @parameter3: java.lang.Object[];

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message,android.os.WorkSource,java.lang.Object[])>(i0, r3, r1, r2);

        specialinvoke r0.<com.android.internal.telephony.RIL: void addRequest(com.android.internal.telephony.RILRequest)>(r4);

        return r4;
    }

    public static java.util.ArrayList primitiveArrayToArrayList(byte[])
    {
        byte[] r0;
        int i0, $i1, i3;
        java.util.ArrayList $r2;
        byte $b2;
        java.lang.Byte $r3;

        r0 := @parameter0: byte[];

        $r2 = new java.util.ArrayList;

        $i1 = lengthof r0;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i1);

        i0 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $b2 = r0[i3];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static java.util.ArrayList primitiveArrayToArrayList(int[])
    {
        int[] r0;
        int i0, $i1, $i2, i3;
        java.util.ArrayList $r2;
        java.lang.Integer $r3;

        r0 := @parameter0: int[];

        $r2 = new java.util.ArrayList;

        $i1 = lengthof r0;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i1);

        i0 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i2 = r0[i3];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private void processResponseCleanUp(com.android.internal.telephony.RILRequest, android.hardware.radio.V1_0.RadioResponseInfo, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        android.hardware.radio.V1_0.RadioResponseInfo r2;
        java.lang.Object r3;
        java.lang.Integer $r4;
        com.android.internal.telephony.metrics.TelephonyMetrics $r5;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.RILRequest;

        r2 := @parameter1: android.hardware.radio.V1_0.RadioResponseInfo;

        r3 := @parameter2: java.lang.Object;

        $r5 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r4 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i3 = r1.<com.android.internal.telephony.RILRequest: int mSerial>;

        $i2 = r2.<android.hardware.radio.V1_0.RadioResponseInfo: int error>;

        $i1 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        virtualinvoke $r5.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnRilSolicitedResponse(int,int,int,int,java.lang.Object)>($i0, $i3, $i2, $i1, r3);

        if r1 == null goto label2;

        $i4 = r2.<android.hardware.radio.V1_0.RadioResponseInfo: int type>;

        if $i4 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.RIL: void decrementWakeLock(com.android.internal.telephony.RILRequest)>(r1);

     label1:
        virtualinvoke r1.<com.android.internal.telephony.RILRequest: void release()>();

     label2:
        return;
    }

    static java.lang.String requestToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 205 goto label161;

        if i0 == 800 goto label160;

        tableswitch(i0)
        {
            case 1: goto label159;
            case 2: goto label158;
            case 3: goto label157;
            case 4: goto label156;
            case 5: goto label155;
            case 6: goto label154;
            case 7: goto label153;
            case 8: goto label152;
            case 9: goto label151;
            case 10: goto label150;
            case 11: goto label149;
            case 12: goto label148;
            case 13: goto label147;
            case 14: goto label146;
            case 15: goto label145;
            case 16: goto label144;
            case 17: goto label143;
            case 18: goto label142;
            case 19: goto label141;
            case 20: goto label140;
            case 21: goto label139;
            case 22: goto label138;
            case 23: goto label137;
            case 24: goto label136;
            case 25: goto label135;
            case 26: goto label134;
            case 27: goto label133;
            case 28: goto label132;
            case 29: goto label131;
            case 30: goto label130;
            case 31: goto label129;
            case 32: goto label128;
            case 33: goto label127;
            case 34: goto label126;
            case 35: goto label125;
            case 36: goto label124;
            case 37: goto label123;
            case 38: goto label122;
            case 39: goto label121;
            case 40: goto label120;
            case 41: goto label119;
            case 42: goto label118;
            case 43: goto label117;
            case 44: goto label116;
            case 45: goto label115;
            case 46: goto label114;
            case 47: goto label113;
            case 48: goto label112;
            case 49: goto label111;
            case 50: goto label110;
            case 51: goto label109;
            case 52: goto label108;
            case 53: goto label107;
            case 54: goto label106;
            case 55: goto label105;
            case 56: goto label104;
            case 57: goto label103;
            case 58: goto label102;
            case 59: goto label101;
            case 60: goto label100;
            case 61: goto label099;
            case 62: goto label098;
            case 63: goto label097;
            case 64: goto label096;
            case 65: goto label095;
            case 66: goto label094;
            case 67: goto label093;
            case 68: goto label092;
            case 69: goto label091;
            case 70: goto label090;
            case 71: goto label089;
            case 72: goto label088;
            case 73: goto label087;
            case 74: goto label086;
            case 75: goto label085;
            case 76: goto label084;
            case 77: goto label083;
            case 78: goto label082;
            case 79: goto label081;
            case 80: goto label080;
            case 81: goto label079;
            case 82: goto label078;
            case 83: goto label077;
            case 84: goto label076;
            case 85: goto label075;
            case 86: goto label074;
            case 87: goto label073;
            case 88: goto label072;
            case 89: goto label071;
            case 90: goto label070;
            case 91: goto label069;
            case 92: goto label068;
            case 93: goto label067;
            case 94: goto label066;
            case 95: goto label065;
            case 96: goto label064;
            case 97: goto label063;
            case 98: goto label062;
            case 99: goto label061;
            case 100: goto label060;
            case 101: goto label059;
            case 102: goto label058;
            case 103: goto label057;
            case 104: goto label056;
            case 105: goto label055;
            case 106: goto label054;
            case 107: goto label053;
            case 108: goto label052;
            case 109: goto label051;
            case 110: goto label050;
            case 111: goto label049;
            case 112: goto label048;
            case 113: goto label047;
            case 114: goto label046;
            case 115: goto label045;
            case 116: goto label044;
            case 117: goto label043;
            case 118: goto label042;
            case 119: goto label041;
            case 120: goto label040;
            case 121: goto label039;
            case 122: goto label038;
            case 123: goto label037;
            case 124: goto label036;
            case 125: goto label035;
            default: goto label001;
        };

     label001:
        tableswitch(i0)
        {
            case 128: goto label034;
            case 129: goto label033;
            case 130: goto label032;
            case 131: goto label031;
            case 132: goto label030;
            case 133: goto label029;
            case 134: goto label028;
            case 135: goto label027;
            case 136: goto label026;
            case 137: goto label025;
            case 138: goto label024;
            case 139: goto label023;
            case 140: goto label022;
            case 141: goto label021;
            case 142: goto label020;
            case 143: goto label019;
            case 144: goto label018;
            case 145: goto label017;
            case 146: goto label016;
            case 147: goto label015;
            case 148: goto label014;
            default: goto label002;
        };

     label002:
        tableswitch(i0)
        {
            case 200: goto label013;
            case 201: goto label012;
            case 202: goto label011;
            case 203: goto label010;
            default: goto label003;
        };

     label003:
        tableswitch(i0)
        {
            case 208: goto label009;
            case 209: goto label008;
            case 210: goto label007;
            case 211: goto label006;
            case 212: goto label005;
            default: goto label004;
        };

     label004:
        return "<unknown request>";

     label005:
        return "RIL_REQUEST_ENTER_SIM_DEPERSONALIZATION";

     label006:
        return "RIL_REQUEST_GET_BARRING_INFO";

     label007:
        return "RIL_REQUEST_SET_SYSTEM_SELECTION_CHANNELS";

     label008:
        return "RIL_REQUEST_GET_UICC_APPLICATIONS_ENABLEMENT";

     label009:
        return "RIL_REQUEST_ENABLE_UICC_APPLICATIONS";

     label010:
        return "RIL_REQUEST_SET_LINK_CAPACITY_REPORTING_CRITERIA";

     label011:
        return "RIL_REQUEST_SET_SIGNAL_STRENGTH_REPORTING_CRITERIA";

     label012:
        return "RIL_REQUEST_SET_LOGICAL_TO_PHYSICAL_SLOT_MAPPING";

     label013:
        return "RIL_REQUEST_GET_SLOT_STATUS";

     label014:
        return "RIL_REQUEST_CDMA_SEND_SMS_EXPECT_MORE";

     label015:
        return "RIL_REQUEST_GET_MODEM_STATUS";

     label016:
        return "RIL_REQUEST_ENABLE_MODEM";

     label017:
        return "RIL_REQUEST_STOP_KEEPALIVE";

     label018:
        return "RIL_REQUEST_START_KEEPALIVE";

     label019:
        return "RIL_REQUEST_STOP_NETWORK_SCAN";

     label020:
        return "RIL_REQUEST_START_NETWORK_SCAN";

     label021:
        return "RIL_REQUEST_SET_CARRIER_INFO_IMSI_ENCRYPTION";

     label022:
        return "RIL_REQUEST_SET_SIM_CARD_POWER";

     label023:
        return "RIL_REQUEST_SET_UNSOLICITED_RESPONSE_FILTER";

     label024:
        return "RIL_REQUEST_SEND_DEVICE_STATE";

     label025:
        return "RIL_REQUEST_GET_ALLOWED_CARRIERS";

     label026:
        return "RIL_REQUEST_SET_ALLOWED_CARRIERS";

     label027:
        return "RIL_REQUEST_GET_ACTIVITY_INFO";

     label028:
        return "RIL_REQUEST_PULL_LCEDATA";

     label029:
        return "RIL_REQUEST_STOP_LCE";

     label030:
        return "RIL_REQUEST_START_LCE";

     label031:
        return "RIL_REQUEST_SET_RADIO_CAPABILITY";

     label032:
        return "RIL_REQUEST_GET_RADIO_CAPABILITY";

     label033:
        return "RIL_REQUEST_SHUTDOWN";

     label034:
        return "RIL_REQUEST_SET_DATA_PROFILE";

     label035:
        return "RIL_REQUEST_SIM_AUTHENTICATION";

     label036:
        return "GET_HARDWARE_CONFIG";

     label037:
        return "RIL_REQUEST_ALLOW_DATA";

     label038:
        return "RIL_REQUEST_SET_UICC_SUBSCRIPTION";

     label039:
        return "RIL_REQUEST_NV_RESET_CONFIG";

     label040:
        return "RIL_REQUEST_NV_WRITE_CDMA_PRL";

     label041:
        return "RIL_REQUEST_NV_WRITE_ITEM";

     label042:
        return "RIL_REQUEST_NV_READ_ITEM";

     label043:
        return "RIL_REQUEST_SIM_TRANSMIT_APDU_CHANNEL";

     label044:
        return "RIL_REQUEST_SIM_CLOSE_CHANNEL";

     label045:
        return "RIL_REQUEST_SIM_OPEN_CHANNEL";

     label046:
        return "RIL_REQUEST_SIM_TRANSMIT_APDU_BASIC";

     label047:
        return "RIL_REQUEST_IMS_SEND_SMS";

     label048:
        return "RIL_REQUEST_IMS_REGISTRATION_STATE";

     label049:
        return "RIL_REQUEST_SET_INITIAL_ATTACH_APN";

     label050:
        return "RIL_REQUEST_SET_CELL_INFO_LIST_RATE";

     label051:
        return "RIL_REQUEST_GET_CELL_INFO_LIST";

     label052:
        return "RIL_REQUEST_VOICE_RADIO_TECH";

     label053:
        return "RIL_REQUEST_STK_SEND_ENVELOPE_WITH_STATUS";

     label054:
        return "RIL_REQUEST_ACKNOWLEDGE_INCOMING_GSM_SMS_WITH_PDU";

     label055:
        return "RIL_REQUEST_ISIM_AUTHENTICATION";

     label056:
        return "RIL_REQUEST_CDMA_GET_SUBSCRIPTION_SOURCE";

     label057:
        return "RIL_REQUEST_REPORT_STK_SERVICE_IS_RUNNING";

     label058:
        return "RIL_REQUEST_REPORT_SMS_MEMORY_STATUS";

     label059:
        return "RIL_REQUEST_SET_SMSC_ADDRESS";

     label060:
        return "RIL_REQUEST_GET_SMSC_ADDRESS";

     label061:
        return "REQUEST_EXIT_EMERGENCY_CALLBACK_MODE";

     label062:
        return "RIL_REQUEST_DEVICE_IDENTITY";

     label063:
        return "RIL_REQUEST_CDMA_DELETE_SMS_ON_RUIM";

     label064:
        return "RIL_REQUEST_CDMA_WRITE_SMS_TO_RUIM";

     label065:
        return "RIL_REQUEST_CDMA_SUBSCRIPTION";

     label066:
        return "RIL_REQUEST_CDMA_BROADCAST_ACTIVATION";

     label067:
        return "RIL_REQUEST_CDMA_SET_BROADCAST_CONFIG";

     label068:
        return "RIL_REQUEST_CDMA_GET_BROADCAST_CONFIG";

     label069:
        return "RIL_REQUEST_GSM_BROADCAST_ACTIVATION";

     label070:
        return "RIL_REQUEST_GSM_SET_BROADCAST_CONFIG";

     label071:
        return "RIL_REQUEST_GSM_GET_BROADCAST_CONFIG";

     label072:
        return "RIL_REQUEST_CDMA_SMS_ACKNOWLEDGE";

     label073:
        return "RIL_REQUEST_CDMA_SEND_SMS";

     label074:
        return "RIL_REQUEST_CDMA_VALIDATE_AND_WRITE_AKEY";

     label075:
        return "RIL_REQUEST_CDMA_BURST_DTMF";

     label076:
        return "RIL_REQUEST_CDMA_FLASH";

     label077:
        return "RIL_REQUEST_CDMA_QUERY_PREFERRED_VOICE_PRIVACY_MODE";

     label078:
        return "RIL_REQUEST_CDMA_SET_PREFERRED_VOICE_PRIVACY_MODE";

     label079:
        return "RIL_REQUEST_QUERY_TTY_MODE";

     label080:
        return "RIL_REQUEST_SET_TTY_MODE";

     label081:
        return "RIL_REQUEST_CDMA_QUERY_ROAMING_PREFERENCE";

     label082:
        return "RIL_REQUEST_CDMA_SET_ROAMING_PREFERENCE";

     label083:
        return "RIL_REQUEST_CDMA_SET_SUBSCRIPTION_SOURCE";

     label084:
        return "REQUEST_SET_LOCATION_UPDATES";

     label085:
        return "REQUEST_GET_NEIGHBORING_CELL_IDS";

     label086:
        return "REQUEST_GET_PREFERRED_NETWORK_TYPE";

     label087:
        return "REQUEST_SET_PREFERRED_NETWORK_TYPE";

     label088:
        return "REQUEST_EXPLICIT_CALL_TRANSFER";

     label089:
        return "REQUEST_STK_HANDLE_CALL_SETUP_REQUESTED_FROM_SIM";

     label090:
        return "REQUEST_STK_SEND_TERMINAL_RESPONSE";

     label091:
        return "REQUEST_STK_SEND_ENVELOPE_COMMAND";

     label092:
        return "REQUEST_STK_SET_PROFILE";

     label093:
        return "REQUEST_STK_GET_PROFILE";

     label094:
        return "QUERY_AVAILABLE_BAND_MODE";

     label095:
        return "SET_BAND_MODE";

     label096:
        return "DELETE_SMS_ON_SIM";

     label097:
        return "WRITE_SMS_TO_SIM";

     label098:
        return "SET_SUPP_SVC_NOTIFICATION";

     label099:
        return "SCREEN_STATE";

     label100:
        return "OEM_HOOK_STRINGS";

     label101:
        return "OEM_HOOK_RAW";

     label102:
        return "RESET_RADIO";

     label103:
        return "DATA_CALL_LIST";

     label104:
        return "LAST_DATA_CALL_FAIL_CAUSE";

     label105:
        return "QUERY_CLIP";

     label106:
        return "GET_MUTE";

     label107:
        return "SET_MUTE";

     label108:
        return "SEPARATE_CONNECTION";

     label109:
        return "BASEBAND_VERSION";

     label110:
        return "DTMF_STOP";

     label111:
        return "DTMF_START";

     label112:
        return "QUERY_AVAILABLE_NETWORKS ";

     label113:
        return "SET_NETWORK_SELECTION_MANUAL";

     label114:
        return "SET_NETWORK_SELECTION_AUTOMATIC";

     label115:
        return "QUERY_NETWORK_SELECTION_MODE";

     label116:
        return "CHANGE_BARRING_PASSWORD";

     label117:
        return "SET_FACILITY_LOCK";

     label118:
        return "QUERY_FACILITY_LOCK";

     label119:
        return "DEACTIVATE_DATA_CALL";

     label120:
        return "ANSWER";

     label121:
        return "GET_IMEISV";

     label122:
        return "GET_IMEI";

     label123:
        return "SMS_ACKNOWLEDGE";

     label124:
        return "SET_CALL_WAITING";

     label125:
        return "QUERY_CALL_WAITING";

     label126:
        return "SET_CALL_FORWARD";

     label127:
        return "QUERY_CALL_FORWARD_STATUS";

     label128:
        return "SET_CLIR";

     label129:
        return "GET_CLIR";

     label130:
        return "CANCEL_USSD";

     label131:
        return "SEND_USSD";

     label132:
        return "SIM_IO";

     label133:
        return "SETUP_DATA_CALL";

     label134:
        return "SEND_SMS_EXPECT_MORE";

     label135:
        return "SEND_SMS";

     label136:
        return "DTMF";

     label137:
        return "RADIO_POWER";

     label138:
        return "OPERATOR";

     label139:
        return "DATA_REGISTRATION_STATE";

     label140:
        return "VOICE_REGISTRATION_STATE";

     label141:
        return "SIGNAL_STRENGTH";

     label142:
        return "LAST_CALL_FAIL_CAUSE";

     label143:
        return "UDUB";

     label144:
        return "CONFERENCE";

     label145:
        return "REQUEST_SWITCH_WAITING_OR_HOLDING_AND_ACTIVE";

     label146:
        return "HANGUP_FOREGROUND_RESUME_BACKGROUND";

     label147:
        return "HANGUP_WAITING_OR_BACKGROUND";

     label148:
        return "HANGUP";

     label149:
        return "GET_IMSI";

     label150:
        return "DIAL";

     label151:
        return "GET_CURRENT_CALLS";

     label152:
        return "ENTER_NETWORK_DEPERSONALIZATION";

     label153:
        return "CHANGE_SIM_PIN2";

     label154:
        return "CHANGE_SIM_PIN";

     label155:
        return "ENTER_SIM_PUK2";

     label156:
        return "ENTER_SIM_PIN2";

     label157:
        return "ENTER_SIM_PUK";

     label158:
        return "ENTER_SIM_PIN";

     label159:
        return "GET_SIM_STATUS";

     label160:
        return "RIL_RESPONSE_ACKNOWLEDGEMENT";

     label161:
        return "EMERGENCY_DIAL";
    }

    private void resetProxyAndRequestList()
    {
        com.android.internal.telephony.RIL r0;
        java.util.concurrent.atomic.AtomicLong $r2;
        java.lang.Throwable $r5;

        r0 := @this: com.android.internal.telephony.RIL;

        entermonitor r0;

     label1:
        r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy> = null;

        r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy> = null;

        $r2 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicLong mRadioProxyCookie>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setRadioState(int,boolean)>(2, 1);

        staticinvoke <com.android.internal.telephony.RILRequest: void resetSerial()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void clearRequestList(int,boolean)>(1, 0);

        virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(null);

        virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook getOemHookProxy(android.os.Message)>(null);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static java.lang.String responseToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1000: goto label59;
            case 1001: goto label58;
            case 1002: goto label57;
            case 1003: goto label56;
            case 1004: goto label55;
            case 1005: goto label54;
            case 1006: goto label53;
            case 1007: goto label52;
            case 1008: goto label51;
            case 1009: goto label50;
            case 1010: goto label49;
            case 1011: goto label48;
            case 1012: goto label47;
            case 1013: goto label46;
            case 1014: goto label45;
            case 1015: goto label44;
            case 1016: goto label43;
            case 1017: goto label42;
            case 1018: goto label41;
            case 1019: goto label40;
            case 1020: goto label39;
            case 1021: goto label38;
            case 1022: goto label37;
            case 1023: goto label36;
            case 1024: goto label35;
            case 1025: goto label34;
            case 1026: goto label33;
            case 1027: goto label32;
            case 1028: goto label31;
            case 1029: goto label30;
            case 1030: goto label29;
            case 1031: goto label28;
            case 1032: goto label27;
            case 1033: goto label26;
            case 1034: goto label25;
            case 1035: goto label24;
            case 1036: goto label23;
            case 1037: goto label22;
            case 1038: goto label21;
            case 1039: goto label20;
            case 1040: goto label19;
            default: goto label01;
        };

     label01:
        tableswitch(i0)
        {
            case 1042: goto label18;
            case 1043: goto label17;
            case 1044: goto label16;
            case 1045: goto label15;
            case 1046: goto label14;
            case 1047: goto label13;
            case 1048: goto label12;
            case 1049: goto label11;
            case 1050: goto label10;
            default: goto label02;
        };

     label02:
        tableswitch(i0)
        {
            case 1100: goto label09;
            case 1101: goto label08;
            case 1102: goto label07;
            case 1103: goto label06;
            case 1104: goto label05;
            case 1105: goto label04;
            default: goto label03;
        };

     label03:
        return "<unknown response>";

     label04:
        return "RIL_UNSOL_BARRING_INFO_CHANGED";

     label05:
        return "RIL_UNSOL_REGISTRATION_FAILED";

     label06:
        return "RIL_UNSOL_UICC_APPLICATIONS_ENABLEMENT_CHANGED";

     label07:
        return "RIL_UNSOL_EMERGENCY_NUMBER_LIST";

     label08:
        return "RIL_UNSOL_PHYSICAL_CHANNEL_CONFIG";

     label09:
        return "RIL_UNSOL_ICC_SLOT_STATUS";

     label10:
        return "RIL_UNSOL_KEEPALIVE_STATUS";

     label11:
        return "RIL_UNSOL_NETWORK_SCAN_RESULT";

     label12:
        return "RIL_UNSOL_CARRIER_INFO_IMSI_ENCRYPTION";

     label13:
        return "UNSOL_MODEM_RESTART";

     label14:
        return "UNSOL_PCO_DATA";

     label15:
        return "UNSOL_LCE_INFO_RECV";

     label16:
        return "UNSOL_STK_CC_ALPHA_NOTIFY";

     label17:
        return "UNSOL_ON_SS";

     label18:
        return "RIL_UNSOL_RADIO_CAPABILITY";

     label19:
        return "RIL_UNSOL_HARDWARE_CONFIG_CHANGED";

     label20:
        return "UNSOL_SRVCC_STATE_NOTIFY";

     label21:
        return "RIL_UNSOL_UICC_SUBSCRIPTION_STATUS_CHANGED";

     label22:
        return "UNSOL_RESPONSE_IMS_NETWORK_STATE_CHANGED";

     label23:
        return "UNSOL_CELL_INFO_LIST";

     label24:
        return "UNSOL_VOICE_RADIO_TECH_CHANGED";

     label25:
        return "UNSOL_RIL_CONNECTED";

     label26:
        return "UNSOL_EXIT_EMERGENCY_CALLBACK_MODE";

     label27:
        return "UNSOL_CDMA_PRL_CHANGED";

     label28:
        return "CDMA_SUBSCRIPTION_SOURCE_CHANGED";

     label29:
        return "UNSOL_RESEND_INCALL_MUTE";

     label30:
        return "UNSOL_RINGBACK_TONE";

     label31:
        return "UNSOL_OEM_HOOK_RAW";

     label32:
        return "UNSOL_CDMA_INFO_REC";

     label33:
        return "UNSOL_CDMA_OTA_PROVISION_STATUS";

     label34:
        return "UNSOL_CDMA_CALL_WAITING";

     label35:
        return "UNSOL_ENTER_EMERGENCY_CALLBACK_MODE";

     label36:
        return "UNSOL_RESTRICTED_STATE_CHANGED";

     label37:
        return "UNSOL_CDMA_RUIM_SMS_STORAGE_FULL";

     label38:
        return "UNSOL_RESPONSE_NEW_BROADCAST_SMS";

     label39:
        return "UNSOL_RESPONSE_CDMA_NEW_SMS";

     label40:
        return "UNSOL_RESPONSE_SIM_STATUS_CHANGED";

     label41:
        return "UNSOL_CALL_RING";

     label42:
        return "UNSOL_SIM_REFRESH";

     label43:
        return "UNSOL_SIM_SMS_STORAGE_FULL";

     label44:
        return "UNSOL_STK_CALL_SETUP";

     label45:
        return "UNSOL_STK_EVENT_NOTIFY";

     label46:
        return "UNSOL_STK_PROACTIVE_COMMAND";

     label47:
        return "UNSOL_STK_SESSION_END";

     label48:
        return "UNSOL_SUPP_SVC_NOTIFICATION";

     label49:
        return "UNSOL_DATA_CALL_LIST_CHANGED";

     label50:
        return "UNSOL_SIGNAL_STRENGTH";

     label51:
        return "UNSOL_NITZ_TIME_RECEIVED";

     label52:
        return "UNSOL_ON_USSD_REQUEST";

     label53:
        return "UNSOL_ON_USSD";

     label54:
        return "UNSOL_RESPONSE_NEW_SMS_ON_SIM";

     label55:
        return "UNSOL_RESPONSE_NEW_SMS_STATUS_REPORT";

     label56:
        return "UNSOL_RESPONSE_NEW_SMS";

     label57:
        return "UNSOL_RESPONSE_NETWORK_STATE_CHANGED";

     label58:
        return "UNSOL_RESPONSE_CALL_STATE_CHANGED";

     label59:
        return "UNSOL_RESPONSE_RADIO_STATE_CHANGED";
    }

    static java.lang.String retToString(int, java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r0, $r5, $r11, $r17, $r23, $r33;
        java.lang.Object $r1, $r13, $r19, r38;
        com.android.internal.telephony.CallForwardInfo $r8;
        java.lang.String $r25, $r28, $r30, $r31, r41;
        int $i0, $i1, i2, i3, i4, i5, i6, i7, i8;
        int[] r39;
        java.lang.String[] r42;
        java.util.ArrayList r44, r48, r54;
        java.util.Iterator r46, r50, r56;
        com.android.internal.telephony.DriverCall r47;
        android.telephony.NeighboringCellInfo r51;
        com.android.internal.telephony.CallForwardInfo[] r52;
        com.android.internal.telephony.HardwareConfig r57;

        i2 := @parameter0: int;

        r38 := @parameter1: java.lang.Object;

        if r38 != null goto label01;

        return "";

     label01:
        if i2 == 11 goto label22;

        if i2 == 115 goto label22;

        if i2 == 117 goto label22;

        if i2 == 38 goto label22;

        if i2 == 39 goto label22;

        $z0 = r38 instanceof int[];

        if $z0 == 0 goto label04;

        r39 = (int[]) r38;

        i3 = lengthof r39;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        if i3 <= 0 goto label03;

        i4 = 0 + 1;

        $i0 = r39[0];

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

     label02:
        if i4 >= i3 goto label03;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i1 = r39[i4];

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        i4 = i4 + 1;

        goto label02;

     label03:
        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        r41 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label21;

     label04:
        $z1 = r38 instanceof java.lang.String[];

        if $z1 == 0 goto label08;

        r42 = (java.lang.String[]) r38;

        i5 = lengthof r42;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        if i5 <= 0 goto label07;

        if i2 != 98 goto label05;

        i6 = 0 + 1;

        $r30 = r42[0];

        $r31 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("RILJ", $r30);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        goto label06;

     label05:
        i6 = 0 + 1;

        $r25 = r42[0];

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

     label06:
        if i6 >= i5 goto label07;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r28 = r42[i6];

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        i6 = i6 + 1;

        goto label06;

     label07:
        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        r41 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label21;

     label08:
        if i2 != 9 goto label11;

        r44 = (java.util.ArrayList) r38;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        r46 = virtualinvoke r44.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r19 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r47 = (com.android.internal.telephony.DriverCall) $r19;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        goto label09;

     label10:
        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        r41 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label21;

     label11:
        if i2 != 75 goto label14;

        r48 = (java.util.ArrayList) r38;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        r50 = virtualinvoke r48.<java.util.ArrayList: java.util.Iterator iterator()>();

     label12:
        $z3 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r13 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (android.telephony.NeighboringCellInfo) $r13;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        goto label12;

     label13:
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        r41 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label21;

     label14:
        if i2 != 33 goto label17;

        r52 = (com.android.internal.telephony.CallForwardInfo[]) r38;

        i7 = lengthof r52;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        i8 = 0;

     label15:
        if i8 >= i7 goto label16;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r8 = r52[i8];

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        i8 = i8 + 1;

        goto label15;

     label16:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        r41 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label21;

     label17:
        if i2 != 124 goto label20;

        r54 = (java.util.ArrayList) r38;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ");

        r56 = virtualinvoke r54.<java.util.ArrayList: java.util.Iterator iterator()>();

     label18:
        $z2 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label19;

        $r1 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();

        r57 = (com.android.internal.telephony.HardwareConfig) $r1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        goto label18;

     label19:
        r41 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label21;

     label20:
        r41 = virtualinvoke r38.<java.lang.Object: java.lang.String toString()>();

     label21:
        return r41;

     label22:
        return "";
    }

    private void sendAck()
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        android.os.WorkSource $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;
        android.hardware.radio.V1_0.IRadio r9;

        r0 := @this: com.android.internal.telephony.RIL;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r1 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message,android.os.WorkSource)>(800, null, $r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void acquireWakeLock(com.android.internal.telephony.RILRequest,int)>(r1, 1);

        r9 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(null);

        if r9 == null goto label4;

     label1:
        interfaceinvoke r9.<android.hardware.radio.V1_0.IRadio: void responseAcknowledgement()>();

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r1, "sendAck", $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendAck: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>($r8);

        goto label2;

     label4:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", "Error trying to send ack, radioProxy = null");

     label5:
        virtualinvoke r1.<com.android.internal.telephony.RILRequest: void release()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private int translateStatus(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 = i0 & 7;

        if i1 == 3 goto label3;

        if i1 == 5 goto label2;

        if i1 == 7 goto label1;

        return 1;

     label1:
        return 2;

     label2:
        return 3;

     label3:
        return 0;
    }

    public void acceptCall(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r10;
        com.android.internal.telephony.metrics.TelephonyMetrics $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        r13 := @parameter0: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(40, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void acceptCall(int)>($i1);

        $r11 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r10 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $i3 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke $r11.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilAnswer(int,int)>($i2, $i3);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "acceptCall", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void acknowledgeIncomingGsmSmsWithPdu(boolean, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r12, $r13, r15;
        int $i0, $i1;
        java.lang.Exception $r14;
        android.os.Message r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r15 := @parameter1: java.lang.String;

        r16 := @parameter2: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(106, r16, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" success = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label1:
        $i1 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r15);

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void acknowledgeIncomingGsmSmsWithPdu(int,boolean,java.lang.String)>($i1, z0, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "acknowledgeIncomingGsmSmsWithPdu", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void acknowledgeLastIncomingCdmaSms(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0, $z1;
        int i0, $i1, $i2, i3;
        android.os.WorkSource $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6, $r12;
        android.hardware.radio.V1_0.CdmaSmsAck $r13;
        java.lang.Exception $r14;
        android.os.Message r15;
        android.hardware.radio.V1_0.IRadio r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r15 := @parameter2: android.os.Message;

        r16 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r15);

        if r16 == null goto label4;

        $r1 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(88, r15, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r6 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" success = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cause = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = new android.hardware.radio.V1_0.CdmaSmsAck;

        specialinvoke $r13.<android.hardware.radio.V1_0.CdmaSmsAck: void <init>()>();

        $z1 = z0 ^ 1;

        i3 = (int) $z1;

        $r13.<android.hardware.radio.V1_0.CdmaSmsAck: int errorClass> = i3;

        $r13.<android.hardware.radio.V1_0.CdmaSmsAck: int smsCauseCode> = i0;

     label1:
        $i2 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r16.<android.hardware.radio.V1_0.IRadio: void acknowledgeLastIncomingCdmaSms(int,android.hardware.radio.V1_0.CdmaSmsAck)>($i2, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "acknowledgeLastIncomingCdmaSms", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void acknowledgeLastIncomingGsmSms(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        int i0, $i1, $i2;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r13;
        java.lang.Exception $r14;
        android.os.Message r15;
        android.hardware.radio.V1_0.IRadio r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r15 := @parameter2: android.os.Message;

        r16 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r15);

        if r16 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(37, r15, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" success = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cause = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label1:
        $i2 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r16.<android.hardware.radio.V1_0.IRadio: void acknowledgeLastIncomingGsmSms(int,boolean,int)>($i2, z0, i0);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "acknowledgeLastIncomingGsmSms", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void areUiccApplicationsEnabled(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.HalVersion $r2, $r3;
        boolean $z0;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r11;
        int $i0, $i1;
        com.android.internal.telephony.CommandException $r12;
        java.lang.Exception $r14;
        android.os.Message r15;
        android.hardware.radio.V1_0.IRadio r16;
        android.hardware.radio.V1_5.IRadio r17;
        com.android.internal.telephony.RILRequest r18;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: android.os.Message;

        r16 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r15);

        if r16 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r2);

        if $z0 == 0 goto label3;

        if r15 == null goto label2;

        $r12 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r15, null, $r12);

        virtualinvoke r15.<android.os.Message: void sendToTarget()>();

     label2:
        return;

     label3:
        r17 = (android.hardware.radio.V1_5.IRadio) r16;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(209, r15, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r18.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r18.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label4:
        $i1 = r18.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r17.<android.hardware.radio.V1_5.IRadio: void areUiccApplicationsEnabled(int)>($i1);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r18, "areUiccApplicationsEnabled", $r14);

     label7:
        return;

        catch android.os.RemoteException from label4 to label5 with label6;
        catch java.lang.RuntimeException from label4 to label5 with label6;
    }

    public boolean canToggleUiccApplicationsEnablement()
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio $r1;
        com.android.internal.telephony.HalVersion $r2, $r3;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.RIL;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(null);

        if $r1 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r2);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void cancelPendingUssd(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(30, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void cancelPendingUssd(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "cancelPendingUssd", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void changeBarringPassword(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r7, $r10, $r14, $r15, $r16, $r17, r19;
        android.hardware.radio.V1_0.IRadio r3;
        android.os.WorkSource $r5;
        java.lang.StringBuilder $r6;
        int $i0, $i1;
        java.lang.Exception $r18;
        android.os.Message r20;
        com.android.internal.telephony.RILRequest r21;

        r0 := @this: com.android.internal.telephony.RIL;

        r19 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r20 := @parameter3: android.os.Message;

        r3 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r20);

        if r3 == null goto label4;

        $r5 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r21 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(44, r20, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r21.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r21.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("facility = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r14 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r14);

     label1:
        $i1 = r21.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r19);

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        $r17 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r2);

        interfaceinvoke r3.<android.hardware.radio.V1_0.IRadio: void setBarringPassword(int,java.lang.String,java.lang.String,java.lang.String)>($i1, $r15, $r16, $r17);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r21, "changeBarringPassword", $r18);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void changeIccPin(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void changeIccPinForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void changeIccPin2(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void changeIccPin2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void changeIccPin2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r7, $r10, $r18, $r19, $r20, $r21, r23;
        android.hardware.radio.V1_0.IRadio r3;
        android.os.WorkSource $r5;
        java.lang.StringBuilder $r6;
        int $i0, $i1;
        java.lang.Exception $r22;
        android.os.Message r24;
        com.android.internal.telephony.RILRequest r25;

        r0 := @this: com.android.internal.telephony.RIL;

        r23 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r24 := @parameter3: android.os.Message;

        r3 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r24);

        if r3 == null goto label4;

        $r5 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r25 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(7, r24, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r25.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r25.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oldPin = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" newPin = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r18);

     label1:
        $i1 = r25.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r19 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r23);

        $r20 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        $r21 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r2);

        interfaceinvoke r3.<android.hardware.radio.V1_0.IRadio: void changeIccPin2ForApp(int,java.lang.String,java.lang.String,java.lang.String)>($i1, $r19, $r20, $r21);

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r25, "changeIccPin2ForApp", $r22);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void changeIccPinForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r7, $r10, $r18, $r19, $r20, $r21, r23;
        android.hardware.radio.V1_0.IRadio r3;
        android.os.WorkSource $r5;
        java.lang.StringBuilder $r6;
        int $i0, $i1;
        java.lang.Exception $r22;
        android.os.Message r24;
        com.android.internal.telephony.RILRequest r25;

        r0 := @this: com.android.internal.telephony.RIL;

        r23 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r24 := @parameter3: android.os.Message;

        r3 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r24);

        if r3 == null goto label4;

        $r5 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r25 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(6, r24, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r25.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r25.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oldPin = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" newPin = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r18);

     label1:
        $i1 = r25.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r19 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r23);

        $r20 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        $r21 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r2);

        interfaceinvoke r3.<android.hardware.radio.V1_0.IRadio: void changeIccPinForApp(int,java.lang.String,java.lang.String,java.lang.String)>($i1, $r19, $r20, $r21);

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r25, "changeIccPinForApp", $r22);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void conference(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(16, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void conference(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "conference", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void deactivateDataCall(int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r13;
        com.android.internal.telephony.HalVersion $r14, $r15;
        boolean $z0, z1;
        android.hardware.radio.V1_2.IRadio $r16;
        java.lang.Exception $r17;
        android.os.Message r18;
        android.hardware.radio.V1_0.IRadio r19;
        com.android.internal.telephony.RILRequest r20;
        com.android.internal.telephony.metrics.TelephonyMetrics $r21;
        java.lang.Integer $r22;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r18 := @parameter2: android.os.Message;

        r19 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r18);

        if r19 == null goto label10;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r20 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(41, r18, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r20.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r20.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cid = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reason = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label01:
        $r15 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r14 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2>;

        $z0 = virtualinvoke $r15.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r14);

        if $z0 == 0 goto label03;

        $r16 = (android.hardware.radio.V1_2.IRadio) r19;

        $i4 = r20.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke $r16.<android.hardware.radio.V1_2.IRadio: void deactivateDataCall_1_2(int,int,int)>($i4, i0, i1);

     label02:
        goto label07;

     label03:
        i2 = r20.<com.android.internal.telephony.RILRequest: int mSerial>;

     label04:
        if i1 != 2 goto label05;

        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        interfaceinvoke r19.<android.hardware.radio.V1_0.IRadio: void deactivateDataCall(int,int,boolean)>(i2, i0, z1);

     label07:
        $r21 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r22 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i5 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        $i6 = r20.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke $r21.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilDeactivateDataCall(int,int,int,int)>($i5, $i6, i0, i1);

     label08:
        goto label10;

     label09:
        $r17 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r20, "deactivateDataCall", $r17);

     label10:
        return;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch java.lang.RuntimeException from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch java.lang.RuntimeException from label03 to label04 with label09;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch java.lang.RuntimeException from label06 to label07 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.RuntimeException from label07 to label08 with label09;
    }

    public void deleteSmsOnRuim(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.WorkSource $r1;
        java.lang.Exception $r2;
        android.os.Message r3;
        android.hardware.radio.V1_0.IRadio r4;
        com.android.internal.telephony.RILRequest r5;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r3 := @parameter1: android.os.Message;

        r4 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r3);

        if r4 == null goto label4;

        $r1 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(97, r3, $r1);

     label1:
        $i1 = r5.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r4.<android.hardware.radio.V1_0.IRadio: void deleteSmsOnRuim(int,int)>($i1, i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r5, "deleteSmsOnRuim", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void deleteSmsOnSim(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.WorkSource $r1;
        java.lang.Exception $r2;
        android.os.Message r3;
        android.hardware.radio.V1_0.IRadio r4;
        com.android.internal.telephony.RILRequest r5;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r3 := @parameter1: android.os.Message;

        r4 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r3);

        if r4 == null goto label4;

        $r1 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(64, r3, $r1);

     label1:
        $i1 = r5.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r4.<android.hardware.radio.V1_0.IRadio: void deleteSmsOnSim(int,int)>($i1, i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r5, "deleteSmsOnSim", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void dial(java.lang.String, boolean, android.telephony.emergency.EmergencyNumber, boolean, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;
        boolean z0, z1;
        android.telephony.emergency.EmergencyNumber r2;
        int i0;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.telephony.emergency.EmergencyNumber;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        r3 := @parameter5: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void dial(java.lang.String,boolean,android.telephony.emergency.EmergencyNumber,boolean,int,com.android.internal.telephony.UUSInfo,android.os.Message)>(r1, z0, r2, z1, i0, null, r3);

        return;
    }

    public void dial(java.lang.String, boolean, android.telephony.emergency.EmergencyNumber, boolean, int, com.android.internal.telephony.UUSInfo, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0, z1, $z3;
        int i0, $i1, $i2, $i3, $i4;
        com.android.internal.telephony.UUSInfo r1;
        android.hardware.radio.V1_0.IRadio r2;
        android.os.WorkSource $r3;
        android.hardware.radio.V1_0.Dial $r4;
        java.lang.String $r5, $r7, $r10, $r12, $r14, r20;
        java.lang.StringBuilder $r6;
        android.hardware.radio.V1_0.UusInfo $r13;
        byte[] $r15;
        java.util.ArrayList $r16;
        com.android.internal.telephony.HalVersion $r17, $r18;
        java.lang.Exception $r19;
        android.telephony.emergency.EmergencyNumber r21;
        android.os.Message r22;
        com.android.internal.telephony.RILRequest r23;

        r0 := @this: com.android.internal.telephony.RIL;

        r20 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r21 := @parameter2: android.telephony.emergency.EmergencyNumber;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        r1 := @parameter5: com.android.internal.telephony.UUSInfo;

        r22 := @parameter6: android.os.Message;

        if z0 == 0 goto label1;

        $r18 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r17 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4>;

        $z3 = virtualinvoke $r18.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r17);

        if $z3 == 0 goto label1;

        if r21 == null goto label1;

        specialinvoke r0.<com.android.internal.telephony.RIL: void emergencyDial(java.lang.String,android.telephony.emergency.EmergencyNumber,boolean,int,com.android.internal.telephony.UUSInfo,android.os.Message)>(r20, r21, z1, i0, r1, r22);

        return;

     label1:
        r2 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r22);

        if r2 == null goto label6;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r23 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(10, r22, $r3);

        $r4 = new android.hardware.radio.V1_0.Dial;

        specialinvoke $r4.<android.hardware.radio.V1_0.Dial: void <init>()>();

        $r5 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r20);

        $r4.<android.hardware.radio.V1_0.Dial: java.lang.String address> = $r5;

        $r4.<android.hardware.radio.V1_0.Dial: int clir> = i0;

        if r1 == null goto label2;

        $r13 = new android.hardware.radio.V1_0.UusInfo;

        specialinvoke $r13.<android.hardware.radio.V1_0.UusInfo: void <init>()>();

        $i3 = virtualinvoke r1.<com.android.internal.telephony.UUSInfo: int getType()>();

        $r13.<android.hardware.radio.V1_0.UusInfo: int uusType> = $i3;

        $i4 = virtualinvoke r1.<com.android.internal.telephony.UUSInfo: int getDcs()>();

        $r13.<android.hardware.radio.V1_0.UusInfo: int uusDcs> = $i4;

        $r14 = new java.lang.String;

        $r15 = virtualinvoke r1.<com.android.internal.telephony.UUSInfo: byte[] getUserData()>();

        specialinvoke $r14.<java.lang.String: void <init>(byte[])>($r15);

        $r13.<android.hardware.radio.V1_0.UusInfo: java.lang.String uusData> = $r14;

        $r16 = $r4.<android.hardware.radio.V1_0.Dial: java.util.ArrayList uusInfo>;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r23.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r23.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label3:
        $i2 = r23.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r2.<android.hardware.radio.V1_0.IRadio: void dial(int,android.hardware.radio.V1_0.Dial)>($i2, $r4);

     label4:
        goto label6;

     label5:
        $r19 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r23, "dial", $r19);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.StringBuilder $r1, $r5, $r10, $r21, $r27, r51, r52, r54;
        java.lang.String $r4, $r9, $r13, $r16, $r20, $r24, $r26, $r31, $r38, $r40;
        android.os.PowerManager$WakeLock $r7, r50;
        android.util.SparseArray $r17, $r33, r49;
        java.lang.Object[] $r23;
        java.util.concurrent.atomic.AtomicBoolean $r29;
        boolean $z0;
        com.android.internal.telephony.ClientWakelockTracker $r32;
        java.lang.Object $r34;
        java.lang.Throwable $r41, $r42;
        java.io.FileDescriptor r43;
        java.io.PrintWriter r44;
        java.lang.String[] r45;
        com.android.internal.telephony.RILRequest r53;

        r0 := @this: com.android.internal.telephony.RIL;

        r43 := @parameter0: java.io.FileDescriptor;

        r44 := @parameter1: java.io.PrintWriter;

        r45 := @parameter2: java.lang.String[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLock=");

        $r7 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLockTimeout=");

        $i1 = r0.<com.android.internal.telephony.RIL: int mWakeLockTimeout>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        r49 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        entermonitor r49;

     label01:
        r50 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        entermonitor r50;

     label02:
        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLockCount=");

        $i2 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r16 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        exitmonitor r50;

     label03:
        $r17 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        i0 = virtualinvoke $r17.<android.util.SparseArray: int size()>();

        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRequestList count=");

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.PrintWriter: void println(java.lang.String)>($r20);

     label04:
        i5 = 0;

     label05:
        if i5 >= i0 goto label08;

     label06:
        $r33 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $r34 = virtualinvoke $r33.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r53 = (com.android.internal.telephony.RILRequest) $r34;

        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  [");

        $i3 = r53.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $i4 = r53.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r38 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.PrintWriter: void println(java.lang.String)>($r40);

     label07:
        i5 = i5 + 1;

        goto label05;

     label08:
        exitmonitor r49;

     label09:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastNITZTimeInfo=");

        $r23 = r0.<com.android.internal.telephony.RIL: java.lang.Object[] mLastNITZTimeInfo>;

        $r24 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r23);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mTestingEmergencyCall=");

        $r29 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall>;

        $z0 = virtualinvoke $r29.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r32 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.ClientWakelockTracker mClientWakelockTracker>;

        virtualinvoke $r32.<com.android.internal.telephony.ClientWakelockTracker: void dumpClientRequestTracker(java.io.PrintWriter)>(r44);

        return;

     label10:
        $r41 := @caughtexception;

     label11:
        exitmonitor r50;

     label12:
        throw $r41;

     label13:
        $r42 := @caughtexception;

     label14:
        exitmonitor r49;

     label15:
        throw $r42;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void enableModem(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0, $z1;
        com.android.internal.telephony.HalVersion $r2, $r3;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r13;
        int $i0, $i1;
        com.android.internal.telephony.CommandException $r14;
        java.lang.Exception $r16;
        android.os.Message r17;
        android.hardware.radio.V1_0.IRadio r18;
        android.hardware.radio.V1_3.IRadio r19;
        com.android.internal.telephony.RILRequest r20;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r17 := @parameter1: android.os.Message;

        r18 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r17);

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_3>;

        $z1 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r2);

        if $z1 == 0 goto label2;

        if r17 == null goto label1;

        $r14 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r17, null, $r14);

        virtualinvoke r17.<android.os.Message: void sendToTarget()>();

     label1:
        return;

     label2:
        r19 = (android.hardware.radio.V1_3.IRadio) r18;

        if r19 == null goto label6;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r20 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(146, r17, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r20.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r20.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enable = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label3:
        $i1 = r20.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r19.<android.hardware.radio.V1_3.IRadio: void enableModem(int,boolean)>($i1, z0);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r20, "enableModem", $r16);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public void enableUiccApplications(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0, $z1;
        com.android.internal.telephony.HalVersion $r2, $r3;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r11;
        int $i0, $i1;
        com.android.internal.telephony.CommandException $r12;
        java.lang.Exception $r14;
        android.os.Message r15;
        android.hardware.radio.V1_0.IRadio r16;
        android.hardware.radio.V1_5.IRadio r17;
        com.android.internal.telephony.RILRequest r18;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r15 := @parameter1: android.os.Message;

        r16 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r15);

        if r16 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z1 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r2);

        if $z1 == 0 goto label3;

        if r15 == null goto label2;

        $r12 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r15, null, $r12);

        virtualinvoke r15.<android.os.Message: void sendToTarget()>();

     label2:
        return;

     label3:
        r17 = (android.hardware.radio.V1_5.IRadio) r16;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(208, r15, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r18.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r18.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label4:
        $i1 = r18.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r17.<android.hardware.radio.V1_5.IRadio: void enableUiccApplications(int,boolean)>($i1, z0);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r18, "enableUiccApplications", $r14);

     label7:
        return;

        catch android.os.RemoteException from label4 to label5 with label6;
        catch java.lang.RuntimeException from label4 to label5 with label6;
    }

    public void exitEmergencyCallbackMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(99, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void exitEmergencyCallbackMode(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "exitEmergencyCallbackMode", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void explicitCallTransfer(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(72, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void explicitCallTransfer(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "explicitCallTransfer", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public android.telephony.SignalStrength fixupSignalStrength10(android.telephony.SignalStrength)
    {
        com.android.internal.telephony.RIL r0;
        android.telephony.SignalStrength r1, $r10;
        boolean $z0, $z1;
        java.lang.Object $r2, $r4;
        android.telephony.CellSignalStrengthGsm $r3, r7, $r12;
        java.lang.Integer $r5;
        int $i1, i2, $i3, $i4;
        java.util.List r6;
        com.android.internal.telephony.Phone r8;
        android.telephony.ServiceState r9;
        android.telephony.CellSignalStrengthCdma $r11;
        android.telephony.CellSignalStrengthWcdma $r13;
        android.telephony.CellSignalStrengthTdscdma $r14;
        android.telephony.CellSignalStrengthLte $r15;
        android.telephony.CellSignalStrengthNr $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.telephony.SignalStrength;

        r6 = virtualinvoke r1.<android.telephony.SignalStrength: java.util.List getCellSignalStrengths(java.lang.Class)>(class "Landroid/telephony/CellSignalStrengthGsm;");

        $z0 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r2 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (android.telephony.CellSignalStrengthGsm) $r2;

        $z1 = virtualinvoke $r3.<android.telephony.CellSignalStrengthGsm: boolean isValid()>();

        if $z1 != 0 goto label1;

        goto label5;

     label1:
        $r4 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0);

        r7 = (android.telephony.CellSignalStrengthGsm) $r4;

        $r5 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        r8 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getPhone(int)>($i1);

        i2 = 0;

        if r8 == null goto label2;

        r9 = virtualinvoke r8.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        i2 = 0;

        if r9 == null goto label2;

        i2 = virtualinvoke r9.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

     label2:
        if i2 == 3 goto label4;

        if i2 == 15 goto label4;

        tableswitch(i2)
        {
            case 9: goto label4;
            case 10: goto label4;
            case 11: goto label4;
            default: goto label3;
        };

     label3:
        return r1;

     label4:
        $r10 = new android.telephony.SignalStrength;

        $r11 = new android.telephony.CellSignalStrengthCdma;

        specialinvoke $r11.<android.telephony.CellSignalStrengthCdma: void <init>()>();

        $r12 = new android.telephony.CellSignalStrengthGsm;

        specialinvoke $r12.<android.telephony.CellSignalStrengthGsm: void <init>()>();

        $r13 = new android.telephony.CellSignalStrengthWcdma;

        $i3 = virtualinvoke r7.<android.telephony.CellSignalStrengthGsm: int getRssi()>();

        $i4 = virtualinvoke r7.<android.telephony.CellSignalStrengthGsm: int getBitErrorRate()>();

        specialinvoke $r13.<android.telephony.CellSignalStrengthWcdma: void <init>(int,int,int,int)>($i3, $i4, 2147483647, 2147483647);

        $r14 = new android.telephony.CellSignalStrengthTdscdma;

        specialinvoke $r14.<android.telephony.CellSignalStrengthTdscdma: void <init>()>();

        $r15 = new android.telephony.CellSignalStrengthLte;

        specialinvoke $r15.<android.telephony.CellSignalStrengthLte: void <init>()>();

        $r16 = new android.telephony.CellSignalStrengthNr;

        specialinvoke $r16.<android.telephony.CellSignalStrengthNr: void <init>()>();

        specialinvoke $r10.<android.telephony.SignalStrength: void <init>(android.telephony.CellSignalStrengthCdma,android.telephony.CellSignalStrengthGsm,android.telephony.CellSignalStrengthWcdma,android.telephony.CellSignalStrengthTdscdma,android.telephony.CellSignalStrengthLte,android.telephony.CellSignalStrengthNr)>($r11, $r12, $r13, $r14, $r15, $r16);

        return $r10;

     label5:
        return r1;
    }

    public void getAllowedCarriers(android.os.Message, android.os.WorkSource)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r5, $r7;
        int $i0, $i1, $i2;
        com.android.internal.telephony.HalVersion $r8, $r9;
        boolean $z0;
        java.lang.Exception $r10, $r11;
        android.os.Message r12;
        android.os.WorkSource r13, r14;
        android.hardware.radio.V1_0.IRadio r15;
        com.android.internal.telephony.RILRequest r16;
        android.hardware.radio.V1_4.IRadio r18;

        r0 := @this: com.android.internal.telephony.RIL;

        r12 := @parameter0: android.os.Message;

        r13 := @parameter1: android.os.WorkSource;

        r14 = specialinvoke r0.<com.android.internal.telephony.RIL: android.os.WorkSource getDeafultWorkSourceIfInvalid(android.os.WorkSource)>(r13);

        r15 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r12);

        if r15 != null goto label01;

        return;

     label01:
        r16 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(137, r12, r14);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r16.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r16.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r5 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r7);

        $r9 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r8 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4>;

        $z0 = virtualinvoke $r9.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r8);

        if $z0 == 0 goto label06;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("RIL.java - Using IRadio 1.4 or greater");

        r18 = (android.hardware.radio.V1_4.IRadio) r15;

     label02:
        $i2 = r16.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r18.<android.hardware.radio.V1_4.IRadio: void getAllowedCarriers_1_4(int)>($i2);

     label03:
        goto label05;

     label04:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r16, "getAllowedCarriers_1_4", $r10);

     label05:
        goto label10;

     label06:
        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("RIL.java - Using IRadio 1.3 or lower");

     label07:
        $i1 = r16.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r15.<android.hardware.radio.V1_0.IRadio: void getAllowedCarriers(int)>($i1);

     label08:
        goto label10;

     label09:
        $r11 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r16, "getAllowedCarriers", $r11);

     label10:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.RuntimeException from label02 to label03 with label04;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.RuntimeException from label07 to label08 with label09;
    }

    public void getAvailableNetworks(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(48, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getAvailableNetworks(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getAvailableNetworks", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getBarringInfo(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.HalVersion $r2, $r3;
        boolean $z0;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r11;
        int $i0, $i1;
        com.android.internal.telephony.CommandException $r12;
        java.lang.Exception $r14;
        android.os.Message r15;
        android.hardware.radio.V1_0.IRadio r16;
        android.hardware.radio.V1_5.IRadio r17;
        com.android.internal.telephony.RILRequest r18;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: android.os.Message;

        r16 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r15);

        if r16 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r2);

        if $z0 == 0 goto label3;

        if r15 == null goto label2;

        $r12 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r15, null, $r12);

        virtualinvoke r15.<android.os.Message: void sendToTarget()>();

     label2:
        return;

     label3:
        r17 = (android.hardware.radio.V1_5.IRadio) r16;

        if r17 == null goto label7;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(211, r15, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r18.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r18.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label4:
        $i1 = r18.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r17.<android.hardware.radio.V1_5.IRadio: void getBarringInfo(int)>($i1);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r18, "getBarringInfo", $r14);

     label7:
        return;

        catch android.os.RemoteException from label4 to label5 with label6;
        catch java.lang.RuntimeException from label4 to label5 with label6;
    }

    public void getBasebandVersion(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(51, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getBasebandVersion(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getBasebandVersion", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getCDMASubscription(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(95, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getCDMASubscription(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getCDMASubscription", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getCLIR(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(31, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getClir(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getCLIR", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getCdmaBroadcastConfig(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(92, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getCdmaBroadcastConfig(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getCdmaBroadcastConfig", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getCdmaSubscriptionSource(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(104, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getCdmaSubscriptionSource(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getCdmaSubscriptionSource", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getCellInfoList(android.os.Message, android.os.WorkSource)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r5, $r7;
        int $i0, $i1;
        java.lang.Exception $r8;
        android.os.Message r9;
        android.os.WorkSource r10, r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r9 := @parameter0: android.os.Message;

        r10 := @parameter1: android.os.WorkSource;

        r11 = specialinvoke r0.<com.android.internal.telephony.RIL: android.os.WorkSource getDeafultWorkSourceIfInvalid(android.os.WorkSource)>(r10);

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r9);

        if r12 == null goto label4;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(109, r9, r11);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r5 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r7);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getCellInfoList(int)>($i1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getCellInfoList", $r8);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public java.util.List getClientRequestStats()
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.ClientWakelockTracker $r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        $r1 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.ClientWakelockTracker mClientWakelockTracker>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.ClientWakelockTracker: java.util.List getClientRequestStats()>();

        return $r2;
    }

    public com.android.internal.telephony.HalVersion getCompatVersion(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        com.android.internal.telephony.HalVersion $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.ConcurrentHashMap mCompatOverrides>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r2, null);

        $r4 = (com.android.internal.telephony.HalVersion) $r3;

        return $r4;
    }

    public void getCurrentCalls(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(9, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getCurrentCalls(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getCurrentCalls", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getDataCallList(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(57, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getDataCallList(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getDataCallList", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getDataRegistrationState(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3, $r10;
        java.lang.String $r4, $r7, $r9, $r13;
        int $i0, $i1, $i2;
        com.android.internal.telephony.HalVersion $r14, $r15, $r16, r23;
        boolean $z0, $z1;
        java.lang.Exception $r17, $r18;
        android.os.Message r19;
        android.hardware.radio.V1_0.IRadio r20;
        com.android.internal.telephony.RILRequest r21;
        android.hardware.radio.V1_5.IRadio r24;

        r0 := @this: com.android.internal.telephony.RIL;

        r19 := @parameter0: android.os.Message;

        r20 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r19);

        if r20 == null goto label9;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r21 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(21, r19, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r21.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r21.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        r23 = virtualinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion getCompatVersion(int)>(21);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getDataRegistrationState: overrideHalVersion=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        if r23 == null goto label1;

        $r16 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z1 = virtualinvoke r23.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r16);

        if $z1 == 0 goto label6;

     label1:
        $r15 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r14 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r15.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r14);

        if $z0 == 0 goto label6;

        r24 = (android.hardware.radio.V1_5.IRadio) r20;

     label2:
        $i2 = r21.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r24.<android.hardware.radio.V1_5.IRadio: void getDataRegistrationState_1_5(int)>($i2);

     label3:
        goto label5;

     label4:
        $r18 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r21, "getDataRegistrationState_1_5", $r18);

     label5:
        goto label9;

     label6:
        $i1 = r21.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r20.<android.hardware.radio.V1_0.IRadio: void getDataRegistrationState(int)>($i1);

     label7:
        goto label9;

     label8:
        $r17 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r21, "getDataRegistrationState", $r17);

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.RuntimeException from label6 to label7 with label8;
    }

    public void getDeviceIdentity(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(98, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getDeviceIdentity(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getDeviceIdentity", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getGsmBroadcastConfig(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(89, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getGsmBroadcastConfig(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getGsmBroadcastConfig", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public com.android.internal.telephony.HalVersion getHalVersion()
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.HalVersion $r1;

        r0 := @this: com.android.internal.telephony.RIL;

        $r1 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        return $r1;
    }

    public void getHardwareConfig(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(124, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getHardwareConfig(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getHardwareConfig", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getIMEI(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("getIMEI not expected to be called");

        throw $r2;
    }

    public void getIMEISV(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("getIMEISV not expected to be called");

        throw $r2;
    }

    public void getIMSI(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void getIMSIForApp(java.lang.String,android.os.Message)>(null, r1);

        return;
    }

    public void getIMSIForApp(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r12, $r13, r15;
        int $i0, $i1;
        java.lang.Exception $r14;
        android.os.Message r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(11, r16, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">  ");

        $i0 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label1:
        $i1 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r15);

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void getImsiForApp(int,java.lang.String)>($i1, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "getIMSIForApp", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getIccCardStatus(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(1, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getIccCardStatus(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getIccCardStatus", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getIccSlotsStatus(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandException $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        if r1 == null goto label1;

        $r2 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r1, null, $r2);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    public void getImsRegistrationState(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(112, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getImsRegistrationState(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getImsRegistrationState", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getLastCallFailCause(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(18, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getLastCallFailCause(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getLastCallFailCause", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getLastDataCallFailCause(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("getLastDataCallFailCause not expected to be called");

        throw $r2;
    }

    public void getLastPdpFailCause(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("getLastPdpFailCause not expected to be called");

        throw $r2;
    }

    public void getModemActivityInfo(android.os.Message, android.os.WorkSource)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r5, $r7;
        int $i0, $i1, $i2;
        com.android.internal.telephony.RIL$RilHandler $r8, $r9;
        java.lang.Exception $r10;
        android.os.Message r11, r17;
        android.os.WorkSource r12, r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 := @parameter1: android.os.WorkSource;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: android.os.WorkSource getDeafultWorkSourceIfInvalid(android.os.WorkSource)>(r12);

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r14 == null goto label4;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(135, r11, r13);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r5 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r7);

     label1:
        $i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void getModemActivityInfo(int)>($i1);

        $r8 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RilHandler mRilHandler>;

        r17 = virtualinvoke $r8.<com.android.internal.telephony.RIL$RilHandler: android.os.Message obtainMessage(int)>(5);

        r17.<android.os.Message: java.lang.Object obj> = null;

        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        r17.<android.os.Message: int arg1> = $i2;

        $r9 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RilHandler mRilHandler>;

        virtualinvoke $r9.<com.android.internal.telephony.RIL$RilHandler: boolean sendMessageDelayed(android.os.Message,long)>(r17, 2000L);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "getModemActivityInfo", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getModemStatus(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.HalVersion $r2, $r3;
        boolean $z0;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r11;
        int $i0, $i1;
        com.android.internal.telephony.CommandException $r12;
        java.lang.Exception $r14;
        android.os.Message r15;
        android.hardware.radio.V1_0.IRadio r16;
        android.hardware.radio.V1_3.IRadio r17;
        com.android.internal.telephony.RILRequest r18;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: android.os.Message;

        r16 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r15);

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_3>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r2);

        if $z0 == 0 goto label2;

        if r15 == null goto label1;

        $r12 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r15, null, $r12);

        virtualinvoke r15.<android.os.Message: void sendToTarget()>();

     label1:
        return;

     label2:
        r17 = (android.hardware.radio.V1_3.IRadio) r16;

        if r17 == null goto label6;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(147, r15, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r18.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r18.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label3:
        $i1 = r18.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r17.<android.hardware.radio.V1_3.IRadio: void getModemStackStatus(int)>($i1);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r18, "getModemStatus", $r14);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public void getMute(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(54, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getMute(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getMute", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getNetworkSelectionMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(45, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getNetworkSelectionMode(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getNetworkSelectionMode", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public android.hardware.radio.deprecated.V1_0.IOemHook getOemHookProxy(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0, $z1, $z2;
        java.lang.Integer $r1, $r3, $r5, $r10, $r13, $r25;
        int $i0, $i1, $i2, $i3;
        android.hardware.radio.deprecated.V1_0.IOemHook $r2, $r8, $r9, $r23, r43, $r50, r51;
        java.util.Set $r4, $r11;
        java.lang.String[] $r6, $r14, $r26;
        java.lang.String $r7, $r15, $r18, $r27, $r30, $r36, $r41;
        com.android.internal.telephony.CommandException $r19, $r31;
        com.android.internal.telephony.OemHookIndication $r21;
        com.android.internal.telephony.OemHookResponse $r22;
        android.os.RemoteException $r33;
        java.lang.Throwable $r37, $r38;
        android.os.Message r42;
        java.lang.StringBuilder r44, r45, r47, r49;

        r0 := @this: com.android.internal.telephony.RIL;

        r42 := @parameter0: android.os.Message;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidPhoneId(int)>($i0);

     label02:
        if z0 != 0 goto label03;

        exitmonitor r0;

        return null;

     label03:
        $z1 = r0.<com.android.internal.telephony.RIL: boolean mIsCellularSupported>;

        if $z1 != 0 goto label07;

     label04:
        if r42 == null goto label06;

     label05:
        $r31 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(1);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r42, null, $r31);

        virtualinvoke r42.<android.os.Message: void sendToTarget()>();

     label06:
        exitmonitor r0;

        return null;

     label07:
        $r2 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy>;

        if $r2 == null goto label09;

        r43 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy>;

     label08:
        exitmonitor r0;

        return r43;

     label09:
        $r4 = r0.<com.android.internal.telephony.RIL: java.util.Set mDisabledOemHookServices>;

        $r3 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $z2 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z2 == 0 goto label11;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOemHookProxy: mOemHookProxy for ");

        $r26 = <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME>;

        $r25 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i3 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        $r27 = $r26[$i3];

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is disabled");

        $r30 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>($r30);

     label10:
        goto label20;

     label11:
        $r6 = <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME>;

        $r5 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $r7 = $r6[$i1];

        $r8 = staticinvoke <android.hardware.radio.deprecated.V1_0.IOemHook: android.hardware.radio.deprecated.V1_0.IOemHook getService(java.lang.String,boolean)>($r7, 1);

        r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy> = $r8;

        $r9 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy>;

        if $r9 == null goto label13;

        $r23 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy>;

        $r22 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.OemHookResponse mOemHookResponse>;

        $r21 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.OemHookIndication mOemHookIndication>;

        interfaceinvoke $r23.<android.hardware.radio.deprecated.V1_0.IOemHook: void setResponseFunctions(android.hardware.radio.deprecated.V1_0.IOemHookResponse,android.hardware.radio.deprecated.V1_0.IOemHookIndication)>($r22, $r21);

     label12:
        goto label20;

     label13:
        $r11 = r0.<com.android.internal.telephony.RIL: java.util.Set mDisabledOemHookServices>;

        $r10 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r10);

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOemHookProxy: mOemHookProxy for ");

        $r14 = <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME>;

        $r13 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i2 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r15 = $r14[$i2];

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is disabled");

        $r18 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>($r18);

     label14:
        goto label20;

     label15:
        $r33 := @caughtexception;

     label16:
        r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy> = null;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OemHookProxy getService/setResponseFunctions: ");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r36 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>($r36);

     label17:
        goto label20;

     label18:
        $r38 := @caughtexception;

     label19:
        r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy> = null;

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOemHook service is not on the device HAL: ");

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r41 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>($r41);

     label20:
        $r50 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy>;

        if $r50 != null goto label23;

     label21:
        if r42 == null goto label23;

     label22:
        $r19 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(1);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r42, null, $r19);

        virtualinvoke r42.<android.os.Message: void sendToTarget()>();

     label23:
        r51 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook mOemHookProxy>;

     label24:
        exitmonitor r0;

        return r51;

     label25:
        $r37 := @caughtexception;

        exitmonitor r0;

        throw $r37;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.util.NoSuchElementException from label09 to label10 with label18;
        catch android.os.RemoteException from label09 to label10 with label15;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.util.NoSuchElementException from label11 to label12 with label18;
        catch android.os.RemoteException from label11 to label12 with label15;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.util.NoSuchElementException from label13 to label14 with label18;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    public void getOperator(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(22, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getOperator(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getOperator", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getPDPContextList(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void getDataCallList(android.os.Message)>(r1);

        return;
    }

    public void getPreferredNetworkType(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1, $i2;
        com.android.internal.telephony.HalVersion $r10, $r11;
        boolean $z0;
        java.lang.Exception $r12, $r13;
        android.os.Message r14;
        android.hardware.radio.V1_0.IRadio r15;
        com.android.internal.telephony.RILRequest r16;
        android.hardware.radio.V1_4.IRadio r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r14 := @parameter0: android.os.Message;

        r15 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r14);

        if r15 == null goto label8;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r16 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(74, r14, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r16.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r16.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        $r11 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r10 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4>;

        $z0 = virtualinvoke $r11.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r10);

        if $z0 == 0 goto label5;

        r17 = (android.hardware.radio.V1_4.IRadio) r15;

     label1:
        $i2 = r16.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r17.<android.hardware.radio.V1_4.IRadio: void getPreferredNetworkTypeBitmap(int)>($i2);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r16, "getPreferredNetworkTypeBitmap", $r12);

     label4:
        goto label8;

     label5:
        $i1 = r16.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r15.<android.hardware.radio.V1_0.IRadio: void getPreferredNetworkType(int)>($i1);

     label6:
        goto label8;

     label7:
        $r13 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r16, "getPreferredNetworkType", $r13);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch android.os.RemoteException from label5 to label6 with label7;
        catch java.lang.RuntimeException from label5 to label6 with label7;
    }

    public void getPreferredVoicePrivacy(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(83, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getPreferredVoicePrivacy(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getPreferredVoicePrivacy", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public com.android.internal.telephony.RadioBugDetector getRadioBugDetector()
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RadioBugDetector $r1, $r2, $r3;
        java.lang.Integer $r4;
        android.content.Context $r5;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        $r1 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioBugDetector mRadioBugDetector>;

        if $r1 != null goto label1;

        $r3 = new com.android.internal.telephony.RadioBugDetector;

        $r5 = r0.<com.android.internal.telephony.RIL: android.content.Context mContext>;

        $r4 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        specialinvoke $r3.<com.android.internal.telephony.RadioBugDetector: void <init>(android.content.Context,int)>($r5, $i0);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioBugDetector mRadioBugDetector> = $r3;

     label1:
        $r2 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioBugDetector mRadioBugDetector>;

        return $r2;
    }

    public void getRadioCapability(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(130, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getRadioCapability(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getRadioCapability", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder r1, r76, r89;
        java.lang.Integer $r2, $r4, $r6, $r11, $r14, $r29, $r34, $r39, $r44, $r49, $r55;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9;
        android.hardware.radio.V1_0.IRadio $r3, $r20, $r24, $r28, $r32, r75, r78, r80, r82, r84, r86, $r88, r91;
        java.util.Set $r5, $r12;
        java.lang.String[] $r7, $r15, $r30, $r35, $r40, $r45, $r50, $r56;
        java.lang.String $r8, $r16, $r19, $r31, $r36, $r41, $r46, $r51, $r57, $r60, $r70;
        android.hardware.radio.V1_5.IRadio $r9;
        com.android.internal.telephony.HalVersion $r10, $r33, $r38, $r43, $r48, $r53;
        com.android.internal.telephony.CommandException $r21, $r61;
        java.util.concurrent.atomic.AtomicLong $r23;
        com.android.internal.telephony.RIL$RadioProxyDeathRecipient $r25;
        long $l3;
        com.android.internal.telephony.RadioIndication $r26;
        com.android.internal.telephony.RadioResponse $r27;
        android.hardware.radio.V1_1.IRadio $r37;
        android.hardware.radio.V1_2.IRadio $r42;
        android.hardware.radio.V1_3.IRadio $r47;
        android.hardware.radio.V1_4.IRadio $r52;
        java.lang.Throwable $r63, $r64, $r65, $r66, $r71, $r72, $r73;
        android.os.RemoteException $r67;
        android.os.Message r74;

        r0 := @this: com.android.internal.telephony.RIL;

        r74 := @parameter0: android.os.Message;

        entermonitor r0;

     label01:
        $r2 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidPhoneId(int)>($i0);

     label02:
        if z0 != 0 goto label03;

        exitmonitor r0;

        return null;

     label03:
        $z1 = r0.<com.android.internal.telephony.RIL: boolean mIsCellularSupported>;

        if $z1 != 0 goto label07;

     label04:
        if r74 == null goto label06;

     label05:
        $r61 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(1);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r74, null, $r61);

        virtualinvoke r74.<android.os.Message: void sendToTarget()>();

     label06:
        exitmonitor r0;

        return null;

     label07:
        $r3 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

        if $r3 == null goto label09;

        r75 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

     label08:
        exitmonitor r0;

        return r75;

     label09:
        $r5 = r0.<com.android.internal.telephony.RIL: java.util.Set mDisabledRadioServices>;

        $r4 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $z2 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z2 == 0 goto label11;

        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRadioProxy: mRadioProxy for ");

        $r56 = <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME>;

        $r55 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i9 = virtualinvoke $r55.<java.lang.Integer: int intValue()>();

        $r57 = $r56[$i9];

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is disabled");

        $r60 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>($r60);

     label10:
        goto label42;

     label11:
        $r7 = <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME>;

        $r6 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r8 = $r7[$i1];

        $r9 = staticinvoke <android.hardware.radio.V1_5.IRadio: android.hardware.radio.V1_5.IRadio getService(java.lang.String,boolean)>($r8, 1);

        r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy> = $r9;

        $r10 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion> = $r10;

     label12:
        goto label14;

     label13:
        $r63 := @caughtexception;

     label14:
        r78 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

     label15:
        if r78 != null goto label19;

     label16:
        $r50 = <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME>;

        $r49 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i8 = virtualinvoke $r49.<java.lang.Integer: int intValue()>();

        $r51 = $r50[$i8];

        $r52 = staticinvoke <android.hardware.radio.V1_4.IRadio: android.hardware.radio.V1_4.IRadio getService(java.lang.String,boolean)>($r51, 1);

        r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy> = $r52;

        $r53 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4>;

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion> = $r53;

     label17:
        goto label19;

     label18:
        $r72 := @caughtexception;

     label19:
        r80 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

     label20:
        if r80 != null goto label24;

     label21:
        $r45 = <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME>;

        $r44 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i7 = virtualinvoke $r44.<java.lang.Integer: int intValue()>();

        $r46 = $r45[$i7];

        $r47 = staticinvoke <android.hardware.radio.V1_3.IRadio: android.hardware.radio.V1_3.IRadio getService(java.lang.String,boolean)>($r46, 1);

        r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy> = $r47;

        $r48 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_3>;

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion> = $r48;

     label22:
        goto label24;

     label23:
        $r73 := @caughtexception;

     label24:
        r82 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

     label25:
        if r82 != null goto label29;

     label26:
        $r40 = <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME>;

        $r39 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i6 = virtualinvoke $r39.<java.lang.Integer: int intValue()>();

        $r41 = $r40[$i6];

        $r42 = staticinvoke <android.hardware.radio.V1_2.IRadio: android.hardware.radio.V1_2.IRadio getService(java.lang.String,boolean)>($r41, 1);

        r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy> = $r42;

        $r43 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2>;

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion> = $r43;

     label27:
        goto label29;

     label28:
        $r65 := @caughtexception;

     label29:
        r84 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

     label30:
        if r84 != null goto label34;

     label31:
        $r35 = <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME>;

        $r34 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i5 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

        $r36 = $r35[$i5];

        $r37 = staticinvoke <android.hardware.radio.V1_1.IRadio: android.hardware.radio.V1_1.IRadio getService(java.lang.String,boolean)>($r36, 1);

        r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy> = $r37;

        $r38 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_1>;

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion> = $r38;

     label32:
        goto label34;

     label33:
        $r64 := @caughtexception;

     label34:
        r86 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

     label35:
        if r86 != null goto label39;

     label36:
        $r30 = <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME>;

        $r29 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i4 = virtualinvoke $r29.<java.lang.Integer: int intValue()>();

        $r31 = $r30[$i4];

        $r32 = staticinvoke <android.hardware.radio.V1_0.IRadio: android.hardware.radio.V1_0.IRadio getService(java.lang.String,boolean)>($r31, 1);

        r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy> = $r32;

        $r33 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_0>;

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion> = $r33;

     label37:
        goto label39;

     label38:
        $r71 := @caughtexception;

     label39:
        $r88 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

        if $r88 == null goto label41;

        $r24 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

        $r25 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RadioProxyDeathRecipient mRadioProxyDeathRecipient>;

        $r23 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicLong mRadioProxyCookie>;

        $l3 = virtualinvoke $r23.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        interfaceinvoke $r24.<android.hardware.radio.V1_0.IRadio: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>($r25, $l3);

        $r28 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

        $r27 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioResponse mRadioResponse>;

        $r26 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioIndication mRadioIndication>;

        interfaceinvoke $r28.<android.hardware.radio.V1_0.IRadio: void setResponseFunctions(android.hardware.radio.V1_0.IRadioResponse,android.hardware.radio.V1_0.IRadioIndication)>($r27, $r26);

     label40:
        goto label42;

     label41:
        $r12 = r0.<com.android.internal.telephony.RIL: java.util.Set mDisabledRadioServices>;

        $r11 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r11);

        r89 = new java.lang.StringBuilder;

        specialinvoke r89.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRadioProxy: mRadioProxy for ");

        $r15 = <com.android.internal.telephony.RIL: java.lang.String[] HIDL_SERVICE_NAME>;

        $r14 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i2 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $r16 = $r15[$i2];

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is disabled");

        $r19 = virtualinvoke r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>($r19);

     label42:
        goto label45;

     label43:
        $r67 := @caughtexception;

     label44:
        r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy> = null;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RadioProxy getService/setResponseFunctions: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        $r70 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>($r70);

     label45:
        $r20 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

        if $r20 != null goto label48;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>("getRadioProxy: mRadioProxy == null");

     label46:
        if r74 == null goto label48;

     label47:
        $r21 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(1);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r74, null, $r21);

        virtualinvoke r74.<android.os.Message: void sendToTarget()>();

     label48:
        r91 = r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio mRadioProxy>;

     label49:
        exitmonitor r0;

        return r91;

     label50:
        $r66 := @caughtexception;

        exitmonitor r0;

        throw $r66;

        catch java.lang.Throwable from label01 to label02 with label50;
        catch java.lang.Throwable from label03 to label04 with label50;
        catch java.lang.Throwable from label05 to label06 with label50;
        catch java.lang.Throwable from label07 to label08 with label50;
        catch android.os.RemoteException from label09 to label10 with label43;
        catch java.lang.Throwable from label09 to label10 with label50;
        catch java.util.NoSuchElementException from label11 to label12 with label13;
        catch android.os.RemoteException from label11 to label12 with label43;
        catch java.lang.Throwable from label11 to label12 with label50;
        catch android.os.RemoteException from label14 to label15 with label43;
        catch java.lang.Throwable from label14 to label15 with label50;
        catch java.util.NoSuchElementException from label16 to label17 with label18;
        catch android.os.RemoteException from label16 to label17 with label43;
        catch java.lang.Throwable from label16 to label17 with label50;
        catch android.os.RemoteException from label19 to label20 with label43;
        catch java.lang.Throwable from label19 to label20 with label50;
        catch java.util.NoSuchElementException from label21 to label22 with label23;
        catch android.os.RemoteException from label21 to label22 with label43;
        catch java.lang.Throwable from label21 to label22 with label50;
        catch android.os.RemoteException from label24 to label25 with label43;
        catch java.lang.Throwable from label24 to label25 with label50;
        catch java.util.NoSuchElementException from label26 to label27 with label28;
        catch android.os.RemoteException from label26 to label27 with label43;
        catch java.lang.Throwable from label26 to label27 with label50;
        catch android.os.RemoteException from label29 to label30 with label43;
        catch java.lang.Throwable from label29 to label30 with label50;
        catch java.util.NoSuchElementException from label31 to label32 with label33;
        catch android.os.RemoteException from label31 to label32 with label43;
        catch java.lang.Throwable from label31 to label32 with label50;
        catch android.os.RemoteException from label34 to label35 with label43;
        catch java.lang.Throwable from label34 to label35 with label50;
        catch java.util.NoSuchElementException from label36 to label37 with label38;
        catch android.os.RemoteException from label36 to label37 with label43;
        catch java.lang.Throwable from label36 to label37 with label50;
        catch android.os.RemoteException from label39 to label40 with label43;
        catch java.lang.Throwable from label39 to label40 with label50;
        catch android.os.RemoteException from label41 to label42 with label43;
        catch java.lang.Throwable from label41 to label42 with label50;
        catch java.lang.Throwable from label44 to label45 with label50;
        catch java.lang.Throwable from label45 to label46 with label50;
        catch java.lang.Throwable from label47 to label48 with label50;
        catch java.lang.Throwable from label48 to label49 with label50;
    }

    public com.android.internal.telephony.RIL$RilHandler getRilHandler()
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RIL$RilHandler $r1;

        r0 := @this: com.android.internal.telephony.RIL;

        $r1 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RilHandler mRilHandler>;

        return $r1;
    }

    public android.util.SparseArray getRilRequestList()
    {
        com.android.internal.telephony.RIL r0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.internal.telephony.RIL;

        $r1 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        return $r1;
    }

    public void getSignalStrength(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1, $i2;
        com.android.internal.telephony.HalVersion $r10, $r11;
        boolean $z0;
        java.lang.Exception $r12, $r13;
        android.os.Message r14;
        android.hardware.radio.V1_0.IRadio r15;
        com.android.internal.telephony.RILRequest r16;
        android.hardware.radio.V1_4.IRadio r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r14 := @parameter0: android.os.Message;

        r15 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r14);

        if r15 == null goto label8;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r16 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(19, r14, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r16.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r16.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        $r11 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r10 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4>;

        $z0 = virtualinvoke $r11.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r10);

        if $z0 == 0 goto label5;

        r17 = (android.hardware.radio.V1_4.IRadio) r15;

     label1:
        $i2 = r16.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r17.<android.hardware.radio.V1_4.IRadio: void getSignalStrength_1_4(int)>($i2);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r16, "getSignalStrength_1_4", $r12);

     label4:
        goto label8;

     label5:
        $i1 = r16.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r15.<android.hardware.radio.V1_0.IRadio: void getSignalStrength(int)>($i1);

     label6:
        goto label8;

     label7:
        $r13 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r16, "getSignalStrength", $r13);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch android.os.RemoteException from label5 to label6 with label7;
        catch java.lang.RuntimeException from label5 to label6 with label7;
    }

    public void getSmscAddress(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(100, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getSmscAddress(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getSmscAddress", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getVoiceRadioTechnology(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(108, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getVoiceRadioTechnology(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getVoiceRadioTechnology", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getVoiceRegistrationState(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.HalVersion r1, $r14, $r15, $r16;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3, $r10;
        java.lang.String $r4, $r7, $r9, $r13;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.Exception $r17, $r18;
        android.os.Message r19;
        android.hardware.radio.V1_0.IRadio r20;
        com.android.internal.telephony.RILRequest r21;
        android.hardware.radio.V1_5.IRadio r24;

        r0 := @this: com.android.internal.telephony.RIL;

        r19 := @parameter0: android.os.Message;

        r20 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r19);

        if r20 == null goto label9;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r21 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(20, r19, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r21.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r21.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion getCompatVersion(int)>(20);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getVoiceRegistrationState: overrideHalVersion=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        if r1 == null goto label1;

        $r16 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z1 = virtualinvoke r1.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r16);

        if $z1 == 0 goto label6;

     label1:
        $r15 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r14 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r15.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r14);

        if $z0 == 0 goto label6;

        r24 = (android.hardware.radio.V1_5.IRadio) r20;

     label2:
        $i2 = r21.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r24.<android.hardware.radio.V1_5.IRadio: void getVoiceRegistrationState_1_5(int)>($i2);

     label3:
        goto label5;

     label4:
        $r18 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r21, "getVoiceRegistrationState_1_5", $r18);

     label5:
        goto label9;

     label6:
        $i1 = r21.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r20.<android.hardware.radio.V1_0.IRadio: void getVoiceRegistrationState(int)>($i1);

     label7:
        goto label9;

     label8:
        $r17 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r21, "getVoiceRegistrationState", $r17);

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.RuntimeException from label6 to label7 with label8;
    }

    public android.os.PowerManager$WakeLock getWakeLock(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.os.PowerManager$WakeLock r1;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        r1 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        goto label2;

     label1:
        r1 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mAckWakeLock>;

     label2:
        return r1;
    }

    public void handleCallSetupRequestFromSim(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r11 := @parameter1: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(71, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void handleStkCallSetupRequestFromSim(int,boolean)>($i1, z0);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "getAllowedCarriers", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void hangupConnection(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(12, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gsmIndex = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void hangup(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "hangupConnection", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void hangupForegroundResumeBackground(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(14, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void hangupForegroundResumeBackground(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "hangupForegroundResumeBackground", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void hangupWaitingOrBackground(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(13, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void hangupWaitingOrBackground(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "hangupWaitingOrBackground", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void iccCloseLogicalChannel(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(116, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" channel = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void iccCloseLogicalChannel(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "iccCloseLogicalChannel", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void iccIO(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, r2, r3;
        android.os.Message r4;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: java.lang.String;

        r3 := @parameter7: java.lang.String;

        r4 := @parameter8: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void iccIOForApp(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(i0, i1, r1, i2, i3, i4, r2, r3, null, r4);

        return;
    }

    public void iccIOForApp(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        java.lang.String r1, r2, r3, $r7, $r10, $r12, $r14, $r15, $r16, $r17, $r19, $r22, $r25, $r28, $r40, r42;
        android.hardware.radio.V1_0.IRadio r4;
        android.os.WorkSource $r5;
        boolean $z0;
        java.lang.StringBuilder $r6, $r18;
        android.hardware.radio.V1_0.IccIo $r13;
        java.lang.Exception $r41;
        android.os.Message r43;
        com.android.internal.telephony.RILRequest r44;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r42 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r1 := @parameter6: java.lang.String;

        r2 := @parameter7: java.lang.String;

        r3 := @parameter8: java.lang.String;

        r43 := @parameter9: android.os.Message;

        r4 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r43);

        if r4 == null goto label6;

        $r5 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r44 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(28, r43, $r5);

        $z0 = <com.android.internal.telephony.util.TelephonyUtils: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r44.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> iccIO: ");

        $i7 = r44.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r22 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i7);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" command = 0x");

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fileId = 0x");

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path = ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" p1 = ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" p2 = ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" p3 =  data = ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid = ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r40 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r40);

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r44.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> iccIO: ");

        $i5 = r44.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label2:
        $r13 = new android.hardware.radio.V1_0.IccIo;

        specialinvoke $r13.<android.hardware.radio.V1_0.IccIo: void <init>()>();

        $r13.<android.hardware.radio.V1_0.IccIo: int command> = i0;

        $r13.<android.hardware.radio.V1_0.IccIo: int fileId> = i1;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r42);

        $r13.<android.hardware.radio.V1_0.IccIo: java.lang.String path> = $r14;

        $r13.<android.hardware.radio.V1_0.IccIo: int p1> = i2;

        $r13.<android.hardware.radio.V1_0.IccIo: int p2> = i3;

        $r13.<android.hardware.radio.V1_0.IccIo: int p3> = i4;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        $r13.<android.hardware.radio.V1_0.IccIo: java.lang.String data> = $r15;

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r2);

        $r13.<android.hardware.radio.V1_0.IccIo: java.lang.String pin2> = $r16;

        $r17 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r3);

        $r13.<android.hardware.radio.V1_0.IccIo: java.lang.String aid> = $r17;

     label3:
        $i6 = r44.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r4.<android.hardware.radio.V1_0.IRadio: void iccIOForApp(int,android.hardware.radio.V1_0.IccIo)>($i6, $r13);

     label4:
        goto label6;

     label5:
        $r41 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r44, "iccIOForApp", $r41);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public void iccOpenLogicalChannel(java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2, $i3;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r11;
        java.lang.String $r4, $r7, $r9, $r10, $r12, $r15, $r21, r23;
        java.lang.Exception $r22;
        android.os.Message r24;
        com.android.internal.telephony.RILRequest r25;

        r0 := @this: com.android.internal.telephony.RIL;

        r23 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r24 := @parameter2: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r24);

        if r1 == null goto label5;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r25 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(115, r24, $r2);

        $z0 = <com.android.internal.telephony.util.TelephonyUtils: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r25.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r25.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid = ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" p2 = ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r21);

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r25.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r25.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label2:
        $i2 = r25.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r23);

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void iccOpenLogicalChannel(int,java.lang.String,int)>($i2, $r10, i0);

     label3:
        goto label5;

     label4:
        $r22 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r25, "iccOpenLogicalChannel", $r22);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void iccTransmitApduBasicChannel(int, int, int, int, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r10;
        java.lang.String $r4, $r7, $r9, $r11, $r14, $r19, $r25, $r29, r31;
        java.lang.Object[] $r16, $r21;
        java.lang.Integer $r17, $r18, $r22, $r23, $r24;
        java.lang.Exception $r30;
        android.os.Message r32;
        com.android.internal.telephony.RILRequest r33;
        android.hardware.radio.V1_0.SimApdu r36;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r31 := @parameter5: java.lang.String;

        r32 := @parameter6: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r32);

        if r1 == null goto label6;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r33 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(114, r32, $r2);

        $z0 = <com.android.internal.telephony.util.TelephonyUtils: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r33.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i7 = r33.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i7);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = newarray (java.lang.Object)[2];

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r16[0] = $r17;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r16[1] = $r18;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" cla = 0x%02X ins = 0x%02X", $r16);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = newarray (java.lang.Object)[3];

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r21[0] = $r22;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r21[1] = $r23;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r21[2] = $r24;

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" p1 = 0x%02X p2 = 0x%02X p3 = 0x%02X", $r21);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data = ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r29 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r29);

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r33.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i5 = r33.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label2:
        r36 = specialinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.SimApdu createSimApdu(int,int,int,int,int,int,java.lang.String)>(0, i0, i1, i2, i3, i4, r31);

     label3:
        $i6 = r33.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void iccTransmitApduBasicChannel(int,android.hardware.radio.V1_0.SimApdu)>($i6, r36);

     label4:
        goto label6;

     label5:
        $r30 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r33, "iccTransmitApduBasicChannel", $r30);

        goto label6;

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public void iccTransmitApduLogicalChannel(int, int, int, int, int, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8;
        android.hardware.radio.V1_0.IRadio r1;
        java.lang.StringBuilder $r2, $r8, $r15;
        java.lang.RuntimeException $r5;
        java.lang.String $r6, $r9, $r12, $r14, $r16, $r19, $r23, $r28, $r34, $r38, r40;
        android.os.WorkSource $r7;
        boolean $z0;
        java.lang.Object[] $r21, $r25, $r30;
        java.lang.Integer $r22, $r26, $r27, $r31, $r32, $r33;
        java.lang.Exception $r39;
        android.os.Message r41;
        com.android.internal.telephony.RILRequest r42;
        android.hardware.radio.V1_0.SimApdu r45;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r40 := @parameter6: java.lang.String;

        r41 := @parameter7: android.os.Message;

        if i0 <= 0 goto label7;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r41);

        if r1 == null goto label6;

        $r7 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r42 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(117, r41, $r7);

        $z0 = <com.android.internal.telephony.util.TelephonyUtils: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r42.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i8 = r42.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r19 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i8);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = newarray (java.lang.Object)[1];

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r21[0] = $r22;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" channel = %d", $r21);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = newarray (java.lang.Object)[2];

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r25[0] = $r26;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r25[1] = $r27;

        $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" cla = 0x%02X ins = 0x%02X", $r25);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = newarray (java.lang.Object)[3];

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r30[0] = $r31;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r30[1] = $r32;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r30[2] = $r33;

        $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" p1 = 0x%02X p2 = 0x%02X p3 = 0x%02X", $r30);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data = ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r38 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r38);

        goto label2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r42.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i6 = r42.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i6);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r14);

     label2:
        r45 = specialinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.SimApdu createSimApdu(int,int,int,int,int,int,java.lang.String)>(i0, i1, i2, i3, i4, i5, r40);

     label3:
        $i7 = r42.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void iccTransmitApduLogicalChannel(int,android.hardware.radio.V1_0.SimApdu)>($i7, r45);

     label4:
        goto label6;

     label5:
        $r39 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r42, "iccTransmitApduLogicalChannel", $r39);

        goto label6;

     label6:
        return;

     label7:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid channel in iccTransmitApduLogicalChannel: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public void invokeOemRilRequestRaw(byte[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.deprecated.V1_0.IOemHook r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r11, $r14;
        int $i0, $i1;
        java.util.ArrayList $r15;
        java.lang.Exception $r16;
        byte[] r17;
        android.os.Message r18;
        com.android.internal.telephony.RILRequest r19;

        r0 := @this: com.android.internal.telephony.RIL;

        r17 := @parameter0: byte[];

        r18 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook getOemHookProxy(android.os.Message)>(r18);

        if r1 == null goto label5;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r19 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(59, r18, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r19.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r19.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r11 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r17);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r14);

     label1:
        $i1 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.util.ArrayList primitiveArrayToArrayList(byte[])>(r17);

        interfaceinvoke r1.<android.hardware.radio.deprecated.V1_0.IOemHook: void sendRequestRaw(int,java.util.ArrayList)>($i1, $r15);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r19, "invokeOemRilRequestRaw", $r16);

     label4:
        goto label6;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("Radio Oem Hook Service is disabled for P and later devices. ");

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.deprecated.V1_0.IOemHook r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.WorkSource $r3;
        int $i0, $i1, i2, i3;
        java.lang.StringBuilder $r4, $r14;
        java.lang.String $r5, $r8, $r12, $r16, r22;
        java.util.List $r13;
        java.lang.Exception $r19;
        java.lang.String[] r20;
        android.os.Message r21;
        java.util.ArrayList r25;

        r0 := @this: com.android.internal.telephony.RIL;

        r20 := @parameter0: java.lang.String[];

        r21 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook getOemHookProxy(android.os.Message)>(r21);

        if r1 == null goto label7;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(60, r21, $r3);

        r22 = "";

        i2 = 0;

     label1:
        $i0 = lengthof r20;

        if i2 >= $i0 goto label2;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r16 = r20[i2];

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r22 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" strings = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label3:
        i3 = r2.<com.android.internal.telephony.RILRequest: int mSerial>;

        r25 = new java.util.ArrayList;

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r20);

        specialinvoke r25.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);

        interfaceinvoke r1.<android.hardware.radio.deprecated.V1_0.IOemHook: void sendRequestStrings(int,java.util.ArrayList)>(i3, r25);

     label4:
        goto label6;

     label5:
        $r19 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r2, "invokeOemRilRequestStrings", $r19);

     label6:
        goto label8;

     label7:
        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("Radio Oem Hook Service is disabled for P and later devices. ");

     label8:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    com.android.internal.telephony.RadioCapability makeStaticRadioCapability()
    {
        com.android.internal.telephony.RIL r0;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        boolean $z0;
        com.android.internal.telephony.RadioCapability $r4;
        java.lang.Integer $r5;
        int $i0, i1;
        java.lang.StringBuilder $r6;
        java.lang.String $r9, r10;

        r0 := @this: com.android.internal.telephony.RIL;

        i1 = 0;

        $r2 = r0.<com.android.internal.telephony.RIL: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        r10 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039936);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r10);

        if $z0 != 0 goto label1;

        i1 = staticinvoke <android.telephony.RadioAccessFamily: int rafTypeFromString(java.lang.String)>(r10);

     label1:
        $r4 = new com.android.internal.telephony.RadioCapability;

        $r5 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        specialinvoke $r4.<com.android.internal.telephony.RadioCapability: void <init>(int,int,int,int,java.lang.String,int)>($i0, 0, 0, i1, "", 1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Faking RIL_REQUEST_GET_RADIO_CAPABILITY response using ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        return $r4;
    }

    void notifyRegistrantsCdmaInfoRec(com.android.internal.telephony.cdma.CdmaInformationRecords)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.cdma.CdmaInformationRecords r1;
        java.lang.Object $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r12, $r15, $r17, $r20, $r22, $r25, $r27, $r30, $r32, $r35, $r37, $r40, $r42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.internal.telephony.RegistrantList $r9, $r13, $r14, $r18, $r19, $r23, $r24, $r28, $r29, $r33, $r34, $r38, $r39, $r43;
        android.os.AsyncResult $r11, $r16, $r21, $r26, $r31, $r36, $r41;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaInformationRecords;

        $r2 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z0 = $r2 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaDisplayInfoRec;

        if $z0 == 0 goto label1;

        $r39 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mDisplayInfoRegistrants>;

        if $r39 == null goto label7;

        $r40 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r40);

        $r43 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mDisplayInfoRegistrants>;

        $r41 = new android.os.AsyncResult;

        $r42 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r41.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r42, null);

        virtualinvoke $r43.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r41);

        goto label7;

     label1:
        $r3 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z1 = $r3 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaSignalInfoRec;

        if $z1 == 0 goto label2;

        $r34 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mSignalInfoRegistrants>;

        if $r34 == null goto label7;

        $r35 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r35);

        $r38 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mSignalInfoRegistrants>;

        $r36 = new android.os.AsyncResult;

        $r37 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r36.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r37, null);

        virtualinvoke $r38.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r36);

        goto label7;

     label2:
        $r4 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z2 = $r4 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaNumberInfoRec;

        if $z2 == 0 goto label3;

        $r29 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mNumberInfoRegistrants>;

        if $r29 == null goto label7;

        $r30 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r30);

        $r33 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mNumberInfoRegistrants>;

        $r31 = new android.os.AsyncResult;

        $r32 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r31.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r32, null);

        virtualinvoke $r33.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r31);

        goto label7;

     label3:
        $r5 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z3 = $r5 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaRedirectingNumberInfoRec;

        if $z3 == 0 goto label4;

        $r24 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mRedirNumInfoRegistrants>;

        if $r24 == null goto label7;

        $r25 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r25);

        $r28 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mRedirNumInfoRegistrants>;

        $r26 = new android.os.AsyncResult;

        $r27 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r26.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r27, null);

        virtualinvoke $r28.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r26);

        goto label7;

     label4:
        $r6 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z4 = $r6 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaLineControlInfoRec;

        if $z4 == 0 goto label5;

        $r19 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mLineControlInfoRegistrants>;

        if $r19 == null goto label7;

        $r20 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r20);

        $r23 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mLineControlInfoRegistrants>;

        $r21 = new android.os.AsyncResult;

        $r22 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r21.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r22, null);

        virtualinvoke $r23.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r21);

        goto label7;

     label5:
        $r7 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z5 = $r7 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53ClirInfoRec;

        if $z5 == 0 goto label6;

        $r14 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mT53ClirInfoRegistrants>;

        if $r14 == null goto label7;

        $r15 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r15);

        $r18 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mT53ClirInfoRegistrants>;

        $r16 = new android.os.AsyncResult;

        $r17 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r16.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r17, null);

        virtualinvoke $r18.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r16);

        goto label7;

     label6:
        $r8 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z6 = $r8 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53AudioControlInfoRec;

        if $z6 == 0 goto label7;

        $r9 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mT53AudCntrlInfoRegistrants>;

        if $r9 == null goto label7;

        $r10 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r10);

        $r13 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mT53AudCntrlInfoRegistrants>;

        $r11 = new android.os.AsyncResult;

        $r12 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r11.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r12, null);

        virtualinvoke $r13.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r11);

     label7:
        return;
    }

    void notifyRegistrantsRilConnectionChanged(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        com.android.internal.telephony.RegistrantList $r1, $r4;
        android.os.AsyncResult $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r0.<com.android.internal.telephony.RIL: int mRilVersion> = i0;

        $r1 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mRilConnectedRegistrants>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mRilConnectedRegistrants>;

        $r2 = new android.os.AsyncResult;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i0);

        specialinvoke $r2.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r3, null);

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r2);

     label1:
        return;
    }

    public void nvReadItem(int, android.os.Message, android.os.WorkSource)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r5, $r9;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.os.WorkSource r12, r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r11 := @parameter1: android.os.Message;

        r12 := @parameter2: android.os.WorkSource;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: android.os.WorkSource getDeafultWorkSourceIfInvalid(android.os.WorkSource)>(r12);

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r14 == null goto label4;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(118, r11, r13);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r5 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" itemId = ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void nvReadItem(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "nvReadItem", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void nvResetConfig(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2, $i3;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(121, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resetType = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        $i3 = staticinvoke <com.android.internal.telephony.RIL: int convertToHalResetNvType(int)>(i0);

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void nvResetConfig(int,int)>($i2, $i3);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "nvResetConfig", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void nvWriteCdmaPrl(byte[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r10, $r12;
        int $i0, $i1, $i2, i4;
        java.util.ArrayList $r13;
        byte $b3;
        java.lang.Byte $r14;
        java.lang.Exception $r15;
        byte[] r16;
        android.os.Message r17;
        com.android.internal.telephony.RILRequest r18;

        r0 := @this: com.android.internal.telephony.RIL;

        r16 := @parameter0: byte[];

        r17 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r17);

        if r1 == null goto label5;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(120, r17, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r18.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r18.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PreferredRoamingList = 0x");

        $r10 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r16);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        i4 = 0;

     label1:
        $i1 = lengthof r16;

        if i4 >= $i1 goto label2;

        $b3 = r16[i4];

        $r14 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        i4 = i4 + 1;

        goto label1;

     label2:
        $i2 = r18.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void nvWriteCdmaPrl(int,java.util.ArrayList)>($i2, $r13);

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r18, "nvWriteCdmaPrl", $r15);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void nvWriteItem(int, java.lang.String, android.os.Message, android.os.WorkSource)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r5, $r11, $r13, r15;
        android.hardware.radio.V1_0.NvWriteItem $r12;
        java.lang.Exception $r14;
        android.os.Message r16;
        android.os.WorkSource r17, r18;
        android.hardware.radio.V1_0.IRadio r19;
        com.android.internal.telephony.RILRequest r20;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r15 := @parameter1: java.lang.String;

        r16 := @parameter2: android.os.Message;

        r17 := @parameter3: android.os.WorkSource;

        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: android.os.WorkSource getDeafultWorkSourceIfInvalid(android.os.WorkSource)>(r17);

        r19 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r19 == null goto label4;

        r20 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(119, r16, r18);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r20.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r20.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r5 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" itemId = ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" itemValue = ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r11 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        $r12 = new android.hardware.radio.V1_0.NvWriteItem;

        specialinvoke $r12.<android.hardware.radio.V1_0.NvWriteItem: void <init>()>();

        $r12.<android.hardware.radio.V1_0.NvWriteItem: int itemId> = i0;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r15);

        $r12.<android.hardware.radio.V1_0.NvWriteItem: java.lang.String value> = $r13;

     label1:
        $i2 = r20.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r19.<android.hardware.radio.V1_0.IRadio: void nvWriteItem(int,android.hardware.radio.V1_0.NvWriteItem)>($i2, $r12);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r20, "nvWriteItem", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void onSlotActiveStatusChange(boolean)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        java.lang.Throwable $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        entermonitor r0;

        if z0 == 0 goto label3;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(null);

        virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.deprecated.V1_0.IOemHook getOemHookProxy(android.os.Message)>(null);

     label2:
        goto label4;

     label3:
        specialinvoke r0.<com.android.internal.telephony.RIL: void resetProxyAndRequestList()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void processIndication(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        specialinvoke r0.<com.android.internal.telephony.RIL: void sendAck()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("Unsol response received; Sending ack to ril.cpp");

     label1:
        return;
    }

    void processRequestAck(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.util.SparseArray $r1, r15;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3, $r10;
        java.lang.String $r4, $r7, $r9, $r13;
        java.lang.Throwable $r14;
        com.android.internal.telephony.RILRequest r16;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r15 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        entermonitor r15;

     label1:
        $r1 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r16 = (com.android.internal.telephony.RILRequest) $r2;

        exitmonitor r15;

     label2:
        if r16 != null goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processRequestAck: Unexpected solicited ack response! serial: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("RILJ", $r13);

        goto label4;

     label3:
        specialinvoke r0.<com.android.internal.telephony.RIL: void decrementWakeLock(com.android.internal.telephony.RILRequest)>(r16);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r16.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Ack < ");

        $i1 = r16.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label4:
        return;

     label5:
        $r14 := @caughtexception;

     label6:
        exitmonitor r15;

     label7:
        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public com.android.internal.telephony.RILRequest processResponse(android.hardware.radio.V1_0.RadioResponseInfo)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, i10, i11, i12, i13;
        com.android.internal.telephony.RegistrantList $r1, $r7, $r10, $r13, $r16, $r58;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        com.android.internal.telephony.Registrant $r3, $r4;
        java.lang.StringBuilder $r5, $r11, $r17, $r26, $r34, $r41;
        java.lang.String $r9, $r15, $r19, $r22, $r25, $r31, $r35, $r38, $r40, $r44;
        android.util.SparseArray $r32, r47;
        java.lang.Object $r33;
        java.lang.Throwable $r45;
        android.hardware.radio.V1_0.RadioResponseInfo r46;
        com.android.internal.telephony.RILRequest r48, r53;
        com.android.internal.telephony.RadioBugDetector r50, r55;

        r0 := @this: com.android.internal.telephony.RIL;

        r46 := @parameter0: android.hardware.radio.V1_0.RadioResponseInfo;

        i0 = r46.<android.hardware.radio.V1_0.RadioResponseInfo: int serial>;

        i10 = r46.<android.hardware.radio.V1_0.RadioResponseInfo: int error>;

        i11 = r46.<android.hardware.radio.V1_0.RadioResponseInfo: int type>;

        if i11 != 1 goto label09;

        r47 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        entermonitor r47;

     label01:
        $r32 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $r33 = virtualinvoke $r32.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r48 = (com.android.internal.telephony.RILRequest) $r33;

        exitmonitor r47;

     label02:
        if r48 != null goto label03;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected solicited ack response! sn: ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("RILJ", $r44);

        goto label05;

     label03:
        specialinvoke r0.<com.android.internal.telephony.RIL: void decrementWakeLock(com.android.internal.telephony.RILRequest)>(r48);

        r50 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioBugDetector mRadioBugDetector>;

        if r50 == null goto label04;

        $i8 = r48.<com.android.internal.telephony.RILRequest: int mRequest>;

        virtualinvoke r50.<com.android.internal.telephony.RadioBugDetector: void detectRadioBug(int,int)>($i8, i10);

     label04:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke r48.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Ack < ");

        $i7 = r48.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r38 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i7);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r40);

     label05:
        return r48;

     label06:
        $r45 := @caughtexception;

     label07:
        exitmonitor r47;

     label08:
        throw $r45;

     label09:
        r53 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest findAndRemoveRequestFromList(int)>(i0);

        if r53 != null goto label10;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processResponse: Unexpected response! serial: ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error: ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", $r31);

        return null;

     label10:
        specialinvoke r0.<com.android.internal.telephony.RIL: void addToRilHistogram(com.android.internal.telephony.RILRequest)>(r53);

        r55 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RadioBugDetector mRadioBugDetector>;

        if r55 == null goto label11;

        $i5 = r53.<com.android.internal.telephony.RILRequest: int mRequest>;

        virtualinvoke r55.<com.android.internal.telephony.RadioBugDetector: void detectRadioBug(int,int)>($i5, i10);

     label11:
        if i11 != 2 goto label12;

        specialinvoke r0.<com.android.internal.telephony.RIL: void sendAck()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response received for ");

        $r19 = virtualinvoke r53.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i4 = r53.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r22 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Sending ack to ril.cpp");

        $r25 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r25);

     label12:
        i12 = r53.<com.android.internal.telephony.RILRequest: int mRequest>;

        if i12 == 3 goto label14;

        if i12 == 5 goto label14;

        if i12 == 129 goto label13;

        goto label15;

     label13:
        virtualinvoke r0.<com.android.internal.telephony.RIL: void setRadioState(int,boolean)>(2, 0);

        goto label15;

     label14:
        $r1 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mIccStatusChangedRegistrants>;

        if $r1 == null goto label15;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ON enter sim puk fakeSimStatusChanged: reg count=");

        $r13 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mIccStatusChangedRegistrants>;

        $i3 = virtualinvoke $r13.<com.android.internal.telephony.RegistrantList: int size()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        $r16 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r16.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label15:
        if i10 == 0 goto label18;

        i13 = r53.<com.android.internal.telephony.RILRequest: int mRequest>;

        if i13 == 2 goto label16;

        if i13 == 4 goto label16;

        if i13 == 43 goto label16;

        if i13 == 6 goto label16;

        if i13 == 7 goto label16;

        goto label17;

     label16:
        $r58 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mIccStatusChangedRegistrants>;

        if $r58 == null goto label17;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ON some errors fakeSimStatusChanged: reg count=");

        $r7 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mIccStatusChangedRegistrants>;

        $i2 = virtualinvoke $r7.<com.android.internal.telephony.RegistrantList: int size()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        $r10 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r10.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label17:
        goto label20;

     label18:
        $i1 = r53.<com.android.internal.telephony.RILRequest: int mRequest>;

        if $i1 == 14 goto label19;

        goto label20;

     label19:
        $r2 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(0);

        if $z0 == 0 goto label20;

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.Registrant mEmergencyCallbackModeRegistrant>;

        if $r3 == null goto label20;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("testing emergency call, notify ECM Registrants");

        $r4 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.Registrant mEmergencyCallbackModeRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label20:
        return r53;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
    }

    public void processResponseDone(com.android.internal.telephony.RILRequest, android.hardware.radio.V1_0.RadioResponseInfo, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        android.hardware.radio.V1_0.RadioResponseInfo r2;
        java.lang.Object r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r4, $r13;
        java.lang.String $r5, $r8, $r12, $r14, $r17, $r20, $r22;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.RILRequest;

        r2 := @parameter1: android.hardware.radio.V1_0.RadioResponseInfo;

        r3 := @parameter2: java.lang.Object;

        $i0 = r2.<android.hardware.radio.V1_0.RadioResponseInfo: int error>;

        if $i0 != 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("< ");

        $i4 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r17 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i5 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r20 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String retToString(int,java.lang.Object)>($i5, r3);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r22);

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("< ");

        $i1 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error ");

        $i2 = r2.<android.hardware.radio.V1_0.RadioResponseInfo: int error>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $i3 = r2.<android.hardware.radio.V1_0.RadioResponseInfo: int error>;

        virtualinvoke r1.<com.android.internal.telephony.RILRequest: void onError(int,java.lang.Object)>($i3, r3);

     label2:
        specialinvoke r0.<com.android.internal.telephony.RIL: void processResponseCleanUp(com.android.internal.telephony.RILRequest,android.hardware.radio.V1_0.RadioResponseInfo,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public void processResponseFallback(com.android.internal.telephony.RILRequest, android.hardware.radio.V1_0.RadioResponseInfo, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        android.hardware.radio.V1_0.RadioResponseInfo r2;
        java.lang.Object r3;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r12;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.RILRequest;

        r2 := @parameter1: android.hardware.radio.V1_0.RadioResponseInfo;

        r3 := @parameter2: java.lang.Object;

        $i0 = r2.<android.hardware.radio.V1_0.RadioResponseInfo: int error>;

        if $i0 != 6 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("< ");

        $i1 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" request not supported, falling back");

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label1:
        specialinvoke r0.<com.android.internal.telephony.RIL: void processResponseCleanUp(com.android.internal.telephony.RILRequest,android.hardware.radio.V1_0.RadioResponseInfo,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public void pullLceData(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(134, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void pullLceData(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "pullLceData", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void queryAvailableBandMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(66, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getAvailableBandModes(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "queryAvailableBandMode", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void queryCLIP(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(55, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getClip(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "queryCLIP", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void queryCallForwardStatus(int, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, $i2, $i3, $i4;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r13, $r15, r17;
        android.hardware.radio.V1_0.CallForwardInfo $r14;
        java.lang.Exception $r16;
        android.os.Message r18;
        com.android.internal.telephony.RILRequest r19;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r17 := @parameter2: java.lang.String;

        r18 := @parameter3: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r18);

        if r1 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r19 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(33, r18, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r19.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r19.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cfreason = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" serviceClass = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        $r14 = new android.hardware.radio.V1_0.CallForwardInfo;

        specialinvoke $r14.<android.hardware.radio.V1_0.CallForwardInfo: void <init>()>();

        $r14.<android.hardware.radio.V1_0.CallForwardInfo: int reason> = i0;

        $r14.<android.hardware.radio.V1_0.CallForwardInfo: int serviceClass> = i1;

        $i3 = staticinvoke <android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>(r17);

        $r14.<android.hardware.radio.V1_0.CallForwardInfo: int toa> = $i3;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r17);

        $r14.<android.hardware.radio.V1_0.CallForwardInfo: java.lang.String number> = $r15;

        $r14.<android.hardware.radio.V1_0.CallForwardInfo: int timeSeconds> = 0;

     label1:
        $i4 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void getCallForwardStatus(int,android.hardware.radio.V1_0.CallForwardInfo)>($i4, $r14);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r19, "queryCallForwardStatus", $r16);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void queryCallWaiting(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(35, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" serviceClass = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void getCallWaiting(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "queryCallWaiting", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void queryCdmaRoamingPreference(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(79, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getCdmaRoamingPreference(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "queryCdmaRoamingPreference", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void queryFacilityLock(java.lang.String, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        int i0;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void queryFacilityLockForApp(java.lang.String,java.lang.String,int,java.lang.String,android.os.Message)>(r1, r2, i0, null, r3);

        return;
    }

    public void queryFacilityLockForApp(java.lang.String, java.lang.String, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r7, $r10, $r18, $r19, $r20, $r21, r23;
        int i0, $i1, $i2;
        android.hardware.radio.V1_0.IRadio r3;
        android.os.WorkSource $r5;
        java.lang.StringBuilder $r6;
        java.lang.Exception $r22;
        android.os.Message r24;
        com.android.internal.telephony.RILRequest r25;

        r0 := @this: com.android.internal.telephony.RIL;

        r23 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r24 := @parameter4: android.os.Message;

        r3 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r24);

        if r3 == null goto label4;

        $r5 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r25 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(42, r24, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r25.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r25.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" facility = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" serviceClass = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appId = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r18);

     label1:
        $i2 = r25.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r19 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r23);

        $r20 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        $r21 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r2);

        interfaceinvoke r3.<android.hardware.radio.V1_0.IRadio: void getFacilityLockForApp(int,java.lang.String,java.lang.String,int,java.lang.String)>($i2, $r19, $r20, i0, $r21);

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r25, "getFacilityLockForApp", $r22);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void queryTTYMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(81, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void getTTYMode(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "queryTTYMode", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void rejectCall(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(17, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void rejectCall(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "rejectCall", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void reportSmsMemoryStatus(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        int $i0, $i1;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(102, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void reportSmsMemoryStatus(int,boolean)>($i1, z0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "reportSmsMemoryStatus", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void reportStkServiceIsRunning(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(103, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void reportStkServiceIsRunning(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "reportStkServiceIsRunning", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void requestIccSimAuthentication(int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r6, $r9, $r11, $r12, $r13, r15;
        android.hardware.radio.V1_0.IRadio r2;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        java.lang.Exception $r14;
        android.os.Message r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r15 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r16 := @parameter3: android.os.Message;

        r2 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r2 == null goto label4;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(125, r16, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i2 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r15);

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        interfaceinvoke r2.<android.hardware.radio.V1_0.IRadio: void requestIccSimAuthentication(int,int,java.lang.String,java.lang.String)>($i2, i0, $r12, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "requestIccSimAuthentication", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void requestShutdown(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(129, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void requestShutdown(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "requestShutdown", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void resetRadio(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("resetRadio not expected to be called");

        throw $r2;
    }

    void riljLog(java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r3;
        java.lang.Integer $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [PHONE");

        $r6 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r9);

        return;
    }

    void riljLoge(java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r3;
        java.lang.Integer $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [PHONE");

        $r6 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", $r9);

        return;
    }

    void riljLoge(java.lang.String, java.lang.Exception)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r10;
        java.lang.Exception r2;
        java.lang.StringBuilder $r4;
        java.lang.Integer $r7;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [PHONE");

        $r7 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RILJ", $r10, r2);

        return;
    }

    void riljLogv(java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r3;
        java.lang.Integer $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [PHONE");

        $r6 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("RILJ", $r9);

        return;
    }

    public void sendBurstDtmf(java.lang.String, int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, $i2, $i3;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r16, $r17, r19;
        java.lang.Exception $r18;
        android.os.Message r20;
        com.android.internal.telephony.RILRequest r21;

        r0 := @this: com.android.internal.telephony.RIL;

        r19 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r20 := @parameter3: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r20);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r21 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(85, r20, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r21.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r21.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dtmfString = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" off = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

     label1:
        $i3 = r21.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r17 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r19);

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void sendBurstDtmf(int,java.lang.String,int,int)>($i3, $r17, i0, i1);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r21, "sendBurstDtmf", $r18);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void sendCDMAFeatureCode(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r12, $r13, r15;
        int $i0, $i1;
        java.lang.Exception $r14;
        android.os.Message r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(84, r16, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" featureCode = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label1:
        $i1 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r15);

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void sendCDMAFeatureCode(int,java.lang.String)>($i1, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "sendCDMAFeatureCode", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void sendCdmaSMSExpectMore(byte[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_5.IRadio r1;
        com.android.internal.telephony.HalVersion $r2, $r3;
        boolean $z0;
        android.hardware.radio.V1_0.IRadio $r4;
        android.os.WorkSource $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r10, $r12;
        int $i0, $i1, $i2, $i3;
        android.hardware.radio.V1_0.CdmaSmsMessage $r13;
        java.lang.Integer $r14;
        com.android.internal.telephony.metrics.TelephonyMetrics $r15;
        java.lang.Exception $r16;
        byte[] r17;
        android.os.Message r18;
        com.android.internal.telephony.RILRequest r19;

        r0 := @this: com.android.internal.telephony.RIL;

        r17 := @parameter0: byte[];

        r18 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r2);

        if $z0 == 0 goto label5;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r18);

        r1 = (android.hardware.radio.V1_5.IRadio) $r4;

        if r1 == null goto label4;

        $r5 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r19 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(148, r18, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r19.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r19.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = new android.hardware.radio.V1_0.CdmaSmsMessage;

        specialinvoke $r13.<android.hardware.radio.V1_0.CdmaSmsMessage: void <init>()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructCdmaSendSmsRilRequest(android.hardware.radio.V1_0.CdmaSmsMessage,byte[])>($r13, r17);

     label1:
        $i1 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_5.IRadio: void sendCdmaSmsExpectMore(int,android.hardware.radio.V1_0.CdmaSmsMessage)>($i1, $r13);

        $r15 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r14 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i2 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $i3 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke $r15.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilSendSms(int,int,int,int)>($i2, $i3, 2, 2);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r19, "sendCdmaSMSExpectMore", $r16);

     label4:
        goto label6;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.RIL: void sendCdmaSms(byte[],android.os.Message)>(r17, r18);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void sendCdmaSms(byte[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1, $i2, $i3;
        android.hardware.radio.V1_0.CdmaSmsMessage $r10;
        java.lang.Integer $r11;
        com.android.internal.telephony.metrics.TelephonyMetrics $r12;
        java.lang.Exception $r13;
        byte[] r14;
        android.os.Message r15;
        com.android.internal.telephony.RILRequest r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r14 := @parameter0: byte[];

        r15 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r15);

        if r1 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r16 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(87, r15, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r16.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r16.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        $r10 = new android.hardware.radio.V1_0.CdmaSmsMessage;

        specialinvoke $r10.<android.hardware.radio.V1_0.CdmaSmsMessage: void <init>()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructCdmaSendSmsRilRequest(android.hardware.radio.V1_0.CdmaSmsMessage,byte[])>($r10, r14);

     label1:
        $i1 = r16.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void sendCdmaSms(int,android.hardware.radio.V1_0.CdmaSmsMessage)>($i1, $r10);

        $r12 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r11 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i2 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $i3 = r16.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke $r12.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilSendSms(int,int,int,int)>($i2, $i3, 2, 2);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r16, "sendCdmaSms", $r13);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void sendDeviceState(int, boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        boolean z0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r13;
        java.lang.Exception $r14;
        android.os.Message r15;
        android.hardware.radio.V1_0.IRadio r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r15 := @parameter2: android.os.Message;

        r16 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r15);

        if r16 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(138, r15, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label1:
        $i2 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r16.<android.hardware.radio.V1_0.IRadio: void sendDeviceState(int,int,boolean)>($i2, i0, z0);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "sendDeviceState", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void sendDtmf(char, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        char c0;
        int i1, $i2;
        android.os.WorkSource $r1;
        java.lang.StringBuilder $r2, r17;
        java.lang.String $r3, $r6, $r8, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        c0 := @parameter0: char;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r1 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(24, r13, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r6 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r8);

     label1:
        i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void sendDtmf(int,java.lang.String)>(i1, $r11);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "sendDtmf", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void sendEnvelope(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r12, $r13, r15;
        int $i0, $i1;
        java.lang.Exception $r14;
        android.os.Message r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(69, r16, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contents = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label1:
        $i1 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r15);

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void sendEnvelope(int,java.lang.String)>($i1, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "sendEnvelope", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void sendEnvelopeWithStatus(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r12, $r13, r15;
        int $i0, $i1;
        java.lang.Exception $r14;
        android.os.Message r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(107, r16, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contents = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label1:
        $i1 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r15);

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void sendEnvelopeWithStatus(int,java.lang.String)>($i1, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "sendEnvelopeWithStatus", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void sendImsCdmaSms(byte[], int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r10;
        android.hardware.radio.V1_0.ImsSmsMessage $r11;
        android.hardware.radio.V1_0.CdmaSmsMessage $r12;
        java.util.ArrayList $r13;
        java.lang.Integer $r14;
        com.android.internal.telephony.metrics.TelephonyMetrics $r15;
        java.lang.Exception $r16;
        byte[] r17;
        android.os.Message r18;
        com.android.internal.telephony.RILRequest r19;
        byte b6;
        boolean z1;

        r0 := @this: com.android.internal.telephony.RIL;

        r17 := @parameter0: byte[];

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        r18 := @parameter3: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r18);

        if r1 == null goto label6;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r19 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(113, r18, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r19.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r19.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        $r11 = new android.hardware.radio.V1_0.ImsSmsMessage;

        specialinvoke $r11.<android.hardware.radio.V1_0.ImsSmsMessage: void <init>()>();

        $r11.<android.hardware.radio.V1_0.ImsSmsMessage: int tech> = 2;

        b6 = (byte) i5;

        z1 = 1;

        if b6 < 1 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r11.<android.hardware.radio.V1_0.ImsSmsMessage: boolean retry> = z1;

        $r11.<android.hardware.radio.V1_0.ImsSmsMessage: int messageRef> = i0;

        $r12 = new android.hardware.radio.V1_0.CdmaSmsMessage;

        specialinvoke $r12.<android.hardware.radio.V1_0.CdmaSmsMessage: void <init>()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructCdmaSendSmsRilRequest(android.hardware.radio.V1_0.CdmaSmsMessage,byte[])>($r12, r17);

        $r13 = $r11.<android.hardware.radio.V1_0.ImsSmsMessage: java.util.ArrayList cdmaMessage>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label3:
        $i2 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void sendImsSms(int,android.hardware.radio.V1_0.ImsSmsMessage)>($i2, $r11);

        $r15 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r14 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i3 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $i4 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke $r15.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilSendSms(int,int,int,int)>($i3, $i4, 3, 2);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r19, "sendImsCdmaSms", $r16);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public void sendImsGsmSms(java.lang.String, java.lang.String, int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r10, r16;
        int i0, i1, $i2, $i4, $i5, $i6;
        android.hardware.radio.V1_0.IRadio r2;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        android.hardware.radio.V1_0.ImsSmsMessage $r11;
        byte $b3;
        java.util.ArrayList $r12;
        java.lang.Integer $r13;
        com.android.internal.telephony.metrics.TelephonyMetrics $r14;
        java.lang.Exception $r15;
        android.os.Message r17;
        com.android.internal.telephony.RILRequest r18;
        boolean z1;
        android.hardware.radio.V1_0.GsmSmsMessage r21;

        r0 := @this: com.android.internal.telephony.RIL;

        r16 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r17 := @parameter4: android.os.Message;

        r2 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r17);

        if r2 == null goto label6;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(113, r17, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r18.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r18.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        $r11 = new android.hardware.radio.V1_0.ImsSmsMessage;

        specialinvoke $r11.<android.hardware.radio.V1_0.ImsSmsMessage: void <init>()>();

        $r11.<android.hardware.radio.V1_0.ImsSmsMessage: int tech> = 1;

        $b3 = (byte) i0;

        if $b3 < 1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r11.<android.hardware.radio.V1_0.ImsSmsMessage: boolean retry> = z1;

        $r11.<android.hardware.radio.V1_0.ImsSmsMessage: int messageRef> = i1;

        r21 = specialinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.GsmSmsMessage constructGsmSendSmsRilRequest(java.lang.String,java.lang.String)>(r16, r1);

        $r12 = $r11.<android.hardware.radio.V1_0.ImsSmsMessage: java.util.ArrayList gsmMessage>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

     label3:
        $i4 = r18.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r2.<android.hardware.radio.V1_0.IRadio: void sendImsSms(int,android.hardware.radio.V1_0.ImsSmsMessage)>($i4, $r11);

        $r14 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r13 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i5 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i6 = r18.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke $r14.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilSendSms(int,int,int,int)>($i5, $i6, 3, 1);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r18, "sendImsGsmSms", $r15);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public void sendSMS(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r9, $r11, r15;
        android.hardware.radio.V1_0.IRadio r2;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r12;
        com.android.internal.telephony.metrics.TelephonyMetrics $r13;
        java.lang.Exception $r14;
        android.os.Message r16;
        com.android.internal.telephony.RILRequest r17;
        android.hardware.radio.V1_0.GsmSmsMessage r18;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r16 := @parameter2: android.os.Message;

        r2 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r2 == null goto label4;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(25, r16, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.GsmSmsMessage constructGsmSendSmsRilRequest(java.lang.String,java.lang.String)>(r15, r1);

     label1:
        $i1 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r2.<android.hardware.radio.V1_0.IRadio: void sendSms(int,android.hardware.radio.V1_0.GsmSmsMessage)>($i1, r18);

        $r13 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r12 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $i3 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke $r13.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilSendSms(int,int,int,int)>($i2, $i3, 1, 1);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "sendSMS", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void sendSMSExpectMore(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r9, $r11, r15;
        android.hardware.radio.V1_0.IRadio r2;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r12;
        com.android.internal.telephony.metrics.TelephonyMetrics $r13;
        java.lang.Exception $r14;
        android.os.Message r16;
        com.android.internal.telephony.RILRequest r17;
        android.hardware.radio.V1_0.GsmSmsMessage r18;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r16 := @parameter2: android.os.Message;

        r2 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r2 == null goto label4;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(26, r16, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.GsmSmsMessage constructGsmSendSmsRilRequest(java.lang.String,java.lang.String)>(r15, r1);

     label1:
        $i1 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r2.<android.hardware.radio.V1_0.IRadio: void sendSMSExpectMore(int,android.hardware.radio.V1_0.GsmSmsMessage)>($i1, r18);

        $r13 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r12 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $i3 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke $r13.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilSendSms(int,int,int,int)>($i2, $i3, 1, 1);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "sendSMSExpectMore", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void sendTerminalResponse(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r13, $r14, r16, r18;
        int $i0, $i1;
        boolean $z0;
        java.lang.Exception $r15;
        android.os.Message r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r16 := @parameter0: java.lang.String;

        r17 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r17);

        if r1 == null goto label6;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(70, r17, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contents = ");

        $z0 = <com.android.internal.telephony.util.TelephonyUtils: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label1;

        r18 = r16;

        goto label2;

     label1:
        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.String censoredTerminalResponse(java.lang.String)>(r16);

     label2:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label3:
        $i1 = r2.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r16);

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void sendTerminalResponseToSim(int,java.lang.String)>($i1, $r14);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r2, "sendTerminalResponse", $r15);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public void sendUSSD(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r12, $r13, r15;
        int $i0, $i1;
        java.lang.Exception $r14;
        android.os.Message r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(29, r16, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ussd = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*******");

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label1:
        $i1 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r15);

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void sendUssd(int,java.lang.String)>($i1, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "sendUSSD", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void separateConnection(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(52, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gsmIndex = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void separateConnection(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "separateConnection", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setAllowedCarriers(android.telephony.CarrierRestrictionRules, android.os.Message, android.os.WorkSource)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        int $i0, $i1, $i2, $i3, $i4, i6;
        com.android.internal.telephony.HalVersion $r12, $r13;
        boolean $z1, $z2, z3, z4, z5, z6;
        android.hardware.radio.V1_0.CarrierRestrictions $r14;
        java.util.List $r15, $r19, $r21, $r23;
        java.util.ArrayList $r16, $r22, $r24;
        com.android.internal.telephony.CommandException $r17;
        android.hardware.radio.V1_4.CarrierRestrictionsWithPriority $r20;
        java.lang.Exception $r25, $r26;
        android.telephony.CarrierRestrictionRules r27;
        android.os.Message r28;
        android.os.WorkSource r29, r30;
        android.hardware.radio.V1_0.IRadio r31;
        com.android.internal.telephony.RILRequest r32;
        byte b5;
        android.hardware.radio.V1_4.IRadio r33;

        r0 := @this: com.android.internal.telephony.RIL;

        r27 := @parameter0: android.telephony.CarrierRestrictionRules;

        r28 := @parameter1: android.os.Message;

        r29 := @parameter2: android.os.WorkSource;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("RIL.java - setAllowedCarriers");

        staticinvoke <com.android.internal.telephony.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r27, "Carrier restriction cannot be null.");

        r30 = specialinvoke r0.<com.android.internal.telephony.RIL: android.os.WorkSource getDeafultWorkSourceIfInvalid(android.os.WorkSource)>(r29);

        r31 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r28);

        if r31 != null goto label01;

        return;

     label01:
        r32 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(136, r28, r30);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r32.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r32.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" params: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        b5 = 0;

        i6 = virtualinvoke r27.<android.telephony.CarrierRestrictionRules: int getMultiSimPolicy()>();

        z3 = 1;

        if i6 == 1 goto label02;

        goto label03;

     label02:
        b5 = 1;

     label03:
        $r13 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r12 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4>;

        $z1 = virtualinvoke $r13.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r12);

        if $z1 == 0 goto label10;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("RIL.java - Using IRadio 1.4 or greater");

        r33 = (android.hardware.radio.V1_4.IRadio) r31;

        $r20 = new android.hardware.radio.V1_4.CarrierRestrictionsWithPriority;

        specialinvoke $r20.<android.hardware.radio.V1_4.CarrierRestrictionsWithPriority: void <init>()>();

        $r21 = virtualinvoke r27.<android.telephony.CarrierRestrictionRules: java.util.List getAllowedCarriers()>();

        $r22 = staticinvoke <com.android.internal.telephony.RIL: java.util.ArrayList createCarrierRestrictionList(java.util.List)>($r21);

        $r20.<android.hardware.radio.V1_4.CarrierRestrictionsWithPriority: java.util.ArrayList allowedCarriers> = $r22;

        $r23 = virtualinvoke r27.<android.telephony.CarrierRestrictionRules: java.util.List getExcludedCarriers()>();

        $r24 = staticinvoke <com.android.internal.telephony.RIL: java.util.ArrayList createCarrierRestrictionList(java.util.List)>($r23);

        $r20.<android.hardware.radio.V1_4.CarrierRestrictionsWithPriority: java.util.ArrayList excludedCarriers> = $r24;

        $i3 = virtualinvoke r27.<android.telephony.CarrierRestrictionRules: int getDefaultCarrierRestriction()>();

        if $i3 != 0 goto label04;

        goto label05;

     label04:
        z3 = 0;

     label05:
        $r20.<android.hardware.radio.V1_4.CarrierRestrictionsWithPriority: boolean allowedCarriersPrioritized> = z3;

     label06:
        $i4 = r32.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r33.<android.hardware.radio.V1_4.IRadio: void setAllowedCarriers_1_4(int,android.hardware.radio.V1_4.CarrierRestrictionsWithPriority,int)>($i4, $r20, b5);

     label07:
        goto label09;

     label08:
        $r26 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r32, "setAllowedCarriers_1_4", $r26);

     label09:
        goto label21;

     label10:
        z4 = virtualinvoke r27.<android.telephony.CarrierRestrictionRules: boolean isAllCarriersAllowed()>();

        if z4 != 0 goto label12;

        $r19 = virtualinvoke r27.<android.telephony.CarrierRestrictionRules: java.util.List getExcludedCarriers()>();

        $z2 = interfaceinvoke $r19.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label11;

        $i2 = virtualinvoke r27.<android.telephony.CarrierRestrictionRules: int getDefaultCarrierRestriction()>();

        if $i2 != 0 goto label11;

        goto label12;

     label11:
        z5 = 0;

        goto label13;

     label12:
        z5 = 1;

     label13:
        if z5 == 0 goto label14;

        if b5 != 0 goto label14;

        z6 = 1;

        goto label15;

     label14:
        z6 = 0;

     label15:
        if z6 != 0 goto label17;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>("setAllowedCarriers does not support excluded list on IRadio version less than 1.4");

        if r28 == null goto label16;

        $r17 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r28, null, $r17);

        virtualinvoke r28.<android.os.Message: void sendToTarget()>();

     label16:
        return;

     label17:
        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("RIL.java - Using IRadio 1.3 or lower");

        $r14 = new android.hardware.radio.V1_0.CarrierRestrictions;

        specialinvoke $r14.<android.hardware.radio.V1_0.CarrierRestrictions: void <init>()>();

        $r15 = virtualinvoke r27.<android.telephony.CarrierRestrictionRules: java.util.List getAllowedCarriers()>();

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.util.ArrayList createCarrierRestrictionList(java.util.List)>($r15);

        $r14.<android.hardware.radio.V1_0.CarrierRestrictions: java.util.ArrayList allowedCarriers> = $r16;

     label18:
        $i1 = r32.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r31.<android.hardware.radio.V1_0.IRadio: void setAllowedCarriers(int,boolean,android.hardware.radio.V1_0.CarrierRestrictions)>($i1, z4, $r14);

     label19:
        goto label21;

     label20:
        $r25 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r32, "setAllowedCarriers", $r25);

     label21:
        return;

        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.RuntimeException from label06 to label07 with label08;
        catch android.os.RemoteException from label18 to label19 with label20;
        catch java.lang.RuntimeException from label18 to label19 with label20;
    }

    public void setBandMode(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(65, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bandMode = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setBandMode(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setBandMode", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setCLIR(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(32, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clirMode = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setClir(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setCLIR", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setCallForward(int, int, int, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r17, $r19, r21;
        android.hardware.radio.V1_0.CallForwardInfo $r18;
        java.lang.Exception $r20;
        android.os.Message r22;
        com.android.internal.telephony.RILRequest r23;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r21 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        r22 := @parameter5: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r22);

        if r1 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r23 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(34, r22, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r23.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i4 = r23.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" action = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cfReason = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" serviceClass = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timeSeconds = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r17 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r17);

        $r18 = new android.hardware.radio.V1_0.CallForwardInfo;

        specialinvoke $r18.<android.hardware.radio.V1_0.CallForwardInfo: void <init>()>();

        $r18.<android.hardware.radio.V1_0.CallForwardInfo: int status> = i0;

        $r18.<android.hardware.radio.V1_0.CallForwardInfo: int reason> = i1;

        $r18.<android.hardware.radio.V1_0.CallForwardInfo: int serviceClass> = i2;

        $i5 = staticinvoke <android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>(r21);

        $r18.<android.hardware.radio.V1_0.CallForwardInfo: int toa> = $i5;

        $r19 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r21);

        $r18.<android.hardware.radio.V1_0.CallForwardInfo: java.lang.String number> = $r19;

        $r18.<android.hardware.radio.V1_0.CallForwardInfo: int timeSeconds> = i3;

     label1:
        $i6 = r23.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void setCallForward(int,android.hardware.radio.V1_0.CallForwardInfo)>($i6, $r18);

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r23, "setCallForward", $r20);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setCallWaiting(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        int i0, $i1, $i2;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r13;
        java.lang.Exception $r14;
        android.os.Message r15;
        android.hardware.radio.V1_0.IRadio r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r15 := @parameter2: android.os.Message;

        r16 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r15);

        if r16 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(36, r15, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enable = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" serviceClass = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label1:
        $i2 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r16.<android.hardware.radio.V1_0.IRadio: void setCallWaiting(int,boolean,int)>($i2, z0, i0);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "setCallWaiting", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setCarrierInfoForImsiEncryption(android.telephony.ImsiEncryptionInfo, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        byte[] r1;
        int i0, $i2, $i3, i5;
        byte b1;
        java.lang.Byte r2;
        com.android.internal.telephony.HalVersion $r4, $r5;
        boolean $z0;
        com.android.internal.telephony.CommandException $r6;
        android.os.WorkSource $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10, $r13, $r15, $r16, $r17, $r18;
        java.util.Date $r19, $r21;
        java.security.PublicKey $r20;
        long $l4;
        java.lang.Exception $r22;
        android.telephony.ImsiEncryptionInfo r23;
        android.os.Message r24;
        android.hardware.radio.V1_0.IRadio r25;
        android.hardware.radio.V1_1.IRadio r26;
        com.android.internal.telephony.RILRequest r27;
        android.hardware.radio.V1_1.ImsiEncryptionInfo r29;
        java.util.ArrayList r30;

        r0 := @this: com.android.internal.telephony.RIL;

        r23 := @parameter0: android.telephony.ImsiEncryptionInfo;

        r24 := @parameter1: android.os.Message;

        staticinvoke <com.android.internal.telephony.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r23, "ImsiEncryptionInfo cannot be null.");

        r25 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r24);

        if r25 == null goto label12;

        $r5 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r4 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_1>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r4);

        if $z0 == 0 goto label11;

        r26 = (android.hardware.radio.V1_1.IRadio) r25;

        $r8 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r27 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(141, r24, $r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r27.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r27.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

     label01:
        r29 = new android.hardware.radio.V1_1.ImsiEncryptionInfo;

        specialinvoke r29.<android.hardware.radio.V1_1.ImsiEncryptionInfo: void <init>()>();

        $r16 = virtualinvoke r23.<android.telephony.ImsiEncryptionInfo: java.lang.String getMnc()>();

        r29.<android.hardware.radio.V1_1.ImsiEncryptionInfo: java.lang.String mnc> = $r16;

        $r17 = virtualinvoke r23.<android.telephony.ImsiEncryptionInfo: java.lang.String getMcc()>();

        r29.<android.hardware.radio.V1_1.ImsiEncryptionInfo: java.lang.String mcc> = $r17;

        $r18 = virtualinvoke r23.<android.telephony.ImsiEncryptionInfo: java.lang.String getKeyIdentifier()>();

        r29.<android.hardware.radio.V1_1.ImsiEncryptionInfo: java.lang.String keyIdentifier> = $r18;

        $r19 = virtualinvoke r23.<android.telephony.ImsiEncryptionInfo: java.util.Date getExpirationTime()>();

        if $r19 == null goto label03;

     label02:
        $r21 = virtualinvoke r23.<android.telephony.ImsiEncryptionInfo: java.util.Date getExpirationTime()>();

        $l4 = virtualinvoke $r21.<java.util.Date: long getTime()>();

        r29.<android.hardware.radio.V1_1.ImsiEncryptionInfo: long expirationTime> = $l4;

     label03:
        $r20 = virtualinvoke r23.<android.telephony.ImsiEncryptionInfo: java.security.PublicKey getPublicKey()>();

        r1 = interfaceinvoke $r20.<java.security.PublicKey: byte[] getEncoded()>();

        i0 = lengthof r1;

     label04:
        i5 = 0;

     label05:
        if i5 >= i0 goto label08;

        b1 = r1[i5];

     label06:
        r30 = r29.<android.hardware.radio.V1_1.ImsiEncryptionInfo: java.util.ArrayList carrierKey>;

        r2 = new java.lang.Byte;

        specialinvoke r2.<java.lang.Byte: void <init>(byte)>(b1);

        virtualinvoke r30.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label07:
        i5 = i5 + 1;

        goto label05;

     label08:
        $i3 = r27.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r26.<android.hardware.radio.V1_1.IRadio: void setCarrierInfoForImsiEncryption(int,android.hardware.radio.V1_1.ImsiEncryptionInfo)>($i3, r29);

     label09:
        goto label12;

     label10:
        $r22 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r27, "setCarrierInfoForImsiEncryption", $r22);

        goto label12;

     label11:
        if r24 == null goto label12;

        $r6 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r24, null, $r6);

        virtualinvoke r24.<android.os.Message: void sendToTarget()>();

     label12:
        return;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch java.lang.RuntimeException from label01 to label02 with label10;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.lang.RuntimeException from label02 to label03 with label10;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.lang.RuntimeException from label03 to label04 with label10;
        catch android.os.RemoteException from label06 to label07 with label10;
        catch java.lang.RuntimeException from label06 to label07 with label10;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.RuntimeException from label08 to label09 with label10;
    }

    public void setCdmaBroadcastActivation(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        int $i0, $i1;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(94, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" activate = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setCdmaBroadcastActivation(int,boolean)>($i1, z0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setCdmaBroadcastActivation", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo r3;
        android.os.WorkSource $r5;
        java.util.ArrayList $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8, $r11, $r16, $r19;
        boolean $z0, $z1;
        java.lang.Object $r17;
        android.hardware.radio.V1_0.CdmaBroadcastSmsConfigInfo $r18, $r20;
        java.lang.Exception $r21;
        com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[] r22;
        android.os.Message r23;
        com.android.internal.telephony.RILRequest r24;
        java.util.Iterator r26;

        r0 := @this: com.android.internal.telephony.RIL;

        r22 := @parameter0: com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[];

        r23 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r23);

        if r1 == null goto label9;

        $r5 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r24 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(93, r23, $r5);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r22;

        i6 = 0;

     label1:
        if i6 >= i0 goto label4;

        r3 = r22[i6];

        i7 = virtualinvoke r3.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getFromServiceCategory()>();

     label2:
        $i4 = virtualinvoke r3.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getToServiceCategory()>();

        if i7 > $i4 goto label3;

        $r20 = new android.hardware.radio.V1_0.CdmaBroadcastSmsConfigInfo;

        specialinvoke $r20.<android.hardware.radio.V1_0.CdmaBroadcastSmsConfigInfo: void <init>()>();

        $r20.<android.hardware.radio.V1_0.CdmaBroadcastSmsConfigInfo: int serviceCategory> = i7;

        $i5 = virtualinvoke r3.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getLanguage()>();

        $r20.<android.hardware.radio.V1_0.CdmaBroadcastSmsConfigInfo: int language> = $i5;

        $z1 = virtualinvoke r3.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: boolean isSelected()>();

        $r20.<android.hardware.radio.V1_0.CdmaBroadcastSmsConfigInfo: boolean selected> = $z1;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        i7 = i7 + 1;

        goto label2;

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r24.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r24.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configs : ");

        $r16 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

        r26 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r17 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (android.hardware.radio.V1_0.CdmaBroadcastSmsConfigInfo) $r17;

        $r19 = virtualinvoke $r18.<android.hardware.radio.V1_0.CdmaBroadcastSmsConfigInfo: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r19);

        goto label5;

     label6:
        $i3 = r24.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void setCdmaBroadcastConfig(int,java.util.ArrayList)>($i3, $r6);

     label7:
        goto label9;

     label8:
        $r21 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r24, "setCdmaBroadcastConfig", $r21);

     label9:
        return;

        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.RuntimeException from label6 to label7 with label8;
    }

    public void setCdmaRoamingPreference(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(78, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cdmaRoamingType = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setCdmaRoamingPreference(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setCdmaRoamingPreference", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setCdmaSubscriptionSource(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(77, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cdmaSubscription = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setCdmaSubscriptionSource(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setCdmaSubscriptionSource", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setCellInfoListRate(int, android.os.Message, android.os.WorkSource)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r5, $r9;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.os.WorkSource r12, r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r11 := @parameter1: android.os.Message;

        r12 := @parameter2: android.os.WorkSource;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: android.os.WorkSource getDeafultWorkSourceIfInvalid(android.os.WorkSource)>(r12);

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r14 == null goto label4;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(110, r11, r13);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r5 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rateInMillis = ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setCellInfoListRate(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setCellInfoListRate", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setCompatVersion(int, com.android.internal.telephony.HalVersion)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        com.android.internal.telephony.HalVersion r1, r2;
        java.util.concurrent.ConcurrentHashMap $r4;
        java.lang.Integer $r5;
        boolean $z0;
        java.lang.StringBuilder $r7;
        java.lang.String $r12;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.telephony.HalVersion;

        r2 = virtualinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion getCompatVersion(int)>(i0);

        if r2 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>(r2);

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setCompatVersion with equal or greater one, ignored, halVerion=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oldVerion=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>($r12);

        return;

     label1:
        $r4 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.ConcurrentHashMap mCompatOverrides>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        return;
    }

    public void setDataAllowed(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        int $i0, $i1;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(123, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" allowed = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setDataAllowed(int,boolean)>($i1, z0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setDataAllowed", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setDataProfile(android.telephony.data.DataProfile[], boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0, z1, $z2, $z3, $z4;
        android.telephony.data.DataProfile r1, $r10, $r17, $r19, $r25, $r27;
        com.android.internal.telephony.HalVersion $r2, $r3, $r4, $r5;
        android.os.WorkSource $r6, $r13, $r21;
        java.lang.String $r7, $r8, $r9, $r11, $r14, $r15, $r16, $r18, $r22, $r23, $r24, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17;
        android.hardware.radio.V1_0.DataProfileInfo $r12;
        android.hardware.radio.V1_4.DataProfileInfo $r20;
        android.hardware.radio.V1_5.DataProfileInfo $r28;
        java.lang.Exception $r29;
        android.telephony.data.DataProfile[] r30;
        android.os.Message r31;
        android.hardware.radio.V1_0.IRadio r32;
        com.android.internal.telephony.RILRequest r33, r35, r39, r43;
        android.hardware.radio.V1_5.IRadio r34;
        java.util.ArrayList r36, r40, r42;
        java.lang.StringBuilder r37, r41, r44;
        android.hardware.radio.V1_4.IRadio r38;

        r0 := @this: com.android.internal.telephony.RIL;

        r30 := @parameter0: android.telephony.data.DataProfile[];

        z0 := @parameter1: boolean;

        r31 := @parameter2: android.os.Message;

        r32 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r31);

        if r32 == null goto label118;

        r33 = null;

     label001:
        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        z1 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r2);

     label002:
        if z1 == 0 goto label039;

        r33 = null;

     label003:
        r34 = (android.hardware.radio.V1_5.IRadio) r32;

     label004:
        r33 = null;

     label005:
        $r21 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r35 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(128, r31, $r21);

     label006:
        r33 = r35;

     label007:
        r36 = new java.util.ArrayList;

     label008:
        r33 = r35;

     label009:
        specialinvoke r36.<java.util.ArrayList: void <init>()>();

     label010:
        r33 = r35;

     label011:
        i6 = lengthof r30;

     label012:
        i7 = 0;

     label013:
        if i7 >= i6 goto label016;

        r33 = r35;

     label014:
        $r27 = r30[i7];

        $r28 = staticinvoke <com.android.internal.telephony.RIL: android.hardware.radio.V1_5.DataProfileInfo convertToHalDataProfile15(android.telephony.data.DataProfile)>($r27);

        virtualinvoke r36.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

     label015:
        i7 = i7 + 1;

        goto label013;

     label016:
        r33 = r35;

     label017:
        r37 = new java.lang.StringBuilder;

     label018:
        r33 = r35;

     label019:
        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

     label020:
        r33 = r35;

     label021:
        $r22 = virtualinvoke r35.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label022:
        r33 = r35;

     label023:
        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

     label024:
        r33 = r35;

     label025:
        $i4 = r35.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r23 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label026:
        r33 = r35;

     label027:
        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with data profiles : ");

     label028:
        r33 = r35;

     label029:
        $r24 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r24);

     label030:
        r33 = r35;

     label031:
        i8 = lengthof r30;

     label032:
        i9 = 0;

     label033:
        if i9 >= i8 goto label036;

        r33 = r35;

     label034:
        $r25 = r30[i9];

        $r26 = virtualinvoke $r25.<android.telephony.data.DataProfile: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r26);

     label035:
        i9 = i9 + 1;

        goto label033;

     label036:
        r33 = r35;

     label037:
        $i5 = r35.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r34.<android.hardware.radio.V1_5.IRadio: void setDataProfile_1_5(int,java.util.ArrayList)>($i5, r36);

     label038:
        goto label116;

     label039:
        r33 = null;

     label040:
        $r5 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r4 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4>;

        $z2 = virtualinvoke $r5.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r4);

        if $z2 == 0 goto label078;

     label041:
        r33 = null;

     label042:
        r38 = (android.hardware.radio.V1_4.IRadio) r32;

     label043:
        r33 = null;

     label044:
        $r13 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r39 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(128, r31, $r13);

     label045:
        r33 = r39;

     label046:
        r40 = new java.util.ArrayList;

     label047:
        r33 = r39;

     label048:
        specialinvoke r40.<java.util.ArrayList: void <init>()>();

     label049:
        r33 = r39;

     label050:
        i10 = lengthof r30;

     label051:
        i11 = 0;

     label052:
        if i11 >= i10 goto label055;

        r33 = r39;

     label053:
        $r19 = r30[i11];

        $r20 = staticinvoke <com.android.internal.telephony.RIL: android.hardware.radio.V1_4.DataProfileInfo convertToHalDataProfile14(android.telephony.data.DataProfile)>($r19);

        virtualinvoke r40.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label054:
        i11 = i11 + 1;

        goto label052;

     label055:
        r33 = r39;

     label056:
        r41 = new java.lang.StringBuilder;

     label057:
        r33 = r39;

     label058:
        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

     label059:
        r33 = r39;

     label060:
        $r14 = virtualinvoke r39.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label061:
        r33 = r39;

     label062:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

     label063:
        r33 = r39;

     label064:
        $i2 = r39.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

     label065:
        r33 = r39;

     label066:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with data profiles : ");

     label067:
        r33 = r39;

     label068:
        $r16 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

     label069:
        r33 = r39;

     label070:
        i12 = lengthof r30;

     label071:
        i13 = 0;

     label072:
        if i13 >= i12 goto label075;

        r33 = r39;

     label073:
        $r17 = r30[i13];

        $r18 = virtualinvoke $r17.<android.telephony.data.DataProfile: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r18);

     label074:
        i13 = i13 + 1;

        goto label072;

     label075:
        r33 = r39;

     label076:
        $i3 = r39.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r38.<android.hardware.radio.V1_4.IRadio: void setDataProfile_1_4(int,java.util.ArrayList)>($i3, r40);

     label077:
        goto label116;

     label078:
        r33 = null;

     label079:
        r42 = new java.util.ArrayList;

     label080:
        r33 = null;

     label081:
        specialinvoke r42.<java.util.ArrayList: void <init>()>();

     label082:
        r33 = null;

     label083:
        i14 = lengthof r30;

     label084:
        i15 = 0;

     label085:
        if i15 >= i14 goto label090;

        r1 = r30[i15];

        r33 = null;

     label086:
        $z4 = virtualinvoke r1.<android.telephony.data.DataProfile: boolean isPersistent()>();

        if $z4 == 0 goto label089;

     label087:
        r33 = null;

     label088:
        $r12 = staticinvoke <com.android.internal.telephony.RIL: android.hardware.radio.V1_0.DataProfileInfo convertToHalDataProfile10(android.telephony.data.DataProfile)>(r1);

        virtualinvoke r42.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label089:
        i15 = i15 + 1;

        goto label085;

     label090:
        r33 = null;

     label091:
        $z3 = virtualinvoke r42.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 != 0 goto label116;

     label092:
        r33 = null;

     label093:
        $r6 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r43 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(128, r31, $r6);

     label094:
        r33 = r43;

     label095:
        r44 = new java.lang.StringBuilder;

     label096:
        r33 = r43;

     label097:
        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

     label098:
        r33 = r43;

     label099:
        $r7 = virtualinvoke r43.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label100:
        r33 = r43;

     label101:
        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

     label102:
        r33 = r43;

     label103:
        $i0 = r43.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label104:
        r33 = r43;

     label105:
        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with data profiles : ");

     label106:
        r33 = r43;

     label107:
        $r9 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label108:
        r33 = r43;

     label109:
        i16 = lengthof r30;

     label110:
        i17 = 0;

     label111:
        if i17 >= i16 goto label114;

        r33 = r43;

     label112:
        $r10 = r30[i17];

        $r11 = virtualinvoke $r10.<android.telephony.data.DataProfile: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label113:
        i17 = i17 + 1;

        goto label111;

     label114:
        r33 = r43;

     label115:
        $i1 = r43.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r32.<android.hardware.radio.V1_0.IRadio: void setDataProfile(int,java.util.ArrayList,boolean)>($i1, r42, z0);

     label116:
        goto label118;

     label117:
        $r29 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r33, "setDataProfile", $r29);

     label118:
        return;

        catch android.os.RemoteException from label001 to label002 with label117;
        catch java.lang.RuntimeException from label001 to label002 with label117;
        catch android.os.RemoteException from label003 to label004 with label117;
        catch java.lang.RuntimeException from label003 to label004 with label117;
        catch android.os.RemoteException from label005 to label006 with label117;
        catch java.lang.RuntimeException from label005 to label006 with label117;
        catch android.os.RemoteException from label007 to label008 with label117;
        catch java.lang.RuntimeException from label007 to label008 with label117;
        catch android.os.RemoteException from label009 to label010 with label117;
        catch java.lang.RuntimeException from label009 to label010 with label117;
        catch android.os.RemoteException from label011 to label012 with label117;
        catch java.lang.RuntimeException from label011 to label012 with label117;
        catch android.os.RemoteException from label014 to label015 with label117;
        catch java.lang.RuntimeException from label014 to label015 with label117;
        catch android.os.RemoteException from label017 to label018 with label117;
        catch java.lang.RuntimeException from label017 to label018 with label117;
        catch android.os.RemoteException from label019 to label020 with label117;
        catch java.lang.RuntimeException from label019 to label020 with label117;
        catch android.os.RemoteException from label021 to label022 with label117;
        catch java.lang.RuntimeException from label021 to label022 with label117;
        catch android.os.RemoteException from label023 to label024 with label117;
        catch java.lang.RuntimeException from label023 to label024 with label117;
        catch android.os.RemoteException from label025 to label026 with label117;
        catch java.lang.RuntimeException from label025 to label026 with label117;
        catch android.os.RemoteException from label027 to label028 with label117;
        catch java.lang.RuntimeException from label027 to label028 with label117;
        catch android.os.RemoteException from label029 to label030 with label117;
        catch java.lang.RuntimeException from label029 to label030 with label117;
        catch android.os.RemoteException from label031 to label032 with label117;
        catch java.lang.RuntimeException from label031 to label032 with label117;
        catch android.os.RemoteException from label034 to label035 with label117;
        catch java.lang.RuntimeException from label034 to label035 with label117;
        catch android.os.RemoteException from label037 to label038 with label117;
        catch java.lang.RuntimeException from label037 to label038 with label117;
        catch android.os.RemoteException from label040 to label041 with label117;
        catch java.lang.RuntimeException from label040 to label041 with label117;
        catch android.os.RemoteException from label042 to label043 with label117;
        catch java.lang.RuntimeException from label042 to label043 with label117;
        catch android.os.RemoteException from label044 to label045 with label117;
        catch java.lang.RuntimeException from label044 to label045 with label117;
        catch android.os.RemoteException from label046 to label047 with label117;
        catch java.lang.RuntimeException from label046 to label047 with label117;
        catch android.os.RemoteException from label048 to label049 with label117;
        catch java.lang.RuntimeException from label048 to label049 with label117;
        catch android.os.RemoteException from label050 to label051 with label117;
        catch java.lang.RuntimeException from label050 to label051 with label117;
        catch android.os.RemoteException from label053 to label054 with label117;
        catch java.lang.RuntimeException from label053 to label054 with label117;
        catch android.os.RemoteException from label056 to label057 with label117;
        catch java.lang.RuntimeException from label056 to label057 with label117;
        catch android.os.RemoteException from label058 to label059 with label117;
        catch java.lang.RuntimeException from label058 to label059 with label117;
        catch android.os.RemoteException from label060 to label061 with label117;
        catch java.lang.RuntimeException from label060 to label061 with label117;
        catch android.os.RemoteException from label062 to label063 with label117;
        catch java.lang.RuntimeException from label062 to label063 with label117;
        catch android.os.RemoteException from label064 to label065 with label117;
        catch java.lang.RuntimeException from label064 to label065 with label117;
        catch android.os.RemoteException from label066 to label067 with label117;
        catch java.lang.RuntimeException from label066 to label067 with label117;
        catch android.os.RemoteException from label068 to label069 with label117;
        catch java.lang.RuntimeException from label068 to label069 with label117;
        catch android.os.RemoteException from label070 to label071 with label117;
        catch java.lang.RuntimeException from label070 to label071 with label117;
        catch android.os.RemoteException from label073 to label074 with label117;
        catch java.lang.RuntimeException from label073 to label074 with label117;
        catch android.os.RemoteException from label076 to label077 with label117;
        catch java.lang.RuntimeException from label076 to label077 with label117;
        catch android.os.RemoteException from label079 to label080 with label117;
        catch java.lang.RuntimeException from label079 to label080 with label117;
        catch android.os.RemoteException from label081 to label082 with label117;
        catch java.lang.RuntimeException from label081 to label082 with label117;
        catch android.os.RemoteException from label083 to label084 with label117;
        catch java.lang.RuntimeException from label083 to label084 with label117;
        catch android.os.RemoteException from label086 to label087 with label117;
        catch java.lang.RuntimeException from label086 to label087 with label117;
        catch android.os.RemoteException from label088 to label089 with label117;
        catch java.lang.RuntimeException from label088 to label089 with label117;
        catch android.os.RemoteException from label091 to label092 with label117;
        catch java.lang.RuntimeException from label091 to label092 with label117;
        catch android.os.RemoteException from label093 to label094 with label117;
        catch java.lang.RuntimeException from label093 to label094 with label117;
        catch android.os.RemoteException from label095 to label096 with label117;
        catch java.lang.RuntimeException from label095 to label096 with label117;
        catch android.os.RemoteException from label097 to label098 with label117;
        catch java.lang.RuntimeException from label097 to label098 with label117;
        catch android.os.RemoteException from label099 to label100 with label117;
        catch java.lang.RuntimeException from label099 to label100 with label117;
        catch android.os.RemoteException from label101 to label102 with label117;
        catch java.lang.RuntimeException from label101 to label102 with label117;
        catch android.os.RemoteException from label103 to label104 with label117;
        catch java.lang.RuntimeException from label103 to label104 with label117;
        catch android.os.RemoteException from label105 to label106 with label117;
        catch java.lang.RuntimeException from label105 to label106 with label117;
        catch android.os.RemoteException from label107 to label108 with label117;
        catch java.lang.RuntimeException from label107 to label108 with label117;
        catch android.os.RemoteException from label109 to label110 with label117;
        catch java.lang.RuntimeException from label109 to label110 with label117;
        catch android.os.RemoteException from label112 to label113 with label117;
        catch java.lang.RuntimeException from label112 to label113 with label117;
        catch android.os.RemoteException from label115 to label116 with label117;
        catch java.lang.RuntimeException from label115 to label116 with label117;
    }

    public void setFacilityLock(java.lang.String, boolean, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        boolean z0;
        int i0;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)>(r1, z0, r2, i0, null, r3);

        return;
    }

    public void setFacilityLockForApp(java.lang.String, boolean, java.lang.String, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        java.lang.String r1, r2, $r7, $r10, $r20, $r21, $r22, $r23, r25;
        int i0, $i1, $i2;
        android.hardware.radio.V1_0.IRadio r3;
        android.os.WorkSource $r5;
        java.lang.StringBuilder $r6;
        java.lang.Exception $r24;
        android.os.Message r26;
        com.android.internal.telephony.RILRequest r27;

        r0 := @this: com.android.internal.telephony.RIL;

        r25 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        r26 := @parameter5: android.os.Message;

        r3 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r26);

        if r3 == null goto label4;

        $r5 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r27 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(43, r26, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r27.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r27.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" facility = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lockstate = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" serviceClass = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appId = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r20);

     label1:
        $i2 = r27.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r21 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r25);

        $r22 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        $r23 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r2);

        interfaceinvoke r3.<android.hardware.radio.V1_0.IRadio: void setFacilityLockForApp(int,java.lang.String,boolean,java.lang.String,int,java.lang.String)>($i2, $r21, z0, $r22, i0, $r23);

     label2:
        goto label4;

     label3:
        $r24 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r27, "setFacilityLockForApp", $r24);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setGsmBroadcastActivation(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        int $i0, $i1;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(91, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" activate = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setGsmBroadcastActivation(int,boolean)>($i1, z0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setGsmBroadcastActivation", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r13, $r22;
        java.util.ArrayList $r14;
        android.hardware.radio.V1_0.GsmBroadcastSmsConfigInfo $r15;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo $r16, $r17, $r18, $r19, $r20, $r21;
        boolean $z0;
        java.lang.Exception $r23;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[] r24;
        android.os.Message r25;
        com.android.internal.telephony.RILRequest r26;

        r0 := @this: com.android.internal.telephony.RIL;

        r24 := @parameter0: com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[];

        r25 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r25);

        if r1 == null goto label7;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r26 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(90, r25, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r26.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r26.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $i2 = lengthof r24;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configs : ");

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        i9 = 0;

     label1:
        $i3 = lengthof r24;

        if i9 >= $i3 goto label2;

        $r21 = r24[i9];

        $r22 = virtualinvoke $r21.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r22);

        i9 = i9 + 1;

        goto label1;

     label2:
        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r24;

        i10 = 0;

     label3:
        if i10 >= i0 goto label4;

        $r15 = new android.hardware.radio.V1_0.GsmBroadcastSmsConfigInfo;

        specialinvoke $r15.<android.hardware.radio.V1_0.GsmBroadcastSmsConfigInfo: void <init>()>();

        $r16 = r24[i10];

        $i5 = virtualinvoke $r16.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromServiceId()>();

        $r15.<android.hardware.radio.V1_0.GsmBroadcastSmsConfigInfo: int fromServiceId> = $i5;

        $r17 = r24[i10];

        $i6 = virtualinvoke $r17.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToServiceId()>();

        $r15.<android.hardware.radio.V1_0.GsmBroadcastSmsConfigInfo: int toServiceId> = $i6;

        $r18 = r24[i10];

        $i7 = virtualinvoke $r18.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromCodeScheme()>();

        $r15.<android.hardware.radio.V1_0.GsmBroadcastSmsConfigInfo: int fromCodeScheme> = $i7;

        $r19 = r24[i10];

        $i8 = virtualinvoke $r19.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToCodeScheme()>();

        $r15.<android.hardware.radio.V1_0.GsmBroadcastSmsConfigInfo: int toCodeScheme> = $i8;

        $r20 = r24[i10];

        $z0 = virtualinvoke $r20.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: boolean isSelected()>();

        $r15.<android.hardware.radio.V1_0.GsmBroadcastSmsConfigInfo: boolean selected> = $z0;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        i10 = i10 + 1;

        goto label3;

     label4:
        $i4 = r26.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void setGsmBroadcastConfig(int,java.util.ArrayList)>($i4, $r14);

     label5:
        goto label7;

     label6:
        $r23 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r26, "setGsmBroadcastConfig", $r23);

     label7:
        return;

        catch android.os.RemoteException from label4 to label5 with label6;
        catch java.lang.RuntimeException from label4 to label5 with label6;
    }

    public void setInitialAttachApn(android.telephony.data.DataProfile, boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0, $z1, $z2, $z3;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r11;
        int $i0, $i1, $i2, $i3;
        com.android.internal.telephony.HalVersion $r12, $r13, $r14, $r15;
        android.hardware.radio.V1_0.DataProfileInfo $r16;
        android.hardware.radio.V1_4.IRadio $r17;
        android.hardware.radio.V1_4.DataProfileInfo $r18;
        android.hardware.radio.V1_5.IRadio $r19;
        android.hardware.radio.V1_5.DataProfileInfo $r20;
        java.lang.Exception $r21;
        android.telephony.data.DataProfile r22;
        android.os.Message r23;
        com.android.internal.telephony.RILRequest r24;

        r0 := @this: com.android.internal.telephony.RIL;

        r22 := @parameter0: android.telephony.data.DataProfile;

        z0 := @parameter1: boolean;

        r23 := @parameter2: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r23);

        if r1 == null goto label8;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r24 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(111, r23, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r24.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r24.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $r13 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r12 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z1 = virtualinvoke $r13.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r12);

        if $z1 == 0 goto label3;

        $r19 = (android.hardware.radio.V1_5.IRadio) r1;

        $i3 = r24.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r20 = staticinvoke <com.android.internal.telephony.RIL: android.hardware.radio.V1_5.DataProfileInfo convertToHalDataProfile15(android.telephony.data.DataProfile)>(r22);

        interfaceinvoke $r19.<android.hardware.radio.V1_5.IRadio: void setInitialAttachApn_1_5(int,android.hardware.radio.V1_5.DataProfileInfo)>($i3, $r20);

     label2:
        goto label6;

     label3:
        $r15 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r14 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4>;

        $z2 = virtualinvoke $r15.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r14);

        if $z2 == 0 goto label5;

        $r17 = (android.hardware.radio.V1_4.IRadio) r1;

        $i2 = r24.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r18 = staticinvoke <com.android.internal.telephony.RIL: android.hardware.radio.V1_4.DataProfileInfo convertToHalDataProfile14(android.telephony.data.DataProfile)>(r22);

        interfaceinvoke $r17.<android.hardware.radio.V1_4.IRadio: void setInitialAttachApn_1_4(int,android.hardware.radio.V1_4.DataProfileInfo)>($i2, $r18);

     label4:
        goto label6;

     label5:
        $i1 = r24.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r16 = staticinvoke <com.android.internal.telephony.RIL: android.hardware.radio.V1_0.DataProfileInfo convertToHalDataProfile10(android.telephony.data.DataProfile)>(r22);

        $z3 = virtualinvoke r22.<android.telephony.data.DataProfile: boolean isPersistent()>();

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void setInitialAttachApn(int,android.hardware.radio.V1_0.DataProfileInfo,boolean,boolean)>($i1, $r16, $z3, z0);

     label6:
        goto label8;

     label7:
        $r21 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r24, "setInitialAttachApn", $r21);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.RuntimeException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch java.lang.RuntimeException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
        catch java.lang.RuntimeException from label5 to label6 with label7;
    }

    public void setLinkCapacityReportingCriteria(int, int, int, int[], int[], int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        int[] r1, r22;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r10;
        com.android.internal.telephony.HalVersion $r11, $r12, $r13, $r14;
        boolean $z0, $z1;
        java.util.ArrayList $r15, $r16, $r18, $r19;
        android.hardware.radio.V1_5.IRadio $r17;
        java.lang.Exception $r20, $r21, r28;
        android.os.Message r23;
        android.hardware.radio.V1_0.IRadio r24;
        com.android.internal.telephony.RILRequest r25;
        android.hardware.radio.V1_2.IRadio r26;
        java.lang.RuntimeException r27;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r22 := @parameter3: int[];

        r1 := @parameter4: int[];

        i3 := @parameter5: int;

        r23 := @parameter6: android.os.Message;

        r24 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r23);

        if r24 == null goto label13;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r25 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(203, r23, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r25.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i4 = r25.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

     label01:
        $r12 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r11 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r12.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r11);

        if $z0 == 0 goto label03;

        $r17 = (android.hardware.radio.V1_5.IRadio) r24;

        $i7 = r25.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r18 = staticinvoke <com.android.internal.telephony.RIL: java.util.ArrayList primitiveArrayToArrayList(int[])>(r22);

        $r19 = staticinvoke <com.android.internal.telephony.RIL: java.util.ArrayList primitiveArrayToArrayList(int[])>(r1);

        $i8 = staticinvoke <com.android.internal.telephony.RIL: int convertAntToHalAnt(int)>(i3);

        interfaceinvoke $r17.<android.hardware.radio.V1_5.IRadio: void setLinkCapacityReportingCriteria_1_5(int,int,int,int,java.util.ArrayList,java.util.ArrayList,int)>($i7, i0, i1, i2, $r18, $r19, $i8);

     label02:
        goto label09;

     label03:
        $r14 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r13 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2>;

        $z1 = virtualinvoke $r14.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r13);

        if $z1 == 0 goto label08;

        r26 = (android.hardware.radio.V1_2.IRadio) r24;

     label04:
        if i3 == 6 goto label07;

     label05:
        $i5 = r25.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.util.ArrayList primitiveArrayToArrayList(int[])>(r22);

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.util.ArrayList primitiveArrayToArrayList(int[])>(r1);

        $i6 = staticinvoke <com.android.internal.telephony.RIL: int convertAntToHalAnt(int)>(i3);

        interfaceinvoke r26.<android.hardware.radio.V1_2.IRadio: void setLinkCapacityReportingCriteria(int,int,int,int,java.util.ArrayList,java.util.ArrayList,int)>($i5, i0, i1, i2, $r15, $r16, $i6);

     label06:
        goto label09;

     label07:
        r27 = new java.lang.RuntimeException;

        specialinvoke r27.<java.lang.RuntimeException: void <init>(java.lang.String)>("NGRAN unsupported on IRadio version 1.2.");

        throw r27;

     label08:
        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>("setLinkCapacityReportingCriteria ignored on IRadio version less than 1.2");

     label09:
        goto label13;

     label10:
        $r20 := @caughtexception;

        r28 = $r20;

        goto label12;

     label11:
        $r21 := @caughtexception;

        r28 = $r21;

     label12:
        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r25, "setLinkCapacityReportingCriteria", r28);

        goto label13;

     label13:
        return;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch java.lang.RuntimeException from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label11;
        catch java.lang.RuntimeException from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.lang.RuntimeException from label05 to label06 with label10;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch java.lang.RuntimeException from label07 to label08 with label10;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.RuntimeException from label08 to label09 with label10;
    }

    public void setLocationUpdates(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        int $i0, $i1;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(76, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enable = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setLocationUpdates(int,boolean)>($i1, z0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setLocationUpdates", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setLogicalToPhysicalSlotMapping(int[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int[] r1;
        android.os.Message r2;
        com.android.internal.telephony.CommandException $r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.os.Message;

        if r2 == null goto label1;

        $r3 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r2, null, $r3);

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    public void setMute(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        int $i0, $i1;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(53, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enableMute = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setMute(int,boolean)>($i1, z0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setMute", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setNetworkSelectionModeAutomatic(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(46, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void setNetworkSelectionModeAutomatic(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "setNetworkSelectionModeAutomatic", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setNetworkSelectionModeManual(java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.WorkSource $r1;
        com.android.internal.telephony.HalVersion $r2, $r3;
        java.lang.String $r4, $r7, $r11, $r12, $r13, $r16, $r22, $r23, r25;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Exception $r24;
        android.os.Message r26;
        android.hardware.radio.V1_0.IRadio r27;
        com.android.internal.telephony.RILRequest r28;
        android.hardware.radio.V1_5.IRadio r29;
        java.lang.StringBuilder r30, r31;

        r0 := @this: com.android.internal.telephony.RIL;

        r25 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        r26 := @parameter2: android.os.Message;

        r27 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r26);

        if r27 == null goto label8;

        $r1 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r28 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(47, r26, $r1);

     label1:
        i5 = staticinvoke <com.android.internal.telephony.RIL: int convertAntToRan(int)>(i4);

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        z0 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r2);

     label2:
        if z0 == 0 goto label5;

     label3:
        r29 = (android.hardware.radio.V1_5.IRadio) r27;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r28.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r28.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" operatorNumeric = ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ran = ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r22 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r22);

        $i3 = r28.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r23 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r25);

        interfaceinvoke r29.<android.hardware.radio.V1_5.IRadio: void setNetworkSelectionModeManual_1_5(int,java.lang.String,int)>($i3, $r23, i5);

     label4:
        goto label6;

     label5:
        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r28.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r28.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" operatorNumeric = ");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r11 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        $i1 = r28.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r25);

        interfaceinvoke r27.<android.hardware.radio.V1_0.IRadio: void setNetworkSelectionModeManual(int,java.lang.String)>($i1, $r12);

     label6:
        goto label8;

     label7:
        $r24 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r28, "setNetworkSelectionModeManual", $r24);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.RuntimeException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch java.lang.RuntimeException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
        catch java.lang.RuntimeException from label5 to label6 with label7;
    }

    public void setOnNITZTime(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        java.lang.Object[] $r3, $r5;
        android.os.AsyncResult $r4;
        com.android.internal.telephony.Registrant $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        specialinvoke r0.<com.android.internal.telephony.BaseCommands: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        $r3 = r0.<com.android.internal.telephony.RIL: java.lang.Object[] mLastNITZTimeInfo>;

        if $r3 == null goto label1;

        $r6 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.Registrant mNITZTimeRegistrant>;

        $r4 = new android.os.AsyncResult;

        $r5 = r0.<com.android.internal.telephony.RIL: java.lang.Object[] mLastNITZTimeInfo>;

        specialinvoke $r4.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r5, null);

        virtualinvoke $r6.<com.android.internal.telephony.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r4);

     label1:
        return;
    }

    public void setPhoneType(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPhoneType=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" old value=");

        $i1 = r0.<com.android.internal.telephony.RIL: int mPhoneType>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r7);

        r0.<com.android.internal.telephony.RIL: int mPhoneType> = i0;

        return;
    }

    public void setPreferredNetworkType(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        java.lang.Integer $r12;
        com.android.internal.telephony.metrics.TelephonyMetrics $r13;
        com.android.internal.telephony.HalVersion $r14, $r15;
        boolean $z0;
        java.lang.Exception $r16, $r17;
        android.os.Message r18;
        android.hardware.radio.V1_0.IRadio r19;
        com.android.internal.telephony.RILRequest r20;
        android.hardware.radio.V1_4.IRadio r21;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r18 := @parameter1: android.os.Message;

        r19 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r18);

        if r19 == null goto label8;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r20 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(73, r18, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r20.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r20.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" networkType = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        r0.<com.android.internal.telephony.RIL: int mPreferredNetworkType> = i0;

        $r13 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r12 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        virtualinvoke $r13.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeSetPreferredNetworkType(int,int)>($i2, i0);

        $r15 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r14 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4>;

        $z0 = virtualinvoke $r15.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r14);

        if $z0 == 0 goto label5;

        r21 = (android.hardware.radio.V1_4.IRadio) r19;

     label1:
        $i4 = r20.<com.android.internal.telephony.RILRequest: int mSerial>;

        $i5 = staticinvoke <android.telephony.RadioAccessFamily: int getRafFromNetworkType(int)>(i0);

        $i6 = staticinvoke <com.android.internal.telephony.RIL: int convertToHalRadioAccessFamily(int)>($i5);

        interfaceinvoke r21.<android.hardware.radio.V1_4.IRadio: void setPreferredNetworkTypeBitmap(int,int)>($i4, $i6);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r20, "setPreferredNetworkTypeBitmap", $r16);

     label4:
        goto label8;

     label5:
        $i3 = r20.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r19.<android.hardware.radio.V1_0.IRadio: void setPreferredNetworkType(int,int)>($i3, i0);

     label6:
        goto label8;

     label7:
        $r17 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r20, "setPreferredNetworkType", $r17);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch android.os.RemoteException from label5 to label6 with label7;
        catch java.lang.RuntimeException from label5 to label6 with label7;
    }

    public void setPreferredVoicePrivacy(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        int $i0, $i1;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(82, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enable = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setPreferredVoicePrivacy(int,boolean)>($i1, z0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setPreferredVoicePrivacy", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setRadioCapability(com.android.internal.telephony.RadioCapability, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r10, $r12, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.hardware.radio.V1_0.RadioCapability $r13;
        java.lang.Exception $r16;
        com.android.internal.telephony.RadioCapability r17;
        android.os.Message r18;
        com.android.internal.telephony.RILRequest r19;

        r0 := @this: com.android.internal.telephony.RIL;

        r17 := @parameter0: com.android.internal.telephony.RadioCapability;

        r18 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r18);

        if r1 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r19 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(131, r18, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r19.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r19.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" RadioCapability = ");

        $r10 = virtualinvoke r17.<com.android.internal.telephony.RadioCapability: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = new android.hardware.radio.V1_0.RadioCapability;

        specialinvoke $r13.<android.hardware.radio.V1_0.RadioCapability: void <init>()>();

        $i1 = virtualinvoke r17.<com.android.internal.telephony.RadioCapability: int getSession()>();

        $r13.<android.hardware.radio.V1_0.RadioCapability: int session> = $i1;

        $i2 = virtualinvoke r17.<com.android.internal.telephony.RadioCapability: int getPhase()>();

        $r13.<android.hardware.radio.V1_0.RadioCapability: int phase> = $i2;

        $i3 = virtualinvoke r17.<com.android.internal.telephony.RadioCapability: int getRadioAccessFamily()>();

        $r13.<android.hardware.radio.V1_0.RadioCapability: int raf> = $i3;

        $r14 = virtualinvoke r17.<com.android.internal.telephony.RadioCapability: java.lang.String getLogicalModemUuid()>();

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>($r14);

        $r13.<android.hardware.radio.V1_0.RadioCapability: java.lang.String logicalModemUuid> = $r15;

        $i4 = virtualinvoke r17.<com.android.internal.telephony.RadioCapability: int getStatus()>();

        $r13.<android.hardware.radio.V1_0.RadioCapability: int status> = $i4;

     label1:
        $i5 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void setRadioCapability(int,android.hardware.radio.V1_0.RadioCapability)>($i5, $r13);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r19, "setRadioCapability", $r16);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setRadioPower(boolean, boolean, boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0, z1, z2, $z3;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r15;
        int $i0, $i1, $i2;
        com.android.internal.telephony.HalVersion $r16, $r17;
        java.lang.Exception $r18, $r19;
        android.os.Message r20;
        android.hardware.radio.V1_0.IRadio r21;
        com.android.internal.telephony.RILRequest r22;
        android.hardware.radio.V1_5.IRadio r23;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r20 := @parameter3: android.os.Message;

        r21 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r20);

        if r21 == null goto label8;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r22 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(23, r20, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r22.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r22.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" forEmergencyCall= ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" preferredForEmergencyCall=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r15 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        $r17 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r16 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z3 = virtualinvoke $r17.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r16);

        if $z3 == 0 goto label5;

        r23 = (android.hardware.radio.V1_5.IRadio) r21;

     label1:
        $i2 = r22.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r23.<android.hardware.radio.V1_5.IRadio: void setRadioPower_1_5(int,boolean,boolean,boolean)>($i2, z0, z1, z2);

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r22, "setRadioPower_1_5", $r19);

     label4:
        goto label8;

     label5:
        $i1 = r22.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r21.<android.hardware.radio.V1_0.IRadio: void setRadioPower(int,boolean)>($i1, z0);

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r22, "setRadioPower", $r18);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch android.os.RemoteException from label5 to label6 with label7;
        catch java.lang.RuntimeException from label5 to label6 with label7;
    }

    public void setSignalStrengthReportingCriteria(android.telephony.SignalThresholdInfo, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.hardware.radio.V1_0.IRadio r1;
        com.android.internal.telephony.HalVersion $r2, $r3, $r4, $r5, $r16, $r17, $r36, $r37;
        boolean $z0, $z1, $z2, $z3;
        android.os.WorkSource $r6, $r18;
        java.lang.StringBuilder $r7, $r19;
        java.lang.String $r8, $r11, $r13, $r20, $r23, $r25;
        android.hardware.radio.V1_5.IRadio $r14;
        android.hardware.radio.V1_5.SignalThresholdInfo $r15;
        android.hardware.radio.V1_2.IRadio $r26;
        int[] $r27;
        java.util.ArrayList $r28;
        java.lang.Exception $r29, $r30;
        android.telephony.SignalThresholdInfo r31;
        android.os.Message r32;
        com.android.internal.telephony.RILRequest r33, r38;

        r0 := @this: com.android.internal.telephony.RIL;

        r31 := @parameter0: android.telephony.SignalThresholdInfo;

        i0 := @parameter1: int;

        r32 := @parameter2: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r32);

        if r1 == null goto label9;

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r2);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLoge(java.lang.String)>("setSignalStrengthReportingCriteria ignored on IRadio version less than 1.2");

        return;

     label1:
        $r5 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r4 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2>;

        $z1 = virtualinvoke $r5.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r4);

        if $z1 == 0 goto label5;

        $r17 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r16 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z2 = virtualinvoke $r17.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r16);

        if $z2 == 0 goto label5;

        $r18 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r33 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(202, r32, $r18);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r33.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i4 = r33.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r23 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r25);

     label2:
        $r26 = (android.hardware.radio.V1_2.IRadio) r1;

        $i5 = r33.<com.android.internal.telephony.RILRequest: int mSerial>;

        $i6 = virtualinvoke r31.<android.telephony.SignalThresholdInfo: int getHysteresisMs()>();

        $i7 = virtualinvoke r31.<android.telephony.SignalThresholdInfo: int getHysteresisDb()>();

        $r27 = virtualinvoke r31.<android.telephony.SignalThresholdInfo: int[] getThresholds()>();

        $r28 = staticinvoke <com.android.internal.telephony.RIL: java.util.ArrayList primitiveArrayToArrayList(int[])>($r27);

        $i8 = staticinvoke <com.android.internal.telephony.RIL: int convertAntToHalAnt(int)>(i0);

        interfaceinvoke $r26.<android.hardware.radio.V1_2.IRadio: void setSignalStrengthReportingCriteria(int,int,int,java.util.ArrayList,int)>($i5, $i6, $i7, $r28, $i8);

     label3:
        goto label5;

     label4:
        $r30 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r33, "setSignalStrengthReportingCriteria", $r30);

     label5:
        $r36 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r37 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z3 = virtualinvoke $r36.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r37);

        if $z3 == 0 goto label9;

        $r6 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r38 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(202, r32, $r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r38.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r38.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label6:
        $r14 = (android.hardware.radio.V1_5.IRadio) r1;

        $i2 = r38.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: android.hardware.radio.V1_5.SignalThresholdInfo convertToHalSignalThresholdInfo(android.telephony.SignalThresholdInfo)>(r31);

        $i3 = staticinvoke <com.android.internal.telephony.RIL: int convertAntToHalAnt(int)>(i0);

        interfaceinvoke $r14.<android.hardware.radio.V1_5.IRadio: void setSignalStrengthReportingCriteria_1_5(int,android.hardware.radio.V1_5.SignalThresholdInfo,int)>($i2, $r15, $i3);

     label7:
        goto label9;

     label8:
        $r29 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r38, "setSignalStrengthReportingCriteria_1_5", $r29);

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.RuntimeException from label6 to label7 with label8;
    }

    public void setSimCardPower(int, android.os.Message, android.os.WorkSource)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2, $i3, $i4;
        android.hardware.radio.V1_0.IRadio r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        com.android.internal.telephony.HalVersion $r12, $r13;
        boolean $z0;
        com.android.internal.telephony.CommandException $r14;
        android.hardware.radio.V1_1.IRadio $r16;
        java.lang.Exception $r17, $r18;
        android.os.Message r19;
        android.os.WorkSource r20, r21;
        com.android.internal.telephony.RILRequest r22;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r19 := @parameter1: android.os.Message;

        r20 := @parameter2: android.os.WorkSource;

        r21 = specialinvoke r0.<com.android.internal.telephony.RIL: android.os.WorkSource getDeafultWorkSourceIfInvalid(android.os.WorkSource)>(r20);

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r19);

        if r1 == null goto label13;

        r22 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(140, r19, r21);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r22.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r22.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        $r13 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r12 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_1>;

        $z0 = virtualinvoke $r13.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r12);

        if $z0 == 0 goto label05;

     label01:
        $r16 = (android.hardware.radio.V1_1.IRadio) r1;

        $i4 = r22.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke $r16.<android.hardware.radio.V1_1.IRadio: void setSimCardPower_1_1(int,int)>($i4, i0);

     label02:
        goto label04;

     label03:
        $r18 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r22, "setSimCardPower", $r18);

     label04:
        goto label13;

     label05:
        if i0 == 0 goto label10;

        if i0 == 1 goto label08;

        if r19 == null goto label11;

     label06:
        $r14 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r19, null, $r14);

        virtualinvoke r19.<android.os.Message: void sendToTarget()>();

     label07:
        goto label11;

     label08:
        $i3 = r22.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void setSimCardPower(int,boolean)>($i3, 1);

     label09:
        goto label11;

     label10:
        $i2 = r22.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void setSimCardPower(int,boolean)>($i2, 0);

     label11:
        goto label13;

     label12:
        $r17 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r22, "setSimCardPower", $r17);

     label13:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.RuntimeException from label01 to label02 with label03;
        catch android.os.RemoteException from label06 to label07 with label12;
        catch java.lang.RuntimeException from label06 to label07 with label12;
        catch android.os.RemoteException from label08 to label09 with label12;
        catch java.lang.RuntimeException from label08 to label09 with label12;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch java.lang.RuntimeException from label10 to label11 with label12;
    }

    public void setSmscAddress(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r12, $r13, r15;
        int $i0, $i1;
        java.lang.Exception $r14;
        android.os.Message r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(101, r16, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" address = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label1:
        $i1 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r15);

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void setSmscAddress(int,java.lang.String)>($i1, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "setSmscAddress", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setSuppServiceNotifications(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        int $i0, $i1;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(62, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enable = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setSuppServiceNotifications(int,boolean)>($i1, z0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setSuppServiceNotifications", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setSystemSelectionChannels(java.util.List, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.HalVersion $r1, $r2, $r4, $r5, $r48, $r49;
        boolean $z1, $z2, $z3, z4, z5, $z6, z7;
        android.os.WorkSource $r3;
        java.lang.String $r7, $r10, $r14, $r22, $r25, $r29;
        int $i0, $i1, i2, i3;
        java.util.stream.Stream $r15, $r17, $r30, $r32;
        com.android.internal.telephony.'-$$Lambda$OGSS2qx6njxlnp0dnKb4lA3jnw8' $r18, $r33;
        java.util.stream.Collector $r19, $r34;
        java.lang.Object $r20, $r35;
        com.android.internal.telephony.CommandException $r36;
        java.lang.Exception $r38, $r39;
        java.util.List r40;
        android.os.Message r41;
        android.hardware.radio.V1_0.IRadio r42;
        com.android.internal.telephony.RILRequest r43;
        android.hardware.radio.V1_3.IRadio r44;
        java.util.ArrayList r46, r52;
        android.hardware.radio.V1_5.IRadio r50;
        java.lang.StringBuilder r54, r56;
        com.android.internal.telephony._$$Lambda$RIL$3M12y7er3djFac5aI5ti1mzY0Q4 r55;
        com.android.internal.telephony._$$Lambda$RIL$EScLaQUO_UHerMweNBKxezoJAb4 r57;
        java.util.function.Supplier r58, r59;

        r0 := @this: com.android.internal.telephony.RIL;

        r40 := @parameter0: java.util.List;

        r41 := @parameter1: android.os.Message;

        r42 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r41);

        $r2 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r1 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_3>;

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r1);

        if $z1 == 0 goto label02;

        if r41 == null goto label01;

        $r36 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r41, null, $r36);

        virtualinvoke r41.<android.os.Message: void sendToTarget()>();

     label01:
        return;

     label02:
        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r43 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(210, r41, $r3);

        $r5 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r4 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        z4 = virtualinvoke $r5.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r4);

        if z4 == 0 goto label09;

        r44 = (android.hardware.radio.V1_3.IRadio) r42;

        if r44 == null goto label09;

        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke r43.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r43.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r25 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" setSystemSelectionChannels_1.3= ");

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        $r29 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r29);

        $r30 = interfaceinvoke r40.<java.util.List: java.util.stream.Stream stream()>();

        r55 = new com.android.internal.telephony._$$Lambda$RIL$3M12y7er3djFac5aI5ti1mzY0Q4;

        specialinvoke r55.<com.android.internal.telephony._$$Lambda$RIL$3M12y7er3djFac5aI5ti1mzY0Q4: void <init>(com.android.internal.telephony.RIL)>(r0);

        $r32 = interfaceinvoke $r30.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r55);

        $r33 = <com.android.internal.telephony._$$Lambda$OGSS2qx6njxlnp0dnKb4lA3jnw8: com.android.internal.telephony.'-$$Lambda$OGSS2qx6njxlnp0dnKb4lA3jnw8' INSTANCE>;

        r58 = (java.util.function.Supplier) $r33;

        $r34 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toCollection(java.util.function.Supplier)>(r58);

        $r35 = interfaceinvoke $r32.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r34);

        r46 = (java.util.ArrayList) $r35;

     label03:
        i2 = r43.<com.android.internal.telephony.RILRequest: int mSerial>;

        $z3 = virtualinvoke r46.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 != 0 goto label05;

     label04:
        z5 = 1;

        goto label06;

     label05:
        z5 = 0;

     label06:
        interfaceinvoke r44.<android.hardware.radio.V1_3.IRadio: void setSystemSelectionChannels(int,boolean,java.util.ArrayList)>(i2, z5, r46);

     label07:
        goto label09;

     label08:
        $r38 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r43, "setSystemSelectionChannels", $r38);

     label09:
        $r48 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r49 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z6 = virtualinvoke $r48.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r49);

        if $z6 == 0 goto label16;

        r50 = (android.hardware.radio.V1_5.IRadio) r42;

        if r50 == null goto label16;

        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r43.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r43.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" setSystemSelectionChannels_1.5= ");

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        $r14 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r14);

        $r15 = interfaceinvoke r40.<java.util.List: java.util.stream.Stream stream()>();

        r57 = new com.android.internal.telephony._$$Lambda$RIL$EScLaQUO_UHerMweNBKxezoJAb4;

        specialinvoke r57.<com.android.internal.telephony._$$Lambda$RIL$EScLaQUO_UHerMweNBKxezoJAb4: void <init>(com.android.internal.telephony.RIL)>(r0);

        $r17 = interfaceinvoke $r15.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r57);

        $r18 = <com.android.internal.telephony._$$Lambda$OGSS2qx6njxlnp0dnKb4lA3jnw8: com.android.internal.telephony.'-$$Lambda$OGSS2qx6njxlnp0dnKb4lA3jnw8' INSTANCE>;

        r59 = (java.util.function.Supplier) $r18;

        $r19 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toCollection(java.util.function.Supplier)>(r59);

        $r20 = interfaceinvoke $r17.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r19);

        r52 = (java.util.ArrayList) $r20;

     label10:
        i3 = r43.<com.android.internal.telephony.RILRequest: int mSerial>;

        $z2 = virtualinvoke r52.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label12;

     label11:
        z7 = 1;

        goto label13;

     label12:
        z7 = 0;

     label13:
        interfaceinvoke r50.<android.hardware.radio.V1_5.IRadio: void setSystemSelectionChannels_1_5(int,boolean,java.util.ArrayList)>(i3, z7, r52);

     label14:
        goto label16;

     label15:
        $r39 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r43, "setSystemSelectionChannels", $r39);

     label16:
        return;

        catch android.os.RemoteException from label03 to label04 with label08;
        catch java.lang.RuntimeException from label03 to label04 with label08;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.RuntimeException from label06 to label07 with label08;
        catch android.os.RemoteException from label10 to label11 with label15;
        catch java.lang.RuntimeException from label10 to label11 with label15;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.RuntimeException from label13 to label14 with label15;
    }

    public void setTTYMode(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(80, r13, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ttyMode = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label1:
        $i2 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void setTTYMode(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "setTTYMode", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setUiccSubscription(int, int, int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, $i4, $i5;
        android.os.WorkSource $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6, $r16;
        android.hardware.radio.V1_0.SelectUiccSub $r17;
        java.lang.Exception $r18;
        android.os.Message r19;
        android.hardware.radio.V1_0.IRadio r20;
        com.android.internal.telephony.RILRequest r21;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r19 := @parameter4: android.os.Message;

        r20 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r19);

        if r20 == null goto label4;

        $r1 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r21 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(122, r19, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r21.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i4 = r21.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r6 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" slot = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appIndex = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subId = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subStatus = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r16 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

        $r17 = new android.hardware.radio.V1_0.SelectUiccSub;

        specialinvoke $r17.<android.hardware.radio.V1_0.SelectUiccSub: void <init>()>();

        $r17.<android.hardware.radio.V1_0.SelectUiccSub: int slot> = i0;

        $r17.<android.hardware.radio.V1_0.SelectUiccSub: int appIndex> = i1;

        $r17.<android.hardware.radio.V1_0.SelectUiccSub: int subType> = i2;

        $r17.<android.hardware.radio.V1_0.SelectUiccSub: int actStatus> = i3;

     label1:
        $i5 = r21.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r20.<android.hardware.radio.V1_0.IRadio: void setUiccSubscription(int,android.hardware.radio.V1_0.SelectUiccSub)>($i5, $r17);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r21, "setUiccSubscription", $r18);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setUnsolResponseFilter(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r11;
        com.android.internal.telephony.HalVersion $r12, $r13, $r14, $r15;
        boolean $z0, $z1;
        android.hardware.radio.V1_2.IRadio $r16;
        android.hardware.radio.V1_5.IRadio $r17;
        java.lang.Exception $r18, $r19, $r20;
        android.os.Message r21;
        android.hardware.radio.V1_0.IRadio r22;
        com.android.internal.telephony.RILRequest r23;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r21 := @parameter1: android.os.Message;

        r22 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r21);

        if r22 == null goto label13;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r23 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(139, r21, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r23.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r23.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        $r13 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r12 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r13.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r12);

        if $z0 == 0 goto label05;

     label01:
        $r17 = (android.hardware.radio.V1_5.IRadio) r22;

        $i7 = r23.<com.android.internal.telephony.RILRequest: int mSerial>;

        $i6 = i0 & 127;

        interfaceinvoke $r17.<android.hardware.radio.V1_5.IRadio: void setIndicationFilter_1_5(int,int)>($i7, $i6);

     label02:
        goto label04;

     label03:
        $r20 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r23, "setIndicationFilter_1_5", $r20);

     label04:
        goto label13;

     label05:
        $r15 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r14 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2>;

        $z1 = virtualinvoke $r15.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r14);

        if $z1 == 0 goto label10;

     label06:
        $r16 = (android.hardware.radio.V1_2.IRadio) r22;

        $i5 = r23.<com.android.internal.telephony.RILRequest: int mSerial>;

        $i4 = i0 & 31;

        interfaceinvoke $r16.<android.hardware.radio.V1_2.IRadio: void setIndicationFilter_1_2(int,int)>($i5, $i4);

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r23, "setIndicationFilter_1_2", $r19);

     label09:
        goto label13;

     label10:
        $i3 = r23.<com.android.internal.telephony.RILRequest: int mSerial>;

        $i2 = i0 & 7;

        interfaceinvoke r22.<android.hardware.radio.V1_0.IRadio: void setIndicationFilter(int,int)>($i3, $i2);

     label11:
        goto label13;

     label12:
        $r18 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r23, "setIndicationFilter", $r18);

     label13:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.RuntimeException from label01 to label02 with label03;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.RuntimeException from label06 to label07 with label08;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch java.lang.RuntimeException from label10 to label11 with label12;
    }

    public void setupDataCall(int, android.telephony.data.DataProfile, boolean, boolean, int, android.net.LinkProperties, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0, z1, $z2, $z4, $z5, z8, z9, z10, z11, $z12;
        com.android.internal.telephony.RILRequest r1;
        java.util.ArrayList r3, $r7, $r8;
        java.util.Iterator r4, r115, r116;
        android.hardware.radio.V1_5.LinkAddress r5;
        android.os.WorkSource $r6;
        com.android.internal.telephony.HalVersion $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.Integer $r15;
        int $i0, $i1, $i2, $i3, $i4, i7, i8, i9, i10, i11, i13, $i14, $i15;
        java.lang.String $r27, $r30, $r33, $r45, $r46, $r49, $r52, $r64, $r65, $r68, $r71, $r83, $r87, $r92, $r95, $r138, $r139, $r140;
        java.util.List $r84, $r88, $r89;
        java.lang.Object $r85, $r90, $r93;
        java.net.InetAddress $r86, $r91, $r94;
        long $l5, $l6;
        java.lang.Exception $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, r125;
        android.telephony.data.DataProfile r110;
        android.net.LinkProperties r111;
        android.os.Message r112;
        android.hardware.radio.V1_0.IRadio r113;
        android.hardware.radio.V1_5.IRadio r118;
        android.hardware.radio.V1_5.DataProfileInfo r119, r120;
        android.net.LinkAddress r122;
        java.lang.StringBuilder r126, r129, r132, r137;
        android.hardware.radio.V1_4.IRadio r127;
        android.hardware.radio.V1_4.DataProfileInfo r128;
        android.hardware.radio.V1_2.IRadio r130;
        android.hardware.radio.V1_0.DataProfileInfo r131, r134;
        com.android.internal.telephony.Phone r135;
        android.telephony.ServiceState r136;

        r0 := @this: com.android.internal.telephony.RIL;

        i7 := @parameter0: int;

        r110 := @parameter1: android.telephony.data.DataProfile;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i8 := @parameter4: int;

        r111 := @parameter5: android.net.LinkProperties;

        r112 := @parameter6: android.os.Message;

        r113 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r112);

        if r113 == null goto label55;

        $r6 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r1 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(27, r112, $r6);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        if r111 == null goto label04;

        $r88 = virtualinvoke r111.<android.net.LinkProperties: java.util.List getAddresses()>();

        r115 = interfaceinvoke $r88.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke r115.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label02;

        $r93 = interfaceinvoke r115.<java.util.Iterator: java.lang.Object next()>();

        $r94 = (java.net.InetAddress) $r93;

        $r95 = virtualinvoke $r94.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r95);

        goto label01;

     label02:
        $r89 = virtualinvoke r111.<android.net.LinkProperties: java.util.List getDnsServers()>();

        r116 = interfaceinvoke $r89.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z5 = interfaceinvoke r116.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label04;

        $r90 = interfaceinvoke r116.<java.util.Iterator: java.lang.Object next()>();

        $r91 = (java.net.InetAddress) $r90;

        $r92 = virtualinvoke $r91.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r92);

        goto label03;

     label04:
        $r10 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r9 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        z8 = virtualinvoke $r10.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r9);

     label05:
        if z8 == 0 goto label22;

     label06:
        r118 = (android.hardware.radio.V1_5.IRadio) r113;

     label07:
        r119 = staticinvoke <com.android.internal.telephony.RIL: android.hardware.radio.V1_5.DataProfileInfo convertToHalDataProfile15(android.telephony.data.DataProfile)>(r110);

     label08:
        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

     label09:
        if r111 == null goto label16;

     label10:
        $r84 = virtualinvoke r111.<android.net.LinkProperties: java.util.List getAllLinkAddresses()>();

        r4 = interfaceinvoke $r84.<java.util.List: java.util.Iterator iterator()>();

     label11:
        r120 = r119;

     label12:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r85 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r122 = (android.net.LinkAddress) $r85;

        r5 = new android.hardware.radio.V1_5.LinkAddress;

        specialinvoke r5.<android.hardware.radio.V1_5.LinkAddress: void <init>()>();

        $r86 = virtualinvoke r122.<android.net.LinkAddress: java.net.InetAddress getAddress()>();

        $r87 = virtualinvoke $r86.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r5.<android.hardware.radio.V1_5.LinkAddress: java.lang.String address> = $r87;

        $i4 = virtualinvoke r122.<android.net.LinkAddress: int getFlags()>();

        r5.<android.hardware.radio.V1_5.LinkAddress: int properties> = $i4;

        $l5 = virtualinvoke r122.<android.net.LinkAddress: long getDeprecationTime()>();

        r5.<android.hardware.radio.V1_5.LinkAddress: long deprecationTime> = $l5;

        $l6 = virtualinvoke r122.<android.net.LinkAddress: long getExpirationTime()>();

        r5.<android.hardware.radio.V1_5.LinkAddress: long expirationTime> = $l6;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label13:
        goto label12;

     label14:
        r119 = r120;

        goto label16;

     label15:
        $r102 := @caughtexception;

        r125 = $r102;

        goto label54;

     label16:
        r126 = new java.lang.StringBuilder;

        specialinvoke r126.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r68 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",accessNetworkType=");

        $r71 = staticinvoke <android.telephony.AccessNetworkConstants$AccessNetworkType: java.lang.String toString(int)>(i7);

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",isRoaming=");

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowRoaming=");

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r110);

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",addresses=");

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dnses=");

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r83 = virtualinvoke r126.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r83);

        i9 = r1.<com.android.internal.telephony.RILRequest: int mSerial>;

     label17:
        interfaceinvoke r118.<android.hardware.radio.V1_5.IRadio: void setupDataCall_1_5(int,int,android.hardware.radio.V1_5.DataProfileInfo,boolean,int,java.util.ArrayList,java.util.ArrayList)>(i9, i7, r119, z1, i8, r3, $r8);

     label18:
        goto label49;

     label19:
        $r98 := @caughtexception;

        r125 = $r98;

        goto label54;

     label20:
        $r105 := @caughtexception;

        r125 = $r105;

        goto label54;

     label21:
        $r97 := @caughtexception;

        r125 = $r97;

        goto label54;

     label22:
        $r12 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r11 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4>;

        z9 = virtualinvoke $r12.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r11);

     label23:
        if z9 == 0 goto label32;

     label24:
        r127 = (android.hardware.radio.V1_4.IRadio) r113;

     label25:
        r128 = staticinvoke <com.android.internal.telephony.RIL: android.hardware.radio.V1_4.DataProfileInfo convertToHalDataProfile14(android.telephony.data.DataProfile)>(r110);

        r129 = new java.lang.StringBuilder;

        specialinvoke r129.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r49 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",accessNetworkType=");

        $r52 = staticinvoke <android.telephony.AccessNetworkConstants$AccessNetworkType: java.lang.String toString(int)>(i7);

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",isRoaming=");

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowRoaming=");

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r110);

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",addresses=");

     label26:
        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dnses=");

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r64 = virtualinvoke r129.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r64);

        i10 = r1.<com.android.internal.telephony.RILRequest: int mSerial>;

     label27:
        interfaceinvoke r127.<android.hardware.radio.V1_4.IRadio: void setupDataCall_1_4(int,int,android.hardware.radio.V1_4.DataProfileInfo,boolean,int,java.util.ArrayList,java.util.ArrayList)>(i10, i7, r128, z1, i8, $r7, $r8);

     label28:
        goto label49;

     label29:
        $r107 := @caughtexception;

        r125 = $r107;

        goto label54;

     label30:
        $r103 := @caughtexception;

        r125 = $r103;

        goto label54;

     label31:
        $r100 := @caughtexception;

        r125 = $r100;

        goto label54;

     label32:
        $r14 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r13 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2>;

        z10 = virtualinvoke $r14.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r13);

     label33:
        if z10 == 0 goto label42;

     label34:
        r130 = (android.hardware.radio.V1_2.IRadio) r113;

     label35:
        r131 = staticinvoke <com.android.internal.telephony.RIL: android.hardware.radio.V1_0.DataProfileInfo convertToHalDataProfile10(android.telephony.data.DataProfile)>(r110);

     label36:
        r132 = new java.lang.StringBuilder;

        specialinvoke r132.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r30 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",accessNetworkType=");

        $r33 = staticinvoke <android.telephony.AccessNetworkConstants$AccessNetworkType: java.lang.String toString(int)>(i7);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",isRoaming=");

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowRoaming=");

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r110);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",addresses=");

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dnses=");

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r45 = virtualinvoke r132.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r45);

        i11 = r1.<com.android.internal.telephony.RILRequest: int mSerial>;

        z11 = virtualinvoke r110.<android.telephony.data.DataProfile: boolean isPersistent()>();

     label37:
        interfaceinvoke r130.<android.hardware.radio.V1_2.IRadio: void setupDataCall_1_2(int,int,android.hardware.radio.V1_0.DataProfileInfo,boolean,boolean,boolean,int,java.util.ArrayList,java.util.ArrayList)>(i11, i7, r131, z11, z1, z0, i8, $r7, $r8);

     label38:
        goto label49;

     label39:
        $r109 := @caughtexception;

        r125 = $r109;

        goto label54;

     label40:
        $r96 := @caughtexception;

        r125 = $r96;

        goto label54;

     label41:
        $r106 := @caughtexception;

        r125 = $r106;

        goto label54;

     label42:
        r134 = staticinvoke <com.android.internal.telephony.RIL: android.hardware.radio.V1_0.DataProfileInfo convertToHalDataProfile10(android.telephony.data.DataProfile)>(r110);

     label43:
        $r15 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i0 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        r135 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getPhone(int)>($i0);

     label44:
        i13 = 0;

        if r135 == null goto label48;

     label45:
        r136 = virtualinvoke r135.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

     label46:
        i13 = 0;

        if r136 == null goto label48;

     label47:
        i13 = virtualinvoke r136.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

     label48:
        r137 = new java.lang.StringBuilder;

        specialinvoke r137.<java.lang.StringBuilder: void <init>()>();

        $r138 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r138);

        virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i14 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r139 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i14);

        virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r139);

        virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dataRat=");

        virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);

        virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",isRoaming=");

        virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowRoaming=");

        virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r110);

        $r140 = virtualinvoke r137.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r140);

        $i15 = r1.<com.android.internal.telephony.RILRequest: int mSerial>;

        $z12 = virtualinvoke r110.<android.telephony.data.DataProfile: boolean isPersistent()>();

        interfaceinvoke r113.<android.hardware.radio.V1_0.IRadio: void setupDataCall(int,int,android.hardware.radio.V1_0.DataProfileInfo,boolean,boolean,boolean)>($i15, i13, r134, $z12, z1, z0);

     label49:
        goto label55;

     label50:
        $r101 := @caughtexception;

        r125 = $r101;

        goto label54;

     label51:
        $r108 := @caughtexception;

        r125 = $r108;

        goto label54;

     label52:
        $r99 := @caughtexception;

        r125 = $r99;

        goto label54;

     label53:
        $r104 := @caughtexception;

        r125 = $r104;

     label54:
        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r1, "setupDataCall", r125);

     label55:
        return;

        catch android.os.RemoteException from label04 to label05 with label53;
        catch java.lang.RuntimeException from label04 to label05 with label53;
        catch android.os.RemoteException from label06 to label07 with label21;
        catch java.lang.RuntimeException from label06 to label07 with label21;
        catch android.os.RemoteException from label07 to label08 with label21;
        catch java.lang.RuntimeException from label07 to label08 with label21;
        catch android.os.RemoteException from label08 to label09 with label20;
        catch java.lang.RuntimeException from label08 to label09 with label20;
        catch android.os.RemoteException from label10 to label11 with label15;
        catch java.lang.RuntimeException from label10 to label11 with label15;
        catch android.os.RemoteException from label12 to label13 with label15;
        catch java.lang.RuntimeException from label12 to label13 with label15;
        catch android.os.RemoteException from label16 to label17 with label20;
        catch java.lang.RuntimeException from label16 to label17 with label20;
        catch android.os.RemoteException from label17 to label18 with label19;
        catch java.lang.RuntimeException from label17 to label18 with label19;
        catch android.os.RemoteException from label22 to label23 with label52;
        catch java.lang.RuntimeException from label22 to label23 with label52;
        catch android.os.RemoteException from label24 to label25 with label31;
        catch java.lang.RuntimeException from label24 to label25 with label31;
        catch android.os.RemoteException from label25 to label26 with label31;
        catch java.lang.RuntimeException from label25 to label26 with label31;
        catch android.os.RemoteException from label26 to label27 with label30;
        catch java.lang.RuntimeException from label26 to label27 with label30;
        catch android.os.RemoteException from label27 to label28 with label29;
        catch java.lang.RuntimeException from label27 to label28 with label29;
        catch android.os.RemoteException from label32 to label33 with label51;
        catch java.lang.RuntimeException from label32 to label33 with label51;
        catch android.os.RemoteException from label34 to label35 with label41;
        catch java.lang.RuntimeException from label34 to label35 with label41;
        catch android.os.RemoteException from label35 to label36 with label41;
        catch java.lang.RuntimeException from label35 to label36 with label41;
        catch android.os.RemoteException from label36 to label37 with label40;
        catch java.lang.RuntimeException from label36 to label37 with label40;
        catch android.os.RemoteException from label37 to label38 with label39;
        catch java.lang.RuntimeException from label37 to label38 with label39;
        catch android.os.RemoteException from label42 to label43 with label50;
        catch java.lang.RuntimeException from label42 to label43 with label50;
        catch android.os.RemoteException from label43 to label44 with label50;
        catch java.lang.RuntimeException from label43 to label44 with label50;
        catch android.os.RemoteException from label45 to label46 with label50;
        catch java.lang.RuntimeException from label45 to label46 with label50;
        catch android.os.RemoteException from label47 to label48 with label50;
        catch java.lang.RuntimeException from label47 to label48 with label50;
        catch android.os.RemoteException from label48 to label49 with label50;
        catch java.lang.RuntimeException from label48 to label49 with label50;
    }

    public void startDtmf(char, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        char c0;
        int i1, $i2;
        android.os.WorkSource $r1;
        java.lang.StringBuilder $r2, r17;
        java.lang.String $r3, $r6, $r8, $r11;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        c0 := @parameter0: char;

        r13 := @parameter1: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        if r14 == null goto label4;

        $r1 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(49, r13, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r6 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r8);

     label1:
        i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void startDtmf(int,java.lang.String)>(i1, $r11);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "startDtmf", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void startLceService(int, boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        boolean z0, $z1;
        com.android.internal.telephony.HalVersion $r2, $r3;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r15;
        java.lang.Exception $r16;
        android.os.Message r17;
        android.hardware.radio.V1_0.IRadio r18;
        com.android.internal.telephony.RILRequest r19;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r17 := @parameter2: android.os.Message;

        r18 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r17);

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2>;

        $z1 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r2);

        if $z1 == 0 goto label1;

        return;

     label1:
        if r18 == null goto label5;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r19 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(132, r17, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r19.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r19.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reportIntervalMs = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pullMode = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r15 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

     label2:
        $i2 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r18.<android.hardware.radio.V1_0.IRadio: void startLceService(int,int,boolean)>($i2, i0, z0);

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r19, "startLceService", $r16);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void startNattKeepalive(int, android.net.KeepalivePacketData, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.hardware.radio.V1_1.IRadio r1;
        java.net.InetAddress r2, $r14, $r15, r31;
        com.android.internal.telephony.HalVersion $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.WorkSource $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8, $r11, $r13;
        com.android.internal.telephony.CommandException $r16, $r22;
        byte[] $r18, $r20;
        java.util.ArrayList $r19, $r21;
        java.lang.Exception $r24;
        android.net.KeepalivePacketData r25;
        android.os.Message r26;
        android.hardware.radio.V1_0.IRadio r27;
        com.android.internal.telephony.RILRequest r28;
        android.hardware.radio.V1_1.KeepaliveRequest r30;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r25 := @parameter1: android.net.KeepalivePacketData;

        i1 := @parameter2: int;

        r26 := @parameter3: android.os.Message;

        staticinvoke <com.android.internal.telephony.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r25, "KeepaliveRequest cannot be null.");

        r27 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r26);

        if r27 != null goto label01;

        return;

     label01:
        $r5 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r4 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_1>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r4);

        if $z0 == 0 goto label03;

        if r26 == null goto label02;

        $r22 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r26, null, $r22);

        virtualinvoke r26.<android.os.Message: void sendToTarget()>();

     label02:
        return;

     label03:
        r1 = (android.hardware.radio.V1_1.IRadio) r27;

        $r6 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r28 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(144, r26, $r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r28.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r28.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label04:
        r30 = new android.hardware.radio.V1_1.KeepaliveRequest;

        specialinvoke r30.<android.hardware.radio.V1_1.KeepaliveRequest: void <init>()>();

        r30.<android.hardware.radio.V1_1.KeepaliveRequest: int cid> = i0;

        $r14 = virtualinvoke r25.<android.net.KeepalivePacketData: java.net.InetAddress getDstAddress()>();

        $z1 = $r14 instanceof java.net.Inet4Address;

        if $z1 == 0 goto label06;

        r30.<android.hardware.radio.V1_1.KeepaliveRequest: int type> = 0;

     label05:
        goto label07;

     label06:
        $r15 = virtualinvoke r25.<android.net.KeepalivePacketData: java.net.InetAddress getDstAddress()>();

        $z2 = $r15 instanceof java.net.Inet6Address;

        if $z2 == 0 goto label11;

        r30.<android.hardware.radio.V1_1.KeepaliveRequest: int type> = 1;

     label07:
        r31 = virtualinvoke r25.<android.net.KeepalivePacketData: java.net.InetAddress getSrcAddress()>();

        r2 = virtualinvoke r25.<android.net.KeepalivePacketData: java.net.InetAddress getDstAddress()>();

     label08:
        $r18 = virtualinvoke r31.<java.net.InetAddress: byte[] getAddress()>();

        $r19 = r30.<android.hardware.radio.V1_1.KeepaliveRequest: java.util.ArrayList sourceAddress>;

        staticinvoke <com.android.internal.telephony.RIL: void appendPrimitiveArrayToArrayList(byte[],java.util.ArrayList)>($r18, $r19);

        $i3 = virtualinvoke r25.<android.net.KeepalivePacketData: int getSrcPort()>();

        r30.<android.hardware.radio.V1_1.KeepaliveRequest: int sourcePort> = $i3;

     label09:
        $r20 = virtualinvoke r2.<java.net.InetAddress: byte[] getAddress()>();

        $r21 = r30.<android.hardware.radio.V1_1.KeepaliveRequest: java.util.ArrayList destinationAddress>;

        staticinvoke <com.android.internal.telephony.RIL: void appendPrimitiveArrayToArrayList(byte[],java.util.ArrayList)>($r20, $r21);

        $i4 = virtualinvoke r25.<android.net.KeepalivePacketData: int getDstPort()>();

        r30.<android.hardware.radio.V1_1.KeepaliveRequest: int destinationPort> = $i4;

        r30.<android.hardware.radio.V1_1.KeepaliveRequest: int maxKeepaliveIntervalMillis> = i1;

        $i5 = r28.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_1.IRadio: void startKeepalive(int,android.hardware.radio.V1_1.KeepaliveRequest)>($i5, r30);

     label10:
        goto label14;

     label11:
        $r16 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(44);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r26, null, $r16);

        virtualinvoke r26.<android.os.Message: void sendToTarget()>();

     label12:
        return;

     label13:
        $r24 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r28, "startNattKeepalive", $r24);

     label14:
        return;

        catch android.os.RemoteException from label04 to label05 with label13;
        catch java.lang.RuntimeException from label04 to label05 with label13;
        catch android.os.RemoteException from label06 to label07 with label13;
        catch java.lang.RuntimeException from label06 to label07 with label13;
        catch android.os.RemoteException from label07 to label08 with label13;
        catch java.lang.RuntimeException from label07 to label08 with label13;
        catch android.os.RemoteException from label08 to label09 with label13;
        catch java.lang.RuntimeException from label08 to label09 with label13;
        catch android.os.RemoteException from label09 to label10 with label13;
        catch java.lang.RuntimeException from label09 to label10 with label13;
        catch android.os.RemoteException from label11 to label12 with label13;
        catch java.lang.RuntimeException from label11 to label12 with label13;
    }

    public void startNetworkScan(android.telephony.NetworkScanRequest, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i19, i20, i21, i22, i23;
        java.lang.StringBuilder $r1, $r15, $r29, $r48;
        java.lang.String $r4, $r16, $r19, $r21, $r30, $r33, $r35, $r49, $r52, $r54;
        com.android.internal.telephony.HalVersion $r5, $r6, $r7, $r8, $r9, $r10, $r36, $r37, $r59, r66;
        boolean $z0, $z1, $z2, $z4, $z6, $z8, $z11;
        com.android.internal.telephony.CommandException $r11, $r23, $r41, $r57;
        android.hardware.radio.V1_1.NetworkScanRequest $r13;
        android.os.WorkSource $r14, $r28, $r47;
        java.util.ArrayList $r22, $r26, $r27, $r40, $r44, $r45, $r56;
        android.hardware.radio.V1_2.NetworkScanRequest $r25;
        android.hardware.radio.V1_2.IRadio $r38;
        android.hardware.radio.V1_4.IRadio $r39;
        android.hardware.radio.V1_5.NetworkScanRequest $r43;
        java.lang.Object[] $r46;
        android.hardware.radio.V1_5.IRadio $r55;
        java.lang.Exception $r60, $r61, $r62;
        android.telephony.NetworkScanRequest r63;
        android.os.Message r64;
        android.hardware.radio.V1_0.IRadio r65;
        android.telephony.RadioAccessSpecifier[] r69, r76, r84;
        android.telephony.RadioAccessSpecifier r70, r77, r85;
        android.hardware.radio.V1_5.RadioAccessSpecifier r71;
        com.android.internal.telephony.RILRequest r72, r79, r87;
        android.hardware.radio.V1_1.RadioAccessSpecifier r78, r86;
        android.hardware.radio.V1_1.IRadio r82;

        r0 := @this: com.android.internal.telephony.RIL;

        r63 := @parameter0: android.telephony.NetworkScanRequest;

        r64 := @parameter1: android.os.Message;

        r65 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r64);

        if r65 == null goto label27;

        r66 = virtualinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion getCompatVersion(int)>(142);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startNetworkScan: overrideHalVersion=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r4);

        i19 = 0;

        if r66 == null goto label01;

        $r59 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z11 = virtualinvoke r66.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r59);

        if $z11 == 0 goto label09;

     label01:
        $r6 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r5 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r6.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r5);

        if $z0 == 0 goto label09;

        $r43 = new android.hardware.radio.V1_5.NetworkScanRequest;

        specialinvoke $r43.<android.hardware.radio.V1_5.NetworkScanRequest: void <init>()>();

        $i12 = virtualinvoke r63.<android.telephony.NetworkScanRequest: int getScanType()>();

        $r43.<android.hardware.radio.V1_5.NetworkScanRequest: int type> = $i12;

        $i13 = virtualinvoke r63.<android.telephony.NetworkScanRequest: int getSearchPeriodicity()>();

        $r43.<android.hardware.radio.V1_5.NetworkScanRequest: int interval> = $i13;

        $i14 = virtualinvoke r63.<android.telephony.NetworkScanRequest: int getMaxSearchTime()>();

        $r43.<android.hardware.radio.V1_5.NetworkScanRequest: int maxSearchTime> = $i14;

        $i15 = virtualinvoke r63.<android.telephony.NetworkScanRequest: int getIncrementalResultsPeriodicity()>();

        $r43.<android.hardware.radio.V1_5.NetworkScanRequest: int incrementalResultsPeriodicity> = $i15;

        $z8 = virtualinvoke r63.<android.telephony.NetworkScanRequest: boolean getIncrementalResults()>();

        $r43.<android.hardware.radio.V1_5.NetworkScanRequest: boolean incrementalResults> = $z8;

        r69 = virtualinvoke r63.<android.telephony.NetworkScanRequest: android.telephony.RadioAccessSpecifier[] getSpecifiers()>();

        i20 = lengthof r69;

        i21 = 0;

     label02:
        if i21 >= i20 goto label04;

        r70 = r69[i21];

        r71 = specialinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_5.RadioAccessSpecifier convertRadioAccessSpecifierToRadioHAL_1_5(android.telephony.RadioAccessSpecifier)>(r70);

        if r71 != null goto label03;

        $r57 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r64, null, $r57);

        virtualinvoke r64.<android.os.Message: void sendToTarget()>();

        return;

     label03:
        $r56 = $r43.<android.hardware.radio.V1_5.NetworkScanRequest: java.util.ArrayList specifiers>;

        virtualinvoke $r56.<java.util.ArrayList: boolean add(java.lang.Object)>(r71);

        i21 = i21 + 1;

        goto label02;

     label04:
        $r44 = $r43.<android.hardware.radio.V1_5.NetworkScanRequest: java.util.ArrayList mccMncs>;

        $r45 = virtualinvoke r63.<android.telephony.NetworkScanRequest: java.util.ArrayList getPlmns()>();

        virtualinvoke $r44.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r45);

        $r47 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        $r46 = newarray (java.lang.Object)[1];

        $r46[0] = r63;

        r72 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource,java.lang.Object[])>(142, r64, $r47, $r46);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke r72.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i16 = r72.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r52 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i16);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r54);

     label05:
        $r55 = (android.hardware.radio.V1_5.IRadio) r65;

        $i17 = r72.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke $r55.<android.hardware.radio.V1_5.IRadio: void startNetworkScan_1_5(int,android.hardware.radio.V1_5.NetworkScanRequest)>($i17, $r43);

     label06:
        goto label08;

     label07:
        $r62 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r72, "startNetworkScan", $r62);

     label08:
        goto label27;

     label09:
        $r8 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r7 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2>;

        $z1 = virtualinvoke $r8.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r7);

        if $z1 == 0 goto label19;

        $r25 = new android.hardware.radio.V1_2.NetworkScanRequest;

        specialinvoke $r25.<android.hardware.radio.V1_2.NetworkScanRequest: void <init>()>();

        $i5 = virtualinvoke r63.<android.telephony.NetworkScanRequest: int getScanType()>();

        $r25.<android.hardware.radio.V1_2.NetworkScanRequest: int type> = $i5;

        $i6 = virtualinvoke r63.<android.telephony.NetworkScanRequest: int getSearchPeriodicity()>();

        $r25.<android.hardware.radio.V1_2.NetworkScanRequest: int interval> = $i6;

        $i7 = virtualinvoke r63.<android.telephony.NetworkScanRequest: int getMaxSearchTime()>();

        $r25.<android.hardware.radio.V1_2.NetworkScanRequest: int maxSearchTime> = $i7;

        $i8 = virtualinvoke r63.<android.telephony.NetworkScanRequest: int getIncrementalResultsPeriodicity()>();

        $r25.<android.hardware.radio.V1_2.NetworkScanRequest: int incrementalResultsPeriodicity> = $i8;

        $z4 = virtualinvoke r63.<android.telephony.NetworkScanRequest: boolean getIncrementalResults()>();

        $r25.<android.hardware.radio.V1_2.NetworkScanRequest: boolean incrementalResults> = $z4;

        r76 = virtualinvoke r63.<android.telephony.NetworkScanRequest: android.telephony.RadioAccessSpecifier[] getSpecifiers()>();

        i22 = lengthof r76;

     label10:
        if i19 >= i22 goto label12;

        r77 = r76[i19];

        r78 = specialinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_1.RadioAccessSpecifier convertRadioAccessSpecifierToRadioHAL(android.telephony.RadioAccessSpecifier)>(r77);

        if r78 != null goto label11;

        $r41 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r64, null, $r41);

        virtualinvoke r64.<android.os.Message: void sendToTarget()>();

        return;

     label11:
        $r40 = $r25.<android.hardware.radio.V1_2.NetworkScanRequest: java.util.ArrayList specifiers>;

        virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>(r78);

        i19 = i19 + 1;

        goto label10;

     label12:
        $r26 = $r25.<android.hardware.radio.V1_2.NetworkScanRequest: java.util.ArrayList mccMncs>;

        $r27 = virtualinvoke r63.<android.telephony.NetworkScanRequest: java.util.ArrayList getPlmns()>();

        virtualinvoke $r26.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r27);

        $r28 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r79 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(142, r64, $r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke r79.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i9 = r79.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r33 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i9);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r35);

     label13:
        $r37 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r36 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_4>;

        $z6 = virtualinvoke $r37.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r36);

        if $z6 == 0 goto label15;

        $r39 = (android.hardware.radio.V1_4.IRadio) r65;

        $i11 = r79.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke $r39.<android.hardware.radio.V1_4.IRadio: void startNetworkScan_1_4(int,android.hardware.radio.V1_2.NetworkScanRequest)>($i11, $r25);

     label14:
        goto label16;

     label15:
        $r38 = (android.hardware.radio.V1_2.IRadio) r65;

        $i10 = r79.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke $r38.<android.hardware.radio.V1_2.IRadio: void startNetworkScan_1_2(int,android.hardware.radio.V1_2.NetworkScanRequest)>($i10, $r25);

     label16:
        goto label18;

     label17:
        $r60 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r79, "startNetworkScan", $r60);

     label18:
        goto label27;

     label19:
        $r10 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r9 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_1>;

        $z2 = virtualinvoke $r10.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r9);

        if $z2 == 0 goto label26;

        r82 = (android.hardware.radio.V1_1.IRadio) r65;

        $r13 = new android.hardware.radio.V1_1.NetworkScanRequest;

        specialinvoke $r13.<android.hardware.radio.V1_1.NetworkScanRequest: void <init>()>();

        $i1 = virtualinvoke r63.<android.telephony.NetworkScanRequest: int getScanType()>();

        $r13.<android.hardware.radio.V1_1.NetworkScanRequest: int type> = $i1;

        $i2 = virtualinvoke r63.<android.telephony.NetworkScanRequest: int getSearchPeriodicity()>();

        $r13.<android.hardware.radio.V1_1.NetworkScanRequest: int interval> = $i2;

        r84 = virtualinvoke r63.<android.telephony.NetworkScanRequest: android.telephony.RadioAccessSpecifier[] getSpecifiers()>();

        i0 = lengthof r84;

        i23 = 0;

     label20:
        if i23 >= i0 goto label22;

        r85 = r84[i23];

        r86 = specialinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_1.RadioAccessSpecifier convertRadioAccessSpecifierToRadioHAL(android.telephony.RadioAccessSpecifier)>(r85);

        if r86 != null goto label21;

        $r23 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r64, null, $r23);

        virtualinvoke r64.<android.os.Message: void sendToTarget()>();

        return;

     label21:
        $r22 = $r13.<android.hardware.radio.V1_1.NetworkScanRequest: java.util.ArrayList specifiers>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>(r86);

        i23 = i23 + 1;

        goto label20;

     label22:
        $r14 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r87 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(142, r64, $r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r87.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r87.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r19 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r21);

     label23:
        $i4 = r87.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r82.<android.hardware.radio.V1_1.IRadio: void startNetworkScan(int,android.hardware.radio.V1_1.NetworkScanRequest)>($i4, $r13);

     label24:
        goto label27;

     label25:
        $r61 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r87, "startNetworkScan", $r61);

        goto label27;

     label26:
        if r64 == null goto label27;

        $r11 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r64, null, $r11);

        virtualinvoke r64.<android.os.Message: void sendToTarget()>();

     label27:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.RuntimeException from label05 to label06 with label07;
        catch android.os.RemoteException from label13 to label14 with label17;
        catch java.lang.RuntimeException from label13 to label14 with label17;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.RuntimeException from label15 to label16 with label17;
        catch android.os.RemoteException from label23 to label24 with label25;
        catch java.lang.RuntimeException from label23 to label24 with label25;
    }

    public void stopDtmf(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(50, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void stopDtmf(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "stopDtmf", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void stopLceService(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.HalVersion $r2, $r3;
        boolean $z0;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r11;
        int $i0, $i1;
        java.lang.Exception $r12;
        android.os.Message r13;
        android.hardware.radio.V1_0.IRadio r14;
        com.android.internal.telephony.RILRequest r15;

        r0 := @this: com.android.internal.telephony.RIL;

        r13 := @parameter0: android.os.Message;

        r14 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r13);

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_2>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        if r14 == null goto label5;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r15 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(133, r13, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r15.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r15.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label2:
        $i1 = r15.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r14.<android.hardware.radio.V1_0.IRadio: void stopLceService(int)>($i1);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r15, "stopLceService", $r12);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void stopNattKeepalive(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        com.android.internal.telephony.HalVersion $r2, $r3;
        boolean $z0;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r11;
        com.android.internal.telephony.CommandException $r12;
        java.lang.Exception $r14;
        android.os.Message r15;
        android.hardware.radio.V1_0.IRadio r16;
        android.hardware.radio.V1_1.IRadio r17;
        com.android.internal.telephony.RILRequest r18;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r15 := @parameter1: android.os.Message;

        r16 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r15);

        if r16 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_1>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r2);

        if $z0 == 0 goto label3;

        if r15 == null goto label2;

        $r12 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r15, null, $r12);

        virtualinvoke r15.<android.os.Message: void sendToTarget()>();

     label2:
        return;

     label3:
        r17 = (android.hardware.radio.V1_1.IRadio) r16;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(145, r15, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r18.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r18.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

     label4:
        $i2 = r18.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r17.<android.hardware.radio.V1_1.IRadio: void stopKeepalive(int,int)>($i2, i0);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r18, "stopNattKeepalive", $r14);

     label7:
        return;

        catch android.os.RemoteException from label4 to label5 with label6;
        catch java.lang.RuntimeException from label4 to label5 with label6;
    }

    public void stopNetworkScan(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.HalVersion $r2, $r3;
        boolean $z0;
        com.android.internal.telephony.CommandException $r4;
        android.os.WorkSource $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8, $r11, $r13;
        int $i0, $i1;
        java.lang.Exception $r14;
        android.os.Message r15;
        android.hardware.radio.V1_0.IRadio r16;
        android.hardware.radio.V1_1.IRadio r17;
        com.android.internal.telephony.RILRequest r18;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: android.os.Message;

        r16 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r15);

        if r16 == null goto label5;

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r2 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_1>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r2);

        if $z0 == 0 goto label4;

        r17 = (android.hardware.radio.V1_1.IRadio) r16;

        $r6 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r18 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(143, r15, $r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r18.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r18.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label1:
        $i1 = r18.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r17.<android.hardware.radio.V1_1.IRadio: void stopNetworkScan(int)>($i1);

     label2:
        goto label5;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r18, "stopNetworkScan", $r14);

        goto label5;

     label4:
        if r15 == null goto label5;

        $r4 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r15, null, $r4);

        virtualinvoke r15.<android.os.Message: void sendToTarget()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void supplyIccPin(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPinForApp(java.lang.String,java.lang.String,android.os.Message)>(r1, null, r2);

        return;
    }

    public void supplyIccPin2(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPin2ForApp(java.lang.String,java.lang.String,android.os.Message)>(r1, null, r2);

        return;
    }

    public void supplyIccPin2ForApp(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r9, $r13, $r14, $r15, r17;
        android.hardware.radio.V1_0.IRadio r2;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        int $i0, $i1;
        java.lang.Exception $r16;
        android.os.Message r18;
        com.android.internal.telephony.RILRequest r19;

        r0 := @this: com.android.internal.telephony.RIL;

        r17 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r18 := @parameter2: android.os.Message;

        r2 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r18);

        if r2 == null goto label4;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r19 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(4, r18, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r19.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r19.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label1:
        $i1 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r17);

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        interfaceinvoke r2.<android.hardware.radio.V1_0.IRadio: void supplyIccPin2ForApp(int,java.lang.String,java.lang.String)>($i1, $r14, $r15);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r19, "supplyIccPin2ForApp", $r16);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void supplyIccPinForApp(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r9, $r13, $r14, $r15, r17;
        android.hardware.radio.V1_0.IRadio r2;
        android.os.WorkSource $r4;
        java.lang.StringBuilder $r5;
        int $i0, $i1;
        java.lang.Exception $r16;
        android.os.Message r18;
        com.android.internal.telephony.RILRequest r19;

        r0 := @this: com.android.internal.telephony.RIL;

        r17 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r18 := @parameter2: android.os.Message;

        r2 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r18);

        if r2 == null goto label4;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r19 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(2, r18, $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r19.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r19.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

     label1:
        $i1 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r17);

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        interfaceinvoke r2.<android.hardware.radio.V1_0.IRadio: void supplyIccPinForApp(int,java.lang.String,java.lang.String)>($i1, $r14, $r15);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r19, "supplyIccPinForApp", $r16);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void supplyIccPuk(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPukForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void supplyIccPuk2(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPuk2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void supplyIccPuk2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r7, $r10, $r14, $r15, $r16, $r17, r19;
        android.hardware.radio.V1_0.IRadio r3;
        android.os.WorkSource $r5;
        java.lang.StringBuilder $r6;
        int $i0, $i1;
        java.lang.Exception $r18;
        android.os.Message r20;
        com.android.internal.telephony.RILRequest r21;

        r0 := @this: com.android.internal.telephony.RIL;

        r19 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r20 := @parameter3: android.os.Message;

        r3 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r20);

        if r3 == null goto label4;

        $r5 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r21 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(5, r20, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r21.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r21.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r14);

     label1:
        $i1 = r21.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r19);

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        $r17 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r2);

        interfaceinvoke r3.<android.hardware.radio.V1_0.IRadio: void supplyIccPuk2ForApp(int,java.lang.String,java.lang.String,java.lang.String)>($i1, $r15, $r16, $r17);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r21, "supplyIccPuk2ForApp", $r18);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void supplyIccPukForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r7, $r10, $r14, $r15, $r16, $r17, r19;
        android.hardware.radio.V1_0.IRadio r3;
        android.os.WorkSource $r5;
        java.lang.StringBuilder $r6;
        int $i0, $i1;
        java.lang.Exception $r18;
        android.os.Message r20;
        com.android.internal.telephony.RILRequest r21;

        r0 := @this: com.android.internal.telephony.RIL;

        r19 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r20 := @parameter3: android.os.Message;

        r3 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r20);

        if r3 == null goto label4;

        $r5 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r21 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(3, r20, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r21.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r21.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r14);

     label1:
        $i1 = r21.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r19);

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        $r17 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r2);

        interfaceinvoke r3.<android.hardware.radio.V1_0.IRadio: void supplyIccPukForApp(int,java.lang.String,java.lang.String,java.lang.String)>($i1, $r15, $r16, $r17);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r21, "supplyIccPukForApp", $r18);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void supplyNetworkDepersonalization(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r12, $r13, r15;
        int $i0, $i1;
        java.lang.Exception $r14;
        android.os.Message r16;
        com.android.internal.telephony.RILRequest r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r16);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(8, r16, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" netpin = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

     label1:
        $i1 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r15);

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void supplyNetworkDepersonalization(int,java.lang.String)>($i1, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r17, "supplyNetworkDepersonalization", $r14);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void supplySimDepersonalization(com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r9, $r12, $r18, $r19;
        com.android.internal.telephony.HalVersion $r3, $r4;
        boolean $z0;
        com.android.internal.telephony.CommandException $r5;
        android.os.WorkSource $r7;
        java.lang.StringBuilder $r8;
        int $i0, $i1, $i2;
        java.lang.Exception $r20;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState r21;
        android.os.Message r22;
        android.hardware.radio.V1_0.IRadio r23;
        android.hardware.radio.V1_5.IRadio r24;
        com.android.internal.telephony.RILRequest r25;

        r0 := @this: com.android.internal.telephony.RIL;

        r21 := @parameter0: com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState;

        r1 := @parameter1: java.lang.String;

        r22 := @parameter2: android.os.Message;

        r23 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r22);

        $r4 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion mRadioVersion>;

        $r3 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z0 = virtualinvoke $r4.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r3);

        if $z0 == 0 goto label5;

        r24 = (android.hardware.radio.V1_5.IRadio) r23;

        if r24 == null goto label4;

        $r7 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r25 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(212, r22, $r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r25.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r25.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" controlKey = ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" persoType");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r18 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r18);

     label1:
        $i1 = r25.<com.android.internal.telephony.RILRequest: int mSerial>;

        $i2 = staticinvoke <com.android.internal.telephony.RIL: int convertPersoTypeToHalPersoType(com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState)>(r21);

        $r19 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        interfaceinvoke r24.<android.hardware.radio.V1_5.IRadio: void supplySimDepersonalization(int,int,java.lang.String)>($i1, $i2, $r19);

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r25, "supplySimDepersonalization", $r20);

     label4:
        goto label6;

     label5:
        if r22 == null goto label6;

        $r5 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r22, null, $r5);

        virtualinvoke r22.<android.os.Message: void sendToTarget()>();

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void switchWaitingOrHoldingAndActive(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.Exception $r10;
        android.os.Message r11;
        android.hardware.radio.V1_0.IRadio r12;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r11 := @parameter0: android.os.Message;

        r12 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r11);

        if r12 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r13 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(15, r11, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r13.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r13.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

     label1:
        $i1 = r13.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r12.<android.hardware.radio.V1_0.IRadio: void switchWaitingOrHoldingAndActive(int)>($i1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r13, "switchWaitingOrHoldingAndActive", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void testingEmergencyCall()
    {
        com.android.internal.telephony.RIL r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.android.internal.telephony.RIL;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("testingEmergencyCall");

        $r1 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    void unsljLog(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r4 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r6);

        return;
    }

    void unsljLogMore(int, java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.String r1, $r5, $r9;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r5 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        return;
    }

    void unsljLogRet(int, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.Object r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r8, $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r5 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String retToString(int,java.lang.Object)>(i0, r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        return;
    }

    void unsljLogvRet(int, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.Object r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r8, $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r5 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String retToString(int,java.lang.Object)>(i0, r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.RIL: void riljLogv(java.lang.String)>($r10);

        return;
    }

    void writeMetricsCallRing(char[])
    {
        com.android.internal.telephony.RIL r0;
        char[] r1;
        java.lang.Integer $r2;
        com.android.internal.telephony.metrics.TelephonyMetrics $r3;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: char[];

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r2 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilCallRing(int,char[])>($i0, r1);

        return;
    }

    void writeMetricsModemRestartEvent(java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;
        java.lang.Integer $r2;
        com.android.internal.telephony.metrics.TelephonyMetrics $r3;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r2 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeModemRestartEvent(int,java.lang.String)>($i0, r1);

        return;
    }

    void writeMetricsSrvcc(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2;
        java.lang.Integer $r1, $r3;
        com.android.internal.telephony.metrics.TelephonyMetrics $r2;
        com.android.internal.telephony.Phone $r4;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r5;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r1 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i1 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeRilSrvcc(int,int)>($i1, i0);

        $r3 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mPhoneId>;

        $i2 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getPhone(int)>($i2);

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        virtualinvoke $r5.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onRilSrvccStateChanged(int)>(i0);

        return;
    }

    public void writeSmsToRuim(int, byte[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.hardware.radio.V1_0.IRadio r1;
        android.os.WorkSource $r3;
        android.hardware.radio.V1_0.CdmaSmsWriteArgs $r4;
        android.hardware.radio.V1_0.CdmaSmsMessage $r5;
        int $i0, i1, i2;
        java.lang.Exception $r6;
        byte[] r7;
        android.os.Message r8;
        com.android.internal.telephony.RILRequest r9;

        r0 := @this: com.android.internal.telephony.RIL;

        i1 := @parameter0: int;

        r7 := @parameter1: byte[];

        r8 := @parameter2: android.os.Message;

        i2 = specialinvoke r0.<com.android.internal.telephony.RIL: int translateStatus(int)>(i1);

        r1 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r8);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r9 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(96, r8, $r3);

        $r4 = new android.hardware.radio.V1_0.CdmaSmsWriteArgs;

        specialinvoke $r4.<android.hardware.radio.V1_0.CdmaSmsWriteArgs: void <init>()>();

        $r4.<android.hardware.radio.V1_0.CdmaSmsWriteArgs: int status> = i2;

        $r5 = $r4.<android.hardware.radio.V1_0.CdmaSmsWriteArgs: android.hardware.radio.V1_0.CdmaSmsMessage message>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructCdmaSendSmsRilRequest(android.hardware.radio.V1_0.CdmaSmsMessage,byte[])>($r5, r7);

     label1:
        $i0 = r9.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.V1_0.IRadio: void writeSmsToRuim(int,android.hardware.radio.V1_0.CdmaSmsWriteArgs)>($i0, $r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r9, "writeSmsToRuim", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void writeSmsToSim(int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r7, r9;
        android.hardware.radio.V1_0.IRadio r2;
        android.os.WorkSource $r4;
        android.hardware.radio.V1_0.SmsWriteArgs $r5;
        int $i0, i1, i2;
        java.lang.Exception $r8;
        android.os.Message r10;
        com.android.internal.telephony.RILRequest r11;

        r0 := @this: com.android.internal.telephony.RIL;

        i1 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r10 := @parameter3: android.os.Message;

        i2 = specialinvoke r0.<com.android.internal.telephony.RIL: int translateStatus(int)>(i1);

        r2 = virtualinvoke r0.<com.android.internal.telephony.RIL: android.hardware.radio.V1_0.IRadio getRadioProxy(android.os.Message)>(r10);

        if r2 == null goto label4;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.WorkSource mRILDefaultWorkSource>;

        r11 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(63, r10, $r4);

        $r5 = new android.hardware.radio.V1_0.SmsWriteArgs;

        specialinvoke $r5.<android.hardware.radio.V1_0.SmsWriteArgs: void <init>()>();

        $r5.<android.hardware.radio.V1_0.SmsWriteArgs: int status> = i2;

        $r6 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r9);

        $r5.<android.hardware.radio.V1_0.SmsWriteArgs: java.lang.String smsc> = $r6;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String convertNullToEmptyString(java.lang.String)>(r1);

        $r5.<android.hardware.radio.V1_0.SmsWriteArgs: java.lang.String pdu> = $r7;

     label1:
        $i0 = r11.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r2.<android.hardware.radio.V1_0.IRadio: void writeSmsToSim(int,android.hardware.radio.V1_0.SmsWriteArgs)>($i0, $r5);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RIL: void handleRadioProxyExceptionForRR(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.Exception)>(r11, "writeSmsToSim", $r8);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }
}
