public class com.android.internal.telephony.RILRequest extends java.lang.Object
{
    static final java.lang.String LOG_TAG;
    private static final int MAX_POOL_SIZE;
    static java.util.concurrent.atomic.AtomicInteger sNextSerial;
    private static com.android.internal.telephony.RILRequest sPool;
    private static int sPoolSize;
    private static java.lang.Object sPoolSync;
    static java.util.Random sRandom;
    java.lang.Object[] mArguments;
    java.lang.String mClientId;
    com.android.internal.telephony.RILRequest mNext;
    int mRequest;
    android.os.Message mResult;
    int mSerial;
    long mStartTimeMs;
    int mWakeLockType;
    android.os.WorkSource mWorkSource;

    static void <clinit>()
    {
        java.util.Random $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        java.lang.Object $r2;

        <com.android.internal.telephony.RILRequest: int MAX_POOL_SIZE> = 4;

        <com.android.internal.telephony.RILRequest: java.lang.String LOG_TAG> = "RilRequest";

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        <com.android.internal.telephony.RILRequest: java.util.Random sRandom> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        <com.android.internal.telephony.RILRequest: java.util.concurrent.atomic.AtomicInteger sNextSerial> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <com.android.internal.telephony.RILRequest: java.lang.Object sPoolSync> = $r2;

        <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool> = null;

        <com.android.internal.telephony.RILRequest: int sPoolSize> = 0;

        return;
    }

    private void <init>()
    {
        com.android.internal.telephony.RILRequest r0;

        r0 := @this: com.android.internal.telephony.RILRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int lambda$obtain$0(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        $i2 = $i1 % 2147483647;

        return $i2;
    }

    private static com.android.internal.telephony.RILRequest obtain(int, android.os.Message)
    {
        int i0, $i1, $i3, $i4;
        com.android.internal.telephony.RILRequest $r0, $r6, r9, r11, r13;
        com.android.internal.telephony.'-$$Lambda$RILRequest$VaC9ddQXT8qxCl7rcNKtUadFQoI' $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        long $l2;
        android.os.Handler $r3;
        java.lang.Throwable $r7;
        android.os.Message r8;
        java.lang.Object r10;
        java.lang.NullPointerException r14;
        java.util.function.IntUnaryOperator r15;

        i0 := @parameter0: int;

        r8 := @parameter1: android.os.Message;

        r9 = null;

        r10 = <com.android.internal.telephony.RILRequest: java.lang.Object sPoolSync>;

        entermonitor r10;

     label1:
        $r0 = <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool>;

        if $r0 == null goto label2;

        r9 = <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool>;

        $r6 = r9.<com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest mNext>;

        <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool> = $r6;

        r9.<com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest mNext> = null;

        $i3 = <com.android.internal.telephony.RILRequest: int sPoolSize>;

        $i4 = $i3 - 1;

        <com.android.internal.telephony.RILRequest: int sPoolSize> = $i4;

     label2:
        exitmonitor r10;

     label3:
        r11 = r9;

        if r9 != null goto label4;

        r13 = new com.android.internal.telephony.RILRequest;

        specialinvoke r13.<com.android.internal.telephony.RILRequest: void <init>()>();

        r11 = r13;

     label4:
        $r2 = <com.android.internal.telephony.RILRequest: java.util.concurrent.atomic.AtomicInteger sNextSerial>;

        $r1 = <com.android.internal.telephony._$$Lambda$RILRequest$VaC9ddQXT8qxCl7rcNKtUadFQoI: com.android.internal.telephony.'-$$Lambda$RILRequest$VaC9ddQXT8qxCl7rcNKtUadFQoI' INSTANCE>;

        r15 = (java.util.function.IntUnaryOperator) $r1;

        $i1 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int getAndUpdate(java.util.function.IntUnaryOperator)>(r15);

        r11.<com.android.internal.telephony.RILRequest: int mSerial> = $i1;

        r11.<com.android.internal.telephony.RILRequest: int mRequest> = i0;

        r11.<com.android.internal.telephony.RILRequest: android.os.Message mResult> = r8;

        r11.<com.android.internal.telephony.RILRequest: int mWakeLockType> = -1;

        r11.<com.android.internal.telephony.RILRequest: android.os.WorkSource mWorkSource> = null;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r11.<com.android.internal.telephony.RILRequest: long mStartTimeMs> = $l2;

        if r8 == null goto label6;

        $r3 = virtualinvoke r8.<android.os.Message: android.os.Handler getTarget()>();

        if $r3 == null goto label5;

        goto label6;

     label5:
        r14 = new java.lang.NullPointerException;

        specialinvoke r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("Message target must not be null");

        throw r14;

     label6:
        return r11;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r10;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static com.android.internal.telephony.RILRequest obtain(int, android.os.Message, android.os.WorkSource)
    {
        int i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r3, $r4;
        android.os.Message r5;
        android.os.WorkSource r6;
        com.android.internal.telephony.RILRequest r7;

        i0 := @parameter0: int;

        r5 := @parameter1: android.os.Message;

        r6 := @parameter2: android.os.WorkSource;

        r7 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(i0, r5);

        if r6 == null goto label1;

        r7.<com.android.internal.telephony.RILRequest: android.os.WorkSource mWorkSource> = r6;

        $r4 = virtualinvoke r7.<com.android.internal.telephony.RILRequest: java.lang.String getWorkSourceClientId()>();

        r7.<com.android.internal.telephony.RILRequest: java.lang.String mClientId> = $r4;

        goto label2;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null workSource ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RilRequest", $r3);

     label2:
        return r7;
    }

    public static transient com.android.internal.telephony.RILRequest obtain(int, android.os.Message, android.os.WorkSource, java.lang.Object[])
    {
        int i0;
        android.os.WorkSource r0;
        java.lang.Object[] r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;

        i0 := @parameter0: int;

        r2 := @parameter1: android.os.Message;

        r0 := @parameter2: android.os.WorkSource;

        r1 := @parameter3: java.lang.Object[];

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message,android.os.WorkSource)>(i0, r2, r0);

        r3.<com.android.internal.telephony.RILRequest: java.lang.Object[] mArguments> = r1;

        return r3;
    }

    static void resetSerial()
    {
        java.util.Random $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        $r1 = <com.android.internal.telephony.RILRequest: java.util.concurrent.atomic.AtomicInteger sNextSerial>;

        $r0 = <com.android.internal.telephony.RILRequest: java.util.Random sRandom>;

        $i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(2147483647);

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i0);

        return;
    }

    public int getRequest()
    {
        com.android.internal.telephony.RILRequest r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.RILRequest;

        $i0 = r0.<com.android.internal.telephony.RILRequest: int mRequest>;

        return $i0;
    }

    public android.os.Message getResult()
    {
        com.android.internal.telephony.RILRequest r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.telephony.RILRequest;

        $r1 = r0.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        return $r1;
    }

    public int getSerial()
    {
        com.android.internal.telephony.RILRequest r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.RILRequest;

        $i0 = r0.<com.android.internal.telephony.RILRequest: int mSerial>;

        return $i0;
    }

    public java.lang.String getWorkSourceClientId()
    {
        com.android.internal.telephony.RILRequest r0;
        boolean $z0, $z1;
        android.os.WorkSource $r1, $r2, $r7, $r10, r14;
        int $i0, $i1;
        java.lang.Object $r3;
        android.os.WorkSource$WorkChain $r4;
        java.lang.String $r5, $r11, $r13;
        java.lang.StringBuilder $r6;
        java.util.List r16;

        r0 := @this: com.android.internal.telephony.RILRequest;

        r14 = r0.<com.android.internal.telephony.RILRequest: android.os.WorkSource mWorkSource>;

        if r14 == null goto label4;

        $z0 = virtualinvoke r14.<android.os.WorkSource: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label4;

     label1:
        $r1 = r0.<com.android.internal.telephony.RILRequest: android.os.WorkSource mWorkSource>;

        $i0 = virtualinvoke $r1.<android.os.WorkSource: int size()>();

        if $i0 <= 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.android.internal.telephony.RILRequest: android.os.WorkSource mWorkSource>;

        $i1 = virtualinvoke $r7.<android.os.WorkSource: int getUid(int)>(0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = r0.<com.android.internal.telephony.RILRequest: android.os.WorkSource mWorkSource>;

        $r11 = virtualinvoke $r10.<android.os.WorkSource: java.lang.String getPackageName(int)>(0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

     label2:
        $r2 = r0.<com.android.internal.telephony.RILRequest: android.os.WorkSource mWorkSource>;

        r16 = virtualinvoke $r2.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r16 == null goto label3;

        $z1 = interfaceinvoke r16.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r3 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (android.os.WorkSource$WorkChain) $r3;

        $r5 = virtualinvoke $r4.<android.os.WorkSource$WorkChain: java.lang.String toString()>();

        return $r5;

     label3:
        return null;

     label4:
        return null;
    }

    void onError(int, java.lang.Object)
    {
        com.android.internal.telephony.RILRequest r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        com.android.internal.telephony.CommandException r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r12, $r14;
        android.os.Message $r16, r18;

        r0 := @this: com.android.internal.telephony.RILRequest;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(i0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("< ");

        $i1 = r0.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ret=");

        $i2 = r0.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String retToString(int,java.lang.Object)>($i2, r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RilRequest", $r14);

        r18 = r0.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        if r18 == null goto label1;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r18, r1, r2);

        $r16 = r0.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        virtualinvoke $r16.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    void release()
    {
        com.android.internal.telephony.RILRequest r0, $r2;
        java.lang.Object r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r4, $r6;
        java.lang.Throwable $r7;
        java.lang.StringBuilder r8;

        r0 := @this: com.android.internal.telephony.RILRequest;

        r1 = <com.android.internal.telephony.RILRequest: java.lang.Object sPoolSync>;

        entermonitor r1;

     label1:
        $i0 = <com.android.internal.telephony.RILRequest: int sPoolSize>;

        if $i0 >= 4 goto label3;

        $r2 = <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool>;

        r0.<com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest mNext> = $r2;

        <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool> = r0;

        $i1 = <com.android.internal.telephony.RILRequest: int sPoolSize>;

        $i2 = $i1 + 1;

        <com.android.internal.telephony.RILRequest: int sPoolSize> = $i2;

        r0.<com.android.internal.telephony.RILRequest: android.os.Message mResult> = null;

        $i3 = r0.<com.android.internal.telephony.RILRequest: int mWakeLockType>;

        if $i3 == -1 goto label2;

        $i4 = r0.<com.android.internal.telephony.RILRequest: int mWakeLockType>;

        if $i4 != 0 goto label2;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RILRequest releasing with held wake lock: ");

        $r4 = virtualinvoke r0.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RilRequest", $r6);

     label2:
        r0.<com.android.internal.telephony.RILRequest: java.lang.Object[] mArguments> = null;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    java.lang.String serialString()
    {
        com.android.internal.telephony.RILRequest r0;
        java.lang.String r2, $r7;
        int i0, $i1, $i2, $i3, i4;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.telephony.RILRequest;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(8);

        $i1 = r0.<com.android.internal.telephony.RILRequest: int mSerial>;

        $i2 = $i1 % 10000;

        r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        i4 = 0;

        i0 = virtualinvoke r2.<java.lang.String: int length()>();

     label1:
        $i3 = 4 - i0;

        if i4 >= $i3 goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
