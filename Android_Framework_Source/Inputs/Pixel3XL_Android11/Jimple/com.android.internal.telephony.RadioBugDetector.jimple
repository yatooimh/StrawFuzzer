public class com.android.internal.telephony.RadioBugDetector extends java.lang.Object
{
    private static final int DEFAULT_SYSTEM_ERROR_COUNT_THRESHOLD;
    private static final int DEFAULT_WAKELOCK_TIMEOUT_COUNT_THRESHOLD;
    private static final int RADIO_BUG_NONE;
    protected static final int RADIO_BUG_REPETITIVE_SYSTEM_ERROR;
    private static final int RADIO_BUG_REPETITIVE_WAKELOCK_TIMEOUT_ERROR;
    private static final java.lang.String TAG;
    private android.content.Context mContext;
    private int mContinuousWakelockTimoutCount;
    private int mRadioBugStatus;
    private int mSlotId;
    private java.util.HashMap mSysErrRecord;
    private int mSystemErrorThreshold;
    private int mWakelockTimeoutThreshold;

    public void <init>(android.content.Context, int)
    {
        com.android.internal.telephony.RadioBugDetector r0;
        android.content.Context r1;
        int i0;
        java.util.HashMap $r2;

        r0 := @this: com.android.internal.telephony.RadioBugDetector;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.RadioBugDetector: int mContinuousWakelockTimoutCount> = 0;

        r0.<com.android.internal.telephony.RadioBugDetector: int mRadioBugStatus> = 0;

        r0.<com.android.internal.telephony.RadioBugDetector: int mWakelockTimeoutThreshold> = 0;

        r0.<com.android.internal.telephony.RadioBugDetector: int mSystemErrorThreshold> = 0;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.RadioBugDetector: java.util.HashMap mSysErrRecord> = $r2;

        r0.<com.android.internal.telephony.RadioBugDetector: android.content.Context mContext> = r1;

        r0.<com.android.internal.telephony.RadioBugDetector: int mSlotId> = i0;

        specialinvoke r0.<com.android.internal.telephony.RadioBugDetector: void init()>();

        return;
    }

    private void broadcastBug(boolean)
    {
        com.android.internal.telephony.RadioBugDetector r0;
        boolean z0, z1;
        int i0, $i1, $i2, $i3, i5;
        java.util.UUID $r5;
        java.lang.Throwable $r6;
        byte b6;
        java.lang.StringBuilder r7;
        java.lang.String r8;

        r0 := @this: com.android.internal.telephony.RadioBugDetector;

        z0 := @parameter0: boolean;

        entermonitor r0;

        if z0 == 0 goto label03;

     label01:
        z1 = specialinvoke r0.<com.android.internal.telephony.RadioBugDetector: boolean isFrequentSystemError()>();

     label02:
        if z1 != 0 goto label05;

        exitmonitor r0;

        return;

     label03:
        i0 = r0.<com.android.internal.telephony.RadioBugDetector: int mContinuousWakelockTimoutCount>;

        i5 = r0.<com.android.internal.telephony.RadioBugDetector: int mWakelockTimeoutThreshold>;

     label04:
        if i0 >= i5 goto label05;

        exitmonitor r0;

        return;

     label05:
        $i1 = r0.<com.android.internal.telephony.RadioBugDetector: int mRadioBugStatus>;

        if $i1 != 0 goto label09;

     label06:
        if z0 == 0 goto label07;

        b6 = 2;

        goto label08;

     label07:
        b6 = 1;

     label08:
        r0.<com.android.internal.telephony.RadioBugDetector: int mRadioBugStatus> = b6;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Repeated radio error ");

        $i2 = r0.<com.android.internal.telephony.RadioBugDetector: int mRadioBugStatus>;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on slot ");

        $i3 = r0.<com.android.internal.telephony.RadioBugDetector: int mSlotId>;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        r8 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RadioBugDetector", r8);

        $r5 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>("d264ead0-3f05-11ea-b77f-2e728ce88125");

        staticinvoke <android.telephony.AnomalyReporter: void reportAnomaly(java.util.UUID,java.lang.String)>($r5, r8);

     label09:
        exitmonitor r0;

        return;

     label10:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    private void init()
    {
        com.android.internal.telephony.RadioBugDetector r0;
        android.content.Context $r1, $r3;
        android.content.ContentResolver $r2, $r4;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.RadioBugDetector;

        $r1 = r0.<com.android.internal.telephony.RadioBugDetector: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "radio_bug_wakelock_timeout_count_threshold", 10);

        r0.<com.android.internal.telephony.RadioBugDetector: int mWakelockTimeoutThreshold> = $i0;

        $r3 = r0.<com.android.internal.telephony.RadioBugDetector: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r4, "radio_bug_system_error_count_threshold", 100);

        r0.<com.android.internal.telephony.RadioBugDetector: int mSystemErrorThreshold> = $i1;

        return;
    }

    private boolean isFrequentSystemError()
    {
        com.android.internal.telephony.RadioBugDetector r0;
        java.util.Iterator r1;
        java.util.HashMap $r2;
        java.util.Collection $r3;
        boolean $z1, z2;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        int $i0, $i1, i2;

        r0 := @this: com.android.internal.telephony.RadioBugDetector;

        i2 = 0;

        $r2 = r0.<com.android.internal.telephony.RadioBugDetector: java.util.HashMap mSysErrRecord>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        z2 = 0;

        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        i2 = i2 + $i0;

        $i1 = r0.<com.android.internal.telephony.RadioBugDetector: int mSystemErrorThreshold>;

        if i2 < $i1 goto label2;

        z2 = 1;

        goto label3;

     label2:
        goto label1;

     label3:
        return z2;
    }

    public void detectRadioBug(int, int)
    {
        com.android.internal.telephony.RadioBugDetector r0;
        int i0, $i1, i2, i3;
        java.util.HashMap $r2, $r5, $r10;
        java.lang.Integer $r3, $r6, $r7, $r9, $r11, $r12;
        boolean $z0;
        java.lang.Object $r8;
        java.lang.Throwable $r14;

        r0 := @this: com.android.internal.telephony.RadioBugDetector;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        entermonitor r0;

     label1:
        r0.<com.android.internal.telephony.RadioBugDetector: int mContinuousWakelockTimoutCount> = 0;

     label2:
        if i2 != 39 goto label5;

     label3:
        $r5 = r0.<com.android.internal.telephony.RadioBugDetector: java.util.HashMap mSysErrRecord>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r8 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r9 = (java.lang.Integer) $r8;

        i3 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r10 = r0.<com.android.internal.telephony.RadioBugDetector: java.util.HashMap mSysErrRecord>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $i1 = i3 + 1;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

        specialinvoke r0.<com.android.internal.telephony.RadioBugDetector: void broadcastBug(boolean)>(1);

     label4:
        goto label6;

     label5:
        $r2 = r0.<com.android.internal.telephony.RadioBugDetector: java.util.HashMap mSysErrRecord>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

        $z0 = specialinvoke r0.<com.android.internal.telephony.RadioBugDetector: boolean isFrequentSystemError()>();

        if $z0 != 0 goto label6;

        r0.<com.android.internal.telephony.RadioBugDetector: int mRadioBugStatus> = 0;

     label6:
        exitmonitor r0;

        return;

     label7:
        $r14 := @caughtexception;

        exitmonitor r0;

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public int getRadioBugStatus()
    {
        com.android.internal.telephony.RadioBugDetector r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.RadioBugDetector;

        $i0 = r0.<com.android.internal.telephony.RadioBugDetector: int mRadioBugStatus>;

        return $i0;
    }

    public int getSystemErrorThreshold()
    {
        com.android.internal.telephony.RadioBugDetector r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.RadioBugDetector;

        $i0 = r0.<com.android.internal.telephony.RadioBugDetector: int mSystemErrorThreshold>;

        return $i0;
    }

    public int getWakelockTimeoutThreshold()
    {
        com.android.internal.telephony.RadioBugDetector r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.RadioBugDetector;

        $i0 = r0.<com.android.internal.telephony.RadioBugDetector: int mWakelockTimeoutThreshold>;

        return $i0;
    }

    public int getWakelockTimoutCount()
    {
        com.android.internal.telephony.RadioBugDetector r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.RadioBugDetector;

        $i0 = r0.<com.android.internal.telephony.RadioBugDetector: int mContinuousWakelockTimoutCount>;

        return $i0;
    }

    public void processWakelockTimeout()
    {
        com.android.internal.telephony.RadioBugDetector r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.RadioBugDetector;

        $i0 = r0.<com.android.internal.telephony.RadioBugDetector: int mContinuousWakelockTimoutCount>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.telephony.RadioBugDetector: int mContinuousWakelockTimoutCount> = $i1;

        specialinvoke r0.<com.android.internal.telephony.RadioBugDetector: void broadcastBug(boolean)>(0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.RadioBugDetector: java.lang.String TAG> = "RadioBugDetector";

        <com.android.internal.telephony.RadioBugDetector: int RADIO_BUG_REPETITIVE_WAKELOCK_TIMEOUT_ERROR> = 1;

        <com.android.internal.telephony.RadioBugDetector: int RADIO_BUG_REPETITIVE_SYSTEM_ERROR> = 2;

        <com.android.internal.telephony.RadioBugDetector: int RADIO_BUG_NONE> = 0;

        <com.android.internal.telephony.RadioBugDetector: int DEFAULT_WAKELOCK_TIMEOUT_COUNT_THRESHOLD> = 10;

        <com.android.internal.telephony.RadioBugDetector: int DEFAULT_SYSTEM_ERROR_COUNT_THRESHOLD> = 100;

        return;
    }
}
