public class com.android.internal.telephony.RadioConfig extends android.os.Handler
{
    private static final boolean DBG;
    private static final int EVENT_SERVICE_DEAD;
    private static final com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_1_0;
    private static final com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_1_1;
    private static final com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_UNKNOWN;
    private static final java.lang.String TAG;
    private static final boolean VDBG;
    private static com.android.internal.telephony.RadioConfig sRadioConfig;
    private final android.os.WorkSource mDefaultWorkSource;
    private final boolean mIsMobileNetworkSupported;
    private final com.android.internal.telephony.RadioConfigIndication mRadioConfigIndication;
    private volatile android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy;
    private final java.util.concurrent.atomic.AtomicLong mRadioConfigProxyCookie;
    private final com.android.internal.telephony.RadioConfigResponse mRadioConfigResponse;
    private com.android.internal.telephony.HalVersion mRadioConfigVersion;
    private final android.util.SparseArray mRequestList;
    private final com.android.internal.telephony.RadioConfig$ServiceDeathRecipient mServiceDeathRecipient;
    protected com.android.internal.telephony.Registrant mSimSlotStatusRegistrant;

    static void <clinit>()
    {
        com.android.internal.telephony.HalVersion $r0, $r1, $r2;

        <com.android.internal.telephony.RadioConfig: boolean VDBG> = 0;

        <com.android.internal.telephony.RadioConfig: java.lang.String TAG> = "RadioConfig";

        <com.android.internal.telephony.RadioConfig: int EVENT_SERVICE_DEAD> = 1;

        <com.android.internal.telephony.RadioConfig: boolean DBG> = 1;

        $r0 = new com.android.internal.telephony.HalVersion;

        specialinvoke $r0.<com.android.internal.telephony.HalVersion: void <init>(int,int)>(-1, -1);

        <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_UNKNOWN> = $r0;

        $r1 = new com.android.internal.telephony.HalVersion;

        specialinvoke $r1.<com.android.internal.telephony.HalVersion: void <init>(int,int)>(1, 0);

        <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_1_0> = $r1;

        $r2 = new com.android.internal.telephony.HalVersion;

        specialinvoke $r2.<com.android.internal.telephony.HalVersion: void <init>(int,int)>(1, 1);

        <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_1_1> = $r2;

        return;
    }

    private void <init>(android.content.Context)
    {
        com.android.internal.telephony.RadioConfig r0;
        android.content.Context r1;
        com.android.internal.telephony.HalVersion $r2;
        java.util.concurrent.atomic.AtomicLong $r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5;
        android.net.ConnectivityManager $r6;
        boolean $z0;
        com.android.internal.telephony.RadioConfigResponse $r7;
        com.android.internal.telephony.RadioConfigIndication $r8;
        com.android.internal.telephony.RadioConfig$ServiceDeathRecipient $r9;
        android.os.WorkSource $r10;
        android.content.pm.ApplicationInfo $r11;
        int $i0;
        java.lang.String $r12;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy> = null;

        $r2 = <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_UNKNOWN>;

        r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion mRadioConfigVersion> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        r0.<com.android.internal.telephony.RadioConfig: java.util.concurrent.atomic.AtomicLong mRadioConfigProxyCookie> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.telephony.RadioConfig: android.util.SparseArray mRequestList> = $r4;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r6 = (android.net.ConnectivityManager) $r5;

        $z0 = virtualinvoke $r6.<android.net.ConnectivityManager: boolean isNetworkSupported(int)>(0);

        r0.<com.android.internal.telephony.RadioConfig: boolean mIsMobileNetworkSupported> = $z0;

        $r7 = new com.android.internal.telephony.RadioConfigResponse;

        specialinvoke $r7.<com.android.internal.telephony.RadioConfigResponse: void <init>(com.android.internal.telephony.RadioConfig)>(r0);

        r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RadioConfigResponse mRadioConfigResponse> = $r7;

        $r8 = new com.android.internal.telephony.RadioConfigIndication;

        specialinvoke $r8.<com.android.internal.telephony.RadioConfigIndication: void <init>(com.android.internal.telephony.RadioConfig)>(r0);

        r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RadioConfigIndication mRadioConfigIndication> = $r8;

        $r9 = new com.android.internal.telephony.RadioConfig$ServiceDeathRecipient;

        specialinvoke $r9.<com.android.internal.telephony.RadioConfig$ServiceDeathRecipient: void <init>(com.android.internal.telephony.RadioConfig)>(r0);

        r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RadioConfig$ServiceDeathRecipient mServiceDeathRecipient> = $r9;

        $r10 = new android.os.WorkSource;

        $r11 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        $r12 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        specialinvoke $r10.<android.os.WorkSource: void <init>(int,java.lang.String)>($i0, $r12);

        r0.<com.android.internal.telephony.RadioConfig: android.os.WorkSource mDefaultWorkSource> = $r10;

        return;
    }

    static void access$000(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.telephony.RadioConfig: void logd(java.lang.String)>(r0);

        return;
    }

    private void clearRequestList(int, boolean)
    {
        com.android.internal.telephony.RadioConfig r0;
        int i0, i1, $i2, $i3, i4;
        boolean z0;
        android.util.SparseArray r1, $r3, $r4, $r5;
        java.lang.StringBuilder r2, r18;
        java.lang.Object $r6;
        java.lang.String $r11, $r13, $r16;
        java.lang.Throwable $r17;
        com.android.internal.telephony.RILRequest r19;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.internal.telephony.RadioConfig: android.util.SparseArray mRequestList>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.internal.telephony.RadioConfig: android.util.SparseArray mRequestList>;

        i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label02:
        if z0 == 0 goto label04;

     label03:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearRequestList: mRequestList=");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void logd(java.lang.String)>($r16);

     label04:
        i4 = 0;

     label05:
        if i4 >= i1 goto label11;

     label06:
        $r5 = r0.<com.android.internal.telephony.RadioConfig: android.util.SparseArray mRequestList>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r19 = (com.android.internal.telephony.RILRequest) $r6;

     label07:
        if z0 == 0 goto label09;

     label08:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": [");

        $i2 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $i3 = r19.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RadioConfig: java.lang.String requestToString(int)>($i3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void logd(java.lang.String)>($r13);

     label09:
        virtualinvoke r19.<com.android.internal.telephony.RILRequest: void onError(int,java.lang.Object)>(i0, null);

        virtualinvoke r19.<com.android.internal.telephony.RILRequest: void release()>();

     label10:
        i4 = i4 + 1;

        goto label05;

     label11:
        $r4 = r0.<com.android.internal.telephony.RadioConfig: android.util.SparseArray mRequestList>;

        virtualinvoke $r4.<android.util.SparseArray: void clear()>();

        exitmonitor r1;

     label12:
        return;

     label13:
        $r17 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    static java.util.ArrayList convertHalSlotStatus(java.util.ArrayList)
    {
        java.util.Iterator r1;
        java.util.ArrayList $r3, r8;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.internal.telephony.uicc.IccSlotStatus $r5;
        java.lang.String $r6, $r7;
        android.hardware.radio.config.V1_0.SimSlotStatus r9;

        r8 := @parameter0: java.util.ArrayList;

        $r3 = new java.util.ArrayList;

        $i0 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        r1 = virtualinvoke r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.hardware.radio.config.V1_0.SimSlotStatus) $r4;

        $r5 = new com.android.internal.telephony.uicc.IccSlotStatus;

        specialinvoke $r5.<com.android.internal.telephony.uicc.IccSlotStatus: void <init>()>();

        $i1 = r9.<android.hardware.radio.config.V1_0.SimSlotStatus: int cardState>;

        virtualinvoke $r5.<com.android.internal.telephony.uicc.IccSlotStatus: void setCardState(int)>($i1);

        $i2 = r9.<android.hardware.radio.config.V1_0.SimSlotStatus: int slotState>;

        virtualinvoke $r5.<com.android.internal.telephony.uicc.IccSlotStatus: void setSlotState(int)>($i2);

        $i3 = r9.<android.hardware.radio.config.V1_0.SimSlotStatus: int logicalSlotId>;

        $r5.<com.android.internal.telephony.uicc.IccSlotStatus: int logicalSlotIndex> = $i3;

        $r6 = r9.<android.hardware.radio.config.V1_0.SimSlotStatus: java.lang.String atr>;

        $r5.<com.android.internal.telephony.uicc.IccSlotStatus: java.lang.String atr> = $r6;

        $r7 = r9.<android.hardware.radio.config.V1_0.SimSlotStatus: java.lang.String iccid>;

        $r5.<com.android.internal.telephony.uicc.IccSlotStatus: java.lang.String iccid> = $r7;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        return $r3;
    }

    static java.util.ArrayList convertHalSlotStatus_1_2(java.util.ArrayList)
    {
        java.util.Iterator r1;
        java.util.ArrayList $r3, r14;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.internal.telephony.uicc.IccSlotStatus $r5;
        android.hardware.radio.config.V1_0.SimSlotStatus $r6, $r7, $r8, $r9, $r11;
        java.lang.String $r10, $r12, $r13;
        android.hardware.radio.config.V1_2.SimSlotStatus r15;

        r14 := @parameter0: java.util.ArrayList;

        $r3 = new java.util.ArrayList;

        $i0 = virtualinvoke r14.<java.util.ArrayList: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        r1 = virtualinvoke r14.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r15 = (android.hardware.radio.config.V1_2.SimSlotStatus) $r4;

        $r5 = new com.android.internal.telephony.uicc.IccSlotStatus;

        specialinvoke $r5.<com.android.internal.telephony.uicc.IccSlotStatus: void <init>()>();

        $r6 = r15.<android.hardware.radio.config.V1_2.SimSlotStatus: android.hardware.radio.config.V1_0.SimSlotStatus base>;

        $i1 = $r6.<android.hardware.radio.config.V1_0.SimSlotStatus: int cardState>;

        virtualinvoke $r5.<com.android.internal.telephony.uicc.IccSlotStatus: void setCardState(int)>($i1);

        $r7 = r15.<android.hardware.radio.config.V1_2.SimSlotStatus: android.hardware.radio.config.V1_0.SimSlotStatus base>;

        $i2 = $r7.<android.hardware.radio.config.V1_0.SimSlotStatus: int slotState>;

        virtualinvoke $r5.<com.android.internal.telephony.uicc.IccSlotStatus: void setSlotState(int)>($i2);

        $r8 = r15.<android.hardware.radio.config.V1_2.SimSlotStatus: android.hardware.radio.config.V1_0.SimSlotStatus base>;

        $i3 = $r8.<android.hardware.radio.config.V1_0.SimSlotStatus: int logicalSlotId>;

        $r5.<com.android.internal.telephony.uicc.IccSlotStatus: int logicalSlotIndex> = $i3;

        $r9 = r15.<android.hardware.radio.config.V1_2.SimSlotStatus: android.hardware.radio.config.V1_0.SimSlotStatus base>;

        $r10 = $r9.<android.hardware.radio.config.V1_0.SimSlotStatus: java.lang.String atr>;

        $r5.<com.android.internal.telephony.uicc.IccSlotStatus: java.lang.String atr> = $r10;

        $r11 = r15.<android.hardware.radio.config.V1_2.SimSlotStatus: android.hardware.radio.config.V1_0.SimSlotStatus base>;

        $r12 = $r11.<android.hardware.radio.config.V1_0.SimSlotStatus: java.lang.String iccid>;

        $r5.<com.android.internal.telephony.uicc.IccSlotStatus: java.lang.String iccid> = $r12;

        $r13 = r15.<android.hardware.radio.config.V1_2.SimSlotStatus: java.lang.String eid>;

        $r5.<com.android.internal.telephony.uicc.IccSlotStatus: java.lang.String eid> = $r13;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        return $r3;
    }

    private com.android.internal.telephony.RILRequest findAndRemoveRequestFromList(int)
    {
        com.android.internal.telephony.RadioConfig r0;
        int i0;
        android.util.SparseArray r1, $r2, $r4;
        java.lang.Object $r3;
        java.lang.Throwable $r5;
        com.android.internal.telephony.RILRequest r6;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.RadioConfig: android.util.SparseArray mRequestList>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.RadioConfig: android.util.SparseArray mRequestList>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (com.android.internal.telephony.RILRequest) $r3;

     label2:
        if r6 == null goto label4;

     label3:
        $r4 = r0.<com.android.internal.telephony.RadioConfig: android.util.SparseArray mRequestList>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

     label4:
        exitmonitor r1;

     label5:
        return r6;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static com.android.internal.telephony.RadioConfig getInstance(android.content.Context)
    {
        android.content.Context r0;
        com.android.internal.telephony.RadioConfig $r1, $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RadioConfig sRadioConfig>;

        if $r1 != null goto label1;

        $r3 = new com.android.internal.telephony.RadioConfig;

        specialinvoke $r3.<com.android.internal.telephony.RadioConfig: void <init>(android.content.Context)>(r0);

        <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RadioConfig sRadioConfig> = $r3;

     label1:
        $r2 = <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RadioConfig sRadioConfig>;

        return $r2;
    }

    private static void logd(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RadioConfig", r0);

        return;
    }

    private static void loge(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RadioConfig", r0);

        return;
    }

    private com.android.internal.telephony.RILRequest obtainRequest(int, android.os.Message, android.os.WorkSource)
    {
        com.android.internal.telephony.RadioConfig r0;
        int i0, $i1;
        android.util.SparseArray $r1, r6;
        java.lang.Throwable $r2;
        android.os.Message r3;
        android.os.WorkSource r4;
        com.android.internal.telephony.RILRequest r5;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        i0 := @parameter0: int;

        r3 := @parameter1: android.os.Message;

        r4 := @parameter2: android.os.WorkSource;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message,android.os.WorkSource)>(i0, r3, r4);

        r6 = r0.<com.android.internal.telephony.RadioConfig: android.util.SparseArray mRequestList>;

        entermonitor r6;

     label1:
        $r1 = r0.<com.android.internal.telephony.RadioConfig: android.util.SparseArray mRequestList>;

        $i1 = r5.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke $r1.<android.util.SparseArray: void append(int,java.lang.Object)>($i1, r5);

        exitmonitor r6;

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static java.util.ArrayList primitiveArrayToArrayList(int[])
    {
        int[] r0;
        int i0, $i1, $i2, i3;
        java.util.ArrayList $r2;
        java.lang.Integer $r3;

        r0 := @parameter0: int[];

        $r2 = new java.util.ArrayList;

        $i1 = lengthof r0;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i1);

        i0 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i2 = r0[i3];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r2;
    }

    static java.lang.String requestToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 200 goto label5;

        if i0 == 201 goto label4;

        if i0 == 204 goto label3;

        if i0 == 206 goto label2;

        if i0 == 207 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<unknown request ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label1:
        return "SWITCH_DUAL_SIM_CONFIG";

     label2:
        return "GET_PHONE_CAPABILITY";

     label3:
        return "SET_PREFERRED_DATA_MODEM";

     label4:
        return "SET_LOGICAL_TO_PHYSICAL_SLOT_MAPPING";

     label5:
        return "GET_SLOT_STATUS";
    }

    private void resetProxyAndRequestList(java.lang.String, java.lang.Exception)
    {
        com.android.internal.telephony.RadioConfig r0;
        java.lang.String r1, $r8;
        java.lang.Exception r2;
        java.lang.StringBuilder $r4;
        java.util.concurrent.atomic.AtomicLong $r9;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void loge(java.lang.String)>($r8);

        r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy> = null;

        $r9 = r0.<com.android.internal.telephony.RadioConfig: java.util.concurrent.atomic.AtomicLong mRadioConfigProxyCookie>;

        virtualinvoke $r9.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        staticinvoke <com.android.internal.telephony.RILRequest: void resetSerial()>();

        specialinvoke r0.<com.android.internal.telephony.RadioConfig: void clearRequestList(int,boolean)>(1, 0);

        virtualinvoke r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig getRadioConfigProxy(android.os.Message)>(null);

        return;
    }

    private void updateRadioConfigProxy()
    {
        com.android.internal.telephony.RadioConfig r0;
        android.hardware.radio.config.V1_1.IRadioConfig $r2;
        com.android.internal.telephony.HalVersion $r3, $r11;
        java.util.concurrent.atomic.AtomicLong $r4;
        android.hardware.radio.config.V1_0.IRadioConfig $r5, $r9, $r10, r20, $r22;
        com.android.internal.telephony.RadioConfig$ServiceDeathRecipient $r6;
        long $l0;
        com.android.internal.telephony.RadioConfigIndication $r7;
        com.android.internal.telephony.RadioConfigResponse $r8;
        java.lang.Throwable $r12, $r13;
        java.lang.Exception $r14;
        java.lang.StringBuilder $r15;
        java.lang.String $r18;

        r0 := @this: com.android.internal.telephony.RadioConfig;

     label01:
        $r2 = staticinvoke <android.hardware.radio.config.V1_1.IRadioConfig: android.hardware.radio.config.V1_1.IRadioConfig getService(boolean)>(1);

        r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy> = $r2;

        $r3 = <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_1_1>;

        r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion mRadioConfigVersion> = $r3;

     label02:
        goto label05;

     label03:
        $r14 := @caughtexception;

        goto label14;

     label04:
        $r13 := @caughtexception;

     label05:
        r20 = r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy>;

     label06:
        if r20 != null goto label10;

     label07:
        $r10 = staticinvoke <android.hardware.radio.config.V1_0.IRadioConfig: android.hardware.radio.config.V1_0.IRadioConfig getService(boolean)>(1);

        r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy> = $r10;

        $r11 = <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_1_0>;

        r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion mRadioConfigVersion> = $r11;

     label08:
        goto label10;

     label09:
        $r12 := @caughtexception;

     label10:
        $r22 = r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy>;

        if $r22 != null goto label12;

        staticinvoke <com.android.internal.telephony.RadioConfig: void loge(java.lang.String)>("getRadioConfigProxy: mRadioConfigProxy == null");

     label11:
        return;

     label12:
        $r5 = r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy>;

        $r6 = r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RadioConfig$ServiceDeathRecipient mServiceDeathRecipient>;

        $r4 = r0.<com.android.internal.telephony.RadioConfig: java.util.concurrent.atomic.AtomicLong mRadioConfigProxyCookie>;

        $l0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        interfaceinvoke $r5.<android.hardware.radio.config.V1_0.IRadioConfig: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>($r6, $l0);

        $r9 = r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy>;

        $r8 = r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RadioConfigResponse mRadioConfigResponse>;

        $r7 = r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RadioConfigIndication mRadioConfigIndication>;

        interfaceinvoke $r9.<android.hardware.radio.config.V1_0.IRadioConfig: void setResponseFunctions(android.hardware.radio.config.V1_0.IRadioConfigResponse,android.hardware.radio.config.V1_0.IRadioConfigIndication)>($r8, $r7);

     label13:
        return;

     label14:
        r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy> = null;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRadioConfigProxy: RadioConfigProxy setResponseFunctions: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void loge(java.lang.String)>($r18);

        return;

        catch java.util.NoSuchElementException from label01 to label02 with label04;
        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.RuntimeException from label01 to label02 with label03;
        catch android.os.RemoteException from label05 to label06 with label03;
        catch java.lang.RuntimeException from label05 to label06 with label03;
        catch java.util.NoSuchElementException from label07 to label08 with label09;
        catch android.os.RemoteException from label07 to label08 with label03;
        catch java.lang.RuntimeException from label07 to label08 with label03;
        catch android.os.RemoteException from label10 to label11 with label03;
        catch java.lang.RuntimeException from label10 to label11 with label03;
        catch android.os.RemoteException from label12 to label13 with label03;
        catch java.lang.RuntimeException from label12 to label13 with label03;
    }

    public void getPhoneCapability(android.os.Message)
    {
        com.android.internal.telephony.RadioConfig r0;
        android.hardware.radio.config.V1_0.IRadioConfig $r2, $r15;
        com.android.internal.telephony.CommandException $r3;
        com.android.internal.telephony.HalVersion $r5, $r6;
        boolean $z0;
        android.os.WorkSource $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9, $r12, $r14;
        int $i0, $i1;
        android.hardware.radio.config.V1_1.IRadioConfig $r16;
        java.lang.Exception $r17;
        android.os.Message r18;
        com.android.internal.telephony.RILRequest r19;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        r18 := @parameter0: android.os.Message;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig getRadioConfigProxy(android.os.Message)>(null);

        if $r2 == null goto label6;

        $r6 = r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion mRadioConfigVersion>;

        $r5 = <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_1_1>;

        $z0 = virtualinvoke $r6.<com.android.internal.telephony.HalVersion: boolean less(com.android.internal.telephony.HalVersion)>($r5);

        if $z0 == 0 goto label1;

        goto label6;

     label1:
        $r7 = r0.<com.android.internal.telephony.RadioConfig: android.os.WorkSource mDefaultWorkSource>;

        r19 = specialinvoke r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(206, r18, $r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r19.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r19.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r12 = staticinvoke <com.android.internal.telephony.RadioConfig: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void logd(java.lang.String)>($r14);

     label2:
        $r15 = r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy>;

        $r16 = (android.hardware.radio.config.V1_1.IRadioConfig) $r15;

        $i1 = r19.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke $r16.<android.hardware.radio.config.V1_1.IRadioConfig: void getPhoneCapability(int)>($i1);

     label3:
        goto label5;

     label4:
        $r17 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RadioConfig: void resetProxyAndRequestList(java.lang.String,java.lang.Exception)>("getPhoneCapability", $r17);

     label5:
        return;

     label6:
        if r18 == null goto label7;

        $r3 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r18, null, $r3);

        virtualinvoke r18.<android.os.Message: void sendToTarget()>();

     label7:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public android.hardware.radio.config.V1_0.IRadioConfig getRadioConfigProxy(android.os.Message)
    {
        com.android.internal.telephony.RadioConfig r0;
        android.os.Message r1;
        boolean $z0;
        android.hardware.radio.config.V1_0.IRadioConfig $r2, $r3, $r6, $r9;
        com.android.internal.telephony.CommandException $r4, $r7;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        r1 := @parameter0: android.os.Message;

        $z0 = r0.<com.android.internal.telephony.RadioConfig: boolean mIsMobileNetworkSupported>;

        if $z0 != 0 goto label2;

        if r1 == null goto label1;

        $r7 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(1);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r1, null, $r7);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

     label1:
        return null;

     label2:
        $r2 = r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy>;

        if $r2 == null goto label3;

        $r6 = r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy>;

        return $r6;

     label3:
        specialinvoke r0.<com.android.internal.telephony.RadioConfig: void updateRadioConfigProxy()>();

        $r3 = r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy>;

        if $r3 != null goto label4;

        if r1 == null goto label4;

        $r4 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(1);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r1, null, $r4);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

     label4:
        $r9 = r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy>;

        return $r9;
    }

    public void getSimSlotsStatus(android.os.Message)
    {
        com.android.internal.telephony.RadioConfig r0;
        android.hardware.radio.config.V1_0.IRadioConfig r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r10;
        int $i0, $i1;
        java.lang.Exception $r11;
        android.os.Message r12;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        r12 := @parameter0: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig getRadioConfigProxy(android.os.Message)>(r12);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RadioConfig: android.os.WorkSource mDefaultWorkSource>;

        r2 = specialinvoke r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(200, r12, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RadioConfig: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void logd(java.lang.String)>($r10);

     label1:
        $i1 = r2.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r1.<android.hardware.radio.config.V1_0.IRadioConfig: void getSimSlotsStatus(int)>($i1);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RadioConfig: void resetProxyAndRequestList(java.lang.String,java.lang.Exception)>("getSimSlotsStatus", $r11);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.RadioConfig r0;
        android.os.Message r1;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.Object $r5, $r11;
        java.util.concurrent.atomic.AtomicLong $r8, $r13;
        long $l1, $l2, $l3;
        java.lang.String $r10;
        java.lang.Long $r12;
        byte $b4;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        if $i0 == 1 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage: EVENT_SERVICE_DEAD cookie = ");

        $r5 = r1.<android.os.Message: java.lang.Object obj>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRadioConfigProxyCookie = ");

        $r8 = r0.<com.android.internal.telephony.RadioConfig: java.util.concurrent.atomic.AtomicLong mRadioConfigProxyCookie>;

        $l1 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicLong: long get()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void logd(java.lang.String)>($r10);

        $r11 = r1.<android.os.Message: java.lang.Object obj>;

        $r12 = (java.lang.Long) $r11;

        $l2 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $r13 = r0.<com.android.internal.telephony.RadioConfig: java.util.concurrent.atomic.AtomicLong mRadioConfigProxyCookie>;

        $l3 = virtualinvoke $r13.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $b4 = $l2 cmp $l3;

        if $b4 != 0 goto label2;

        specialinvoke r0.<com.android.internal.telephony.RadioConfig: void resetProxyAndRequestList(java.lang.String,java.lang.Exception)>("EVENT_SERVICE_DEAD", null);

     label2:
        return;
    }

    public boolean isSetPreferredDataCommandSupported()
    {
        com.android.internal.telephony.RadioConfig r0;
        android.hardware.radio.config.V1_0.IRadioConfig $r1;
        com.android.internal.telephony.HalVersion $r2, $r3;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig getRadioConfigProxy(android.os.Message)>(null);

        if $r1 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion mRadioConfigVersion>;

        $r2 = <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_1_1>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r2);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public com.android.internal.telephony.RILRequest processResponse(android.hardware.radio.V1_0.RadioResponseInfo)
    {
        com.android.internal.telephony.RadioConfig r0;
        int i0, i1, i2;
        java.lang.StringBuilder $r1, $r7;
        java.lang.String $r6, $r10;
        android.hardware.radio.V1_0.RadioResponseInfo r11;
        com.android.internal.telephony.RILRequest r13;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        r11 := @parameter0: android.hardware.radio.V1_0.RadioResponseInfo;

        i0 = r11.<android.hardware.radio.V1_0.RadioResponseInfo: int serial>;

        i1 = r11.<android.hardware.radio.V1_0.RadioResponseInfo: int error>;

        i2 = r11.<android.hardware.radio.V1_0.RadioResponseInfo: int type>;

        if i2 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processResponse: Unexpected response type ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void loge(java.lang.String)>($r10);

     label1:
        r13 = specialinvoke r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RILRequest findAndRemoveRequestFromList(int)>(i0);

        if r13 != null goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processResponse: Unexpected response! serial: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void loge(java.lang.String)>($r6);

        return null;

     label2:
        return r13;
    }

    public void registerForSimSlotStatusChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.RadioConfig r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Registrant $r3;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.Registrant mSimSlotStatusRegistrant> = $r3;

        return;
    }

    public void setModemsConfig(int, android.os.Message)
    {
        com.android.internal.telephony.RadioConfig r0;
        int i0, $i1, $i4;
        com.android.internal.telephony.HalVersion $r1, $r2;
        boolean $z0;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r12;
        byte $b2, $b3;
        java.lang.Exception $r13;
        android.os.Message r14;
        android.hardware.radio.config.V1_0.IRadioConfig r15;
        android.hardware.radio.config.V1_1.IRadioConfig r16;
        com.android.internal.telephony.RILRequest r17;
        android.hardware.radio.config.V1_1.ModemsConfig r19;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        i0 := @parameter0: int;

        r14 := @parameter1: android.os.Message;

        r15 = virtualinvoke r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig getRadioConfigProxy(android.os.Message)>(r14);

        if r15 == null goto label4;

        $r2 = r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion mRadioConfigVersion>;

        $r1 = <com.android.internal.telephony.RadioConfig: com.android.internal.telephony.HalVersion RADIO_CONFIG_HAL_VERSION_1_1>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r1);

        if $z0 == 0 goto label4;

        r16 = (android.hardware.radio.config.V1_1.IRadioConfig) r15;

        $r3 = r0.<com.android.internal.telephony.RadioConfig: android.os.WorkSource mDefaultWorkSource>;

        r17 = specialinvoke r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(207, r14, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r17.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r17.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RadioConfig: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", numOfLiveModems = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void logd(java.lang.String)>($r12);

     label1:
        r19 = new android.hardware.radio.config.V1_1.ModemsConfig;

        specialinvoke r19.<android.hardware.radio.config.V1_1.ModemsConfig: void <init>()>();

        $b2 = (byte) i0;

        $b3 = (byte) $b2;

        r19.<android.hardware.radio.config.V1_1.ModemsConfig: byte numOfLiveModems> = $b3;

        $i4 = r17.<com.android.internal.telephony.RILRequest: int mSerial>;

        interfaceinvoke r16.<android.hardware.radio.config.V1_1.IRadioConfig: void setModemsConfig(int,android.hardware.radio.config.V1_1.ModemsConfig)>($i4, r19);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RadioConfig: void resetProxyAndRequestList(java.lang.String,java.lang.Exception)>("setModemsConfig", $r13);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setPreferredDataModem(int, android.os.Message)
    {
        com.android.internal.telephony.RadioConfig r0;
        int i0, $i1, $i3;
        boolean $z0;
        android.os.WorkSource $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r7, $r9;
        android.hardware.radio.config.V1_0.IRadioConfig $r10;
        byte $b2;
        android.hardware.radio.config.V1_1.IRadioConfig $r11;
        com.android.internal.telephony.CommandException $r12;
        java.lang.Exception $r14;
        android.os.Message r15;
        com.android.internal.telephony.RILRequest r16;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        i0 := @parameter0: int;

        r15 := @parameter1: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.RadioConfig: boolean isSetPreferredDataCommandSupported()>();

        if $z0 != 0 goto label2;

        if r15 == null goto label1;

        $r12 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r15, null, $r12);

        virtualinvoke r15.<android.os.Message: void sendToTarget()>();

     label1:
        return;

     label2:
        $r2 = r0.<com.android.internal.telephony.RadioConfig: android.os.WorkSource mDefaultWorkSource>;

        r16 = specialinvoke r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(204, r15, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r16.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r16.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RadioConfig: java.lang.String requestToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void logd(java.lang.String)>($r9);

     label3:
        $r10 = r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig mRadioConfigProxy>;

        $r11 = (android.hardware.radio.config.V1_1.IRadioConfig) $r10;

        $i3 = r16.<com.android.internal.telephony.RILRequest: int mSerial>;

        $b2 = (byte) i0;

        interfaceinvoke $r11.<android.hardware.radio.config.V1_1.IRadioConfig: void setPreferredDataModem(int,byte)>($i3, $b2);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RadioConfig: void resetProxyAndRequestList(java.lang.String,java.lang.Exception)>("setPreferredDataModem", $r14);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public void setSimSlotsMapping(int[], android.os.Message)
    {
        com.android.internal.telephony.RadioConfig r0;
        android.hardware.radio.config.V1_0.IRadioConfig r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.WorkSource $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r8, $r11, $r13;
        int $i0, $i1;
        java.util.ArrayList $r14;
        java.lang.Exception $r15;
        int[] r16;
        android.os.Message r17;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        r16 := @parameter0: int[];

        r17 := @parameter1: android.os.Message;

        r1 = virtualinvoke r0.<com.android.internal.telephony.RadioConfig: android.hardware.radio.config.V1_0.IRadioConfig getRadioConfigProxy(android.os.Message)>(r17);

        if r1 == null goto label4;

        $r3 = r0.<com.android.internal.telephony.RadioConfig: android.os.WorkSource mDefaultWorkSource>;

        r2 = specialinvoke r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.RILRequest obtainRequest(int,android.os.Message,android.os.WorkSource)>(201, r17, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RadioConfig: java.lang.String requestToString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r16);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.RadioConfig: void logd(java.lang.String)>($r13);

     label1:
        $i1 = r2.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r14 = staticinvoke <com.android.internal.telephony.RadioConfig: java.util.ArrayList primitiveArrayToArrayList(int[])>(r16);

        interfaceinvoke r1.<android.hardware.radio.config.V1_0.IRadioConfig: void setSimSlotsMapping(int,java.util.ArrayList)>($i1, $r14);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.RadioConfig: void resetProxyAndRequestList(java.lang.String,java.lang.Exception)>("setSimSlotsMapping", $r15);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void unregisterForSimSlotStatusChanged(android.os.Handler)
    {
        com.android.internal.telephony.RadioConfig r0;
        android.os.Handler r1, $r3;
        com.android.internal.telephony.Registrant r2, $r4;

        r0 := @this: com.android.internal.telephony.RadioConfig;

        r1 := @parameter0: android.os.Handler;

        r2 = r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.Registrant mSimSlotStatusRegistrant>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        if $r3 != r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.Registrant mSimSlotStatusRegistrant>;

        virtualinvoke $r4.<com.android.internal.telephony.Registrant: void clear()>();

        r0.<com.android.internal.telephony.RadioConfig: com.android.internal.telephony.Registrant mSimSlotStatusRegistrant> = null;

     label1:
        return;
    }
}
