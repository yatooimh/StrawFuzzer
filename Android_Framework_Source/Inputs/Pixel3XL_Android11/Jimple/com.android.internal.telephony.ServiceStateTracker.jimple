public class com.android.internal.telephony.ServiceStateTracker extends android.os.Handler
{
    private static final java.lang.String ACTION_RADIO_OFF;
    public static final int CARRIER_NAME_DISPLAY_BITMASK_SHOW_PLMN;
    public static final int CARRIER_NAME_DISPLAY_BITMASK_SHOW_SPN;
    private static final long CELL_INFO_LIST_QUERY_TIMEOUT;
    public static final int CS_DISABLED;
    public static final int CS_EMERGENCY_ENABLED;
    public static final int CS_ENABLED;
    public static final int CS_NORMAL_ENABLED;
    public static final int CS_NOTIFICATION;
    public static final int CS_REJECT_CAUSE_DISABLED;
    public static final int CS_REJECT_CAUSE_ENABLED;
    public static final int CS_REJECT_CAUSE_NOTIFICATION;
    static final boolean DBG;
    public static final int DEFAULT_GPRS_CHECK_PERIOD_MILLIS;
    public static final java.lang.String DEFAULT_MNC;
    protected static final int EVENT_ALL_DATA_DISCONNECTED;
    protected static final int EVENT_CARRIER_CONFIG_CHANGED;
    protected static final int EVENT_CDMA_PRL_VERSION_CHANGED;
    protected static final int EVENT_CDMA_SUBSCRIPTION_SOURCE_CHANGED;
    protected static final int EVENT_CELL_LOCATION_RESPONSE;
    protected static final int EVENT_CHANGE_IMS_STATE;
    protected static final int EVENT_CHECK_REPORT_GPRS;
    protected static final int EVENT_GET_CELL_INFO_LIST;
    protected static final int EVENT_GET_LOC_DONE;
    protected static final int EVENT_GET_PREFERRED_NETWORK_TYPE;
    protected static final int EVENT_GET_SIGNAL_STRENGTH;
    public static final int EVENT_ICC_CHANGED;
    protected static final int EVENT_IMS_CAPABILITY_CHANGED;
    protected static final int EVENT_IMS_SERVICE_STATE_CHANGED;
    protected static final int EVENT_IMS_STATE_CHANGED;
    protected static final int EVENT_IMS_STATE_DONE;
    protected static final int EVENT_LOCATION_UPDATES_ENABLED;
    protected static final int EVENT_NETWORK_STATE_CHANGED;
    protected static final int EVENT_NITZ_TIME;
    protected static final int EVENT_NV_READY;
    protected static final int EVENT_OTA_PROVISION_STATUS_CHANGE;
    protected static final int EVENT_PHONE_TYPE_SWITCHED;
    protected static final int EVENT_PHYSICAL_CHANNEL_CONFIG;
    protected static final int EVENT_POLL_SIGNAL_STRENGTH;
    protected static final int EVENT_POLL_STATE_CDMA_SUBSCRIPTION;
    protected static final int EVENT_POLL_STATE_CS_CELLULAR_REGISTRATION;
    protected static final int EVENT_POLL_STATE_NETWORK_SELECTION_MODE;
    protected static final int EVENT_POLL_STATE_OPERATOR;
    protected static final int EVENT_POLL_STATE_PS_CELLULAR_REGISTRATION;
    protected static final int EVENT_POLL_STATE_PS_IWLAN_REGISTRATION;
    private static final int EVENT_POLL_STATE_REQUEST;
    protected static final int EVENT_RADIO_ON;
    protected static final int EVENT_RADIO_POWER_FROM_CARRIER;
    protected static final int EVENT_RADIO_POWER_OFF_DONE;
    protected static final int EVENT_RADIO_STATE_CHANGED;
    protected static final int EVENT_RESET_PREFERRED_NETWORK_TYPE;
    protected static final int EVENT_RESTRICTED_STATE_CHANGED;
    protected static final int EVENT_RUIM_READY;
    protected static final int EVENT_RUIM_RECORDS_LOADED;
    protected static final int EVENT_SET_PREFERRED_NETWORK_TYPE;
    protected static final int EVENT_SET_RADIO_POWER_OFF;
    protected static final int EVENT_SIGNAL_STRENGTH_UPDATE;
    protected static final int EVENT_SIM_READY;
    protected static final int EVENT_SIM_RECORDS_LOADED;
    protected static final int EVENT_UNSOL_CELL_INFO_LIST;
    private static final int INVALID_LTE_EARFCN;
    public static final java.lang.String INVALID_MCC;
    static final java.lang.String LOG_TAG;
    private static final int MS_PER_HOUR;
    private static final int POLL_PERIOD_MILLIS;
    private static final java.lang.String PROP_FORCE_ROAMING;
    public static final int PS_DISABLED;
    public static final int PS_ENABLED;
    public static final int PS_NOTIFICATION;
    protected static final java.lang.String REGISTRATION_DENIED_AUTH;
    protected static final java.lang.String REGISTRATION_DENIED_GEN;
    private static final java.lang.String SERVICE_STATE;
    private static final long SIGNAL_STRENGTH_REFRESH_THRESHOLD_IN_MS;
    public static final java.lang.String UNACTIVATED_MIN2_VALUE;
    public static final java.lang.String UNACTIVATED_MIN_VALUE;
    private static final boolean VDBG;
    private boolean mAlarmSwitch;
    private final com.android.internal.telephony.LocalLog mAttachLog;
    protected android.util.SparseArray mAttachedRegistrants;
    private com.android.internal.telephony.CarrierServiceStateTracker mCSST;
    private com.android.internal.telephony.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants;
    private com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM;
    private com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr;
    private final com.android.internal.telephony.LocalLog mCdnrLogs;
    private android.telephony.CellIdentity mCellIdentity;
    private int mCellInfoMinIntervalMs;
    private com.android.internal.telephony.CommandsInterface mCi;
    private final android.content.ContentResolver mCr;
    private java.lang.String mCurDataSpn;
    private java.lang.String mCurPlmn;
    private boolean mCurShowPlmn;
    private boolean mCurShowSpn;
    private java.lang.String mCurSpn;
    private java.lang.String mCurrentCarrier;
    private int mCurrentOtaspMode;
    private android.util.SparseArray mDataRegStateOrRatChangedRegistrants;
    private com.android.internal.telephony.RegistrantList mDataRoamingOffRegistrants;
    private com.android.internal.telephony.RegistrantList mDataRoamingOnRegistrants;
    private int mDefaultRoamingIndicator;
    private boolean mDesiredPowerState;
    protected android.util.SparseArray mDetachedRegistrants;
    private boolean mDeviceShuttingDown;
    private boolean mDontPollSignalStrength;
    private java.util.ArrayList mEarfcnPairListForRsrpBoost;
    private boolean mEmergencyOnly;
    private final com.android.internal.telephony.cdma.EriManager mEriManager;
    private java.lang.String mEriText;
    private boolean mGsmDataRoaming;
    private boolean mGsmVoiceRoaming;
    private com.android.internal.telephony.HbpcdUtils mHbpcdUtils;
    private int[] mHomeNetworkId;
    private int[] mHomeSystemId;
    private com.android.internal.telephony.uicc.IccRecords mIccRecords;
    private com.android.internal.telephony.RegistrantList mImsCapabilityChangedRegistrants;
    private boolean mImsRegistered;
    private boolean mImsRegistrationOnOff;
    private android.content.BroadcastReceiver mIntentReceiver;
    private boolean mIsEriTextLoaded;
    private boolean mIsInPrl;
    private boolean mIsMinInfoReady;
    private boolean mIsPendingCellInfoRequest;
    private boolean mIsSimReady;
    private boolean mIsSubscriptionFromRuim;
    private java.util.List mLastCellInfoList;
    private long mLastCellInfoReqTime;
    private com.android.internal.telephony.NitzData mLastNitzData;
    private java.util.List mLastPhysicalChannelConfigList;
    private android.telephony.SignalStrength mLastSignalStrength;
    private final com.android.internal.telephony.LocaleTracker mLocaleTracker;
    private int mLteRsrpBoost;
    private final java.lang.Object mLteRsrpBoostLock;
    private int mMaxDataCalls;
    private java.lang.String mMdn;
    private java.lang.String mMin;
    private com.android.internal.telephony.RegistrantList mNetworkAttachedRegistrants;
    private com.android.internal.telephony.RegistrantList mNetworkDetachedRegistrants;
    private int mNewMaxDataCalls;
    private int mNewReasonDataDenied;
    private int mNewRejectCode;
    private android.telephony.ServiceState mNewSS;
    private final com.android.internal.telephony.NitzStateMachine mNitzState;
    private android.app.Notification mNotification;
    private com.android.internal.telephony.RegistrantList mNrFrequencyChangedRegistrants;
    private com.android.internal.telephony.RegistrantList mNrStateChangedRegistrants;
    private final com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener mOnSubscriptionsChangedListener;
    private java.util.regex.Pattern mOperatorNameStringPattern;
    private java.util.List mPendingCellInfoRequests;
    private boolean mPendingRadioPowerOffAfterDataOff;
    private int mPendingRadioPowerOffAfterDataOffTag;
    protected final com.android.internal.telephony.GsmCdmaPhone mPhone;
    private final com.android.internal.telephony.LocalLog mPhoneTypeLog;
    public int[] mPollingContext;
    private boolean mPowerOffDelayNeed;
    private int mPreferredNetworkType;
    private int mPrevSubId;
    private java.lang.String mPrlVersion;
    private com.android.internal.telephony.RegistrantList mPsRestrictDisabledRegistrants;
    private com.android.internal.telephony.RegistrantList mPsRestrictEnabledRegistrants;
    private boolean mRadioDisabledByCarrier;
    private android.app.PendingIntent mRadioOffIntent;
    private final com.android.internal.telephony.LocalLog mRadioPowerLog;
    private final com.android.internal.telephony.LocalLog mRatLog;
    private final com.android.internal.telephony.RatRatcheter mRatRatcheter;
    private int mReasonDataDenied;
    private final android.util.SparseArray mRegStateManagers;
    private java.lang.String mRegistrationDeniedReason;
    private int mRegistrationState;
    private int mRejectCode;
    private boolean mReportedGprsNoReg;
    public com.android.internal.telephony.RestrictedState mRestrictedState;
    private int mRoamingIndicator;
    private final com.android.internal.telephony.LocalLog mRoamingLog;
    public android.telephony.ServiceState mSS;
    private android.telephony.SignalStrength mSignalStrength;
    private long mSignalStrengthUpdatedTime;
    private boolean mSpnUpdatePending;
    private boolean mStartedGprsRegCheck;
    public int mSubId;
    private com.android.internal.telephony.SubscriptionController mSubscriptionController;
    private android.telephony.SubscriptionManager mSubscriptionManager;
    private final com.android.internal.telephony.dataconnection.TransportManager mTransportManager;
    private com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation;
    private com.android.internal.telephony.uicc.UiccController mUiccController;
    private boolean mVoiceCapable;
    private com.android.internal.telephony.RegistrantList mVoiceRegStateOrRatChangedRegistrants;
    private com.android.internal.telephony.RegistrantList mVoiceRoamingOffRegistrants;
    private com.android.internal.telephony.RegistrantList mVoiceRoamingOnRegistrants;
    private boolean mWantContinuousLocationUpdates;
    private boolean mWantSingleLocationUpdate;

    static void <clinit>()
    {
        java.util.concurrent.TimeUnit $r0;
        long $l0;

        <com.android.internal.telephony.ServiceStateTracker: boolean VDBG> = 0;

        <com.android.internal.telephony.ServiceStateTracker: java.lang.String UNACTIVATED_MIN_VALUE> = "1111110111";

        <com.android.internal.telephony.ServiceStateTracker: java.lang.String UNACTIVATED_MIN2_VALUE> = "000000";

        <com.android.internal.telephony.ServiceStateTracker: java.lang.String SERVICE_STATE> = "service_state";

        <com.android.internal.telephony.ServiceStateTracker: java.lang.String REGISTRATION_DENIED_GEN> = "General";

        <com.android.internal.telephony.ServiceStateTracker: java.lang.String REGISTRATION_DENIED_AUTH> = "Authentication Failure";

        <com.android.internal.telephony.ServiceStateTracker: int PS_NOTIFICATION> = 888;

        <com.android.internal.telephony.ServiceStateTracker: int PS_ENABLED> = 1001;

        <com.android.internal.telephony.ServiceStateTracker: int PS_DISABLED> = 1002;

        <com.android.internal.telephony.ServiceStateTracker: java.lang.String PROP_FORCE_ROAMING> = "telephony.test.forceRoaming";

        <com.android.internal.telephony.ServiceStateTracker: int POLL_PERIOD_MILLIS> = 20000;

        <com.android.internal.telephony.ServiceStateTracker: int MS_PER_HOUR> = 3600000;

        <com.android.internal.telephony.ServiceStateTracker: java.lang.String LOG_TAG> = "SST";

        <com.android.internal.telephony.ServiceStateTracker: java.lang.String INVALID_MCC> = "000";

        <com.android.internal.telephony.ServiceStateTracker: int INVALID_LTE_EARFCN> = -1;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_UNSOL_CELL_INFO_LIST> = 44;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_SIM_RECORDS_LOADED> = 16;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_SIM_READY> = 17;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_SIGNAL_STRENGTH_UPDATE> = 12;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_SET_RADIO_POWER_OFF> = 38;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_SET_PREFERRED_NETWORK_TYPE> = 20;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_RUIM_RECORDS_LOADED> = 27;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_RUIM_READY> = 26;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_RESTRICTED_STATE_CHANGED> = 23;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_RESET_PREFERRED_NETWORK_TYPE> = 21;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_RADIO_STATE_CHANGED> = 1;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_RADIO_POWER_OFF_DONE> = 54;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_RADIO_POWER_FROM_CARRIER> = 51;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_RADIO_ON> = 41;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_POLL_STATE_REQUEST> = 58;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_POLL_STATE_PS_IWLAN_REGISTRATION> = 6;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_POLL_STATE_PS_CELLULAR_REGISTRATION> = 5;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_POLL_STATE_OPERATOR> = 7;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_POLL_STATE_NETWORK_SELECTION_MODE> = 14;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_POLL_STATE_CS_CELLULAR_REGISTRATION> = 4;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_POLL_STATE_CDMA_SUBSCRIPTION> = 34;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_POLL_SIGNAL_STRENGTH> = 10;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_PHYSICAL_CHANNEL_CONFIG> = 55;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_PHONE_TYPE_SWITCHED> = 50;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_OTA_PROVISION_STATUS_CHANGE> = 37;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_NV_READY> = 35;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_NITZ_TIME> = 11;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_NETWORK_STATE_CHANGED> = 2;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_LOCATION_UPDATES_ENABLED> = 18;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_IMS_STATE_DONE> = 47;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_IMS_STATE_CHANGED> = 46;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_IMS_SERVICE_STATE_CHANGED> = 53;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_IMS_CAPABILITY_CHANGED> = 48;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_ICC_CHANGED> = 42;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_GET_SIGNAL_STRENGTH> = 3;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_GET_PREFERRED_NETWORK_TYPE> = 19;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_GET_LOC_DONE> = 15;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_GET_CELL_INFO_LIST> = 43;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_CHECK_REPORT_GPRS> = 22;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_CHANGE_IMS_STATE> = 45;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_CELL_LOCATION_RESPONSE> = 56;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_CDMA_SUBSCRIPTION_SOURCE_CHANGED> = 39;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_CDMA_PRL_VERSION_CHANGED> = 40;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_CARRIER_CONFIG_CHANGED> = 57;

        <com.android.internal.telephony.ServiceStateTracker: int EVENT_ALL_DATA_DISCONNECTED> = 49;

        <com.android.internal.telephony.ServiceStateTracker: java.lang.String DEFAULT_MNC> = "00";

        <com.android.internal.telephony.ServiceStateTracker: int DEFAULT_GPRS_CHECK_PERIOD_MILLIS> = 60000;

        <com.android.internal.telephony.ServiceStateTracker: boolean DBG> = 1;

        <com.android.internal.telephony.ServiceStateTracker: int CS_REJECT_CAUSE_NOTIFICATION> = 111;

        <com.android.internal.telephony.ServiceStateTracker: int CS_REJECT_CAUSE_ENABLED> = 2001;

        <com.android.internal.telephony.ServiceStateTracker: int CS_REJECT_CAUSE_DISABLED> = 2002;

        <com.android.internal.telephony.ServiceStateTracker: int CS_NOTIFICATION> = 999;

        <com.android.internal.telephony.ServiceStateTracker: int CS_NORMAL_ENABLED> = 1005;

        <com.android.internal.telephony.ServiceStateTracker: int CS_ENABLED> = 1003;

        <com.android.internal.telephony.ServiceStateTracker: int CS_EMERGENCY_ENABLED> = 1006;

        <com.android.internal.telephony.ServiceStateTracker: int CS_DISABLED> = 1004;

        <com.android.internal.telephony.ServiceStateTracker: long CELL_INFO_LIST_QUERY_TIMEOUT> = 2000L;

        <com.android.internal.telephony.ServiceStateTracker: int CARRIER_NAME_DISPLAY_BITMASK_SHOW_SPN> = 1;

        <com.android.internal.telephony.ServiceStateTracker: int CARRIER_NAME_DISPLAY_BITMASK_SHOW_PLMN> = 2;

        <com.android.internal.telephony.ServiceStateTracker: java.lang.String ACTION_RADIO_OFF> = "android.intent.action.ACTION_RADIO_OFF";

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(10L);

        <com.android.internal.telephony.ServiceStateTracker: long SIGNAL_STRENGTH_REFRESH_THRESHOLD_IN_MS> = $l0;

        return;
    }

    public void <init>(com.android.internal.telephony.GsmCdmaPhone, com.android.internal.telephony.CommandsInterface)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1, i2, i3, i4;
        com.android.internal.telephony.RegistrantList $r1, $r2, $r3, $r4, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r25;
        android.util.SparseArray $r5, $r6, $r8, $r26, $r76, $r77;
        java.util.LinkedList $r16;
        com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener $r17, $r52;
        com.android.internal.telephony.LocalLog $r18, $r19, $r20, $r21, $r22, $r23, r87;
        com.android.internal.telephony.ServiceStateTracker$1 $r24;
        java.lang.Object $r27, $r45, $r78;
        com.android.internal.telephony.TelephonyComponentFactory $r28, $r31, $r35, $r38, $r55, $r58;
        java.lang.Class $r29, $r36, $r56;
        java.lang.String $r30, $r37, $r57, $r90;
        com.android.internal.telephony.NitzStateMachine $r32, $r60;
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver $r33;
        com.android.internal.telephony.GsmCdmaPhone $r34, $r39, $r42, $r43, $r54, $r59, r80, $r91, $r93, $r104;
        com.android.internal.telephony.cdma.EriManager $r40;
        com.android.internal.telephony.RatRatcheter $r41;
        android.content.Context $r44, $r51, $r66, r94;
        android.telephony.TelephonyManager $r46;
        boolean $z0, z1;
        com.android.internal.telephony.CommandsInterface $r47, $r48, $r49, $r63, $r64, $r65, r81, $r105;
        com.android.internal.telephony.SubscriptionController $r50;
        com.android.internal.telephony.RestrictedState $r53;
        android.os.Looper $r61;
        com.android.internal.telephony.LocaleTracker $r62;
        android.content.ContentResolver $r67, r86;
        com.android.internal.telephony.NetworkRegistrationManager $r75, $r79;
        com.android.internal.telephony.uicc.UiccController r82;
        android.telephony.SubscriptionManager r83;
        com.android.internal.telephony.dataconnection.TransportManager r84;
        int[] r85;
        java.lang.StringBuilder $r88;
        com.android.internal.telephony.CarrierActionAgent $r92;
        android.content.IntentFilter $r95, $r98, $r101;
        android.content.BroadcastReceiver $r97, $r100, $r103;
        com.android.internal.telephony.CarrierServiceStateTracker $r106, $r108, $r109, $r110, $r111;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r80 := @parameter0: com.android.internal.telephony.GsmCdmaPhone;

        r81 := @parameter1: com.android.internal.telephony.CommandsInterface;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mCellInfoMinIntervalMs> = 2000;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastCellInfoList> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastPhysicalChannelConfigList> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDontPollSignalStrength> = 0;

        $r1 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r1.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRoamingOnRegistrants> = $r1;

        $r2 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r2.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRoamingOffRegistrants> = $r2;

        $r3 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r3.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mDataRoamingOnRegistrants> = $r3;

        $r4 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r4.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mDataRoamingOffRegistrants> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mAttachedRegistrants> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDetachedRegistrants> = $r6;

        $r7 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r7.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRegStateOrRatChangedRegistrants> = $r7;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDataRegStateOrRatChangedRegistrants> = $r8;

        $r9 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r9.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNetworkAttachedRegistrants> = $r9;

        $r10 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r10.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNetworkDetachedRegistrants> = $r10;

        $r11 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r11.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mPsRestrictEnabledRegistrants> = $r11;

        $r12 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r12.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mPsRestrictDisabledRegistrants> = $r12;

        $r13 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r13.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mImsCapabilityChangedRegistrants> = $r13;

        $r14 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r14.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNrStateChangedRegistrants> = $r14;

        $r15 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r15.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNrFrequencyChangedRegistrants> = $r15;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mPendingRadioPowerOffAfterDataOffTag> = 0;

        $r16 = new java.util.LinkedList;

        specialinvoke $r16.<java.util.LinkedList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mPendingCellInfoRequests> = $r16;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsPendingCellInfoRequest> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mImsRegistrationOnOff> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mAlarmSwitch> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mRadioDisabledByCarrier> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: android.app.PendingIntent mRadioOffIntent> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPowerOffDelayNeed> = 1;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDeviceShuttingDown> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mSpnUpdatePending> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurSpn> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurDataSpn> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurPlmn> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mCurShowPlmn> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mCurShowSpn> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mSubId> = -1;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mPrevSubId> = -1;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mImsRegistered> = 0;

        $r17 = new com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener;

        specialinvoke $r17.<com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener: void <init>(com.android.internal.telephony.ServiceStateTracker,com.android.internal.telephony.ServiceStateTracker$1)>(r0, null);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener mOnSubscriptionsChangedListener> = $r17;

        $r18 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r18.<com.android.internal.telephony.LocalLog: void <init>(int)>(10);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mRoamingLog> = $r18;

        $r19 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r19.<com.android.internal.telephony.LocalLog: void <init>(int)>(10);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mAttachLog> = $r19;

        $r20 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r20.<com.android.internal.telephony.LocalLog: void <init>(int)>(10);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mPhoneTypeLog> = $r20;

        $r21 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r21.<com.android.internal.telephony.LocalLog: void <init>(int)>(20);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mRatLog> = $r21;

        $r22 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r22.<com.android.internal.telephony.LocalLog: void <init>(int)>(20);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mRadioPowerLog> = $r22;

        $r23 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r23.<com.android.internal.telephony.LocalLog: void <init>(int)>(64);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mCdnrLogs> = $r23;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mMaxDataCalls> = 1;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mNewMaxDataCalls> = 1;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mReasonDataDenied> = -1;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mNewReasonDataDenied> = -1;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mGsmVoiceRoaming> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mGsmDataRoaming> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mEmergencyOnly> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSimReady> = 0;

        $r24 = new com.android.internal.telephony.ServiceStateTracker$1;

        specialinvoke $r24.<com.android.internal.telephony.ServiceStateTracker$1: void <init>(com.android.internal.telephony.ServiceStateTracker)>(r0);

        r0.<com.android.internal.telephony.ServiceStateTracker: android.content.BroadcastReceiver mIntentReceiver> = $r24;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mCurrentOtaspMode> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mRegistrationState> = -1;

        $r25 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r25.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants> = $r25;

        r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeSystemId> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeNetworkId> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsMinInfoReady> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsEriTextLoaded> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.HbpcdUtils mHbpcdUtils> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurrentCarrier> = null;

        $r26 = new android.util.SparseArray;

        specialinvoke $r26.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mRegStateManagers> = $r26;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.util.ArrayList mEarfcnPairListForRsrpBoost> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mLteRsrpBoost> = 0;

        $r27 = new java.lang.Object;

        specialinvoke $r27.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.Object mLteRsrpBoostLock> = $r27;

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mLastSignalStrength> = null;

        $r28 = staticinvoke <com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory getInstance()>();

        $r29 = class "Lcom/android/internal/telephony/NitzStateMachine;";

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        $r31 = virtualinvoke $r28.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.NitzStateMachine makeNitzStateMachine(com.android.internal.telephony.GsmCdmaPhone)>(r80);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzStateMachine mNitzState> = $r32;

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone> = r80;

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi> = r81;

        $r33 = new com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        $r34 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        specialinvoke $r33.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void <init>(com.android.internal.telephony.GsmCdmaPhone)>($r34);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr> = $r33;

        $r35 = staticinvoke <com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory getInstance()>();

        $r36 = class "Lcom/android/internal/telephony/cdma/EriManager;";

        $r37 = virtualinvoke $r36.<java.lang.Class: java.lang.String getName()>();

        $r38 = virtualinvoke $r35.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r37);

        $r39 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r40 = virtualinvoke $r38.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.cdma.EriManager makeEriManager(com.android.internal.telephony.Phone,int)>($r39, 0);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.EriManager mEriManager> = $r40;

        $r41 = new com.android.internal.telephony.RatRatcheter;

        $r42 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        specialinvoke $r41.<com.android.internal.telephony.RatRatcheter: void <init>(com.android.internal.telephony.Phone)>($r42);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RatRatcheter mRatRatcheter> = $r41;

        $r43 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r44 = virtualinvoke $r43.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r45 = virtualinvoke $r44.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r46 = (android.telephony.TelephonyManager) $r45;

        $z0 = virtualinvoke $r46.<android.telephony.TelephonyManager: boolean isVoiceCapable()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mVoiceCapable> = $z0;

        r82 = staticinvoke <com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController> = r82;

        virtualinvoke r82.<com.android.internal.telephony.uicc.UiccController: void registerForIccChanged(android.os.Handler,int,java.lang.Object)>(r0, 42, null);

        $r47 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r47.<com.android.internal.telephony.CommandsInterface: void setOnSignalStrengthUpdate(android.os.Handler,int,java.lang.Object)>(r0, 12, null);

        $r48 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r48.<com.android.internal.telephony.CommandsInterface: void registerForCellInfoList(android.os.Handler,int,java.lang.Object)>(r0, 44, null);

        $r49 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r49.<com.android.internal.telephony.CommandsInterface: void registerForPhysicalChannelConfiguration(android.os.Handler,int,java.lang.Object)>(r0, 55, null);

        $r50 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.SubscriptionController mSubscriptionController> = $r50;

        $r51 = virtualinvoke r80.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        r83 = staticinvoke <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager 'from'(android.content.Context)>($r51);

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SubscriptionManager mSubscriptionManager> = r83;

        $r52 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener mOnSubscriptionsChangedListener>;

        virtualinvoke r83.<android.telephony.SubscriptionManager: void addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>($r52);

        $r53 = new com.android.internal.telephony.RestrictedState;

        specialinvoke $r53.<com.android.internal.telephony.RestrictedState: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState> = $r53;

        $r54 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r84 = virtualinvoke $r54.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.TransportManager getTransportManager()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager> = r84;

        r85 = virtualinvoke r84.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        i1 = lengthof r85;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        i0 = r85[i2];

        $r76 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mRegStateManagers>;

        $r75 = new com.android.internal.telephony.NetworkRegistrationManager;

        specialinvoke $r75.<com.android.internal.telephony.NetworkRegistrationManager: void <init>(int,com.android.internal.telephony.Phone)>(i0, r80);

        virtualinvoke $r76.<android.util.SparseArray: void append(int,java.lang.Object)>(i0, $r75);

        $r77 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mRegStateManagers>;

        $r78 = virtualinvoke $r77.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r79 = (com.android.internal.telephony.NetworkRegistrationManager) $r78;

        virtualinvoke $r79.<com.android.internal.telephony.NetworkRegistrationManager: void registerForNetworkRegistrationInfoChanged(android.os.Handler,int,java.lang.Object)>(r0, 2, null);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r55 = staticinvoke <com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory getInstance()>();

        $r56 = class "Lcom/android/internal/telephony/LocaleTracker;";

        $r57 = virtualinvoke $r56.<java.lang.Class: java.lang.String getName()>();

        $r58 = virtualinvoke $r55.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r57);

        $r59 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r60 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzStateMachine mNitzState>;

        $r61 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Looper getLooper()>();

        $r62 = virtualinvoke $r58.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.LocaleTracker makeLocaleTracker(com.android.internal.telephony.Phone,com.android.internal.telephony.NitzStateMachine,android.os.Looper)>($r59, $r60, $r61);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocaleTracker mLocaleTracker> = $r62;

        $r63 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r63.<com.android.internal.telephony.CommandsInterface: void registerForImsNetworkStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 46, null);

        $r64 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r64.<com.android.internal.telephony.CommandsInterface: void registerForRadioStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 1, null);

        $r65 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r65.<com.android.internal.telephony.CommandsInterface: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>(r0, 11, null);

        $r66 = virtualinvoke r80.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        r86 = virtualinvoke $r66.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.content.ContentResolver mCr> = r86;

        i3 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r86, "airplane_mode_on", 0);

        $r67 = r0.<com.android.internal.telephony.ServiceStateTracker: android.content.ContentResolver mCr>;

        i4 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r67, "enable_cellular_on_boot", 1);

        if i4 <= 0 goto label3;

        if i3 > 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDesiredPowerState> = z1;

        r87 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mRadioPowerLog>;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init : airplane mode = ");

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enableCellularOnBoot = ");

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r87.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r90);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setSignalStrengthDefaultValues()>();

        $r91 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r92 = virtualinvoke $r91.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierActionAgent getCarrierActionAgent()>();

        virtualinvoke $r92.<com.android.internal.telephony.CarrierActionAgent: void registerForCarrierAction(int,android.os.Handler,int,java.lang.Object,boolean)>(1, r0, 51, null, 0);

        $r93 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r94 = virtualinvoke $r93.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r95 = new android.content.IntentFilter;

        specialinvoke $r95.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r95.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.LOCALE_CHANGED");

        $r97 = r0.<com.android.internal.telephony.ServiceStateTracker: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke r94.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r97, $r95);

        $r98 = new android.content.IntentFilter;

        specialinvoke $r98.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r98.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.ACTION_RADIO_OFF");

        $r100 = r0.<com.android.internal.telephony.ServiceStateTracker: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke r94.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r100, $r98);

        $r101 = new android.content.IntentFilter;

        specialinvoke $r101.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r101.<android.content.IntentFilter: void addAction(java.lang.String)>("android.telephony.action.CARRIER_CONFIG_CHANGED");

        $r103 = r0.<com.android.internal.telephony.ServiceStateTracker: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke r94.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r103, $r101);

        $r104 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r104.<com.android.internal.telephony.GsmCdmaPhone: void notifyOtaspChanged(int)>(0);

        $r105 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r105.<com.android.internal.telephony.CommandsInterface: void setOnRestrictedStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 23, null);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updatePhoneType()>();

        $r106 = new com.android.internal.telephony.CarrierServiceStateTracker;

        specialinvoke $r106.<com.android.internal.telephony.CarrierServiceStateTracker: void <init>(com.android.internal.telephony.Phone,com.android.internal.telephony.ServiceStateTracker)>(r80, r0);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CarrierServiceStateTracker mCSST> = $r106;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void registerForNetworkAttached(android.os.Handler,int,java.lang.Object)>($r106, 101, null);

        $r108 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CarrierServiceStateTracker mCSST>;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void registerForNetworkDetached(android.os.Handler,int,java.lang.Object)>($r108, 102, null);

        $r109 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CarrierServiceStateTracker mCSST>;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void registerForDataConnectionAttached(int,android.os.Handler,int,java.lang.Object)>(1, $r109, 103, null);

        $r110 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CarrierServiceStateTracker mCSST>;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void registerForDataConnectionDetached(int,android.os.Handler,int,java.lang.Object)>(1, $r110, 104, null);

        $r111 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CarrierServiceStateTracker mCSST>;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void registerForImsCapabilityChanged(android.os.Handler,int,java.lang.Object)>($r111, 105, null);

        return;
    }

    static int access$100(com.android.internal.telephony.ServiceStateTracker)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int $i0;

        r0 := @parameter0: com.android.internal.telephony.ServiceStateTracker;

        $i0 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPrevSubId>;

        return $i0;
    }

    static int access$102(com.android.internal.telephony.ServiceStateTracker, int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter1: int;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mPrevSubId> = i0;

        return i0;
    }

    static void access$200(com.android.internal.telephony.ServiceStateTracker, int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setDataNetworkTypeForPhone(int)>(i0);

        return;
    }

    static boolean access$300(com.android.internal.telephony.ServiceStateTracker)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mSpnUpdatePending>;

        return $z0;
    }

    static boolean access$302(com.android.internal.telephony.ServiceStateTracker, boolean)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.ServiceStateTracker;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mSpnUpdatePending> = z0;

        return z0;
    }

    static boolean access$400(com.android.internal.telephony.ServiceStateTracker)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mCurShowPlmn>;

        return $z0;
    }

    static java.lang.String access$500(com.android.internal.telephony.ServiceStateTracker)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurPlmn>;

        return $r1;
    }

    static boolean access$600(com.android.internal.telephony.ServiceStateTracker)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mCurShowSpn>;

        return $z0;
    }

    static java.lang.String access$700(com.android.internal.telephony.ServiceStateTracker)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurSpn>;

        return $r1;
    }

    static com.android.internal.telephony.SubscriptionController access$800(com.android.internal.telephony.ServiceStateTracker)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.SubscriptionController $r1;

        r0 := @parameter0: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.SubscriptionController mSubscriptionController>;

        return $r1;
    }

    static boolean access$902(com.android.internal.telephony.ServiceStateTracker, boolean)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.ServiceStateTracker;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mAlarmSwitch> = z0;

        return z0;
    }

    private void cancelAllNotifications()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r4, $r8, $r9, $r10;
        com.android.internal.telephony.GsmCdmaPhone $r5;
        android.content.Context $r6;
        java.lang.Object $r7;
        boolean $z0;
        android.app.NotificationManager r12;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cancelAllNotifications: mPrevSubId=");

        $i0 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPrevSubId>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r4);

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

        r12 = (android.app.NotificationManager) $r7;

        $i1 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPrevSubId>;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>($i1);

        if $z0 == 0 goto label1;

        $i2 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPrevSubId>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke r12.<android.app.NotificationManager: void cancel(java.lang.String,int)>($r8, 888);

        $i3 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPrevSubId>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke r12.<android.app.NotificationManager: void cancel(java.lang.String,int)>($r9, 999);

        $i4 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPrevSubId>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        virtualinvoke r12.<android.app.NotificationManager: void cancel(java.lang.String,int)>($r10, 111);

     label1:
        return;
    }

    private void combinePsRegistrationStates(android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState r1;
        android.telephony.NetworkRegistrationInfo r2, r6;
        boolean z0;
        com.android.internal.telephony.dataconnection.TransportManager $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r7;
        java.lang.String $r9;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.telephony.ServiceState;

        r6 = virtualinvoke r1.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 2);

        r2 = virtualinvoke r1.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        z0 = virtualinvoke $r3.<com.android.internal.telephony.dataconnection.TransportManager: boolean isAnyApnPreferredOnIwlan()>();

        virtualinvoke r1.<android.telephony.ServiceState: void setIwlanPreferred(boolean)>(z0);

        if r6 == null goto label1;

        $i2 = virtualinvoke r6.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        if $i2 != 18 goto label1;

        $i3 = virtualinvoke r6.<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>();

        if $i3 != 1 goto label1;

        if z0 == 0 goto label1;

        virtualinvoke r1.<android.telephony.ServiceState: void setDataRegState(int)>(0);

        goto label2;

     label1:
        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>();

        $i1 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int regCodeToServiceState(int)>($i0);

        virtualinvoke r1.<android.telephony.ServiceState: void setDataRegState(int)>($i1);

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("combinePsRegistrationStates: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r9);

        return;
    }

    private boolean containsEarfcnInEarfcnRange(java.util.ArrayList, int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2, $r3, $r5;
        java.lang.Integer $r4, $r6;
        java.util.ArrayList r7;
        android.util.Pair r8;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r7 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        if r7 == null goto label3;

        r1 = virtualinvoke r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.util.Pair) $r2;

        $r3 = r8.<android.util.Pair: java.lang.Object first>;

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        if i0 < $i1 goto label2;

        $r5 = r8.<android.util.Pair: java.lang.Object second>;

        $r6 = (java.lang.Integer) $r5;

        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if i0 > $i2 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private boolean currentMccEqualsSimMcc(android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, $r6, $r7, r10;
        com.android.internal.telephony.GsmCdmaPhone $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.telephony.TelephonyManager $r5;
        int $i0;
        java.lang.Exception $r8;
        android.telephony.ServiceState r9;
        boolean z1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r9 := @parameter0: android.telephony.ServiceState;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r5 = (android.telephony.TelephonyManager) $r4;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getPhoneId()>();

        r1 = virtualinvoke $r5.<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumericForPhone(int)>($i0);

        r10 = virtualinvoke r9.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

     label1:
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $r7 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        z1 = 1;

     label4:
        return z1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void dumpCellInfoList(java.io.PrintWriter)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.io.PrintWriter r1;
        java.util.Iterator r2;
        boolean $z0, z1;
        java.lang.Object $r3;
        java.lang.String $r4;
        java.util.List r5;
        android.telephony.CellInfo r6;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLastCellInfoList={");

        r5 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastCellInfoList>;

        if r5 == null goto label3;

        z1 = 1;

        r2 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.telephony.CellInfo) $r3;

        if z1 != 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

     label2:
        z1 = 0;

        $r4 = virtualinvoke r6.<android.telephony.CellInfo: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        goto label1;

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("}");

        return;
    }

    private void dumpEarfcnPairList(java.io.PrintWriter)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.io.PrintWriter r1;
        java.util.Iterator r2;
        java.util.ArrayList $r3, r7;
        boolean $z0;
        java.lang.Object $r4, $r5, $r6;
        int i0;
        android.util.Pair r8;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mEarfcnPairListForRsrpBoost={");

        r7 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.ArrayList mEarfcnPairListForRsrpBoost>;

        if r7 == null goto label3;

        i0 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.ArrayList mEarfcnPairListForRsrpBoost>;

        r2 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.util.Pair) $r4;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("(");

        $r5 = r8.<android.util.Pair: java.lang.Object first>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r6 = r8.<android.util.Pair: java.lang.Object second>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(")");

        i0 = i0 + -1;

        if i0 == 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

     label2:
        goto label1;

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("}");

        return;
    }

    private java.lang.String fixUnknownMcc(java.lang.String, int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i1, $i2, $i3, i4, i5, i7;
        java.lang.StringBuilder $r1;
        java.lang.String r4;
        boolean z0, z1, z2;
        com.android.internal.telephony.NitzData r5;
        java.lang.Integer r6;
        com.android.internal.telephony.HbpcdUtils r7;
        byte b6;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        if i4 > 0 goto label1;

        return r4;

     label1:
        i5 = 0;

        z0 = 0;

        z1 = 0;

        r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzData mLastNitzData>;

        if r5 == null goto label4;

        $i2 = virtualinvoke r5.<com.android.internal.telephony.NitzData: int getLocalOffsetMillis()>();

        i1 = $i2 / 3600000;

        r6 = virtualinvoke r5.<com.android.internal.telephony.NitzData: java.lang.Integer getDstAdjustmentMillis()>();

        if r6 == null goto label2;

        $i3 = virtualinvoke r6.<java.lang.Integer: int intValue()>();

        if $i3 == 0 goto label2;

        z2 = 1;

        goto label3;

     label2:
        z2 = 0;

     label3:
        z1 = 1;

        z0 = z2;

        i5 = i1;

     label4:
        r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.HbpcdUtils mHbpcdUtils>;

        if z0 == 0 goto label5;

        b6 = 1;

        goto label6;

     label5:
        b6 = 0;

     label6:
        i7 = virtualinvoke r7.<com.android.internal.telephony.HbpcdUtils: int getMcc(int,int,int,boolean)>(i4, i5, b6, z1);

        if i7 <= 0 goto label7;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00");

        r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        return r4;
    }

    private int[] getBandwidthsFromConfigs(java.util.List)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.util.List r1;
        java.util.stream.Stream $r2, $r4;
        com.android.internal.telephony.'-$$Lambda$WWHOcG5P4-jgjzPPgLwm-wN15OM' $r3;
        com.android.internal.telephony.'-$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw' $r5;
        java.util.stream.IntStream $r6;
        int[] $r7;
        java.util.function.Function r8;
        java.util.function.ToIntFunction r9;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: java.util.List;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();

        $r3 = <com.android.internal.telephony._$$Lambda$WWHOcG5P4_jgjzPPgLwm_wN15OM: com.android.internal.telephony.'-$$Lambda$WWHOcG5P4-jgjzPPgLwm-wN15OM' INSTANCE>;

        r8 = (java.util.function.Function) $r3;

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r8);

        $r5 = <com.android.internal.telephony._$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw: com.android.internal.telephony.'-$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw' INSTANCE>;

        r9 = (java.util.function.ToIntFunction) $r5;

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r9);

        $r7 = interfaceinvoke $r6.<java.util.stream.IntStream: int[] toArray()>();

        return $r7;
    }

    private android.os.PersistableBundle getCarrierConfig()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1, $r5;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.os.PersistableBundle $r4, r7;
        int $i0;
        android.telephony.CarrierConfigManager r6;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        r6 = (android.telephony.CarrierConfigManager) $r3;

        if r6 == null goto label1;

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        r7 = virtualinvoke r6.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        if r7 == null goto label1;

        return r7;

     label1:
        $r4 = staticinvoke <android.telephony.CarrierConfigManager: android.os.PersistableBundle getDefaultConfig()>();

        return $r4;
    }

    private static android.telephony.CellIdentity getCellIdentityFromCellInfo(java.util.List)
    {
        java.util.Iterator r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        android.telephony.CellInfo $r2;
        boolean $z0, $z1;
        java.util.List r3;
        android.telephony.CellIdentity r4, r5, r6, r7;

        r3 := @parameter0: java.util.List;

        r4 = null;

        if r3 == null goto label5;

        r4 = null;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label5;

        r0 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

        r5 = null;

     label1:
        r6 = null;

        $z1 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (android.telephony.CellInfo) $r1;

        r7 = virtualinvoke $r2.<android.telephony.CellInfo: android.telephony.CellIdentity getCellIdentity()>();

        $z0 = r7 instanceof android.telephony.CellIdentityLte;

        if $z0 == 0 goto label2;

        if r5 != null goto label2;

        $i2 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: int getCidFromCellIdentity(android.telephony.CellIdentity)>(r7);

        if $i2 == -1 goto label1;

        r5 = r7;

        goto label1;

     label2:
        $i1 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: int getCidFromCellIdentity(android.telephony.CellIdentity)>(r7);

        if $i1 == -1 goto label3;

        r6 = r7;

        goto label4;

     label3:
        goto label1;

     label4:
        r4 = r6;

        if r6 != null goto label5;

        r4 = r6;

        if r5 == null goto label5;

        r4 = r5;

     label5:
        return r4;
    }

    private static int getCidFromCellIdentity(android.telephony.CellIdentity)
    {
        android.telephony.CellIdentity r0;
        android.telephony.CellIdentityGsm $r1;
        android.telephony.CellIdentityLte $r2;
        android.telephony.CellIdentityWcdma $r3;
        android.telephony.CellIdentityTdscdma $r4;
        int i0, i1, i2;

        r0 := @parameter0: android.telephony.CellIdentity;

        if r0 != null goto label1;

        return -1;

     label1:
        i0 = -1;

        i1 = virtualinvoke r0.<android.telephony.CellIdentity: int getType()>();

        if i1 == 1 goto label5;

        if i1 == 3 goto label4;

        if i1 == 4 goto label3;

        if i1 == 5 goto label2;

        goto label6;

     label2:
        $r4 = (android.telephony.CellIdentityTdscdma) r0;

        i0 = virtualinvoke $r4.<android.telephony.CellIdentityTdscdma: int getCid()>();

        goto label6;

     label3:
        $r3 = (android.telephony.CellIdentityWcdma) r0;

        i0 = virtualinvoke $r3.<android.telephony.CellIdentityWcdma: int getCid()>();

        goto label6;

     label4:
        $r2 = (android.telephony.CellIdentityLte) r0;

        i0 = virtualinvoke $r2.<android.telephony.CellIdentityLte: int getCi()>();

        goto label6;

     label5:
        $r1 = (android.telephony.CellIdentityGsm) r0;

        i0 = virtualinvoke $r1.<android.telephony.CellIdentityGsm: int getCid()>();

     label6:
        i2 = i0;

        if i0 != 2147483647 goto label7;

        i2 = -1;

     label7:
        return i2;
    }

    private android.content.ContentValues getContentValuesForServiceState(android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState r1;
        android.os.Parcel r3;
        android.content.ContentValues $r4;
        byte[] $r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.telephony.ServiceState;

        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r1.<android.telephony.ServiceState: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        $r5 = virtualinvoke r3.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke $r4.<android.content.ContentValues: void put(java.lang.String,byte[])>("service_state", $r5);

        return $r4;
    }

    private int getLteEarfcn(android.telephony.CellIdentity)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.CellIdentity r1;
        int $i1, i2;
        android.telephony.CellIdentityLte $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.telephony.CellIdentity;

        i2 = -1;

        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<android.telephony.CellIdentity: int getType()>();

        if $i1 == 3 goto label1;

        i2 = -1;

        goto label2;

     label1:
        $r2 = (android.telephony.CellIdentityLte) r1;

        i2 = virtualinvoke $r2.<android.telephony.CellIdentityLte: int getEarfcn()>();

     label2:
        return i2;
    }

    private java.lang.String getOperatorBrandOverride()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;
        java.lang.String $r2;
        com.android.internal.telephony.uicc.UiccCard r3;
        com.android.internal.telephony.uicc.UiccProfile r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r3 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccCard getUiccCard()>();

        if r3 != null goto label1;

        return null;

     label1:
        r4 = virtualinvoke r3.<com.android.internal.telephony.uicc.UiccCard: com.android.internal.telephony.uicc.UiccProfile getUiccProfile()>();

        if r4 != null goto label2;

        return null;

     label2:
        $r2 = virtualinvoke r4.<com.android.internal.telephony.uicc.UiccProfile: java.lang.String getOperatorBrandOverride()>();

        return $r2;
    }

    private java.lang.String getOperatorNameFromEri()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        com.android.internal.telephony.GsmCdmaPhone $r1, $r2, $r23, $r26, $r27, $r35, $r38;
        com.android.internal.telephony.uicc.UiccController $r3, $r30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        com.android.internal.telephony.uicc.UiccCard $r4, $r31;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState $r5, $r6;
        com.android.internal.telephony.uicc.IccRecords $r7, $r10, $r15;
        android.telephony.ServiceState $r8, $r9, $r12, $r13, $r14, $r18, $r19, $r20, $r21, $r22, $r34;
        com.android.internal.telephony.uicc.RuimRecords $r11;
        com.android.internal.telephony.CommandsInterface $r16, $r33;
        com.android.internal.telephony.cdma.EriManager $r17;
        android.content.Context $r24, $r28, $r36;
        java.lang.CharSequence $r25, $r37;
        android.content.res.Resources $r29;
        java.lang.String $r32, r39, r40, r41;
        com.android.internal.telephony.uicc.UiccCardApplication r42;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z1 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z1 == 0 goto label2;

        r39 = null;

        $r33 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i11 = interfaceinvoke $r33.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i11 != 1 goto label9;

        r39 = null;

        $z9 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z9 != 0 goto label9;

        $r34 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i12 = virtualinvoke $r34.<android.telephony.ServiceState: int getState()>();

        if $i12 != 0 goto label1;

        $r38 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r39 = virtualinvoke $r38.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getCdmaEriText()>();

        goto label9;

     label1:
        $r35 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r36 = virtualinvoke $r35.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r37 = virtualinvoke $r36.<android.content.Context: java.lang.CharSequence getText(int)>(17041177);

        r39 = interfaceinvoke $r37.<java.lang.CharSequence: java.lang.String toString()>();

        goto label9;

     label2:
        r39 = null;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z2 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z2 == 0 goto label9;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getPhoneId()>();

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard(int)>($i0);

        if $r4 == null goto label3;

        $r30 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i10 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getPhoneId()>();

        $r31 = virtualinvoke $r30.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard(int)>($i10);

        $r32 = virtualinvoke $r31.<com.android.internal.telephony.uicc.UiccCard: java.lang.String getOperatorBrandOverride()>();

        if $r32 == null goto label3;

        z10 = 1;

        goto label4;

     label3:
        z10 = 0;

     label4:
        r40 = null;

        if z10 != 0 goto label8;

        r40 = null;

        $r16 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i5 = interfaceinvoke $r16.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i5 != 1 goto label8;

        r40 = null;

        $r17 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.EriManager mEriManager>;

        $z5 = virtualinvoke $r17.<com.android.internal.telephony.cdma.EriManager: boolean isEriFileLoaded()>();

        if $z5 == 0 goto label8;

        $r18 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i6 = virtualinvoke $r18.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $z6 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>($i6);

        if $z6 == 0 goto label5;

        r40 = null;

        $r27 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r28 = virtualinvoke $r27.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r29 = virtualinvoke $r28.<android.content.Context: android.content.res.Resources getResources()>();

        $z8 = virtualinvoke $r29.<android.content.res.Resources: boolean getBoolean(int)>(17891337);

        if $z8 == 0 goto label8;

     label5:
        $r19 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        r40 = virtualinvoke $r19.<android.telephony.ServiceState: java.lang.String getOperatorAlpha()>();

        $r20 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i7 = virtualinvoke $r20.<android.telephony.ServiceState: int getState()>();

        if $i7 != 0 goto label6;

        $r26 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r40 = virtualinvoke $r26.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getCdmaEriText()>();

        goto label8;

     label6:
        $r21 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i8 = virtualinvoke $r21.<android.telephony.ServiceState: int getState()>();

        if $i8 != 3 goto label7;

        r41 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getServiceProviderName()>();

        r40 = r41;

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r41);

        if $z7 == 0 goto label8;

        r40 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.cdma.home.operator.alpha");

        goto label8;

     label7:
        $r22 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i9 = virtualinvoke $r22.<android.telephony.ServiceState: int getDataRegistrationState()>();

        if $i9 == 0 goto label8;

        $r23 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r24 = virtualinvoke $r23.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r25 = virtualinvoke $r24.<android.content.Context: java.lang.CharSequence getText(int)>(17041177);

        r40 = interfaceinvoke $r25.<java.lang.CharSequence: java.lang.String toString()>();

     label8:
        r42 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        r39 = r40;

        if r42 == null goto label9;

        r39 = r40;

        $r5 = virtualinvoke r42.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState getState()>();

        $r6 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState APPSTATE_READY>;

        if $r5 != $r6 goto label9;

        r39 = r40;

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r7 == null goto label9;

        r39 = r40;

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getCombinedRegState(android.telephony.ServiceState)>($r8);

        if $i1 != 0 goto label9;

        r39 = r40;

        $r9 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i2 = virtualinvoke $r9.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $z3 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>($i2);

        if $z3 != 0 goto label9;

        $r10 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        $r11 = (com.android.internal.telephony.uicc.RuimRecords) $r10;

        z0 = virtualinvoke $r11.<com.android.internal.telephony.uicc.RuimRecords: boolean getCsimSpnDisplayCondition()>();

        $r12 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        i13 = virtualinvoke $r12.<android.telephony.ServiceState: int getCdmaEriIconIndex()>();

        r39 = r40;

        if z0 == 0 goto label9;

        r39 = r40;

        if i13 != 1 goto label9;

        r39 = r40;

        $r13 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i3 = virtualinvoke $r13.<android.telephony.ServiceState: int getCdmaSystemId()>();

        $r14 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i4 = virtualinvoke $r14.<android.telephony.ServiceState: int getCdmaNetworkId()>();

        $z4 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isInHomeSidNid(int,int)>($i3, $i4);

        if $z4 == 0 goto label9;

        r39 = r40;

        $r15 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r15 == null goto label9;

        r39 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getServiceProviderName()>();

     label9:
        return r39;
    }

    public static java.util.List getPrioritizedCellIdentities(android.telephony.ServiceState)
    {
        boolean $z0;
        java.util.stream.Stream $r0, $r2, $r4, $r10, $r12, $r13;
        com.android.internal.telephony.'-$$Lambda$ServiceStateTracker$FUJA0XA9KSPDVO3gWpYNA_81tLE' $r1;
        com.android.internal.telephony.'-$$Lambda$ServiceStateTracker$7RN6UYwydSqfycBux9U6_IPM7I8' $r3;
        com.android.internal.telephony.'-$$Lambda$RNdDXQ-d5BPIf8Ylnm7M71jI_8E' $r5;
        java.util.Comparator $r6, $r8, $r9;
        com.android.internal.telephony.'-$$Lambda$ServiceStateTracker$9ISiknqxyckwhtXqJD9S3_2HWfk' $r7;
        com.android.internal.telephony.'-$$Lambda$ServiceStateTracker$8x9c9Qv6MTsHEXza7OQATbItoJg' $r11;
        java.util.stream.Collector $r14;
        java.lang.Object $r15;
        java.util.List $r16, $r17, r19;
        android.telephony.ServiceState r18;
        java.util.function.Predicate r20, r21;
        java.util.function.Function r22, r23, r24;

        r18 := @parameter0: android.telephony.ServiceState;

        r19 = virtualinvoke r18.<android.telephony.ServiceState: java.util.List getNetworkRegistrationInfoList()>();

        $z0 = interfaceinvoke r19.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r17 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r17;

     label1:
        $r0 = interfaceinvoke r19.<java.util.List: java.util.stream.Stream stream()>();

        $r1 = <com.android.internal.telephony._$$Lambda$ServiceStateTracker$FUJA0XA9KSPDVO3gWpYNA_81tLE: com.android.internal.telephony.'-$$Lambda$ServiceStateTracker$FUJA0XA9KSPDVO3gWpYNA_81tLE' INSTANCE>;

        r20 = (java.util.function.Predicate) $r1;

        $r2 = interfaceinvoke $r0.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r20);

        $r3 = <com.android.internal.telephony._$$Lambda$ServiceStateTracker$7RN6UYwydSqfycBux9U6_IPM7I8: com.android.internal.telephony.'-$$Lambda$ServiceStateTracker$7RN6UYwydSqfycBux9U6_IPM7I8' INSTANCE>;

        r21 = (java.util.function.Predicate) $r3;

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r21);

        $r5 = <com.android.internal.telephony._$$Lambda$RNdDXQ_d5BPIf8Ylnm7M71jI_8E: com.android.internal.telephony.'-$$Lambda$RNdDXQ-d5BPIf8Ylnm7M71jI_8E' INSTANCE>;

        r22 = (java.util.function.Function) $r5;

        $r6 = staticinvoke <java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>(r22);

        $r7 = <com.android.internal.telephony._$$Lambda$ServiceStateTracker$9ISiknqxyckwhtXqJD9S3_2HWfk: com.android.internal.telephony.'-$$Lambda$ServiceStateTracker$9ISiknqxyckwhtXqJD9S3_2HWfk' INSTANCE>;

        r23 = (java.util.function.Function) $r7;

        $r8 = interfaceinvoke $r6.<java.util.Comparator: java.util.Comparator thenComparing(java.util.function.Function)>(r23);

        $r9 = interfaceinvoke $r8.<java.util.Comparator: java.util.Comparator reversed()>();

        $r10 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream sorted(java.util.Comparator)>($r9);

        $r11 = <com.android.internal.telephony._$$Lambda$ServiceStateTracker$8x9c9Qv6MTsHEXza7OQATbItoJg: com.android.internal.telephony.'-$$Lambda$ServiceStateTracker$8x9c9Qv6MTsHEXza7OQATbItoJg' INSTANCE>;

        r24 = (java.util.function.Function) $r11;

        $r12 = interfaceinvoke $r10.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r24);

        $r13 = interfaceinvoke $r12.<java.util.stream.Stream: java.util.stream.Stream distinct()>();

        $r14 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r15 = interfaceinvoke $r13.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r14);

        $r16 = (java.util.List) $r15;

        return $r16;
    }

    private android.util.Pair getRegistrationInfo(int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.NetworkRegistrationInfo r1;
        android.telephony.ServiceState $r2;
        int $i0, $i1, $i2, i3, i4;
        android.util.Pair $r3;
        java.lang.Integer $r4, $r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i3 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        r1 = virtualinvoke $r2.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, i3);

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        i4 = staticinvoke <android.telephony.ServiceState: int networkTypeToRilRadioTechnology(int)>($i0);

        $r3 = new android.util.Pair;

        $i1 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>();

        $i2 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int regCodeToServiceState(int)>($i1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        specialinvoke $r3.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $r3;

     label1:
        return null;
    }

    private static int getRilDataRadioTechnologyForWwan(android.telephony.ServiceState)
    {
        int $i0, i1;
        android.telephony.ServiceState r0;
        android.telephony.NetworkRegistrationInfo r1;

        r0 := @parameter0: android.telephony.ServiceState;

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        i1 = 0;

        if r1 == null goto label1;

        i1 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

     label1:
        $i0 = staticinvoke <android.telephony.ServiceState: int networkTypeToRilRadioTechnology(int)>(i1);

        return $i0;
    }

    private void getSubscriptionInfoAndStartPollingThreads()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(34);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void getCDMASubscription(android.os.Message)>($r2);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void pollStateInternal(boolean)>(0);

        return;
    }

    private com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1, $r2, $r5;
        boolean $z0;
        com.android.internal.telephony.uicc.UiccController $r3, $r6;
        int $i0, $i1;
        com.android.internal.telephony.uicc.UiccCardApplication $r4, $r7;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i1 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i1, 1);

        return $r7;

     label1:
        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i0, 2);

        return $r4;
    }

    private void handleCdmaSubscriptionSource(int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r4, $r8;
        boolean $z0, $z1, z3;
        android.os.Message $r9;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subscription Source : ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r4);

        if i0 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim> = z3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isFromRuim: ");

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r8);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void saveCdmaSubscriptionSource(int)>(i0);

        $z1 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z1 != 0 goto label3;

        $r9 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(35);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean sendMessage(android.os.Message)>($r9);

     label3:
        return;
    }

    private boolean iccCardExists()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.uicc.UiccCardApplication r1;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState $r2, $r3;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        z0 = 0;

        r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        if r1 == null goto label2;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState getState()>();

        $r3 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState APPSTATE_UNKNOWN>;

        if $r2 == $r3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isGprsConsistent(int, int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label2;

        if i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private boolean isHomeSid(int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, $i1, $i2, i3;
        int[] r1, $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeSystemId>;

        if $r2 == null goto label3;

        i3 = 0;

     label1:
        r1 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeSystemId>;

        $i1 = lengthof r1;

        if i3 >= $i1 goto label3;

        $i2 = r1[i3];

        if i0 != $i2 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isInHomeSidNid(int, int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean $z0;
        int[] $r1, $r2, r3, r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isSidsAllZeros()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeSystemId>;

        $i3 = lengthof $r1;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeNetworkId>;

        $i2 = lengthof $r2;

        if $i3 == $i2 goto label2;

        return 1;

     label2:
        if i0 != 0 goto label3;

        return 1;

     label3:
        i9 = 0;

     label4:
        r3 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeSystemId>;

        $i4 = lengthof r3;

        if i9 >= $i4 goto label7;

        $i5 = r3[i9];

        if $i5 != i0 goto label6;

        r4 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeNetworkId>;

        $i6 = r4[i9];

        if $i6 == 0 goto label5;

        $i7 = r4[i9];

        if $i7 == 65535 goto label5;

        if i1 == 0 goto label5;

        if i1 == 65535 goto label5;

        $i8 = r4[i9];

        if $i8 != i1 goto label6;

     label5:
        return 1;

     label6:
        i9 = i9 + 1;

        goto label4;

     label7:
        return 0;
    }

    private boolean isInNetwork(android.os.BaseBundle, java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, r2;
        java.util.List $r3;
        boolean $z0;
        android.os.BaseBundle r4;
        java.lang.String[] r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: android.os.BaseBundle;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r5 = virtualinvoke r4.<android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>(r2);

        if r5 == null goto label1;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isInvalidOperatorNumeric(java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1;
        int $i0;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 < 5 goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("000");

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    private boolean isNrPhysicalChannelConfig(android.telephony.PhysicalChannelConfig)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.PhysicalChannelConfig r1;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.telephony.PhysicalChannelConfig;

        $i0 = virtualinvoke r1.<android.telephony.PhysicalChannelConfig: int getRat()>();

        if $i0 != 20 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isOperatorConsideredNonRoaming(android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, r5;
        java.lang.String[] r2;
        int i0, i1;
        android.os.PersistableBundle $r3;
        boolean $z0, $z1, $z2;
        android.telephony.ServiceState r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: android.telephony.ServiceState;

        r1 = virtualinvoke r4.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $r3 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        r2 = virtualinvoke $r3.<android.os.PersistableBundle: java.lang.String[] getStringArray(java.lang.String)>("non_roaming_operator_string_array");

        $z0 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r2);

        if $z0 != 0 goto label5;

        if r1 != null goto label1;

        goto label5;

     label1:
        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r5 = r2[i1];

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r5);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;

     label5:
        return 0;
    }

    private boolean isOperatorConsideredRoaming(android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, r5;
        java.lang.String[] r2;
        int i0, i1;
        android.os.PersistableBundle $r3;
        boolean $z0, $z1, $z2;
        android.telephony.ServiceState r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: android.telephony.ServiceState;

        r1 = virtualinvoke r4.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $r3 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        r2 = virtualinvoke $r3.<android.os.PersistableBundle: java.lang.String[] getStringArray(java.lang.String)>("roaming_operator_string_array");

        $z0 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r2);

        if $z0 != 0 goto label5;

        if r1 != null goto label1;

        goto label5;

     label1:
        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r5 = r2[i1];

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r5);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;

     label5:
        return 0;
    }

    private boolean isRoamIndForHomeSystem(int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1, $i2, i3;
        android.os.PersistableBundle $r2;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r5, $r7, $r11;
        int[] r12;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        $r2 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        r12 = virtualinvoke $r2.<android.os.PersistableBundle: int[] getIntArray(java.lang.String)>("cdma_enhanced_roaming_indicator_for_home_network_int_array");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isRoamIndForHomeSystem: homeRoamIndicators=");

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r12);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r7);

        if r12 == null goto label4;

        i1 = lengthof r12;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $i2 = r12[i3];

        if $i2 != i0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isRoamIndForHomeSystem: No match found against list for roamInd=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r11);

        return 0;

     label4:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("isRoamIndForHomeSystem: No list found");

        return 0;
    }

    private boolean isRoamingBetweenOperators(boolean, android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState r1;
        boolean $z0, z1, z2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        z1 := @parameter0: boolean;

        r1 := @parameter1: android.telephony.ServiceState;

        if z1 == 0 goto label1;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isSameOperatorNameFromSimAndSS(android.telephony.ServiceState)>(r1);

        if $z0 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private boolean isSameNamedOperators(android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState r1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.telephony.ServiceState;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean currentMccEqualsSimMcc(android.telephony.ServiceState)>(r1);

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isSameOperatorNameFromSimAndSS(android.telephony.ServiceState)>(r1);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private boolean isSameOperatorNameFromSimAndSS(android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, r2, r8;
        com.android.internal.telephony.GsmCdmaPhone $r3;
        android.content.Context $r4;
        java.lang.Object $r5;
        android.telephony.TelephonyManager $r6;
        int $i0;
        boolean $z1, $z2, z3, z4, $z5, z6, z7;
        android.telephony.ServiceState r7;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r7 := @parameter0: android.telephony.ServiceState;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r6 = (android.telephony.TelephonyManager) $r5;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getPhoneId()>();

        r1 = virtualinvoke $r6.<android.telephony.TelephonyManager: java.lang.String getSimOperatorNameForPhone(int)>($i0);

        r2 = virtualinvoke r7.<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>();

        r8 = virtualinvoke r7.<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>();

        z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if z3 != 0 goto label1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z2 == 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z5 != 0 goto label3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r8);

        if $z1 == 0 goto label3;

        z6 = 1;

        goto label4;

     label3:
        z6 = 0;

     label4:
        z7 = 1;

        if z4 != 0 goto label6;

        if z6 == 0 goto label5;

        z7 = 1;

        goto label6;

     label5:
        z7 = 0;

     label6:
        return z7;
    }

    private boolean isSimAbsent()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;
        int $i0;
        com.android.internal.telephony.uicc.IccCardStatus$CardState $r2, $r3;
        com.android.internal.telephony.uicc.UiccController r4;
        boolean z0;
        com.android.internal.telephony.uicc.UiccCard r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        if r4 != null goto label1;

        z0 = 1;

        goto label4;

     label1:
        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        r5 = virtualinvoke r4.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard(int)>($i0);

        if r5 != null goto label2;

        z0 = 1;

        goto label4;

     label2:
        $r2 = virtualinvoke r5.<com.android.internal.telephony.uicc.UiccCard: com.android.internal.telephony.uicc.IccCardStatus$CardState getCardState()>();

        $r3 = <com.android.internal.telephony.uicc.IccCardStatus$CardState: com.android.internal.telephony.uicc.IccCardStatus$CardState CARDSTATE_ABSENT>;

        if $r2 != $r3 goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;
    }

    private static boolean isValidLteBandwidthKhz(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1400 goto label1;

        if i0 == 3000 goto label1;

        if i0 == 5000 goto label1;

        if i0 == 10000 goto label1;

        if i0 == 15000 goto label1;

        if i0 == 20000 goto label1;

        return 0;

     label1:
        return 1;
    }

    static boolean lambda$getPrioritizedCellIdentities$0(android.telephony.NetworkRegistrationInfo)
    {
        android.telephony.NetworkRegistrationInfo r0;
        android.telephony.CellIdentity $r1;
        boolean z0;

        r0 := @parameter0: android.telephony.NetworkRegistrationInfo;

        $r1 = virtualinvoke r0.<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()>();

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean lambda$getPrioritizedCellIdentities$1(android.telephony.NetworkRegistrationInfo)
    {
        android.telephony.NetworkRegistrationInfo r0;
        int i0;
        boolean z0;

        r0 := @parameter0: android.telephony.NetworkRegistrationInfo;

        i0 = virtualinvoke r0.<android.telephony.NetworkRegistrationInfo: int getTransportType()>();

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static java.lang.Integer lambda$getPrioritizedCellIdentities$2(android.telephony.NetworkRegistrationInfo)
    {
        android.telephony.NetworkRegistrationInfo r0;
        int $i0, $i1;
        java.lang.Integer $r1;

        r0 := @parameter0: android.telephony.NetworkRegistrationInfo;

        $i0 = virtualinvoke r0.<android.telephony.NetworkRegistrationInfo: int getDomain()>();

        $i1 = $i0 & 1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r1;
    }

    static android.telephony.CellIdentity lambda$getPrioritizedCellIdentities$3(android.telephony.NetworkRegistrationInfo)
    {
        android.telephony.NetworkRegistrationInfo r0;
        android.telephony.CellIdentity $r1;

        r0 := @parameter0: android.telephony.NetworkRegistrationInfo;

        $r1 = virtualinvoke r0.<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()>();

        return $r1;
    }

    private void logAttachChange()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState $r1;
        com.android.internal.telephony.LocalLog $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mAttachLog>;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r3 = virtualinvoke $r1.<android.telephony.ServiceState: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r3);

        return;
    }

    private void logPhoneTypeChange()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;
        com.android.internal.telephony.LocalLog $r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mPhoneTypeLog>;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r3);

        return;
    }

    private void logRatChange()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState $r1;
        com.android.internal.telephony.LocalLog $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mRatLog>;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r3 = virtualinvoke $r1.<android.telephony.ServiceState: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r3);

        return;
    }

    private void logRoamingChange()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState $r1;
        com.android.internal.telephony.LocalLog $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mRoamingLog>;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r3 = virtualinvoke $r1.<android.telephony.ServiceState: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r3);

        return;
    }

    private boolean networkCountryIsoChanged(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("countryIsoChanged: no new country ISO code");

        return 0;

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("countryIsoChanged: no previous country ISO code");

        return 1;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        $z3 = $z2 ^ 1;

        return $z3;
    }

    private void notifyCdmaSubscriptionInfoReady()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.RegistrantList $r1, $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        if $r1 == null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("CDMA_SUBSCRIPTION: call notifyRegistrants()");

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label1:
        return;
    }

    private void notifySpnDisplayUpdate(com.android.internal.telephony.cdnr.CarrierDisplayNameData)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r2, $r11, $r12, $r13, $r14, $r15, $r16, $r21, $r23, $r24, $r29, $r32, $r33, $r34, $r41, $r42, $r43, $r44, $r45;
        com.android.internal.telephony.GsmCdmaPhone $r3, $r35, $r36, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.Object[] $r17;
        android.telephony.ServiceState $r18;
        java.lang.Integer $r19, $r25;
        java.lang.Boolean $r20, $r22;
        com.android.internal.telephony.LocalLog $r26;
        java.lang.StringBuilder $r27;
        android.content.Intent $r30;
        android.content.Context $r37;
        android.os.UserHandle $r38;
        com.android.internal.telephony.SubscriptionController $r39;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: com.android.internal.telephony.cdnr.CarrierDisplayNameData;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        i0 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $i1 = r0.<com.android.internal.telephony.ServiceStateTracker: int mSubId>;

        if $i1 != i0 goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: boolean shouldShowPlmn()>();

        $z1 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mCurShowPlmn>;

        if $z0 != $z1 goto label1;

        $z2 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: boolean shouldShowSpn()>();

        $z3 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mCurShowSpn>;

        if $z2 != $z3 goto label1;

        $r11 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getSpn()>();

        $r12 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurSpn>;

        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r11, $r12);

        if $z4 == 0 goto label1;

        $r13 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getDataSpn()>();

        $r14 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurDataSpn>;

        $z5 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r13, $r14);

        if $z5 == 0 goto label1;

        $r15 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getPlmn()>();

        $r16 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurPlmn>;

        $z6 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r15, $r16);

        if $z6 != 0 goto label2;

     label1:
        $r17 = newarray (java.lang.Object)[7];

        $r18 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i2 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getCarrierNameDisplayBitmask(android.telephony.ServiceState)>($r18);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r17[0] = $r19;

        $z7 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: boolean shouldShowPlmn()>();

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);

        $r17[1] = $r20;

        $r21 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getPlmn()>();

        $r17[2] = $r21;

        $z8 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: boolean shouldShowSpn()>();

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        $r17[3] = $r22;

        $r23 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getSpn()>();

        $r17[4] = $r23;

        $r24 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getDataSpn()>();

        $r17[5] = $r24;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r17[6] = $r25;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("updateSpnDisplay: changed sending intent, rule=%d, showPlmn=\'%b\', plmn=\'%s\', showSpn=\'%b\', spn=\'%s\', dataSpn=\'%s\', subId=\'%d\'", $r17);

        $r26 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mCdnrLogs>;

        virtualinvoke $r26.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>(r2);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSpnDisplay: ");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r29);

        $r30 = new android.content.Intent;

        specialinvoke $r30.<android.content.Intent: void <init>(java.lang.String)>("android.telephony.action.SERVICE_PROVIDERS_UPDATED");

        $z9 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: boolean shouldShowSpn()>();

        virtualinvoke $r30.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.telephony.extra.SHOW_SPN", $z9);

        $r32 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getSpn()>();

        virtualinvoke $r30.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.telephony.extra.SPN", $r32);

        $r33 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getDataSpn()>();

        virtualinvoke $r30.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.telephony.extra.DATA_SPN", $r33);

        $z10 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: boolean shouldShowPlmn()>();

        virtualinvoke $r30.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.telephony.extra.SHOW_PLMN", $z10);

        $r34 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getPlmn()>();

        virtualinvoke $r30.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.telephony.extra.PLMN", $r34);

        $r35 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i3 = virtualinvoke $r35.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int)>($r30, $i3);

        $r36 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r37 = virtualinvoke $r36.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r38 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r37.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r30, $r38);

        $r39 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.SubscriptionController mSubscriptionController>;

        $r40 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i4 = virtualinvoke $r40.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $z11 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: boolean shouldShowPlmn()>();

        $r41 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getPlmn()>();

        $z12 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: boolean shouldShowSpn()>();

        $r42 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getSpn()>();

        $z13 = virtualinvoke $r39.<com.android.internal.telephony.SubscriptionController: boolean setPlmnSpn(int,boolean,java.lang.String,boolean,java.lang.String)>($i4, $z11, $r41, $z12, $r42);

        if $z13 != 0 goto label2;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mSpnUpdatePending> = 1;

     label2:
        r0.<com.android.internal.telephony.ServiceStateTracker: int mSubId> = i0;

        $z14 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: boolean shouldShowSpn()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mCurShowSpn> = $z14;

        $z15 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: boolean shouldShowPlmn()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mCurShowPlmn> = $z15;

        $r43 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getSpn()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurSpn> = $r43;

        $r44 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getDataSpn()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurDataSpn> = $r44;

        $r45 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getPlmn()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurPlmn> = $r45;

        return;
    }

    private void onCarrierConfigChanged()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.PersistableBundle r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, $r9;
        com.android.internal.telephony.cdma.EriManager $r7;
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver $r8, $r10;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CarrierConfigChange ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r6);

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.EriManager mEriManager>;

        virtualinvoke $r7.<com.android.internal.telephony.cdma.EriManager: void loadEriFile()>();

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        $r9 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getOperatorNameFromEri()>();

        virtualinvoke $r8.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void updateEfForEri(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateLteEarfcnLists(android.os.PersistableBundle)>(r1);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateReportingCriteria(android.os.PersistableBundle)>(r1);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateOperatorNamePattern(android.os.PersistableBundle)>(r1);

        $r10 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        virtualinvoke $r10.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void updateEfFromCarrierConfig(android.os.PersistableBundle)>(r1);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void pollStateInternal(boolean)>(0);

        return;
    }

    private void onRestrictedStateChanged(android.os.AsyncResult)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.android.internal.telephony.RestrictedState $r3, $r6, $r17, $r18, $r19, $r20, $r21, $r31, $r32, $r35;
        java.lang.StringBuilder $r4, $r28, $r33;
        java.lang.String $r8, $r30, $r36;
        java.lang.Throwable $r9;
        java.lang.Object $r12, $r13;
        java.lang.Integer $r14;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, z20, z21, z22, $z23, $z24;
        com.android.internal.telephony.RegistrantList $r22, $r23;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState $r24, $r25;
        android.os.AsyncResult r26;
        com.android.internal.telephony.uicc.UiccCardApplication r27;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r26 := @parameter0: android.os.AsyncResult;

        $r3 = new com.android.internal.telephony.RestrictedState;

        specialinvoke $r3.<com.android.internal.telephony.RestrictedState: void <init>()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRestrictedStateChanged: E rs ");

        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r8);

        $r9 = r26.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r9 != null goto label23;

        $r12 = r26.<android.os.AsyncResult: java.lang.Object result>;

        if $r12 == null goto label23;

        $r13 = r26.<android.os.AsyncResult: java.lang.Object result>;

        $r14 = (java.lang.Integer) $r13;

        i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $i1 = i0 & 1;

        if $i1 != 0 goto label02;

        $i4 = i0 & 4;

        if $i4 == 0 goto label01;

        goto label02;

     label01:
        z20 = 0;

        goto label03;

     label02:
        z20 = 1;

     label03:
        virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: void setCsEmergencyRestricted(boolean)>(z20);

        r27 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        if r27 == null goto label08;

        $r24 = virtualinvoke r27.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState getState()>();

        $r25 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState APPSTATE_READY>;

        if $r24 != $r25 goto label08;

        $i2 = i0 & 2;

        if $i2 != 0 goto label05;

        $i3 = i0 & 4;

        if $i3 == 0 goto label04;

        goto label05;

     label04:
        z21 = 0;

        goto label06;

     label05:
        z21 = 1;

     label06:
        virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: void setCsNormalRestricted(boolean)>(z21);

        z22 = 0;

        $i5 = i0 & 16;

        if $i5 == 0 goto label07;

        z22 = 1;

     label07:
        virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: void setPsRestricted(boolean)>(z22);

     label08:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRestrictedStateChanged: new rs ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r30);

        $r31 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z23 = virtualinvoke $r31.<com.android.internal.telephony.RestrictedState: boolean isPsRestricted()>();

        if $z23 != 0 goto label09;

        $z19 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isPsRestricted()>();

        if $z19 == 0 goto label09;

        $r23 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mPsRestrictEnabledRegistrants>;

        virtualinvoke $r23.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1001);

        goto label10;

     label09:
        $r17 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z1 = virtualinvoke $r17.<com.android.internal.telephony.RestrictedState: boolean isPsRestricted()>();

        if $z1 == 0 goto label10;

        $z18 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isPsRestricted()>();

        if $z18 != 0 goto label10;

        $r22 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mPsRestrictDisabledRegistrants>;

        virtualinvoke $r22.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1002);

     label10:
        $r32 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z24 = virtualinvoke $r32.<com.android.internal.telephony.RestrictedState: boolean isCsRestricted()>();

        if $z24 == 0 goto label13;

        $z15 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isAnyCsRestricted()>();

        if $z15 != 0 goto label11;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1004);

        goto label22;

     label11:
        $z16 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isCsNormalRestricted()>();

        if $z16 != 0 goto label12;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1006);

        goto label22;

     label12:
        $z17 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isCsEmergencyRestricted()>();

        if $z17 != 0 goto label22;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1005);

        goto label22;

     label13:
        $r18 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z2 = virtualinvoke $r18.<com.android.internal.telephony.RestrictedState: boolean isCsEmergencyRestricted()>();

        if $z2 == 0 goto label16;

        $r21 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z11 = virtualinvoke $r21.<com.android.internal.telephony.RestrictedState: boolean isCsNormalRestricted()>();

        if $z11 != 0 goto label16;

        $z12 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isAnyCsRestricted()>();

        if $z12 != 0 goto label14;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1004);

        goto label22;

     label14:
        $z13 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isCsRestricted()>();

        if $z13 == 0 goto label15;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1003);

        goto label22;

     label15:
        $z14 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isCsNormalRestricted()>();

        if $z14 == 0 goto label22;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1005);

        goto label22;

     label16:
        $r19 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z3 = virtualinvoke $r19.<com.android.internal.telephony.RestrictedState: boolean isCsEmergencyRestricted()>();

        if $z3 != 0 goto label19;

        $r20 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z7 = virtualinvoke $r20.<com.android.internal.telephony.RestrictedState: boolean isCsNormalRestricted()>();

        if $z7 == 0 goto label19;

        $z8 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isAnyCsRestricted()>();

        if $z8 != 0 goto label17;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1004);

        goto label22;

     label17:
        $z9 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isCsRestricted()>();

        if $z9 == 0 goto label18;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1003);

        goto label22;

     label18:
        $z10 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isCsEmergencyRestricted()>();

        if $z10 == 0 goto label22;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1006);

        goto label22;

     label19:
        $z4 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isCsRestricted()>();

        if $z4 == 0 goto label20;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1003);

        goto label22;

     label20:
        $z5 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isCsEmergencyRestricted()>();

        if $z5 == 0 goto label21;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1006);

        goto label22;

     label21:
        $z6 = virtualinvoke $r3.<com.android.internal.telephony.RestrictedState: boolean isCsNormalRestricted()>();

        if $z6 == 0 goto label22;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(1005);

     label22:
        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState> = $r3;

     label23:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRestrictedStateChanged: X rs ");

        $r35 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r36);

        return;
    }

    private void pollStateDone()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z16, $z17, $z18, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, z43, z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z55, z56, z57, z58, z59, z60, z61, z62, $z63, z64, $z65, z66, $z67, z68, z69, z70, z71, $z72, z73, z74, $z75, z76, $z77, $z78, $z79, z80, $z81, z82, z83, z84, $z85, $z87;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, i51, i52, i53, i54, i55, i56, $i57, $i58, $i59, $i60, $i61, i62, i63, i65, $i66, i67, i68, i70, i71, $i72, i73;
        java.util.List r4;
        android.telephony.TelephonyManager r6;
        com.android.internal.telephony.GsmCdmaPhone $r7, $r33, $r78, $r88, $r91, $r94, $r96, $r100, $r103, $r109, $r128, $r132, $r133, $r138, $r141, $r158, $r163, $r166, $r167, $r211, $r213, $r256, $r259, $r266, $r272, $r273, $r279, r281, $r284;
        android.telephony.ServiceState $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r80, $r82, $r84, $r86, $r95, $r98, $r101, $r102, $r129, $r131, $r135, $r143, $r146, $r147, $r148, $r157, $r164, $r165, $r170, $r172, $r176, $r180, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r196, $r197, $r198, $r199, $r204, $r206, $r208, $r209, $r210, $r214, $r216, $r219, $r220, $r222, $r223, $r224, $r238, $r240, $r247, $r248, $r251, $r252, $r253, $r254, $r258, $r260, r261, $r262, $r274, $r277, $r280, $r283;
        java.lang.Object $r25, $r90, $r116, $r118, $r121, $r123, $r126, $r155;
        java.lang.StringBuilder $r34, $r149, $r174, $r217, $r275;
        java.lang.String $r77, $r92, $r130, $r153, $r156, $r177, $r181, $r185, $r205, $r207, $r221, $r239, $r241, r263, r264, r265, r267, r268, $r278;
        java.lang.Object[] $r79, $r168;
        java.lang.Integer $r81, $r83, $r85, $r87, $r169, $r171, $r173;
        android.content.Context $r89, $r104, $r139;
        com.android.internal.telephony.metrics.TelephonyMetrics $r93;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r97;
        com.android.internal.telephony.dataconnection.TransportManager $r99, $r226, $r229, $r233, $r236, $r242;
        android.content.ContentResolver $r105, $r140;
        android.os.Message $r106;
        long $l17;
        com.android.internal.telephony.RegistrantList $r107, $r108, $r111, $r112, $r113, $r114, $r119, $r124, $r127, $r159, $r161;
        android.telephony.CellIdentity $r110, r249, r250, r270;
        android.util.SparseArray $r115, $r117, $r120, $r122, $r125;
        com.android.internal.telephony.LocaleTracker $r134, $r154;
        android.net.Uri $r142;
        android.content.ContentValues $r144;
        com.android.internal.telephony.NitzStateMachine $r160, $r162;
        com.android.internal.telephony.RatRatcheter $r195;
        android.telephony.DataSpecificRegistrationInfo $r200, $r201, $r202, $r203;
        com.android.internal.telephony.TelephonyTester $r212, $r215;
        android.util.SparseBooleanArray $r225, $r228, $r232, $r235;
        int[] $r227, $r230, $r234, $r237, r243, r282;
        android.telephony.NetworkRegistrationInfo r244, r245;
        char c64;
        java.util.Iterator r269;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z3 = virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z3 != 0 goto label001;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateRoamingState()>();

     label001:
        $z4 = <com.android.internal.telephony.util.TelephonyUtils: boolean IS_DEBUGGABLE>;

        if $z4 == 0 goto label002;

        $z41 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("telephony.test.forceRoaming", 0);

        if $z41 == 0 goto label002;

        $r216 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r216.<android.telephony.ServiceState: void setRoaming(boolean)>(1);

     label002:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void useDataRegStateForDataOnlyDevices()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void processIwlanRegistrationInfo()>();

        $z42 = <com.android.internal.telephony.util.TelephonyUtils: boolean IS_DEBUGGABLE>;

        if $z42 == 0 goto label003;

        $r211 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r212 = $r211.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyTester mTelephonyTester>;

        if $r212 == null goto label003;

        $r213 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r215 = $r213.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.TelephonyTester mTelephonyTester>;

        $r214 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r215.<com.android.internal.telephony.TelephonyTester: void overrideServiceState(android.telephony.ServiceState)>($r214);

     label003:
        $r217 = new java.lang.StringBuilder;

        specialinvoke $r217.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Poll ServiceState done:  oldSS=[");

        $r219 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r219);

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] newSS=[");

        $r220 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r220);

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] oldMaxDataCalls=");

        $i40 = r0.<com.android.internal.telephony.ServiceStateTracker: int mMaxDataCalls>;

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i40);

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewMaxDataCalls=");

        $i41 = r0.<com.android.internal.telephony.ServiceStateTracker: int mNewMaxDataCalls>;

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oldReasonDataDenied=");

        $i42 = r0.<com.android.internal.telephony.ServiceStateTracker: int mReasonDataDenied>;

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewReasonDataDenied=");

        $i43 = r0.<com.android.internal.telephony.ServiceStateTracker: int mNewReasonDataDenied>;

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

        $r221 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r221);

        $r222 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i44 = virtualinvoke $r222.<android.telephony.ServiceState: int getState()>();

        if $i44 == 0 goto label004;

        $r210 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i39 = virtualinvoke $r210.<android.telephony.ServiceState: int getState()>();

        if $i39 != 0 goto label004;

        z43 = 1;

        goto label005;

     label004:
        z43 = 0;

     label005:
        $r223 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i45 = virtualinvoke $r223.<android.telephony.ServiceState: int getState()>();

        if $i45 != 0 goto label006;

        $r209 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i38 = virtualinvoke $r209.<android.telephony.ServiceState: int getState()>();

        if $i38 == 0 goto label006;

        z44 = 1;

        goto label007;

     label006:
        z44 = 0;

     label007:
        $r224 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i46 = virtualinvoke $r224.<android.telephony.ServiceState: int getState()>();

        if $i46 == 3 goto label008;

        $r208 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i37 = virtualinvoke $r208.<android.telephony.ServiceState: int getState()>();

        if $i37 != 3 goto label008;

        z45 = 1;

        goto label009;

     label008:
        z45 = 0;

     label009:
        $r225 = new android.util.SparseBooleanArray;

        $r226 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        $r227 = virtualinvoke $r226.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        $i47 = lengthof $r227;

        specialinvoke $r225.<android.util.SparseBooleanArray: void <init>(int)>($i47);

        $r228 = new android.util.SparseBooleanArray;

        $r229 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        $r230 = virtualinvoke $r229.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        $i48 = lengthof $r230;

        specialinvoke $r228.<android.util.SparseBooleanArray: void <init>(int)>($i48);

        $r232 = new android.util.SparseBooleanArray;

        $r233 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        $r234 = virtualinvoke $r233.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        $i49 = lengthof $r234;

        specialinvoke $r232.<android.util.SparseBooleanArray: void <init>(int)>($i49);

        $r235 = new android.util.SparseBooleanArray;

        $r236 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        $r237 = virtualinvoke $r236.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        $i50 = lengthof $r237;

        specialinvoke $r235.<android.util.SparseBooleanArray: void <init>(int)>($i50);

        z46 = 0;

        z47 = 0;

        $r238 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r239 = virtualinvoke $r238.<android.telephony.ServiceState: java.lang.String getOperatorAlphaLongRaw()>();

        $r240 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r241 = virtualinvoke $r240.<android.telephony.ServiceState: java.lang.String getOperatorAlphaLongRaw()>();

        if $r239 != $r241 goto label011;

        $r204 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r205 = virtualinvoke $r204.<android.telephony.ServiceState: java.lang.String getOperatorAlphaShortRaw()>();

        $r206 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r207 = virtualinvoke $r206.<android.telephony.ServiceState: java.lang.String getOperatorAlphaShortRaw()>();

        if $r205 == $r207 goto label010;

        goto label011;

     label010:
        z48 = 0;

        goto label012;

     label011:
        z48 = 1;

     label012:
        $r242 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        r243 = virtualinvoke $r242.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        i51 = lengthof r243;

        i52 = 0;

        z0 = z45;

     label013:
        if i52 >= i51 goto label039;

        i0 = r243[i52];

        $r198 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        r244 = virtualinvoke $r198.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, i0);

        $r199 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        r245 = virtualinvoke $r199.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, i0);

        if r244 == null goto label014;

        $z40 = virtualinvoke r244.<android.telephony.NetworkRegistrationInfo: boolean isInService()>();

        if $z40 == 0 goto label014;

        if z0 == 0 goto label015;

     label014:
        if r245 == null goto label015;

        $z39 = virtualinvoke r245.<android.telephony.NetworkRegistrationInfo: boolean isInService()>();

        if $z39 == 0 goto label015;

        z49 = 1;

        goto label016;

     label015:
        z49 = 0;

     label016:
        virtualinvoke $r225.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z49);

        if r244 == null goto label018;

        $z37 = virtualinvoke r244.<android.telephony.NetworkRegistrationInfo: boolean isInService()>();

        if $z37 == 0 goto label018;

        if r245 == null goto label017;

        $z38 = virtualinvoke r245.<android.telephony.NetworkRegistrationInfo: boolean isInService()>();

        if $z38 != 0 goto label018;

     label017:
        z50 = 1;

        goto label019;

     label018:
        z50 = 0;

     label019:
        virtualinvoke $r228.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z50);

        if r244 == null goto label020;

        i53 = virtualinvoke r244.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        goto label021;

     label020:
        i53 = 0;

     label021:
        if r245 == null goto label022;

        i54 = virtualinvoke r245.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        goto label023;

     label022:
        i54 = 0;

     label023:
        if r244 == null goto label024;

        $r202 = virtualinvoke r244.<android.telephony.NetworkRegistrationInfo: android.telephony.DataSpecificRegistrationInfo getDataSpecificInfo()>();

        if $r202 == null goto label024;

        $r203 = virtualinvoke r244.<android.telephony.NetworkRegistrationInfo: android.telephony.DataSpecificRegistrationInfo getDataSpecificInfo()>();

        z51 = virtualinvoke $r203.<android.telephony.DataSpecificRegistrationInfo: boolean isUsingCarrierAggregation()>();

        goto label025;

     label024:
        z51 = 0;

     label025:
        if r245 == null goto label026;

        $r200 = virtualinvoke r245.<android.telephony.NetworkRegistrationInfo: android.telephony.DataSpecificRegistrationInfo getDataSpecificInfo()>();

        if $r200 == null goto label026;

        $r201 = virtualinvoke r245.<android.telephony.NetworkRegistrationInfo: android.telephony.DataSpecificRegistrationInfo getDataSpecificInfo()>();

        z52 = virtualinvoke $r201.<android.telephony.DataSpecificRegistrationInfo: boolean isUsingCarrierAggregation()>();

        goto label027;

     label026:
        z52 = 0;

     label027:
        if i53 != i54 goto label029;

        if z51 != z52 goto label029;

        if z48 == 0 goto label028;

        goto label029;

     label028:
        z53 = 0;

        goto label030;

     label029:
        z53 = 1;

     label030:
        virtualinvoke $r232.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z53);

        if i53 == i54 goto label031;

        z47 = 1;

     label031:
        if r244 == null goto label032;

        i55 = virtualinvoke r244.<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>();

        goto label033;

     label032:
        i55 = 4;

     label033:
        if r245 == null goto label034;

        i56 = virtualinvoke r245.<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>();

        goto label035;

     label034:
        i56 = 4;

     label035:
        if i55 == i56 goto label036;

        z54 = 1;

        goto label037;

     label036:
        z54 = 0;

     label037:
        virtualinvoke $r235.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z54);

        if i55 == i56 goto label038;

        z46 = 1;

        goto label038;

     label038:
        i52 = i52 + 1;

        goto label013;

     label039:
        if z47 != 0 goto label040;

        $r196 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i35 = virtualinvoke $r196.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        $r197 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i36 = virtualinvoke $r197.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        if $i35 == $i36 goto label040;

        z55 = 1;

        goto label041;

     label040:
        z55 = 0;

     label041:
        $r247 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i57 = virtualinvoke $r247.<android.telephony.ServiceState: int getState()>();

        $r248 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i58 = virtualinvoke $r248.<android.telephony.ServiceState: int getState()>();

        if $i57 == $i58 goto label042;

        z56 = 1;

        goto label043;

     label042:
        z56 = 0;

     label043:
        $r20 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i1 = virtualinvoke $r20.<android.telephony.ServiceState: int getNrFrequencyRange()>();

        $r21 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i2 = virtualinvoke $r21.<android.telephony.ServiceState: int getNrFrequencyRange()>();

        if $i1 == $i2 goto label044;

        z57 = 1;

        goto label045;

     label044:
        z57 = 0;

     label045:
        $r22 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i3 = virtualinvoke $r22.<android.telephony.ServiceState: int getNrState()>();

        $r23 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i4 = virtualinvoke $r23.<android.telephony.ServiceState: int getNrState()>();

        if $i3 == $i4 goto label046;

        z58 = 1;

        goto label047;

     label046:
        z58 = 0;

     label047:
        $r24 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        r4 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: java.util.List getPrioritizedCellIdentities(android.telephony.ServiceState)>($r24);

        $z5 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z5 == 0 goto label048;

        r249 = null;

        goto label049;

     label048:
        $r25 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        r249 = (android.telephony.CellIdentity) $r25;

     label049:
        r250 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity mCellIdentity>;

        if r250 != null goto label050;

        if r249 == null goto label052;

        goto label051;

     label050:
        $z6 = virtualinvoke r250.<android.telephony.CellIdentity: boolean isSameCell(android.telephony.CellIdentity)>(r249);

        if $z6 != 0 goto label052;

     label051:
        z59 = 1;

        goto label053;

     label052:
        z59 = 0;

     label053:
        $r251 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i59 = virtualinvoke $r251.<android.telephony.ServiceState: int getDataRegistrationState()>();

        if $i59 != 0 goto label054;

        z60 = 1;

        goto label055;

     label054:
        z60 = 0;

     label055:
        if z60 == 0 goto label056;

        $r195 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RatRatcheter mRatRatcheter>;

        $r194 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r193 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r195.<com.android.internal.telephony.RatRatcheter: void ratchet(android.telephony.ServiceState,android.telephony.ServiceState,boolean)>($r194, $r193, z59);

        goto label056;

     label056:
        $r26 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i5 = virtualinvoke $r26.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $r27 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i6 = virtualinvoke $r27.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        if $i5 == $i6 goto label057;

        z61 = 1;

        goto label058;

     label057:
        z61 = 0;

     label058:
        $r29 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r28 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z7 = virtualinvoke $r29.<android.telephony.ServiceState: boolean equals(java.lang.Object)>($r28);

        z1 = $z7 ^ 1;

        $r30 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z8 = virtualinvoke $r30.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z8 != 0 goto label059;

        $r192 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z36 = virtualinvoke $r192.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z36 == 0 goto label059;

        z62 = 1;

        goto label060;

     label059:
        z62 = 0;

     label060:
        $r252 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z63 = virtualinvoke $r252.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z63 == 0 goto label061;

        $r191 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z35 = virtualinvoke $r191.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z35 != 0 goto label061;

        z64 = 1;

        goto label062;

     label061:
        z64 = 0;

     label062:
        $r253 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z65 = virtualinvoke $r253.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z65 != 0 goto label063;

        $r190 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z34 = virtualinvoke $r190.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z34 == 0 goto label063;

        z66 = 1;

        goto label064;

     label063:
        z66 = 0;

     label064:
        $r254 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z67 = virtualinvoke $r254.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z67 == 0 goto label065;

        $r189 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z33 = virtualinvoke $r189.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z33 != 0 goto label065;

        z68 = 1;

        goto label066;

     label065:
        z68 = 0;

     label066:
        $i60 = r0.<com.android.internal.telephony.ServiceStateTracker: int mRejectCode>;

        $i61 = r0.<com.android.internal.telephony.ServiceStateTracker: int mNewRejectCode>;

        if $i60 == $i61 goto label067;

        z69 = 1;

        goto label068;

     label067:
        z69 = 0;

     label068:
        $r31 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i7 = virtualinvoke $r31.<android.telephony.ServiceState: int getCssIndicator()>();

        $r32 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i8 = virtualinvoke $r32.<android.telephony.ServiceState: int getCssIndicator()>();

        if $i7 == $i8 goto label069;

        z70 = 1;

        goto label070;

     label069:
        z70 = 0;

     label070:
        $r33 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z9 = virtualinvoke $r33.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z9 == 0 goto label080;

        $r186 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        i62 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: int getRilDataRadioTechnologyForWwan(android.telephony.ServiceState)>($r186);

        $r187 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        i63 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: int getRilDataRadioTechnologyForWwan(android.telephony.ServiceState)>($r187);

        $r188 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i34 = virtualinvoke $r188.<android.telephony.ServiceState: int getDataRegistrationState()>();

        if $i34 != 0 goto label073;

        $z31 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>(i62);

        if $z31 == 0 goto label071;

        if i63 == 13 goto label072;

     label071:
        if i62 != 13 goto label073;

        $z32 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>(i63);

        if $z32 == 0 goto label073;

     label072:
        z71 = 1;

        goto label074;

     label073:
        z71 = 0;

     label074:
        $z72 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>(i63);

        if $z72 != 0 goto label075;

        if i63 != 13 goto label076;

     label075:
        $z30 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>(i62);

        if $z30 != 0 goto label076;

        if i62 == 13 goto label076;

        z73 = 1;

        goto label077;

     label076:
        z73 = 0;

     label077:
        if i63 < 4 goto label078;

        if i63 > 8 goto label078;

        z74 = 1;

        goto label079;

     label078:
        z74 = 0;

     label079:
        goto label081;

     label080:
        z73 = 0;

        z74 = 0;

        z71 = 0;

     label081:
        z2 = z59;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pollStateDone: hasRegistered = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z43);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasDeregistered = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z44);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasDataAttached = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r225);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasDataDetached = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r228);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasDataRegStateChanged = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r235);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasRilVoiceRadioTechnologyChanged = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z61);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasRilDataRadioTechnologyChanged = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r232);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasDataTransportPreferenceChanged = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z55);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasChanged = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasVoiceRoamingOn = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z62);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasVoiceRoamingOff = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z64);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasDataRoamingOn =");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z66);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasDataRoamingOff = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z68);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasLocationChanged = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z59);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has4gHandoff = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z71);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasMultiApnSupport = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z73);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasLostMultiApnSupport = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z74);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasCssIndicatorChanged = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z70);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasNrFrequencyRangeChanged = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z57);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasNrStateChanged = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z58);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasAirplaneModeOnlChanged = ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r77 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r77);

        if z56 != 0 goto label083;

        if z46 == 0 goto label082;

        goto label083;

     label082:
        goto label086;

     label083:
        $r78 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z10 = virtualinvoke $r78.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z10 == 0 goto label084;

        c64 = 50114;

        goto label085;

     label084:
        c64 = 50116;

     label085:
        $r79 = newarray (java.lang.Object)[4];

        $r80 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i9 = virtualinvoke $r80.<android.telephony.ServiceState: int getState()>();

        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r79[0] = $r81;

        $r82 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i10 = virtualinvoke $r82.<android.telephony.ServiceState: int getDataRegistrationState()>();

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r79[1] = $r83;

        $r84 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i11 = virtualinvoke $r84.<android.telephony.ServiceState: int getState()>();

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r79[2] = $r85;

        $r86 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i12 = virtualinvoke $r86.<android.telephony.ServiceState: int getDataRegistrationState()>();

        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r79[3] = $r87;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(c64, $r79);

     label086:
        $r256 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z75 = virtualinvoke $r256.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z75 == 0 goto label089;

        if z61 == 0 goto label087;

        i65 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: int getCidFromCellIdentity(android.telephony.CellIdentity)>(r249);

        $r168 = newarray (java.lang.Object)[3];

        $r169 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i65);

        $r168[0] = $r169;

        $r170 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i29 = virtualinvoke $r170.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $r171 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i29);

        $r168[1] = $r171;

        $r172 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i30 = virtualinvoke $r172.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $r173 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i30);

        $r168[2] = $r173;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(50123, $r168);

        $r174 = new java.lang.StringBuilder;

        specialinvoke $r174.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RAT switched ");

        $r176 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i32 = virtualinvoke $r176.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $r177 = staticinvoke <android.telephony.ServiceState: java.lang.String rilRadioTechnologyToString(int)>($i32);

        virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r177);

        virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r180 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i33 = virtualinvoke $r180.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $r181 = staticinvoke <android.telephony.ServiceState: java.lang.String rilRadioTechnologyToString(int)>($i33);

        virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r181);

        virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at cell ");

        virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i65);

        $r185 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r185);

     label087:
        if z70 == 0 goto label088;

        $r167 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r167.<com.android.internal.telephony.GsmCdmaPhone: void notifyAllActiveDataConnections()>();

     label088:
        $i26 = r0.<com.android.internal.telephony.ServiceStateTracker: int mNewReasonDataDenied>;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mReasonDataDenied> = $i26;

        $i27 = r0.<com.android.internal.telephony.ServiceStateTracker: int mNewMaxDataCalls>;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mMaxDataCalls> = $i27;

        $i28 = r0.<com.android.internal.telephony.ServiceStateTracker: int mNewRejectCode>;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mRejectCode> = $i28;

     label089:
        $r258 = new android.telephony.ServiceState;

        $r259 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r260 = virtualinvoke $r259.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.ServiceState getServiceState()>();

        specialinvoke $r258.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>($r260);

        r261 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r262 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS> = $r262;

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS> = r261;

        virtualinvoke r261.<android.telephony.ServiceState: void setStateOutOfService()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity mCellIdentity> = r249;

        if z61 == 0 goto label090;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updatePhoneObject()>();

     label090:
        $r88 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r89 = virtualinvoke $r88.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r90 = virtualinvoke $r89.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r6 = (android.telephony.TelephonyManager) $r90;

        if z47 == 0 goto label091;

        $r163 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i21 = virtualinvoke $r163.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r164 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i22 = virtualinvoke $r164.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        virtualinvoke r6.<android.telephony.TelephonyManager: void setDataNetworkTypeForPhone(int,int)>($i21, $i22);

        $r165 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i23 = virtualinvoke $r165.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        $i24 = staticinvoke <android.telephony.ServiceState: int rilRadioTechnologyToNetworkType(int)>($i23);

        $r166 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i25 = virtualinvoke $r166.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        staticinvoke <com.android.internal.telephony.TelephonyStatsLog: void write(int,int,int)>(76, $i24, $i25);

        goto label091;

     label091:
        if z43 == 0 goto label092;

        $r161 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNetworkAttachedRegistrants>;

        virtualinvoke $r161.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        $r162 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzStateMachine mNitzState>;

        interfaceinvoke $r162.<com.android.internal.telephony.NitzStateMachine: void handleNetworkAvailable()>();

     label092:
        if z44 == 0 goto label093;

        $r159 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNetworkDetachedRegistrants>;

        virtualinvoke $r159.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        $r160 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzStateMachine mNitzState>;

        interfaceinvoke $r160.<com.android.internal.telephony.NitzStateMachine: void handleNetworkUnavailable()>();

     label093:
        if z69 == 0 goto label094;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setNotification(int)>(2001);

     label094:
        $r91 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r263 = virtualinvoke $r91.<com.android.internal.telephony.GsmCdmaPhone: java.lang.String getCdmaEriText()>();

        $r92 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mEriText>;

        z76 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r92, r263);

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mEriText> = r263;

        if z1 != 0 goto label095;

        $r158 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z28 = virtualinvoke $r158.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z28 != 0 goto label096;

        $z29 = z76 ^ 1;

        if $z29 == 0 goto label096;

     label095:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateSpnDisplay()>();

     label096:
        if z1 == 0 goto label109;

        $r128 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i18 = virtualinvoke $r128.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r129 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r130 = virtualinvoke $r129.<android.telephony.ServiceState: java.lang.String getOperatorAlpha()>();

        virtualinvoke r6.<android.telephony.TelephonyManager: void setNetworkOperatorNameForPhone(int,java.lang.String)>($i18, $r130);

        $r131 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        r264 = virtualinvoke $r131.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        r265 = r264;

        $r132 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z21 = virtualinvoke $r132.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z21 != 0 goto label097;

        r265 = r264;

        $z27 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isInvalidOperatorNumeric(java.lang.String)>(r264);

        if $z27 == 0 goto label097;

        $r157 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i20 = virtualinvoke $r157.<android.telephony.ServiceState: int getCdmaSystemId()>();

        r265 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String fixUnknownMcc(java.lang.String,int)>(r264, $i20);

     label097:
        $r266 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i66 = virtualinvoke $r266.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke r6.<android.telephony.TelephonyManager: void setNetworkOperatorNumericForPhone(int,java.lang.String)>($i66, r265);

        r267 = r265;

        r268 = r265;

        $z77 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isInvalidOperatorNumeric(java.lang.String)>(r265);

        if $z77 == 0 goto label100;

        r269 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label098:
        r268 = r267;

        $z25 = interfaceinvoke r269.<java.util.Iterator: boolean hasNext()>();

        if $z25 == 0 goto label100;

        $r155 = interfaceinvoke r269.<java.util.Iterator: java.lang.Object next()>();

        r270 = (android.telephony.CellIdentity) $r155;

        $r156 = virtualinvoke r270.<android.telephony.CellIdentity: java.lang.String getPlmn()>();

        $z26 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r156);

        if $z26 != 0 goto label099;

        r268 = virtualinvoke r270.<android.telephony.CellIdentity: java.lang.String getPlmn()>();

        goto label100;

     label099:
        goto label098;

     label100:
        $z78 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isInvalidOperatorNumeric(java.lang.String)>(r268);

        if $z78 == 0 goto label101;

        $r149 = new java.lang.StringBuilder;

        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("localeOperator ");

        virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r268);

        virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is invalid");

        $r153 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r153);

        $r154 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocaleTracker mLocaleTracker>;

        virtualinvoke $r154.<com.android.internal.telephony.LocaleTracker: void updateOperatorNumeric(java.lang.String)>("");

        goto label103;

     label101:
        $r133 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z22 = virtualinvoke $r133.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z22 != 0 goto label102;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setOperatorIdd(java.lang.String)>(r268);

     label102:
        $r134 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocaleTracker mLocaleTracker>;

        virtualinvoke $r134.<com.android.internal.telephony.LocaleTracker: void updateOperatorNumeric(java.lang.String)>(r268);

     label103:
        $r272 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        i67 = virtualinvoke $r272.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r273 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z79 = virtualinvoke $r273.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z79 == 0 goto label104;

        $r148 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        z80 = virtualinvoke $r148.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        goto label107;

     label104:
        $r135 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z23 = virtualinvoke $r135.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z23 != 0 goto label106;

        $r147 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z24 = virtualinvoke $r147.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z24 == 0 goto label105;

        goto label106;

     label105:
        z80 = 0;

        goto label107;

     label106:
        z80 = 1;

     label107:
        virtualinvoke r6.<android.telephony.TelephonyManager: void setNetworkRoamingForPhone(int,boolean)>(i67, z80);

        $r274 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setRoamingType(android.telephony.ServiceState)>($r274);

        $r275 = new java.lang.StringBuilder;

        specialinvoke $r275.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r275.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcasting ServiceState : ");

        $r277 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r275.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r277);

        $r278 = virtualinvoke $r275.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r278);

        $r279 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r280 = virtualinvoke $r279.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.ServiceState getServiceState()>();

        $z81 = virtualinvoke $r258.<android.telephony.ServiceState: boolean equals(java.lang.Object)>($r280);

        if $z81 != 0 goto label108;

        r281 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r146 = virtualinvoke r281.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.ServiceState getServiceState()>();

        virtualinvoke r281.<com.android.internal.telephony.GsmCdmaPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>($r146);

     label108:
        $r138 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r139 = virtualinvoke $r138.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r140 = virtualinvoke $r139.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r141 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i19 = virtualinvoke $r141.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $r142 = staticinvoke <android.provider.Telephony$ServiceStateTable: android.net.Uri getUriForSubscriptionId(int)>($i19);

        $r143 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r144 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.content.ContentValues getContentValuesForServiceState(android.telephony.ServiceState)>($r143);

        virtualinvoke $r140.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r142, $r144);

        goto label109;

     label109:
        if z1 != 0 goto label110;

        if z58 == 0 goto label111;

     label110:
        $r93 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        $r94 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i14 = virtualinvoke $r94.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r95 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r93.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeServiceStateChanged(int,android.telephony.ServiceState)>($i14, $r95);

        $r96 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r97 = virtualinvoke $r96.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        $r98 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r97.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onServiceStateChanged(android.telephony.ServiceState)>($r98);

     label111:
        z82 = 0;

        z83 = 0;

        if z43 != 0 goto label112;

        if z44 == 0 goto label113;

     label112:
        z82 = 1;

     label113:
        if z71 == 0 goto label114;

        $r125 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mAttachedRegistrants>;

        $r126 = virtualinvoke $r125.<android.util.SparseArray: java.lang.Object get(int)>(1);

        $r127 = (com.android.internal.telephony.RegistrantList) $r126;

        virtualinvoke $r127.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        z82 = 1;

     label114:
        if z61 == 0 goto label115;

        z83 = 1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean notifySignalStrength()>();

     label115:
        $r99 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        r282 = virtualinvoke $r99.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        i68 = lengthof r282;

        z84 = z83;

        i70 = 0;

     label116:
        if i70 >= i68 goto label124;

        i71 = r282[i70];

        $z16 = virtualinvoke $r232.<android.util.SparseBooleanArray: boolean get(int)>(i71);

        if $z16 == 0 goto label117;

        z84 = 1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean notifySignalStrength()>();

     label117:
        $z17 = virtualinvoke $r235.<android.util.SparseBooleanArray: boolean get(int)>(i71);

        if $z17 != 0 goto label119;

        $z18 = virtualinvoke $r232.<android.util.SparseBooleanArray: boolean get(int)>(i71);

        if $z18 != 0 goto label119;

        if z55 == 0 goto label118;

        goto label119;

     label118:
        goto label120;

     label119:
        $r283 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i72 = virtualinvoke $r283.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setDataNetworkTypeForPhone(int)>($i72);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void notifyDataRegStateRilRadioTechnologyChanged(int)>(i71);

        $r284 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r284.<com.android.internal.telephony.GsmCdmaPhone: void notifyAllActiveDataConnections()>();

     label120:
        $z85 = virtualinvoke $r225.<android.util.SparseBooleanArray: boolean get(int)>(i71);

        if $z85 == 0 goto label121;

        z82 = 1;

        $r120 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mAttachedRegistrants>;

        $r121 = virtualinvoke $r120.<android.util.SparseArray: java.lang.Object get(int)>(i71);

        if $r121 == null goto label121;

        $r122 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mAttachedRegistrants>;

        $r123 = virtualinvoke $r122.<android.util.SparseArray: java.lang.Object get(int)>(i71);

        $r124 = (com.android.internal.telephony.RegistrantList) $r123;

        virtualinvoke $r124.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        z82 = 1;

     label121:
        $z87 = virtualinvoke $r228.<android.util.SparseBooleanArray: boolean get(int)>(i71);

        if $z87 == 0 goto label123;

        $r115 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDetachedRegistrants>;

        $r116 = virtualinvoke $r115.<android.util.SparseArray: java.lang.Object get(int)>(i71);

        if $r116 == null goto label122;

        $r117 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDetachedRegistrants>;

        $r118 = virtualinvoke $r117.<android.util.SparseArray: java.lang.Object get(int)>(i71);

        $r119 = (com.android.internal.telephony.RegistrantList) $r118;

        virtualinvoke $r119.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label122:
        z82 = 1;

     label123:
        i70 = i70 + 1;

        goto label116;

     label124:
        if z82 == 0 goto label125;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void logAttachChange()>();

     label125:
        if z84 == 0 goto label126;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void logRatChange()>();

     label126:
        if z56 != 0 goto label127;

        if z61 == 0 goto label128;

     label127:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void notifyVoiceRegStateRilRadioTechnologyChanged()>();

     label128:
        if z62 != 0 goto label129;

        if z64 != 0 goto label129;

        if z66 != 0 goto label129;

        if z68 == 0 goto label130;

     label129:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void logRoamingChange()>();

     label130:
        if z62 == 0 goto label131;

        $r114 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRoamingOnRegistrants>;

        virtualinvoke $r114.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label131:
        if z64 == 0 goto label132;

        $r113 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRoamingOffRegistrants>;

        virtualinvoke $r113.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label132:
        if z66 == 0 goto label133;

        $r112 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mDataRoamingOnRegistrants>;

        virtualinvoke $r112.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label133:
        if z68 == 0 goto label134;

        $r111 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mDataRoamingOffRegistrants>;

        virtualinvoke $r111.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label134:
        if z2 == 0 goto label135;

        $r109 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r110 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity getCellIdentity()>();

        virtualinvoke $r109.<com.android.internal.telephony.GsmCdmaPhone: void notifyLocationChanged(android.telephony.CellIdentity)>($r110);

     label135:
        if z58 == 0 goto label136;

        $r108 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNrStateChangedRegistrants>;

        virtualinvoke $r108.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label136:
        if z57 == 0 goto label137;

        $r107 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNrFrequencyChangedRegistrants>;

        virtualinvoke $r107.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label137:
        $r100 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z11 = virtualinvoke $r100.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z11 == 0 goto label139;

        $r101 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i15 = virtualinvoke $r101.<android.telephony.ServiceState: int getDataRegistrationState()>();

        $r102 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i16 = virtualinvoke $r102.<android.telephony.ServiceState: int getState()>();

        $z12 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isGprsConsistent(int,int)>($i15, $i16);

        if $z12 != 0 goto label138;

        $z13 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mStartedGprsRegCheck>;

        if $z13 != 0 goto label139;

        $z14 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mReportedGprsNoReg>;

        if $z14 != 0 goto label139;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mStartedGprsRegCheck> = 1;

        $r103 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r104 = virtualinvoke $r103.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r105 = virtualinvoke $r104.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i73 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r105, "gprs_register_check_period_ms", 60000);

        $r106 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(22);

        $l17 = (long) i73;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean sendMessageDelayed(android.os.Message,long)>($r106, $l17);

        goto label139;

     label138:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mReportedGprsNoReg> = 0;

     label139:
        return;
    }

    private void pollStateInternal(boolean)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        com.android.internal.telephony.CommandsInterface $r5, $r9, $r22;
        android.telephony.ServiceState $r6, $r16, $r17;
        com.android.internal.telephony.NitzStateMachine $r7, $r18;
        com.android.internal.telephony.GsmCdmaPhone $r8;
        android.os.Message $r10, $r15, $r23, $r29, $r35;
        android.util.SparseArray $r11, $r25, $r31, $r36;
        java.lang.Object $r12, $r26, $r32, $r37;
        int[] $r13, r19, r21, r24, $r28, r30, $r34, r38, r39;
        com.android.internal.telephony.NetworkRegistrationManager $r14, $r27, $r33;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        z0 := @parameter0: boolean;

        r19 = newarray (int)[1];

        r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext> = r19;

        r19[0] = 0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pollState: modemTriggered=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r4);

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        i0 = interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if i0 == 0 goto label2;

        if i0 == 2 goto label1;

        goto label3;

     label1:
        $r17 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r17.<android.telephony.ServiceState: void setStateOutOfService()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setSignalStrengthDefaultValues()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzData mLastNitzData> = null;

        $r18 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzStateMachine mNitzState>;

        interfaceinvoke $r18.<com.android.internal.telephony.NitzStateMachine: void handleNetworkUnavailable()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void pollStateDone()>();

        goto label6;

     label2:
        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r6.<android.telephony.ServiceState: void setStateOff()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setSignalStrengthDefaultValues()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzData mLastNitzData> = null;

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzStateMachine mNitzState>;

        interfaceinvoke $r7.<com.android.internal.telephony.NitzStateMachine: void handleNetworkUnavailable()>();

        $z1 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDeviceShuttingDown>;

        if $z1 != 0 goto label5;

        if z0 != 0 goto label3;

        $r16 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i5 = virtualinvoke $r16.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        if 18 == $i5 goto label3;

        goto label5;

     label3:
        r21 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        $i6 = r21[0];

        $i7 = $i6 + 1;

        r21[0] = $i7;

        $r22 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r23 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(7, r21);

        interfaceinvoke $r22.<com.android.internal.telephony.CommandsInterface: void getOperator(android.os.Message)>($r23);

        r24 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        $i8 = r24[0];

        $i9 = $i8 + 1;

        r24[0] = $i9;

        $r25 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mRegStateManagers>;

        $r26 = virtualinvoke $r25.<android.util.SparseArray: java.lang.Object get(int)>(1);

        $r27 = (com.android.internal.telephony.NetworkRegistrationManager) $r26;

        $r28 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        $r29 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(5, $r28);

        virtualinvoke $r27.<com.android.internal.telephony.NetworkRegistrationManager: void requestNetworkRegistrationInfo(int,android.os.Message)>(2, $r29);

        r30 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        $i10 = r30[0];

        $i11 = $i10 + 1;

        r30[0] = $i11;

        $r31 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mRegStateManagers>;

        $r32 = virtualinvoke $r31.<android.util.SparseArray: java.lang.Object get(int)>(1);

        $r33 = (com.android.internal.telephony.NetworkRegistrationManager) $r32;

        $r34 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        $r35 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(4, $r34);

        virtualinvoke $r33.<com.android.internal.telephony.NetworkRegistrationManager: void requestNetworkRegistrationInfo(int,android.os.Message)>(1, $r35);

        $r36 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mRegStateManagers>;

        $r37 = virtualinvoke $r36.<android.util.SparseArray: java.lang.Object get(int)>(2);

        if $r37 == null goto label4;

        r38 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        $i3 = r38[0];

        $i4 = $i3 + 1;

        r38[0] = $i4;

        $r11 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mRegStateManagers>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>(2);

        $r14 = (com.android.internal.telephony.NetworkRegistrationManager) $r12;

        $r13 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        $r15 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(6, $r13);

        virtualinvoke $r14.<com.android.internal.telephony.NetworkRegistrationManager: void requestNetworkRegistrationInfo(int,android.os.Message)>(2, $r15);

     label4:
        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z2 = virtualinvoke $r8.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z2 == 0 goto label6;

        r39 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        $i1 = r39[0];

        $i2 = $i1 + 1;

        r39[0] = $i2;

        $r9 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r10 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(14, r39);

        interfaceinvoke $r9.<com.android.internal.telephony.CommandsInterface: void getNetworkSelectionMode(android.os.Message)>($r10);

        goto label6;

     label5:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void pollStateDone()>();

     label6:
        return;
    }

    private void processIwlanRegistrationInfo()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.CommandsInterface $r1;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.internal.telephony.dataconnection.TransportManager $r2, $r24;
        boolean $z0, $z1, $z2, z3;
        android.telephony.ServiceState $r3, $r13, $r14, $r15, $r16, $r17, $r23, $r25, $r26, $r29, $r37, $r40;
        android.telephony.NetworkRegistrationInfo$Builder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r18, $r19, $r20, $r21, $r22, $r32, $r33, $r34, $r35, $r36;
        java.util.List $r11;
        java.lang.StringBuilder $r27, $r38;
        java.lang.String $r31, $r42, r44;
        android.telephony.NetworkRegistrationInfo r45, r46, r48, r49;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i0 = interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i0 != 0 goto label4;

        z3 = 0;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("set service state as POWER_OFF");

        $r14 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i4 = virtualinvoke $r14.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        if 18 != $i4 goto label1;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pollStateDone: mNewSS = ");

        $r40 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r42);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("pollStateDone: reset iwlan RAT value");

        z3 = 1;

     label1:
        $r15 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        r44 = virtualinvoke $r15.<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>();

        $r16 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r16.<android.telephony.ServiceState: void setStateOff()>();

        if z3 == 0 goto label3;

        $r17 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r17.<android.telephony.ServiceState: void setDataRegState(int)>(0);

        $r18 = new android.telephony.NetworkRegistrationInfo$Builder;

        specialinvoke $r18.<android.telephony.NetworkRegistrationInfo$Builder: void <init>()>();

        $r19 = virtualinvoke $r18.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setTransportType(int)>(2);

        $r20 = virtualinvoke $r19.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setDomain(int)>(2);

        $r21 = virtualinvoke $r20.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setAccessNetworkTechnology(int)>(18);

        $r22 = virtualinvoke $r21.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRegistrationState(int)>(1);

        r45 = virtualinvoke $r22.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo build()>();

        $r23 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r23.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r45);

        $r24 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        $z2 = virtualinvoke $r24.<com.android.internal.telephony.dataconnection.TransportManager: boolean isInLegacyMode()>();

        if $z2 == 0 goto label2;

        $r32 = new android.telephony.NetworkRegistrationInfo$Builder;

        specialinvoke $r32.<android.telephony.NetworkRegistrationInfo$Builder: void <init>()>();

        $r33 = virtualinvoke $r32.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setTransportType(int)>(1);

        $r34 = virtualinvoke $r33.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setDomain(int)>(2);

        $r35 = virtualinvoke $r34.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setAccessNetworkTechnology(int)>(18);

        $r36 = virtualinvoke $r35.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRegistrationState(int)>(1);

        r46 = virtualinvoke $r36.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo build()>();

        $r37 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r37.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r46);

     label2:
        $r25 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r25.<android.telephony.ServiceState: void setOperatorAlphaLong(java.lang.String)>(r44);

        $r26 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r26.<android.telephony.ServiceState: void setIwlanPreferred(boolean)>(1);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pollStateDone: mNewSS = ");

        $r29 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r31);

     label3:
        return;

     label4:
        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.dataconnection.TransportManager: boolean isInLegacyMode()>();

        if $z0 == 0 goto label5;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        r48 = virtualinvoke $r3.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        if r48 == null goto label5;

        $i1 = virtualinvoke r48.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        if $i1 != 18 goto label5;

        $r4 = new android.telephony.NetworkRegistrationInfo$Builder;

        specialinvoke $r4.<android.telephony.NetworkRegistrationInfo$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setTransportType(int)>(2);

        $r6 = virtualinvoke $r5.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setDomain(int)>(2);

        $i2 = virtualinvoke r48.<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>();

        $r7 = virtualinvoke $r6.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRegistrationState(int)>($i2);

        $r8 = virtualinvoke $r7.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setAccessNetworkTechnology(int)>(18);

        $i3 = virtualinvoke r48.<android.telephony.NetworkRegistrationInfo: int getRejectCause()>();

        $r9 = virtualinvoke $r8.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRejectCause(int)>($i3);

        $z1 = virtualinvoke r48.<android.telephony.NetworkRegistrationInfo: boolean isEmergencyEnabled()>();

        $r10 = virtualinvoke $r9.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setEmergencyOnly(boolean)>($z1);

        $r11 = virtualinvoke r48.<android.telephony.NetworkRegistrationInfo: java.util.List getAvailableServices()>();

        $r12 = virtualinvoke $r10.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setAvailableServices(java.util.List)>($r11);

        r49 = virtualinvoke $r12.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo build()>();

        $r13 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r13.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r49);

     label5:
        return;
    }

    private void queueNextSignalStrengthPoll()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;
        com.android.internal.telephony.uicc.UiccController $r1;
        int $i0;
        com.android.internal.telephony.uicc.IccCardStatus$CardState $r2, $r3;
        com.android.internal.telephony.uicc.UiccCard r4;
        android.os.Message r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDontPollSignalStrength>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance()>();

        $i0 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getPhoneId()>();

        r4 = virtualinvoke $r1.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard(int)>($i0);

        if r4 == null goto label3;

        $r2 = virtualinvoke r4.<com.android.internal.telephony.uicc.UiccCard: com.android.internal.telephony.uicc.IccCardStatus$CardState getCardState()>();

        $r3 = <com.android.internal.telephony.uicc.IccCardStatus$CardState: com.android.internal.telephony.uicc.IccCardStatus$CardState CARDSTATE_ABSENT>;

        if $r2 != $r3 goto label2;

        goto label3;

     label2:
        r5 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage()>();

        r5.<android.os.Message: int what> = 10;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean sendMessageDelayed(android.os.Message,long)>(r5, 20000L);

        return;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Not polling signal strength due to absence of SIM");

        return;
    }

    private boolean regCodeIsRoaming(int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        if 5 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private int regCodeToServiceState(int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 == 5 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void saveCdmaSubscriptionSource(int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, $i1;
        java.lang.StringBuilder $r1, $r8;
        java.lang.String $r4, $r14;
        com.android.internal.telephony.GsmCdmaPhone $r5, $r10;
        android.content.Context $r6, $r11;
        android.content.ContentResolver $r7, $r12;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing cdma subscription source: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r4);

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r7, "subscription_mode", i0);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read from settings: ");

        $r10 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r12, "subscription_mode", -1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r14);

        return;
    }

    private int selectResourceForRejectCode(int, boolean)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0;
        int i1, i2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i1 := @parameter0: int;

        z0 := @parameter1: boolean;

        if i1 == 1 goto label10;

        if i1 == 2 goto label07;

        if i1 == 3 goto label04;

        if i1 == 6 goto label01;

        i2 = 0;

        goto label12;

     label01:
        if z0 == 0 goto label02;

        i2 = 17040632;

        goto label03;

     label02:
        i2 = 17040631;

     label03:
        goto label12;

     label04:
        if z0 == 0 goto label05;

        i2 = 17040634;

        goto label06;

     label05:
        i2 = 17040633;

     label06:
        goto label12;

     label07:
        if z0 == 0 goto label08;

        i2 = 17040636;

        goto label09;

     label08:
        i2 = 17040635;

     label09:
        goto label12;

     label10:
        if z0 == 0 goto label11;

        i2 = 17040630;

        goto label12;

     label11:
        i2 = 17040629;

     label12:
        return i2;
    }

    private void setDataNetworkTypeForPhone(int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, $i1;
        com.android.internal.telephony.GsmCdmaPhone $r1, $r2, $r5;
        boolean $z0;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.telephony.TelephonyManager $r6;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: boolean getUnitTestMode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r6 = (android.telephony.TelephonyManager) $r4;

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i1 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r6.<android.telephony.TelephonyManager: void setDataNetworkTypeForPhone(int,int)>($i1, i0);

        return;
    }

    private void setPhyCellInfoFromCellIdentity(android.telephony.ServiceState, android.telephony.CellIdentity)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState r1;
        android.telephony.CellIdentityLte r2;
        int i0, i1, $i2, $i3, i4, i5;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r3, $r9;
        java.lang.StringBuilder $r4, $r10;
        java.lang.String $r7, $r13;
        int[] $r8, r15, r16, r18;
        android.telephony.CellIdentity r14;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.telephony.ServiceState;

        r14 := @parameter1: android.telephony.CellIdentity;

        if r14 != null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Could not set ServiceState channel number. CellIdentity null");

        return;

     label1:
        $i2 = virtualinvoke r14.<android.telephony.CellIdentity: int getChannelNumber()>();

        virtualinvoke r1.<android.telephony.ServiceState: void setChannelNumber(int)>($i2);

        $z0 = r14 instanceof android.telephony.CellIdentityLte;

        if $z0 == 0 goto label9;

        r2 = (android.telephony.CellIdentityLte) r14;

        r15 = null;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastPhysicalChannelConfigList>;

        $z1 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: boolean isEmpty(java.util.Collection)>($r3);

        if $z1 != 0 goto label4;

        $r9 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastPhysicalChannelConfigList>;

        r16 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int[] getBandwidthsFromConfigs(java.util.List)>($r9);

        i0 = lengthof r16;

        i4 = 0;

     label2:
        r15 = r16;

        if i4 >= i0 goto label4;

        i1 = r16[i4];

        $z3 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: boolean isValidLteBandwidthKhz(int)>(i1);

        if $z3 != 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid LTE Bandwidth in RegistrationState, ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r13);

        r15 = null;

        goto label4;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        if r15 == null goto label5;

        r18 = r15;

        $i3 = lengthof r15;

        if $i3 != 1 goto label8;

     label5:
        i5 = virtualinvoke r2.<android.telephony.CellIdentityLte: int getBandwidth()>();

        $z2 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: boolean isValidLteBandwidthKhz(int)>(i5);

        if $z2 == 0 goto label6;

        $r8 = newarray (int)[1];

        $r8[0] = i5;

        r18 = $r8;

        goto label8;

     label6:
        if i5 != 2147483647 goto label7;

        r18 = r15;

        goto label8;

     label7:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid LTE Bandwidth in RegistrationState, ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r7);

        r18 = r15;

     label8:
        if r18 == null goto label9;

        virtualinvoke r1.<android.telephony.ServiceState: void setCellBandwidths(int[])>(r18);

     label9:
        return;
    }

    private void setRoamingOff()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState $r1, $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r1.<android.telephony.ServiceState: void setRoaming(boolean)>(0);

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r2.<android.telephony.ServiceState: void setCdmaEriIconIndex(int)>(1);

        return;
    }

    private void setRoamingOn()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState $r1, $r2, $r3;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r1.<android.telephony.ServiceState: void setRoaming(boolean)>(1);

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r2.<android.telephony.ServiceState: void setCdmaEriIconIndex(int)>(0);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r3.<android.telephony.ServiceState: void setCdmaEriIconMode(int)>(0);

        return;
    }

    private void setSignalStrengthDefaultValues()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.SignalStrength $r1;
        long $l0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = new android.telephony.SignalStrength;

        specialinvoke $r1.<android.telephony.SignalStrength: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mSignalStrength> = $r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: long mSignalStrengthUpdatedTime> = $l0;

        return;
    }

    private void setTimeFromNITZString(java.lang.String, long)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        long l0, $l1, $l3, $l5, l7, l8, l9;
        java.lang.StringBuilder $r1, $r12, $r19;
        java.lang.String $r10, $r17, $r24, r25;
        com.android.internal.telephony.NitzStateMachine $r11;
        java.lang.Throwable $r18;
        com.android.internal.telephony.NitzData r27;
        android.os.TimestampedValue r28;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r25 := @parameter0: java.lang.String;

        l7 := @parameter1: long;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" start=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delay=");

        $l1 = l0 - l7;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SST", $r10);

        r27 = staticinvoke <com.android.internal.telephony.NitzData: com.android.internal.telephony.NitzData parse(java.lang.String)>(r25);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzData mLastNitzData> = r27;

        if r27 == null goto label4;

     label1:
        r28 = new android.os.TimestampedValue;

        specialinvoke r28.<android.os.TimestampedValue: void <init>(long,java.lang.Object)>(l7, r27);

        $r11 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzStateMachine mNitzState>;

        interfaceinvoke $r11.<com.android.internal.telephony.NitzStateMachine: void handleNitzReceived(android.os.TimestampedValue)>(r28);

     label2:
        l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l8);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l3 = l8 - l0;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SST", $r17);

        goto label4;

     label3:
        $r18 := @caughtexception;

        l9 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l9);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l5 = l9 - l0;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SST", $r24);

        throw $r18;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean shouldRefreshSignalStrength()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        long l0, l1, $l5, $l6;
        byte $b2, $b7;
        com.android.internal.telephony.SubscriptionController $r1;
        com.android.internal.telephony.GsmCdmaPhone $r2, $r5, $r9;
        android.content.Context $r3, $r6, $r10;
        java.lang.String $r4, $r7;
        boolean $z0, $z1, $z2, z3;
        java.lang.Object $r8;
        android.telephony.TelephonyManager $r11, $r12;
        int $i3, $i4;
        java.util.List r13;
        java.util.Iterator r14;
        android.telephony.SubscriptionInfo r15;
        android.telephony.ServiceState r16;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = r0.<com.android.internal.telephony.ServiceStateTracker: long mSignalStrengthUpdatedTime>;

        $b2 = l1 cmp l0;

        if $b2 > 0 goto label2;

        $l6 = l0 - l1;

        $l5 = <com.android.internal.telephony.ServiceStateTracker: long SIGNAL_STRENGTH_REFRESH_THRESHOLD_IN_MS>;

        $b7 = $l6 cmp $l5;

        if $b7 <= 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        if z3 != 0 goto label4;

        return 0;

     label4:
        $r1 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getAttributionTag()>();

        r13 = virtualinvoke $r1.<com.android.internal.telephony.SubscriptionController: java.util.List getActiveSubscriptionInfoList(java.lang.String,java.lang.String)>($r4, $r7);

        $z0 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: boolean isEmpty(java.util.Collection)>(r13);

        if $z0 != 0 goto label7;

        r14 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r8 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (android.telephony.SubscriptionInfo) $r8;

        $z2 = virtualinvoke r15.<android.telephony.SubscriptionInfo: boolean isOpportunistic()>();

        if $z2 == 0 goto label6;

        $r9 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r11 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>($r10);

        $i3 = virtualinvoke r15.<android.telephony.SubscriptionInfo: int getSubscriptionId()>();

        $r12 = virtualinvoke $r11.<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>($i3);

        r16 = virtualinvoke $r12.<android.telephony.TelephonyManager: android.telephony.ServiceState getServiceState()>();

        if r16 == null goto label6;

        $i4 = virtualinvoke r16.<android.telephony.ServiceState: int getDataRegistrationState()>();

        if $i4 != 0 goto label6;

        return 1;

     label6:
        goto label5;

     label7:
        return 0;
    }

    private void updateLteEarfcnLists(android.os.PersistableBundle)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.Object r1;
        int $i0;
        java.lang.String[] $r2;
        java.util.ArrayList $r3;
        java.lang.Throwable $r4;
        android.os.PersistableBundle r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 := @parameter0: android.os.PersistableBundle;

        r1 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.Object mLteRsrpBoostLock>;

        entermonitor r1;

     label1:
        $i0 = virtualinvoke r5.<android.os.PersistableBundle: int getInt(java.lang.String,int)>("lte_earfcns_rsrp_boost_int", 0);

        r0.<com.android.internal.telephony.ServiceStateTracker: int mLteRsrpBoost> = $i0;

        $r2 = virtualinvoke r5.<android.os.PersistableBundle: java.lang.String[] getStringArray(java.lang.String)>("boosted_lte_earfcns_string_array");

        $r3 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.util.ArrayList convertEarfcnStringArrayToPairList(java.lang.String[])>($r2);

        r0.<com.android.internal.telephony.ServiceStateTracker: java.util.ArrayList mEarfcnPairListForRsrpBoost> = $r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean updateNrFrequencyRangeFromPhysicalChannelConfigs(java.util.List, android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState r1;
        com.android.internal.telephony.dataconnection.DcTracker r2;
        java.util.Iterator r3;
        android.telephony.PhysicalChannelConfig r4;
        int[] r5;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7;
        com.android.internal.telephony.GsmCdmaPhone $r6;
        boolean $z0, $z1, $z2, z3;
        java.lang.Object $r7;
        android.net.NetworkCapabilities $r8;
        java.util.List r9;
        com.android.internal.telephony.dataconnection.DataConnection r10;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r9 := @parameter0: java.util.List;

        r1 := @parameter1: android.telephony.ServiceState;

        i4 = 0;

        i5 = 0;

        z3 = 0;

        if r9 == null goto label5;

        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r2 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(1);

        r3 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        i4 = i5;

        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.telephony.PhysicalChannelConfig) $r7;

        i6 = i5;

        $z1 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isNrPhysicalChannelConfig(android.telephony.PhysicalChannelConfig)>(r4);

        if $z1 == 0 goto label4;

        r5 = virtualinvoke r4.<android.telephony.PhysicalChannelConfig: int[] getContextIds()>();

        i0 = lengthof r5;

        i7 = 0;

     label2:
        i6 = i5;

        if i7 >= i0 goto label4;

        $i2 = r5[i7];

        r10 = virtualinvoke r2.<com.android.internal.telephony.dataconnection.DcTracker: com.android.internal.telephony.dataconnection.DataConnection getDataConnectionByContextId(int)>($i2);

        if r10 == null goto label3;

        $r8 = virtualinvoke r10.<com.android.internal.telephony.dataconnection.DataConnection: android.net.NetworkCapabilities getNetworkCapabilities()>();

        $z2 = virtualinvoke $r8.<android.net.NetworkCapabilities: boolean hasCapability(int)>(12);

        if $z2 == 0 goto label3;

        $i3 = virtualinvoke r4.<android.telephony.PhysicalChannelConfig: int getFrequencyRange()>();

        i6 = staticinvoke <android.telephony.ServiceState: int getBetterNRFrequencyRange(int,int)>(i5, $i3);

        goto label4;

     label3:
        i7 = i7 + 1;

        goto label2;

     label4:
        i5 = i6;

        goto label1;

     label5:
        $i1 = virtualinvoke r1.<android.telephony.ServiceState: int getNrFrequencyRange()>();

        if i4 == $i1 goto label6;

        z3 = 1;

     label6:
        virtualinvoke r1.<android.telephony.ServiceState: void setNrFrequencyRange(int)>(i4);

        return z3;
    }

    private boolean updateNrStateFromPhysicalChannelConfigs(java.util.List, android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState r1;
        android.telephony.NetworkRegistrationInfo r2;
        android.telephony.PhysicalChannelConfig r3;
        boolean $z0, $z1, z2, z4;
        java.lang.Object $r4;
        int $i0, i1, i2;
        java.util.List r5;
        java.util.Iterator r6;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 := @parameter0: java.util.List;

        r1 := @parameter1: android.telephony.ServiceState;

        z2 = 1;

        r2 = virtualinvoke r1.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        if r2 == null goto label9;

        if r5 != null goto label1;

        goto label9;

     label1:
        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        z4 = 0;

        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telephony.PhysicalChannelConfig) $r4;

        $z1 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isNrPhysicalChannelConfig(android.telephony.PhysicalChannelConfig)>(r3);

        if $z1 == 0 goto label3;

        $i0 = virtualinvoke r3.<android.telephony.PhysicalChannelConfig: int getConnectionStatus()>();

        if $i0 != 2 goto label3;

        z4 = 1;

        goto label4;

     label3:
        goto label2;

     label4:
        i1 = virtualinvoke r2.<android.telephony.NetworkRegistrationInfo: int getNrState()>();

        if z4 == 0 goto label5;

        i2 = 3;

        goto label6;

     label5:
        virtualinvoke r2.<android.telephony.NetworkRegistrationInfo: void updateNrState()>();

        i2 = virtualinvoke r2.<android.telephony.NetworkRegistrationInfo: int getNrState()>();

     label6:
        if i2 == i1 goto label7;

        goto label8;

     label7:
        z2 = 0;

     label8:
        virtualinvoke r2.<android.telephony.NetworkRegistrationInfo: void setNrState(int)>(i2);

        virtualinvoke r1.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r2);

        return z2;

     label9:
        return 0;
    }

    private void updateOperatorNameForCellIdentity(android.telephony.CellIdentity)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.CellIdentity r1;
        java.lang.CharSequence $r2, $r5;
        java.lang.String $r3, $r4, $r6, $r7;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.telephony.CellIdentity;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r1.<android.telephony.CellIdentity: java.lang.CharSequence getOperatorAlphaLong()>();

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String filterOperatorNameByPattern(java.lang.String)>($r3);

        virtualinvoke r1.<android.telephony.CellIdentity: void setOperatorAlphaLong(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<android.telephony.CellIdentity: java.lang.CharSequence getOperatorAlphaShort()>();

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String filterOperatorNameByPattern(java.lang.String)>($r6);

        virtualinvoke r1.<android.telephony.CellIdentity: void setOperatorAlphaShort(java.lang.String)>($r7);

        return;
    }

    private void updateOperatorNameForServiceState(android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState r1;
        java.util.List r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        int $i0, i1;
        java.lang.Object $r8, $r9, $r12;
        android.telephony.NetworkRegistrationInfo $r10, $r13;
        android.telephony.CellIdentity $r11;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.telephony.ServiceState;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>();

        $r4 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String filterOperatorNameByPattern(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>();

        $r6 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String filterOperatorNameByPattern(java.lang.String)>($r5);

        $r7 = virtualinvoke r1.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        virtualinvoke r1.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>($r4, $r6, $r7);

        r2 = virtualinvoke r1.<android.telephony.ServiceState: java.util.List getNetworkRegistrationInfoList()>();

        i1 = 0;

     label2:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        if $r8 == null goto label3;

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r10 = (android.telephony.NetworkRegistrationInfo) $r9;

        $r11 = virtualinvoke $r10.<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateOperatorNameForCellIdentity(android.telephony.CellIdentity)>($r11);

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r13 = (android.telephony.NetworkRegistrationInfo) $r12;

        virtualinvoke r1.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>($r13);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

    private void updateOperatorNameFromCarrierConfig()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;
        boolean $z0, $z1, $z2, z3;
        android.telephony.ServiceState $r2, $r7, r20;
        com.android.internal.telephony.uicc.UiccController $r3, $r14;
        int $i0, $i1;
        com.android.internal.telephony.uicc.UiccCard $r4, $r15;
        java.lang.StringBuilder $r5;
        java.lang.String $r8, $r12, $r13, $r16, r18;
        android.os.PersistableBundle r17;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z1 = virtualinvoke $r2.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z1 != 0 goto label3;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getPhoneId()>();

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard(int)>($i0);

        if $r4 == null goto label1;

        $r14 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getPhoneId()>();

        $r15 = virtualinvoke $r14.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard(int)>($i1);

        $r16 = virtualinvoke $r15.<com.android.internal.telephony.uicc.UiccCard: java.lang.String getOperatorBrandOverride()>();

        if $r16 == null goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        if z3 != 0 goto label3;

        r17 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        $z2 = virtualinvoke r17.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("cdma_home_registered_plmn_name_override_bool");

        if $z2 == 0 goto label3;

        r18 = virtualinvoke r17.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("cdma_home_registered_plmn_name_string");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateOperatorNameFromCarrierConfig: changing from ");

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r8 = virtualinvoke $r7.<android.telephony.ServiceState: java.lang.String getOperatorAlpha()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r12);

        r20 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r13 = virtualinvoke r20.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        virtualinvoke r20.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>(r18, r18, $r13);

     label3:
        return;
    }

    private void updateOperatorNamePattern(android.os.PersistableBundle)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;
        java.util.regex.Pattern $r1, $r4;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, $r7, r9;
        android.os.PersistableBundle r8;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r8 := @parameter0: android.os.PersistableBundle;

        r9 = virtualinvoke r8.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("operator_name_filter_pattern_string");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r9);

        r0.<com.android.internal.telephony.ServiceStateTracker: java.util.regex.Pattern mOperatorNameStringPattern> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mOperatorNameStringPattern: ");

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.regex.Pattern mOperatorNameStringPattern>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r7);

     label1:
        return;
    }

    private void updateReportingCriteria(android.os.PersistableBundle)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        com.android.internal.telephony.GsmCdmaPhone $r1, $r3, $r5, r9, r11, r13, r15, r17, r19;
        int[] $r2, $r4, r10, r12, r14, r16, r18, r20;
        com.android.internal.telephony.HalVersion $r6, $r7;
        boolean $z1, z2, z3, z4, z5, z6, z7;
        android.os.PersistableBundle r8;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r8 := @parameter0: android.os.PersistableBundle;

        i6 = virtualinvoke r8.<android.os.PersistableBundle: int getInt(java.lang.String,int)>("parameters_used_for_lte_signal_bar_int", 1);

        r9 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r10 = virtualinvoke r8.<android.os.PersistableBundle: int[] getIntArray(java.lang.String)>("lte_rsrp_thresholds_int_array");

        $i0 = i6 & 1;

        if $i0 == 0 goto label01;

        z2 = 1;

        goto label02;

     label01:
        z2 = 0;

     label02:
        virtualinvoke r9.<com.android.internal.telephony.GsmCdmaPhone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(3, r10, 3, z2);

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r2 = virtualinvoke r8.<android.os.PersistableBundle: int[] getIntArray(java.lang.String)>("wcdma_rscp_thresholds_int_array");

        virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(2, $r2, 2, 1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r4 = virtualinvoke r8.<android.os.PersistableBundle: int[] getIntArray(java.lang.String)>("gsm_rssi_thresholds_int_array");

        virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(1, $r4, 1, 1);

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.HalVersion getHalVersion()>();

        $r7 = <com.android.internal.telephony.RIL: com.android.internal.telephony.HalVersion RADIO_HAL_VERSION_1_5>;

        $z1 = virtualinvoke $r6.<com.android.internal.telephony.HalVersion: boolean greaterOrEqual(com.android.internal.telephony.HalVersion)>($r7);

        if $z1 == 0 goto label13;

        r11 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r12 = virtualinvoke r8.<android.os.PersistableBundle: int[] getIntArray(java.lang.String)>("lte_rsrq_thresholds_int_array");

        $i1 = i6 & 2;

        if $i1 == 0 goto label03;

        z3 = 1;

        goto label04;

     label03:
        z3 = 0;

     label04:
        virtualinvoke r11.<com.android.internal.telephony.GsmCdmaPhone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(4, r12, 3, z3);

        r13 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r14 = virtualinvoke r8.<android.os.PersistableBundle: int[] getIntArray(java.lang.String)>("lte_rssnr_thresholds_int_array");

        $i2 = i6 & 4;

        if $i2 == 0 goto label05;

        z4 = 1;

        goto label06;

     label05:
        z4 = 0;

     label06:
        virtualinvoke r13.<com.android.internal.telephony.GsmCdmaPhone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(5, r14, 3, z4);

        i7 = virtualinvoke r8.<android.os.PersistableBundle: int getInt(java.lang.String,int)>("parameters_use_for_5g_nr_signal_bar_int", 1);

        r15 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r16 = virtualinvoke r8.<android.os.PersistableBundle: int[] getIntArray(java.lang.String)>("5g_nr_ssrsrp_thresholds_int_array");

        $i3 = i7 & 1;

        if $i3 == 0 goto label07;

        z5 = 1;

        goto label08;

     label07:
        z5 = 0;

     label08:
        virtualinvoke r15.<com.android.internal.telephony.GsmCdmaPhone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(6, r16, 6, z5);

        r17 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r18 = virtualinvoke r8.<android.os.PersistableBundle: int[] getIntArray(java.lang.String)>("5g_nr_ssrsrq_thresholds_int_array");

        $i4 = i7 & 2;

        if $i4 == 0 goto label09;

        z6 = 1;

        goto label10;

     label09:
        z6 = 0;

     label10:
        virtualinvoke r17.<com.android.internal.telephony.GsmCdmaPhone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(7, r18, 6, z6);

        r19 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r20 = virtualinvoke r8.<android.os.PersistableBundle: int[] getIntArray(java.lang.String)>("5g_nr_sssinr_thresholds_int_array");

        $i5 = i7 & 4;

        if $i5 == 0 goto label11;

        z7 = 1;

        goto label12;

     label11:
        z7 = 0;

     label12:
        virtualinvoke r19.<com.android.internal.telephony.GsmCdmaPhone: void setSignalStrengthReportingCriteria(int,int[],int,boolean)>(8, r20, 6, z7);

     label13:
        return;
    }

    private void updateServiceStateLteEarfcnBoost(android.telephony.ServiceState, int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, $i1;
        java.lang.Object r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        android.telephony.ServiceState r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: android.telephony.ServiceState;

        i0 := @parameter1: int;

        r1 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.Object mLteRsrpBoostLock>;

        entermonitor r1;

        if i0 == -1 goto label3;

     label1:
        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.ArrayList mEarfcnPairListForRsrpBoost>;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean containsEarfcnInEarfcnRange(java.util.ArrayList,int)>($r2, i0);

        if $z0 == 0 goto label3;

        $i1 = r0.<com.android.internal.telephony.ServiceStateTracker: int mLteRsrpBoost>;

        virtualinvoke r4.<android.telephony.ServiceState: void setLteEarfcnRsrpBoost(int)>($i1);

     label2:
        goto label4;

     label3:
        virtualinvoke r4.<android.telephony.ServiceState: void setLteEarfcnRsrpBoost(int)>(0);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void updateSpnDisplayCdnr()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver $r1;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("updateSpnDisplayCdnr+");

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.cdnr.CarrierDisplayNameData getCarrierDisplayNameData()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void notifySpnDisplayUpdate(com.android.internal.telephony.cdnr.CarrierDisplayNameData)>($r2);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("updateSpnDisplayCdnr-");

        return;
    }

    private void updateSpnDisplayLegacy()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15;
        android.telephony.ServiceState $r2, $r5, $r17, $r18, $r21, $r24, $r33;
        com.android.internal.telephony.GsmCdmaPhone $r3, $r34, $r36, $r38, $r51;
        com.android.internal.telephony.Phone $r4, $r35;
        java.lang.StringBuilder $r6, $r11, $r13, $r31, $r40, $r42, $r53, $r57, $r61;
        java.lang.String $r7, $r12, $r14, $r16, $r32, $r41, $r43, r44, r45, r46, r52, $r55, $r59, r60, $r62, r63, r64, r65, r66, r67, r68, r70, r73, r74;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z14, $z15, z16, z17, z18, $z19, $z20;
        com.android.internal.telephony.CommandsInterface $r8;
        android.content.res.Resources $r9, $r19, $r27, $r29, $r39;
        java.lang.CharSequence $r10, $r20, $r28, $r30;
        java.lang.Object[] $r15, $r25, $r26, $r71;
        com.android.internal.telephony.uicc.IccRecords $r22, $r23;
        android.content.Context $r37;
        android.os.PersistableBundle r47, r69;
        java.lang.String[] r48;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder $r78, $r79, $r80, $r81, $r82, $r83;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData $r84;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("updateSpnDisplayLegacy+");

        z13 = 0;

        r44 = null;

        r45 = null;

        r46 = null;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        i0 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getCombinedRegState(android.telephony.ServiceState)>($r2);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone getImsPhone()>();

        if $r4 == null goto label08;

        $r34 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r35 = virtualinvoke $r34.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone getImsPhone()>();

        $z12 = virtualinvoke $r35.<com.android.internal.telephony.Phone: boolean isWifiCallingEnabled()>();

        if $z12 == 0 goto label08;

        if i0 != 0 goto label08;

        r47 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        i11 = virtualinvoke r47.<android.os.PersistableBundle: int getInt(java.lang.String)>("wfc_spn_format_idx_int");

        i12 = virtualinvoke r47.<android.os.PersistableBundle: int getInt(java.lang.String)>("wfc_data_spn_format_idx_int");

        i1 = virtualinvoke r47.<android.os.PersistableBundle: int getInt(java.lang.String)>("wfc_flight_mode_spn_format_idx_int");

        z14 = virtualinvoke r47.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("wfc_spn_use_root_locale");

        $r36 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r37 = virtualinvoke $r36.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r38 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i7 = virtualinvoke $r38.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $r39 = staticinvoke <android.telephony.SubscriptionManager: android.content.res.Resources getResourcesForSubId(android.content.Context,int,boolean)>($r37, $i7, z14);

        r48 = virtualinvoke $r39.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236137);

        if i11 < 0 goto label02;

        $i10 = lengthof r48;

        if i11 < $i10 goto label01;

        goto label02;

     label01:
        goto label03;

     label02:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSpnDisplay: KEY_WFC_SPN_FORMAT_IDX_INT out of bounds: ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r41);

        i11 = 0;

     label03:
        if i12 < 0 goto label04;

        i13 = i12;

        $i9 = lengthof r48;

        if i12 < $i9 goto label05;

     label04:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSpnDisplay: KEY_WFC_DATA_SPN_FORMAT_IDX_INT out of bounds: ");

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r43);

        i13 = 0;

     label05:
        if i1 < 0 goto label06;

        i14 = i1;

        $i8 = lengthof r48;

        if i1 < $i8 goto label07;

     label06:
        i14 = i11;

     label07:
        r44 = r48[i11];

        r45 = r48[i13];

        r46 = r48[i14];

        goto label08;

     label08:
        $r51 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z15 = virtualinvoke $r51.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z15 == 0 goto label28;

        $r18 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        i15 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getCarrierNameDisplayBitmask(android.telephony.ServiceState)>($r18);

        z16 = 0;

        if i0 == 1 goto label13;

        if i0 != 2 goto label09;

        goto label13;

     label09:
        if i0 != 0 goto label12;

        $r33 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        r52 = virtualinvoke $r33.<android.telephony.ServiceState: java.lang.String getOperatorAlpha()>();

        $z11 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r52);

        if $z11 != 0 goto label10;

        $i6 = i15 & 2;

        if $i6 != 2 goto label10;

        z17 = 1;

        goto label11;

     label10:
        z17 = 0;

     label11:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSpnDisplay: rawPlmn = ");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r55);

        goto label18;

     label12:
        $r29 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r30 = virtualinvoke $r29.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040442);

        r52 = interfaceinvoke $r30.<java.lang.CharSequence: java.lang.String toString()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSpnDisplay: radio is off w/ showPlmn=");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(1);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" plmn=");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r32);

        z17 = 1;

        goto label18;

     label13:
        $z2 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean shouldForceDisplayNoService()>();

        if $z2 == 0 goto label14;

        $z10 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSimReady>;

        if $z10 != 0 goto label14;

        z18 = 1;

        goto label15;

     label14:
        z18 = 0;

     label15:
        if z18 != 0 goto label16;

        $z9 = staticinvoke <com.android.internal.telephony.Phone: boolean isEmergencyCallOnly()>();

        if $z9 == 0 goto label16;

        $r27 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r28 = virtualinvoke $r27.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040083);

        r52 = interfaceinvoke $r28.<java.lang.CharSequence: java.lang.String toString()>();

        z16 = 0;

        goto label17;

     label16:
        $r19 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r20 = virtualinvoke $r19.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040442);

        r52 = interfaceinvoke $r20.<java.lang.CharSequence: java.lang.String toString()>();

        z16 = 1;

     label17:
        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSpnDisplay: radio is on but out of service, set plmn=\'");

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r59);

        z17 = 1;

     label18:
        r60 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getServiceProviderName()>();

        if z16 != 0 goto label19;

        $z8 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r60);

        if $z8 != 0 goto label19;

        $i5 = i15 & 1;

        if $i5 != 1 goto label19;

        z13 = 1;

        goto label20;

     label19:
        z13 = 0;

     label20:
        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSpnDisplay: rawSpn = ");

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r62);

        $z19 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r60);

        if $z19 != 0 goto label22;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r44);

        if $z6 != 0 goto label22;

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r45);

        if $z7 != 0 goto label22;

        $r24 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i4 = virtualinvoke $r24.<android.telephony.ServiceState: int getState()>();

        if $i4 != 3 goto label21;

        r44 = r46;

     label21:
        r63 = virtualinvoke r60.<java.lang.String: java.lang.String trim()>();

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = r63;

        r64 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r44, $r25);

        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = r63;

        r65 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r45, $r26);

        z17 = 0;

        z13 = 1;

        r66 = r52;

        r67 = r64;

        r60 = r65;

        goto label27;

     label22:
        $z20 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r52);

        if $z20 != 0 goto label24;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r44);

        if $z4 != 0 goto label24;

        r68 = virtualinvoke r52.<java.lang.String: java.lang.String trim()>();

        r69 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        r70 = r68;

        $r22 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r22 == null goto label23;

        r70 = r68;

        $z5 = virtualinvoke r69.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("wfc_carrier_name_override_by_pnn_bool");

        if $z5 == 0 goto label23;

        $r23 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        r70 = virtualinvoke $r23.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getPnnHomeName()>();

     label23:
        $r71 = newarray (java.lang.Object)[1];

        $r71[0] = r70;

        r66 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r44, $r71);

        r67 = r60;

        goto label27;

     label24:
        $r21 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i3 = virtualinvoke $r21.<android.telephony.ServiceState: int getState()>();

        if $i3 == 3 goto label26;

        if z17 == 0 goto label25;

        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r60, r52);

        if $z3 == 0 goto label25;

        goto label26;

     label25:
        r66 = r52;

        r67 = r60;

        goto label27;

     label26:
        z13 = 0;

        r66 = r52;

        r67 = null;

     label27:
        goto label35;

     label28:
        r73 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getOperatorNameFromEri()>();

        if r73 == null goto label29;

        $r17 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r17.<android.telephony.ServiceState: void setOperatorAlphaLong(java.lang.String)>(r73);

     label29:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateOperatorNameFromCarrierConfig()>();

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        r74 = virtualinvoke $r5.<android.telephony.ServiceState: java.lang.String getOperatorAlpha()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSpnDisplay: cdma rawPlmn = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r7);

        if r74 == null goto label30;

        z17 = 1;

        goto label31;

     label30:
        z17 = 0;

     label31:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r74);

        if $z0 != 0 goto label32;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r44);

        if $z1 != 0 goto label32;

        $r15 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke r74.<java.lang.String: java.lang.String trim()>();

        $r15[0] = $r16;

        r66 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r44, $r15);

        goto label33;

     label32:
        r66 = r74;

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i2 = interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i2 != 0 goto label33;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSpnDisplay: overwriting plmn from ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to null as radio state is off");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r14);

        r66 = null;

        goto label33;

     label33:
        if i0 != 1 goto label34;

        $r9 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040442);

        r66 = interfaceinvoke $r10.<java.lang.CharSequence: java.lang.String toString()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSpnDisplay: radio is on but out of svc, set plmn=\'");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r12);

        r67 = null;

        r60 = null;

        goto label35;

     label34:
        r67 = null;

        r60 = null;

     label35:
        $r78 = new com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder;

        specialinvoke $r78.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: void <init>()>();

        $r79 = virtualinvoke $r78.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setSpn(java.lang.String)>(r67);

        $r80 = virtualinvoke $r79.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setDataSpn(java.lang.String)>(r60);

        $r81 = virtualinvoke $r80.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setShowSpn(boolean)>(z13);

        $r82 = virtualinvoke $r81.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setPlmn(java.lang.String)>(r66);

        $r83 = virtualinvoke $r82.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setShowPlmn(boolean)>(z17);

        $r84 = virtualinvoke $r83.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData build()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void notifySpnDisplayUpdate(com.android.internal.telephony.cdnr.CarrierDisplayNameData)>($r84);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("updateSpnDisplayLegacy-");

        return;
    }

    protected final boolean alwaysOnHomeNetwork(android.os.BaseBundle)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.BaseBundle r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.BaseBundle;

        $z0 = virtualinvoke r1.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("force_home_network_bool");

        return $z0;
    }

    protected void cancelPollState()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int[] $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = newarray (int)[1];

        r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext> = $r1;

        return;
    }

    protected void checkCorrectThread()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.Thread $r1, $r3;
        android.os.Looper $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Looper getLooper()>();

        $r3 = virtualinvoke $r2.<android.os.Looper: java.lang.Thread getThread()>();

        if $r1 != $r3 goto label1;

        return;

     label1:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("ServiceStateTracker must be used from within one thread");

        throw $r4;
    }

    java.util.ArrayList convertEarfcnStringArrayToPairList(java.lang.String[])
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1, $i2, $i3, i4;
        java.util.ArrayList $r2;
        java.lang.String $r3, $r4, $r5;
        java.lang.Integer $r6, $r7;
        java.lang.Throwable $r8, $r9;
        java.lang.String[] r10, r11;
        android.util.Pair r12;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r10 := @parameter0: java.lang.String[];

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        if r10 == null goto label10;

        i4 = 0;

     label01:
        $i2 = lengthof r10;

        if i4 >= $i2 goto label10;

     label02:
        $r3 = r10[i4];

        r11 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        $i3 = lengthof r11;

        if $i3 == 2 goto label04;

     label03:
        return null;

     label04:
        $r4 = r11[0];

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r5 = r11[1];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label05:
        if i0 <= i1 goto label06;

        return null;

     label06:
        r12 = new android.util.Pair;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        specialinvoke r12.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, $r7);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label07:
        i4 = i4 + 1;

        goto label01;

     label08:
        $r8 := @caughtexception;

        return null;

     label09:
        $r9 := @caughtexception;

        return null;

     label10:
        return $r2;

        catch java.util.regex.PatternSyntaxException from label02 to label03 with label09;
        catch java.lang.NumberFormatException from label02 to label03 with label08;
        catch java.util.regex.PatternSyntaxException from label04 to label05 with label09;
        catch java.lang.NumberFormatException from label04 to label05 with label08;
        catch java.util.regex.PatternSyntaxException from label06 to label07 with label09;
        catch java.lang.NumberFormatException from label06 to label07 with label08;
    }

    public void disableLocationUpdates()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mWantContinuousLocationUpdates> = 0;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mWantSingleLocationUpdate>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void setLocationUpdates(boolean,android.os.Message)>(0, null);

     label1:
        return;
    }

    protected void disableSingleLocationUpdate()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mWantSingleLocationUpdate> = 0;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mWantContinuousLocationUpdates>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void setLocationUpdates(boolean,android.os.Message)>(0, null);

     label1:
        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.CarrierServiceStateTracker r1;
        com.android.internal.telephony.CommandsInterface $r2, $r4, $r5, $r8;
        com.android.internal.telephony.uicc.UiccController $r3;
        com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener $r6;
        android.telephony.SubscriptionManager $r7;
        com.android.internal.telephony.GsmCdmaPhone $r9;
        com.android.internal.telephony.CarrierActionAgent $r10;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void unSetOnSignalStrengthUpdate(android.os.Handler)>(r0);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        virtualinvoke $r3.<com.android.internal.telephony.uicc.UiccController: void unregisterForIccChanged(android.os.Handler)>(r0);

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void unregisterForCellInfoList(android.os.Handler)>(r0);

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void unregisterForPhysicalChannelConfiguration(android.os.Handler)>(r0);

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SubscriptionManager mSubscriptionManager>;

        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener mOnSubscriptionsChangedListener>;

        virtualinvoke $r7.<android.telephony.SubscriptionManager: void removeOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>($r6);

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void unregisterForImsNetworkStateChanged(android.os.Handler)>(r0);

        $r9 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CarrierActionAgent getCarrierActionAgent()>();

        virtualinvoke $r10.<com.android.internal.telephony.CarrierActionAgent: void unregisterForCarrierAction(android.os.Handler,int)>(r0, 1);

        r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CarrierServiceStateTracker mCSST>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.telephony.CarrierServiceStateTracker: void dispose()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CarrierServiceStateTracker mCSST> = null;

     label1:
        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        java.lang.StringBuilder $r4, $r8, $r13, $r18, $r22, $r27, $r34, $r38, $r42, $r47, $r52, $r57, $r61, $r65, $r71, $r75, $r79, $r83, $r87, $r91, $r95, $r99, $r103, $r108, $r113, $r117, $r121, $r126, $r131, $r136, $r140, $r145, $r149, $r153, $r157, $r161, $r165, $r169, $r174, $r179, $r184, $r189, $r194, $r198, $r202, $r206, $r211, $r216, $r221, $r225, $r229, $r233, $r237, $r241, $r245, $r249, $r253, $r257;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String $r7, $r12, $r17, $r21, $r26, $r33, $r37, $r41, $r46, $r51, $r56, $r60, $r64, $r68, $r70, $r74, $r78, $r82, $r86, $r90, $r94, $r98, $r102, $r106, $r112, $r116, $r120, $r125, $r128, $r130, $r133, $r135, $r139, $r142, $r144, $r148, $r152, $r156, $r160, $r164, $r168, $r171, $r173, $r178, $r183, $r186, $r188, $r191, $r193, $r197, $r201, $r205, $r210, $r213, $r215, $r218, $r220, $r224, $r228, $r232, $r236, $r240, $r244, $r248, $r252, $r256, $r261;
        android.telephony.ServiceState $r10, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        com.android.internal.telephony.RestrictedState $r24, $r54;
        int[] $r29, $r176, $r181, r290;
        android.telephony.SignalStrength $r44, $r49;
        android.telephony.CellIdentity $r67;
        long $l2;
        com.android.internal.telephony.NitzStateMachine $r107, $r283;
        com.android.internal.telephony.NitzData $r110;
        android.app.Notification $r123;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r208;
        com.android.internal.telephony.cdma.EriManager $r259;
        com.android.internal.telephony.LocaleTracker $r262;
        com.android.internal.telephony.IndentingPrintWriter $r263;
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver $r264;
        com.android.internal.telephony.LocalLog $r266, $r269, $r272, $r275, $r278, $r281;
        java.io.PrintWriter r284;
        java.io.Serializable r291;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: java.io.FileDescriptor;

        r284 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>("ServiceStateTracker:");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSubId=");

        $i0 = r0.<com.android.internal.telephony.ServiceStateTracker: int mSubId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSS=");

        $r10 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewSS=");

        $r15 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVoiceCapable=");

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mVoiceCapable>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRestrictedState=");

        $r24 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPollingContext=");

        $r29 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        r290 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        if r290 == null goto label1;

        $i14 = r290[0];

        r291 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        goto label2;

     label1:
        r291 = "";

     label2:
        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r291);

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDesiredPowerState=");

        $z1 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDesiredPowerState>;

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDontPollSignalStrength=");

        $z2 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDontPollSignalStrength>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSignalStrength=");

        $r44 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mSignalStrength>;

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r46);

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastSignalStrength=");

        $r49 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mLastSignalStrength>;

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r51 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r51);

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRestrictedState=");

        $r54 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r54);

        $r56 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r56);

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingRadioPowerOffAfterDataOff=");

        $z3 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff>;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r60);

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingRadioPowerOffAfterDataOffTag=");

        $i1 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPendingRadioPowerOffAfterDataOffTag>;

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCellIdentity=");

        $r67 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity mCellIdentity>;

        $r68 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)>(0, $r67);

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r70);

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastCellInfoReqTime=");

        $l2 = r0.<com.android.internal.telephony.ServiceStateTracker: long mLastCellInfoReqTime>;

        virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r74 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r74);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void dumpCellInfoList(java.io.PrintWriter)>(r284);

        virtualinvoke r284.<java.io.PrintWriter: void flush()>();

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPreferredNetworkType=");

        $i3 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPreferredNetworkType>;

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r78 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r78);

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMaxDataCalls=");

        $i4 = r0.<com.android.internal.telephony.ServiceStateTracker: int mMaxDataCalls>;

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r82);

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewMaxDataCalls=");

        $i5 = r0.<com.android.internal.telephony.ServiceStateTracker: int mNewMaxDataCalls>;

        virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r86 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r86);

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mReasonDataDenied=");

        $i6 = r0.<com.android.internal.telephony.ServiceStateTracker: int mReasonDataDenied>;

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r90 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r90);

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewReasonDataDenied=");

        $i7 = r0.<com.android.internal.telephony.ServiceStateTracker: int mNewReasonDataDenied>;

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r94 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r94);

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mGsmVoiceRoaming=");

        $z4 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mGsmVoiceRoaming>;

        virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r98 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r98);

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mGsmDataRoaming=");

        $z5 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mGsmDataRoaming>;

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r102 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r102);

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mEmergencyOnly=");

        $z6 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mEmergencyOnly>;

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r106 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r106);

        virtualinvoke r284.<java.io.PrintWriter: void flush()>();

        $r107 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzStateMachine mNitzState>;

        interfaceinvoke $r107.<com.android.internal.telephony.NitzStateMachine: void dumpState(java.io.PrintWriter)>(r284);

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastNitzData=");

        $r110 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzData mLastNitzData>;

        virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r110);

        $r112 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r112);

        virtualinvoke r284.<java.io.PrintWriter: void flush()>();

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mStartedGprsRegCheck=");

        $z7 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mStartedGprsRegCheck>;

        virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r116 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r116);

        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mReportedGprsNoReg=");

        $z8 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mReportedGprsNoReg>;

        virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r120 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r120);

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNotification=");

        $r123 = r0.<com.android.internal.telephony.ServiceStateTracker: android.app.Notification mNotification>;

        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r123);

        $r125 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r125);

        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurSpn=");

        $r128 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurSpn>;

        virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r128);

        $r130 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r130);

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurDataSpn=");

        $r133 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurDataSpn>;

        virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r133);

        $r135 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r135);

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurShowSpn=");

        $z9 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mCurShowSpn>;

        virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        $r139 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r139);

        $r140 = new java.lang.StringBuilder;

        specialinvoke $r140.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurPlmn=");

        $r142 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurPlmn>;

        virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r142);

        $r144 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r144);

        $r145 = new java.lang.StringBuilder;

        specialinvoke $r145.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurShowPlmn=");

        $z10 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mCurShowPlmn>;

        virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        $r148 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r148);

        virtualinvoke r284.<java.io.PrintWriter: void flush()>();

        $r149 = new java.lang.StringBuilder;

        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurrentOtaspMode=");

        $i8 = r0.<com.android.internal.telephony.ServiceStateTracker: int mCurrentOtaspMode>;

        virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r152 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r152);

        $r153 = new java.lang.StringBuilder;

        specialinvoke $r153.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRoamingIndicator=");

        $i9 = r0.<com.android.internal.telephony.ServiceStateTracker: int mRoamingIndicator>;

        virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r156 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r156);

        $r157 = new java.lang.StringBuilder;

        specialinvoke $r157.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsInPrl=");

        $z11 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsInPrl>;

        virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r160 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r160);

        $r161 = new java.lang.StringBuilder;

        specialinvoke $r161.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDefaultRoamingIndicator=");

        $i10 = r0.<com.android.internal.telephony.ServiceStateTracker: int mDefaultRoamingIndicator>;

        virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r164 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r164);

        $r165 = new java.lang.StringBuilder;

        specialinvoke $r165.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRegistrationState=");

        $i11 = r0.<com.android.internal.telephony.ServiceStateTracker: int mRegistrationState>;

        virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r168 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r168);

        $r169 = new java.lang.StringBuilder;

        specialinvoke $r169.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMdn=");

        $r171 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMdn>;

        virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r171);

        $r173 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r173);

        $r174 = new java.lang.StringBuilder;

        specialinvoke $r174.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHomeSystemId=");

        $r176 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeSystemId>;

        virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r176);

        $r178 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r178);

        $r179 = new java.lang.StringBuilder;

        specialinvoke $r179.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHomeNetworkId=");

        $r181 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeNetworkId>;

        virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r181);

        $r183 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r183);

        $r184 = new java.lang.StringBuilder;

        specialinvoke $r184.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMin=");

        $r186 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMin>;

        virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r186);

        $r188 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r188);

        $r189 = new java.lang.StringBuilder;

        specialinvoke $r189.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPrlVersion=");

        $r191 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mPrlVersion>;

        virtualinvoke $r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r191);

        $r193 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r193);

        $r194 = new java.lang.StringBuilder;

        specialinvoke $r194.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsMinInfoReady=");

        $z12 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsMinInfoReady>;

        virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        $r197 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r197);

        $r198 = new java.lang.StringBuilder;

        specialinvoke $r198.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsEriTextLoaded=");

        $z13 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsEriTextLoaded>;

        virtualinvoke $r198.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r201 = virtualinvoke $r198.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r201);

        $r202 = new java.lang.StringBuilder;

        specialinvoke $r202.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsSubscriptionFromRuim=");

        $z14 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z14);

        $r205 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r205);

        $r206 = new java.lang.StringBuilder;

        specialinvoke $r206.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCdmaSSM=");

        $r208 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r208);

        $r210 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r210);

        $r211 = new java.lang.StringBuilder;

        specialinvoke $r211.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRegistrationDeniedReason=");

        $r213 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mRegistrationDeniedReason>;

        virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r213);

        $r215 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r215);

        $r216 = new java.lang.StringBuilder;

        specialinvoke $r216.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurrentCarrier=");

        $r218 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mCurrentCarrier>;

        virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r218);

        $r220 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r220);

        virtualinvoke r284.<java.io.PrintWriter: void flush()>();

        $r221 = new java.lang.StringBuilder;

        specialinvoke $r221.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mImsRegistered=");

        $z15 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mImsRegistered>;

        virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z15);

        $r224 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r224);

        $r225 = new java.lang.StringBuilder;

        specialinvoke $r225.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mImsRegistrationOnOff=");

        $z16 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mImsRegistrationOnOff>;

        virtualinvoke $r225.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z16);

        $r228 = virtualinvoke $r225.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r228);

        $r229 = new java.lang.StringBuilder;

        specialinvoke $r229.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAlarmSwitch=");

        $z17 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mAlarmSwitch>;

        virtualinvoke $r229.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z17);

        $r232 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r232);

        $r233 = new java.lang.StringBuilder;

        specialinvoke $r233.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRadioDisabledByCarrier");

        $z18 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mRadioDisabledByCarrier>;

        virtualinvoke $r233.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z18);

        $r236 = virtualinvoke $r233.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r236);

        $r237 = new java.lang.StringBuilder;

        specialinvoke $r237.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPowerOffDelayNeed=");

        $z19 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPowerOffDelayNeed>;

        virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z19);

        $r240 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r240);

        $r241 = new java.lang.StringBuilder;

        specialinvoke $r241.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r241.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDeviceShuttingDown=");

        $z20 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDeviceShuttingDown>;

        virtualinvoke $r241.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z20);

        $r244 = virtualinvoke $r241.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r244);

        $r245 = new java.lang.StringBuilder;

        specialinvoke $r245.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r245.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSpnUpdatePending=");

        $z21 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mSpnUpdatePending>;

        virtualinvoke $r245.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z21);

        $r248 = virtualinvoke $r245.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r248);

        $r249 = new java.lang.StringBuilder;

        specialinvoke $r249.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLteRsrpBoost=");

        $i12 = r0.<com.android.internal.telephony.ServiceStateTracker: int mLteRsrpBoost>;

        virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r252 = virtualinvoke $r249.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r252);

        $r253 = new java.lang.StringBuilder;

        specialinvoke $r253.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCellInfoMinIntervalMs=");

        $i13 = r0.<com.android.internal.telephony.ServiceStateTracker: int mCellInfoMinIntervalMs>;

        virtualinvoke $r253.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r256 = virtualinvoke $r253.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r256);

        $r257 = new java.lang.StringBuilder;

        specialinvoke $r257.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mEriManager=");

        $r259 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.EriManager mEriManager>;

        virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r259);

        $r261 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r284.<java.io.PrintWriter: void println(java.lang.String)>($r261);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void dumpEarfcnPairList(java.io.PrintWriter)>(r284);

        $r262 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocaleTracker mLocaleTracker>;

        virtualinvoke $r262.<com.android.internal.telephony.LocaleTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r284, r2);

        $r263 = new com.android.internal.telephony.IndentingPrintWriter;

        specialinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r284, "    ");

        $r264 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        virtualinvoke $r264.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void dump(com.android.internal.telephony.IndentingPrintWriter)>($r263);

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>(" Carrier Display Name update records:");

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r266 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mCdnrLogs>;

        virtualinvoke $r266.<com.android.internal.telephony.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, $r263, r2);

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>(" Roaming Log:");

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r269 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mRoamingLog>;

        virtualinvoke $r269.<com.android.internal.telephony.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, $r263, r2);

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>(" Attach Log:");

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r272 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mAttachLog>;

        virtualinvoke $r272.<com.android.internal.telephony.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, $r263, r2);

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>(" Phone Change Log:");

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r275 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mPhoneTypeLog>;

        virtualinvoke $r275.<com.android.internal.telephony.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, $r263, r2);

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>(" Rat Change Log:");

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r278 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mRatLog>;

        virtualinvoke $r278.<com.android.internal.telephony.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, $r263, r2);

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>(" Radio power Log:");

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r281 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mRadioPowerLog>;

        virtualinvoke $r281.<com.android.internal.telephony.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, $r263, r2);

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        $r283 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzStateMachine mNitzState>;

        interfaceinvoke $r283.<com.android.internal.telephony.NitzStateMachine: void dumpLogs(java.io.FileDescriptor,com.android.internal.telephony.IndentingPrintWriter,java.lang.String[])>(r1, $r263, r2);

        virtualinvoke $r263.<com.android.internal.telephony.IndentingPrintWriter: void flush()>();

        return;
    }

    public void enableLocationUpdates()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0, $z1;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mWantSingleLocationUpdate>;

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mWantContinuousLocationUpdates>;

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mWantContinuousLocationUpdates> = 1;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(18);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void setLocationUpdates(boolean,android.os.Message)>(1, $r2);

        return;

     label2:
        return;
    }

    public void enableSingleLocationUpdate()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0, $z1;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mWantSingleLocationUpdate>;

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mWantContinuousLocationUpdates>;

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mWantSingleLocationUpdate> = 1;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(18);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void setLocationUpdates(boolean,android.os.Message)>(1, $r2);

        return;

     label2:
        return;
    }

    public java.lang.String filterOperatorNameByPattern(java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, r5;
        java.util.regex.Matcher r2;
        java.util.regex.Pattern $r3, $r4;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.regex.Pattern mOperatorNameStringPattern>;

        if $r3 == null goto label4;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        goto label4;

     label1:
        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.regex.Pattern mOperatorNameStringPattern>;

        r2 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        r5 = r1;

        $z1 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label3;

        $i0 = virtualinvoke r2.<java.util.regex.Matcher: int groupCount()>();

        if $i0 <= 0 goto label2;

        r5 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        goto label3;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("filterOperatorNameByPattern: pattern no group");

        r5 = r1;

     label3:
        return r5;

     label4:
        return r1;
    }

    public java.util.List getAllCellInfo()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.util.List $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastCellInfoList>;

        return $r1;
    }

    public int getCarrierNameDisplayBitmask(android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState r1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0, $z1, $z2, z3, z4;
        int $i0, $i1, i2;
        android.os.PersistableBundle r5;
        com.android.internal.telephony.uicc.IccRecords r6, r7;
        java.lang.String[] r8;
        byte b3;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.telephony.ServiceState;

        r5 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        $r2 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getOperatorBrandOverride()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label01;

        return 1;

     label01:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getServiceProviderName()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z1 == 0 goto label02;

        return 2;

     label02:
        z3 = virtualinvoke r5.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("spn_display_rule_use_roaming_from_service_state_bool");

        r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if r6 != null goto label03;

        i2 = 0;

        goto label04;

     label03:
        i2 = virtualinvoke r6.<com.android.internal.telephony.uicc.IccRecords: int getCarrierNameDisplayCondition()>();

     label04:
        if z3 == 0 goto label05;

        z4 = virtualinvoke r1.<android.telephony.ServiceState: boolean getRoaming()>();

        goto label08;

     label05:
        r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if r7 == null goto label06;

        r8 = virtualinvoke r7.<com.android.internal.telephony.uicc.IccRecords: java.lang.String[] getHomePlmns()>();

        goto label07;

     label06:
        r8 = null;

     label07:
        $r4 = virtualinvoke r1.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $z2 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r8, $r4);

        z4 = $z2 ^ 1;

     label08:
        if z4 == 0 goto label09;

        b3 = 2;

        $i1 = i2 & 2;

        if $i1 != 2 goto label11;

        b3 = 2 | 1;

        goto label11;

     label09:
        $i0 = i2 & 1;

        if $i0 != 1 goto label10;

        b3 = 1 | 2;

        goto label11;

     label10:
        b3 = 1;

     label11:
        return b3;
    }

    java.lang.String getCdmaEriText(int, int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1;
        com.android.internal.telephony.cdma.EriManager $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.EriManager mEriManager>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.cdma.EriManager: java.lang.String getCdmaEriText(int,int)>(i0, i1);

        return $r2;
    }

    public java.lang.String getCdmaMin()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMin>;

        return $r1;
    }

    public android.telephony.CellIdentity getCellIdentity()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.util.List $r1;
        com.android.internal.telephony.GsmCdmaPhone $r2;
        int $i0;
        android.telephony.CellIdentityGsm $r3;
        android.telephony.CellIdentityCdma $r4;
        android.telephony.CellIdentity r5, r6, r7;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity mCellIdentity>;

        if r5 == null goto label1;

        return r5;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List getAllCellInfo()>();

        r6 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity getCellIdentityFromCellInfo(java.util.List)>($r1);

        if r6 == null goto label2;

        return r6;

     label2:
        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneType()>();

        if $i0 != 2 goto label3;

        $r4 = new android.telephony.CellIdentityCdma;

        specialinvoke $r4.<android.telephony.CellIdentityCdma: void <init>()>();

        r7 = $r4;

        goto label4;

     label3:
        $r3 = new android.telephony.CellIdentityGsm;

        specialinvoke $r3.<android.telephony.CellIdentityGsm: void <init>()>();

        r7 = $r3;

     label4:
        return r7;
    }

    protected int getCombinedRegState(android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState r1;
        int i0, i1, $i2, i3;
        com.android.internal.telephony.GsmCdmaPhone $r2, $r4;
        com.android.internal.telephony.Phone $r3, $r5;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.telephony.ServiceState;

        i0 = virtualinvoke r1.<android.telephony.ServiceState: int getState()>();

        i1 = virtualinvoke r1.<android.telephony.ServiceState: int getDataRegistrationState()>();

        if i0 == 1 goto label1;

        i3 = i0;

        if i0 != 3 goto label3;

     label1:
        i3 = i0;

        if i1 != 0 goto label3;

        $i2 = virtualinvoke r1.<android.telephony.ServiceState: int getDataNetworkType()>();

        if $i2 != 18 goto label2;

        i3 = i0;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone getImsPhone()>();

        if $r3 == null goto label3;

        i3 = i0;

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.Phone getImsPhone()>();

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.Phone: boolean isWifiCallingEnabled()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("getCombinedRegState: return STATE_IN_SERVICE for IWLAN as Data is in service and WFC is enabled");

        i3 = i1;

        goto label3;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("getCombinedRegState: return STATE_IN_SERVICE as Data is in service");

        i3 = i1;

     label3:
        return i3;
    }

    public int getCurrentDataConnectionState()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i0 = virtualinvoke $r1.<android.telephony.ServiceState: int getDataRegistrationState()>();

        return $i0;
    }

    public boolean getDesiredPowerState()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDesiredPowerState>;

        return $z0;
    }

    protected java.lang.String getHomeOperatorNumeric()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, r8;
        com.android.internal.telephony.GsmCdmaPhone $r2, $r5, $r7;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.telephony.TelephonyManager $r6;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r6 = (android.telephony.TelephonyManager) $r4;

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        r1 = virtualinvoke $r6.<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumericForPhone(int)>($i0);

        r8 = r1;

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 != 0 goto label1;

        r8 = r1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label1;

        r8 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.cdma.home.operator.numeric", "");

     label1:
        return r8;
    }

    public java.lang.String getImsi()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, $r8, $r11, $r13;
        com.android.internal.telephony.GsmCdmaPhone $r3, $r6;
        android.content.Context $r4;
        java.lang.Object $r5;
        android.telephony.TelephonyManager $r7;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r9;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r7 = (android.telephony.TelephonyManager) $r5;

        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        r1 = virtualinvoke $r7.<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumericForPhone(int)>($i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r8 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getCdmaMin()>();

        if $r8 == null goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getCdmaMin()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

     label1:
        return null;
    }

    public com.android.internal.telephony.LocaleTracker getLocaleTracker()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.LocaleTracker $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocaleTracker mLocaleTracker>;

        return $r1;
    }

    public java.lang.String getMdnNumber()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMdn>;

        return $r1;
    }

    public java.util.Set getNrContextIds()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.util.Iterator r2;
        int i0, $i1, i2;
        java.util.HashSet $r3;
        java.util.List $r4, $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;
        java.lang.Integer $r7;
        android.telephony.PhysicalChannelConfig r8;
        int[] r9;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastPhysicalChannelConfigList>;

        $z0 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: boolean isEmpty(java.util.Collection)>($r4);

        if $z0 != 0 goto label4;

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastPhysicalChannelConfigList>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.telephony.PhysicalChannelConfig) $r6;

        $z2 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isNrPhysicalChannelConfig(android.telephony.PhysicalChannelConfig)>(r8);

        if $z2 == 0 goto label3;

        r9 = virtualinvoke r8.<android.telephony.PhysicalChannelConfig: int[] getContextIds()>();

        i0 = lengthof r9;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $i1 = r9[i2];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r7);

        i2 = i2 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        return $r3;
    }

    public int getOtasp()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r3, $r17;
        java.lang.String $r5, $r8, $r11, $r12, $r13, $r14, r15, $r19;
        int $i0;
        byte b1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: boolean getIccRecordsLoaded()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("getOtasp: otasp uninitialized due to sim not loaded");

        return 0;

     label1:
        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("getOtasp: otasp not needed for GSM");

        return 3;

     label2:
        $z2 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z2 == 0 goto label3;

        $r14 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMin>;

        if $r14 != null goto label3;

        return 2;

     label3:
        r15 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMin>;

        if r15 == null goto label7;

        $i0 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i0 >= 6 goto label4;

        goto label7;

     label4:
        $r11 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMin>;

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("1111110111");

        if $z3 != 0 goto label6;

        $r12 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMin>;

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("000000");

        if $z4 != 0 goto label6;

        $z5 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("test_cdma_setup", 0);

        if $z5 == 0 goto label5;

        goto label6;

     label5:
        b1 = 3;

        goto label8;

     label6:
        b1 = 2;

        goto label8;

     label7:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOtasp: bad mMin=\'");

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMin>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r8);

        b1 = 1;

     label8:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOtasp: state=");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r19);

        return b1;
    }

    protected com.android.internal.telephony.Phone getPhone()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        return $r1;
    }

    protected int getPhoneId()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        return $i0;
    }

    public java.util.List getPhysicalChannelConfigList()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.util.List $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastPhysicalChannelConfigList>;

        return $r1;
    }

    public boolean getPowerStateFromCarrier()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mRadioDisabledByCarrier>;

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public java.lang.String getPrlVersion()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mPrlVersion>;

        return $r1;
    }

    public java.lang.String getServiceProviderName()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.PersistableBundle r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2, r3, r5;
        com.android.internal.telephony.uicc.IccRecords r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r3 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getOperatorBrandOverride()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label1;

        return r3;

     label1:
        r4 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if r4 == null goto label2;

        r5 = virtualinvoke r4.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getServiceProviderName()>();

        goto label3;

     label2:
        r5 = "";

     label3:
        r1 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        $z1 = virtualinvoke r1.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("carrier_name_override_bool");

        if $z1 != 0 goto label5;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z2 == 0 goto label4;

        goto label5;

     label4:
        return r5;

     label5:
        $r2 = virtualinvoke r1.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("carrier_name_string");

        return $r2;
    }

    public android.telephony.ServiceState getServiceState()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState $r1, $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = new android.telephony.ServiceState;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        specialinvoke $r1.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>($r2);

        return $r1;
    }

    public android.telephony.SignalStrength getSignalStrength()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;
        android.telephony.SignalStrength $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean shouldRefreshSignalStrength()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("SST.getSignalStrength() refreshing signal strength.");

        $r2 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(10);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

     label1:
        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mSignalStrength>;

        return $r1;
    }

    public java.lang.String getSystemProperty(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, r2, $r4;
        com.android.internal.telephony.GsmCdmaPhone $r3;
        int $i0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r4 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(int,java.lang.String,java.lang.String)>($i0, r1, r2);

        return $r4;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.util.List r1, $r48, $r49, r214, r223, r224;
        java.util.Iterator r2;
        android.os.Message r3, $r46, $r82, $r84, $r123, $r137, $r141, $r158, $r193, r209, r212, r240, r242;
        java.lang.Object $r4, $r5, $r9, $r11, $r31, $r33, $r41, $r43, $r47, $r50, $r52, $r54, $r55, $r66, $r68, $r77, $r79, $r86, $r88, $r125, $r134, $r135, $r136, $r140, $r142, $r144, $r146, $r148, $r150, $r152, $r156, $r169, $r171, $r175, $r178, $r179, $r182, $r183, $r184, $r186, $r187, $r189, $r194, $r196;
        android.telephony.CellIdentity $r6, $r132, $r174, r245;
        java.lang.Throwable $r7, $r10, $r32, $r42, $r53, $r59, $r67, $r78, $r87, $r139, $r147, $r154, $r170, $r177, $r205, $r206, $r207, $r208, r222;
        com.android.internal.telephony.GsmCdmaPhone $r12, $r18, $r20, $r22, $r56, $r85, $r106, $r114, $r121, $r124, $r127, $r165, $r173, $r176, $r181, $r198, r215;
        android.telephony.ServiceState $r13, $r14, $r16, $r17, $r21, $r24, $r29, $r30, $r128, $r130, r238;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z22, z23, z24, z25, $z26;
        int[] $r15, $r44, $r69, $r80, $r151, $r180;
        com.android.internal.telephony.metrics.TelephonyMetrics $r19;
        int $i0, $i1, $i2, $i3, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, i35, i36, i37;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r23;
        com.android.internal.telephony.RegistrantList $r25, $r26, $r40;
        com.android.internal.telephony.CommandsInterface $r27, $r28, $r45, $r81, $r83, $r122, $r145, $r149, $r192, $r195, $r199;
        java.lang.Boolean $r34;
        java.lang.StringBuilder $r35, $r57, $r89, $r98, $r107, $r161, $r201, r229;
        java.lang.String $r38, $r61, $r70, $r76, $r92, $r93, $r94, $r95, $r96, $r97, $r100, $r102, $r105, $r110, $r116, $r117, $r118, $r119, $r120, $r131, $r164, $r191, $r204;
        com.android.internal.telephony.ProxyController $r39;
        long $l4, $l5, $l6, $l29;
        byte $b7;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState $r62, $r63;
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver $r64, $r65, $r113, $r168;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r71, $r200;
        com.android.internal.telephony.uicc.IccRecords $r103, $r104, $r111, $r115, $r166;
        com.android.internal.telephony.uicc.RuimRecords $r112, r237;
        android.os.AsyncResult $r126, $r138, $r143, $r153, $r197, r211, r213, r216, r219, r220, r228, r231, r232, r239, r241, r244, r246, r247, r248, r249;
        java.lang.Object[] $r129, $r185, $r188;
        java.lang.Integer $r133;
        android.util.SparseArray $r155;
        com.android.internal.telephony.NetworkRegistrationManager $r157;
        com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener $r159;
        java.util.concurrent.atomic.AtomicInteger $r160;
        com.android.internal.telephony.uicc.SIMRecords $r167;
        android.telephony.NetworkRegistrationInfo $r172;
        java.lang.Long $r190;
        com.android.internal.telephony.uicc.UiccCardApplication r227;
        java.lang.String[] r233;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r209 := @parameter0: android.os.Message;

        i35 = r209.<android.os.Message: int what>;

        z23 = 0;

        tableswitch(i35)
        {
            case 1: goto label101;
            case 2: goto label100;
            case 3: goto label098;
            case 4: goto label097;
            case 5: goto label097;
            case 6: goto label097;
            case 7: goto label097;
            case 8: goto label001;
            case 9: goto label001;
            case 10: goto label096;
            case 11: goto label095;
            case 12: goto label094;
            case 13: goto label001;
            case 14: goto label091;
            case 15: goto label089;
            case 16: goto label088;
            case 17: goto label087;
            case 18: goto label086;
            case 19: goto label083;
            case 20: goto label082;
            case 21: goto label081;
            case 22: goto label079;
            case 23: goto label078;
            case 24: goto label001;
            case 25: goto label001;
            case 26: goto label075;
            case 27: goto label071;
            case 28: goto label001;
            case 29: goto label001;
            case 30: goto label001;
            case 31: goto label001;
            case 32: goto label001;
            case 33: goto label001;
            case 34: goto label067;
            case 35: goto label066;
            case 36: goto label001;
            case 37: goto label063;
            case 38: goto label054;
            case 39: goto label053;
            case 40: goto label052;
            case 41: goto label001;
            case 42: goto label050;
            case 43: goto label027;
            case 44: goto label027;
            case 45: goto label026;
            case 46: goto label025;
            case 47: goto label023;
            case 48: goto label022;
            case 49: goto label013;
            case 50: goto label101;
            case 51: goto label012;
            case 52: goto label001;
            case 53: goto label011;
            case 54: goto label010;
            case 55: goto label006;
            case 56: goto label004;
            case 57: goto label003;
            case 58: goto label002;
            default: goto label001;
        };

     label001:
        $r201 = new java.lang.StringBuilder;

        specialinvoke $r201.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message with number: ");

        $i34 = r209.<android.os.Message: int what>;

        virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i34);

        $r204 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r204);

        goto label103;

     label002:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void pollStateInternal(boolean)>(0);

        goto label103;

     label003:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void onCarrierConfigChanged()>();

        goto label103;

     label004:
        $r4 = r209.<android.os.Message: java.lang.Object obj>;

        r211 = (android.os.AsyncResult) $r4;

        if r211 != null goto label005;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>("Invalid null response to getCellIdentity!");

        goto label103;

     label005:
        $r5 = r211.<android.os.AsyncResult: java.lang.Object userObj>;

        r212 = (android.os.Message) $r5;

        $r6 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity getCellIdentity()>();

        $r7 = r211.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r212, $r6, $r7);

        virtualinvoke r212.<android.os.Message: void sendToTarget()>();

        goto label103;

     label006:
        $r9 = r209.<android.os.Message: java.lang.Object obj>;

        r213 = (android.os.AsyncResult) $r9;

        $r10 = r213.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r10 != null goto label103;

        $r11 = r213.<android.os.AsyncResult: java.lang.Object result>;

        r214 = (java.util.List) $r11;

        $r12 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r12.<com.android.internal.telephony.GsmCdmaPhone: void notifyPhysicalChannelConfiguration(java.util.List)>(r214);

        r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastPhysicalChannelConfigList> = r214;

        z24 = 0;

        $r13 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean updateNrStateFromPhysicalChannelConfigs(java.util.List,android.telephony.ServiceState)>(r214, $r13);

        if $z0 == 0 goto label007;

        $r26 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNrStateChangedRegistrants>;

        virtualinvoke $r26.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        z24 = 1;

     label007:
        $r14 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z1 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean updateNrFrequencyRangeFromPhysicalChannelConfigs(java.util.List,android.telephony.ServiceState)>(r214, $r14);

        if $z1 == 0 goto label008;

        $r25 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNrFrequencyChangedRegistrants>;

        virtualinvoke $r25.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        z24 = 1;

     label008:
        $r15 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int[] getBandwidthsFromConfigs(java.util.List)>(r214);

        $r16 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z2 = staticinvoke <com.android.internal.telephony.RatRatcheter: boolean updateBandwidths(int[],android.telephony.ServiceState)>($r15, $r16);

        $z3 = z24 | $z2;

        if $z3 == 0 goto label009;

        $r18 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r17 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r18.<com.android.internal.telephony.GsmCdmaPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>($r17);

        $r19 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        $r20 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r20.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r21 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r19.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeServiceStateChanged(int,android.telephony.ServiceState)>($i0, $r21);

        $r22 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r23 = virtualinvoke $r22.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        $r24 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r23.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onServiceStateChanged(android.telephony.ServiceState)>($r24);

     label009:
        goto label103;

     label010:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_RADIO_POWER_OFF_DONE");

        $z4 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDeviceShuttingDown>;

        if $z4 == 0 goto label103;

        $r27 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i1 = interfaceinvoke $r27.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i1 == 2 goto label103;

        $r28 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r28.<com.android.internal.telephony.CommandsInterface: void requestShutdown(android.os.Message)>(null);

        goto label103;

     label011:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_IMS_SERVICE_STATE_CHANGED");

        $r29 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i2 = virtualinvoke $r29.<android.telephony.ServiceState: int getState()>();

        if $i2 == 0 goto label103;

        r215 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r30 = virtualinvoke r215.<com.android.internal.telephony.GsmCdmaPhone: android.telephony.ServiceState getServiceState()>();

        virtualinvoke r215.<com.android.internal.telephony.GsmCdmaPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>($r30);

        goto label103;

     label012:
        $r31 = r209.<android.os.Message: java.lang.Object obj>;

        r216 = (android.os.AsyncResult) $r31;

        $r32 = r216.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r32 != null goto label103;

        $r33 = r216.<android.os.AsyncResult: java.lang.Object result>;

        $r34 = (java.lang.Boolean) $r33;

        z25 = virtualinvoke $r34.<java.lang.Boolean: boolean booleanValue()>();

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_RADIO_POWER_FROM_CARRIER: ");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z25);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r38);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setRadioPowerFromCarrier(boolean)>(z25);

        goto label103;

     label013:
        i36 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>();

        $r39 = staticinvoke <com.android.internal.telephony.ProxyController: com.android.internal.telephony.ProxyController getInstance()>();

        virtualinvoke $r39.<com.android.internal.telephony.ProxyController: void unregisterForAllDataDisconnected(int,android.os.Handler)>(i36, r0);

        entermonitor r0;

     label014:
        $z5 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff>;

        if $z5 == 0 goto label016;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_ALL_DATA_DISCONNECTED, turn radio off now.");

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void hangupAndPowerOff()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff> = 0;

     label015:
        goto label017;

     label016:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_ALL_DATA_DISCONNECTED is stale");

     label017:
        exitmonitor r0;

     label018:
        goto label103;

     label019:
        $r206 := @caughtexception;

     label020:
        exitmonitor r0;

     label021:
        throw $r206;

     label022:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_IMS_CAPABILITY_CHANGED");

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateSpnDisplay()>();

        $r40 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mImsCapabilityChangedRegistrants>;

        virtualinvoke $r40.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        goto label103;

     label023:
        $r41 = r209.<android.os.Message: java.lang.Object obj>;

        r219 = (android.os.AsyncResult) $r41;

        $r42 = r219.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r42 != null goto label103;

        $r43 = r219.<android.os.AsyncResult: java.lang.Object result>;

        $r44 = (int[]) $r43;

        $i3 = $r44[0];

        if $i3 != 1 goto label024;

        z23 = 1;

     label024:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mImsRegistered> = z23;

        goto label103;

     label025:
        $r45 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r46 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(47);

        interfaceinvoke $r45.<com.android.internal.telephony.CommandsInterface: void getImsRegistrationState(android.os.Message)>($r46);

        goto label103;

     label026:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_CHANGE_IMS_STATE:");

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setPowerStateToDesired()>();

        goto label103;

     label027:
        $r47 = r209.<android.os.Message: java.lang.Object obj>;

        if $r47 == null goto label030;

        $r52 = r209.<android.os.Message: java.lang.Object obj>;

        r220 = (android.os.AsyncResult) $r52;

        $r53 = r220.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r53 == null goto label028;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_GET_CELL_INFO_LIST: error ret null, e=");

        $r59 = r220.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r59);

        $r61 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r61);

        r222 = r220.<android.os.AsyncResult: java.lang.Throwable exception>;

        r223 = null;

        goto label037;

     label028:
        $r54 = r220.<android.os.AsyncResult: java.lang.Object result>;

        if $r54 != null goto label029;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>("Invalid CellInfo result");

        goto label036;

     label029:
        $r55 = r220.<android.os.AsyncResult: java.lang.Object result>;

        r223 = (java.util.List) $r55;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateOperatorNameForCellInfo(java.util.List)>(r223);

        r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastCellInfoList> = r223;

        $r56 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r56.<com.android.internal.telephony.GsmCdmaPhone: void notifyCellInfo(java.util.List)>(r223);

        r222 = null;

        goto label037;

     label030:
        r224 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mPendingCellInfoRequests>;

        entermonitor r224;

     label031:
        $z6 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsPendingCellInfoRequest>;

        if $z6 != 0 goto label033;

        exitmonitor r224;

     label032:
        goto label103;

     label033:
        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l5 = r0.<com.android.internal.telephony.ServiceStateTracker: long mLastCellInfoReqTime>;

        $l6 = $l4 - $l5;

        $b7 = $l6 cmp 2000L;

        if $b7 >= 0 goto label035;

        exitmonitor r224;

     label034:
        goto label103;

     label035:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>("Timeout waiting for CellInfo; (everybody panic)!");

        r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastCellInfoList> = null;

        exitmonitor r224;

     label036:
        r223 = null;

        r222 = null;

     label037:
        r1 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mPendingCellInfoRequests>;

        entermonitor r1;

     label038:
        $z26 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsPendingCellInfoRequest>;

        if $z26 == 0 goto label042;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsPendingCellInfoRequest> = 0;

        $r48 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mPendingCellInfoRequests>;

        r2 = interfaceinvoke $r48.<java.util.List: java.util.Iterator iterator()>();

     label039:
        $z7 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label041;

        $r50 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.os.Message) $r50;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r3, r223, r222);

        virtualinvoke r3.<android.os.Message: void sendToTarget()>();

     label040:
        goto label039;

     label041:
        $r49 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mPendingCellInfoRequests>;

        interfaceinvoke $r49.<java.util.List: void clear()>();

     label042:
        exitmonitor r1;

     label043:
        goto label103;

     label044:
        $r207 := @caughtexception;

     label045:
        exitmonitor r1;

     label046:
        throw $r207;

     label047:
        $r208 := @caughtexception;

     label048:
        exitmonitor r224;

     label049:
        throw $r208;

     label050:
        $z8 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isSimAbsent()>();

        if $z8 == 0 goto label051;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_ICC_CHANGED: SIM absent");

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void cancelAllNotifications()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMdn> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMin> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsMinInfoReady> = 0;

        $r64 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        virtualinvoke $r64.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void updateEfFromRuim(com.android.internal.telephony.uicc.RuimRecords)>(null);

        $r65 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        virtualinvoke $r65.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void updateEfFromUsim(com.android.internal.telephony.uicc.SIMRecords)>(null);

     label051:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void onUpdateIccAvailability()>();

        r227 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        if r227 == null goto label103;

        $r62 = virtualinvoke r227.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState getState()>();

        $r63 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState APPSTATE_READY>;

        if $r62 == $r63 goto label103;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSimReady> = 0;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateSpnDisplay()>();

        goto label103;

     label052:
        $r66 = r209.<android.os.Message: java.lang.Object obj>;

        r228 = (android.os.AsyncResult) $r66;

        $r67 = r228.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r67 != null goto label103;

        $r68 = r228.<android.os.AsyncResult: java.lang.Object result>;

        $r69 = (int[]) $r68;

        $i8 = $r69[0];

        $r70 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mPrlVersion> = $r70;

        goto label103;

     label053:
        $r71 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $i9 = virtualinvoke $r71.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void handleCdmaSubscriptionSource(int)>($i9);

        goto label103;

     label054:
        entermonitor r0;

     label055:
        $z9 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff>;

        if $z9 == 0 goto label057;

        $i13 = r209.<android.os.Message: int arg1>;

        $i12 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPendingRadioPowerOffAfterDataOffTag>;

        if $i13 != $i12 goto label057;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_SET_RADIO_OFF, turn radio off now.");

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void hangupAndPowerOff()>();

        $i14 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPendingRadioPowerOffAfterDataOffTag>;

        $i15 = $i14 + 1;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mPendingRadioPowerOffAfterDataOffTag> = $i15;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff> = 0;

     label056:
        goto label058;

     label057:
        r229 = new java.lang.StringBuilder;

        specialinvoke r229.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_SET_RADIO_OFF is stale arg1=");

        $i10 = r209.<android.os.Message: int arg1>;

        virtualinvoke r229.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke r229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!= tag=");

        $i11 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPendingRadioPowerOffAfterDataOffTag>;

        virtualinvoke r229.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r76 = virtualinvoke r229.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r76);

     label058:
        exitmonitor r0;

     label059:
        goto label103;

     label060:
        $r205 := @caughtexception;

     label061:
        exitmonitor r0;

     label062:
        throw $r205;

     label063:
        $r77 = r209.<android.os.Message: java.lang.Object obj>;

        r231 = (android.os.AsyncResult) $r77;

        $r78 = r231.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r78 != null goto label103;

        $r79 = r231.<android.os.AsyncResult: java.lang.Object result>;

        $r80 = (int[]) $r79;

        i37 = $r80[0];

        if i37 == 8 goto label064;

        if i37 != 10 goto label065;

     label064:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_OTA_PROVISION_STATUS_CHANGE: Complete, Reload MDN");

        $r81 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r82 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(34);

        interfaceinvoke $r81.<com.android.internal.telephony.CommandsInterface: void getCDMASubscription(android.os.Message)>($r82);

     label065:
        goto label103;

     label066:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updatePhoneObject()>();

        $r83 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r84 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(14);

        interfaceinvoke $r83.<com.android.internal.telephony.CommandsInterface: void getNetworkSelectionMode(android.os.Message)>($r84);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void getSubscriptionInfoAndStartPollingThreads()>();

        goto label103;

     label067:
        $r85 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z10 = virtualinvoke $r85.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z10 != 0 goto label103;

        $r86 = r209.<android.os.Message: java.lang.Object obj>;

        r232 = (android.os.AsyncResult) $r86;

        $r87 = r232.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r87 != null goto label103;

        $r88 = r232.<android.os.AsyncResult: java.lang.Object result>;

        r233 = (java.lang.String[]) $r88;

        if r233 == null goto label069;

        $i17 = lengthof r233;

        if $i17 < 5 goto label069;

        $r93 = r233[0];

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMdn> = $r93;

        $r95 = r233[1];

        $r94 = r233[2];

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void parseSidNid(java.lang.String,java.lang.String)>($r95, $r94);

        $r96 = r233[3];

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMin> = $r96;

        $r97 = r233[4];

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mPrlVersion> = $r97;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GET_CDMA_SUBSCRIPTION: MDN=");

        $r100 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMdn>;

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r102 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r102);

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsMinInfoReady> = 1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateOtaspState()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void notifyCdmaSubscriptionInfoReady()>();

        $z11 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z11 != 0 goto label068;

        $r103 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r103 == null goto label068;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("GET_CDMA_SUBSCRIPTION set imsi in mIccRecords");

        $r104 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        $r105 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getImsi()>();

        virtualinvoke $r104.<com.android.internal.telephony.uicc.IccRecords: void setImsi(java.lang.String)>($r105);

        goto label070;

     label068:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("GET_CDMA_SUBSCRIPTION either mIccRecords is null or NV type device - not setting Imsi in mIccRecords");

        goto label070;

     label069:
        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GET_CDMA_SUBSCRIPTION: error parsing cdmaSubscription params num=");

        $i16 = lengthof r233;

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r92);

     label070:
        goto label103;

     label071:
        $r106 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z12 = virtualinvoke $r106.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z12 != 0 goto label103;

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_RUIM_RECORDS_LOADED: what=");

        $i18 = r209.<android.os.Message: int what>;

        virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r110 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r110);

        $r113 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        $r111 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        $r112 = (com.android.internal.telephony.uicc.RuimRecords) $r111;

        virtualinvoke $r113.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void updateEfFromRuim(com.android.internal.telephony.uicc.RuimRecords)>($r112);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updatePhoneObject()>();

        $r114 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z13 = virtualinvoke $r114.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z13 == 0 goto label072;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateSpnDisplay()>();

        goto label103;

     label072:
        $r115 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        r237 = (com.android.internal.telephony.uicc.RuimRecords) $r115;

        if r237 == null goto label074;

        $r116 = virtualinvoke r237.<com.android.internal.telephony.uicc.RuimRecords: java.lang.String getMdn()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMdn> = $r116;

        $z14 = virtualinvoke r237.<com.android.internal.telephony.uicc.RuimRecords: boolean isProvisioned()>();

        if $z14 == 0 goto label073;

        $r117 = virtualinvoke r237.<com.android.internal.telephony.uicc.RuimRecords: java.lang.String getMin()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMin> = $r117;

        $r118 = virtualinvoke r237.<com.android.internal.telephony.uicc.RuimRecords: java.lang.String getSid()>();

        $r119 = virtualinvoke r237.<com.android.internal.telephony.uicc.RuimRecords: java.lang.String getNid()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void parseSidNid(java.lang.String,java.lang.String)>($r118, $r119);

        $r120 = virtualinvoke r237.<com.android.internal.telephony.uicc.RuimRecords: java.lang.String getPrlVersion()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mPrlVersion> = $r120;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsMinInfoReady> = 1;

     label073:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateOtaspState()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void notifyCdmaSubscriptionInfoReady()>();

     label074:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void pollStateInternal(boolean)>(0);

        goto label103;

     label075:
        $r121 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i19 = virtualinvoke $r121.<com.android.internal.telephony.GsmCdmaPhone: int getLteOnCdmaMode()>();

        if $i19 != 1 goto label076;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Receive EVENT_RUIM_READY");

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void pollStateInternal(boolean)>(0);

        goto label077;

     label076:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Receive EVENT_RUIM_READY and Send Request getCDMASubscription.");

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void getSubscriptionInfoAndStartPollingThreads()>();

     label077:
        $r122 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r123 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(14);

        interfaceinvoke $r122.<com.android.internal.telephony.CommandsInterface: void getNetworkSelectionMode(android.os.Message)>($r123);

        goto label103;

     label078:
        $r124 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z15 = virtualinvoke $r124.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z15 == 0 goto label103;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_RESTRICTED_STATE_CHANGED");

        $r125 = r209.<android.os.Message: java.lang.Object obj>;

        $r126 = (android.os.AsyncResult) $r125;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void onRestrictedStateChanged(android.os.AsyncResult)>($r126);

        goto label103;

     label079:
        $r127 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z16 = virtualinvoke $r127.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z16 == 0 goto label080;

        r238 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        if r238 == null goto label080;

        $i20 = virtualinvoke r238.<android.telephony.ServiceState: int getDataRegistrationState()>();

        $r128 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i21 = virtualinvoke $r128.<android.telephony.ServiceState: int getState()>();

        $z17 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isGprsConsistent(int,int)>($i20, $i21);

        if $z17 != 0 goto label080;

        $r129 = newarray (java.lang.Object)[2];

        $r130 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $r131 = virtualinvoke $r130.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $r129[0] = $r131;

        $r132 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity mCellIdentity>;

        $i22 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: int getCidFromCellIdentity(android.telephony.CellIdentity)>($r132);

        $r133 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        $r129[1] = $r133;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(50107, $r129);

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mReportedGprsNoReg> = 1;

     label080:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mStartedGprsRegCheck> = 0;

        goto label103;

     label081:
        $r134 = r209.<android.os.Message: java.lang.Object obj>;

        r239 = (android.os.AsyncResult) $r134;

        $r135 = r239.<android.os.AsyncResult: java.lang.Object userObj>;

        if $r135 == null goto label103;

        $r136 = r239.<android.os.AsyncResult: java.lang.Object userObj>;

        $r137 = (android.os.Message) $r136;

        $r138 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r137);

        $r139 = r239.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r138.<android.os.AsyncResult: java.lang.Throwable exception> = $r139;

        $r140 = r239.<android.os.AsyncResult: java.lang.Object userObj>;

        $r141 = (android.os.Message) $r140;

        virtualinvoke $r141.<android.os.Message: void sendToTarget()>();

        goto label103;

     label082:
        $r142 = r209.<android.os.Message: java.lang.Object obj>;

        $r143 = (android.os.AsyncResult) $r142;

        $r144 = $r143.<android.os.AsyncResult: java.lang.Object userObj>;

        r240 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(21, $r144);

        $r145 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i24 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPreferredNetworkType>;

        interfaceinvoke $r145.<com.android.internal.telephony.CommandsInterface: void setPreferredNetworkType(int,android.os.Message)>($i24, r240);

        goto label103;

     label083:
        $r146 = r209.<android.os.Message: java.lang.Object obj>;

        r241 = (android.os.AsyncResult) $r146;

        $r147 = r241.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r147 != null goto label084;

        $r150 = r241.<android.os.AsyncResult: java.lang.Object result>;

        $r151 = (int[]) $r150;

        $i25 = $r151[0];

        r0.<com.android.internal.telephony.ServiceStateTracker: int mPreferredNetworkType> = $i25;

        goto label085;

     label084:
        r0.<com.android.internal.telephony.ServiceStateTracker: int mPreferredNetworkType> = 7;

     label085:
        $r148 = r241.<android.os.AsyncResult: java.lang.Object userObj>;

        r242 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(20, $r148);

        $r149 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r149.<com.android.internal.telephony.CommandsInterface: void setPreferredNetworkType(int,android.os.Message)>(7, r242);

        goto label103;

     label086:
        $r152 = r209.<android.os.Message: java.lang.Object obj>;

        $r153 = (android.os.AsyncResult) $r152;

        $r154 = $r153.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r154 != null goto label103;

        $r155 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mRegStateManagers>;

        $r156 = virtualinvoke $r155.<android.util.SparseArray: java.lang.Object get(int)>(1);

        $r157 = (com.android.internal.telephony.NetworkRegistrationManager) $r156;

        $r158 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(15, null);

        virtualinvoke $r157.<com.android.internal.telephony.NetworkRegistrationManager: void requestNetworkRegistrationInfo(int,android.os.Message)>(1, $r158);

        goto label103;

     label087:
        $r159 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener mOnSubscriptionsChangedListener>;

        $r160 = $r159.<com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener: java.util.concurrent.atomic.AtomicInteger mPreviousSubId>;

        virtualinvoke $r160.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(-1);

        r0.<com.android.internal.telephony.ServiceStateTracker: int mPrevSubId> = -1;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSimReady> = 1;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void pollStateInternal(boolean)>(0);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void queueNextSignalStrengthPoll()>();

        goto label103;

     label088:
        $r161 = new java.lang.StringBuilder;

        specialinvoke $r161.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_SIM_RECORDS_LOADED: what=");

        $i26 = r209.<android.os.Message: int what>;

        virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r164 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r164);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updatePhoneObject()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateOtaspState()>();

        $r165 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z18 = virtualinvoke $r165.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z18 == 0 goto label103;

        $r168 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        $r166 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        $r167 = (com.android.internal.telephony.uicc.SIMRecords) $r166;

        virtualinvoke $r168.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void updateEfFromUsim(com.android.internal.telephony.uicc.SIMRecords)>($r167);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateSpnDisplay()>();

        goto label103;

     label089:
        $r169 = r209.<android.os.Message: java.lang.Object obj>;

        r244 = (android.os.AsyncResult) $r169;

        $r170 = r244.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r170 != null goto label090;

        $r171 = r244.<android.os.AsyncResult: java.lang.Object result>;

        $r172 = (android.telephony.NetworkRegistrationInfo) $r171;

        r245 = virtualinvoke $r172.<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateOperatorNameForCellIdentity(android.telephony.CellIdentity)>(r245);

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity mCellIdentity> = r245;

        $r173 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r174 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity getCellIdentity()>();

        virtualinvoke $r173.<com.android.internal.telephony.GsmCdmaPhone: void notifyLocationChanged(android.telephony.CellIdentity)>($r174);

     label090:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void disableSingleLocationUpdate()>();

        goto label103;

     label091:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_POLL_STATE_NETWORK_SELECTION_MODE");

        $r175 = r209.<android.os.Message: java.lang.Object obj>;

        r246 = (android.os.AsyncResult) $r175;

        $r176 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z19 = virtualinvoke $r176.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z19 == 0 goto label092;

        $i28 = r209.<android.os.Message: int what>;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>($i28, r246);

        goto label103;

     label092:
        $r177 = r246.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r177 != null goto label093;

        $r178 = r246.<android.os.AsyncResult: java.lang.Object result>;

        if $r178 == null goto label093;

        $r179 = r246.<android.os.AsyncResult: java.lang.Object result>;

        $r180 = (int[]) $r179;

        $i27 = $r180[0];

        if $i27 != 1 goto label103;

        $r181 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r181.<com.android.internal.telephony.GsmCdmaPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>(null);

        goto label103;

     label093:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Unable to getNetworkSelectionMode");

        goto label103;

     label094:
        $r182 = r209.<android.os.Message: java.lang.Object obj>;

        r247 = (android.os.AsyncResult) $r182;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDontPollSignalStrength> = 1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult)>(r247);

        goto label103;

     label095:
        $r183 = r209.<android.os.Message: java.lang.Object obj>;

        r248 = (android.os.AsyncResult) $r183;

        $r184 = r248.<android.os.AsyncResult: java.lang.Object result>;

        $r185 = (java.lang.Object[]) $r184;

        $r186 = $r185[0];

        $r191 = (java.lang.String) $r186;

        $r187 = r248.<android.os.AsyncResult: java.lang.Object result>;

        $r188 = (java.lang.Object[]) $r187;

        $r189 = $r188[1];

        $r190 = (java.lang.Long) $r189;

        $l29 = virtualinvoke $r190.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setTimeFromNITZString(java.lang.String,long)>($r191, $l29);

        goto label103;

     label096:
        $r192 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r193 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(3);

        interfaceinvoke $r192.<com.android.internal.telephony.CommandsInterface: void getSignalStrength(android.os.Message)>($r193);

        goto label103;

     label097:
        $r194 = r209.<android.os.Message: java.lang.Object obj>;

        r249 = (android.os.AsyncResult) $r194;

        $i30 = r209.<android.os.Message: int what>;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>($i30, r249);

        goto label103;

     label098:
        $r195 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i31 = interfaceinvoke $r195.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i31 == 1 goto label099;

        return;

     label099:
        $r196 = r209.<android.os.Message: java.lang.Object obj>;

        $r197 = (android.os.AsyncResult) $r196;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult)>($r197);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void queueNextSignalStrengthPoll()>();

        goto label103;

     label100:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void pollStateInternal(boolean)>(1);

        goto label103;

     label101:
        $r198 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z22 = virtualinvoke $r198.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z22 != 0 goto label102;

        $r199 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i32 = interfaceinvoke $r199.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i32 != 1 goto label102;

        $r200 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $i33 = virtualinvoke $r200.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void handleCdmaSubscriptionSource(int)>($i33);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void queueNextSignalStrengthPoll()>();

     label102:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setPowerStateToDesired()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void pollStateInternal(boolean)>(1);

     label103:
        return;

        catch java.lang.Throwable from label014 to label015 with label019;
        catch java.lang.Throwable from label016 to label017 with label019;
        catch java.lang.Throwable from label017 to label018 with label019;
        catch java.lang.Throwable from label020 to label021 with label019;
        catch java.lang.Throwable from label031 to label032 with label047;
        catch java.lang.Throwable from label033 to label034 with label047;
        catch java.lang.Throwable from label035 to label036 with label047;
        catch java.lang.Throwable from label038 to label039 with label044;
        catch java.lang.Throwable from label039 to label040 with label044;
        catch java.lang.Throwable from label041 to label042 with label044;
        catch java.lang.Throwable from label042 to label043 with label044;
        catch java.lang.Throwable from label045 to label046 with label044;
        catch java.lang.Throwable from label048 to label049 with label047;
        catch java.lang.Throwable from label055 to label056 with label060;
        catch java.lang.Throwable from label057 to label058 with label060;
        catch java.lang.Throwable from label058 to label059 with label060;
        catch java.lang.Throwable from label061 to label062 with label060;
    }

    protected void handlePollStateResult(int, android.os.AsyncResult)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int[] $r2, r87;
        java.lang.Object $r3;
        java.lang.Throwable $r4, $r61, $r62, $r67, $r70, $r74;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, z19, $z20, z21, $z22, z23, z24, z25, $z26, $z27, $z28, $z29;
        android.telephony.ServiceState $r5, $r6, $r7, $r9, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r42, $r43, $r44, $r49, $r50, $r51, $r52, $r59, $r60, $r89, $r92, $r93, $r95, $r96, $r98, $r102, $r103, $r104;
        com.android.internal.telephony.GsmCdmaPhone $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.StringBuilder $r36, $r45, $r53, $r65, $r72, $r78, $r100;
        java.lang.String $r41, $r48, $r58, $r69, $r76, $r81, $r94, $r105;
        com.android.internal.telephony.CommandException$Error $r63, $r64, r83;
        com.android.internal.telephony.CommandException $r71;
        java.lang.RuntimeException $r77;
        android.os.AsyncResult r82;
        com.android.internal.telephony.cdma.EriManager $r97, $r99;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i7 := @parameter0: int;

        r82 := @parameter1: android.os.AsyncResult;

        $r3 = r82.<android.os.AsyncResult: java.lang.Object userObj>;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        if $r3 == $r2 goto label01;

        return;

     label01:
        $r4 = r82.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r4 == null goto label06;

        r83 = null;

        $r61 = r82.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z15 = $r61 instanceof java.lang.IllegalStateException;

        if $z15 == 0 goto label02;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResult exception ");

        $r74 = r82.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r74);

        $r76 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r76);

     label02:
        $r62 = r82.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z16 = $r62 instanceof com.android.internal.telephony.CommandException;

        if $z16 == 0 goto label03;

        $r70 = r82.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r71 = (com.android.internal.telephony.CommandException) $r70;

        r83 = virtualinvoke $r71.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

     label03:
        $r63 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error RADIO_NOT_AVAILABLE>;

        if r83 != $r63 goto label04;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void cancelPollState()>();

        return;

     label04:
        $r64 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error OP_NOT_ALLOWED_BEFORE_REG_NW>;

        if r83 == $r64 goto label05;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL implementation has returned an error where it must succeed");

        $r67 = r82.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        $r69 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r69);

     label05:
        goto label09;

     label06:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void handlePollStateResultMessage(int,android.os.AsyncResult)>(i7, r82);

     label07:
        goto label09;

     label08:
        $r77 := @caughtexception;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while polling service state. Probably malformed RIL response.");

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r77);

        $r81 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r81);

     label09:
        r87 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mPollingContext>;

        z17 = 0;

        $i8 = r87[0];

        $i9 = $i8 - 1;

        r87[0] = $i9;

        $i10 = r87[0];

        if $i10 != 0 goto label27;

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mEmergencyOnly>;

        virtualinvoke $r5.<android.telephony.ServiceState: void setEmergencyOnly(boolean)>($z0);

        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void combinePsRegistrationStates(android.telephony.ServiceState)>($r6);

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateOperatorNameForServiceState(android.telephony.ServiceState)>($r7);

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z1 = virtualinvoke $r8.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label10;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateRoamingState()>();

        goto label26;

     label10:
        z19 = 0;

        $z2 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isSidsAllZeros()>();

        if $z2 != 0 goto label11;

        z19 = 0;

        $r60 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i6 = virtualinvoke $r60.<android.telephony.ServiceState: int getCdmaSystemId()>();

        $z14 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isHomeSid(int)>($i6);

        if $z14 == 0 goto label11;

        z19 = 1;

     label11:
        $z20 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z20 == 0 goto label12;

        $r50 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z12 = virtualinvoke $r50.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        $r51 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        z21 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isRoamingBetweenOperators(boolean,android.telephony.ServiceState)>($z12, $r51);

        $r52 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z13 = virtualinvoke $r52.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if z21 == $z13 goto label12;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isRoamingBetweenOperators=");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z21);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Override CDMA voice roaming to ");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z21);

        $r58 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r58);

        $r59 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r59.<android.telephony.ServiceState: void setVoiceRoaming(boolean)>(z21);

     label12:
        $r89 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i11 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: int getRilDataRadioTechnologyForWwan(android.telephony.ServiceState)>($r89);

        $z22 = staticinvoke <android.telephony.ServiceState: boolean isCdma(int)>($i11);

        if $z22 == 0 goto label16;

        $r34 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i4 = virtualinvoke $r34.<android.telephony.ServiceState: int getState()>();

        if $i4 != 0 goto label13;

        z17 = 1;

     label13:
        if z17 == 0 goto label15;

        $r43 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        z23 = virtualinvoke $r43.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        $r44 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z11 = virtualinvoke $r44.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z11 == z23 goto label14;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data roaming != Voice roaming. Override data roaming to ");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z23);

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r48);

        $r49 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r49.<android.telephony.ServiceState: void setDataRoaming(boolean)>(z23);

     label14:
        goto label16;

     label15:
        $i5 = r0.<com.android.internal.telephony.ServiceStateTracker: int mRoamingIndicator>;

        z24 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isRoamIndForHomeSystem(int)>($i5);

        $r35 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z8 = virtualinvoke $r35.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z8 != z24 goto label16;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isRoamIndForHomeSystem=");

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z24);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", override data roaming to ");

        $z9 = z24 ^ 1;

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r41);

        $r42 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z10 = z24 ^ 1;

        virtualinvoke $r42.<android.telephony.ServiceState: void setDataRoaming(boolean)>($z10);

     label16:
        $r92 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i12 = r0.<com.android.internal.telephony.ServiceStateTracker: int mDefaultRoamingIndicator>;

        virtualinvoke $r92.<android.telephony.ServiceState: void setCdmaDefaultRoamingIndicator(int)>($i12);

        $r93 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i13 = r0.<com.android.internal.telephony.ServiceStateTracker: int mRoamingIndicator>;

        virtualinvoke $r93.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>($i13);

        z25 = 1;

        $r94 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mPrlVersion>;

        $z26 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r94);

        if $z26 == 0 goto label17;

        z25 = 0;

     label17:
        if z25 == 0 goto label24;

        $r26 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i0 = virtualinvoke $r26.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        if $i0 != 0 goto label18;

        goto label24;

     label18:
        $z3 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isSidsAllZeros()>();

        if $z3 != 0 goto label25;

        if z19 != 0 goto label19;

        $z7 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsInPrl>;

        if $z7 != 0 goto label19;

        $r33 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i3 = r0.<com.android.internal.telephony.ServiceStateTracker: int mDefaultRoamingIndicator>;

        virtualinvoke $r33.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>($i3);

        goto label25;

     label19:
        if z19 == 0 goto label21;

        $z5 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsInPrl>;

        if $z5 != 0 goto label21;

        $r30 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i2 = virtualinvoke $r30.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $z6 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>($i2);

        if $z6 == 0 goto label20;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Turn off roaming indicator as voice is LTE or NR");

        $r32 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r32.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(1);

        goto label25;

     label20:
        $r31 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r31.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(2);

        goto label25;

     label21:
        if z19 != 0 goto label22;

        $z4 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsInPrl>;

        if $z4 == 0 goto label22;

        $r29 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i1 = r0.<com.android.internal.telephony.ServiceStateTracker: int mRoamingIndicator>;

        virtualinvoke $r29.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>($i1);

        goto label25;

     label22:
        i14 = r0.<com.android.internal.telephony.ServiceStateTracker: int mRoamingIndicator>;

        if i14 > 2 goto label23;

        $r28 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r28.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(1);

        goto label25;

     label23:
        $r27 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r27.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(i14);

        goto label25;

     label24:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Turn off roaming indicator if !isPrlLoaded or voice RAT is unknown");

        $r9 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r9.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(1);

     label25:
        $r95 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        i15 = virtualinvoke $r95.<android.telephony.ServiceState: int getCdmaRoamingIndicator()>();

        $r96 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r97 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.EriManager mEriManager>;

        $i16 = r0.<com.android.internal.telephony.ServiceStateTracker: int mDefaultRoamingIndicator>;

        $i17 = virtualinvoke $r97.<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconIndex(int,int)>(i15, $i16);

        virtualinvoke $r96.<android.telephony.ServiceState: void setCdmaEriIconIndex(int)>($i17);

        $r98 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r99 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.EriManager mEriManager>;

        $i18 = r0.<com.android.internal.telephony.ServiceStateTracker: int mDefaultRoamingIndicator>;

        $i19 = virtualinvoke $r99.<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconMode(int,int)>(i15, $i18);

        virtualinvoke $r98.<android.telephony.ServiceState: void setCdmaEriIconMode(int)>($i19);

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set CDMA Roaming Indicator to: ");

        $r102 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i20 = virtualinvoke $r102.<android.telephony.ServiceState: int getCdmaRoamingIndicator()>();

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". voiceRoaming = ");

        $r103 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z27 = virtualinvoke $r103.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z27);

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". dataRoaming = ");

        $r104 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z28 = virtualinvoke $r104.<android.telephony.ServiceState: boolean getDataRoaming()>();

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z28);

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isPrlLoaded = ");

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z25);

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". namMatch = ");

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z19);

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , mIsInPrl = ");

        $z29 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsInPrl>;

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z29);

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mRoamingIndicator = ");

        $i21 = r0.<com.android.internal.telephony.ServiceStateTracker: int mRoamingIndicator>;

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDefaultRoamingIndicator= ");

        $i22 = r0.<com.android.internal.telephony.ServiceStateTracker: int mDefaultRoamingIndicator>;

        virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r105 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r105);

     label26:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void pollStateDone()>();

     label27:
        return;

        catch java.lang.RuntimeException from label06 to label07 with label08;
    }

    protected void handlePollStateResultMessage(int, android.os.AsyncResult)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, $z18, z19, z20, z21, z22, z23, z24, z25;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, $i20, i21, i22, i23, i24, i25, $i26, i27;
        java.lang.Object $r1, $r17, $r41, $r48, $r66, $r82;
        android.telephony.ServiceState $r2, $r3, $r4, $r5, $r18, $r23, $r25, $r27, $r31, $r32, $r33, $r34, $r37, $r40, $r42, $r56, $r58, $r62, $r68, $r70, $r75, $r81, r92, $r110, $r111, $r112, $r116, $r118;
        android.telephony.CellIdentity $r6, $r28, $r113, r117;
        com.android.internal.telephony.GsmCdmaPhone $r7, $r29, $r30, $r36, $r38, $r47, $r83, $r84;
        java.lang.StringBuilder $r10, $r19, $r43, $r76, $r85, $r98, $r120;
        java.lang.String $r12, $r14, $r22, $r46, $r49, $r53, $r54, $r55, $r57, $r59, $r60, $r61, $r63, $r64, $r65, $r67, $r69, $r72, $r73, $r74, $r79, $r80, $r88, r94, $r97, $r100, $r101, r102, $r122;
        android.telephony.CellIdentityCdma $r15, $r16;
        java.util.List $r24, $r26;
        com.android.internal.telephony.metrics.TelephonyMetrics $r35;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r39;
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver $r52, $r71;
        android.os.AsyncResult r89;
        int[] r91;
        java.lang.String[] r93, r96;
        android.telephony.NetworkRegistrationInfo r103, r105, r114;
        android.telephony.DataSpecificRegistrationInfo r106;
        com.android.internal.telephony.CommandsInterface $r108;
        android.os.Message $r109;
        android.telephony.VoiceSpecificRegistrationInfo r115;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i15 := @parameter0: int;

        r89 := @parameter1: android.os.AsyncResult;

        if i15 == 4 goto label26;

        if i15 == 5 goto label16;

        if i15 == 6 goto label15;

        if i15 == 7 goto label04;

        if i15 == 14 goto label01;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResultMessage: Unexpected RIL response received: ");

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r88 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r88);

        goto label38;

     label01:
        $r82 = r89.<android.os.AsyncResult: java.lang.Object result>;

        r91 = (int[]) $r82;

        r92 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i13 = r91[0];

        if $i13 != 1 goto label02;

        z17 = 1;

        goto label03;

     label02:
        z17 = 0;

     label03:
        virtualinvoke r92.<android.telephony.ServiceState: void setIsManualSelection(boolean)>(z17);

        $i14 = r91[0];

        if $i14 != 1 goto label38;

        $r83 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z16 = virtualinvoke $r83.<com.android.internal.telephony.GsmCdmaPhone: boolean shouldForceAutoNetworkSelect()>();

        if $z16 == 0 goto label38;

        $r84 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r84.<com.android.internal.telephony.GsmCdmaPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>(null);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>(" Forcing Automatic Network Selection, manual selection is not allowed");

        goto label38;

     label04:
        $r47 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z14 = virtualinvoke $r47.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z14 == 0 goto label07;

        $r66 = r89.<android.os.AsyncResult: java.lang.Object result>;

        r93 = (java.lang.String[]) $r66;

        if r93 == null goto label06;

        $i12 = lengthof r93;

        if $i12 < 3 goto label06;

        $r68 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r67 = r93[0];

        virtualinvoke $r68.<android.telephony.ServiceState: void setOperatorAlphaLongRaw(java.lang.String)>($r67);

        $r70 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r69 = r93[1];

        virtualinvoke $r70.<android.telephony.ServiceState: void setOperatorAlphaShortRaw(java.lang.String)>($r69);

        r94 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getOperatorBrandOverride()>();

        $r71 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        virtualinvoke $r71.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void updateEfForBrandOverride(java.lang.String)>(r94);

        if r94 == null goto label05;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_POLL_STATE_OPERATOR: use brandOverride=");

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r94);

        $r79 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r79);

        $r81 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r80 = r93[2];

        virtualinvoke $r81.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>(r94, r94, $r80);

        goto label06;

     label05:
        $r75 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r74 = r93[0];

        $r73 = r93[1];

        $r72 = r93[2];

        virtualinvoke $r75.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>($r74, $r73, $r72);

     label06:
        goto label38;

     label07:
        $r48 = r89.<android.os.AsyncResult: java.lang.Object result>;

        r96 = (java.lang.String[]) $r48;

        if r96 == null goto label13;

        $i10 = lengthof r96;

        if $i10 < 3 goto label13;

        $r49 = r96[2];

        if $r49 == null goto label08;

        $r63 = r96[2];

        $i11 = virtualinvoke $r63.<java.lang.String: int length()>();

        if $i11 < 5 goto label08;

        $r65 = "00000";

        $r64 = r96[2];

        $z15 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>($r64);

        if $z15 == 0 goto label09;

     label08:
        $r97 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.cdma.home.operator.numeric", "00000");

        r96[2] = $r97;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL_REQUEST_OPERATOR.response[2], the numeric,  is bad. Using SystemProperties \'ro.cdma.home.operator.numeric\'= ");

        $r100 = r96[2];

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r101 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r101);

     label09:
        $z18 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z18 != 0 goto label10;

        $r62 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r61 = r96[0];

        $r60 = r96[1];

        $r59 = r96[2];

        virtualinvoke $r62.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>($r61, $r60, $r59);

        goto label14;

     label10:
        r102 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getOperatorBrandOverride()>();

        $r52 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        virtualinvoke $r52.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void updateEfForBrandOverride(java.lang.String)>(r102);

        if r102 == null goto label11;

        $r58 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r57 = r96[2];

        virtualinvoke $r58.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>(r102, r102, $r57);

        goto label12;

     label11:
        $r56 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r55 = r96[0];

        $r54 = r96[1];

        $r53 = r96[2];

        virtualinvoke $r56.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>($r55, $r54, $r53);

     label12:
        goto label14;

     label13:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("EVENT_POLL_STATE_OPERATOR_CDMA: error parsing opNames");

     label14:
        goto label38;

     label15:
        $r41 = r89.<android.os.AsyncResult: java.lang.Object result>;

        r103 = (android.telephony.NetworkRegistrationInfo) $r41;

        $r42 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r42.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r103);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResultMessage: PS IWLAN. ");

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r103);

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r46);

        goto label38;

     label16:
        $r17 = r89.<android.os.AsyncResult: java.lang.Object result>;

        r105 = (android.telephony.NetworkRegistrationInfo) $r17;

        $r18 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r18.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r105);

        r106 = virtualinvoke r105.<android.telephony.NetworkRegistrationInfo: android.telephony.DataSpecificRegistrationInfo getDataSpecificInfo()>();

        i16 = virtualinvoke r105.<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>();

        i17 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int regCodeToServiceState(int)>(i16);

        $i6 = virtualinvoke r105.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        i18 = staticinvoke <android.telephony.ServiceState: int networkTypeToRilRadioTechnology(int)>($i6);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResultMessage: PS cellular. ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r105);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r22);

        if i17 != 1 goto label17;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastPhysicalChannelConfigList> = null;

     label17:
        $r24 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastPhysicalChannelConfigList>;

        $r23 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        z0 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean updateNrFrequencyRangeFromPhysicalChannelConfigs(java.util.List,android.telephony.ServiceState)>($r24, $r23);

        $r26 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastPhysicalChannelConfigList>;

        $r25 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        z19 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean updateNrStateFromPhysicalChannelConfigs(java.util.List,android.telephony.ServiceState)>($r26, $r25);

        $r27 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r28 = virtualinvoke r105.<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setPhyCellInfoFromCellIdentity(android.telephony.ServiceState,android.telephony.CellIdentity)>($r27, $r28);

        $z6 = z0 | 0;

        $z7 = $z6 | z19;

        if $z7 == 0 goto label18;

        $r35 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        $r36 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i9 = virtualinvoke $r36.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        $r37 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r35.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeServiceStateChanged(int,android.telephony.ServiceState)>($i9, $r37);

        $r38 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r39 = virtualinvoke $r38.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        $r40 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r39.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onServiceStateChanged(android.telephony.ServiceState)>($r40);

     label18:
        $r29 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z8 = virtualinvoke $r29.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z8 == 0 goto label19;

        $i7 = virtualinvoke r105.<android.telephony.NetworkRegistrationInfo: int getRejectCause()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: int mNewReasonDataDenied> = $i7;

        $i8 = r106.<android.telephony.DataSpecificRegistrationInfo: int maxDataCalls>;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mNewMaxDataCalls> = $i8;

        z20 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean regCodeIsRoaming(int)>(i16);

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mGsmDataRoaming> = z20;

        $r34 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r34.<android.telephony.ServiceState: void setDataRoamingFromRegistration(boolean)>(z20);

        goto label25;

     label19:
        $r30 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z9 = virtualinvoke $r30.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z9 == 0 goto label20;

        z21 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean regCodeIsRoaming(int)>(i16);

        $r32 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r32.<android.telephony.ServiceState: void setDataRoaming(boolean)>(z21);

        $r33 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r33.<android.telephony.ServiceState: void setDataRoamingFromRegistration(boolean)>(z21);

        goto label25;

     label20:
        $r31 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        i19 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: int getRilDataRadioTechnologyForWwan(android.telephony.ServiceState)>($r31);

        if i19 != 0 goto label21;

        if i18 != 0 goto label23;

     label21:
        $z10 = staticinvoke <android.telephony.ServiceState: boolean isCdma(int)>(i19);

        if $z10 == 0 goto label22;

        $z13 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>(i18);

        if $z13 != 0 goto label23;

     label22:
        $z11 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>(i19);

        if $z11 == 0 goto label24;

        $z12 = staticinvoke <android.telephony.ServiceState: boolean isCdma(int)>(i18);

        if $z12 == 0 goto label24;

     label23:
        $r108 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r109 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(3);

        interfaceinvoke $r108.<com.android.internal.telephony.CommandsInterface: void getSignalStrength(android.os.Message)>($r109);

     label24:
        z22 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean regCodeIsRoaming(int)>(i16);

        $r110 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r110.<android.telephony.ServiceState: void setDataRoaming(boolean)>(z22);

        $r111 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r111.<android.telephony.ServiceState: void setDataRoamingFromRegistration(boolean)>(z22);

     label25:
        $r112 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r113 = virtualinvoke r105.<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()>();

        $i20 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getLteEarfcn(android.telephony.CellIdentity)>($r113);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateServiceStateLteEarfcnBoost(android.telephony.ServiceState,int)>($r112, $i20);

        goto label38;

     label26:
        $r1 = r89.<android.os.AsyncResult: java.lang.Object result>;

        r114 = (android.telephony.NetworkRegistrationInfo) $r1;

        r115 = virtualinvoke r114.<android.telephony.NetworkRegistrationInfo: android.telephony.VoiceSpecificRegistrationInfo getVoiceSpecificInfo()>();

        i21 = virtualinvoke r114.<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>();

        z23 = r115.<android.telephony.VoiceSpecificRegistrationInfo: boolean cssSupported>;

        $i2 = virtualinvoke r114.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        staticinvoke <android.telephony.ServiceState: int networkTypeToRilRadioTechnology(int)>($i2);

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i4 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int regCodeToServiceState(int)>(i21);

        virtualinvoke $r2.<android.telephony.ServiceState: void setVoiceRegState(int)>($i4);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        i27 = (int) z23;

        virtualinvoke $r3.<android.telephony.ServiceState: void setCssIndicator(int)>(i27);

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r4.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r114);

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r6 = virtualinvoke r114.<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setPhyCellInfoFromCellIdentity(android.telephony.ServiceState,android.telephony.CellIdentity)>($r5, $r6);

        i22 = virtualinvoke r114.<android.telephony.NetworkRegistrationInfo: int getRejectCause()>();

        $z1 = virtualinvoke r114.<android.telephony.NetworkRegistrationInfo: boolean isEmergencyEnabled()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mEmergencyOnly> = $z1;

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z2 = virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z2 == 0 goto label27;

        $z5 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean regCodeIsRoaming(int)>(i21);

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mGsmVoiceRoaming> = $z5;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mNewRejectCode> = i22;

        goto label37;

     label27:
        i0 = r115.<android.telephony.VoiceSpecificRegistrationInfo: int roamingIndicator>;

        i23 = r115.<android.telephony.VoiceSpecificRegistrationInfo: int systemIsInPrl>;

        i1 = r115.<android.telephony.VoiceSpecificRegistrationInfo: int defaultRoamingIndicator>;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mRegistrationState> = i21;

        $z3 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean regCodeIsRoaming(int)>(i21);

        if $z3 == 0 goto label28;

        $z4 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isRoamIndForHomeSystem(int)>(i0);

        if $z4 != 0 goto label28;

        z24 = 1;

        goto label29;

     label28:
        z24 = 0;

     label29:
        $r116 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r116.<android.telephony.ServiceState: void setVoiceRoaming(boolean)>(z24);

        r0.<com.android.internal.telephony.ServiceStateTracker: int mRoamingIndicator> = i0;

        if i23 != 0 goto label30;

        z25 = 0;

        goto label31;

     label30:
        z25 = 1;

     label31:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsInPrl> = z25;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mDefaultRoamingIndicator> = i1;

        i24 = 0;

        r117 = virtualinvoke r114.<android.telephony.NetworkRegistrationInfo: android.telephony.CellIdentity getCellIdentity()>();

        if r117 == null goto label32;

        $i5 = virtualinvoke r117.<android.telephony.CellIdentity: int getType()>();

        if $i5 != 2 goto label32;

        $r15 = (android.telephony.CellIdentityCdma) r117;

        i24 = virtualinvoke $r15.<android.telephony.CellIdentityCdma: int getSystemId()>();

        $r16 = (android.telephony.CellIdentityCdma) r117;

        i25 = virtualinvoke $r16.<android.telephony.CellIdentityCdma: int getNetworkId()>();

        goto label33;

     label32:
        i25 = 0;

     label33:
        $r118 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r118.<android.telephony.ServiceState: void setCdmaSystemAndNetworkId(int,int)>(i24, i25);

        if i22 != 0 goto label34;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mRegistrationDeniedReason> = "General";

        goto label36;

     label34:
        if i22 != 1 goto label35;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mRegistrationDeniedReason> = "Authentication Failure";

        goto label36;

     label35:
        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mRegistrationDeniedReason> = "";

     label36:
        $i26 = r0.<com.android.internal.telephony.ServiceStateTracker: int mRegistrationState>;

        if $i26 != 3 goto label37;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registration denied, ");

        $r12 = r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mRegistrationDeniedReason>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r14);

     label37:
        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResultMessage: CS cellular. ");

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r114);

        $r122 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r122);

     label38:
        return;
    }

    protected void hangupAndPowerOff()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1, $r2, $r5, $r8, $r11;
        boolean $z0, $z1;
        com.android.internal.telephony.GsmCdmaCallTracker $r3, $r6, $r9;
        com.android.internal.telephony.GsmCdmaCall $r4, $r7, $r10;
        com.android.internal.telephony.CommandsInterface $r12;
        android.os.Message $r13;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z1 = virtualinvoke $r11.<com.android.internal.telephony.GsmCdmaPhone: boolean isInCall()>();

        if $z1 == 0 goto label2;

     label1:
        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r3 = $r2.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r4 = $r3.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaCall: void hangupIfAlive()>();

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r6 = $r5.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r7 = $r6.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaCall: void hangupIfAlive()>();

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r9 = $r8.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r10 = $r9.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        virtualinvoke $r10.<com.android.internal.telephony.GsmCdmaCall: void hangupIfAlive()>();

     label2:
        $r12 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r13 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(54);

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>(0, $r13);

        return;
    }

    protected boolean inSameCountry(java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r3, $r4, r5, r6, r7, r8, r9, r10;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 := @parameter0: java.lang.String;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z1 != 0 goto label9;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 >= 5 goto label1;

        goto label9;

     label1:
        r6 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String getHomeOperatorNumeric()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z2 != 0 goto label8;

        $i1 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i1 >= 5 goto label2;

        goto label8;

     label2:
        r7 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        r8 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        r9 = staticinvoke <com.android.internal.telephony.MccTable: java.lang.String countryCodeForMcc(java.lang.String)>(r7);

        r10 = staticinvoke <com.android.internal.telephony.MccTable: java.lang.String countryCodeForMcc(java.lang.String)>(r8);

        $z3 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>();

        if $z3 != 0 goto label7;

        $z4 = virtualinvoke r10.<java.lang.String: boolean isEmpty()>();

        if $z4 == 0 goto label3;

        goto label7;

     label3:
        z0 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if z0 == 0 goto label4;

        return z0;

     label4:
        $r1 = "us";

        $z5 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z5 == 0 goto label5;

        $r4 = "vi";

        $z8 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z8 == 0 goto label5;

        z9 = 1;

        goto label6;

     label5:
        z9 = z0;

        $r2 = "vi";

        $z6 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z6 == 0 goto label6;

        z9 = z0;

        $r3 = "us";

        $z7 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z7 == 0 goto label6;

        z9 = 1;

     label6:
        return z9;

     label7:
        return 0;

     label8:
        return 0;

     label9:
        return 0;
    }

    protected boolean isCallerOnDifferentThread()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.Thread $r1, $r3;
        android.os.Looper $r2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Looper getLooper()>();

        $r3 = virtualinvoke $r2.<android.os.Looper: java.lang.Thread getThread()>();

        if $r1 == $r3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isConcurrentVoiceAndDataAllowed()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, $i1, $i2, i3, i4;
        android.telephony.ServiceState $r1, $r3, $r4, $r5;
        com.android.internal.telephony.GsmCdmaPhone $r2;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        i3 = virtualinvoke $r1.<android.telephony.ServiceState: int getCssIndicator()>();

        z1 = 1;

        if i3 != 1 goto label1;

        return 1;

     label1:
        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label5;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        i0 = virtualinvoke $r3.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        i4 = i0;

        if i0 != 0 goto label2;

        i4 = i0;

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i2 = virtualinvoke $r4.<android.telephony.ServiceState: int getDataRegistrationState()>();

        if $i2 == 0 goto label2;

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        i4 = virtualinvoke $r5.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

     label2:
        if i4 == 0 goto label3;

        $i1 = staticinvoke <android.telephony.ServiceState: int rilRadioTechnologyToAccessNetworkType(int)>(i4);

        if $i1 == 1 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        return 0;
    }

    public boolean isDeviceShuttingDown()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDeviceShuttingDown>;

        return $z0;
    }

    public boolean isImsRegistered()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mImsRegistered>;

        return $z0;
    }

    public boolean isMinInfoReady()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsMinInfoReady>;

        return $z0;
    }

    protected final boolean isNonRoamingInCdmaNetwork(android.os.BaseBundle, java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.BaseBundle r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.BaseBundle;

        r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isInNetwork(android.os.BaseBundle,java.lang.String,java.lang.String)>(r1, r2, "cdma_nonroaming_networks_string_array");

        return $z0;
    }

    protected final boolean isNonRoamingInGsmNetwork(android.os.BaseBundle, java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.BaseBundle r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.BaseBundle;

        r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isInNetwork(android.os.BaseBundle,java.lang.String,java.lang.String)>(r1, r2, "gsm_nonroaming_networks_string_array");

        return $z0;
    }

    public boolean isRadioOn()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        com.android.internal.telephony.CommandsInterface $r1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        i0 = interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    protected final boolean isRoamingInCdmaNetwork(android.os.BaseBundle, java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.BaseBundle r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.BaseBundle;

        r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isInNetwork(android.os.BaseBundle,java.lang.String,java.lang.String)>(r1, r2, "cdma_roaming_networks_string_array");

        return $z0;
    }

    protected final boolean isRoamingInGsmNetwork(android.os.BaseBundle, java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.BaseBundle r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.BaseBundle;

        r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isInNetwork(android.os.BaseBundle,java.lang.String,java.lang.String)>(r1, r2, "gsm_roaming_networks_string_array");

        return $z0;
    }

    protected boolean isSidsAllZeros()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int[] r1, $r2;
        int $i0, $i1, i2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeSystemId>;

        if $r2 == null goto label3;

        i2 = 0;

     label1:
        r1 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeSystemId>;

        $i0 = lengthof r1;

        if i2 >= $i0 goto label3;

        $i1 = r1[i2];

        if $i1 == 0 goto label2;

        return 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    protected final void log(java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r3;
        com.android.internal.telephony.GsmCdmaPhone $r5;
        int $i0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SST", $r9);

        return;
    }

    protected final void loge(java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r3;
        com.android.internal.telephony.GsmCdmaPhone $r5;
        int $i0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: int getPhoneId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SST", $r9);

        return;
    }

    protected void notifyDataRegStateRilRadioTechnologyChanged(int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        com.android.internal.telephony.RegistrantList r1;
        android.util.Pair r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDataRegStateOrRatChangedRegistrants>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.internal.telephony.RegistrantList) $r4;

        if r1 == null goto label1;

        r2 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.util.Pair getRegistrationInfo(int)>(i0);

        if r2 == null goto label1;

        virtualinvoke r1.<com.android.internal.telephony.RegistrantList: void notifyResult(java.lang.Object)>(r2);

     label1:
        return;
    }

    protected boolean notifySignalStrength()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.SignalStrength $r3, $r4, $r6;
        boolean $z0, z1;
        com.android.internal.telephony.GsmCdmaPhone $r5;
        java.lang.NullPointerException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r12;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        z1 = 0;

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mSignalStrength>;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mLastSignalStrength>;

        $z0 = virtualinvoke $r4.<android.telephony.SignalStrength: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label6;

        z1 = 0;

     label1:
        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: void notifySignalStrength()>();

     label2:
        z1 = 1;

     label3:
        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mSignalStrength>;

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mLastSignalStrength> = $r6;

     label4:
        z1 = 1;

        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSignalStrength() Phone already destroyed: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SignalStrength not notified");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r12);

     label6:
        return z1;

        catch java.lang.NullPointerException from label1 to label2 with label5;
        catch java.lang.NullPointerException from label3 to label4 with label5;
    }

    protected void notifyVoiceRegStateRilRadioTechnologyChanged()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1;
        android.telephony.ServiceState $r2, $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r9;
        android.util.Pair $r10;
        com.android.internal.telephony.RegistrantList $r11;
        java.lang.Integer $r12, $r13;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        i0 = virtualinvoke $r2.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        i1 = virtualinvoke $r3.<android.telephony.ServiceState: int getState()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyVoiceRegStateRilRadioTechnologyChanged: vrs=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rat=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r9);

        $r11 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRegStateOrRatChangedRegistrants>;

        $r10 = new android.util.Pair;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r10.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r12, $r13);

        virtualinvoke $r11.<com.android.internal.telephony.RegistrantList: void notifyResult(java.lang.Object)>($r10);

        return;
    }

    public void onAirplaneModeChanged(boolean)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0;
        com.android.internal.telephony.NitzStateMachine $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzData mLastNitzData> = null;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzStateMachine mNitzState>;

        interfaceinvoke $r1.<com.android.internal.telephony.NitzStateMachine: void handleAirplaneModeChanged(boolean)>(z0);

        return;
    }

    public void onImsCapabilityChanged()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(48);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean sendMessage(android.os.Message)>($r1);

        return;
    }

    public void onImsServiceStateChanged()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(53);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean sendMessage(android.os.Message)>($r1);

        return;
    }

    protected boolean onSignalStrengthResult(android.os.AsyncResult)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.Throwable $r2, $r5;
        java.lang.StringBuilder $r3;
        java.lang.String $r7;
        android.telephony.SignalStrength $r8, $r11, $r13;
        java.lang.Object $r9, $r10;
        android.telephony.ServiceState $r12;
        android.os.AsyncResult r14;
        android.os.PersistableBundle r15;
        long $l0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r14 := @parameter0: android.os.AsyncResult;

        $r2 = r14.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r2 != null goto label1;

        $r9 = r14.<android.os.AsyncResult: java.lang.Object result>;

        if $r9 == null goto label1;

        $r10 = r14.<android.os.AsyncResult: java.lang.Object result>;

        $r11 = (android.telephony.SignalStrength) $r10;

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mSignalStrength> = $r11;

        r15 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        $r13 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mSignalStrength>;

        $r12 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r13.<android.telephony.SignalStrength: void updateLevel(android.os.PersistableBundle,android.telephony.ServiceState)>(r15, $r12);

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSignalStrengthResult() Exception from RIL : ");

        $r5 = r14.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r7);

        $r8 = new android.telephony.SignalStrength;

        specialinvoke $r8.<android.telephony.SignalStrength: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mSignalStrength> = $r8;

     label2:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: long mSignalStrengthUpdatedTime> = $l0;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean notifySignalStrength()>();

        return $z0;
    }

    protected void onUpdateIccAvailability()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.uicc.UiccController $r1;
        com.android.internal.telephony.uicc.UiccCardApplication $r2, $r5, $r6, $r7, r10, $r12;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.telephony.uicc.IccRecords $r3, r11, r13, r14, r15;
        com.android.internal.telephony.GsmCdmaPhone $r4;
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver $r8, $r9;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        if $r1 != null goto label1;

        return;

     label1:
        r10 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication()>();

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        if $r2 == r10 goto label7;

        r11 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        $z0 = r11 instanceof com.android.internal.telephony.uicc.SIMRecords;

        if $z0 == 0 goto label2;

        $r9 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        virtualinvoke $r9.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void updateEfFromUsim(com.android.internal.telephony.uicc.SIMRecords)>(null);

        goto label3;

     label2:
        $z1 = r11 instanceof com.android.internal.telephony.uicc.RuimRecords;

        if $z1 == 0 goto label3;

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver mCdnr>;

        virtualinvoke $r8.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void updateEfFromRuim(com.android.internal.telephony.uicc.RuimRecords)>(null);

     label3:
        $r12 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        if $r12 == null goto label5;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Removing stale icc objects.");

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        virtualinvoke $r7.<com.android.internal.telephony.uicc.UiccCardApplication: void unregisterForReady(android.os.Handler)>(r0);

        r13 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if r13 == null goto label4;

        virtualinvoke r13.<com.android.internal.telephony.uicc.IccRecords: void unregisterForRecordsLoaded(android.os.Handler)>(r0);

     label4:
        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation> = null;

     label5:
        if r10 == null goto label7;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("New card found");

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation> = r10;

        $r3 = virtualinvoke r10.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords> = $r3;

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z2 = virtualinvoke $r4.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z2 == 0 goto label6;

        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        virtualinvoke $r6.<com.android.internal.telephony.uicc.UiccCardApplication: void registerForReady(android.os.Handler,int,java.lang.Object)>(r0, 17, null);

        r14 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if r14 == null goto label7;

        virtualinvoke r14.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsLoaded(android.os.Handler,int,java.lang.Object)>(r0, 16, null);

        goto label7;

     label6:
        $z3 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z3 == 0 goto label7;

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        virtualinvoke $r5.<com.android.internal.telephony.uicc.UiccCardApplication: void registerForReady(android.os.Handler,int,java.lang.Object)>(r0, 26, null);

        r15 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if r15 == null goto label7;

        virtualinvoke r15.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsLoaded(android.os.Handler,int,java.lang.Object)>(r0, 27, null);

     label7:
        return;
    }

    protected void parseSidNid(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String r1, $r6, $r10, $r12, $r15, $r21, $r26, r27;
        java.lang.String[] r2, r31;
        java.lang.StringBuilder $r3, $r7, $r18, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        int[] $r11, $r13, $r14, $r16;
        java.lang.Throwable $r17, $r22;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r27 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r27 == null goto label06;

        r2 = virtualinvoke r27.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i3 = lengthof r2;

        $r14 = newarray (int)[$i3];

        r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeSystemId> = $r14;

        i6 = 0;

     label01:
        $i4 = lengthof r2;

        if i6 >= $i4 goto label06;

     label02:
        $r16 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeSystemId>;

        $r15 = r2[i6];

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        $r16[i6] = $i5;

     label03:
        goto label05;

     label04:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error parsing system id: ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r26);

     label05:
        i6 = i6 + 1;

        goto label01;

     label06:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMA_SUBSCRIPTION: SID=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r6);

        if r1 == null goto label12;

        r31 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof r31;

        $r11 = newarray (int)[$i0];

        r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeNetworkId> = $r11;

        i7 = 0;

     label07:
        $i1 = lengthof r31;

        if i7 >= $i1 goto label12;

     label08:
        $r13 = r0.<com.android.internal.telephony.ServiceStateTracker: int[] mHomeNetworkId>;

        $r12 = r31[i7];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        $r13[i7] = $i2;

     label09:
        goto label11;

     label10:
        $r17 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMA_SUBSCRIPTION: error parsing network id: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r21);

     label11:
        i7 = i7 + 1;

        goto label07;

     label12:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMA_SUBSCRIPTION: NID=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r10);

        return;

        catch java.lang.NumberFormatException from label02 to label03 with label04;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }

    public void pollState()
    {
        com.android.internal.telephony.ServiceStateTracker r0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean sendEmptyMessage(int)>(58);

        return;
    }

    public void powerOffRadioSafely()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, $i10, i11;
        com.android.internal.telephony.GsmCdmaPhone $r1, $r2, $r5, $r7, $r9, $r10, $r13, $r16, $r19, $r21, $r23, $r25, $r29;
        com.android.internal.telephony.ProxyController $r3, $r4, $r26;
        com.android.internal.telephony.dataconnection.DcTracker $r6, $r8, $r22, $r24;
        com.android.internal.telephony.GsmCdmaCallTracker $r11, $r14, $r17;
        com.android.internal.telephony.GsmCdmaCall $r12, $r15, $r18;
        com.android.internal.telephony.dataconnection.TransportManager $r20, $r30;
        java.lang.Throwable $r27;
        int[] r28, r31;
        android.os.Message r32;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        entermonitor r0;

     label01:
        $z1 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff>;

        if $z1 != 0 goto label20;

        i4 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>();

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        z0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: boolean areAllDataDisconnected()>();

     label02:
        i5 = 0;

        if z0 == 0 goto label10;

     label03:
        $r19 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i2 = virtualinvoke $r19.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        if i4 == $i2 goto label04;

        $r25 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i3 = virtualinvoke $r25.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        if i4 == $i3 goto label10;

        $r26 = staticinvoke <com.android.internal.telephony.ProxyController: com.android.internal.telephony.ProxyController getInstance()>();

        $z4 = virtualinvoke $r26.<com.android.internal.telephony.ProxyController: boolean areAllDataDisconnected(int)>(i4);

        if $z4 == 0 goto label10;

     label04:
        $r20 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        r28 = virtualinvoke $r20.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        i6 = lengthof r28;

     label05:
        if i5 >= i6 goto label08;

        i7 = r28[i5];

     label06:
        $r21 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r22 = virtualinvoke $r21.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(i7);

        if $r22 == null goto label07;

        $r23 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r24 = virtualinvoke $r23.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(i7);

        virtualinvoke $r24.<com.android.internal.telephony.dataconnection.DcTracker: void cleanUpAllConnections(java.lang.String)>("radioTurnedOff");

     label07:
        i5 = i5 + 1;

        goto label05;

     label08:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Data disconnected, turn off radio right away.");

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void hangupAndPowerOff()>();

     label09:
        goto label20;

     label10:
        $r29 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z5 = virtualinvoke $r29.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z5 == 0 goto label11;

        $r9 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z3 = virtualinvoke $r9.<com.android.internal.telephony.GsmCdmaPhone: boolean isInCall()>();

        if $z3 == 0 goto label11;

        $r10 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r11 = $r10.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r12 = $r11.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mRingingCall>;

        virtualinvoke $r12.<com.android.internal.telephony.GsmCdmaCall: void hangupIfAlive()>();

        $r13 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r14 = $r13.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r15 = $r14.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mBackgroundCall>;

        virtualinvoke $r15.<com.android.internal.telephony.GsmCdmaCall: void hangupIfAlive()>();

        $r16 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r17 = $r16.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.GsmCdmaCallTracker mCT>;

        $r18 = $r17.<com.android.internal.telephony.GsmCdmaCallTracker: com.android.internal.telephony.GsmCdmaCall mForegroundCall>;

        virtualinvoke $r18.<com.android.internal.telephony.GsmCdmaCall: void hangupIfAlive()>();

     label11:
        $r30 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        r31 = virtualinvoke $r30.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        i8 = lengthof r31;

     label12:
        i9 = 0;

     label13:
        if i9 >= i8 goto label16;

        i0 = r31[i9];

     label14:
        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(i0);

        if $r6 == null goto label15;

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(i0);

        virtualinvoke $r8.<com.android.internal.telephony.dataconnection.DcTracker: void cleanUpAllConnections(java.lang.String)>("radioTurnedOff");

     label15:
        i9 = i9 + 1;

        goto label13;

     label16:
        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i1 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        if i4 == $i1 goto label17;

        $r3 = staticinvoke <com.android.internal.telephony.ProxyController: com.android.internal.telephony.ProxyController getInstance()>();

        $z2 = virtualinvoke $r3.<com.android.internal.telephony.ProxyController: boolean areAllDataDisconnected(int)>(i4);

        if $z2 != 0 goto label17;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Data is active on DDS.  Wait for all data disconnect");

        $r4 = staticinvoke <com.android.internal.telephony.ProxyController: com.android.internal.telephony.ProxyController getInstance()>();

        virtualinvoke $r4.<com.android.internal.telephony.ProxyController: void registerForAllDataDisconnected(int,android.os.Handler,int)>(i4, r0, 49);

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff> = 1;

     label17:
        r32 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler)>(r0);

        r32.<android.os.Message: int what> = 38;

        $i10 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPendingRadioPowerOffAfterDataOffTag>;

        i11 = $i10 + 1;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mPendingRadioPowerOffAfterDataOffTag> = i11;

        r32.<android.os.Message: int arg1> = i11;

        $z6 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean sendMessageDelayed(android.os.Message,long)>(r32, 30000L);

        if $z6 == 0 goto label19;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Wait upto 30s for data to disconnect, then turn off radio.");

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff> = 1;

     label18:
        goto label20;

     label19:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Cannot send delayed Msg, turn off radio right away.");

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void hangupAndPowerOff()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff> = 0;

     label20:
        exitmonitor r0;

     label21:
        return;

     label22:
        $r27 := @caughtexception;

     label23:
        exitmonitor r0;

     label24:
        throw $r27;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    public boolean processPendingRadioPowerOffAfterDataOff()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;
        int $i0, $i1;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff>;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Process pending request to turn radio off.");

        $i0 = r0.<com.android.internal.telephony.ServiceStateTracker: int mPendingRadioPowerOffAfterDataOffTag>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mPendingRadioPowerOffAfterDataOffTag> = $i1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void hangupAndPowerOff()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPendingRadioPowerOffAfterDataOff> = 0;

        exitmonitor r0;

     label2:
        return 1;

     label3:
        exitmonitor r0;

     label4:
        return 0;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void reRegisterNetwork(android.os.Message)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Message r1, $r3;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(19, r1);

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getPreferredNetworkType(android.os.Message)>($r3);

        return;
    }

    public void registerForDataConnectionAttached(int, android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1;
        com.android.internal.telephony.Registrant $r1;
        android.util.SparseArray $r2, $r4, $r8;
        java.lang.Object $r3, $r5, r10;
        com.android.internal.telephony.RegistrantList $r6, $r7;
        boolean $z0;
        android.os.Handler r9;
        android.telephony.ServiceState r12;
        android.telephony.NetworkRegistrationInfo r13;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        r9 := @parameter1: android.os.Handler;

        i1 := @parameter2: int;

        r10 := @parameter3: java.lang.Object;

        $r1 = new com.android.internal.telephony.Registrant;

        specialinvoke $r1.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r9, i1, r10);

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mAttachedRegistrants>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r3 != null goto label1;

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mAttachedRegistrants>;

        $r7 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r7.<com.android.internal.telephony.RegistrantList: void <init>()>();

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r7);

     label1:
        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mAttachedRegistrants>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (com.android.internal.telephony.RegistrantList) $r5;

        virtualinvoke $r6.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r1);

        r12 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        if r12 == null goto label3;

        r13 = virtualinvoke r12.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, i0);

        if r13 == null goto label2;

        $z0 = virtualinvoke r13.<android.telephony.NetworkRegistrationInfo: boolean isInService()>();

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke $r1.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label3:
        return;
    }

    public void registerForDataConnectionDetached(int, android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1;
        com.android.internal.telephony.Registrant $r1;
        android.util.SparseArray $r2, $r4, $r8;
        java.lang.Object $r3, $r5, r10;
        com.android.internal.telephony.RegistrantList $r6, $r7;
        boolean $z0;
        android.os.Handler r9;
        android.telephony.ServiceState r12;
        android.telephony.NetworkRegistrationInfo r13;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        r9 := @parameter1: android.os.Handler;

        i1 := @parameter2: int;

        r10 := @parameter3: java.lang.Object;

        $r1 = new com.android.internal.telephony.Registrant;

        specialinvoke $r1.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r9, i1, r10);

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDetachedRegistrants>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r3 != null goto label1;

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDetachedRegistrants>;

        $r7 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r7.<com.android.internal.telephony.RegistrantList: void <init>()>();

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r7);

     label1:
        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDetachedRegistrants>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (com.android.internal.telephony.RegistrantList) $r5;

        virtualinvoke $r6.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r1);

        r12 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        if r12 == null goto label2;

        r13 = virtualinvoke r12.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, i0);

        if r13 == null goto label2;

        $z0 = virtualinvoke r13.<android.telephony.NetworkRegistrationInfo: boolean isInService()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r1.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label2:
        return;
    }

    public void registerForDataRegStateOrRatChanged(int, android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1;
        com.android.internal.telephony.Registrant $r1;
        android.util.SparseArray $r2, $r4, $r8;
        java.lang.Object $r3, $r5, r10;
        com.android.internal.telephony.RegistrantList $r6, $r7;
        android.os.Handler r9;
        android.util.Pair r12;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        r9 := @parameter1: android.os.Handler;

        i1 := @parameter2: int;

        r10 := @parameter3: java.lang.Object;

        $r1 = new com.android.internal.telephony.Registrant;

        specialinvoke $r1.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r9, i1, r10);

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDataRegStateOrRatChangedRegistrants>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r3 != null goto label1;

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDataRegStateOrRatChangedRegistrants>;

        $r7 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r7.<com.android.internal.telephony.RegistrantList: void <init>()>();

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r7);

     label1:
        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDataRegStateOrRatChangedRegistrants>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (com.android.internal.telephony.RegistrantList) $r5;

        virtualinvoke $r6.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r1);

        r12 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.util.Pair getRegistrationInfo(int)>(i0);

        if r12 == null goto label2;

        virtualinvoke $r1.<com.android.internal.telephony.Registrant: void notifyResult(java.lang.Object)>(r12);

     label2:
        return;
    }

    public void registerForDataRoamingOff(android.os.Handler, int, java.lang.Object, boolean)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.Object r1;
        boolean z0, $z1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.telephony.ServiceState $r4;
        android.os.Handler r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        z0 := @parameter3: boolean;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r5, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mDataRoamingOffRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        if z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z1 = virtualinvoke $r4.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z1 != 0 goto label1;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label1:
        return;
    }

    public void registerForDataRoamingOn(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.telephony.ServiceState $r4;
        boolean $z0;
        android.os.Handler r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r5, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mDataRoamingOnRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z0 = virtualinvoke $r4.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label1:
        return;
    }

    public void registerForImsCapabilityChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mImsCapabilityChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        return;
    }

    public void registerForNetworkAttached(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, $i1;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.telephony.ServiceState $r4;
        android.os.Handler r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r5, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNetworkAttachedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i1 = virtualinvoke $r4.<android.telephony.ServiceState: int getState()>();

        if $i1 != 0 goto label1;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label1:
        return;
    }

    public void registerForNetworkDetached(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, $i1;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.telephony.ServiceState $r4;
        android.os.Handler r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r5, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNetworkDetachedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i1 = virtualinvoke $r4.<android.telephony.ServiceState: int getState()>();

        if $i1 == 0 goto label1;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label1:
        return;
    }

    public void registerForNrFrequencyChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNrFrequencyChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        return;
    }

    public void registerForNrStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNrStateChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        return;
    }

    public void registerForPsRestrictedDisabled(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        com.android.internal.telephony.RestrictedState $r4;
        boolean $z0;
        android.os.Handler r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r5, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mPsRestrictDisabledRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z0 = virtualinvoke $r4.<com.android.internal.telephony.RestrictedState: boolean isPsRestricted()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label1:
        return;
    }

    public void registerForPsRestrictedEnabled(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        com.android.internal.telephony.RestrictedState $r4;
        boolean $z0;
        android.os.Handler r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r5, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mPsRestrictEnabledRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z0 = virtualinvoke $r4.<com.android.internal.telephony.RestrictedState: boolean isPsRestricted()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label1:
        return;
    }

    public void registerForSubscriptionInfoReady(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        boolean $z0;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        $z0 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isMinInfoReady()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label1:
        return;
    }

    public void registerForVoiceRegStateOrRatChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRegStateOrRatChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void notifyVoiceRegStateRilRadioTechnologyChanged()>();

        return;
    }

    public void registerForVoiceRoamingOff(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.telephony.ServiceState $r4;
        boolean $z0;
        android.os.Handler r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r5, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRoamingOffRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z0 = virtualinvoke $r4.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label1:
        return;
    }

    public void registerForVoiceRoamingOn(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.telephony.ServiceState $r4;
        boolean $z0;
        android.os.Handler r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r5, i0, r1);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRoamingOnRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z0 = virtualinvoke $r4.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyRegistrant()>();

     label1:
        return;
    }

    public void requestAllCellInfo(android.os.WorkSource, android.os.Message)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.util.List r1, $r5, $r6, $r8;
        long l0, $l2, $l4, $l5;
        com.android.internal.telephony.CommandsInterface $r2, $r3;
        int $i1, $i3;
        boolean $z0;
        byte $b6;
        android.os.Message $r4, r12, r13;
        java.lang.Throwable $r10;
        android.os.WorkSource r11;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r11 := @parameter0: android.os.WorkSource;

        r12 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i1 = interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: int getRilVersion()>();

        if $i1 >= 8 goto label01;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>(r12);

        virtualinvoke r12.<android.os.Message: void sendToTarget()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("SST.requestAllCellInfo(): not implemented");

        return;

     label01:
        r1 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mPendingCellInfoRequests>;

        entermonitor r1;

     label02:
        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsPendingCellInfoRequest>;

        if $z0 == 0 goto label07;

     label03:
        if r12 == null goto label05;

     label04:
        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mPendingCellInfoRequests>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r12);

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.internal.telephony.ServiceStateTracker: long mLastCellInfoReqTime>;

        $l5 = l0 - $l2;

        $i3 = r0.<com.android.internal.telephony.ServiceStateTracker: int mCellInfoMinIntervalMs>;

        $l4 = (long) $i3;

        $b6 = $l5 cmp $l4;

        if $b6 >= 0 goto label12;

     label08:
        if r12 == null goto label10;

     label09:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("SST.requestAllCellInfo(): return last, back to back calls");

        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastCellInfoList>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r12, $r6, null);

        virtualinvoke r12.<android.os.Message: void sendToTarget()>();

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        if r12 == null goto label14;

     label13:
        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mPendingCellInfoRequests>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r12);

     label14:
        r0.<com.android.internal.telephony.ServiceStateTracker: long mLastCellInfoReqTime> = l0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsPendingCellInfoRequest> = 1;

        r13 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(43);

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void getCellInfoList(android.os.Message,android.os.WorkSource)>(r13, r11);

     label15:
        $r4 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(43);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean sendMessageDelayed(android.os.Message,long)>($r4, 2000L);

     label16:
        exitmonitor r1;

     label17:
        return;

     label18:
        $r10 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public void requestCellIdentity(android.os.WorkSource, android.os.Message)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.WorkSource r1;
        android.os.Message r2, $r4;
        android.telephony.CellIdentity r3;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.WorkSource;

        r2 := @parameter1: android.os.Message;

        r3 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity mCellIdentity>;

        if r3 == null goto label1;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r2, r3, null);

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;

     label1:
        $r4 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(56, r2);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void requestAllCellInfo(android.os.WorkSource,android.os.Message)>(r1, $r4);

        return;
    }

    public void requestShutdown()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDeviceShuttingDown>;

        if $z0 != 1 goto label1;

        return;

     label1:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDeviceShuttingDown> = 1;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDesiredPowerState> = 0;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setPowerStateToDesired()>();

        return;
    }

    public void setCellInfoMinInterval(int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mCellInfoMinIntervalMs> = i0;

        return;
    }

    public void setImsRegistrationState(boolean)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        com.android.internal.telephony.GsmCdmaPhone $r6;
        android.content.Context $r7;
        java.lang.Object $r8;
        android.app.PendingIntent $r9;
        android.app.AlarmManager $r10;
        android.os.Message $r11;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        z0 := @parameter0: boolean;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsRegistrationState - registered : ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r5);

        $z1 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mImsRegistrationOnOff>;

        if $z1 == 0 goto label1;

        if z0 != 0 goto label1;

        $z2 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mAlarmSwitch>;

        if $z2 == 0 goto label1;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mImsRegistrationOnOff> = z0;

        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r10 = (android.app.AlarmManager) $r8;

        $r9 = r0.<com.android.internal.telephony.ServiceStateTracker: android.app.PendingIntent mRadioOffIntent>;

        virtualinvoke $r10.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r9);

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mAlarmSwitch> = 0;

        $r11 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(45);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean sendMessage(android.os.Message)>($r11);

        return;

     label1:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mImsRegistrationOnOff> = z0;

        return;
    }

    public void setNotification(int)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.content.Context r1, $r18;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, z8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i17, i18, i19, i21, $i22, $i24, $i25;
        java.lang.String $r6, $r10, $r11, $r15, $r32, $r44, $r54, $r63, $r80;
        com.android.internal.telephony.GsmCdmaPhone $r7, $r8, $r17, $r47;
        com.android.internal.telephony.SubscriptionController $r9, $r21;
        android.content.res.Resources $r16, $r69;
        java.lang.Object $r19, r59, r60, $r78;
        android.telephony.TelephonyManager $r20;
        android.telephony.ServiceState $r30, $r31;
        android.app.Notification $r33, $r77;
        java.lang.Object[] $r34, $r36, $r38, $r45, $r48;
        java.lang.Integer $r35, $r37, $r39, $r46, $r49;
        long $l13, $l15, $l23;
        byte $b16;
        android.os.ParcelUuid $r50;
        android.telephony.SubscriptionInfo r57;
        android.os.PersistableBundle r58;
        short s20;
        android.app.Notification$Builder $r65, $r66, $r67, $r68, $r70, $r71, $r74, $r75, $r76, r86;
        android.app.Notification$BigTextStyle $r73, r87;
        android.app.NotificationManager r79;
        java.lang.StringBuilder r82, r83, r84, r85, r88;
        java.lang.CharSequence r89, r90, r91, r92;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i18 := @parameter0: int;

        i19 = i18;

        r82 = new java.lang.StringBuilder;

        specialinvoke r82.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setNotification: create notification ");

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r6 = virtualinvoke r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r6);

        $i2 = r0.<com.android.internal.telephony.ServiceStateTracker: int mSubId>;

        $z1 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>($i2);

        if $z1 != 0 goto label01;

        r83 = new java.lang.StringBuilder;

        specialinvoke r83.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot setNotification on invalid subid mSubId=");

        $i17 = r0.<com.android.internal.telephony.ServiceStateTracker: int mSubId>;

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r54 = virtualinvoke r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r54);

        return;

     label01:
        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r1 = virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r9 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.SubscriptionController mSubscriptionController>;

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i3 = virtualinvoke $r8.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $r10 = virtualinvoke r1.<android.content.Context: java.lang.String getOpPackageName()>();

        $r11 = virtualinvoke r1.<android.content.Context: java.lang.String getAttributionTag()>();

        r57 = virtualinvoke $r9.<com.android.internal.telephony.SubscriptionController: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int,java.lang.String,java.lang.String)>($i3, $r10, $r11);

        if r57 == null goto label32;

        $z2 = virtualinvoke r57.<android.telephony.SubscriptionInfo: boolean isOpportunistic()>();

        if $z2 == 0 goto label02;

        $r50 = virtualinvoke r57.<android.telephony.SubscriptionInfo: android.os.ParcelUuid getGroupUuid()>();

        if $r50 == null goto label02;

        goto label32;

     label02:
        $r16 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $z3 = virtualinvoke $r16.<android.content.res.Resources: boolean getBoolean(int)>(17891583);

        if $z3 != 0 goto label03;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Ignore all the notifications");

        return;

     label03:
        r58 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        $z4 = virtualinvoke r58.<android.os.PersistableBundle: boolean getBoolean(java.lang.String,boolean)>("disable_voice_barring_notification_bool", 0);

        if $z4 == 0 goto label05;

        if i18 == 1003 goto label04;

        if i18 == 1005 goto label04;

        if i18 != 1006 goto label05;

     label04:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Voice/emergency call barred notification disabled");

        return;

     label05:
        z0 = virtualinvoke r58.<android.os.PersistableBundle: boolean getBoolean(java.lang.String,boolean)>("carrier_auto_cancel_cs_notification", 0);

        r59 = "";

        r60 = "";

        s20 = 999;

        i21 = 17301642;

        $r17 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r18 = virtualinvoke $r17.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r19 = virtualinvoke $r18.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r20 = (android.telephony.TelephonyManager) $r19;

        $i5 = virtualinvoke $r20.<android.telephony.TelephonyManager: int getPhoneCount()>();

        if $i5 <= 1 goto label06;

        z6 = 1;

        goto label07;

     label06:
        z6 = 0;

     label07:
        $r21 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.SubscriptionController mSubscriptionController>;

        $i6 = r0.<com.android.internal.telephony.ServiceStateTracker: int mSubId>;

        $i7 = virtualinvoke $r21.<com.android.internal.telephony.SubscriptionController: int getSlotIndex(int)>($i6);

        i0 = $i7 + 1;

        if i18 == 1005 goto label23;

        if i18 == 1006 goto label20;

        if i18 == 2001 goto label17;

        tableswitch(i18)
        {
            case 1001: goto label13;
            case 1002: goto label12;
            case 1003: goto label09;
            default: goto label08;
        };

     label08:
        goto label25;

     label09:
        r60 = virtualinvoke r1.<android.content.Context: java.lang.CharSequence getText(int)>(17039532);

        if z6 == 0 goto label10;

        $r45 = newarray (java.lang.Object)[1];

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r45[0] = $r46;

        r59 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039537, $r45);

        goto label11;

     label10:
        r59 = virtualinvoke r1.<android.content.Context: java.lang.CharSequence getText(int)>(17039536);

     label11:
        goto label25;

     label12:
        s20 = 888;

        goto label25;

     label13:
        $i12 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>();

        $l13 = (long) $i12;

        $r47 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i14 = virtualinvoke $r47.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        $l15 = (long) $i14;

        $b16 = $l13 cmp $l15;

        if $b16 == 0 goto label14;

        return;

     label14:
        s20 = 888;

        r60 = virtualinvoke r1.<android.content.Context: java.lang.CharSequence getText(int)>(17039533);

        if z6 == 0 goto label15;

        $r48 = newarray (java.lang.Object)[1];

        $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r48[0] = $r49;

        r59 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039537, $r48);

        goto label16;

     label15:
        r59 = virtualinvoke r1.<android.content.Context: java.lang.CharSequence getText(int)>(17039536);

     label16:
        goto label25;

     label17:
        s20 = 111;

        $i10 = r0.<com.android.internal.telephony.ServiceStateTracker: int mRejectCode>;

        i1 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int selectResourceForRejectCode(int,boolean)>($i10, z6);

        if i1 != 0 goto label19;

        if z0 == 0 goto label18;

        i19 = 2002;

        goto label25;

     label18:
        r84 = new java.lang.StringBuilder;

        specialinvoke r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setNotification: mRejectCode=");

        $i11 = r0.<com.android.internal.telephony.ServiceStateTracker: int mRejectCode>;

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not handled.");

        $r44 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void loge(java.lang.String)>($r44);

        return;

     label19:
        i21 = 17303541;

        $r38 = newarray (java.lang.Object)[1];

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r38[0] = $r39;

        r60 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(i1, $r38);

        r59 = null;

        goto label25;

     label20:
        r60 = virtualinvoke r1.<android.content.Context: java.lang.CharSequence getText(int)>(17039534);

        if z6 == 0 goto label21;

        $r36 = newarray (java.lang.Object)[1];

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r36[0] = $r37;

        r59 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039537, $r36);

        goto label22;

     label21:
        r59 = virtualinvoke r1.<android.content.Context: java.lang.CharSequence getText(int)>(17039536);

     label22:
        goto label25;

     label23:
        r60 = virtualinvoke r1.<android.content.Context: java.lang.CharSequence getText(int)>(17039535);

        if z6 == 0 goto label24;

        $r34 = newarray (java.lang.Object)[1];

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r34[0] = $r35;

        r59 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039537, $r34);

        goto label25;

     label24:
        r59 = virtualinvoke r1.<android.content.Context: java.lang.CharSequence getText(int)>(17039536);

     label25:
        r85 = new java.lang.StringBuilder;

        specialinvoke r85.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setNotification, create notification, notifyType: ");

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", title: ");

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r60);

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", details: ");

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r59);

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", subId: ");

        $i22 = r0.<com.android.internal.telephony.ServiceStateTracker: int mSubId>;

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r63 = virtualinvoke r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r63);

        r86 = new android.app.Notification$Builder;

        specialinvoke r86.<android.app.Notification$Builder: void <init>(android.content.Context)>(r1);

        $l23 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r65 = virtualinvoke r86.<android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>($l23);

        $r66 = virtualinvoke $r65.<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)>(1);

        $r67 = virtualinvoke $r66.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(i21);

        r89 = (java.lang.CharSequence) r60;

        $r68 = virtualinvoke $r67.<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>(r89);

        $r69 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i24 = virtualinvoke $r69.<android.content.res.Resources: int getColor(int)>(17170460);

        $r70 = virtualinvoke $r68.<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>($i24);

        r90 = (java.lang.CharSequence) r60;

        $r71 = virtualinvoke $r70.<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>(r90);

        r87 = new android.app.Notification$BigTextStyle;

        specialinvoke r87.<android.app.Notification$BigTextStyle: void <init>()>();

        r91 = (java.lang.CharSequence) r59;

        $r73 = virtualinvoke r87.<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)>(r91);

        $r74 = virtualinvoke $r71.<android.app.Notification$Builder: android.app.Notification$Builder setStyle(android.app.Notification$Style)>($r73);

        r92 = (java.lang.CharSequence) r59;

        $r75 = virtualinvoke $r74.<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>(r92);

        $r76 = virtualinvoke $r75.<android.app.Notification$Builder: android.app.Notification$Builder setChannelId(java.lang.String)>("alert");

        $r77 = virtualinvoke $r76.<android.app.Notification$Builder: android.app.Notification build()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.app.Notification mNotification> = $r77;

        $r78 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

        r79 = (android.app.NotificationManager) $r78;

        if i19 == 1002 goto label30;

        if i19 == 1004 goto label30;

        if i19 != 2002 goto label26;

        goto label30;

     label26:
        $r30 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $z5 = virtualinvoke $r30.<android.telephony.ServiceState: boolean isEmergencyOnly()>();

        if $z5 == 0 goto label27;

        if i19 != 1006 goto label27;

        z8 = 1;

        goto label29;

     label27:
        if i19 != 2001 goto label28;

        z8 = 1;

        goto label29;

     label28:
        z8 = 0;

        $r31 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i8 = virtualinvoke $r31.<android.telephony.ServiceState: int getState()>();

        if $i8 != 0 goto label29;

        z8 = 1;

     label29:
        if z8 == 0 goto label31;

        $i9 = r0.<com.android.internal.telephony.ServiceStateTracker: int mSubId>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        $r33 = r0.<com.android.internal.telephony.ServiceStateTracker: android.app.Notification mNotification>;

        virtualinvoke r79.<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>($r32, s20, $r33);

        goto label31;

     label30:
        $i25 = r0.<com.android.internal.telephony.ServiceStateTracker: int mSubId>;

        $r80 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i25);

        virtualinvoke r79.<android.app.NotificationManager: void cancel(java.lang.String,int)>($r80, s20);

     label31:
        return;

     label32:
        r88 = new java.lang.StringBuilder;

        specialinvoke r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot setNotification on invisible subid mSubId=");

        $i4 = r0.<com.android.internal.telephony.ServiceStateTracker: int mSubId>;

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r15);

        return;
    }

    protected void setOperatorIdd(java.lang.String)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;
        boolean $z0, $z1;
        com.android.internal.telephony.HbpcdUtils $r2;
        java.lang.String $r3, r4, r5;
        int $i0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: boolean getUnitTestMode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.HbpcdUtils mHbpcdUtils>;

        $r3 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        r5 = virtualinvoke $r2.<com.android.internal.telephony.HbpcdUtils: java.lang.String getIddByMcc(int)>($i0);

        if r5 == null goto label2;

        $z1 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        staticinvoke <android.internal.telephony.sysprop.TelephonyProperties: void operator_idp_string(java.lang.String)>(r5);

        goto label3;

     label2:
        staticinvoke <android.internal.telephony.sysprop.TelephonyProperties: void operator_idp_string(java.lang.String)>("+");

     label3:
        return;
    }

    protected void setPowerStateToDesired()
    {
        com.android.internal.telephony.ServiceStateTracker r0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setPowerStateToDesired(boolean,boolean,boolean)>(0, 0, 0);

        return;
    }

    protected void setPowerStateToDesired(boolean, boolean, boolean)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        android.content.Context r1, $r30;
        java.lang.StringBuilder $r2;
        com.android.internal.telephony.CommandsInterface $r8, $r18, $r19, $r20, $r27, $r28;
        int $i0, $i1, $i2, $i5;
        com.android.internal.telephony.LocalLog $r16;
        com.android.internal.telephony.GsmCdmaPhone $r17, $r21, $r22, $r29;
        java.lang.Object $r23, $r31;
        android.content.Intent $r24;
        android.app.PendingIntent $r25, $r26, $r32;
        long $l3, $l4;
        android.app.AlarmManager $r33, r36;
        java.lang.String r35;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDeviceShuttingDown=");

        $z3 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDeviceShuttingDown>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDesiredPowerState=");

        $z4 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDesiredPowerState>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", getRadioState=");

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i0 = interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mPowerOffDelayNeed=");

        $z5 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPowerOffDelayNeed>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mAlarmSwitch=");

        $z6 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mAlarmSwitch>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mRadioDisabledByCarrier=");

        $z7 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mRadioDisabledByCarrier>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        r35 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>(r35);

        $r16 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocalLog mRadioPowerLog>;

        virtualinvoke $r16.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>(r35);

        $r17 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z8 = virtualinvoke $r17.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z8 == 0 goto label1;

        $z16 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mAlarmSwitch>;

        if $z16 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("mAlarmSwitch == true");

        $r29 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r30 = virtualinvoke $r29.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r31 = virtualinvoke $r30.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r33 = (android.app.AlarmManager) $r31;

        $r32 = r0.<com.android.internal.telephony.ServiceStateTracker: android.app.PendingIntent mRadioOffIntent>;

        virtualinvoke $r33.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r32);

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mAlarmSwitch> = 0;

     label1:
        $z17 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDesiredPowerState>;

        if $z17 == 0 goto label3;

        $z15 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mRadioDisabledByCarrier>;

        if $z15 != 0 goto label3;

        if z2 != 0 goto label2;

        $r28 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i5 = interfaceinvoke $r28.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i5 != 0 goto label3;

     label2:
        $r27 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r27.<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,boolean,boolean,android.os.Message)>(1, z0, z1, null);

        goto label8;

     label3:
        $z18 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDesiredPowerState>;

        if $z18 == 0 goto label4;

        $z14 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mRadioDisabledByCarrier>;

        if $z14 == 0 goto label7;

     label4:
        $r18 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i1 = interfaceinvoke $r18.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i1 != 1 goto label7;

        $r21 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z10 = virtualinvoke $r21.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z10 == 0 goto label6;

        $z11 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mPowerOffDelayNeed>;

        if $z11 == 0 goto label6;

        $z12 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mImsRegistrationOnOff>;

        if $z12 == 0 goto label5;

        $z13 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mAlarmSwitch>;

        if $z13 != 0 goto label5;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("mImsRegistrationOnOff == true");

        $r22 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r1 = virtualinvoke $r22.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r23 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r36 = (android.app.AlarmManager) $r23;

        $r24 = new android.content.Intent;

        specialinvoke $r24.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ACTION_RADIO_OFF");

        $r25 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r1, 0, $r24, 67108864);

        r0.<com.android.internal.telephony.ServiceStateTracker: android.app.PendingIntent mRadioOffIntent> = $r25;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mAlarmSwitch> = 1;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("Alarm setting");

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = $l3 + 3000L;

        $r26 = r0.<com.android.internal.telephony.ServiceStateTracker: android.app.PendingIntent mRadioOffIntent>;

        virtualinvoke r36.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(2, $l4, $r26);

        goto label8;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void powerOffRadioSafely()>();

        goto label8;

     label6:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void powerOffRadioSafely()>();

        goto label8;

     label7:
        $z9 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDeviceShuttingDown>;

        if $z9 == 0 goto label8;

        $r19 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i2 = interfaceinvoke $r19.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i2 == 2 goto label8;

        $r20 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r20.<com.android.internal.telephony.CommandsInterface: void requestShutdown(android.os.Message)>(null);

     label8:
        return;
    }

    public final void setRadioPower(boolean)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setRadioPower(boolean,boolean,boolean,boolean)>(z0, 0, 0, 0);

        return;
    }

    public void setRadioPower(boolean, boolean, boolean, boolean)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean z0, z1, z2, z3, $z4;
        java.lang.StringBuilder $r1, $r7;
        java.lang.String $r6, $r11;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRadioPower forEmergencyCall ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" forceApply ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r6);

        $z4 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDesiredPowerState>;

        if z0 != $z4 goto label1;

        if z3 != 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRadioPower mDesiredPowerState is already ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Do nothing.");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r11);

        return;

     label1:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mDesiredPowerState> = z0;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setPowerStateToDesired(boolean,boolean,boolean)>(z1, z2, z3);

        return;
    }

    public void setRadioPowerFromCarrier(boolean)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0, z1, z2;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        z1 := @parameter0: boolean;

        z2 = z1 ^ 1;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mRadioDisabledByCarrier>;

        if $z0 != z2 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRadioPowerFromCarrier mRadioDisabledByCarrier is already ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Do nothing.");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r6);

        return;

     label1:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mRadioDisabledByCarrier> = z2;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setPowerStateToDesired()>();

        return;
    }

    protected void setRoamingType(android.telephony.ServiceState)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.telephony.ServiceState r1;
        int[] r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, i9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10;
        com.android.internal.telephony.GsmCdmaPhone $r3, $r5, $r6;
        java.lang.String $r4, $r9, $r10;
        android.content.Context $r7;
        android.content.res.Resources $r8;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.telephony.ServiceState;

        $i0 = virtualinvoke r1.<android.telephony.ServiceState: int getState()>();

        if $i0 != 0 goto label01;

        z9 = 1;

        goto label02;

     label01:
        z9 = 0;

     label02:
        if z9 == 0 goto label12;

        $z5 = virtualinvoke r1.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z5 == 0 goto label11;

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z6 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z6 == 0 goto label04;

        $r10 = virtualinvoke r1.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $z8 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean inSameCountry(java.lang.String)>($r10);

        if $z8 == 0 goto label03;

        virtualinvoke r1.<android.telephony.ServiceState: void setVoiceRoamingType(int)>(2);

        goto label12;

     label03:
        virtualinvoke r1.<android.telephony.ServiceState: void setVoiceRoamingType(int)>(3);

        goto label12;

     label04:
        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r8.<android.content.res.Resources: int[] getIntArray(int)>(17236001);

        if r2 == null goto label08;

        $i3 = lengthof r2;

        if $i3 <= 0 goto label08;

        virtualinvoke r1.<android.telephony.ServiceState: void setVoiceRoamingType(int)>(2);

        i6 = virtualinvoke r1.<android.telephony.ServiceState: int getCdmaRoamingIndicator()>();

        i7 = 0;

     label05:
        $i4 = lengthof r2;

        if i7 >= $i4 goto label07;

        $i5 = r2[i7];

        if i6 != $i5 goto label06;

        virtualinvoke r1.<android.telephony.ServiceState: void setVoiceRoamingType(int)>(3);

        goto label07;

     label06:
        i7 = i7 + 1;

        goto label05;

     label07:
        goto label10;

     label08:
        $r9 = virtualinvoke r1.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $z7 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean inSameCountry(java.lang.String)>($r9);

        if $z7 == 0 goto label09;

        virtualinvoke r1.<android.telephony.ServiceState: void setVoiceRoamingType(int)>(2);

        goto label10;

     label09:
        virtualinvoke r1.<android.telephony.ServiceState: void setVoiceRoamingType(int)>(3);

     label10:
        goto label12;

     label11:
        virtualinvoke r1.<android.telephony.ServiceState: void setVoiceRoamingType(int)>(0);

     label12:
        $i8 = virtualinvoke r1.<android.telephony.ServiceState: int getDataRegistrationState()>();

        if $i8 != 0 goto label13;

        z10 = 1;

        goto label14;

     label13:
        z10 = 0;

     label14:
        i9 = staticinvoke <com.android.internal.telephony.ServiceStateTracker: int getRilDataRadioTechnologyForWwan(android.telephony.ServiceState)>(r1);

        if z10 == 0 goto label22;

        $z0 = virtualinvoke r1.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z0 != 0 goto label15;

        virtualinvoke r1.<android.telephony.ServiceState: void setDataRoamingType(int)>(0);

        goto label22;

     label15:
        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z1 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z1 == 0 goto label18;

        $z4 = staticinvoke <android.telephony.ServiceState: boolean isGsm(int)>(i9);

        if $z4 == 0 goto label17;

        if z9 == 0 goto label16;

        $i2 = virtualinvoke r1.<android.telephony.ServiceState: int getVoiceRoamingType()>();

        virtualinvoke r1.<android.telephony.ServiceState: void setDataRoamingType(int)>($i2);

        goto label22;

     label16:
        virtualinvoke r1.<android.telephony.ServiceState: void setDataRoamingType(int)>(1);

        goto label22;

     label17:
        virtualinvoke r1.<android.telephony.ServiceState: void setDataRoamingType(int)>(1);

        goto label22;

     label18:
        $z2 = staticinvoke <android.telephony.ServiceState: boolean isCdma(int)>(i9);

        if $z2 == 0 goto label20;

        if z9 == 0 goto label19;

        $i1 = virtualinvoke r1.<android.telephony.ServiceState: int getVoiceRoamingType()>();

        virtualinvoke r1.<android.telephony.ServiceState: void setDataRoamingType(int)>($i1);

        goto label22;

     label19:
        virtualinvoke r1.<android.telephony.ServiceState: void setDataRoamingType(int)>(1);

        goto label22;

     label20:
        $r4 = virtualinvoke r1.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $z3 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean inSameCountry(java.lang.String)>($r4);

        if $z3 == 0 goto label21;

        virtualinvoke r1.<android.telephony.ServiceState: void setDataRoamingType(int)>(2);

        goto label22;

     label21:
        virtualinvoke r1.<android.telephony.ServiceState: void setDataRoamingType(int)>(3);

     label22:
        return;
    }

    public boolean shouldForceDisplayNoService()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.lang.String[] r1;
        java.lang.String r2, $r7;
        int i0, i1;
        com.android.internal.telephony.GsmCdmaPhone $r3;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        boolean $z0, $z1;
        com.android.internal.telephony.LocaleTracker $r6;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236028);

        $z0 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocaleTracker mLocaleTracker>;

        r2 = virtualinvoke $r6.<com.android.internal.telephony.LocaleTracker: java.lang.String getCurrentCountry()>();

        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r7 = r1[i1];

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public void unregisterForDataConnectionAttached(int, android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        android.os.Handler r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3, $r5;
        com.android.internal.telephony.RegistrantList $r6;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mAttachedRegistrants>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r3 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mAttachedRegistrants>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (com.android.internal.telephony.RegistrantList) $r5;

        virtualinvoke $r6.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

     label1:
        return;
    }

    public void unregisterForDataConnectionDetached(int, android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        android.os.Handler r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3, $r5;
        com.android.internal.telephony.RegistrantList $r6;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDetachedRegistrants>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r3 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDetachedRegistrants>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (com.android.internal.telephony.RegistrantList) $r5;

        virtualinvoke $r6.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

     label1:
        return;
    }

    public void unregisterForDataRegStateOrRatChanged(int, android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0;
        android.os.Handler r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3, $r5;
        com.android.internal.telephony.RegistrantList $r6;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDataRegStateOrRatChangedRegistrants>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r3 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDataRegStateOrRatChangedRegistrants>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (com.android.internal.telephony.RegistrantList) $r5;

        virtualinvoke $r6.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

     label1:
        return;
    }

    public void unregisterForDataRoamingOff(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mDataRoamingOffRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForDataRoamingOn(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mDataRoamingOnRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForImsCapabilityChanged(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mImsCapabilityChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNetworkAttached(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNetworkAttachedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNetworkDetached(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNetworkDetachedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNrFrequencyChanged(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNrFrequencyChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNrStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNrStateChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForPsRestrictedDisabled(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mPsRestrictDisabledRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForPsRestrictedEnabled(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mPsRestrictEnabledRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSubscriptionInfoReady(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForVoiceRegStateOrRatChanged(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRegStateOrRatChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForVoiceRoamingOff(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRoamingOffRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForVoiceRoamingOn(android.os.Handler)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRoamingOnRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void updateOperatorNameForCellInfo(java.util.List)
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        java.util.Iterator r1;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2;
        android.telephony.CellIdentity $r3;
        java.util.List r4;
        android.telephony.CellInfo r5;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r4 := @parameter0: java.util.List;

        if r4 == null goto label5;

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label5;

     label1:
        r1 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.telephony.CellInfo) $r2;

        $z2 = virtualinvoke r5.<android.telephony.CellInfo: boolean isRegistered()>();

        if $z2 == 0 goto label3;

        $r3 = virtualinvoke r5.<android.telephony.CellInfo: android.telephony.CellIdentity getCellIdentity()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateOperatorNameForCellIdentity(android.telephony.CellIdentity)>($r3);

     label3:
        goto label2;

     label4:
        return;

     label5:
        return;
    }

    protected void updateOtaspState()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;
        com.android.internal.telephony.GsmCdmaPhone $r8;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        i0 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: int getOtasp()>();

        i1 = r0.<com.android.internal.telephony.ServiceStateTracker: int mCurrentOtaspMode>;

        r0.<com.android.internal.telephony.ServiceStateTracker: int mCurrentOtaspMode> = i0;

        if i1 == i0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateOtaspState: call notifyOtaspChanged old otaspMode=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new otaspMode=");

        $i2 = r0.<com.android.internal.telephony.ServiceStateTracker: int mCurrentOtaspMode>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r7);

        $r8 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i3 = r0.<com.android.internal.telephony.ServiceStateTracker: int mCurrentOtaspMode>;

        virtualinvoke $r8.<com.android.internal.telephony.GsmCdmaPhone: void notifyOtaspChanged(int)>($i3);

     label1:
        return;
    }

    protected void updatePhoneObject()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1, $r6;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        boolean $z0, z1;
        android.telephony.ServiceState $r4, $r5, $r7;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources: boolean getBoolean(int)>(17891559);

        if $z0 == 0 goto label5;

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i0 = virtualinvoke $r4.<android.telephony.ServiceState: int getState()>();

        if $i0 == 0 goto label2;

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i2 = virtualinvoke $r7.<android.telephony.ServiceState: int getState()>();

        if $i2 != 2 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        if z1 != 0 goto label4;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("updatePhoneObject: Ignore update");

        return;

     label4:
        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i1 = virtualinvoke $r5.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: void updatePhoneObject(int)>($i1);

     label5:
        return;
    }

    public void updatePhoneType()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        int i1, $i3, $i4, $i5, i6, i7, i8, i9;
        android.telephony.ServiceState $r1, $r2, r26, r27, r28, r31;
        android.telephony.SignalStrength $r3;
        com.android.internal.telephony.NitzStateMachine $r4;
        long $l2;
        com.android.internal.telephony.GsmCdmaPhone $r5, $r6, $r7, $r13, $r17;
        boolean $z0, $z2, $z3, $z4, z5;
        android.content.Context $r8, $r14;
        com.android.internal.telephony.CommandsInterface $r9, $r10, $r11, $r15, $r16, $r37;
        com.android.internal.telephony.HbpcdUtils $r12;
        android.util.SparseArray $r18, $r20;
        java.lang.Object $r19, $r21;
        com.android.internal.telephony.RegistrantList $r22, $r23, $r24, $r25;
        com.android.internal.telephony.dataconnection.TransportManager $r29, $r40;
        int[] r30, r41;
        android.telephony.NetworkRegistrationInfo r32;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager r35, r36;
        android.os.Message $r38, $r39;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r26 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        if r26 == null goto label01;

        $z4 = virtualinvoke r26.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z4 == 0 goto label01;

        $r25 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mVoiceRoamingOffRegistrants>;

        virtualinvoke $r25.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label01:
        r27 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        if r27 == null goto label02;

        $z3 = virtualinvoke r27.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z3 == 0 goto label02;

        $r24 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mDataRoamingOffRegistrants>;

        virtualinvoke $r24.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label02:
        r28 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        if r28 == null goto label03;

        $i5 = virtualinvoke r28.<android.telephony.ServiceState: int getState()>();

        if $i5 != 0 goto label03;

        $r23 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RegistrantList mNetworkDetachedRegistrants>;

        virtualinvoke $r23.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label03:
        $r29 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        r30 = virtualinvoke $r29.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        i6 = lengthof r30;

        i7 = 0;

     label04:
        if i7 >= i6 goto label06;

        i1 = r30[i7];

        r31 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        if r31 == null goto label05;

        r32 = virtualinvoke r31.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, i1);

        if r32 == null goto label05;

        $z2 = virtualinvoke r32.<android.telephony.NetworkRegistrationInfo: boolean isInService()>();

        if $z2 == 0 goto label05;

        $r18 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDetachedRegistrants>;

        $r19 = virtualinvoke $r18.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        if $r19 == null goto label05;

        $r20 = r0.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDetachedRegistrants>;

        $r21 = virtualinvoke $r20.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r22 = (com.android.internal.telephony.RegistrantList) $r21;

        virtualinvoke $r22.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label05:
        i7 = i7 + 1;

        goto label04;

     label06:
        $r1 = new android.telephony.ServiceState;

        specialinvoke $r1.<android.telephony.ServiceState: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS> = $r1;

        virtualinvoke $r1.<android.telephony.ServiceState: void setStateOutOfService()>();

        $r2 = new android.telephony.ServiceState;

        specialinvoke $r2.<android.telephony.ServiceState: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS> = $r2;

        virtualinvoke $r2.<android.telephony.ServiceState: void setStateOutOfService()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: long mLastCellInfoReqTime> = 0L;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.util.List mLastCellInfoList> = null;

        $r3 = new android.telephony.SignalStrength;

        specialinvoke $r3.<android.telephony.SignalStrength: void <init>()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength mSignalStrength> = $r3;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mStartedGprsRegCheck> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mReportedGprsNoReg> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMdn> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mMin> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: java.lang.String mPrlVersion> = null;

        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsMinInfoReady> = 0;

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzData mLastNitzData> = null;

        $r4 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.NitzStateMachine mNitzState>;

        interfaceinvoke $r4.<com.android.internal.telephony.NitzStateMachine: void handleNetworkUnavailable()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.CellIdentity mCellIdentity> = null;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.ServiceStateTracker: long mSignalStrengthUpdatedTime> = $l2;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void cancelPollState()>();

        $r5 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label08;

        r35 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        if r35 == null goto label07;

        virtualinvoke r35.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: void dispose(android.os.Handler)>(r0);

     label07:
        $r15 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r15.<com.android.internal.telephony.CommandsInterface: void unregisterForCdmaPrlChanged(android.os.Handler)>(r0);

        $r16 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r16.<com.android.internal.telephony.CommandsInterface: void unregisterForCdmaOtaProvision(android.os.Handler)>(r0);

        $r17 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r17.<com.android.internal.telephony.GsmCdmaPhone: void unregisterForSimRecordsLoaded(android.os.Handler)>(r0);

        goto label11;

     label08:
        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: void registerForSimRecordsLoaded(android.os.Handler,int,java.lang.Object)>(r0, 16, null);

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        $r9 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        r36 = staticinvoke <com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager getInstance(android.content.Context,com.android.internal.telephony.CommandsInterface,android.os.Handler,int,java.lang.Object)>($r8, $r9, r0, 39, null);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM> = r36;

        $i3 = virtualinvoke r36.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        if $i3 != 0 goto label09;

        z5 = 1;

        goto label10;

     label09:
        z5 = 0;

     label10:
        r0.<com.android.internal.telephony.ServiceStateTracker: boolean mIsSubscriptionFromRuim> = z5;

        $r10 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r10.<com.android.internal.telephony.CommandsInterface: void registerForCdmaPrlChanged(android.os.Handler,int,java.lang.Object)>(r0, 40, null);

        $r11 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r11.<com.android.internal.telephony.CommandsInterface: void registerForCdmaOtaProvision(android.os.Handler,int,java.lang.Object)>(r0, 37, null);

        $r12 = new com.android.internal.telephony.HbpcdUtils;

        $r13 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        specialinvoke $r12.<com.android.internal.telephony.HbpcdUtils: void <init>(android.content.Context)>($r14);

        r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.HbpcdUtils mHbpcdUtils> = $r12;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateOtaspState()>();

     label11:
        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void onUpdateIccAvailability()>();

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setDataNetworkTypeForPhone(int)>(0);

        $r37 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r38 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(3);

        interfaceinvoke $r37.<com.android.internal.telephony.CommandsInterface: void getSignalStrength(android.os.Message)>($r38);

        $r39 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.Message obtainMessage(int)>(50);

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean sendMessage(android.os.Message)>($r39);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void logPhoneTypeChange()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void notifyVoiceRegStateRilRadioTechnologyChanged()>();

        $r40 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        r41 = virtualinvoke $r40.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        i8 = lengthof r41;

        i9 = 0;

     label12:
        if i9 >= i8 goto label13;

        $i4 = r41[i9];

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void notifyDataRegStateRilRadioTechnologyChanged(int)>($i4);

        i9 = i9 + 1;

        goto label12;

     label13:
        return;
    }

    protected void updateRoamingState()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;
        android.telephony.ServiceState $r2, $r3, $r7, $r13, $r14, $r18, $r24, $r26, $r30, $r36, $r40, $r41, $r44, $r47, $r50, $r55;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, z16, z18, $z19, $z20;
        java.lang.String $r4, $r8, $r12, $r15, $r19, $r23, $r25, $r27, $r31, $r33, $r37, $r39, $r49, r56;
        java.lang.StringBuilder $r5, $r16, $r28, $r34, $r42;
        android.os.PersistableBundle r51;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        r51 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        $r1 = r0.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        z15 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        z16 = 0;

        if z15 == 0 goto label08;

        $z6 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mGsmVoiceRoaming>;

        if $z6 != 0 goto label01;

        $z14 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mGsmDataRoaming>;

        if $z14 == 0 goto label02;

     label01:
        z16 = 1;

     label02:
        z18 = z16;

        if z16 == 0 goto label04;

        z18 = z16;

        $r40 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z9 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isOperatorConsideredRoaming(android.telephony.ServiceState)>($r40);

        if $z9 != 0 goto label04;

        $r41 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z10 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isSameNamedOperators(android.telephony.ServiceState)>($r41);

        if $z10 != 0 goto label03;

        z18 = z16;

        $r50 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z13 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isOperatorConsideredNonRoaming(android.telephony.ServiceState)>($r50);

        if $z13 == 0 goto label04;

     label03:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateRoamingState: resource override set non roaming.isSameNamedOperators=");

        $r44 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z11 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isSameNamedOperators(android.telephony.ServiceState)>($r44);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",isOperatorConsideredNonRoaming=");

        $r47 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z12 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isOperatorConsideredNonRoaming(android.telephony.ServiceState)>($r47);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        $r49 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r49);

        z18 = 0;

     label04:
        $z19 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean alwaysOnHomeNetwork(android.os.BaseBundle)>(r51);

        if $z19 == 0 goto label05;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("updateRoamingState: carrier config override always on home network");

        z18 = 0;

        goto label07;

     label05:
        $r24 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r25 = virtualinvoke $r24.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $z7 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isNonRoamingInGsmNetwork(android.os.BaseBundle,java.lang.String)>(r51, $r25);

        if $z7 == 0 goto label06;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateRoamingState: carrier config override set non roaming:");

        $r36 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r37 = virtualinvoke $r36.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r39);

        z18 = 0;

        goto label07;

     label06:
        $r26 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r27 = virtualinvoke $r26.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $z8 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isRoamingInGsmNetwork(android.os.BaseBundle,java.lang.String)>(r51, $r27);

        if $z8 == 0 goto label07;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateRoamingState: carrier config override set roaming:");

        $r30 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r31 = virtualinvoke $r30.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r33);

        z18 = 1;

     label07:
        $r55 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r55.<android.telephony.ServiceState: void setRoaming(boolean)>(z18);

        goto label14;

     label08:
        $r2 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i0 = virtualinvoke $r2.<android.telephony.ServiceState: int getCdmaSystemId()>();

        r56 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $z0 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean alwaysOnHomeNetwork(android.os.BaseBundle)>(r51);

        if $z0 == 0 goto label09;

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>("updateRoamingState: carrier config override always on home network");

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setRoamingOff()>();

        goto label13;

     label09:
        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r4 = virtualinvoke $r3.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $z1 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isNonRoamingInGsmNetwork(android.os.BaseBundle,java.lang.String)>(r51, $r4);

        if $z1 != 0 goto label12;

        $z3 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isNonRoamingInCdmaNetwork(android.os.BaseBundle,java.lang.String)>(r51, r56);

        if $z3 == 0 goto label10;

        goto label12;

     label10:
        $r14 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r15 = virtualinvoke $r14.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $z4 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isRoamingInGsmNetwork(android.os.BaseBundle,java.lang.String)>(r51, $r15);

        if $z4 != 0 goto label11;

        $z5 = virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: boolean isRoamingInCdmaNetwork(android.os.BaseBundle,java.lang.String)>(r51, r56);

        if $z5 == 0 goto label13;

     label11:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateRoamingState: carrier config override set roaming:");

        $r18 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r19 = virtualinvoke $r18.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        $r23 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r23);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setRoamingOn()>();

        goto label13;

     label12:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateRoamingState: carrier config override set non-roaming:");

        $r7 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r8 = virtualinvoke $r7.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r12);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void setRoamingOff()>();

     label13:
        $z20 = <com.android.internal.telephony.util.TelephonyUtils: boolean IS_DEBUGGABLE>;

        if $z20 == 0 goto label14;

        $z2 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("telephony.test.forceRoaming", 0);

        if $z2 == 0 goto label14;

        $r13 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r13.<android.telephony.ServiceState: void setRoaming(boolean)>(1);

     label14:
        return;
    }

    public void updateSpnDisplay()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        android.os.PersistableBundle $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $r1 = specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: android.os.PersistableBundle getCarrierConfig()>();

        $z0 = virtualinvoke $r1.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("enable_carrier_display_name_resolver_bool");

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateSpnDisplayCdnr()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void updateSpnDisplayLegacy()>();

     label2:
        return;
    }

    protected void useDataRegStateForDataOnlyDevices()
    {
        com.android.internal.telephony.ServiceStateTracker r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        android.telephony.ServiceState $r3, $r6, r10;
        int $i0, $i1, $i2;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.ServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.ServiceStateTracker: boolean mVoiceCapable>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("useDataRegStateForDataOnlyDevice: VoiceRegState=");

        $r3 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i0 = virtualinvoke $r3.<android.telephony.ServiceState: int getState()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" DataRegState=");

        $r6 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i1 = virtualinvoke $r6.<android.telephony.ServiceState: int getDataRegistrationState()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void log(java.lang.String)>($r8);

        r10 = r0.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i2 = virtualinvoke r10.<android.telephony.ServiceState: int getDataRegistrationState()>();

        virtualinvoke r10.<android.telephony.ServiceState: void setVoiceRegState(int)>($i2);

     label1:
        return;
    }
}
