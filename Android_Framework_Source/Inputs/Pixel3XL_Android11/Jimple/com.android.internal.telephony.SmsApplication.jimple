public final class com.android.internal.telephony.SmsApplication extends java.lang.Object
{
    public static final java.lang.String ACTION_DEFAULT_SMS_PACKAGE_CHANGED_INTERNAL;
    public static final java.lang.String BLUETOOTH_PACKAGE_NAME;
    private static final boolean DEBUG;
    private static final boolean DEBUG_MULTIUSER;
    private static final java.lang.String[] DEFAULT_APP_EXCLUSIVE_APPOPS;
    static final java.lang.String LOG_TAG;
    public static final java.lang.String MMS_SERVICE_PACKAGE_NAME;
    public static final java.lang.String PERMISSION_MONITOR_DEFAULT_SMS_PACKAGE;
    public static final java.lang.String PHONE_PACKAGE_NAME;
    private static final java.lang.String SCHEME_MMS;
    private static final java.lang.String SCHEME_MMSTO;
    private static final java.lang.String SCHEME_SMS;
    private static final java.lang.String SCHEME_SMSTO;
    public static final java.lang.String TELEPHONY_PROVIDER_PACKAGE_NAME;
    private static com.android.internal.telephony.SmsApplication$SmsPackageMonitor sSmsPackageMonitor;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.android.internal.telephony.SmsApplication: java.lang.String TELEPHONY_PROVIDER_PACKAGE_NAME> = "com.android.providers.telephony";

        <com.android.internal.telephony.SmsApplication: java.lang.String SCHEME_SMSTO> = "smsto";

        <com.android.internal.telephony.SmsApplication: java.lang.String SCHEME_SMS> = "sms";

        <com.android.internal.telephony.SmsApplication: java.lang.String SCHEME_MMSTO> = "mmsto";

        <com.android.internal.telephony.SmsApplication: java.lang.String SCHEME_MMS> = "mms";

        <com.android.internal.telephony.SmsApplication: java.lang.String PHONE_PACKAGE_NAME> = "com.android.phone";

        <com.android.internal.telephony.SmsApplication: java.lang.String PERMISSION_MONITOR_DEFAULT_SMS_PACKAGE> = "android.permission.MONITOR_DEFAULT_SMS_PACKAGE";

        <com.android.internal.telephony.SmsApplication: java.lang.String MMS_SERVICE_PACKAGE_NAME> = "com.android.mms.service";

        <com.android.internal.telephony.SmsApplication: java.lang.String LOG_TAG> = "SmsApplication";

        <com.android.internal.telephony.SmsApplication: boolean DEBUG_MULTIUSER> = 0;

        <com.android.internal.telephony.SmsApplication: boolean DEBUG> = 0;

        <com.android.internal.telephony.SmsApplication: java.lang.String BLUETOOTH_PACKAGE_NAME> = "com.android.bluetooth";

        <com.android.internal.telephony.SmsApplication: java.lang.String ACTION_DEFAULT_SMS_PACKAGE_CHANGED_INTERNAL> = "android.provider.action.DEFAULT_SMS_PACKAGE_CHANGED_INTERNAL";

        $r0 = newarray (java.lang.String)[6];

        $r0[0] = "android:read_sms";

        $r0[1] = "android:write_sms";

        $r0[2] = "android:receive_sms";

        $r0[3] = "android:receive_wap_push";

        $r0[4] = "android:send_sms";

        $r0[5] = "android:read_cell_broadcasts";

        <com.android.internal.telephony.SmsApplication: java.lang.String[] DEFAULT_APP_EXCLUSIVE_APPOPS> = $r0;

        <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsPackageMonitor sSmsPackageMonitor> = null;

        return;
    }

    public void <init>()
    {
        com.android.internal.telephony.SmsApplication r0;

        r0 := @this: com.android.internal.telephony.SmsApplication;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$800(android.content.pm.PackageManager, android.content.ComponentName)
    {
        android.content.pm.PackageManager r0;
        android.content.ComponentName r1;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: android.content.ComponentName;

        staticinvoke <com.android.internal.telephony.SmsApplication: void configurePreferredActivity(android.content.pm.PackageManager,android.content.ComponentName)>(r0, r1);

        return;
    }

    private static void assignExclusiveSmsPermissionsToSystemApp(android.content.Context, android.content.pm.PackageManager, android.app.AppOpsManager, java.lang.String, boolean)
    {
        android.app.AppOpsManager r0;
        java.lang.String r1, $r5, $r7, $r11, $r16;
        boolean z0;
        android.content.pm.ApplicationInfo $r2, $r6;
        int $i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r8, $r13, r21;
        android.content.pm.PackageManager$NameNotFoundException $r12;
        android.content.Context r17;
        android.content.pm.PackageManager r18;
        android.content.pm.PackageInfo r20;

        r17 := @parameter0: android.content.Context;

        r18 := @parameter1: android.content.pm.PackageManager;

        r0 := @parameter2: android.app.AppOpsManager;

        r1 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        if z0 == 0 goto label1;

        $r7 = virtualinvoke r17.<android.content.Context: java.lang.String getPackageName()>();

        $i4 = virtualinvoke r18.<android.content.pm.PackageManager: int checkSignatures(java.lang.String,java.lang.String)>($r7, r1);

        if $i4 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have system signature");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SmsApplication", $r11);

        return;

     label1:
        r20 = virtualinvoke r18.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 0);

        $r2 = r20.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = virtualinvoke r0.<android.app.AppOpsManager: int unsafeCheckOp(java.lang.String,int,java.lang.String)>("android:write_sms", $i0, r1);

        if $i1 == 0 goto label2;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have OP_WRITE_SMS:  (fixing)");

        $r5 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SmsApplication", $r5);

        $r6 = r20.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        staticinvoke <com.android.internal.telephony.SmsApplication: void setExclusiveAppops(java.lang.String,android.app.AppOpsManager,int,int)>(r1, r0, $i3, 0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package not found: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SmsApplication", $r16);

     label4:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private static void broadcastSmsAppChange(android.content.Context, android.os.UserHandle, com.android.internal.telephony.SmsApplication$SmsApplicationData, com.android.internal.telephony.SmsApplication$SmsApplicationData)
    {
        android.content.Context r0;
        android.os.UserHandle r1;
        com.android.internal.telephony.SmsApplication$SmsApplicationData r2, r18;
        java.lang.String $r4, $r7, $r8, $r11, $r14, $r15;
        android.content.Intent $r5, $r12, $r20;
        android.content.ComponentName $r6, $r13;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.UserHandle;

        r18 := @parameter2: com.android.internal.telephony.SmsApplication$SmsApplicationData;

        r2 := @parameter3: com.android.internal.telephony.SmsApplication$SmsApplicationData;

        if r18 == null goto label1;

        $r11 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$400(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r18);

        if $r11 == null goto label1;

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String)>("android.provider.action.DEFAULT_SMS_PACKAGE_CHANGED");

        $r13 = new android.content.ComponentName;

        $r14 = r18.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        $r15 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$400(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r18);

        specialinvoke $r13.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r14, $r15);

        virtualinvoke $r12.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r13);

        virtualinvoke $r12.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.provider.extra.IS_DEFAULT_SMS_APP", 0);

        virtualinvoke r0.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r12, r1);

     label1:
        if r2 == null goto label2;

        $r4 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$400(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r2);

        if $r4 == null goto label2;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.provider.action.DEFAULT_SMS_PACKAGE_CHANGED");

        $r6 = new android.content.ComponentName;

        $r7 = r2.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        $r8 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$400(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r2);

        specialinvoke $r6.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r7, $r8);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r6);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.provider.extra.IS_DEFAULT_SMS_APP", 1);

        virtualinvoke r0.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r5, r1);

     label2:
        $r20 = new android.content.Intent;

        specialinvoke $r20.<android.content.Intent: void <init>(java.lang.String)>("android.provider.action.DEFAULT_SMS_PACKAGE_CHANGED_INTERNAL");

        virtualinvoke r0.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r20, r1, "android.permission.MONITOR_DEFAULT_SMS_PACKAGE");

        return;
    }

    public static void broadcastSmsAppChange(android.content.Context, android.os.UserHandle, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        android.os.UserHandle r1;
        java.lang.String r2, r3;
        java.util.Collection r4;
        com.android.internal.telephony.SmsApplication$SmsApplicationData $r5, $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = staticinvoke <com.android.internal.telephony.SmsApplication: java.util.Collection getApplicationCollection(android.content.Context)>(r0);

        $r5 = staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplicationForPackage(java.util.Collection,java.lang.String)>(r4, r2);

        $r6 = staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplicationForPackage(java.util.Collection,java.lang.String)>(r4, r3);

        staticinvoke <com.android.internal.telephony.SmsApplication: void broadcastSmsAppChange(android.content.Context,android.os.UserHandle,com.android.internal.telephony.SmsApplication$SmsApplicationData,com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r0, r1, $r5, $r6);

        return;
    }

    private static void configurePreferredActivity(android.content.pm.PackageManager, android.content.ComponentName)
    {
        android.content.pm.PackageManager r0;
        android.content.ComponentName r1;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: android.content.ComponentName;

        staticinvoke <com.android.internal.telephony.SmsApplication: void replacePreferredActivity(android.content.pm.PackageManager,android.content.ComponentName,java.lang.String)>(r0, r1, "sms");

        staticinvoke <com.android.internal.telephony.SmsApplication: void replacePreferredActivity(android.content.pm.PackageManager,android.content.ComponentName,java.lang.String)>(r0, r1, "smsto");

        staticinvoke <com.android.internal.telephony.SmsApplication: void replacePreferredActivity(android.content.pm.PackageManager,android.content.ComponentName,java.lang.String)>(r0, r1, "mms");

        staticinvoke <com.android.internal.telephony.SmsApplication: void replacePreferredActivity(android.content.pm.PackageManager,android.content.ComponentName,java.lang.String)>(r0, r1, "mmsto");

        return;
    }

    private static void defaultSmsAppChanged(android.content.Context)
    {
        android.content.pm.PackageManager r0;
        android.app.AppOpsManager r1;
        int i0, i1;
        java.lang.Object $r2;
        java.lang.String $r3, $r4;
        android.content.Context r5;
        java.lang.String[] r6;

        r5 := @parameter0: android.content.Context;

        r0 = virtualinvoke r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        r1 = (android.app.AppOpsManager) $r2;

        staticinvoke <com.android.internal.telephony.SmsApplication: void assignExclusiveSmsPermissionsToSystemApp(android.content.Context,android.content.pm.PackageManager,android.app.AppOpsManager,java.lang.String,boolean)>(r5, r0, r1, "com.android.phone", 1);

        staticinvoke <com.android.internal.telephony.SmsApplication: void assignExclusiveSmsPermissionsToSystemApp(android.content.Context,android.content.pm.PackageManager,android.app.AppOpsManager,java.lang.String,boolean)>(r5, r0, r1, "com.android.bluetooth", 1);

        staticinvoke <com.android.internal.telephony.SmsApplication: void assignExclusiveSmsPermissionsToSystemApp(android.content.Context,android.content.pm.PackageManager,android.app.AppOpsManager,java.lang.String,boolean)>(r5, r0, r1, "com.android.mms.service", 1);

        staticinvoke <com.android.internal.telephony.SmsApplication: void assignExclusiveSmsPermissionsToSystemApp(android.content.Context,android.content.pm.PackageManager,android.app.AppOpsManager,java.lang.String,boolean)>(r5, r0, r1, "com.android.providers.telephony", 1);

        $r3 = staticinvoke <com.android.internal.telephony.CellBroadcastUtils: java.lang.String getDefaultCellBroadcastReceiverPackageName(android.content.Context)>(r5);

        staticinvoke <com.android.internal.telephony.SmsApplication: void assignExclusiveSmsPermissionsToSystemApp(android.content.Context,android.content.pm.PackageManager,android.app.AppOpsManager,java.lang.String,boolean)>(r5, r0, r1, $r3, 0);

        r6 = <com.android.internal.telephony.SmsApplication: java.lang.String[] DEFAULT_APP_EXCLUSIVE_APPOPS>;

        i0 = lengthof r6;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r6[i1];

        virtualinvoke r1.<android.app.AppOpsManager: void setUidMode(java.lang.String,int,int)>($r4, 1001, 0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static com.android.internal.telephony.SmsApplication$SmsApplicationData getApplication(android.content.Context, boolean, int)
    {
        android.content.Context r0;
        boolean z0, $z1, $z2, $z3;
        int i0, $i1, $i2;
        java.lang.Object $r1, $r2;
        android.telephony.TelephonyManager r3;
        android.app.role.RoleManager r4;
        java.util.Collection r5;
        java.lang.String r6;
        com.android.internal.telephony.SmsApplication$SmsApplicationData r7, r8, r9;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r3 = (android.telephony.TelephonyManager) $r1;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("role");

        r4 = (android.app.role.RoleManager) $r2;

        $z1 = virtualinvoke r3.<android.telephony.TelephonyManager: boolean isSmsCapable()>();

        if $z1 != 0 goto label2;

        if r4 == null goto label1;

        $z3 = virtualinvoke r4.<android.app.role.RoleManager: boolean isRoleAvailable(java.lang.String)>("android.app.role.SMS");

        if $z3 != 0 goto label2;

     label1:
        return null;

     label2:
        r5 = staticinvoke <com.android.internal.telephony.SmsApplication: java.util.Collection getApplicationCollectionInternal(android.content.Context,int)>(r0, i0);

        r6 = staticinvoke <com.android.internal.telephony.SmsApplication: java.lang.String getDefaultSmsPackage(android.content.Context,int)>(r0, i0);

        r7 = null;

        if r6 == null goto label3;

        r7 = staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplicationForPackage(java.util.Collection,java.lang.String)>(r5, r6);

     label3:
        r8 = r7;

        if r7 == null goto label6;

        if z0 != 0 goto label4;

        r9 = r7;

        $i1 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: int access$700(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r7);

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        if $i1 != $i2 goto label5;

     label4:
        r9 = r7;

        $z2 = staticinvoke <com.android.internal.telephony.SmsApplication: boolean tryFixExclusiveSmsAppops(android.content.Context,com.android.internal.telephony.SmsApplication$SmsApplicationData,boolean)>(r0, r7, z0);

        if $z2 != 0 goto label5;

        r9 = null;

     label5:
        r8 = r9;

        if r9 == null goto label6;

        r8 = r9;

        if z0 == 0 goto label6;

        staticinvoke <com.android.internal.telephony.SmsApplication: void defaultSmsAppChanged(android.content.Context)>(r0);

        r8 = r9;

     label6:
        return r8;
    }

    public static java.util.Collection getApplicationCollection(android.content.Context)
    {
        android.content.Context r0;
        int $i0;
        java.util.Collection $r1;

        r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.android.internal.telephony.SmsApplication: int getIncomingUserId(android.content.Context)>(r0);

        $r1 = staticinvoke <com.android.internal.telephony.SmsApplication: java.util.Collection getApplicationCollectionAsUser(android.content.Context,int)>(r0, $i0);

        return $r1;
    }

    public static java.util.Collection getApplicationCollectionAsUser(android.content.Context, int)
    {
        int i0;
        long l1;
        java.lang.Throwable $r0;
        android.content.Context r1;
        java.util.Collection r2;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = staticinvoke <com.android.internal.telephony.SmsApplication: java.util.Collection getApplicationCollectionInternal(android.content.Context,int)>(r1, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r2;

     label3:
        $r0 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static java.util.Collection getApplicationCollectionInternal(android.content.Context, int)
    {
        int i0, $i1;
        android.content.Intent $r2, $r4, $r7, $r11, $r14, $r16, $r18;
        java.util.HashMap $r3;
        java.util.List $r6, $r10, $r13, $r15, $r17, $r19, r77;
        android.net.Uri $r8, $r12;
        android.os.UserHandle $r9, r76;
        java.util.Collection $r20;
        java.lang.Object $r21, $r23, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r54, $r57, $r62, $r65;
        android.content.pm.ResolveInfo $r22, $r26, $r32, $r38, $r44, $r50, $r58, $r66;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String $r27, $r29, $r33, $r35, $r39, $r41, $r45, $r47, $r51, $r52, $r53, $r55, $r59, $r60, $r61, $r63, $r67, $r68, $r71, r80, r106;
        com.android.internal.telephony.SmsApplication$SmsApplicationData $r69, r84, r88, r91, r95, r99, r103, r107;
        android.content.pm.ApplicationInfo $r70;
        android.content.Context r74;
        android.content.pm.PackageManager r75;
        java.util.Iterator r78, r82, r86, r89, r93, r97, r101, r104;
        android.content.pm.ActivityInfo r79, r83, r90, r94, r98, r102, r105;
        android.content.pm.ServiceInfo r87;

        r74 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r75 = virtualinvoke r74.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r76 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.provider.Telephony.SMS_DELIVER");

        r77 = virtualinvoke r75.<android.content.pm.PackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,android.os.UserHandle)>($r2, 786432, r76);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r78 = interfaceinvoke r77.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke r78.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label05;

        $r65 = interfaceinvoke r78.<java.util.Iterator: java.lang.Object next()>();

        $r66 = (android.content.pm.ResolveInfo) $r65;

        r79 = $r66.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if r79 != null goto label02;

        goto label01;

     label02:
        $r68 = "android.permission.BROADCAST_SMS";

        $r67 = r79.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $z3 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z3 != 0 goto label03;

        goto label01;

     label03:
        r80 = r79.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z4 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r80);

        if $z4 != 0 goto label04;

        $r69 = new com.android.internal.telephony.SmsApplication$SmsApplicationData;

        $r70 = r79.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r70.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke $r69.<com.android.internal.telephony.SmsApplication$SmsApplicationData: void <init>(java.lang.String,int)>(r80, $i1);

        $r71 = r79.<android.content.pm.ActivityInfo: java.lang.String name>;

        staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$002(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>($r69, $r71);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r80, $r69);

     label04:
        goto label01;

     label05:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.provider.Telephony.WAP_PUSH_DELIVER");

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>(null, "application/vnd.wap.mms-message");

        $r6 = virtualinvoke r75.<android.content.pm.PackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,android.os.UserHandle)>($r4, 786432, r76);

        r82 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z6 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label10;

        $r57 = interfaceinvoke r82.<java.util.Iterator: java.lang.Object next()>();

        $r58 = (android.content.pm.ResolveInfo) $r57;

        r83 = $r58.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if r83 != null goto label07;

        goto label06;

     label07:
        $r60 = "android.permission.BROADCAST_WAP_PUSH";

        $r59 = r83.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $z2 = virtualinvoke $r60.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z2 != 0 goto label08;

        goto label06;

     label08:
        $r61 = r83.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r62 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r61);

        r84 = (com.android.internal.telephony.SmsApplication$SmsApplicationData) $r62;

        if r84 == null goto label09;

        $r63 = r83.<android.content.pm.ActivityInfo: java.lang.String name>;

        staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$102(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>(r84, $r63);

     label09:
        goto label06;

     label10:
        $r7 = new android.content.Intent;

        $r8 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("smsto", "", null);

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.RESPOND_VIA_MESSAGE", $r8);

        $r9 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        $r10 = virtualinvoke r75.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,android.os.UserHandle)>($r7, 786432, $r9);

        r86 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z7 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label15;

        $r49 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>();

        $r50 = (android.content.pm.ResolveInfo) $r49;

        r87 = $r50.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if r87 != null goto label12;

        goto label11;

     label12:
        $r52 = "android.permission.SEND_RESPOND_VIA_MESSAGE";

        $r51 = r87.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z1 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>($r51);

        if $z1 != 0 goto label13;

        goto label11;

     label13:
        $r53 = r87.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r54 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r53);

        r88 = (com.android.internal.telephony.SmsApplication$SmsApplicationData) $r54;

        if r88 == null goto label14;

        $r55 = r87.<android.content.pm.ServiceInfo: java.lang.String name>;

        staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$202(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>(r88, $r55);

     label14:
        goto label11;

     label15:
        $r11 = new android.content.Intent;

        $r12 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("smsto", "", null);

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.SENDTO", $r12);

        $r13 = virtualinvoke r75.<android.content.pm.PackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,android.os.UserHandle)>($r11, 786432, r76);

        r89 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z8 = interfaceinvoke r89.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label19;

        $r43 = interfaceinvoke r89.<java.util.Iterator: java.lang.Object next()>();

        $r44 = (android.content.pm.ResolveInfo) $r43;

        r90 = $r44.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if r90 != null goto label17;

        goto label16;

     label17:
        $r45 = r90.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r46 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r45);

        r91 = (com.android.internal.telephony.SmsApplication$SmsApplicationData) $r46;

        if r91 == null goto label18;

        $r47 = r90.<android.content.pm.ActivityInfo: java.lang.String name>;

        staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$302(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>(r91, $r47);

     label18:
        goto label16;

     label19:
        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String)>("android.provider.action.DEFAULT_SMS_PACKAGE_CHANGED");

        $r15 = virtualinvoke r75.<android.content.pm.PackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,android.os.UserHandle)>($r14, 786432, r76);

        r93 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z9 = interfaceinvoke r93.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label23;

        $r37 = interfaceinvoke r93.<java.util.Iterator: java.lang.Object next()>();

        $r38 = (android.content.pm.ResolveInfo) $r37;

        r94 = $r38.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if r94 != null goto label21;

        goto label20;

     label21:
        $r39 = r94.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r40 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r39);

        r95 = (com.android.internal.telephony.SmsApplication$SmsApplicationData) $r40;

        if r95 == null goto label22;

        $r41 = r94.<android.content.pm.ActivityInfo: java.lang.String name>;

        staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$402(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>(r95, $r41);

     label22:
        goto label20;

     label23:
        $r16 = new android.content.Intent;

        specialinvoke $r16.<android.content.Intent: void <init>(java.lang.String)>("android.provider.action.EXTERNAL_PROVIDER_CHANGE");

        $r17 = virtualinvoke r75.<android.content.pm.PackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,android.os.UserHandle)>($r16, 786432, r76);

        r97 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z10 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label27;

        $r31 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>();

        $r32 = (android.content.pm.ResolveInfo) $r31;

        r98 = $r32.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if r98 != null goto label25;

        goto label24;

     label25:
        $r33 = r98.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r34 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r33);

        r99 = (com.android.internal.telephony.SmsApplication$SmsApplicationData) $r34;

        if r99 == null goto label26;

        $r35 = r98.<android.content.pm.ActivityInfo: java.lang.String name>;

        staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$502(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>(r99, $r35);

     label26:
        goto label24;

     label27:
        $r18 = new android.content.Intent;

        specialinvoke $r18.<android.content.Intent: void <init>(java.lang.String)>("android.provider.Telephony.SIM_FULL");

        $r19 = virtualinvoke r75.<android.content.pm.PackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,android.os.UserHandle)>($r18, 786432, r76);

        r101 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z11 = interfaceinvoke r101.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label31;

        $r25 = interfaceinvoke r101.<java.util.Iterator: java.lang.Object next()>();

        $r26 = (android.content.pm.ResolveInfo) $r25;

        r102 = $r26.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if r102 != null goto label29;

        goto label28;

     label29:
        $r27 = r102.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r28 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r27);

        r103 = (com.android.internal.telephony.SmsApplication$SmsApplicationData) $r28;

        if r103 == null goto label30;

        $r29 = r102.<android.content.pm.ActivityInfo: java.lang.String name>;

        staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$602(com.android.internal.telephony.SmsApplication$SmsApplicationData,java.lang.String)>(r103, $r29);

        goto label30;

     label30:
        goto label28;

     label31:
        r104 = interfaceinvoke r77.<java.util.List: java.util.Iterator iterator()>();

     label32:
        $z12 = interfaceinvoke r104.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label35;

        $r21 = interfaceinvoke r104.<java.util.Iterator: java.lang.Object next()>();

        $r22 = (android.content.pm.ResolveInfo) $r21;

        r105 = $r22.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if r105 != null goto label33;

        goto label32;

     label33:
        r106 = r105.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r23 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r106);

        r107 = (com.android.internal.telephony.SmsApplication$SmsApplicationData) $r23;

        if r107 == null goto label34;

        $z0 = virtualinvoke r107.<com.android.internal.telephony.SmsApplication$SmsApplicationData: boolean isComplete()>();

        if $z0 != 0 goto label34;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r106);

     label34:
        goto label32;

     label35:
        $r20 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        return $r20;
    }

    public static com.android.internal.telephony.SmsApplication$SmsApplicationData getApplicationForPackage(java.util.Collection, java.lang.String)
    {
        java.lang.String r0, $r3;
        java.util.Iterator r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        java.util.Collection r4;
        com.android.internal.telephony.SmsApplication$SmsApplicationData r5;

        r4 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.internal.telephony.SmsApplication$SmsApplicationData) $r2;

        $r3 = r5.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>(r0);

        if $z1 == 0 goto label3;

        return r5;

     label3:
        goto label2;

     label4:
        return null;
    }

    public static android.content.ComponentName getDefaultExternalTelephonyProviderChangedApplication(android.content.Context, boolean)
    {
        boolean z0;
        int i0;
        long l1;
        com.android.internal.telephony.SmsApplication$SmsApplicationData r0;
        java.lang.String $r1, $r3, $r4;
        android.content.ComponentName $r2, r7;
        java.lang.Throwable $r5;
        android.content.Context r6;

        r6 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        i0 = staticinvoke <com.android.internal.telephony.SmsApplication: int getIncomingUserId(android.content.Context)>(r6);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r0 = staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplication(android.content.Context,boolean,int)>(r6, z0, i0);

     label2:
        r7 = null;

        if r0 == null goto label4;

        r7 = null;

     label3:
        $r1 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$500(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r0);

        if $r1 == null goto label4;

        $r2 = new android.content.ComponentName;

        $r3 = r0.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        $r4 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$500(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r0);

        specialinvoke $r2.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r3, $r4);

        r7 = $r2;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r7;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static android.content.ComponentName getDefaultMmsApplication(android.content.Context, boolean)
    {
        boolean z0;
        int i0;
        long l1;
        com.android.internal.telephony.SmsApplication$SmsApplicationData r0;
        android.content.ComponentName $r1, r6;
        java.lang.String $r2, $r3;
        java.lang.Throwable $r4;
        android.content.Context r5;

        r5 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        i0 = staticinvoke <com.android.internal.telephony.SmsApplication: int getIncomingUserId(android.content.Context)>(r5);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r0 = staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplication(android.content.Context,boolean,int)>(r5, z0, i0);

     label2:
        r6 = null;

        if r0 == null goto label4;

     label3:
        $r1 = new android.content.ComponentName;

        $r2 = r0.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        $r3 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$100(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r0);

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        r6 = $r1;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r6;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static android.content.ComponentName getDefaultRespondViaMessageApplication(android.content.Context, boolean)
    {
        boolean z0;
        int i0;
        long l1;
        com.android.internal.telephony.SmsApplication$SmsApplicationData r0;
        android.content.ComponentName $r1, r6;
        java.lang.String $r2, $r3;
        java.lang.Throwable $r4;
        android.content.Context r5;

        r5 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        i0 = staticinvoke <com.android.internal.telephony.SmsApplication: int getIncomingUserId(android.content.Context)>(r5);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r0 = staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplication(android.content.Context,boolean,int)>(r5, z0, i0);

     label2:
        r6 = null;

        if r0 == null goto label4;

     label3:
        $r1 = new android.content.ComponentName;

        $r2 = r0.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        $r3 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$200(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r0);

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        r6 = $r1;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r6;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static android.content.ComponentName getDefaultSendToApplication(android.content.Context, boolean)
    {
        boolean z0;
        int i0;
        long l1;
        com.android.internal.telephony.SmsApplication$SmsApplicationData r0;
        android.content.ComponentName $r1, r6;
        java.lang.String $r2, $r3;
        java.lang.Throwable $r4;
        android.content.Context r5;

        r5 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        i0 = staticinvoke <com.android.internal.telephony.SmsApplication: int getIncomingUserId(android.content.Context)>(r5);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r0 = staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplication(android.content.Context,boolean,int)>(r5, z0, i0);

     label2:
        r6 = null;

        if r0 == null goto label4;

     label3:
        $r1 = new android.content.ComponentName;

        $r2 = r0.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        $r3 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$300(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r0);

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        r6 = $r1;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r6;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static android.content.ComponentName getDefaultSimFullApplication(android.content.Context, boolean)
    {
        boolean z0;
        int i0;
        long l1;
        com.android.internal.telephony.SmsApplication$SmsApplicationData r0;
        java.lang.String $r1, $r3, $r4;
        android.content.ComponentName $r2, r7;
        java.lang.Throwable $r5;
        android.content.Context r6;

        r6 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        i0 = staticinvoke <com.android.internal.telephony.SmsApplication: int getIncomingUserId(android.content.Context)>(r6);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r0 = staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplication(android.content.Context,boolean,int)>(r6, z0, i0);

     label2:
        r7 = null;

        if r0 == null goto label4;

        r7 = null;

     label3:
        $r1 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$600(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r0);

        if $r1 == null goto label4;

        $r2 = new android.content.ComponentName;

        $r3 = r0.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        $r4 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$600(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r0);

        specialinvoke $r2.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r3, $r4);

        r7 = $r2;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r7;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static android.content.ComponentName getDefaultSmsApplication(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;
        int $i0;
        android.content.ComponentName $r1;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $i0 = staticinvoke <com.android.internal.telephony.SmsApplication: int getIncomingUserId(android.content.Context)>(r0);

        $r1 = staticinvoke <com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSmsApplicationAsUser(android.content.Context,boolean,int)>(r0, z0, $i0);

        return $r1;
    }

    public static android.content.ComponentName getDefaultSmsApplicationAsUser(android.content.Context, boolean, int)
    {
        boolean z0;
        int i0;
        long l1;
        com.android.internal.telephony.SmsApplication$SmsApplicationData r0;
        android.content.ComponentName $r1, r6;
        java.lang.String $r2, $r3;
        java.lang.Throwable $r4;
        android.content.Context r5;

        r5 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r0 = staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplication(android.content.Context,boolean,int)>(r5, z0, i0);

     label2:
        r6 = null;

        if r0 == null goto label4;

     label3:
        $r1 = new android.content.ComponentName;

        $r2 = r0.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        $r3 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String access$000(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r0);

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        r6 = $r1;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r6;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private static java.lang.String getDefaultSmsApplicationPackageName(android.content.Context)
    {
        java.lang.String $r0;
        android.content.Context r1;
        android.content.ComponentName r2;

        r1 := @parameter0: android.content.Context;

        r2 = staticinvoke <com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSmsApplication(android.content.Context,boolean)>(r1, 0);

        if r2 == null goto label1;

        $r0 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        return $r0;

     label1:
        return null;
    }

    private static java.lang.String getDefaultSmsPackage(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        java.lang.Object $r1;
        android.app.role.RoleManager $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/role/RoleManager;");

        $r2 = (android.app.role.RoleManager) $r1;

        $r3 = virtualinvoke $r2.<android.app.role.RoleManager: java.lang.String getDefaultSmsPackage(int)>(i0);

        return $r3;
    }

    private static int getIncomingUserId(android.content.Context)
    {
        android.content.Context r0;
        int i0, i1, $i2, $i3;
        android.os.UserHandle $r1;

        r0 := @parameter0: android.content.Context;

        i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i1);

        if $i2 >= 10000 goto label1;

        return i0;

     label1:
        $r1 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i1);

        $i3 = virtualinvoke $r1.<android.os.UserHandle: int getIdentifier()>();

        return $i3;
    }

    public static com.android.internal.telephony.SmsApplication$SmsApplicationData getSmsApplicationData(java.lang.String, android.content.Context)
    {
        java.lang.String r0;
        android.content.Context r1;
        java.util.Collection $r2;
        com.android.internal.telephony.SmsApplication$SmsApplicationData $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.Context;

        $r2 = staticinvoke <com.android.internal.telephony.SmsApplication: java.util.Collection getApplicationCollection(android.content.Context)>(r1);

        $r3 = staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplicationForPackage(java.util.Collection,java.lang.String)>($r2, r0);

        return $r3;
    }

    public static void initSmsPackageMonitor(android.content.Context)
    {
        android.content.Context r0;
        com.android.internal.telephony.SmsApplication$SmsPackageMonitor $r2;
        android.os.Looper $r3;
        android.os.UserHandle $r4;

        r0 := @parameter0: android.content.Context;

        $r2 = new com.android.internal.telephony.SmsApplication$SmsPackageMonitor;

        specialinvoke $r2.<com.android.internal.telephony.SmsApplication$SmsPackageMonitor: void <init>(android.content.Context)>(r0);

        <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsPackageMonitor sSmsPackageMonitor> = $r2;

        $r3 = virtualinvoke r0.<android.content.Context: android.os.Looper getMainLooper()>();

        $r4 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r2.<com.android.internal.telephony.SmsApplication$SmsPackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle)>(r0, $r3, $r4);

        return;
    }

    public static boolean isDefaultSmsApplication(android.content.Context, java.lang.String)
    {
        java.lang.String r0, $r1, r3;
        boolean $z0, $z1;
        android.content.Context r2;

        r2 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        r3 = staticinvoke <com.android.internal.telephony.SmsApplication: java.lang.String getDefaultSmsApplicationPackageName(android.content.Context)>(r2);

        if r3 == null goto label2;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label3;

     label2:
        $r1 = "com.android.bluetooth";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    static android.content.ComponentName lambda$replacePreferredActivity$1(android.content.pm.ResolveInfo)
    {
        android.content.pm.ResolveInfo r0;
        android.content.ComponentName $r1;
        android.content.pm.ActivityInfo $r2, $r3;
        java.lang.String $r4, $r5;

        r0 := @parameter0: android.content.pm.ResolveInfo;

        $r1 = new android.content.ComponentName;

        $r2 = r0.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r5 = $r2.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r3 = r0.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r4 = $r3.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r5, $r4);

        return $r1;
    }

    static void lambda$setDefaultApplicationInternal$0(java.util.concurrent.CompletableFuture, java.lang.Boolean)
    {
        java.util.concurrent.CompletableFuture r0;
        java.lang.Boolean r1;
        boolean $z0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.concurrent.CompletableFuture;

        r1 := @parameter1: java.lang.Boolean;

        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>(null);

        goto label2;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>()>();

        virtualinvoke r0.<java.util.concurrent.CompletableFuture: boolean completeExceptionally(java.lang.Throwable)>($r2);

     label2:
        return;
    }

    private static void replacePreferredActivity(android.content.pm.PackageManager, android.content.ComponentName, java.lang.String)
    {
        android.content.pm.PackageManager r0;
        android.content.ComponentName r1;
        java.lang.String r2;
        java.util.List r3, $r7;
        android.net.Uri $r6;
        java.util.stream.Stream $r8, $r10;
        com.android.internal.telephony.'-$$Lambda$SmsApplication$5KAxbm71Dll9xmT5zeXi0i27A10' $r9;
        java.util.stream.Collector $r11;
        java.lang.Object $r12;
        android.content.Intent r14;
        android.content.IntentFilter r15;
        java.util.function.Function r16;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: android.content.ComponentName;

        r2 := @parameter2: java.lang.String;

        r14 = new android.content.Intent;

        $r6 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>(r2, "", null);

        specialinvoke r14.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.SENDTO", $r6);

        $r7 = virtualinvoke r0.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r14, 65600);

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.stream.Stream stream()>();

        $r9 = <com.android.internal.telephony._$$Lambda$SmsApplication$5KAxbm71Dll9xmT5zeXi0i27A10: com.android.internal.telephony.'-$$Lambda$SmsApplication$5KAxbm71Dll9xmT5zeXi0i27A10' INSTANCE>;

        r16 = (java.util.function.Function) $r9;

        $r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r16);

        $r11 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r12 = interfaceinvoke $r10.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r11);

        r3 = (java.util.List) $r12;

        r15 = new android.content.IntentFilter;

        specialinvoke r15.<android.content.IntentFilter: void <init>()>();

        virtualinvoke r15.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SENDTO");

        virtualinvoke r15.<android.content.IntentFilter: void addCategory(java.lang.String)>("android.intent.category.DEFAULT");

        virtualinvoke r15.<android.content.IntentFilter: void addDataScheme(java.lang.String)>(r2);

        virtualinvoke r0.<android.content.pm.PackageManager: void replacePreferredActivity(android.content.IntentFilter,int,java.util.List,android.content.ComponentName)>(r15, 2129920, r3, r1);

        return;
    }

    public static void setDefaultApplication(java.lang.String, android.content.Context)
    {
        java.lang.String r0;
        android.content.Context r1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.Context;

        $i0 = staticinvoke <com.android.internal.telephony.SmsApplication: int getIncomingUserId(android.content.Context)>(r1);

        staticinvoke <com.android.internal.telephony.SmsApplication: void setDefaultApplicationAsUser(java.lang.String,android.content.Context,int)>(r0, r1, $i0);

        return;
    }

    public static void setDefaultApplicationAsUser(java.lang.String, android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.telephony.TelephonyManager r1;
        android.app.role.RoleManager r2;
        long l1;
        java.lang.Object $r3, $r4;
        boolean $z0, $z1;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r6 := @parameter0: java.lang.String;

        r0 := @parameter1: android.content.Context;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r1 = (android.telephony.TelephonyManager) $r3;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("role");

        r2 = (android.app.role.RoleManager) $r4;

        $z0 = virtualinvoke r1.<android.telephony.TelephonyManager: boolean isSmsCapable()>();

        if $z0 != 0 goto label2;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<android.app.role.RoleManager: boolean isRoleAvailable(java.lang.String)>("android.app.role.SMS");

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        staticinvoke <com.android.internal.telephony.SmsApplication: void setDefaultApplicationInternal(java.lang.String,android.content.Context,int)>(r6, r0, i0);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private static void setDefaultApplicationInternal(java.lang.String, android.content.Context, int)
    {
        int i0, $i1;
        java.lang.Object $r0, $r30;
        android.content.pm.PackageInfo $r2;
        android.content.pm.ApplicationInfo $r3;
        boolean $z0;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.StringBuilder $r6, $r11;
        java.lang.String $r9, $r14, r15, r18, $r32;
        java.lang.Throwable $r10;
        android.content.Context r16, $r19;
        android.os.UserHandle r17, $r33;
        android.content.pm.PackageManager r20;
        java.util.Collection r21;
        com.android.internal.telephony.SmsApplication$SmsApplicationData r22;
        android.app.AppOpsManager r23;
        java.util.concurrent.CompletableFuture $r26;
        com.android.internal.telephony._$$Lambda$SmsApplication$gDx3W_UsTeTFaBSPU_Y_LFPZ9dE $r28;
        android.app.role.RoleManager $r31;
        java.util.concurrent.Executor $r34;
        java.util.concurrent.TimeUnit $r35;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: android.content.Context;

        i0 := @parameter2: int;

        r17 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        r18 = staticinvoke <com.android.internal.telephony.SmsApplication: java.lang.String getDefaultSmsPackage(android.content.Context,int)>(r16, i0);

        if r15 == null goto label01;

        if r18 == null goto label01;

        $z0 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r19 = virtualinvoke r16.<android.content.Context: android.content.Context createContextAsUser(android.os.UserHandle,int)>(r17, 0);

        r20 = virtualinvoke $r19.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r21 = staticinvoke <com.android.internal.telephony.SmsApplication: java.util.Collection getApplicationCollectionInternal(android.content.Context,int)>(r16, i0);

        if r18 == null goto label02;

        staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplicationForPackage(java.util.Collection,java.lang.String)>(r21, r18);

        goto label02;

     label02:
        r22 = staticinvoke <com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplicationForPackage(java.util.Collection,java.lang.String)>(r21, r15);

        if r22 == null goto label10;

        $r0 = virtualinvoke r16.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        r23 = (android.app.AppOpsManager) $r0;

        if r18 == null goto label06;

     label03:
        $r2 = virtualinvoke r20.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r18, 0);

        $r3 = $r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        staticinvoke <com.android.internal.telephony.SmsApplication: void setExclusiveAppops(java.lang.String,android.app.AppOpsManager,int,int)>(r18, r23, $i1, 3);

     label04:
        goto label06;

     label05:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Old SMS package not found: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SmsApplication", $r9);

     label06:
        $r26 = new java.util.concurrent.CompletableFuture;

        specialinvoke $r26.<java.util.concurrent.CompletableFuture: void <init>()>();

        $r28 = new com.android.internal.telephony._$$Lambda$SmsApplication$gDx3W_UsTeTFaBSPU_Y_LFPZ9dE;

        specialinvoke $r28.<com.android.internal.telephony._$$Lambda$SmsApplication$gDx3W_UsTeTFaBSPU_Y_LFPZ9dE: void <init>(java.util.concurrent.CompletableFuture)>($r26);

        $r30 = virtualinvoke r16.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/role/RoleManager;");

        $r31 = (android.app.role.RoleManager) $r30;

        $r32 = r22.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        $r33 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        $r34 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        virtualinvoke $r31.<android.app.role.RoleManager: void addRoleHolderAsUser(java.lang.String,java.lang.String,int,android.os.UserHandle,java.util.concurrent.Executor,java.util.function.Consumer)>("android.app.role.SMS", $r32, 0, $r33, $r34, $r28);

     label07:
        $r35 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        virtualinvoke $r26.<java.util.concurrent.CompletableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(5L, $r35);

     label08:
        staticinvoke <com.android.internal.telephony.SmsApplication: void defaultSmsAppChanged(android.content.Context)>(r16);

        goto label10;

     label09:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while adding sms role holder ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsApplication", $r14, $r10);

        return;

     label10:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label05;
        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.util.concurrent.ExecutionException from label07 to label08 with label09;
        catch java.util.concurrent.TimeoutException from label07 to label08 with label09;
    }

    private static void setExclusiveAppops(java.lang.String, android.app.AppOpsManager, int, int)
    {
        android.app.AppOpsManager r0;
        int i0, i1, i2, i3;
        java.lang.String $r1, r2;
        java.lang.String[] r3;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: android.app.AppOpsManager;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = <com.android.internal.telephony.SmsApplication: java.lang.String[] DEFAULT_APP_EXCLUSIVE_APPOPS>;

        i2 = lengthof r3;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r1 = r3[i3];

        virtualinvoke r0.<android.app.AppOpsManager: void setUidMode(java.lang.String,int,int)>($r1, i0, i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public static boolean shouldWriteMessageForPackage(java.lang.String, android.content.Context)
    {
        java.lang.String r0;
        android.content.Context r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.Context;

        $z0 = staticinvoke <com.android.internal.telephony.SmsApplication: boolean isDefaultSmsApplication(android.content.Context,java.lang.String)>(r1, r0);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    private static boolean tryFixExclusiveSmsAppops(android.content.Context, com.android.internal.telephony.SmsApplication$SmsApplicationData, boolean)
    {
        com.android.internal.telephony.SmsApplication$SmsApplicationData r0;
        boolean z0;
        android.app.AppOpsManager r1;
        java.lang.String[] r2;
        int i0, $i1, $i2, $i4, i5;
        java.lang.String r3, $r6, $r8, $r14, r16;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7;
        android.content.Context r15;

        r15 := @parameter0: android.content.Context;

        r0 := @parameter1: com.android.internal.telephony.SmsApplication$SmsApplicationData;

        z0 := @parameter2: boolean;

        $r5 = virtualinvoke r15.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        r1 = (android.app.AppOpsManager) $r5;

        r2 = <com.android.internal.telephony.SmsApplication: java.lang.String[] DEFAULT_APP_EXCLUSIVE_APPOPS>;

        i0 = lengthof r2;

        i5 = 0;

     label1:
        if i5 >= i0 goto label6;

        r3 = r2[i5];

        $i1 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: int access$700(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r0);

        $r6 = r0.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        $i2 = virtualinvoke r1.<android.app.AppOpsManager: int unsafeCheckOp(java.lang.String,int,java.lang.String)>(r3, $i1, $r6);

        if $i2 == 0 goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.android.internal.telephony.SmsApplication$SmsApplicationData: java.lang.String mPackageName>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lost ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        if z0 == 0 goto label2;

        r16 = " (fixing)";

        goto label3;

     label2:
        r16 = " (no permission to fix)";

     label3:
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SmsApplication", $r14);

        if z0 == 0 goto label4;

        $i4 = staticinvoke <com.android.internal.telephony.SmsApplication$SmsApplicationData: int access$700(com.android.internal.telephony.SmsApplication$SmsApplicationData)>(r0);

        virtualinvoke r1.<android.app.AppOpsManager: void setUidMode(java.lang.String,int,int)>(r3, $i4, 0);

        goto label5;

     label4:
        return 0;

     label5:
        i5 = i5 + 1;

        goto label1;

     label6:
        return 1;
    }
}
