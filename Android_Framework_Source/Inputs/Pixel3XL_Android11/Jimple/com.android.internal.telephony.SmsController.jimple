public class com.android.internal.telephony.SmsController extends com.android.internal.telephony.ISmsImplBase
{
    static final java.lang.String LOG_TAG;
    private final android.content.Context mContext;

    protected void <init>(android.content.Context)
    {
        com.android.internal.telephony.SmsController r0;
        android.os.TelephonyServiceManager $r1;
        android.os.IBinder $r2;
        android.content.Context r3;
        android.os.TelephonyServiceManager$ServiceRegisterer r4;

        r0 := @this: com.android.internal.telephony.SmsController;

        r3 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.telephony.ISmsImplBase: void <init>()>();

        r0.<com.android.internal.telephony.SmsController: android.content.Context mContext> = r3;

        $r1 = staticinvoke <android.telephony.TelephonyFrameworkInitializer: android.os.TelephonyServiceManager getTelephonyServiceManager()>();

        r4 = virtualinvoke $r1.<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getSmsServiceRegisterer()>();

        $r2 = virtualinvoke r4.<android.os.TelephonyServiceManager$ServiceRegisterer: android.os.IBinder get()>();

        if $r2 != null goto label1;

        virtualinvoke r4.<android.os.TelephonyServiceManager$ServiceRegisterer: void register(android.os.IBinder)>(r0);

     label1:
        return;
    }

    private java.lang.String getCallingPackage()
    {
        com.android.internal.telephony.SmsController r0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        int $i0;
        java.lang.String[] $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.SmsController;

        $r1 = r0.<com.android.internal.telephony.SmsController: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>($i0);

        $r4 = $r3[0];

        return $r4;
    }

    private com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.IccSmsInterfaceManager $r2;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.Phone getPhone(int)>(i0);

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>();

        return $r2;
    }

    private static android.os.Bundle getMmsConfig(android.os.BaseBundle)
    {
        android.os.BaseBundle r0;
        android.os.Bundle $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: android.os.BaseBundle;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        $z0 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("enabledTransID");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("enabledTransID", $z0);

        $z1 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("enabledMMS");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("enabledMMS", $z1);

        $z2 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("enableGroupMms");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("enableGroupMms", $z2);

        $z3 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("enabledNotifyWapMMSC");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("enabledNotifyWapMMSC", $z3);

        $z4 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("aliasEnabled");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("aliasEnabled", $z4);

        $z5 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("allowAttachAudio");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("allowAttachAudio", $z5);

        $z6 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("enableMultipartSMS");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("enableMultipartSMS", $z6);

        $z7 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("enableSMSDeliveryReports");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("enableSMSDeliveryReports", $z7);

        $z8 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("supportMmsContentDisposition");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("supportMmsContentDisposition", $z8);

        $z9 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("sendMultipartSmsAsSeparateMessages");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("sendMultipartSmsAsSeparateMessages", $z9);

        $z10 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("enableMMSReadReports");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("enableMMSReadReports", $z10);

        $z11 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("enableMMSDeliveryReports");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("enableMMSDeliveryReports", $z11);

        $z12 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("mmsCloseConnection");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("mmsCloseConnection", $z12);

        $i0 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String)>("maxMessageSize");

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("maxMessageSize", $i0);

        $i1 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String)>("maxImageWidth");

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("maxImageWidth", $i1);

        $i2 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String)>("maxImageHeight");

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("maxImageHeight", $i2);

        $i3 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String)>("recipientLimit");

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("recipientLimit", $i3);

        $i4 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String)>("aliasMinChars");

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("aliasMinChars", $i4);

        $i5 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String)>("aliasMaxChars");

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("aliasMaxChars", $i5);

        $i6 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String)>("smsToMmsTextThreshold");

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("smsToMmsTextThreshold", $i6);

        $i7 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String)>("smsToMmsTextLengthThreshold");

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("smsToMmsTextLengthThreshold", $i7);

        $i8 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String)>("maxMessageTextSize");

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("maxMessageTextSize", $i8);

        $i9 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String)>("maxSubjectLength");

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("maxSubjectLength", $i9);

        $i10 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String)>("httpSocketTimeout");

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("httpSocketTimeout", $i10);

        $r3 = virtualinvoke r0.<android.os.BaseBundle: java.lang.String getString(java.lang.String)>("uaProfTagName");

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("uaProfTagName", $r3);

        $r4 = virtualinvoke r0.<android.os.BaseBundle: java.lang.String getString(java.lang.String)>("userAgent");

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("userAgent", $r4);

        $r5 = virtualinvoke r0.<android.os.BaseBundle: java.lang.String getString(java.lang.String)>("uaProfUrl");

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("uaProfUrl", $r5);

        $r6 = virtualinvoke r0.<android.os.BaseBundle: java.lang.String getString(java.lang.String)>("httpParams");

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("httpParams", $r6);

        $r7 = virtualinvoke r0.<android.os.BaseBundle: java.lang.String getString(java.lang.String)>("emailGatewayNumber");

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("emailGatewayNumber", $r7);

        $r8 = virtualinvoke r0.<android.os.BaseBundle: java.lang.String getString(java.lang.String)>("naiSuffix");

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("naiSuffix", $r8);

        $z13 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("config_cellBroadcastAppLinks");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("config_cellBroadcastAppLinks", $z13);

        $z14 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String)>("supportHttpCharsetHeader");

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("supportHttpCharsetHeader", $z14);

        return $r2;
    }

    private com.android.internal.telephony.Phone getPhone(int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, $i1;
        com.android.internal.telephony.Phone r1, r2;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(int)>(i0);

        r1 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getPhone(int)>($i1);

        r2 = r1;

        if r1 != null goto label1;

        r2 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getDefaultPhone()>();

     label1:
        return r2;
    }

    private com.android.internal.telephony.SmsPermissions getSmsPermissions(int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        com.android.internal.telephony.Phone r1;
        android.content.Context r2;
        com.android.internal.telephony.SmsPermissions $r3;
        java.lang.Object $r4;
        android.app.AppOpsManager $r5;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.Phone getPhone(int)>(i0);

        r2 = r0.<com.android.internal.telephony.SmsController: android.content.Context mContext>;

        $r3 = new com.android.internal.telephony.SmsPermissions;

        $r4 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r5 = (android.app.AppOpsManager) $r4;

        specialinvoke $r3.<com.android.internal.telephony.SmsPermissions: void <init>(com.android.internal.telephony.Phone,android.content.Context,android.app.AppOpsManager)>(r1, r2, $r5);

        return $r3;
    }

    private android.telephony.SubscriptionInfo getSubscriptionInfo(int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.telephony.SubscriptionManager $r3;
        android.telephony.SubscriptionInfo $r4;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.SmsController: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telephony_subscription_service");

        $r3 = (android.telephony.SubscriptionManager) $r2;

        $r4 = virtualinvoke $r3.<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>(i0);

        return $r4;
    }

    private boolean isBluetoothSubscription(android.telephony.SubscriptionInfo)
    {
        com.android.internal.telephony.SmsController r0;
        android.telephony.SubscriptionInfo r1;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.SmsController;

        r1 := @parameter0: android.telephony.SubscriptionInfo;

        z0 = 1;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.telephony.SubscriptionInfo: int getSubscriptionType()>();

        if $i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void sendBluetoothText(android.telephony.SubscriptionInfo, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.SmsController r0;
        android.telephony.SubscriptionInfo r1;
        java.lang.String r2, r3;
        android.app.PendingIntent r4, r5;
        com.android.internal.telephony.BtSmsInterfaceManager $r6;
        android.content.Context $r7;

        r0 := @this: com.android.internal.telephony.SmsController;

        r1 := @parameter0: android.telephony.SubscriptionInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.PendingIntent;

        r5 := @parameter4: android.app.PendingIntent;

        $r6 = new com.android.internal.telephony.BtSmsInterfaceManager;

        specialinvoke $r6.<com.android.internal.telephony.BtSmsInterfaceManager: void <init>()>();

        $r7 = r0.<com.android.internal.telephony.SmsController: android.content.Context mContext>;

        virtualinvoke $r6.<com.android.internal.telephony.BtSmsInterfaceManager: void sendText(android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.telephony.SubscriptionInfo)>($r7, r2, r3, r4, r5, r1);

        return;
    }

    private void sendDataForSubscriberWithSelfPermissionsInternal(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent, boolean)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1;
        java.lang.String r1, r2, r3, $r11, r12;
        byte[] r4;
        android.app.PendingIntent r5, r6;
        boolean z0;
        com.android.internal.telephony.IccSmsInterfaceManager r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        r4 := @parameter6: byte[];

        r5 := @parameter7: android.app.PendingIntent;

        r6 := @parameter8: android.app.PendingIntent;

        z0 := @parameter9: boolean;

        r7 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r7 == null goto label1;

        virtualinvoke r7.<com.android.internal.telephony.IccSmsInterfaceManager: void sendDataWithSelfPermissions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent,boolean)>(r12, r1, r2, r3, i1, r4, r5, r6, z0);

        goto label2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendText iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r11);

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntent(android.app.PendingIntent,int)>(r5, 1);

     label2:
        return;
    }

    private void sendErrorInPendingIntent(android.app.PendingIntent, int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        android.app.PendingIntent$CanceledException $r1;
        android.app.PendingIntent r2;

        r0 := @this: com.android.internal.telephony.SmsController;

        r2 := @parameter0: android.app.PendingIntent;

        i0 := @parameter1: int;

        if r2 == null goto label4;

     label1:
        virtualinvoke r2.<android.app.PendingIntent: void send(int)>(i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    private void sendErrorInPendingIntents(java.util.List, int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        boolean $z0;
        java.lang.Object $r1;
        android.app.PendingIntent $r2;
        java.util.List r3;
        java.util.Iterator r4;

        r0 := @this: com.android.internal.telephony.SmsController;

        r3 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        if r3 != null goto label1;

        return;

     label1:
        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (android.app.PendingIntent) $r1;

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntent(android.app.PendingIntent,int)>($r2, i0);

        goto label2;

     label3:
        return;
    }

    private void sendIccText(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent, boolean, long)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.String r1, r2, r3, $r11, $r17, r18;
        android.app.PendingIntent r4, r5;
        boolean z0;
        long l1;
        java.lang.StringBuilder $r6, $r12;
        com.android.internal.telephony.IccSmsInterfaceManager r20;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r18 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.app.PendingIntent;

        r5 := @parameter6: android.app.PendingIntent;

        z0 := @parameter7: boolean;

        l1 := @parameter8: long;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendTextForSubscriber iccSmsIntMgr Subscription: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SmsController", $r11);

        r20 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r20 == null goto label1;

        virtualinvoke r20.<com.android.internal.telephony.IccSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean,long)>(r18, r1, r2, r3, r4, r5, z0, l1);

        goto label2;

     label1:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendTextForSubscriber iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r17);

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntent(android.app.PendingIntent,int)>(r4, 1);

     label2:
        return;
    }

    private void sendTextForSubscriberWithSelfPermissionsInternal(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent, boolean, boolean)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.String r1, r2, r3, r4, $r11, r12;
        android.app.PendingIntent r5, r6;
        boolean z0, z1;
        com.android.internal.telephony.IccSmsInterfaceManager r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: android.app.PendingIntent;

        r6 := @parameter7: android.app.PendingIntent;

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        r7 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r7 == null goto label1;

        virtualinvoke r7.<com.android.internal.telephony.IccSmsInterfaceManager: void sendTextWithSelfPermissions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean,boolean)>(r12, r1, r2, r3, r4, r5, r6, z0, z1);

        goto label2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendText iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r11);

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntent(android.app.PendingIntent,int)>(r5, 1);

     label2:
        return;
    }

    public int checkSmsShortCodeDestination(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.SmsController r0;
        java.lang.String r1, r2, r3, r9, r10;
        long l0;
        com.android.internal.telephony.Phone $r4, $r6;
        android.content.Context $r5;
        boolean $z0;
        com.android.internal.telephony.SmsUsageMonitor $r7;
        java.lang.Throwable $r8;
        int i1, i2;

        r0 := @this: com.android.internal.telephony.SmsController;

        i1 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r10 = r9;

        if r9 != null goto label1;

        r10 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

     label1:
        $r4 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.Phone getPhone(int)>(i1);

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $z0 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkCallingOrSelfReadPhoneState(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String)>($r5, i1, r10, r1, "checkSmsShortCodeDestination");

        if $z0 != 0 goto label2;

        return 0;

     label2:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r6 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.Phone getPhone(int)>(i1);

        $r7 = $r6.<com.android.internal.telephony.Phone: com.android.internal.telephony.SmsUsageMonitor mSmsUsageMonitor>;

        i2 = virtualinvoke $r7.<com.android.internal.telephony.SmsUsageMonitor: int checkDestination(java.lang.String,java.lang.String)>(r2, r3);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i2;

     label5:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean copyMessageToIccEfForSubscriber(int, java.lang.String, int, byte[], byte[])
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1;
        byte[] r1, r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r7, r8;
        boolean $z0;
        com.android.internal.telephony.IccSmsInterfaceManager r9;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r1 := @parameter3: byte[];

        r2 := @parameter4: byte[];

        r8 = r7;

        if r7 != null goto label1;

        r8 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

     label1:
        r9 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r9 == null goto label2;

        $z0 = virtualinvoke r9.<com.android.internal.telephony.IccSmsInterfaceManager: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>(r8, i1, r1, r2);

        return $z0;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("copyMessageToIccEfForSubscriber iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r6);

        return 0;
    }

    public java.lang.String createAppSpecificSmsToken(int, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.String r1, $r5, r6;
        android.app.PendingIntent r2;
        com.android.internal.telephony.Phone $r3;
        com.android.internal.telephony.AppSmsManager $r4;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.app.PendingIntent;

        r6 = r1;

        if r1 != null goto label1;

        r6 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

     label1:
        $r3 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.Phone getPhone(int)>(i0);

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.AppSmsManager getAppSmsManager()>();

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.AppSmsManager: java.lang.String createAppSpecificSmsToken(java.lang.String,android.app.PendingIntent)>(r6, r2);

        return $r5;
    }

    public java.lang.String createAppSpecificSmsTokenWithPackageInfo(int, java.lang.String, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.String r1, r2, $r6, r7;
        android.app.PendingIntent r3;
        com.android.internal.telephony.Phone $r4;
        com.android.internal.telephony.AppSmsManager $r5;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.app.PendingIntent;

        r7 = r1;

        if r1 != null goto label1;

        r7 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

     label1:
        $r4 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.Phone getPhone(int)>(i0);

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.AppSmsManager getAppSmsManager()>();

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.AppSmsManager: java.lang.String createAppSpecificSmsTokenWithPackageInfo(int,java.lang.String,java.lang.String,android.app.PendingIntent)>(i0, r7, r2, r3);

        return $r6;
    }

    public boolean disableCellBroadcastForSubscriber(int, int, int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1, i2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.SmsController: boolean disableCellBroadcastRangeForSubscriber(int,int,int,int)>(i0, i1, i1, i2);

        return $z0;
    }

    public boolean disableCellBroadcastRangeForSubscriber(int, int, int, int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1, i2, i3;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        boolean $z0;
        com.android.internal.telephony.IccSmsInterfaceManager r5;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r5 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r5 == null goto label1;

        $z0 = virtualinvoke r5.<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCellBroadcastRange(int,int,int)>(i1, i2, i3);

        return $z0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("disableCellBroadcastRangeForSubscriber iccSmsIntMgr is null for Subscription:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r4);

        return 0;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.SmsController r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        int i0, i1, i2;
        android.content.Context $r4;
        boolean $z0;
        com.android.internal.telephony.IndentingPrintWriter $r5;
        com.android.internal.telephony.Phone $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        java.lang.String $r9;
        com.android.internal.telephony.IccSmsInterfaceManager $r11, $r13;
        java.io.PrintWriter r14;
        com.android.internal.telephony.Phone[] r15;

        r0 := @this: com.android.internal.telephony.SmsController;

        r1 := @parameter0: java.io.FileDescriptor;

        r14 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.internal.telephony.SmsController: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.telephony.util.TelephonyUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "SmsController", r14);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = new com.android.internal.telephony.IndentingPrintWriter;

        specialinvoke $r5.<com.android.internal.telephony.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r14, "    ");

        r15 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone[] getPhones()>();

        i0 = lengthof r15;

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $r6 = r15[i2];

        i1 = virtualinvoke $r6.<com.android.internal.telephony.Phone: int getSubId()>();

        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SmsManager for subId = %d:", $r7);

        virtualinvoke $r5.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r9);

        virtualinvoke $r5.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r11 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i1);

        if $r11 == null goto label3;

        $r13 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i1);

        virtualinvoke $r13.<com.android.internal.telephony.IccSmsInterfaceManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, $r5, r2);

     label3:
        virtualinvoke $r5.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        i2 = i2 + 1;

        goto label2;

     label4:
        virtualinvoke $r5.<com.android.internal.telephony.IndentingPrintWriter: void flush()>();

        return;
    }

    public boolean enableCellBroadcastForSubscriber(int, int, int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1, i2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.SmsController: boolean enableCellBroadcastRangeForSubscriber(int,int,int,int)>(i0, i1, i1, i2);

        return $z0;
    }

    public boolean enableCellBroadcastRangeForSubscriber(int, int, int, int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1, i2, i3;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        boolean $z0;
        com.android.internal.telephony.IccSmsInterfaceManager r5;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r5 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r5 == null goto label1;

        $z0 = virtualinvoke r5.<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCellBroadcastRange(int,int,int)>(i1, i2, i3);

        return $z0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enableCellBroadcastRangeForSubscriber iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r4);

        return 0;
    }

    public java.util.List getAllMessagesFromIccEfForSubscriber(int, java.lang.String)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r6, r7;
        java.util.List $r5;
        com.android.internal.telephony.IccSmsInterfaceManager r8;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r7 = r6;

        if r6 != null goto label1;

        r7 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

     label1:
        r8 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r8 == null goto label2;

        $r5 = virtualinvoke r8.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List getAllMessagesFromIccEf(java.lang.String)>(r7);

        return $r5;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAllMessagesFromIccEfForSubscriber iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r4);

        return null;
    }

    public android.os.Bundle getCarrierConfigValuesForSubscriber(int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        long l1;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.telephony.CarrierConfigManager $r3;
        android.os.PersistableBundle $r4;
        java.lang.Throwable $r5;
        android.os.Bundle r6;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.internal.telephony.SmsController: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r3 = (android.telephony.CarrierConfigManager) $r2;

        $r4 = virtualinvoke $r3.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>(i0);

        r6 = staticinvoke <com.android.internal.telephony.SmsController: android.os.Bundle getMmsConfig(android.os.BaseBundle)>($r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r6;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getImsSmsFormatForSubscriber(int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        com.android.internal.telephony.IccSmsInterfaceManager r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.String getImsSmsFormat()>();

        return $r2;

     label1:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", "getImsSmsFormatForSubscriber iccSmsIntMgr is null");

        return null;
    }

    public int getPreferredSmsSubscription()
    {
        com.android.internal.telephony.SmsController r0;
        long l0;
        com.android.internal.telephony.SubscriptionController $r1, $r2;
        boolean $z0;
        int $i1, i2, i3;
        java.lang.Throwable $r3;
        int[] r4;

        r0 := @this: com.android.internal.telephony.SmsController;

        $r1 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        i2 = virtualinvoke $r1.<com.android.internal.telephony.SubscriptionController: int getDefaultSmsSubId()>();

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i2);

        if $z0 == 0 goto label1;

        return i2;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r2 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        r4 = virtualinvoke $r2.<com.android.internal.telephony.SubscriptionController: int[] getActiveSubIdList(boolean)>(1);

        $i1 = lengthof r4;

        if $i1 != 1 goto label4;

     label3:
        i3 = r4[0];

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i3;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return -1;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public int getPremiumSmsPermission(java.lang.String)
    {
        com.android.internal.telephony.SmsController r0;
        java.lang.String r1;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.SmsController;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.SmsController: int getPreferredSmsSubscription()>();

        $i1 = virtualinvoke r0.<com.android.internal.telephony.SmsController: int getPremiumSmsPermissionForSubscriber(int,java.lang.String)>($i0, r1);

        return $i1;
    }

    public int getPremiumSmsPermissionForSubscriber(int, java.lang.String)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, $i2;
        java.lang.String r1;
        com.android.internal.telephony.IccSmsInterfaceManager r2;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r2 == null goto label1;

        $i2 = virtualinvoke r2.<com.android.internal.telephony.IccSmsInterfaceManager: int getPremiumSmsPermission(java.lang.String)>(r1);

        return $i2;

     label1:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", "getPremiumSmsPermissionForSubscriber iccSmsIntMgr is null");

        return 0;
    }

    public int getSmsCapacityOnIccForSubscriber(int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        com.android.internal.telephony.IccSmsInterfaceManager r5;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r5 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r5 == null goto label1;

        $i2 = virtualinvoke r5.<com.android.internal.telephony.IccSmsInterfaceManager: int getSmsCapacityOnIcc()>();

        return $i2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iccSmsIntMgr is null for  subId: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r4);

        return 0;
    }

    public java.lang.String getSmscAddressFromIccEfForSubscriber(int, java.lang.String)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, $r5, r6, r7;
        com.android.internal.telephony.IccSmsInterfaceManager r8;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r7 = r6;

        if r6 != null goto label1;

        r7 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

     label1:
        r8 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r8 == null goto label2;

        $r5 = virtualinvoke r8.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.String getSmscAddressFromIccEf(java.lang.String)>(r7);

        return $r5;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSmscAddressFromIccEfForSubscriber iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r4);

        return null;
    }

    public void injectSmsPduForSubscriber(int, byte[], java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        byte[] r1;
        java.lang.String r2;
        android.app.PendingIntent r3;
        com.android.internal.telephony.IccSmsInterfaceManager r4;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.app.PendingIntent;

        r4 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r4 == null goto label1;

        virtualinvoke r4.<com.android.internal.telephony.IccSmsInterfaceManager: void injectSmsPdu(byte[],java.lang.String,android.app.PendingIntent)>(r1, r2, r3);

        goto label2;

     label1:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", "injectSmsPduForSubscriber iccSmsIntMgr is null");

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntent(android.app.PendingIntent,int)>(r3, 2);

     label2:
        return;
    }

    public boolean isImsSmsSupportedForSubscriber(int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        com.android.internal.telephony.IccSmsInterfaceManager r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.IccSmsInterfaceManager: boolean isImsSmsSupported()>();

        return $z0;

     label1:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", "isImsSmsSupportedForSubscriber iccSmsIntMgr is null");

        return 0;
    }

    public boolean isSMSPromptEnabled()
    {
        com.android.internal.telephony.SmsController r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.SmsController;

        $z0 = staticinvoke <com.android.internal.telephony.PhoneFactory: boolean isSMSPromptEnabled()>();

        return $z0;
    }

    public boolean isSmsSimPickActivityNeeded(int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i2, $i3, $i4, $i6, $i7, i8;
        long l1;
        java.util.List r1;
        android.content.Context $r2, r8;
        java.lang.Object $r3, $r4, $r6;
        android.telephony.SubscriptionManager $r5;
        java.lang.Throwable $r7;
        android.app.ActivityManager r9;
        boolean z0;
        android.telephony.TelephonyManager r10;
        android.telephony.SubscriptionInfo r11;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.SmsController: android.content.Context mContext>;

        r8 = virtualinvoke $r2.<android.content.Context: android.content.Context getApplicationContext()>();

        $r3 = virtualinvoke r8.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/ActivityManager;");

        r9 = (android.app.ActivityManager) $r3;

        if r9 == null goto label01;

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i7 = virtualinvoke r9.<android.app.ActivityManager: int getUidImportance(int)>($i6);

        if $i7 != 100 goto label01;

        z0 = 1;

        goto label02;

     label01:
        z0 = 0;

     label02:
        if z0 != 0 goto label03;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SmsController", "isSmsSimPickActivityNeeded: calling process not foreground. Suppressing activity.");

        return 0;

     label03:
        $r4 = virtualinvoke r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r10 = (android.telephony.TelephonyManager) $r4;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r5 = staticinvoke <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager 'from'(android.content.Context)>(r8);

        r1 = virtualinvoke $r5.<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList()>();

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        if r1 == null goto label09;

        i2 = interfaceinvoke r1.<java.util.List: int size()>();

        i8 = 0;

     label06:
        if i8 >= i2 goto label08;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i8);

        r11 = (android.telephony.SubscriptionInfo) $r6;

        if r11 == null goto label07;

        $i4 = virtualinvoke r11.<android.telephony.SubscriptionInfo: int getSubscriptionId()>();

        if $i4 != i0 goto label07;

        return 0;

     label07:
        i8 = i8 + 1;

        goto label06;

     label08:
        if i2 <= 1 goto label09;

        $i3 = virtualinvoke r10.<android.telephony.TelephonyManager: int getSimCount()>();

        if $i3 <= 1 goto label09;

        return 1;

     label09:
        return 0;

     label10:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch java.lang.Throwable from label04 to label05 with label10;
    }

    public boolean resetAllCellBroadcastRanges(int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        com.android.internal.telephony.IccSmsInterfaceManager r5;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r5 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r5 == null goto label1;

        virtualinvoke r5.<com.android.internal.telephony.IccSmsInterfaceManager: void resetAllCellBroadcastRanges()>();

        return 1;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iccSmsIntMgr is null for  subId: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r4);

        return 0;
    }

    public void sendDataForSubscriber(int, java.lang.String, java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1;
        java.lang.String r1, r2, r3;
        byte[] r4;
        android.app.PendingIntent r5, r6;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 := @parameter5: byte[];

        r5 := @parameter6: android.app.PendingIntent;

        r6 := @parameter7: android.app.PendingIntent;

        virtualinvoke r0.<com.android.internal.telephony.SmsController: void sendDataForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>(i0, r1, null, r2, r3, i1, r4, r5, r6);

        return;
    }

    public void sendDataForSubscriber(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1;
        java.lang.String r1, r2, r3, $r11, r12;
        byte[] r4;
        android.app.PendingIntent r5, r6;
        com.android.internal.telephony.IccSmsInterfaceManager r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        r4 := @parameter6: byte[];

        r5 := @parameter7: android.app.PendingIntent;

        r6 := @parameter8: android.app.PendingIntent;

        if r12 != null goto label1;

        r12 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

        goto label1;

     label1:
        r7 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r7 == null goto label2;

        virtualinvoke r7.<com.android.internal.telephony.IccSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>(r12, r1, r2, r3, i1, r4, r5, r6);

        goto label3;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendDataForSubscriber iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r11);

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntent(android.app.PendingIntent,int)>(r5, 1);

     label3:
        return;
    }

    public void sendMultipartTextForSubscriber(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.List, java.util.List, boolean, long)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.String r1, r2, r3, $r8, $r14, r15;
        java.util.List r4, r5, r6;
        boolean z0;
        long l1;
        com.android.internal.telephony.IccSmsInterfaceManager r7;
        java.lang.StringBuilder $r9;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r15 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.util.List;

        r5 := @parameter6: java.util.List;

        r6 := @parameter7: java.util.List;

        z0 := @parameter8: boolean;

        l1 := @parameter9: long;

        $r8 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

        if $r8 == null goto label1;

        r15 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

        goto label1;

     label1:
        r7 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r7 == null goto label2;

        virtualinvoke r7.<com.android.internal.telephony.IccSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,long)>(r15, r1, r2, r3, r4, r5, r6, z0, l1);

        goto label3;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMultipartTextForSubscriber iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r14);

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntents(java.util.List,int)>(r5, 1);

     label3:
        return;
    }

    public void sendMultipartTextForSubscriberWithOptions(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.List, java.util.List, boolean, int, boolean, int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1, i2;
        java.lang.String r1, r2, r3, $r11, r12;
        java.util.List r4, r5, r6;
        boolean z0, z1;
        com.android.internal.telephony.IccSmsInterfaceManager r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.util.List;

        r5 := @parameter6: java.util.List;

        r6 := @parameter7: java.util.List;

        z0 := @parameter8: boolean;

        i1 := @parameter9: int;

        z1 := @parameter10: boolean;

        i2 := @parameter11: int;

        if r12 != null goto label1;

        r12 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

        goto label1;

     label1:
        r7 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r7 == null goto label2;

        virtualinvoke r7.<com.android.internal.telephony.IccSmsInterfaceManager: void sendMultipartTextWithOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,int,boolean,int,long)>(r12, r1, r2, r3, r4, r5, r6, z0, i1, z1, i2, 0L);

        goto label3;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMultipartTextWithOptions iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r11);

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntents(java.util.List,int)>(r5, 1);

     label3:
        return;
    }

    public void sendStoredMultipartText(int, java.lang.String, java.lang.String, android.net.Uri, java.lang.String, java.util.List, java.util.List)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.String r1, r3, $r10, r11;
        android.net.Uri r2;
        java.util.List r4, r5;
        com.android.internal.telephony.IccSmsInterfaceManager r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r11 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.net.Uri;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.util.List;

        r5 := @parameter6: java.util.List;

        r6 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r6 == null goto label1;

        virtualinvoke r6.<com.android.internal.telephony.IccSmsInterfaceManager: void sendStoredMultipartText(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>(r11, r1, r2, r3, r4, r5);

        goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendStoredMultipartText iccSmsIntMgr is null for subscription: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r10);

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntents(java.util.List,int)>(r4, 1);

     label2:
        return;
    }

    public void sendStoredText(int, java.lang.String, java.lang.String, android.net.Uri, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.String r1, r3, $r10, r11;
        android.net.Uri r2;
        android.app.PendingIntent r4, r5;
        com.android.internal.telephony.IccSmsInterfaceManager r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r11 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.net.Uri;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.app.PendingIntent;

        r5 := @parameter6: android.app.PendingIntent;

        r6 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r6 == null goto label1;

        virtualinvoke r6.<com.android.internal.telephony.IccSmsInterfaceManager: void sendStoredText(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>(r11, r1, r2, r3, r4, r5);

        goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendStoredText iccSmsIntMgr is null for subscription: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r10);

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntent(android.app.PendingIntent,int)>(r4, 1);

     label2:
        return;
    }

    public void sendTextForSubscriber(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent, boolean, long)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.String r1, r2, r3, r8, r9;
        android.app.PendingIntent r4, r5;
        boolean z0, $z1, $z2;
        long l1, l2;
        com.android.internal.telephony.SmsPermissions $r6;
        java.lang.Throwable $r7;
        android.telephony.SubscriptionInfo r10;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: android.app.PendingIntent;

        r5 := @parameter7: android.app.PendingIntent;

        z0 := @parameter8: boolean;

        l1 := @parameter9: long;

        if r8 != null goto label1;

        r8 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

        goto label1;

     label1:
        $r6 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.SmsPermissions getSmsPermissions(int)>(i0);

        $z1 = virtualinvoke $r6.<com.android.internal.telephony.SmsPermissions: boolean checkCallingCanSendText(boolean,java.lang.String,java.lang.String,java.lang.String)>(z0, r8, r9, "Sending SMS message");

        if $z1 != 0 goto label2;

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntent(android.app.PendingIntent,int)>(r4, 1);

        return;

     label2:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        r10 = specialinvoke r0.<com.android.internal.telephony.SmsController: android.telephony.SubscriptionInfo getSubscriptionInfo(int)>(i0);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        $z2 = specialinvoke r0.<com.android.internal.telephony.SmsController: boolean isBluetoothSubscription(android.telephony.SubscriptionInfo)>(r10);

        if $z2 == 0 goto label5;

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendBluetoothText(android.telephony.SubscriptionInfo,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>(r10, r1, r3, r4, r5);

        goto label6;

     label5:
        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendIccText(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean,long)>(i0, r8, r1, r2, r3, r4, r5, z0, l1);

     label6:
        return;

     label7:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r7;

        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public void sendTextForSubscriberWithOptions(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent, boolean, int, boolean, int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1, i2;
        java.lang.String r1, r2, r3, r4, $r11, r12;
        android.app.PendingIntent r5, r6;
        boolean z0, z1;
        com.android.internal.telephony.IccSmsInterfaceManager r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: android.app.PendingIntent;

        r6 := @parameter7: android.app.PendingIntent;

        z0 := @parameter8: boolean;

        i1 := @parameter9: int;

        z1 := @parameter10: boolean;

        i2 := @parameter11: int;

        if r12 != null goto label1;

        r12 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

        goto label1;

     label1:
        r7 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r7 == null goto label2;

        virtualinvoke r7.<com.android.internal.telephony.IccSmsInterfaceManager: void sendTextWithOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean,int,boolean,int)>(r12, r1, r2, r3, r4, r5, r6, z0, i1, z1, i2);

        goto label3;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendTextWithOptions iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r11);

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendErrorInPendingIntent(android.app.PendingIntent,int)>(r5, 1);

     label3:
        return;
    }

    public void sendVisualVoicemailSmsForSubscriber(java.lang.String, java.lang.String, int, java.lang.String, int, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.SmsController r0;
        java.lang.String r1, r2, r3, r6;
        int i0, i1;
        android.app.PendingIntent r4;
        java.nio.charset.Charset $r5;
        short $s2;
        byte[] r7;

        r0 := @this: com.android.internal.telephony.SmsController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r6 := @parameter5: java.lang.String;

        r4 := @parameter6: android.app.PendingIntent;

        if i1 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendTextForSubscriberWithSelfPermissionsInternal(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean,boolean)>(i0, r1, r2, r3, null, r6, r4, null, 0, 1);

        goto label2;

     label1:
        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        r7 = virtualinvoke r6.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5);

        $s2 = (short) i1;

        specialinvoke r0.<com.android.internal.telephony.SmsController: void sendDataForSubscriberWithSelfPermissionsInternal(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent,boolean)>(i0, r1, r2, r3, null, $s2, r7, r4, null, 1);

     label2:
        return;
    }

    public void setPremiumSmsPermission(java.lang.String, int)
    {
        com.android.internal.telephony.SmsController r0;
        java.lang.String r1;
        int i0, $i1;

        r0 := @this: com.android.internal.telephony.SmsController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.SmsController: int getPreferredSmsSubscription()>();

        virtualinvoke r0.<com.android.internal.telephony.SmsController: void setPremiumSmsPermissionForSubscriber(int,java.lang.String,int)>($i1, r1, i0);

        return;
    }

    public void setPremiumSmsPermissionForSubscriber(int, java.lang.String, int)
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1;
        java.lang.String r1;
        com.android.internal.telephony.IccSmsInterfaceManager r2;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.telephony.IccSmsInterfaceManager: void setPremiumSmsPermission(java.lang.String,int)>(r1, i1);

        goto label2;

     label1:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", "setPremiumSmsPermissionForSubscriber iccSmsIntMgr is null");

     label2:
        return;
    }

    public boolean setSmscAddressOnIccEfForSubscriber(java.lang.String, int, java.lang.String)
    {
        com.android.internal.telephony.SmsController r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r5, r6, r7;
        boolean $z0;
        com.android.internal.telephony.IccSmsInterfaceManager r8;

        r0 := @this: com.android.internal.telephony.SmsController;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r6 := @parameter2: java.lang.String;

        r7 = r6;

        if r6 != null goto label1;

        r7 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

     label1:
        r8 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r8 == null goto label2;

        $z0 = virtualinvoke r8.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setSmscAddressOnIccEf(java.lang.String,java.lang.String)>(r7, r5);

        return $z0;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setSmscAddressOnIccEfForSubscriber iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r4);

        return 0;
    }

    public boolean updateMessageOnIccEfForSubscriber(int, java.lang.String, int, int, byte[])
    {
        com.android.internal.telephony.SmsController r0;
        int i0, i1, i2;
        byte[] r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r6, r7;
        boolean $z0;
        com.android.internal.telephony.IccSmsInterfaceManager r8;

        r0 := @this: com.android.internal.telephony.SmsController;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: byte[];

        r7 = r6;

        if r6 != null goto label1;

        r7 = specialinvoke r0.<com.android.internal.telephony.SmsController: java.lang.String getCallingPackage()>();

     label1:
        r8 = specialinvoke r0.<com.android.internal.telephony.SmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>(i0);

        if r8 == null goto label2;

        $z0 = virtualinvoke r8.<com.android.internal.telephony.IccSmsInterfaceManager: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>(r7, i1, i2, r1);

        return $z0;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateMessageOnIccEfForSubscriber iccSmsIntMgr is null for Subscription: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsController", $r5);

        return 0;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.SmsController: java.lang.String LOG_TAG> = "SmsController";

        return;
    }
}
