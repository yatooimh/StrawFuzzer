public class com.android.internal.telephony.SmsDispatchersController extends android.os.Handler
{
    private static final int EVENT_IMS_STATE_CHANGED;
    private static final int EVENT_IMS_STATE_DONE;
    private static final int EVENT_PARTIAL_SEGMENT_TIMER_EXPIRY;
    private static final int EVENT_RADIO_ON;
    private static final int EVENT_SERVICE_STATE_CHANGED;
    protected static final int EVENT_SMS_HANDLER_EXITING_WAITING_STATE;
    private static final int EVENT_USER_UNLOCKED;
    private static final long INVALID_TIME;
    private static final long PARTIAL_SEGMENT_WAIT_DURATION;
    private static final java.lang.String TAG;
    private static final boolean VDBG;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private com.android.internal.telephony.SMSDispatcher mCdmaDispatcher;
    private com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler;
    private final com.android.internal.telephony.CommandsInterface mCi;
    private final android.content.Context mContext;
    private long mCurrentWaitElapsedDuration;
    private long mCurrentWaitStartTime;
    private com.android.internal.telephony.SMSDispatcher mGsmDispatcher;
    private com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler;
    private boolean mIms;
    private com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher;
    private java.lang.String mImsSmsFormat;
    private long mLastInServiceTime;
    private com.android.internal.telephony.Phone mPhone;
    private final com.android.internal.telephony.SmsUsageMonitor mUsageMonitor;

    public void <init>(com.android.internal.telephony.Phone, com.android.internal.telephony.SmsStorageMonitor, com.android.internal.telephony.SmsUsageMonitor)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        com.android.internal.telephony.SmsStorageMonitor r1;
        com.android.internal.telephony.SmsUsageMonitor r2;
        com.android.internal.telephony.SmsDispatchersController$1 $r3;
        android.content.Context $r4, $r8, $r10, $r16, $r19, $r22, $r27;
        com.android.internal.telephony.CommandsInterface $r5, $r20, $r21;
        com.android.internal.telephony.ImsSmsDispatcher $r6;
        com.android.internal.telephony.cdma.CdmaSMSDispatcher $r7, $r12;
        com.android.internal.telephony.gsm.GsmInboundSmsHandler $r9, $r15, $r18;
        com.android.internal.telephony.SMSDispatcher $r11;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler $r13, $r17;
        com.android.internal.telephony.gsm.GsmSMSDispatcher $r14;
        java.lang.Object $r23;
        android.os.UserManager $r24;
        boolean $z0;
        android.content.IntentFilter $r25;
        android.content.BroadcastReceiver $r26;
        com.android.internal.telephony.Phone $r29, r30;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r30 := @parameter0: com.android.internal.telephony.Phone;

        r1 := @parameter1: com.android.internal.telephony.SmsStorageMonitor;

        r2 := @parameter2: com.android.internal.telephony.SmsUsageMonitor;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        r0.<com.android.internal.telephony.SmsDispatchersController: long mLastInServiceTime> = -1L;

        r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitElapsedDuration> = 0L;

        r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitStartTime> = -1L;

        r0.<com.android.internal.telephony.SmsDispatchersController: boolean mIms> = 0;

        r0.<com.android.internal.telephony.SmsDispatchersController: java.lang.String mImsSmsFormat> = "unknown";

        $r3 = new com.android.internal.telephony.SmsDispatchersController$1;

        specialinvoke $r3.<com.android.internal.telephony.SmsDispatchersController$1: void <init>(com.android.internal.telephony.SmsDispatchersController)>(r0);

        r0.<com.android.internal.telephony.SmsDispatchersController: android.content.BroadcastReceiver mBroadcastReceiver> = $r3;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SmsDispatchersController", "SmsDispatchersController created");

        $r4 = virtualinvoke r30.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        r0.<com.android.internal.telephony.SmsDispatchersController: android.content.Context mContext> = $r4;

        r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor> = r2;

        $r5 = r30.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.CommandsInterface mCi> = $r5;

        r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.Phone mPhone> = r30;

        $r6 = new com.android.internal.telephony.ImsSmsDispatcher;

        specialinvoke $r6.<com.android.internal.telephony.ImsSmsDispatcher: void <init>(com.android.internal.telephony.Phone,com.android.internal.telephony.SmsDispatchersController)>(r30, r0);

        r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher> = $r6;

        $r7 = new com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        specialinvoke $r7.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void <init>(com.android.internal.telephony.Phone,com.android.internal.telephony.SmsDispatchersController)>(r30, r0);

        r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher> = $r7;

        $r8 = virtualinvoke r30.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r9 = staticinvoke <com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.gsm.GsmInboundSmsHandler makeInboundSmsHandler(android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.Phone)>($r8, r1, r30);

        r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler> = $r9;

        $r10 = virtualinvoke r30.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r11 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        $r12 = (com.android.internal.telephony.cdma.CdmaSMSDispatcher) $r11;

        $r13 = staticinvoke <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaInboundSmsHandler makeInboundSmsHandler(android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.Phone,com.android.internal.telephony.cdma.CdmaSMSDispatcher)>($r10, r1, r30, $r12);

        r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler> = $r13;

        $r14 = new com.android.internal.telephony.gsm.GsmSMSDispatcher;

        $r15 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        specialinvoke $r14.<com.android.internal.telephony.gsm.GsmSMSDispatcher: void <init>(com.android.internal.telephony.Phone,com.android.internal.telephony.SmsDispatchersController,com.android.internal.telephony.gsm.GsmInboundSmsHandler)>(r30, r0, $r15);

        r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mGsmDispatcher> = $r14;

        $r16 = virtualinvoke r30.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r18 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        $r17 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler>;

        staticinvoke <com.android.internal.telephony.SmsBroadcastUndelivered: void initialize(android.content.Context,com.android.internal.telephony.gsm.GsmInboundSmsHandler,com.android.internal.telephony.cdma.CdmaInboundSmsHandler)>($r16, $r18, $r17);

        $r19 = virtualinvoke r30.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        staticinvoke <com.android.internal.telephony.InboundSmsHandler: void registerNewMessageNotificationActionHandler(android.content.Context)>($r19);

        $r20 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r20.<com.android.internal.telephony.CommandsInterface: void registerForOn(android.os.Handler,int,java.lang.Object)>(r0, 11, null);

        $r21 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r21.<com.android.internal.telephony.CommandsInterface: void registerForImsNetworkStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 12, null);

        $r22 = r0.<com.android.internal.telephony.SmsDispatchersController: android.content.Context mContext>;

        $r23 = virtualinvoke $r22.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r24 = (android.os.UserManager) $r23;

        $z0 = virtualinvoke $r24.<android.os.UserManager: boolean isUserUnlocked()>();

        if $z0 == 0 goto label1;

        $r29 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.Phone mPhone>;

        virtualinvoke $r29.<com.android.internal.telephony.Phone: void registerForServiceStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 14, null);

        specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void resetPartialSegmentWaitTimer()>();

        goto label2;

     label1:
        $r25 = new android.content.IntentFilter;

        specialinvoke $r25.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r25.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_UNLOCKED");

        $r27 = r0.<com.android.internal.telephony.SmsDispatchersController: android.content.Context mContext>;

        $r26 = r0.<com.android.internal.telephony.SmsDispatchersController: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r27.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r26, $r25);

     label2:
        return;
    }

    private android.util.Pair handleCdmaStatusReport(com.android.internal.telephony.SMSDispatcher$SmsTracker, java.lang.String, byte[])
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        java.lang.String r2;
        byte[] r3;
        int $i0, $i1, i2;
        com.android.internal.telephony.cdma.SmsMessage r4;
        boolean z1, z2;
        android.content.Context r5;
        byte b3;
        android.util.Pair $r6;
        java.lang.Boolean $r7, $r8;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        r4 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage createFromPdu(byte[])>(r3);

        z1 = 0;

        z2 = 0;

        if r4 == null goto label4;

        $i0 = virtualinvoke r4.<com.android.internal.telephony.cdma.SmsMessage: int getStatus()>();

        $i1 = $i0 >> 24;

        i2 = $i1 & 3;

        z1 = 0;

        if i2 == 2 goto label3;

        r5 = r0.<com.android.internal.telephony.SmsDispatchersController: android.content.Context mContext>;

        if i2 != 0 goto label1;

        b3 = 0;

        goto label2;

     label1:
        b3 = 64;

     label2:
        virtualinvoke r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: void updateSentMessageStatus(android.content.Context,int)>(r5, b3);

        z1 = 1;

     label3:
        z2 = specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean triggerDeliveryIntent(com.android.internal.telephony.SMSDispatcher$SmsTracker,java.lang.String,byte[])>(r1, r2, r3);

     label4:
        $r6 = new android.util.Pair;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        specialinvoke $r6.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r7, $r8);

        return $r6;
    }

    private android.util.Pair handleGsmStatusReport(com.android.internal.telephony.SMSDispatcher$SmsTracker, java.lang.String, byte[])
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        java.lang.String r2;
        byte[] r3;
        com.android.internal.telephony.gsm.SmsMessage r4;
        int i0;
        android.content.Context $r5;
        boolean z1, z2;
        android.util.Pair $r6;
        java.lang.Boolean $r7, $r8;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        r4 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage newFromCDS(byte[])>(r3);

        z1 = 0;

        z2 = 0;

        if r4 == null goto label3;

        i0 = virtualinvoke r4.<com.android.internal.telephony.gsm.SmsMessage: int getStatus()>();

        if i0 >= 64 goto label1;

        z1 = 0;

        if i0 >= 32 goto label2;

     label1:
        $r5 = r0.<com.android.internal.telephony.SmsDispatchersController: android.content.Context mContext>;

        virtualinvoke r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: void updateSentMessageStatus(android.content.Context,int)>($r5, i0);

        z1 = 1;

     label2:
        z2 = specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean triggerDeliveryIntent(com.android.internal.telephony.SMSDispatcher$SmsTracker,java.lang.String,byte[])>(r1, r2, r3);

     label3:
        $r6 = new android.util.Pair;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        specialinvoke $r6.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r7, $r8);

        return $r6;
    }

    private void handleInService(long)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        long l0, $l1, $l3, $l4, $l5;
        byte $b2;
        java.lang.Long $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitStartTime>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label1;

        r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitStartTime> = l0;

     label1:
        $l3 = r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitStartTime>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r2 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: android.os.Message obtainMessage(int,java.lang.Object)>(15, $r1);

        $l4 = r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitElapsedDuration>;

        $l5 = 86400000L - $l4;

        virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean sendMessageDelayed(android.os.Message,long)>($r2, $l5);

        r0.<com.android.internal.telephony.SmsDispatchersController: long mLastInServiceTime> = l0;

        return;
    }

    private void handleOutOfService(long)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        long l0;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        l0 := @parameter0: long;

        r0.<com.android.internal.telephony.SmsDispatchersController: long mLastInServiceTime> = -1L;

        return;
    }

    private void handlePartialSegmentTimerExpiry(long)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        long l0;
        com.android.internal.telephony.gsm.GsmInboundSmsHandler $r1, $r7;
        com.android.internal.telephony.IState $r2, $r5;
        java.lang.String $r3, $r6;
        boolean $z0, $z1;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler $r4, $r8;
        android.content.Context $r9;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.IState getCurrentState()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IState: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("WaitingState");

        if $z0 != 0 goto label2;

        $r4 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.IState getCurrentState()>();

        $r6 = interfaceinvoke $r5.<com.android.internal.telephony.IState: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("WaitingState");

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r9 = r0.<com.android.internal.telephony.SmsDispatchersController: android.content.Context mContext>;

        $r8 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler>;

        $r7 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        staticinvoke <com.android.internal.telephony.SmsBroadcastUndelivered: void scanRawTable(android.content.Context,com.android.internal.telephony.cdma.CdmaInboundSmsHandler,com.android.internal.telephony.gsm.GsmInboundSmsHandler,long)>($r9, $r8, $r7, l0);

        specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void resetPartialSegmentWaitTimer()>();

        return;

     label2:
        specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void logd(java.lang.String)>("handlePartialSegmentTimerExpiry: ignoring timer expiry as InboundSmsHandler is in WaitingState");

        return;
    }

    private boolean isInService()
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        android.telephony.ServiceState r1;
        com.android.internal.telephony.Phone $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        $r2 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.Phone mPhone>;

        r1 = virtualinvoke $r2.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.telephony.ServiceState: int getState()>();

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void logd(java.lang.String)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SmsDispatchersController", r1);

        return;
    }

    private void reevaluateTimerStatus()
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        long l0, l1, $l3, $l5, $l6, $l7, $l8;
        byte $b2, $b4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void removeMessages(int)>(15);

        l1 = r0.<com.android.internal.telephony.SmsDispatchersController: long mLastInServiceTime>;

        $b2 = l1 cmp -1L;

        if $b2 == 0 goto label1;

        $l7 = r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitElapsedDuration>;

        $l6 = l0 - l1;

        $l8 = $l7 + $l6;

        r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitElapsedDuration> = $l8;

     label1:
        $l3 = r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitElapsedDuration>;

        $b4 = $l3 cmp 86400000L;

        if $b4 <= 0 goto label2;

        $l5 = r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitStartTime>;

        specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void handlePartialSegmentTimerExpiry(long)>($l5);

        goto label4;

     label2:
        $z0 = specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isInService()>();

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void handleInService(long)>(l0);

        goto label4;

     label3:
        specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void handleOutOfService(long)>(l0);

     label4:
        return;
    }

    private void resetPartialSegmentWaitTimer()
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        long l0;
        boolean $z0;
        java.lang.Long $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void removeMessages(int)>(15);

        $z0 = specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isInService()>();

        if $z0 == 0 goto label1;

        r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitStartTime> = l0;

        r0.<com.android.internal.telephony.SmsDispatchersController: long mLastInServiceTime> = l0;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r2 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: android.os.Message obtainMessage(int,java.lang.Object)>(15, $r1);

        virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean sendMessageDelayed(android.os.Message,long)>($r2, 86400000L);

        goto label2;

     label1:
        r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitStartTime> = -1L;

        r0.<com.android.internal.telephony.SmsDispatchersController: long mLastInServiceTime> = -1L;

     label2:
        r0.<com.android.internal.telephony.SmsDispatchersController: long mCurrentWaitElapsedDuration> = 0L;

        return;
    }

    private void setImsSmsFormat(int)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        int i0;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        r0.<com.android.internal.telephony.SmsDispatchersController: java.lang.String mImsSmsFormat> = "unknown";

        goto label3;

     label1:
        r0.<com.android.internal.telephony.SmsDispatchersController: java.lang.String mImsSmsFormat> = "3gpp2";

        goto label3;

     label2:
        r0.<com.android.internal.telephony.SmsDispatchersController: java.lang.String mImsSmsFormat> = "3gpp";

     label3:
        return;
    }

    private boolean triggerDeliveryIntent(com.android.internal.telephony.SMSDispatcher$SmsTracker, java.lang.String, byte[])
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        java.lang.String r1;
        byte[] r2;
        android.content.Intent $r4;
        android.content.Context $r7;
        android.app.PendingIntent$CanceledException $r8;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r9;
        android.app.PendingIntent r10;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r9 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        r10 = r9.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mDeliveryIntent>;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>()>();

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("pdu", r2);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("format", r1);

     label1:
        $r7 = r0.<com.android.internal.telephony.SmsDispatchersController: android.content.Context mContext>;

        virtualinvoke r10.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>($r7, -1, $r4);

     label2:
        return 1;

     label3:
        $r8 := @caughtexception;

        return 0;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    private void updateImsInfo(android.os.AsyncResult)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        java.lang.Object $r1;
        int $i0, $i1;
        java.lang.String $r6, $r7, $r12, $r13;
        boolean $z0, z1, $z2;
        android.os.AsyncResult r8;
        int[] r9;
        java.lang.StringBuilder $r10;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r8 := @parameter0: android.os.AsyncResult;

        $r1 = r8.<android.os.AsyncResult: java.lang.Object result>;

        r9 = (int[]) $r1;

        z1 = 1;

        $i0 = r9[1];

        specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void setImsSmsFormat(int)>($i0);

        $i1 = r9[0];

        if $i1 != 1 goto label1;

        $r7 = "unknown";

        $r6 = r0.<com.android.internal.telephony.SmsDispatchersController: java.lang.String mImsSmsFormat>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<com.android.internal.telephony.SmsDispatchersController: boolean mIms> = z1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMS registration state: ");

        $z2 = r0.<com.android.internal.telephony.SmsDispatchersController: boolean mIms>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" format: ");

        $r12 = r0.<com.android.internal.telephony.SmsDispatchersController: java.lang.String mImsSmsFormat>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SmsDispatchersController", $r13);

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        com.android.internal.telephony.CommandsInterface $r1, $r2;
        com.android.internal.telephony.Phone $r3;
        com.android.internal.telephony.SMSDispatcher $r4, $r5;
        com.android.internal.telephony.gsm.GsmInboundSmsHandler $r6;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler $r7;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        $r1 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void unregisterForOn(android.os.Handler)>(r0);

        $r2 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void unregisterForImsNetworkStateChanged(android.os.Handler)>(r0);

        $r3 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.Phone mPhone>;

        virtualinvoke $r3.<com.android.internal.telephony.Phone: void unregisterForServiceStateChanged(android.os.Handler)>(r0);

        $r4 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        virtualinvoke $r4.<com.android.internal.telephony.SMSDispatcher: void dispose()>();

        $r5 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        virtualinvoke $r5.<com.android.internal.telephony.SMSDispatcher: void dispose()>();

        $r6 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        virtualinvoke $r6.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void dispose()>();

        $r7 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler>;

        virtualinvoke $r7.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void dispose()>();

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        com.android.internal.telephony.gsm.GsmInboundSmsHandler $r4;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler $r5;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        virtualinvoke $r4.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r5 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler>;

        virtualinvoke $r5.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        return;
    }

    public java.lang.String getImsSmsFormat()
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        com.android.internal.telephony.ImsSmsDispatcher $r1, $r2;
        boolean $z0;
        java.lang.String r3;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        $r1 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.ImsSmsDispatcher: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        r3 = virtualinvoke $r2.<com.android.internal.telephony.ImsSmsDispatcher: java.lang.String getFormat()>();

        goto label2;

     label1:
        r3 = r0.<com.android.internal.telephony.SmsDispatchersController: java.lang.String mImsSmsFormat>;

     label2:
        return r3;
    }

    public int getPremiumSmsPermission(java.lang.String)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        java.lang.String r1;
        com.android.internal.telephony.SmsUsageMonitor $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.SmsUsageMonitor: int getPremiumSmsPermission(java.lang.String)>(r1);

        return $i0;
    }

    public com.android.internal.telephony.SmsUsageMonitor getUsageMonitor()
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        com.android.internal.telephony.SmsUsageMonitor $r1;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        $r1 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor>;

        return $r1;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        int $i0;
        com.android.internal.telephony.Phone $r2;
        java.lang.Object $r3, $r5;
        java.lang.Long $r4;
        long $l1;
        java.lang.Throwable $r6, $r9;
        java.lang.StringBuilder $r7;
        java.lang.String $r11;
        com.android.internal.telephony.CommandsInterface $r12;
        android.os.Message $r13, r16;
        boolean $z0;
        com.android.internal.telephony.SMSDispatcher $r14, $r15;
        android.os.AsyncResult r17;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r16 := @parameter0: android.os.Message;

        $i0 = r16.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 11: goto label7;
            case 12: goto label7;
            case 13: goto label5;
            case 14: goto label4;
            case 15: goto label3;
            case 16: goto label2;
            case 17: goto label4;
            default: goto label1;
        };

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isCdmaMo()>();

        if $z0 == 0 goto label8;

        $r15 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        virtualinvoke $r15.<com.android.internal.telephony.SMSDispatcher: void handleMessage(android.os.Message)>(r16);

        goto label9;

     label2:
        $r2 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.Phone mPhone>;

        virtualinvoke $r2.<com.android.internal.telephony.Phone: void registerForServiceStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 14, null);

        specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void resetPartialSegmentWaitTimer()>();

        goto label9;

     label3:
        $r3 = r16.<android.os.Message: java.lang.Object obj>;

        $r4 = (java.lang.Long) $r3;

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void handlePartialSegmentTimerExpiry(long)>($l1);

        goto label9;

     label4:
        specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void reevaluateTimerStatus()>();

        goto label9;

     label5:
        $r5 = r16.<android.os.Message: java.lang.Object obj>;

        r17 = (android.os.AsyncResult) $r5;

        $r6 = r17.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r6 != null goto label6;

        specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void updateImsInfo(android.os.AsyncResult)>(r17);

        goto label9;

     label6:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMS State query failed with exp ");

        $r9 = r17.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsDispatchersController", $r11);

        goto label9;

     label7:
        $r12 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.CommandsInterface mCi>;

        $r13 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: android.os.Message obtainMessage(int)>(13);

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void getImsRegistrationState(android.os.Message)>($r13);

        goto label9;

     label8:
        $r14 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        virtualinvoke $r14.<com.android.internal.telephony.SMSDispatcher: void handleMessage(android.os.Message)>(r16);

     label9:
        return;
    }

    public void handleSentOverImsStatusReport(int, java.lang.String, byte[])
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        int i0, i1, $i2;
        java.lang.String r1;
        byte[] r2;
        java.util.Iterator r3;
        com.android.internal.telephony.ImsSmsDispatcher $r4, $r14;
        java.util.Map $r5, $r15;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8, $r10, $r12;
        java.lang.Integer $r9, $r16;
        android.util.Pair $r11;
        java.lang.Boolean $r13;
        java.util.Map$Entry r18;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r19;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        $r4 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        $r5 = $r4.<com.android.internal.telephony.ImsSmsDispatcher: java.util.Map mTrackers>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.Integer) $r8;

        i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r10 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getValue()>();

        r19 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r10;

        $i2 = r19.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mMessageRef>;

        if $i2 != i0 goto label3;

        $r11 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: android.util.Pair handleSmsStatusReport(com.android.internal.telephony.SMSDispatcher$SmsTracker,java.lang.String,byte[])>(r19, r1, r2);

        $r12 = $r11.<android.util.Pair: java.lang.Object second>;

        $r13 = (java.lang.Boolean) $r12;

        $z1 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r14 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        $r15 = $r14.<com.android.internal.telephony.ImsSmsDispatcher: java.util.Map mTrackers>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r16);

     label2:
        return;

     label3:
        goto label1;

     label4:
        return;
    }

    public android.util.Pair handleSmsStatusReport(com.android.internal.telephony.SMSDispatcher$SmsTracker, java.lang.String, byte[])
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        java.lang.String r2;
        byte[] r3;
        boolean $z0;
        android.util.Pair $r4, $r5;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        $z0 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isCdmaFormat(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        $r5 = specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: android.util.Pair handleCdmaStatusReport(com.android.internal.telephony.SMSDispatcher$SmsTracker,java.lang.String,byte[])>(r1, r2, r3);

        return $r5;

     label1:
        $r4 = specialinvoke r0.<com.android.internal.telephony.SmsDispatchersController: android.util.Pair handleGsmStatusReport(com.android.internal.telephony.SMSDispatcher$SmsTracker,java.lang.String,byte[])>(r1, r2, r3);

        return $r4;
    }

    public void injectSmsPdu(android.telephony.SmsMessage, java.lang.String, com.android.internal.telephony.SmsDispatchersController$SmsInjectionCallback, boolean)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        java.lang.String r1, $r6, $r12, $r19;
        com.android.internal.telephony.SmsDispatchersController$SmsInjectionCallback r2;
        android.os.AsyncResult r3;
        boolean $z0, z1, z2;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler $r13;
        com.android.internal.telephony.gsm.GsmInboundSmsHandler $r20;
        android.telephony.SmsMessage$MessageClass $r21, $r22;
        java.lang.Exception $r23;
        android.telephony.SmsMessage r24;
        java.lang.StringBuilder r25, r26, r27;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r24 := @parameter0: android.telephony.SmsMessage;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.telephony.SmsDispatchersController$SmsInjectionCallback;

        z1 := @parameter3: boolean;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SmsDispatchersController", "SmsDispatchersController:injectSmsPdu");

        if r24 != null goto label03;

     label01:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsDispatchersController", "injectSmsPdu: createFromPdu returned null");

        interfaceinvoke r2.<com.android.internal.telephony.SmsDispatchersController$SmsInjectionCallback: void onSmsInjectedResult(int)>(2);

     label02:
        return;

     label03:
        if z1 != 0 goto label06;

     label04:
        $r21 = virtualinvoke r24.<android.telephony.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()>();

        $r22 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass CLASS_1>;

        if $r21 == $r22 goto label06;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsDispatchersController", "injectSmsPdu: not class 1");

        interfaceinvoke r2.<com.android.internal.telephony.SmsDispatchersController$SmsInjectionCallback: void onSmsInjectedResult(int)>(2);

     label05:
        return;

     label06:
        r3 = new android.os.AsyncResult;

        specialinvoke r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(r2, r24, null);

        z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("3gpp");

     label07:
        if z2 == 0 goto label10;

     label08:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SmsDispatchersController:injectSmsText Sending msg=");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", format=");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to mGsmInboundSmsHandler");

        $r19 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("SmsDispatchersController", $r19);

        $r20 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        virtualinvoke $r20.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void sendMessage(int,java.lang.Object)>(7, r3);

     label09:
        goto label13;

     label10:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("3gpp2");

        if $z0 == 0 goto label12;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SmsDispatchersController:injectSmsText Sending msg=");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", format=");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to mCdmaInboundSmsHandler");

        $r12 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("SmsDispatchersController", $r12);

        $r13 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler>;

        virtualinvoke $r13.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void sendMessage(int,java.lang.Object)>(7, r3);

     label11:
        goto label13;

     label12:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pdu format: ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsDispatchersController", $r6);

        interfaceinvoke r2.<com.android.internal.telephony.SmsDispatchersController$SmsInjectionCallback: void onSmsInjectedResult(int)>(2);

     label13:
        goto label15;

     label14:
        $r23 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsDispatchersController", "injectSmsPdu failed: ", $r23);

        interfaceinvoke r2.<com.android.internal.telephony.SmsDispatchersController$SmsInjectionCallback: void onSmsInjectedResult(int)>(2);

     label15:
        return;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public void injectSmsPdu(byte[], java.lang.String, com.android.internal.telephony.SmsDispatchersController$SmsInjectionCallback)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        byte[] r1;
        java.lang.String r2;
        com.android.internal.telephony.SmsDispatchersController$SmsInjectionCallback r3;
        android.telephony.SmsMessage $r4;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.telephony.SmsDispatchersController$SmsInjectionCallback;

        $r4 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>(r1, r2);

        virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: void injectSmsPdu(android.telephony.SmsMessage,java.lang.String,com.android.internal.telephony.SmsDispatchersController$SmsInjectionCallback,boolean)>($r4, r2, r3, 0);

        return;
    }

    public boolean isCdmaFormat(java.lang.String)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        java.lang.String r1, $r3;
        com.android.internal.telephony.SMSDispatcher $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.SMSDispatcher: java.lang.String getFormat()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    protected boolean isCdmaMo()
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        boolean $z0, $z1, z2;
        java.lang.String $r1;
        com.android.internal.telephony.Phone $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isIms()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if 2 != $i0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;

     label3:
        $r1 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: java.lang.String getImsSmsFormat()>();

        $z1 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isCdmaFormat(java.lang.String)>($r1);

        return $z1;
    }

    public boolean isIms()
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        com.android.internal.telephony.ImsSmsDispatcher $r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        $r1 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.ImsSmsDispatcher: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = r0.<com.android.internal.telephony.SmsDispatchersController: boolean mIms>;

     label2:
        return z1;
    }

    protected void sendData(java.lang.String, java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent, boolean)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        java.lang.String r1, r2, r3;
        int i0;
        byte[] r4;
        android.app.PendingIntent r5, r6;
        boolean z0, $z1, $z2;
        com.android.internal.telephony.ImsSmsDispatcher $r7, $r10;
        com.android.internal.telephony.SMSDispatcher $r8, $r9;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: byte[];

        r5 := @parameter5: android.app.PendingIntent;

        r6 := @parameter6: android.app.PendingIntent;

        z0 := @parameter7: boolean;

        $r7 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        $z1 = virtualinvoke $r7.<com.android.internal.telephony.ImsSmsDispatcher: boolean isAvailable()>();

        if $z1 == 0 goto label1;

        $r10 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        virtualinvoke $r10.<com.android.internal.telephony.ImsSmsDispatcher: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent,boolean)>(r1, r2, r3, i0, r4, r5, r6, z0);

        goto label3;

     label1:
        $z2 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isCdmaMo()>();

        if $z2 == 0 goto label2;

        $r9 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        virtualinvoke $r9.<com.android.internal.telephony.SMSDispatcher: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent,boolean)>(r1, r2, r3, i0, r4, r5, r6, z0);

        goto label3;

     label2:
        $r8 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        virtualinvoke $r8.<com.android.internal.telephony.SMSDispatcher: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent,boolean)>(r1, r2, r3, i0, r4, r5, r6, z0);

     label3:
        return;
    }

    protected void sendMultipartText(java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, android.net.Uri, java.lang.String, boolean, int, boolean, int, long)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        java.lang.String r1, r2, r7;
        java.util.ArrayList r3, r4, r5;
        android.net.Uri r6;
        boolean z0, z1, $z2, $z3;
        int i0, i1;
        long l2;
        com.android.internal.telephony.ImsSmsDispatcher $r8, $r11;
        com.android.internal.telephony.SMSDispatcher $r9, $r10;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.ArrayList;

        r4 := @parameter3: java.util.ArrayList;

        r5 := @parameter4: java.util.ArrayList;

        r6 := @parameter5: android.net.Uri;

        r7 := @parameter6: java.lang.String;

        z0 := @parameter7: boolean;

        i0 := @parameter8: int;

        z1 := @parameter9: boolean;

        i1 := @parameter10: int;

        l2 := @parameter11: long;

        $r8 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        $z2 = virtualinvoke $r8.<com.android.internal.telephony.ImsSmsDispatcher: boolean isAvailable()>();

        if $z2 == 0 goto label1;

        $r11 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        virtualinvoke $r11.<com.android.internal.telephony.ImsSmsDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String,boolean,int,boolean,int,long)>(r1, r2, r3, r4, r5, r6, r7, z0, -1, 0, -1, l2);

        goto label3;

     label1:
        $z3 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isCdmaMo()>();

        if $z3 == 0 goto label2;

        $r10 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        virtualinvoke $r10.<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String,boolean,int,boolean,int,long)>(r1, r2, r3, r4, r5, r6, r7, z0, i0, z1, i1, l2);

        goto label3;

     label2:
        $r9 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        virtualinvoke $r9.<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String,boolean,int,boolean,int,long)>(r1, r2, r3, r4, r5, r6, r7, z0, i0, z1, i1, l2);

     label3:
        return;
    }

    public void sendRetrySms(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        java.lang.String r2, r3, r26, r27, $r30, r33;
        boolean z0, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z16, $z17, z18, z19, z20, z21;
        byte[] r4, $r35, $r36;
        com.android.internal.telephony.Phone $r5;
        int $i0, i5, i6;
        com.android.internal.telephony.SMSDispatcher $r6, $r23, r38;
        java.lang.Object $r12, $r13, $r16, $r17, $r20;
        android.app.PendingIntent $r18, $r19, $r21, $r22;
        com.android.internal.telephony.ImsSmsDispatcher $r24, $r25;
        java.lang.StringBuilder $r28;
        java.util.HashMap r31;
        com.android.internal.telephony.SmsMessageBase$SubmitPduBase r32;
        java.lang.Integer r34;
        android.content.Context $r37;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        r26 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.lang.String mFormat>;

        z16 = 0;

        $z4 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: boolean mUsesImsServiceForIms>;

        if $z4 != 0 goto label01;

        z16 = 0;

        $r25 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        $z14 = virtualinvoke $r25.<com.android.internal.telephony.ImsSmsDispatcher: boolean isAvailable()>();

        if $z14 == 0 goto label01;

        z16 = 1;

     label01:
        if z16 == 0 goto label02;

        $r24 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        r27 = virtualinvoke $r24.<com.android.internal.telephony.ImsSmsDispatcher: java.lang.String getFormat()>();

        goto label04;

     label02:
        $r5 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if 2 != $i0 goto label03;

        $r23 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        r27 = virtualinvoke $r23.<com.android.internal.telephony.SMSDispatcher: java.lang.String getFormat()>();

        goto label04;

     label03:
        $r6 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        r27 = virtualinvoke $r6.<com.android.internal.telephony.SMSDispatcher: java.lang.String getFormat()>();

     label04:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("old format(");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ==> new format (");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SmsDispatchersController", $r30);

        $z17 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>(r27);

        if $z17 != 0 goto label19;

        r31 = virtualinvoke r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.util.HashMap getData()>();

        $z6 = virtualinvoke r31.<java.util.HashMap: boolean containsKey(java.lang.Object)>("scAddr");

        if $z6 == 0 goto label18;

        $z7 = virtualinvoke r31.<java.util.HashMap: boolean containsKey(java.lang.Object)>("destAddr");

        if $z7 == 0 goto label18;

        $z8 = virtualinvoke r31.<java.util.HashMap: boolean containsKey(java.lang.Object)>("text");

        if $z8 != 0 goto label05;

        $z12 = virtualinvoke r31.<java.util.HashMap: boolean containsKey(java.lang.Object)>("data");

        if $z12 == 0 goto label18;

        $z13 = virtualinvoke r31.<java.util.HashMap: boolean containsKey(java.lang.Object)>("destPort");

        if $z13 != 0 goto label05;

        goto label18;

     label05:
        $r12 = virtualinvoke r31.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("scAddr");

        r2 = (java.lang.String) $r12;

        $r13 = virtualinvoke r31.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("destAddr");

        r3 = (java.lang.String) $r13;

        r32 = null;

        z0 = virtualinvoke r31.<java.util.HashMap: boolean containsKey(java.lang.Object)>("text");

        z18 = 1;

        if z0 == 0 goto label11;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SmsDispatchersController", "sms failed was text");

        $r20 = virtualinvoke r31.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("text");

        r33 = (java.lang.String) $r20;

        $z11 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isCdmaFormat(java.lang.String)>(r27);

        if $z11 == 0 goto label08;

        $r22 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mDeliveryIntent>;

        if $r22 == null goto label06;

        goto label07;

     label06:
        z18 = 0;

     label07:
        r32 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)>(r2, r3, r33, z18, null);

        goto label17;

     label08:
        $r21 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mDeliveryIntent>;

        if $r21 == null goto label09;

        z19 = 1;

        goto label10;

     label09:
        z19 = 0;

     label10:
        r32 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])>(r2, r3, r33, z19, null);

        goto label17;

     label11:
        $z9 = virtualinvoke r31.<java.util.HashMap: boolean containsKey(java.lang.Object)>("data");

        if $z9 == 0 goto label17;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SmsDispatchersController", "sms failed was data");

        $r16 = virtualinvoke r31.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("data");

        r4 = (byte[]) $r16;

        $r17 = virtualinvoke r31.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("destPort");

        r34 = (java.lang.Integer) $r17;

        $z10 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isCdmaFormat(java.lang.String)>(r27);

        if $z10 == 0 goto label14;

        i5 = virtualinvoke r34.<java.lang.Integer: int intValue()>();

        $r19 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mDeliveryIntent>;

        if $r19 == null goto label12;

        z20 = 1;

        goto label13;

     label12:
        z20 = 0;

     label13:
        r32 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>(r2, r3, i5, r4, z20);

        goto label17;

     label14:
        i6 = virtualinvoke r34.<java.lang.Integer: int intValue()>();

        $r18 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mDeliveryIntent>;

        if $r18 == null goto label15;

        z21 = 1;

        goto label16;

     label15:
        z21 = 0;

     label16:
        r32 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>(r2, r3, i6, r4, z21);

        goto label17;

     label17:
        $r35 = r32.<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: byte[] encodedScAddress>;

        virtualinvoke r31.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("smsc", $r35);

        $r36 = r32.<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: byte[] encodedMessage>;

        virtualinvoke r31.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("pdu", $r36);

        r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.lang.String mFormat> = r27;

        goto label19;

     label18:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsDispatchersController", "sendRetrySms failed to re-encode per missing fields!");

        $r37 = r0.<com.android.internal.telephony.SmsDispatchersController: android.content.Context mContext>;

        virtualinvoke r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: void onFailed(android.content.Context,int,int)>($r37, 30, -1);

        return;

     label19:
        if z16 == 0 goto label20;

        r38 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        goto label22;

     label20:
        $z5 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isCdmaFormat(java.lang.String)>(r27);

        if $z5 == 0 goto label21;

        r38 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        goto label22;

     label21:
        r38 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

     label22:
        virtualinvoke r38.<com.android.internal.telephony.SMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r1);

        return;
    }

    public void sendText(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent, android.net.Uri, java.lang.String, boolean, int, boolean, int, boolean, long)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        java.lang.String r1, r2, r3, r7;
        android.app.PendingIntent r4, r5;
        android.net.Uri r6;
        boolean z0, z1, z2, $z3, $z4, $z5;
        int i0, i1;
        long l2;
        com.android.internal.telephony.ImsSmsDispatcher $r8, $r9, $r10;
        com.android.internal.telephony.SMSDispatcher $r11, $r12;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.PendingIntent;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: android.net.Uri;

        r7 := @parameter6: java.lang.String;

        z0 := @parameter7: boolean;

        i0 := @parameter8: int;

        z1 := @parameter9: boolean;

        i1 := @parameter10: int;

        z2 := @parameter11: boolean;

        l2 := @parameter12: long;

        $r8 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        $z3 = virtualinvoke $r8.<com.android.internal.telephony.ImsSmsDispatcher: boolean isAvailable()>();

        if $z3 != 0 goto label3;

        $r10 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        $z4 = virtualinvoke $r10.<com.android.internal.telephony.ImsSmsDispatcher: boolean isEmergencySmsSupport(java.lang.String)>(r1);

        if $z4 == 0 goto label1;

        goto label3;

     label1:
        $z5 = virtualinvoke r0.<com.android.internal.telephony.SmsDispatchersController: boolean isCdmaMo()>();

        if $z5 == 0 goto label2;

        $r12 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        virtualinvoke $r12.<com.android.internal.telephony.SMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String,boolean,int,boolean,int,boolean,long)>(r1, r2, r3, r4, r5, r6, r7, z0, i0, z1, i1, z2, l2);

        goto label4;

     label2:
        $r11 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        virtualinvoke $r11.<com.android.internal.telephony.SMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String,boolean,int,boolean,int,boolean,long)>(r1, r2, r3, r4, r5, r6, r7, z0, i0, z1, i1, z2, l2);

        goto label4;

     label3:
        $r9 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.ImsSmsDispatcher mImsSmsDispatcher>;

        virtualinvoke $r9.<com.android.internal.telephony.ImsSmsDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String,boolean,int,boolean,int,boolean,long)>(r1, r2, r3, r4, r5, r6, r7, z0, -1, 0, -1, z2, l2);

     label4:
        return;
    }

    public void setPremiumSmsPermission(java.lang.String, int)
    {
        com.android.internal.telephony.SmsDispatchersController r0;
        java.lang.String r1;
        int i0;
        com.android.internal.telephony.SmsUsageMonitor $r2;

        r0 := @this: com.android.internal.telephony.SmsDispatchersController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.telephony.SmsDispatchersController: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor>;

        virtualinvoke $r2.<com.android.internal.telephony.SmsUsageMonitor: void setPremiumSmsPermission(java.lang.String,int)>(r1, i0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.SmsDispatchersController: boolean VDBG> = 0;

        <com.android.internal.telephony.SmsDispatchersController: java.lang.String TAG> = "SmsDispatchersController";

        <com.android.internal.telephony.SmsDispatchersController: long PARTIAL_SEGMENT_WAIT_DURATION> = 86400000L;

        <com.android.internal.telephony.SmsDispatchersController: long INVALID_TIME> = -1L;

        <com.android.internal.telephony.SmsDispatchersController: int EVENT_USER_UNLOCKED> = 16;

        <com.android.internal.telephony.SmsDispatchersController: int EVENT_SMS_HANDLER_EXITING_WAITING_STATE> = 17;

        <com.android.internal.telephony.SmsDispatchersController: int EVENT_SERVICE_STATE_CHANGED> = 14;

        <com.android.internal.telephony.SmsDispatchersController: int EVENT_RADIO_ON> = 11;

        <com.android.internal.telephony.SmsDispatchersController: int EVENT_PARTIAL_SEGMENT_TIMER_EXPIRY> = 15;

        <com.android.internal.telephony.SmsDispatchersController: int EVENT_IMS_STATE_DONE> = 13;

        <com.android.internal.telephony.SmsDispatchersController: int EVENT_IMS_STATE_CHANGED> = 12;

        return;
    }
}
