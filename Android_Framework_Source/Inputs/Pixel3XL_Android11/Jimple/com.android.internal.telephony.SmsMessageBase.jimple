public abstract class com.android.internal.telephony.SmsMessageBase extends java.lang.Object
{
    public static final java.util.regex.Pattern NAME_ADDR_EMAIL_PATTERN;
    protected java.lang.String mEmailBody;
    protected java.lang.String mEmailFrom;
    protected int mIndexOnIcc;
    protected boolean mIsEmail;
    protected boolean mIsMwi;
    protected java.lang.String mMessageBody;
    public int mMessageRef;
    protected boolean mMwiDontStore;
    protected boolean mMwiSense;
    protected com.android.internal.telephony.SmsAddress mOriginatingAddress;
    protected byte[] mPdu;
    protected java.lang.String mPseudoSubject;
    protected com.android.internal.telephony.SmsAddress mRecipientAddress;
    protected java.lang.String mScAddress;
    protected long mScTimeMillis;
    protected int mStatusOnIcc;
    protected byte[] mUserData;
    protected com.android.internal.telephony.SmsHeader mUserDataHeader;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*(\"[^\"]*\"|[^<>\"]+)\\s*<([^<>]+)>\\s*");

        <com.android.internal.telephony.SmsMessageBase: java.util.regex.Pattern NAME_ADDR_EMAIL_PATTERN> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.internal.telephony.SmsMessageBase r0;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.SmsMessageBase: int mStatusOnIcc> = -1;

        r0.<com.android.internal.telephony.SmsMessageBase: int mIndexOnIcc> = -1;

        return;
    }

    public static com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calcUnicodeEncodingDetails(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i14, i15, i16, $i17;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        $r2 = new com.android.internal.telephony.GsmAlphabet$TextEncodingDetails;

        specialinvoke $r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: void <init>()>();

        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i12 = $i1 * 2;

        $r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize> = 3;

        $i2 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitCount> = $i2;

        if i12 <= 140 goto label5;

        i14 = 134;

        $z0 = staticinvoke <android.telephony.SmsMessage: boolean hasEmsSupport()>();

        if $z0 != 0 goto label1;

        i14 = 134;

        $i10 = 134 - 2;

        $i11 = $i10 * 9;

        if i12 > $i11 goto label1;

        i14 = 134 - 2;

     label1:
        i15 = 0;

        i16 = 0;

     label2:
        $i17 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i15 >= $i17 goto label4;

        i0 = staticinvoke <com.android.internal.telephony.SmsMessageBase: int findNextUnicodePosition(int,int,java.lang.CharSequence)>(i15, i14, r0);

        $i5 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i0 != $i5 goto label3;

        $i6 = i14 / 2;

        $i7 = $i6 + i15;

        $i8 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $i9 = $i7 - $i8;

        $r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitsRemaining> = $i9;

     label3:
        i15 = i0;

        i16 = i16 + 1;

        goto label2;

     label4:
        $r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount> = i16;

        goto label6;

     label5:
        $r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount> = 1;

        $i3 = 140 - i12;

        $i4 = $i3 / 2;

        $r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitsRemaining> = $i4;

     label6:
        return $r2;
    }

    private static java.lang.String extractAddrSpec(java.lang.String)
    {
        java.lang.String r0, $r3;
        java.util.regex.Matcher r1;
        java.util.regex.Pattern $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.android.internal.telephony.SmsMessageBase: java.util.regex.Pattern NAME_ADDR_EMAIL_PATTERN>;

        r1 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        return $r3;

     label1:
        return r0;
    }

    public static int findNextUnicodePosition(int, int, java.lang.CharSequence)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, i12, i13;
        java.lang.CharSequence r0;
        java.text.BreakIterator r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3;
        char $c8;

        i0 := @parameter0: int;

        i12 := @parameter1: int;

        r0 := @parameter2: java.lang.CharSequence;

        $i2 = i12 / 2;

        $i3 = $i2 + i0;

        $i4 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        i13 = i1;

        $i5 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i1 >= $i5 goto label4;

        r1 = staticinvoke <java.text.BreakIterator: java.text.BreakIterator getCharacterInstance()>();

        $r2 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke r1.<java.text.BreakIterator: void setText(java.lang.String)>($r2);

        i13 = i1;

        $z0 = virtualinvoke r1.<java.text.BreakIterator: boolean isBoundary(int)>(i1);

        if $z0 != 0 goto label4;

        i13 = virtualinvoke r1.<java.text.BreakIterator: int preceding(int)>(i1);

     label1:
        $i6 = i13 + 4;

        if $i6 > i1 goto label2;

        $i9 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r0, i13);

        $z2 = staticinvoke <com.android.internal.telephony.SmsMessageBase: boolean isRegionalIndicatorSymbol(int)>($i9);

        if $z2 == 0 goto label2;

        $i10 = i13 + 2;

        $i11 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r0, $i10);

        $z3 = staticinvoke <com.android.internal.telephony.SmsMessageBase: boolean isRegionalIndicatorSymbol(int)>($i11);

        if $z3 == 0 goto label2;

        i13 = i13 + 4;

        goto label1;

     label2:
        if i13 <= i0 goto label3;

        goto label4;

     label3:
        i13 = i1;

        $i7 = i1 - 1;

        $c8 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i7);

        $z1 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>($c8);

        if $z1 == 0 goto label4;

        i13 = i1 - 1;

     label4:
        return i13;
    }

    public static boolean isEmailAddress(java.lang.String)
    {
        boolean $z0, $z1;
        java.util.regex.Pattern $r0;
        java.util.regex.Matcher $r1;
        java.lang.String r2, r3;

        r2 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r3 = staticinvoke <com.android.internal.telephony.SmsMessageBase: java.lang.String extractAddrSpec(java.lang.String)>(r2);

        $r0 = <android.util.Patterns: java.util.regex.Pattern EMAIL_ADDRESS>;

        $r1 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);

        $z1 = virtualinvoke $r1.<java.util.regex.Matcher: boolean matches()>();

        return $z1;
    }

    private static boolean isRegionalIndicatorSymbol(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if 127462 > i0 goto label1;

        if i0 > 127487 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    protected void extractEmailAddressFromMessageBody()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        java.lang.String[] r1;
        java.lang.String r2, $r3, $r4;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $r3 = r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String mMessageBody>;

        r1 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("( /)|( )", 2);

        $i0 = lengthof r1;

        if $i0 >= 2 goto label1;

        return;

     label1:
        r2 = r1[0];

        r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String mEmailFrom> = r2;

        $r4 = r1[1];

        r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String mEmailBody> = $r4;

        $z0 = staticinvoke <com.android.internal.telephony.SmsMessageBase: boolean isEmailAddress(java.lang.String)>(r2);

        r0.<com.android.internal.telephony.SmsMessageBase: boolean mIsEmail> = $z0;

        return;
    }

    public java.lang.String getDisplayMessageBody()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        boolean $z0;
        java.lang.String $r1, $r2;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $z0 = r0.<com.android.internal.telephony.SmsMessageBase: boolean mIsEmail>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String mEmailBody>;

        return $r2;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String getMessageBody()>();

        return $r1;
    }

    public java.lang.String getDisplayOriginatingAddress()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        boolean $z0;
        java.lang.String $r1, $r2;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $z0 = r0.<com.android.internal.telephony.SmsMessageBase: boolean mIsEmail>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String mEmailFrom>;

        return $r2;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String getOriginatingAddress()>();

        return $r1;
    }

    public java.lang.String getEmailBody()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $r1 = r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String mEmailBody>;

        return $r1;
    }

    public java.lang.String getEmailFrom()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $r1 = r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String mEmailFrom>;

        return $r1;
    }

    public int getIndexOnIcc()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $i0 = r0.<com.android.internal.telephony.SmsMessageBase: int mIndexOnIcc>;

        return $i0;
    }

    public java.lang.String getMessageBody()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $r1 = r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String mMessageBody>;

        return $r1;
    }

    public abstract com.android.internal.telephony.SmsConstants$MessageClass getMessageClass();

    public java.lang.String getOriginatingAddress()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        com.android.internal.telephony.SmsAddress r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        r1 = r0.<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<com.android.internal.telephony.SmsAddress: java.lang.String getAddressString()>();

        return $r2;
    }

    public byte[] getPdu()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        byte[] $r1;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $r1 = r0.<com.android.internal.telephony.SmsMessageBase: byte[] mPdu>;

        return $r1;
    }

    public abstract int getProtocolIdentifier();

    public java.lang.String getPseudoSubject()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        r1 = r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String mPseudoSubject>;

        r2 = r1;

        if r1 != null goto label1;

        r2 = "";

     label1:
        return r2;
    }

    public java.lang.String getRecipientAddress()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        com.android.internal.telephony.SmsAddress r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        r1 = r0.<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsAddress mRecipientAddress>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<com.android.internal.telephony.SmsAddress: java.lang.String getAddressString()>();

        return $r2;
    }

    public java.lang.String getServiceCenterAddress()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $r1 = r0.<com.android.internal.telephony.SmsMessageBase: java.lang.String mScAddress>;

        return $r1;
    }

    public abstract int getStatus();

    public int getStatusOnIcc()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $i0 = r0.<com.android.internal.telephony.SmsMessageBase: int mStatusOnIcc>;

        return $i0;
    }

    public long getTimestampMillis()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $l0 = r0.<com.android.internal.telephony.SmsMessageBase: long mScTimeMillis>;

        return $l0;
    }

    public byte[] getUserData()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        byte[] $r1;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $r1 = r0.<com.android.internal.telephony.SmsMessageBase: byte[] mUserData>;

        return $r1;
    }

    public com.android.internal.telephony.SmsHeader getUserDataHeader()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        com.android.internal.telephony.SmsHeader $r1;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $r1 = r0.<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsHeader mUserDataHeader>;

        return $r1;
    }

    public abstract boolean isCphsMwiMessage();

    public boolean isEmail()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        $z0 = r0.<com.android.internal.telephony.SmsMessageBase: boolean mIsEmail>;

        return $z0;
    }

    public abstract boolean isMWIClearMessage();

    public abstract boolean isMWISetMessage();

    public abstract boolean isMwiDontStore();

    public abstract boolean isReplace();

    public abstract boolean isReplyPathPresent();

    public abstract boolean isStatusReportMessage();

    protected void parseMessageBody()
    {
        com.android.internal.telephony.SmsMessageBase r0;
        com.android.internal.telephony.SmsAddress r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.SmsMessageBase;

        r1 = r0.<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.SmsAddress: boolean couldBeEmailGateway()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.SmsMessageBase: void extractEmailAddressFromMessageBody()>();

     label1:
        return;
    }
}
