public class com.android.internal.telephony.SmsNumberUtils extends java.lang.Object
{
    private static int[] ALL_COUNTRY_CODES;
    private static final int CDMA_HOME_NETWORK;
    private static final int CDMA_ROAMING_NETWORK;
    private static final boolean DBG;
    private static final int GSM_UMTS_NETWORK;
    private static java.util.HashMap IDDS_MAPS;
    private static int MAX_COUNTRY_CODES_LENGTH;
    private static final int MIN_COUNTRY_AREA_LOCAL_LENGTH;
    private static final int NANP_CC;
    private static final java.lang.String NANP_IDD;
    private static final int NANP_LONG_LENGTH;
    private static final int NANP_MEDIUM_LENGTH;
    private static final java.lang.String NANP_NDD;
    private static final int NANP_SHORT_LENGTH;
    private static final int NP_CC_AREA_LOCAL;
    private static final int NP_HOMEIDD_CC_AREA_LOCAL;
    private static final int NP_INTERNATIONAL_BEGIN;
    private static final int NP_LOCALIDD_CC_AREA_LOCAL;
    private static final int NP_NANP_AREA_LOCAL;
    private static final int NP_NANP_BEGIN;
    private static final int NP_NANP_LOCAL;
    private static final int NP_NANP_LOCALIDD_CC_AREA_LOCAL;
    private static final int NP_NANP_NBPCD_CC_AREA_LOCAL;
    private static final int NP_NANP_NBPCD_HOMEIDD_CC_AREA_LOCAL;
    private static final int NP_NANP_NDD_AREA_LOCAL;
    private static final int NP_NBPCD_CC_AREA_LOCAL;
    private static final int NP_NBPCD_HOMEIDD_CC_AREA_LOCAL;
    private static final int NP_NONE;
    private static final java.lang.String PLUS_SIGN;
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        int $i0;
        java.util.HashMap $r0;
        boolean z0;

        <com.android.internal.telephony.SmsNumberUtils: java.lang.String TAG> = "SmsNumberUtils";

        <com.android.internal.telephony.SmsNumberUtils: java.lang.String PLUS_SIGN> = "+";

        <com.android.internal.telephony.SmsNumberUtils: int NP_NONE> = 0;

        <com.android.internal.telephony.SmsNumberUtils: int NP_NBPCD_HOMEIDD_CC_AREA_LOCAL> = 100;

        <com.android.internal.telephony.SmsNumberUtils: int NP_NBPCD_CC_AREA_LOCAL> = 102;

        <com.android.internal.telephony.SmsNumberUtils: int NP_NANP_NDD_AREA_LOCAL> = 3;

        <com.android.internal.telephony.SmsNumberUtils: int NP_NANP_NBPCD_HOMEIDD_CC_AREA_LOCAL> = 6;

        <com.android.internal.telephony.SmsNumberUtils: int NP_NANP_NBPCD_CC_AREA_LOCAL> = 4;

        <com.android.internal.telephony.SmsNumberUtils: int NP_NANP_LOCALIDD_CC_AREA_LOCAL> = 5;

        <com.android.internal.telephony.SmsNumberUtils: int NP_NANP_LOCAL> = 1;

        <com.android.internal.telephony.SmsNumberUtils: int NP_NANP_BEGIN> = 1;

        <com.android.internal.telephony.SmsNumberUtils: int NP_NANP_AREA_LOCAL> = 2;

        <com.android.internal.telephony.SmsNumberUtils: int NP_LOCALIDD_CC_AREA_LOCAL> = 103;

        <com.android.internal.telephony.SmsNumberUtils: int NP_INTERNATIONAL_BEGIN> = 100;

        <com.android.internal.telephony.SmsNumberUtils: int NP_HOMEIDD_CC_AREA_LOCAL> = 101;

        <com.android.internal.telephony.SmsNumberUtils: int NP_CC_AREA_LOCAL> = 104;

        <com.android.internal.telephony.SmsNumberUtils: int NANP_SHORT_LENGTH> = 7;

        <com.android.internal.telephony.SmsNumberUtils: java.lang.String NANP_NDD> = "1";

        <com.android.internal.telephony.SmsNumberUtils: int NANP_MEDIUM_LENGTH> = 10;

        <com.android.internal.telephony.SmsNumberUtils: int NANP_LONG_LENGTH> = 11;

        <com.android.internal.telephony.SmsNumberUtils: java.lang.String NANP_IDD> = "011";

        <com.android.internal.telephony.SmsNumberUtils: int NANP_CC> = 1;

        <com.android.internal.telephony.SmsNumberUtils: int MIN_COUNTRY_AREA_LOCAL_LENGTH> = 10;

        <com.android.internal.telephony.SmsNumberUtils: int MAX_COUNTRY_CODES_LENGTH> = 0;

        <com.android.internal.telephony.SmsNumberUtils: int GSM_UMTS_NETWORK> = 0;

        <com.android.internal.telephony.SmsNumberUtils: int CDMA_ROAMING_NETWORK> = 2;

        <com.android.internal.telephony.SmsNumberUtils: int CDMA_HOME_NETWORK> = 1;

        z0 = 0;

        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.debuggable", 0);

        if $i0 != 1 goto label1;

        z0 = 1;

     label1:
        <com.android.internal.telephony.SmsNumberUtils: boolean DBG> = z0;

        <com.android.internal.telephony.SmsNumberUtils: int[] ALL_COUNTRY_CODES> = null;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.internal.telephony.SmsNumberUtils: java.util.HashMap IDDS_MAPS> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.internal.telephony.SmsNumberUtils r0;

        r0 := @this: com.android.internal.telephony.SmsNumberUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int checkInternationalNumberPlan(android.content.Context, com.android.internal.telephony.SmsNumberUtils$NumberEntry, java.util.ArrayList, java.lang.String)
    {
        android.content.Context r0;
        com.android.internal.telephony.SmsNumberUtils$NumberEntry r1;
        java.lang.String r2, $r4, $r5, $r6, r8, r9, r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r3;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7;
        java.util.ArrayList r7;
        java.util.Iterator r10;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.internal.telephony.SmsNumberUtils$NumberEntry;

        r7 := @parameter2: java.util.ArrayList;

        r8 := @parameter3: java.lang.String;

        r2 = r1.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: java.lang.String number>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("+");

        if $z0 == 0 goto label04;

        r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);

        $z5 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>(r8);

        if $z5 == 0 goto label02;

        $i2 = virtualinvoke r8.<java.lang.String: int length()>();

        $r6 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i2);

        i3 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: int getCountryCode(android.content.Context,java.lang.String)>(r0, $r6);

        if i3 <= 0 goto label01;

        r1.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: int countryCode> = i3;

        return 100;

     label01:
        goto label03;

     label02:
        i4 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: int getCountryCode(android.content.Context,java.lang.String)>(r0, r9);

        if i4 <= 0 goto label03;

        r1.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: int countryCode> = i4;

        return 102;

     label03:
        goto label10;

     label04:
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r8);

        if $z1 == 0 goto label06;

        $i1 = virtualinvoke r8.<java.lang.String: int length()>();

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        i5 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: int getCountryCode(android.content.Context,java.lang.String)>(r0, $r5);

        if i5 <= 0 goto label05;

        r1.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: int countryCode> = i5;

        return 101;

     label05:
        goto label10;

     label06:
        r10 = virtualinvoke r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r3 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r3;

        $z4 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r11);

        if $z4 == 0 goto label08;

        $i0 = virtualinvoke r11.<java.lang.String: int length()>();

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i0);

        i6 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: int getCountryCode(android.content.Context,java.lang.String)>(r0, $r4);

        if i6 <= 0 goto label08;

        r1.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: int countryCode> = i6;

        r1.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: java.lang.String IDD> = r11;

        return 103;

     label08:
        goto label07;

     label09:
        $z3 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("0");

        if $z3 != 0 goto label10;

        i7 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: int getCountryCode(android.content.Context,java.lang.String)>(r0, r2);

        if i7 <= 0 goto label10;

        r1.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: int countryCode> = i7;

        return 104;

     label10:
        return 0;
    }

    private static int checkNANP(com.android.internal.telephony.SmsNumberUtils$NumberEntry, java.util.ArrayList)
    {
        java.lang.String r0, r1, r2, $r4, $r5, r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, i8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z12;
        java.lang.Object $r3;
        char $c6, c7;
        com.android.internal.telephony.SmsNumberUtils$NumberEntry r6;
        java.util.ArrayList r7;
        java.util.Iterator r9;

        r6 := @parameter0: com.android.internal.telephony.SmsNumberUtils$NumberEntry;

        r7 := @parameter1: java.util.ArrayList;

        r0 = r6.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: java.lang.String number>;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 7 goto label05;

        c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        z12 = 0;

        if c7 < 50 goto label03;

        z12 = 0;

        if c7 > 57 goto label03;

        i8 = 1;

     label01:
        z12 = 1;

        if i8 >= 7 goto label03;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $z10 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isISODigit(char)>($c6);

        if $z10 != 0 goto label02;

        z12 = 0;

        goto label03;

     label02:
        i8 = i8 + 1;

        goto label01;

     label03:
        if z12 == 0 goto label04;

        return 1;

     label04:
        goto label12;

     label05:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 10 goto label06;

        $z9 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: boolean isNANP(java.lang.String)>(r0);

        if $z9 == 0 goto label12;

        return 2;

     label06:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 != 11 goto label07;

        $z8 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: boolean isNANP(java.lang.String)>(r0);

        if $z8 == 0 goto label12;

        return 3;

     label07:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("+");

        if $z0 == 0 goto label09;

        r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $i4 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i4 != 11 goto label08;

        $z7 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: boolean isNANP(java.lang.String)>(r8);

        if $z7 == 0 goto label12;

        return 4;

     label08:
        $z5 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("011");

        if $z5 == 0 goto label12;

        $i5 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i5 != 14 goto label12;

        $r5 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(3);

        $z6 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: boolean isNANP(java.lang.String)>($r5);

        if $z6 == 0 goto label12;

        return 6;

     label09:
        r9 = virtualinvoke r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r3 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.String) $r3;

        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z2 == 0 goto label11;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

        if r2 == null goto label11;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(1);

        $z3 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z3 == 0 goto label11;

        $z4 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: boolean isNANP(java.lang.String)>(r2);

        if $z4 == 0 goto label11;

        r6.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: java.lang.String IDD> = r1;

        return 5;

     label11:
        goto label10;

     label12:
        return 0;
    }

    public static java.lang.String filterDestAddr(android.content.Context, int, java.lang.String)
    {
        android.telephony.TelephonyManager r0, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r1, $r6, $r8, $r11;
        java.lang.String $r2, $r3, $r7, $r9, $r10, $r12, $r13, r15, r17, r18, r19, r21, r23;
        java.lang.Object $r4;
        int $i0, i1, i2;
        android.content.Context r14;

        r14 := @parameter0: android.content.Context;

        i1 := @parameter1: int;

        r15 := @parameter2: java.lang.String;

        $z0 = <com.android.internal.telephony.SmsNumberUtils: boolean DBG>;

        if $z0 == 0 goto label01;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enter filterDestAddr. destAddr=\"");

        $r12 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: java.lang.String pii(java.lang.String,java.lang.Object)>("SmsNumberUtils", r15);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SmsNumberUtils", $r13);

     label01:
        if r15 == null goto label10;

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isGlobalPhoneNumber(java.lang.String)>(r15);

        if $z1 != 0 goto label02;

        goto label10;

     label02:
        $r4 = virtualinvoke r14.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r5 = (android.telephony.TelephonyManager) $r4;

        r0 = virtualinvoke $r5.<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>(i1);

        r17 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

        r18 = null;

        $z2 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: boolean needToConvert(android.content.Context,int)>(r14, i1);

        if $z2 == 0 goto label03;

        i2 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: int getNetworkType(android.telephony.TelephonyManager)>(r0);

        r18 = null;

        if i2 == -1 goto label03;

        r18 = null;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r17);

        if $z3 != 0 goto label03;

        r19 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        r18 = null;

        if r19 == null goto label03;

        r18 = null;

        $r10 = virtualinvoke r19.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 <= 0 goto label03;

        r18 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: java.lang.String formatNumber(android.content.Context,java.lang.String,java.lang.String,int)>(r14, r15, r19, i2);

     label03:
        $z4 = <com.android.internal.telephony.SmsNumberUtils: boolean DBG>;

        if $z4 == 0 goto label08;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destAddr is ");

        if r18 == null goto label04;

        r21 = "formatted.";

        goto label05;

     label04:
        r21 = "not formatted.";

     label05:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SmsNumberUtils", $r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("leave filterDestAddr, new destAddr=\"");

        if r18 == null goto label06;

        r23 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: java.lang.String pii(java.lang.String,java.lang.Object)>("SmsNumberUtils", r18);

        goto label07;

     label06:
        r23 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: java.lang.String pii(java.lang.String,java.lang.Object)>("SmsNumberUtils", r15);

     label07:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SmsNumberUtils", $r9);

     label08:
        if r18 == null goto label09;

        r15 = r18;

        goto label09;

     label09:
        return r15;

     label10:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destAddr");

        $r2 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: java.lang.String pii(java.lang.String,java.lang.Object)>("SmsNumberUtils", r15);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a global phone number! Nothing changed.");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SmsNumberUtils", $r3);

        return r15;
    }

    private static java.lang.String formatNumber(android.content.Context, java.lang.String, java.lang.String, int)
    {
        java.util.ArrayList r1;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9;
        java.lang.IllegalArgumentException $r2, $r3, $r5;
        java.lang.String $r4, $r8, $r10, $r11, $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r29, $r30, r32, r33, r34, r38, r43;
        com.android.internal.telephony.SmsNumberUtils$NumberEntry $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r7, $r9, $r12, $r14, $r16, $r23, $r28;
        android.content.Context r31;

        r31 := @parameter0: android.content.Context;

        r32 := @parameter1: java.lang.String;

        r33 := @parameter2: java.lang.String;

        i4 := @parameter3: int;

        if r32 == null goto label27;

        if r33 == null goto label26;

        $r4 = virtualinvoke r33.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 == 0 goto label26;

        r34 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>(r32);

        if r34 == null goto label25;

        $i2 = virtualinvoke r34.<java.lang.String: int length()>();

        if $i2 == 0 goto label25;

        $r6 = new com.android.internal.telephony.SmsNumberUtils$NumberEntry;

        specialinvoke $r6.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: void <init>(java.lang.String)>(r34);

        r1 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: java.util.ArrayList getAllIDDs(android.content.Context,java.lang.String)>(r31, r33);

        i0 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: int checkNANP(com.android.internal.telephony.SmsNumberUtils$NumberEntry,java.util.ArrayList)>($r6, r1);

        $z0 = <com.android.internal.telephony.SmsNumberUtils: boolean DBG>;

        if $z0 == 0 goto label01;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NANP type: ");

        $r29 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: java.lang.String getNumberPlanType(int)>(i0);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SmsNumberUtils", $r30);

     label01:
        if i0 == 1 goto label24;

        if i0 == 2 goto label24;

        if i0 != 3 goto label02;

        goto label24;

     label02:
        if i0 != 4 goto label05;

        if i4 == 1 goto label04;

        if i4 != 2 goto label03;

        goto label04;

     label03:
        return r34;

     label04:
        $r27 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int)>(1);

        return $r27;

     label05:
        if i0 != 5 goto label10;

        if i4 != 1 goto label06;

        return r34;

     label06:
        if i4 != 0 goto label08;

        i5 = 0;

        $r22 = $r6.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: java.lang.String IDD>;

        if $r22 == null goto label07;

        $r26 = $r6.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: java.lang.String IDD>;

        i5 = virtualinvoke $r26.<java.lang.String: int length()>();

     label07:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r24 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int)>(i5);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;

     label08:
        if i4 != 2 goto label10;

        i6 = 0;

        $r19 = $r6.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: java.lang.String IDD>;

        if $r19 == null goto label09;

        $r21 = $r6.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: java.lang.String IDD>;

        i6 = virtualinvoke $r21.<java.lang.String: int length()>();

     label09:
        $r20 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int)>(i6);

        return $r20;

     label10:
        i7 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: int checkInternationalNumberPlan(android.content.Context,com.android.internal.telephony.SmsNumberUtils$NumberEntry,java.util.ArrayList,java.lang.String)>(r31, $r6, r1, "011");

        $z1 = <com.android.internal.telephony.SmsNumberUtils: boolean DBG>;

        if $z1 == 0 goto label11;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("International type: ");

        $r17 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: java.lang.String getNumberPlanType(int)>(i7);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SmsNumberUtils", $r18);

     label11:
        tableswitch(i7)
        {
            case 100: goto label19;
            case 101: goto label18;
            case 102: goto label17;
            case 103: goto label14;
            case 104: goto label13;
            default: goto label12;
        };

     label12:
        r38 = null;

        $z3 = virtualinvoke r34.<java.lang.String: boolean startsWith(java.lang.String)>("+");

        if $z3 == 0 goto label22;

        if i4 == 1 goto label20;

        r38 = null;

        if i4 != 2 goto label22;

        goto label20;

     label13:
        i8 = $r6.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: int countryCode>;

        r38 = null;

        $z2 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: boolean inExceptionListForNpCcAreaLocal(com.android.internal.telephony.SmsNumberUtils$NumberEntry)>($r6);

        if $z2 != 0 goto label22;

        r38 = null;

        $i3 = virtualinvoke r34.<java.lang.String: int length()>();

        if $i3 < 11 goto label22;

        r38 = null;

        if i8 == 1 goto label22;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("011");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        r38 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label22;

     label14:
        if i4 == 0 goto label15;

        r38 = null;

        if i4 != 2 goto label22;

     label15:
        i9 = 0;

        $r8 = $r6.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: java.lang.String IDD>;

        if $r8 == null goto label16;

        $r11 = $r6.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: java.lang.String IDD>;

        i9 = virtualinvoke $r11.<java.lang.String: int length()>();

     label16:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("011");

        $r10 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int)>(i9);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r38 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label22;

     label17:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("011");

        $r13 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r38 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label22;

     label18:
        r38 = r34;

        goto label22;

     label19:
        r38 = null;

        if i4 != 0 goto label22;

        r38 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int)>(1);

        goto label22;

     label20:
        $z4 = virtualinvoke r34.<java.lang.String: boolean startsWith(java.lang.String)>("+011");

        if $z4 == 0 goto label21;

        r38 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int)>(1);

        goto label22;

     label21:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("011");

        $r15 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r38 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label22:
        r43 = r38;

        if r38 != null goto label23;

        r43 = r34;

     label23:
        return r43;

     label24:
        return r34;

     label25:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Number is invalid!");

        throw $r5;

     label26:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("activeMcc is null or empty!");

        throw $r3;

     label27:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("number is null");

        throw $r2;
    }

    private static int[] getAllCountryCodes(android.content.Context)
    {
        android.content.ContentResolver $r0;
        java.lang.String[] $r1;
        android.net.Uri $r2;
        int $i0, $i1, $i2, i4, i5, i6;
        int[] $r3, $r4, r10, $r16;
        boolean $z0;
        java.lang.String $r5, $r6;
        java.lang.Throwable $r7;
        android.database.SQLException $r8;
        android.content.Context r9;
        android.database.Cursor r11, r12, r13;

        r9 := @parameter0: android.content.Context;

        r10 = <com.android.internal.telephony.SmsNumberUtils: int[] ALL_COUNTRY_CODES>;

        if r10 == null goto label01;

        return r10;

     label01:
        r11 = null;

        r12 = null;

     label02:
        $r0 = virtualinvoke r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = <com.android.internal.telephony.HbpcdLookup$MccLookup: android.net.Uri CONTENT_URI>;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "Country_Code";

        r13 = virtualinvoke $r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, $r1, null, null, null);

     label03:
        r12 = r13;

        r11 = r13;

     label04:
        $i0 = interfaceinvoke r13.<android.database.Cursor: int getCount()>();

        if $i0 <= 0 goto label21;

     label05:
        r12 = r13;

        r11 = r13;

     label06:
        $i1 = interfaceinvoke r13.<android.database.Cursor: int getCount()>();

        $r3 = newarray (int)[$i1];

        <com.android.internal.telephony.SmsNumberUtils: int[] ALL_COUNTRY_CODES> = $r3;

     label07:
        i4 = 0;

     label08:
        r12 = r13;

        r11 = r13;

     label09:
        $z0 = interfaceinvoke r13.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label21;

     label10:
        r12 = r13;

        r11 = r13;

     label11:
        i5 = interfaceinvoke r13.<android.database.Cursor: int getInt(int)>(0);

     label12:
        r12 = r13;

        r11 = r13;

     label13:
        $r4 = <com.android.internal.telephony.SmsNumberUtils: int[] ALL_COUNTRY_CODES>;

        $r4[i4] = i5;

     label14:
        r12 = r13;

        r11 = r13;

     label15:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i5);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        i6 = virtualinvoke $r6.<java.lang.String: int length()>();

     label16:
        r12 = r13;

        r11 = r13;

     label17:
        $i2 = <com.android.internal.telephony.SmsNumberUtils: int MAX_COUNTRY_CODES_LENGTH>;

        if i6 <= $i2 goto label20;

     label18:
        r12 = r13;

        r11 = r13;

     label19:
        <com.android.internal.telephony.SmsNumberUtils: int MAX_COUNTRY_CODES_LENGTH> = i6;

     label20:
        i4 = i4 + 1;

        goto label08;

     label21:
        if r13 == null goto label27;

     label22:
        interfaceinvoke r13.<android.database.Cursor: void close()>();

        goto label27;

     label23:
        $r7 := @caughtexception;

        goto label28;

     label24:
        $r8 := @caughtexception;

        r12 = r11;

     label25:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsNumberUtils", "Can\'t access HbpcdLookup database", $r8);

     label26:
        if r11 == null goto label27;

        r13 = r11;

        goto label22;

     label27:
        $r16 = <com.android.internal.telephony.SmsNumberUtils: int[] ALL_COUNTRY_CODES>;

        return $r16;

     label28:
        if r12 == null goto label29;

        interfaceinvoke r12.<android.database.Cursor: void close()>();

     label29:
        throw $r7;

        catch android.database.SQLException from label02 to label03 with label24;
        catch java.lang.Throwable from label02 to label03 with label23;
        catch android.database.SQLException from label04 to label05 with label24;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch android.database.SQLException from label06 to label07 with label24;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch android.database.SQLException from label09 to label10 with label24;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch android.database.SQLException from label11 to label12 with label24;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch android.database.SQLException from label13 to label14 with label24;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch android.database.SQLException from label15 to label16 with label24;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch android.database.SQLException from label17 to label18 with label24;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch android.database.SQLException from label19 to label20 with label24;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label25 to label26 with label23;
    }

    private static java.util.ArrayList getAllIDDs(android.content.Context, java.lang.String)
    {
        java.lang.String r0, $r14, r20, r25;
        java.util.HashMap $r2, $r28;
        java.lang.Object $r3;
        java.util.ArrayList $r4, r19;
        android.content.ContentResolver $r5;
        java.lang.String[] $r6, $r15, r21;
        android.net.Uri $r7;
        int $i0;
        java.lang.StringBuilder $r9;
        boolean $z0, $z1, $z3;
        android.database.SQLException $r16;
        java.lang.Throwable $r17;
        android.content.Context r18;
        android.database.Cursor r22, r23, r24;

        r18 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        $r2 = <com.android.internal.telephony.SmsNumberUtils: java.util.HashMap IDDS_MAPS>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r19 = (java.util.ArrayList) $r3;

        if r19 == null goto label01;

        return r19;

     label01:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r20 = null;

        r21 = null;

        if r0 == null goto label02;

        r20 = "MCC=?";

        $r15 = newarray (java.lang.String)[1];

        $r15[0] = r0;

        r21 = $r15;

     label02:
        r22 = null;

        r23 = null;

     label03:
        $r5 = virtualinvoke r18.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = <com.android.internal.telephony.HbpcdLookup$MccIdd: android.net.Uri CONTENT_URI>;

        $r6 = newarray (java.lang.String)[2];

        $r6[0] = "IDD";

        $r6[1] = "MCC";

        r24 = virtualinvoke $r5.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r7, $r6, r20, r21, null);

     label04:
        r23 = r24;

        r22 = r24;

     label05:
        $i0 = interfaceinvoke r24.<android.database.Cursor: int getCount()>();

        if $i0 <= 0 goto label15;

     label06:
        r23 = r24;

        r22 = r24;

     label07:
        $z0 = interfaceinvoke r24.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label15;

     label08:
        r23 = r24;

        r22 = r24;

     label09:
        r25 = interfaceinvoke r24.<android.database.Cursor: java.lang.String getString(int)>(0);

     label10:
        r23 = r24;

        r22 = r24;

     label11:
        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r25);

        if $z1 != 0 goto label14;

     label12:
        r23 = r24;

        r22 = r24;

     label13:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r25);

     label14:
        goto label06;

     label15:
        if r24 == null goto label21;

     label16:
        interfaceinvoke r24.<android.database.Cursor: void close()>();

        goto label21;

     label17:
        $r17 := @caughtexception;

        goto label23;

     label18:
        $r16 := @caughtexception;

        r23 = r22;

     label19:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsNumberUtils", "Can\'t access HbpcdLookup database", $r16);

     label20:
        if r22 == null goto label21;

        r24 = r22;

        goto label16;

     label21:
        $r28 = <com.android.internal.telephony.SmsNumberUtils: java.util.HashMap IDDS_MAPS>;

        virtualinvoke $r28.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r4);

        $z3 = <com.android.internal.telephony.SmsNumberUtils: boolean DBG>;

        if $z3 == 0 goto label22;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MCC = ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", all IDDs = ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SmsNumberUtils", $r14);

     label22:
        return $r4;

     label23:
        if r23 == null goto label24;

        interfaceinvoke r23.<android.database.Cursor: void close()>();

     label24:
        throw $r17;

        catch android.database.SQLException from label03 to label04 with label18;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch android.database.SQLException from label05 to label06 with label18;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch android.database.SQLException from label07 to label08 with label18;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch android.database.SQLException from label09 to label10 with label18;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch android.database.SQLException from label11 to label12 with label18;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch android.database.SQLException from label13 to label14 with label18;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label19 to label20 with label17;
    }

    private static int getCountryCode(android.content.Context, java.lang.String)
    {
        java.lang.String r0, $r5, $r6;
        int[] r1, r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, i10, i11, i12;
        boolean $z0;
        java.lang.StringBuilder $r2;
        android.content.Context r7;

        r7 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 < 10 goto label9;

        r1 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: int[] getAllCountryCodes(android.content.Context)>(r7);

        if r1 != null goto label1;

        return -1;

     label1:
        $i2 = <com.android.internal.telephony.SmsNumberUtils: int MAX_COUNTRY_CODES_LENGTH>;

        r8 = newarray (int)[$i2];

        i10 = 0;

     label2:
        $i3 = <com.android.internal.telephony.SmsNumberUtils: int MAX_COUNTRY_CODES_LENGTH>;

        if i10 >= $i3 goto label3;

        $i8 = i10 + 1;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i8);

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        r8[i10] = $i9;

        i10 = i10 + 1;

        goto label2;

     label3:
        i11 = 0;

     label4:
        $i4 = lengthof r1;

        if i11 >= $i4 goto label9;

        i0 = r1[i11];

        i12 = 0;

     label5:
        $i5 = <com.android.internal.telephony.SmsNumberUtils: int MAX_COUNTRY_CODES_LENGTH>;

        if i12 >= $i5 goto label8;

        $i6 = r8[i12];

        if i0 != $i6 goto label7;

        $z0 = <com.android.internal.telephony.SmsNumberUtils: boolean DBG>;

        if $z0 == 0 goto label6;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Country code = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SmsNumberUtils", $r5);

     label6:
        return i0;

     label7:
        i12 = i12 + 1;

        goto label5;

     label8:
        i11 = i11 + 1;

        goto label4;

     label9:
        return -1;
    }

    private static int getNetworkType(android.telephony.TelephonyManager)
    {
        int i1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r0;
        java.lang.String $r3;
        android.telephony.TelephonyManager r4;
        byte b3;

        r4 := @parameter0: android.telephony.TelephonyManager;

        i1 = virtualinvoke r4.<android.telephony.TelephonyManager: int getPhoneType()>();

        if i1 != 1 goto label1;

        b3 = 0;

        goto label4;

     label1:
        if i1 != 2 goto label3;

        $z1 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: boolean isInternationalRoaming(android.telephony.TelephonyManager)>(r4);

        if $z1 == 0 goto label2;

        b3 = 2;

        goto label4;

     label2:
        b3 = 1;

        goto label4;

     label3:
        b3 = -1;

        $z0 = <com.android.internal.telephony.SmsNumberUtils: boolean DBG>;

        if $z0 == 0 goto label4;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("warning! unknown mPhoneType value=");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SmsNumberUtils", $r3);

        b3 = -1;

     label4:
        return b3;
    }

    private static java.lang.String getNumberPlanType(int)
    {
        int i0;
        java.lang.StringBuilder $r0;
        java.lang.String r6;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number Plan type (");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        if i0 != 1 goto label01;

        r6 = "NP_NANP_LOCAL";

        goto label12;

     label01:
        if i0 != 2 goto label02;

        r6 = "NP_NANP_AREA_LOCAL";

        goto label12;

     label02:
        if i0 != 3 goto label03;

        r6 = "NP_NANP_NDD_AREA_LOCAL";

        goto label12;

     label03:
        if i0 != 4 goto label04;

        r6 = "NP_NANP_NBPCD_CC_AREA_LOCAL";

        goto label12;

     label04:
        if i0 != 5 goto label05;

        r6 = "NP_NANP_LOCALIDD_CC_AREA_LOCAL";

        goto label12;

     label05:
        if i0 != 6 goto label06;

        r6 = "NP_NANP_NBPCD_HOMEIDD_CC_AREA_LOCAL";

        goto label12;

     label06:
        if i0 != 100 goto label07;

        r6 = "NP_NBPCD_HOMEIDD_CC_AREA_LOCAL";

        goto label12;

     label07:
        if i0 != 101 goto label08;

        r6 = "NP_HOMEIDD_CC_AREA_LOCAL";

        goto label12;

     label08:
        if i0 != 102 goto label09;

        r6 = "NP_NBPCD_CC_AREA_LOCAL";

        goto label12;

     label09:
        if i0 != 103 goto label10;

        r6 = "NP_LOCALIDD_CC_AREA_LOCAL";

        goto label12;

     label10:
        if i0 != 104 goto label11;

        r6 = "NP_CC_AREA_LOCAL";

        goto label12;

     label11:
        r6 = "Unknown type";

     label12:
        return r6;
    }

    private static boolean inExceptionListForNpCcAreaLocal(com.android.internal.telephony.SmsNumberUtils$NumberEntry)
    {
        com.android.internal.telephony.SmsNumberUtils$NumberEntry r0;
        int i0, $i1;
        java.lang.String $r1;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.SmsNumberUtils$NumberEntry;

        i0 = r0.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: int countryCode>;

        $r1 = r0.<com.android.internal.telephony.SmsNumberUtils$NumberEntry: java.lang.String number>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 12 goto label2;

        if i0 == 7 goto label1;

        if i0 == 20 goto label1;

        if i0 == 65 goto label1;

        if i0 != 90 goto label2;

     label1:
        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    private static boolean isInternationalRoaming(android.telephony.TelephonyManager)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4, r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8;
        android.telephony.TelephonyManager r5;

        r5 := @parameter0: android.telephony.TelephonyManager;

        r0 = virtualinvoke r5.<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>();

        r6 = virtualinvoke r5.<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z5 != 0 goto label1;

        $z6 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z6 != 0 goto label1;

        z7 = 1;

        goto label2;

     label1:
        z7 = 0;

     label2:
        z8 = z7;

        if z7 == 0 goto label4;

        $r1 = "us";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label3;

        $r4 = "vi";

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        z8 = 1 ^ $z4;

        goto label4;

     label3:
        z8 = z7;

        $r2 = "vi";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z2 == 0 goto label4;

        $r3 = "us";

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        z8 = 1 ^ $z3;

     label4:
        return z8;
    }

    private static boolean isNANP(java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0, $i1, $i5, i6;
        char $c2, $c3, $c4;
        boolean $z0, $z1, $z2, $z3, z5;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 10 goto label1;

        z5 = 0;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i5 != 11 goto label5;

        z5 = 0;

        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("1");

        if $z3 == 0 goto label5;

     label1:
        r1 = r0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 11 goto label2;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

     label2:
        z5 = 0;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: boolean isTwoToNine(char)>($c2);

        if $z0 == 0 goto label5;

        z5 = 0;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(3);

        $z1 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: boolean isTwoToNine(char)>($c3);

        if $z1 == 0 goto label5;

        i6 = 1;

     label3:
        z5 = 1;

        if i6 >= 10 goto label5;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isISODigit(char)>($c4);

        if $z2 != 0 goto label4;

        z5 = 0;

        goto label5;

     label4:
        i6 = i6 + 1;

        goto label3;

     label5:
        return z5;
    }

    private static boolean isTwoToNine(char)
    {
        char c0;

        c0 := @parameter0: char;

        if c0 < 50 goto label1;

        if c0 > 57 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean needToConvert(android.content.Context, int)
    {
        int i0;
        long l1;
        boolean z0;
        java.lang.Object $r0;
        java.lang.Throwable $r1;
        android.content.Context r2;
        android.telephony.CarrierConfigManager r3;
        android.os.PersistableBundle r4;

        r2 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r0 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        r3 = (android.telephony.CarrierConfigManager) $r0;

     label2:
        if r3 == null goto label7;

     label3:
        r4 = virtualinvoke r3.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>(i0);

     label4:
        if r4 == null goto label7;

     label5:
        z0 = virtualinvoke r4.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("sms_requires_destination_number_conversion_bool");

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label8:
        $r1 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    private static java.lang.String pii(java.lang.String, java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String r1, $r5, $r8, r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        byte[] $r4;

        r9 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        if r0 == null goto label2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>(r9, 2);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        $r5 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: java.lang.String secureHash(byte[])>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label2:
        return r1;
    }

    private static java.lang.String secureHash(byte[])
    {
        java.security.MessageDigest r0;
        boolean $z0;
        byte[] $r1, r4;
        java.lang.String $r2;
        java.lang.Throwable $r3;

        r4 := @parameter0: byte[];

        $z0 = <com.android.internal.telephony.util.TelephonyUtils: boolean IS_USER>;

        if $z0 == 0 goto label1;

        return "****";

     label1:
        r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

     label2:
        $r1 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest(byte[])>(r4);

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r1, 11);

        return $r2;

     label3:
        $r3 := @caughtexception;

        return "####";

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
}
