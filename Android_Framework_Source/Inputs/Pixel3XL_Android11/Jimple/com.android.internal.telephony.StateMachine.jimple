public class com.android.internal.telephony.StateMachine extends java.lang.Object
{
    public static final boolean HANDLED;
    public static final boolean NOT_HANDLED;
    private static final int SM_INIT_CMD;
    private static final int SM_QUIT_CMD;
    private java.lang.String mName;
    private com.android.internal.telephony.StateMachine$SmHandler mSmHandler;
    private android.os.HandlerThread mSmThread;

    protected void <init>(java.lang.String)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1;
        android.os.HandlerThread $r3, $r4;
        android.os.Looper $r5;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.HandlerThread;

        specialinvoke $r3.<android.os.HandlerThread: void <init>(java.lang.String)>(r1);

        r0.<com.android.internal.telephony.StateMachine: android.os.HandlerThread mSmThread> = $r3;

        virtualinvoke $r3.<android.os.HandlerThread: void start()>();

        $r4 = r0.<com.android.internal.telephony.StateMachine: android.os.HandlerThread mSmThread>;

        $r5 = virtualinvoke $r4.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke r0.<com.android.internal.telephony.StateMachine: void initStateMachine(java.lang.String,android.os.Looper)>(r1, $r5);

        return;
    }

    protected void <init>(java.lang.String, android.os.Handler)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1;
        android.os.Handler r2;
        android.os.Looper $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r0.<com.android.internal.telephony.StateMachine: void initStateMachine(java.lang.String,android.os.Looper)>(r1, $r3);

        return;
    }

    protected void <init>(java.lang.String, android.os.Looper)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1;
        android.os.Looper r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.android.internal.telephony.StateMachine: void initStateMachine(java.lang.String,android.os.Looper)>(r1, r2);

        return;
    }

    static android.os.HandlerThread access$400(com.android.internal.telephony.StateMachine)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.HandlerThread $r1;

        r0 := @parameter0: com.android.internal.telephony.StateMachine;

        $r1 = r0.<com.android.internal.telephony.StateMachine: android.os.HandlerThread mSmThread>;

        return $r1;
    }

    static android.os.HandlerThread access$402(com.android.internal.telephony.StateMachine, android.os.HandlerThread)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.HandlerThread r1;

        r0 := @parameter0: com.android.internal.telephony.StateMachine;

        r1 := @parameter1: android.os.HandlerThread;

        r0.<com.android.internal.telephony.StateMachine: android.os.HandlerThread mSmThread> = r1;

        return r1;
    }

    static com.android.internal.telephony.StateMachine$SmHandler access$502(com.android.internal.telephony.StateMachine, com.android.internal.telephony.StateMachine$SmHandler)
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler r1;

        r0 := @parameter0: com.android.internal.telephony.StateMachine;

        r1 := @parameter1: com.android.internal.telephony.StateMachine$SmHandler;

        r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler> = r1;

        return r1;
    }

    static java.lang.String access$700(com.android.internal.telephony.StateMachine)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.internal.telephony.StateMachine;

        $r1 = r0.<com.android.internal.telephony.StateMachine: java.lang.String mName>;

        return $r1;
    }

    private void initStateMachine(java.lang.String, android.os.Looper)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1;
        android.os.Looper r2;
        com.android.internal.telephony.StateMachine$SmHandler $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.internal.telephony.StateMachine: java.lang.String mName> = r1;

        $r3 = new com.android.internal.telephony.StateMachine$SmHandler;

        specialinvoke $r3.<com.android.internal.telephony.StateMachine$SmHandler: void <init>(android.os.Looper,com.android.internal.telephony.StateMachine,com.android.internal.telephony.StateMachine$1)>(r2, r0, null);

        r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler> = $r3;

        return;
    }

    public void addLogRec(java.lang.String)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1;
        com.android.internal.telephony.StateMachine$SmHandler r2;
        com.android.internal.telephony.StateMachine$LogRecords $r3;
        android.os.Message $r4;
        com.android.internal.telephony.IState $r5;
        com.android.internal.telephony.StateMachine$SmHandler$StateInfo[] $r6;
        int $i0;
        com.android.internal.telephony.StateMachine$SmHandler$StateInfo $r7;
        com.android.internal.telephony.State $r8, $r9;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$LogRecords access$1800(com.android.internal.telephony.StateMachine$SmHandler)>(r2);

        $r4 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: android.os.Message access$1200(com.android.internal.telephony.StateMachine$SmHandler)>(r2);

        $r5 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.IState access$1300(com.android.internal.telephony.StateMachine$SmHandler)>(r2);

        $r6 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$SmHandler$StateInfo[] access$2100(com.android.internal.telephony.StateMachine$SmHandler)>(r2);

        $i0 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: int access$2200(com.android.internal.telephony.StateMachine$SmHandler)>(r2);

        $r7 = $r6[$i0];

        $r8 = $r7.<com.android.internal.telephony.StateMachine$SmHandler$StateInfo: com.android.internal.telephony.State state>;

        $r9 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.State access$2300(com.android.internal.telephony.StateMachine$SmHandler)>(r2);

        virtualinvoke $r3.<com.android.internal.telephony.StateMachine$LogRecords: void add(com.android.internal.telephony.StateMachine,android.os.Message,java.lang.String,com.android.internal.telephony.IState,com.android.internal.telephony.IState,com.android.internal.telephony.IState)>(r0, $r4, r1, $r5, $r8, $r9);

        return;
    }

    public final void addState(com.android.internal.telephony.State)
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.State r1;
        com.android.internal.telephony.StateMachine$SmHandler $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: com.android.internal.telephony.State;

        $r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$SmHandler$StateInfo access$900(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.State,com.android.internal.telephony.State)>($r2, r1, null);

        return;
    }

    public final void addState(com.android.internal.telephony.State, com.android.internal.telephony.State)
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.State r1, r2;
        com.android.internal.telephony.StateMachine$SmHandler $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: com.android.internal.telephony.State;

        r2 := @parameter1: com.android.internal.telephony.State;

        $r3 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$SmHandler$StateInfo access$900(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.State,com.android.internal.telephony.State)>($r3, r1, r2);

        return;
    }

    public final java.util.Collection copyLogRecs()
    {
        com.android.internal.telephony.StateMachine r0;
        java.util.Vector $r2, $r4;
        com.android.internal.telephony.StateMachine$LogRecords $r3;
        boolean $z0;
        java.lang.Object $r5;
        com.android.internal.telephony.StateMachine$LogRec $r6;
        com.android.internal.telephony.StateMachine$SmHandler r7;
        java.util.Iterator r8;

        r0 := @this: com.android.internal.telephony.StateMachine;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r7 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r7 == null goto label2;

        $r3 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$LogRecords access$1800(com.android.internal.telephony.StateMachine$SmHandler)>(r7);

        $r4 = staticinvoke <com.android.internal.telephony.StateMachine$LogRecords: java.util.Vector access$2000(com.android.internal.telephony.StateMachine$LogRecords)>($r3);

        r8 = virtualinvoke $r4.<java.util.Vector: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.internal.telephony.StateMachine$LogRec) $r5;

        virtualinvoke $r2.<java.util.Vector: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r2;
    }

    public final void deferMessage(android.os.Message)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.Message r1;
        com.android.internal.telephony.StateMachine$SmHandler $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: void access$1600(com.android.internal.telephony.StateMachine$SmHandler,android.os.Message)>($r2, r1);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.StateMachine r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.lang.StringBuilder $r3, $r8, $r12, $r18;
        java.lang.String $r4, $r7, $r11, $r15, $r17, $r23, $r25;
        int $i0, $i1, i2;
        com.android.internal.telephony.IState $r14;
        com.android.internal.telephony.StateMachine$LogRec $r22;
        java.io.FileDescriptor r26;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r26 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total records=");

        $i0 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: int getLogRecCount()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        i2 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: int getLogRecSize()>();

        if i2 >= $i1 goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rec[");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r22 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$LogRec getLogRec(int)>(i2);

        $r23 = virtualinvoke $r22.<com.android.internal.telephony.StateMachine$LogRec: java.lang.String toString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

        i2 = i2 + 1;

        goto label1;

     label2:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("curState=");

        $r14 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.IState getCurrentState()>();

        $r15 = interfaceinvoke $r14.<com.android.internal.telephony.IState: java.lang.String getName()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        return;
    }

    public final android.os.Message getCurrentMessage()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: android.os.Message access$1200(com.android.internal.telephony.StateMachine$SmHandler)>(r1);

        return $r2;
    }

    public final com.android.internal.telephony.IState getCurrentState()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        com.android.internal.telephony.IState $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.IState access$1300(com.android.internal.telephony.StateMachine$SmHandler)>(r1);

        return $r2;
    }

    public final android.os.Handler getHandler()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler $r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        $r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        return $r1;
    }

    public final com.android.internal.telephony.StateMachine$LogRec getLogRec(int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        com.android.internal.telephony.StateMachine$LogRecords $r2;
        com.android.internal.telephony.StateMachine$LogRec $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$LogRecords access$1800(com.android.internal.telephony.StateMachine$SmHandler)>(r1);

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.StateMachine$LogRecords: com.android.internal.telephony.StateMachine$LogRec get(int)>(i0);

        return $r3;
    }

    public final int getLogRecCount()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        com.android.internal.telephony.StateMachine$LogRecords $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$LogRecords access$1800(com.android.internal.telephony.StateMachine$SmHandler)>(r1);

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.StateMachine$LogRecords: int count()>();

        return $i0;
    }

    public final int getLogRecMaxSize()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        com.android.internal.telephony.StateMachine$LogRecords $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$LogRecords access$1800(com.android.internal.telephony.StateMachine$SmHandler)>(r1);

        $i0 = staticinvoke <com.android.internal.telephony.StateMachine$LogRecords: int access$1900(com.android.internal.telephony.StateMachine$LogRecords)>($r2);

        return $i0;
    }

    public final int getLogRecSize()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        com.android.internal.telephony.StateMachine$LogRecords $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$LogRecords access$1800(com.android.internal.telephony.StateMachine$SmHandler)>(r1);

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.StateMachine$LogRecords: int size()>();

        return $i0;
    }

    protected java.lang.String getLogRecString(android.os.Message)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: android.os.Message;

        return "";
    }

    public final java.lang.String getName()
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        $r1 = r0.<com.android.internal.telephony.StateMachine: java.lang.String mName>;

        return $r1;
    }

    protected java.lang.String getWhatToString(int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        return null;
    }

    protected void haltedProcessMessage(android.os.Message)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: android.os.Message;

        return;
    }

    protected final boolean hasDeferredMessages(int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, $i1;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.os.Message $r3;
        com.android.internal.telephony.StateMachine$SmHandler r4;
        java.util.Iterator r5;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        r4 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r4 != null goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: java.util.ArrayList access$2400(com.android.internal.telephony.StateMachine$SmHandler)>(r4);

        r5 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.os.Message) $r2;

        $i1 = $r3.<android.os.Message: int what>;

        if $i1 != i0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    protected final boolean hasMessages(int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.internal.telephony.StateMachine$SmHandler: boolean hasMessages(int)>(i0);

        return $z0;
    }

    public boolean isDbg()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: boolean access$2800(com.android.internal.telephony.StateMachine$SmHandler)>(r1);

        return $z0;
    }

    protected final boolean isQuit(android.os.Message)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.Message r1;
        com.android.internal.telephony.StateMachine$SmHandler r2;
        boolean $z0, z1;
        int $i0;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: android.os.Message;

        r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r2 != null goto label3;

        $i0 = r1.<android.os.Message: int what>;

        if $i0 != -1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        $z0 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: boolean access$2500(com.android.internal.telephony.StateMachine$SmHandler,android.os.Message)>(r2, r1);

        return $z0;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.StateMachine: java.lang.String mName>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    protected void logAndAddLogRec(java.lang.String)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.internal.telephony.StateMachine: void addLogRec(java.lang.String)>(r1);

        virtualinvoke r0.<com.android.internal.telephony.StateMachine: void log(java.lang.String)>(r1);

        return;
    }

    protected void logd(java.lang.String)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.StateMachine: java.lang.String mName>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    protected void loge(java.lang.String)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.StateMachine: java.lang.String mName>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    protected void loge(java.lang.String, java.lang.Throwable)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1, $r3;
        java.lang.Throwable r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = r0.<com.android.internal.telephony.StateMachine: java.lang.String mName>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, r1, r2);

        return;
    }

    protected void logi(java.lang.String)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.StateMachine: java.lang.String mName>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    protected void logv(java.lang.String)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.StateMachine: java.lang.String mName>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    protected void logw(java.lang.String)
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.StateMachine: java.lang.String mName>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    public final android.os.Message obtainMessage()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        $r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler)>($r1);

        return $r2;
    }

    public final android.os.Message obtainMessage(int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        com.android.internal.telephony.StateMachine$SmHandler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r1, i0);

        return $r2;
    }

    public final android.os.Message obtainMessage(int, int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1;
        com.android.internal.telephony.StateMachine$SmHandler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>($r1, i0, i1, 0);

        return $r2;
    }

    public final android.os.Message obtainMessage(int, int, int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1, i2;
        com.android.internal.telephony.StateMachine$SmHandler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>($r1, i0, i1, i2);

        return $r2;
    }

    public final android.os.Message obtainMessage(int, int, int, java.lang.Object)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1, i2;
        java.lang.Object r1;
        com.android.internal.telephony.StateMachine$SmHandler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        $r3 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>($r2, i0, i1, i2, r1);

        return $r3;
    }

    public final android.os.Message obtainMessage(int, java.lang.Object)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.StateMachine$SmHandler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        $r3 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r2, i0, r1);

        return $r3;
    }

    protected void onHalting()
    {
        com.android.internal.telephony.StateMachine r0;

        r0 := @this: com.android.internal.telephony.StateMachine;

        return;
    }

    protected void onPostHandleMessage(android.os.Message)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: android.os.Message;

        return;
    }

    protected void onPreHandleMessage(android.os.Message)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: android.os.Message;

        return;
    }

    protected void onQuitting()
    {
        com.android.internal.telephony.StateMachine r0;

        r0 := @this: com.android.internal.telephony.StateMachine;

        return;
    }

    public final void quit()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: void access$2600(com.android.internal.telephony.StateMachine$SmHandler)>(r1);

        return;
    }

    public final void quitNow()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: void access$2700(com.android.internal.telephony.StateMachine$SmHandler)>(r1);

        return;
    }

    protected boolean recordLogRec(android.os.Message)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: android.os.Message;

        return 1;
    }

    protected final void removeDeferredMessages(int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, $i1;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.os.Message $r3;
        com.android.internal.telephony.StateMachine$SmHandler r4;
        java.util.Iterator r5;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        r4 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r4 != null goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: java.util.ArrayList access$2400(com.android.internal.telephony.StateMachine$SmHandler)>(r4);

        r5 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.os.Message) $r2;

        $i1 = $r3.<android.os.Message: int what>;

        if $i1 != i0 goto label3;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

     label3:
        goto label2;

     label4:
        return;
    }

    protected final void removeMessages(int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        com.android.internal.telephony.StateMachine$SmHandler r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.internal.telephony.StateMachine$SmHandler: void removeMessages(int)>(i0);

        return;
    }

    public final void removeState(com.android.internal.telephony.State)
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.State r1;
        com.android.internal.telephony.StateMachine$SmHandler $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: com.android.internal.telephony.State;

        $r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: void access$1000(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.State)>($r2, r1);

        return;
    }

    public void sendMessage(int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int)>(i0);

        virtualinvoke r1.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    public void sendMessage(int, int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,int)>(i0, i1);

        virtualinvoke r1.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    public void sendMessage(int, int, int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1, i2;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,int,int)>(i0, i1, i2);

        virtualinvoke r1.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    public void sendMessage(int, int, int, java.lang.Object)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1, i2;
        java.lang.Object r1;
        com.android.internal.telephony.StateMachine$SmHandler r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, r1);

        virtualinvoke r2.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    public void sendMessage(int, java.lang.Object)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.StateMachine$SmHandler r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,java.lang.Object)>(i0, r1);

        virtualinvoke r2.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    public void sendMessage(android.os.Message)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.Message r1;
        com.android.internal.telephony.StateMachine$SmHandler r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: android.os.Message;

        r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    protected final void sendMessageAtFrontOfQueue(int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int)>(i0);

        virtualinvoke r1.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageAtFrontOfQueue(android.os.Message)>($r2);

        return;
    }

    protected final void sendMessageAtFrontOfQueue(int, int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,int)>(i0, i1);

        virtualinvoke r1.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageAtFrontOfQueue(android.os.Message)>($r2);

        return;
    }

    protected final void sendMessageAtFrontOfQueue(int, int, int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1, i2;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,int,int)>(i0, i1, i2);

        virtualinvoke r1.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageAtFrontOfQueue(android.os.Message)>($r2);

        return;
    }

    protected final void sendMessageAtFrontOfQueue(int, int, int, java.lang.Object)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1, i2;
        java.lang.Object r1;
        com.android.internal.telephony.StateMachine$SmHandler r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, r1);

        virtualinvoke r2.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageAtFrontOfQueue(android.os.Message)>($r3);

        return;
    }

    protected final void sendMessageAtFrontOfQueue(int, java.lang.Object)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.StateMachine$SmHandler r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,java.lang.Object)>(i0, r1);

        virtualinvoke r2.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageAtFrontOfQueue(android.os.Message)>($r3);

        return;
    }

    protected final void sendMessageAtFrontOfQueue(android.os.Message)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.Message r1;
        com.android.internal.telephony.StateMachine$SmHandler r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: android.os.Message;

        r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageAtFrontOfQueue(android.os.Message)>(r1);

        return;
    }

    public void sendMessageDelayed(int, int, int, long)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1, i2;
        long l3;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,int,int)>(i0, i1, i2);

        virtualinvoke r1.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageDelayed(android.os.Message,long)>($r2, l3);

        return;
    }

    public void sendMessageDelayed(int, int, int, java.lang.Object, long)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1, i2;
        java.lang.Object r1;
        long l3;
        com.android.internal.telephony.StateMachine$SmHandler r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        l3 := @parameter4: long;

        r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, r1);

        virtualinvoke r2.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageDelayed(android.os.Message,long)>($r3, l3);

        return;
    }

    public void sendMessageDelayed(int, int, long)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0, i1;
        long l2;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,int)>(i0, i1);

        virtualinvoke r1.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageDelayed(android.os.Message,long)>($r2, l2);

        return;
    }

    public void sendMessageDelayed(int, long)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        long l1;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int)>(i0);

        virtualinvoke r1.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageDelayed(android.os.Message,long)>($r2, l1);

        return;
    }

    public void sendMessageDelayed(int, java.lang.Object, long)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        java.lang.Object r1;
        long l1;
        com.android.internal.telephony.StateMachine$SmHandler r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        l1 := @parameter2: long;

        r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.StateMachine: android.os.Message obtainMessage(int,java.lang.Object)>(i0, r1);

        virtualinvoke r2.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageDelayed(android.os.Message,long)>($r3, l1);

        return;
    }

    public void sendMessageDelayed(android.os.Message, long)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.Message r1;
        long l0;
        com.android.internal.telephony.StateMachine$SmHandler r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: android.os.Message;

        l0 := @parameter1: long;

        r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<com.android.internal.telephony.StateMachine$SmHandler: boolean sendMessageDelayed(android.os.Message,long)>(r1, l0);

        return;
    }

    public void setDbg(boolean)
    {
        com.android.internal.telephony.StateMachine r0;
        boolean z0;
        com.android.internal.telephony.StateMachine$SmHandler r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: void access$2900(com.android.internal.telephony.StateMachine$SmHandler,boolean)>(r1, z0);

        return;
    }

    public final void setInitialState(com.android.internal.telephony.State)
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.State r1;
        com.android.internal.telephony.StateMachine$SmHandler $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: com.android.internal.telephony.State;

        $r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: void access$1100(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.State)>($r2, r1);

        return;
    }

    public final void setLogOnlyTransitions(boolean)
    {
        com.android.internal.telephony.StateMachine r0;
        boolean z0;
        com.android.internal.telephony.StateMachine$SmHandler $r1;
        com.android.internal.telephony.StateMachine$LogRecords $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        $r2 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$LogRecords access$1800(com.android.internal.telephony.StateMachine$SmHandler)>($r1);

        virtualinvoke $r2.<com.android.internal.telephony.StateMachine$LogRecords: void setLogOnlyTransitions(boolean)>(z0);

        return;
    }

    public final void setLogRecSize(int)
    {
        com.android.internal.telephony.StateMachine r0;
        int i0;
        com.android.internal.telephony.StateMachine$SmHandler $r1;
        com.android.internal.telephony.StateMachine$LogRecords $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        $r2 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$LogRecords access$1800(com.android.internal.telephony.StateMachine$SmHandler)>($r1);

        virtualinvoke $r2.<com.android.internal.telephony.StateMachine$LogRecords: void setSize(int)>(i0);

        return;
    }

    public void start()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler r1;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: void access$3000(com.android.internal.telephony.StateMachine$SmHandler)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.StateMachine r0;
        java.lang.String r1, $r2, $r5, $r11, r13, r15, r17;
        com.android.internal.telephony.StateMachine$SmHandler $r3;
        com.android.internal.telephony.IState $r4;
        java.lang.StringBuilder $r6;
        java.lang.RuntimeException $r12;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r13 = "(null)";

     label1:
        $r2 = r0.<com.android.internal.telephony.StateMachine: java.lang.String mName>;

        r15 = virtualinvoke $r2.<java.lang.String: java.lang.String toString()>();

     label2:
        r13 = r15;

     label3:
        $r3 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        $r4 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.IState access$1300(com.android.internal.telephony.StateMachine$SmHandler)>($r3);

        $r5 = interfaceinvoke $r4.<com.android.internal.telephony.IState: java.lang.String getName()>();

        r1 = virtualinvoke $r5.<java.lang.String: java.lang.String toString()>();

     label4:
        r13 = r15;

        r17 = r1;

        goto label6;

     label5:
        $r12 := @caughtexception;

        r17 = "(null)";

     label6:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

        catch java.lang.NullPointerException from label1 to label2 with label5;
        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label5;
        catch java.lang.NullPointerException from label3 to label4 with label5;
        catch java.lang.ArrayIndexOutOfBoundsException from label3 to label4 with label5;
    }

    public final void transitionTo(com.android.internal.telephony.IState)
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.IState r1;
        com.android.internal.telephony.StateMachine$SmHandler $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: com.android.internal.telephony.IState;

        $r2 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: void access$1400(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.IState)>($r2, r1);

        return;
    }

    public final void transitionToHaltingState()
    {
        com.android.internal.telephony.StateMachine r0;
        com.android.internal.telephony.StateMachine$SmHandler r1;
        com.android.internal.telephony.StateMachine$SmHandler$HaltingState $r2;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        $r2 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: com.android.internal.telephony.StateMachine$SmHandler$HaltingState access$1500(com.android.internal.telephony.StateMachine$SmHandler)>(r1);

        staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: void access$1400(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.IState)>(r1, $r2);

        return;
    }

    protected void unhandledMessage(android.os.Message)
    {
        com.android.internal.telephony.StateMachine r0;
        android.os.Message r1;
        com.android.internal.telephony.StateMachine$SmHandler $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        int $i0;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.StateMachine;

        r1 := @parameter0: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.StateMachine: com.android.internal.telephony.StateMachine$SmHandler mSmHandler>;

        $z0 = staticinvoke <com.android.internal.telephony.StateMachine$SmHandler: boolean access$1700(com.android.internal.telephony.StateMachine$SmHandler)>($r3);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - unhandledMessage: msg.what=");

        $i0 = r1.<android.os.Message: int what>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.StateMachine: void loge(java.lang.String)>($r7);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.StateMachine: int SM_QUIT_CMD> = -1;

        <com.android.internal.telephony.StateMachine: int SM_INIT_CMD> = -2;

        <com.android.internal.telephony.StateMachine: boolean NOT_HANDLED> = 0;

        <com.android.internal.telephony.StateMachine: boolean HANDLED> = 1;

        return;
    }
}
