public class com.android.internal.telephony.TelephonyDevController extends android.os.Handler
{
    private static final boolean DBG;
    private static final int EVENT_HARDWARE_CONFIG_CHANGED;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.Object mLock;
    private static java.util.ArrayList mModems;
    private static java.util.ArrayList mSims;
    private static android.os.Message sRilHardwareConfig;
    private static com.android.internal.telephony.TelephonyDevController sTelephonyDevController;

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.util.ArrayList $r1, $r2;

        <com.android.internal.telephony.TelephonyDevController: java.lang.String LOG_TAG> = "TDC";

        <com.android.internal.telephony.TelephonyDevController: int EVENT_HARDWARE_CONFIG_CHANGED> = 1;

        <com.android.internal.telephony.TelephonyDevController: boolean DBG> = 1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock> = $r0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims> = $r2;

        return;
    }

    private void <init>()
    {
        com.android.internal.telephony.TelephonyDevController r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        specialinvoke r0.<com.android.internal.telephony.TelephonyDevController: void initFromResource()>();

        $r1 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        virtualinvoke $r1.<java.util.ArrayList: void trimToSize()>();

        $r2 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        virtualinvoke $r2.<java.util.ArrayList: void trimToSize()>();

        return;
    }

    public static com.android.internal.telephony.TelephonyDevController create()
    {
        java.lang.Object r0;
        com.android.internal.telephony.TelephonyDevController $r1, r3;
        java.lang.Throwable $r2;
        java.lang.RuntimeException r4;

        r0 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        entermonitor r0;

     label1:
        $r1 = <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController>;

        if $r1 != null goto label3;

        r3 = new com.android.internal.telephony.TelephonyDevController;

        specialinvoke r3.<com.android.internal.telephony.TelephonyDevController: void <init>()>();

        <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController> = r3;

        exitmonitor r0;

     label2:
        return r3;

     label3:
        r4 = new java.lang.RuntimeException;

        specialinvoke r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("TelephonyDevController already created!?!");

        throw r4;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static com.android.internal.telephony.TelephonyDevController getInstance()
    {
        java.lang.Object r0;
        com.android.internal.telephony.TelephonyDevController $r1, r3;
        java.lang.Throwable $r2;
        java.lang.RuntimeException r4;

        r0 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        entermonitor r0;

     label1:
        $r1 = <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController>;

        if $r1 == null goto label3;

        r3 = <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController>;

        exitmonitor r0;

     label2:
        return r3;

     label3:
        r4 = new java.lang.RuntimeException;

        specialinvoke r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("TelephonyDevController not yet created!?!");

        throw r4;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static int getModemCount()
    {
        java.lang.Object r0;
        int i0;
        java.util.ArrayList $r1;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        java.lang.StringBuilder r6;

        r0 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        entermonitor r0;

     label1:
        $r1 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        r6 = new java.lang.StringBuilder;

        specialinvoke r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModemCount: ");

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r4);

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static void handleGetHardwareConfigChanged(android.os.AsyncResult)
    {
        java.util.List r0;
        java.lang.Throwable $r1;
        java.lang.Object $r2, $r3, $r4;
        int $i0, $i1, $i2, i3;
        java.util.ArrayList $r5, $r6;
        android.os.AsyncResult r7;
        com.android.internal.telephony.HardwareConfig r8;

        r7 := @parameter0: android.os.AsyncResult;

        $r1 = r7.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r1 != null goto label5;

        $r2 = r7.<android.os.AsyncResult: java.lang.Object result>;

        if $r2 == null goto label5;

        $r3 = r7.<android.os.AsyncResult: java.lang.Object result>;

        r0 = (java.util.List) $r3;

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i3 >= $i0 goto label4;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        r8 = (com.android.internal.telephony.HardwareConfig) $r4;

        if r8 == null goto label3;

        $i1 = r8.<com.android.internal.telephony.HardwareConfig: int type>;

        if $i1 != 0 goto label2;

        $r6 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void updateOrInsert(com.android.internal.telephony.HardwareConfig,java.util.ArrayList)>(r8, $r6);

        goto label3;

     label2:
        $i2 = r8.<com.android.internal.telephony.HardwareConfig: int type>;

        if $i2 != 1 goto label3;

        $r5 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void updateOrInsert(com.android.internal.telephony.HardwareConfig,java.util.ArrayList)>(r8, $r5);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        goto label6;

     label5:
        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>("handleGetHardwareConfigChanged - returned an error.");

     label6:
        return;
    }

    private void initFromResource()
    {
        com.android.internal.telephony.TelephonyDevController r0;
        java.lang.String[] r1;
        int i0, $i1, $i2, i3;
        android.content.res.Resources $r3;
        com.android.internal.telephony.HardwareConfig $r4;
        java.lang.String $r5;
        java.util.ArrayList $r6, $r7;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        $r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r1 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236082);

        if r1 == null goto label4;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        $r4 = new com.android.internal.telephony.HardwareConfig;

        $r5 = r1[i3];

        specialinvoke $r4.<com.android.internal.telephony.HardwareConfig: void <init>(java.lang.String)>($r5);

        $i1 = $r4.<com.android.internal.telephony.HardwareConfig: int type>;

        if $i1 != 0 goto label2;

        $r7 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void updateOrInsert(com.android.internal.telephony.HardwareConfig,java.util.ArrayList)>($r4, $r7);

        goto label3;

     label2:
        $i2 = $r4.<com.android.internal.telephony.HardwareConfig: int type>;

        if $i2 != 1 goto label3;

        $r6 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void updateOrInsert(com.android.internal.telephony.HardwareConfig,java.util.ArrayList)>($r4, $r6);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return;
    }

    private static void logd(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TDC", r0);

        return;
    }

    private static void loge(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("TDC", r0);

        return;
    }

    public static void registerRIL(com.android.internal.telephony.CommandsInterface)
    {
        com.android.internal.telephony.CommandsInterface r0;
        android.os.Message $r1, r4;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        android.os.AsyncResult r5;
        com.android.internal.telephony.TelephonyDevController $r6;

        r0 := @parameter0: com.android.internal.telephony.CommandsInterface;

        $r1 = <com.android.internal.telephony.TelephonyDevController: android.os.Message sRilHardwareConfig>;

        interfaceinvoke r0.<com.android.internal.telephony.CommandsInterface: void getHardwareConfig(android.os.Message)>($r1);

        r4 = <com.android.internal.telephony.TelephonyDevController: android.os.Message sRilHardwareConfig>;

        if r4 == null goto label1;

        $r2 = r4.<android.os.Message: java.lang.Object obj>;

        r5 = (android.os.AsyncResult) $r2;

        $r3 = r5.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r3 != null goto label1;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void handleGetHardwareConfigChanged(android.os.AsyncResult)>(r5);

     label1:
        $r6 = <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController>;

        interfaceinvoke r0.<com.android.internal.telephony.CommandsInterface: void registerForHardwareConfigChanged(android.os.Handler,int,java.lang.Object)>($r6, 1, null);

        return;
    }

    public static void unregisterRIL(com.android.internal.telephony.CommandsInterface)
    {
        com.android.internal.telephony.CommandsInterface r0;
        com.android.internal.telephony.TelephonyDevController $r1;

        r0 := @parameter0: com.android.internal.telephony.CommandsInterface;

        $r1 = <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController>;

        interfaceinvoke r0.<com.android.internal.telephony.CommandsInterface: void unregisterForHardwareConfigChanged(android.os.Handler)>($r1);

        return;
    }

    private static void updateOrInsert(com.android.internal.telephony.HardwareConfig, java.util.ArrayList)
    {
        java.util.ArrayList r0;
        java.lang.Object r1, $r6;
        int i0, $i1, i2;
        com.android.internal.telephony.HardwareConfig r2, r14;
        java.lang.String $r5, $r7, $r8, $r11;
        java.lang.Throwable $r13;
        java.lang.StringBuilder r15, r16;

        r14 := @parameter0: com.android.internal.telephony.HardwareConfig;

        r0 := @parameter1: java.util.ArrayList;

        r1 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label07;

     label04:
        $r6 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.internal.telephony.HardwareConfig) $r6;

        $r8 = r2.<com.android.internal.telephony.HardwareConfig: java.lang.String uuid>;

        $r7 = r14.<com.android.internal.telephony.HardwareConfig: java.lang.String uuid>;

        $i1 = virtualinvoke $r8.<java.lang.String: int compareTo(java.lang.String)>($r7);

        if $i1 != 0 goto label06;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateOrInsert: removing: ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r11);

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

     label05:
        goto label07;

     label06:
        i2 = i2 + 1;

        goto label03;

     label07:
        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateOrInsert: inserting: ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r5 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r5);

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

        exitmonitor r1;

     label08:
        return;

     label09:
        $r13 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public java.util.ArrayList getAllModems()
    {
        com.android.internal.telephony.TelephonyDevController r0;
        java.lang.Object r1, $r5;
        java.util.Iterator r2;
        java.util.ArrayList $r3, $r4, r8;
        boolean $z0, $z1;
        com.android.internal.telephony.HardwareConfig $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        r1 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r8 = new java.util.ArrayList;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        $r3 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>("getAllModems: empty list.");

     label02:
        goto label06;

     label03:
        $r4 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.internal.telephony.HardwareConfig) $r5;

        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label05:
        goto label04;

     label06:
        exitmonitor r1;

     label07:
        return r8;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public java.util.ArrayList getAllSims()
    {
        com.android.internal.telephony.TelephonyDevController r0;
        java.lang.Object r1, $r5;
        java.util.Iterator r2;
        java.util.ArrayList $r3, $r4, r8;
        boolean $z0, $z1;
        com.android.internal.telephony.HardwareConfig $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        r1 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r8 = new java.util.ArrayList;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        $r3 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>("getAllSims: empty list.");

     label02:
        goto label06;

     label03:
        $r4 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.internal.telephony.HardwareConfig) $r5;

        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label05:
        goto label04;

     label06:
        exitmonitor r1;

     label07:
        return r8;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public java.util.ArrayList getAllSimsForModem(int)
    {
        com.android.internal.telephony.TelephonyDevController r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r10;
        java.util.ArrayList r2, $r5, $r9;
        java.util.Iterator r3;
        com.android.internal.telephony.HardwareConfig r4, r21;
        boolean $z0, $z1, $z2;
        java.lang.String $r8, $r11, $r12, $r17;
        java.lang.Throwable $r18;
        java.lang.StringBuilder r19, r20;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        i0 := @parameter0: int;

        r1 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r5 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>("getAllSimsForModem: no registered sim device?!?");

        exitmonitor r1;

     label02:
        return null;

     label03:
        $i1 = staticinvoke <com.android.internal.telephony.TelephonyDevController: int getModemCount()>();

        if i0 <= $i1 goto label05;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAllSimsForModem: out-of-bounds access for modem device ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max: ");

        $i2 = staticinvoke <com.android.internal.telephony.TelephonyDevController: int getModemCount()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>($r17);

        exitmonitor r1;

     label04:
        return null;

     label05:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAllSimsForModem ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r8);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r21 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.HardwareConfig getModem(int)>(i0);

        $r9 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        r3 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.telephony.HardwareConfig) $r10;

        $r12 = r4.<com.android.internal.telephony.HardwareConfig: java.lang.String modemUuid>;

        $r11 = r21.<com.android.internal.telephony.HardwareConfig: java.lang.String uuid>;

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label07;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label07:
        goto label06;

     label08:
        exitmonitor r1;

     label09:
        return r2;

     label10:
        $r18 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public com.android.internal.telephony.HardwareConfig getModem(int)
    {
        com.android.internal.telephony.TelephonyDevController r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r7;
        java.util.ArrayList $r2, $r6;
        boolean $z0;
        java.lang.String $r5, $r12;
        java.lang.Throwable $r13;
        java.lang.StringBuilder r14, r15;
        com.android.internal.telephony.HardwareConfig r16;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        i0 := @parameter0: int;

        r1 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>("getModem: no registered modem device?!?");

        exitmonitor r1;

     label2:
        return null;

     label3:
        $i1 = staticinvoke <com.android.internal.telephony.TelephonyDevController: int getModemCount()>();

        if i0 <= $i1 goto label5;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModem: out-of-bounds access for modem device ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max: ");

        $i2 = staticinvoke <com.android.internal.telephony.TelephonyDevController: int getModemCount()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>($r12);

        exitmonitor r1;

     label4:
        return null;

     label5:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModem: ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r5);

        $r6 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r16 = (com.android.internal.telephony.HardwareConfig) $r7;

        exitmonitor r1;

     label6:
        return r16;

     label7:
        $r13 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public com.android.internal.telephony.HardwareConfig getModemForSim(int)
    {
        com.android.internal.telephony.TelephonyDevController r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r10;
        com.android.internal.telephony.HardwareConfig r2, r21;
        java.util.Iterator r3;
        java.util.ArrayList $r4, $r5, $r9;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r8, $r11, $r12, $r17;
        java.lang.Throwable $r18;
        java.lang.StringBuilder r19, r20;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        i0 := @parameter0: int;

        r1 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label11;

        $r5 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        $z1 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label03;

     label02:
        goto label11;

     label03:
        $i1 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: int getSimCount()>();

        if i0 <= $i1 goto label05;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModemForSim: out-of-bounds access for sim device ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max: ");

        $i2 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: int getSimCount()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>($r17);

        exitmonitor r1;

     label04:
        return null;

     label05:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModemForSim ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r8);

        r2 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.HardwareConfig getSim(int)>(i0);

        $r9 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        r3 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r21 = (com.android.internal.telephony.HardwareConfig) $r10;

        $r12 = r21.<com.android.internal.telephony.HardwareConfig: java.lang.String uuid>;

        $r11 = r2.<com.android.internal.telephony.HardwareConfig: java.lang.String modemUuid>;

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label08;

        exitmonitor r1;

     label07:
        return r21;

     label08:
        goto label06;

     label09:
        exitmonitor r1;

     label10:
        return null;

     label11:
        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>("getModemForSim: no registered modem/sim device?!?");

        exitmonitor r1;

     label12:
        return null;

     label13:
        $r18 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public com.android.internal.telephony.HardwareConfig getSim(int)
    {
        com.android.internal.telephony.TelephonyDevController r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r7;
        java.util.ArrayList $r2, $r6;
        boolean $z0;
        java.lang.String $r5, $r12;
        java.lang.Throwable $r13;
        java.lang.StringBuilder r14, r15;
        com.android.internal.telephony.HardwareConfig r16;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        i0 := @parameter0: int;

        r1 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>("getSim: no registered sim device?!?");

        exitmonitor r1;

     label2:
        return null;

     label3:
        $i1 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: int getSimCount()>();

        if i0 <= $i1 goto label5;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSim: out-of-bounds access for sim device ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max: ");

        $i2 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: int getSimCount()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>($r12);

        exitmonitor r1;

     label4:
        return null;

     label5:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSim: ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r5);

        $r6 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r16 = (com.android.internal.telephony.HardwareConfig) $r7;

        exitmonitor r1;

     label6:
        return r16;

     label7:
        $r13 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int getSimCount()
    {
        com.android.internal.telephony.TelephonyDevController r0;
        java.lang.Object r1;
        int i0;
        java.util.ArrayList $r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        java.lang.StringBuilder r7;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        r1 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSimCount: ");

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r5);

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.TelephonyDevController r0;
        android.os.Message r1;
        int $i0, $i1;
        java.lang.Object $r3;
        android.os.AsyncResult $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        if $i0 == 1 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage: Unknown Event ");

        $i1 = r1.<android.os.Message: int what>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>($r8);

        goto label2;

     label1:
        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>("handleMessage: received EVENT_HARDWARE_CONFIG_CHANGED");

        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        $r4 = (android.os.AsyncResult) $r3;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void handleGetHardwareConfigChanged(android.os.AsyncResult)>($r4);

     label2:
        return;
    }
}
