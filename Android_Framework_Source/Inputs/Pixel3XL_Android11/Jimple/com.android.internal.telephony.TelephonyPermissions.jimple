public final class com.android.internal.telephony.TelephonyPermissions extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String PROPERTY_DEVICE_IDENTIFIER_ACCESS_RESTRICTIONS_DISABLED;
    private static final java.util.Map sReportedDeviceIDPackages;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <com.android.internal.telephony.TelephonyPermissions: java.lang.String PROPERTY_DEVICE_IDENTIFIER_ACCESS_RESTRICTIONS_DISABLED> = "device_identifier_access_restrictions_disabled";

        <com.android.internal.telephony.TelephonyPermissions: java.lang.String LOG_TAG> = "TelephonyPermissions";

        <com.android.internal.telephony.TelephonyPermissions: boolean DBG> = 0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.internal.telephony.TelephonyPermissions: java.util.Map sReportedDeviceIDPackages> = $r0;

        return;
    }

    private void <init>()
    {
        com.android.internal.telephony.TelephonyPermissions r0;

        r0 := @this: com.android.internal.telephony.TelephonyPermissions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean checkCallingOrSelfReadDeviceIdentifiers(android.content.Context, int, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        int i0;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $z0 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkPrivilegedReadPermissionOrCarrierPrivilegePermission(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,boolean)>(r0, i0, r1, r2, r3, 1);

        return $z0;
    }

    public static boolean checkCallingOrSelfReadDeviceIdentifiers(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $z0 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkCallingOrSelfReadDeviceIdentifiers(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String)>(r0, -1, r1, r2, r3);

        return $z0;
    }

    public static boolean checkCallingOrSelfReadPhoneNumber(android.content.Context, int, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        int i0, $i1, $i2;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkReadPhoneNumber(android.content.Context,int,int,int,java.lang.String,java.lang.String,java.lang.String)>(r0, i0, $i1, $i2, r1, r2, r3);

        return $z0;
    }

    public static boolean checkCallingOrSelfReadPhoneState(android.content.Context, int, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        int i0, $i1, $i2;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkReadPhoneState(android.content.Context,int,int,int,java.lang.String,java.lang.String,java.lang.String)>(r0, i0, $i1, $i2, r1, r2, r3);

        return $z0;
    }

    public static boolean checkCallingOrSelfReadPhoneStateNoThrow(android.content.Context, int, java.lang.String, java.lang.String, java.lang.String)
    {
        int i0;
        java.lang.String r0, r1, r2;
        boolean z0;
        java.lang.Throwable $r3;
        android.content.Context r4;

        r4 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

     label1:
        z0 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkCallingOrSelfReadPhoneState(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String)>(r4, i0, r0, r1, r2);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public static boolean checkCallingOrSelfReadSubscriberIdentifiers(android.content.Context, int, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        int i0;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $z0 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkPrivilegedReadPermissionOrCarrierPrivilegePermission(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,boolean)>(r0, i0, r1, r2, r3, 0);

        return $z0;
    }

    private static boolean checkCarrierPrivilegeForAnySubId(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, i1, $i2, $i3, i4;
        int[] r1;
        java.lang.Object $r2;
        android.telephony.SubscriptionManager $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telephony_subscription_service");

        $r3 = (android.telephony.SubscriptionManager) $r2;

        r1 = virtualinvoke $r3.<android.telephony.SubscriptionManager: int[] getCompleteActiveSubscriptionIdList()>();

        i1 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        $i2 = r1[i4];

        $i3 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: int getCarrierPrivilegeStatus(android.content.Context,int,int)>(r0, $i2, i0);

        if $i3 != 1 goto label2;

        return 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean checkCarrierPrivilegeForSubId(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z0 == 0 goto label1;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: int getCarrierPrivilegeStatus(android.content.Context,int,int)>(r0, i0, $i1);

        if $i2 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean checkPrivilegedReadPermissionOrCarrierPrivilegePermission(android.content.Context, int, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        android.content.Context r0;
        int i0, i1, i2, $i3;
        java.lang.String r1, r2, r3;
        boolean z0, $z1, $z2, $z3;
        java.lang.Object $r4;
        android.permission.PermissionManager $r5;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $z1 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkCarrierPrivilegeForSubId(android.content.Context,int)>(r0, i0);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        if z0 == 0 goto label2;

        $z3 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkCarrierPrivilegeForAnySubId(android.content.Context,int)>(r0, i1);

        if $z3 == 0 goto label2;

        return 1;

     label2:
        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("permission");

        $r5 = (android.permission.PermissionManager) $r4;

        $i3 = virtualinvoke $r5.<android.permission.PermissionManager: int checkDeviceIdentifierAccess(java.lang.String,java.lang.String,java.lang.String,int,int)>(r1, r3, r2, i2, i1);

        if $i3 != 0 goto label3;

        return 1;

     label3:
        $z2 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean reportAccessDeniedToReadIdentifiers(android.content.Context,int,int,int,java.lang.String,java.lang.String)>(r0, i0, i2, i1, r1, r3);

        return $z2;
    }

    public static boolean checkReadCallLog(android.content.Context, int, int, int, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        int i0, i1, $i2, i3, i4;
        java.lang.String r1, r2;
        java.lang.Object $r3;
        android.app.AppOpsManager $r4;
        boolean $z0, z1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: java.lang.String;

        i4 = virtualinvoke r0.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.READ_CALL_LOG", i3, i1);

        z1 = 1;

        if i4 == 0 goto label2;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z0 == 0 goto label1;

        staticinvoke <com.android.internal.telephony.TelephonyPermissions: void enforceCarrierPrivilege(android.content.Context,int,int,java.lang.String)>(r0, i0, i1, "readCallLog");

        return 1;

     label1:
        return 0;

     label2:
        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r4 = (android.app.AppOpsManager) $r3;

        $i2 = virtualinvoke $r4.<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>("android:read_call_log", i1, r1, r2, null);

        if $i2 != 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    public static boolean checkReadPhoneNumber(android.content.Context, int, int, int, java.lang.String, java.lang.String, java.lang.String)
    {
        int i0, i1, i2, $i3, i4, $i5, i6, i7;
        java.lang.String r0, r1, r2, $r16;
        boolean z0, $z1, z2;
        android.content.pm.ApplicationInfo $r3;
        java.lang.Throwable $r4, $r17, $r20, $r21, $r22;
        java.lang.StringBuilder $r5;
        java.lang.SecurityException $r15;
        android.content.pm.PackageManager$NameNotFoundException $r18, $r19;
        android.content.Context r23;
        android.content.pm.PackageManager r24;
        android.os.UserHandle r25;
        java.lang.Object $r31;
        android.app.AppOpsManager r32;

        r23 := @parameter0: android.content.Context;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r0 := @parameter4: java.lang.String;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

     label01:
        r24 = virtualinvoke r23.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r25 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>($i3);

     label02:
        z2 = 0;

     label03:
        $r3 = virtualinvoke r24.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,android.os.UserHandle)>(r0, 0, r25);

        i2 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

     label04:
        if i2 > 29 goto label05;

        z2 = 1;

     label05:
        goto label09;

     label06:
        $r19 := @caughtexception;

        goto label08;

     label07:
        $r18 := @caughtexception;

     label08:
        z2 = 0;

     label09:
        if z2 == 0 goto label13;

     label10:
        z0 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkReadPhoneState(android.content.Context,int,int,int,java.lang.String,java.lang.String,java.lang.String)>(r23, i4, i0, i1, r0, r1, r2);

     label11:
        return z0;

     label12:
        $r21 := @caughtexception;

        goto label19;

     label13:
        virtualinvoke r23.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.READ_PRIVILEGED_PHONE_STATE", i0, i1, r2);

     label14:
        return 1;

     label15:
        $r17 := @caughtexception;

        $z1 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i4);

        if $z1 == 0 goto label19;

     label16:
        staticinvoke <com.android.internal.telephony.TelephonyPermissions: void enforceCarrierPrivilege(android.content.Context,int,int,java.lang.String)>(r23, i4, i1, r2);

     label17:
        return 1;

     label18:
        $r20 := @caughtexception;

        goto label19;

     label19:
        $r31 = virtualinvoke r23.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        r32 = (android.app.AppOpsManager) $r31;

        $i5 = virtualinvoke r32.<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>("android:write_sms", i1, r0, r1, null);

        if $i5 != 0 goto label20;

        return 1;

     label20:
        virtualinvoke r23.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.READ_SMS", i0, i1, r2);

        i6 = virtualinvoke r32.<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>("android:read_sms", i1, r0, r1, null);

     label21:
        if i6 != 0 goto label22;

        return 1;

     label22:
        goto label24;

     label23:
        $r22 := @caughtexception;

     label24:
        virtualinvoke r23.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.READ_PHONE_NUMBERS", i0, i1, r2);

        i7 = virtualinvoke r32.<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>("android:read_phone_numbers", i1, r0, r1, null);

     label25:
        if i7 != 0 goto label26;

        return 1;

     label26:
        goto label28;

     label27:
        $r4 := @caughtexception;

     label28:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Neither user ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nor current process has ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.READ_PHONE_STATE");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.READ_SMS");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", or ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.READ_PHONE_NUMBERS");

        $r15 = new java.lang.SecurityException;

        $r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw $r15;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label06;
        catch java.lang.SecurityException from label10 to label11 with label12;
        catch java.lang.SecurityException from label13 to label14 with label15;
        catch java.lang.SecurityException from label16 to label17 with label18;
        catch java.lang.SecurityException from label20 to label21 with label23;
        catch java.lang.SecurityException from label24 to label25 with label27;
    }

    public static boolean checkReadPhoneState(android.content.Context, int, int, int, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        int i0, i1, i2, $i3;
        java.lang.String r1, r2, r8;
        java.lang.Throwable $r4, $r5;
        boolean $z0, z1;
        java.lang.Object $r6;
        android.app.AppOpsManager $r7;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r8 := @parameter4: java.lang.String;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        z1 = 1;

     label1:
        virtualinvoke r0.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.READ_PRIVILEGED_PHONE_STATE", i1, i2, r2);

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

     label4:
        virtualinvoke r0.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.READ_PHONE_STATE", i1, i2, r2);

     label5:
        $r6 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r7 = (android.app.AppOpsManager) $r6;

        $i3 = virtualinvoke $r7.<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>("android:read_phone_state", i2, r8, r1, null);

        if $i3 != 0 goto label6;

        goto label7;

     label6:
        z1 = 0;

     label7:
        return z1;

     label8:
        $r4 := @caughtexception;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z0 == 0 goto label9;

        staticinvoke <com.android.internal.telephony.TelephonyPermissions: void enforceCarrierPrivilege(android.content.Context,int,int,java.lang.String)>(r0, i0, i2, r2);

        return 1;

     label9:
        throw $r4;

        catch java.lang.SecurityException from label1 to label2 with label3;
        catch java.lang.SecurityException from label4 to label5 with label8;
    }

    public static boolean checkReadPhoneStateOnAnyActiveSub(android.content.Context, int, int, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        int i0, i1, $i2;
        java.lang.String r1, r2, r8;
        java.lang.Throwable $r4, $r7;
        java.lang.Object $r5;
        android.app.AppOpsManager $r6;
        boolean $z0, z1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r8 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: java.lang.String;

        z1 = 1;

     label1:
        virtualinvoke r0.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.READ_PRIVILEGED_PHONE_STATE", i0, i1, r2);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

     label4:
        virtualinvoke r0.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.READ_PHONE_STATE", i0, i1, r2);

     label5:
        $r5 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r6 = (android.app.AppOpsManager) $r5;

        $i2 = virtualinvoke $r6.<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>("android:read_phone_state", i1, r8, r1, null);

        if $i2 != 0 goto label6;

        goto label7;

     label6:
        z1 = 0;

     label7:
        return z1;

     label8:
        $r7 := @caughtexception;

        $z0 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkCarrierPrivilegeForAnySubId(android.content.Context,int)>(r0, i1);

        return $z0;

        catch java.lang.SecurityException from label1 to label2 with label3;
        catch java.lang.SecurityException from label4 to label5 with label8;
    }

    public static void enforceCallingOrSelfCarrierPrivilege(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0, $i1;
        java.lang.String r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <com.android.internal.telephony.TelephonyPermissions: void enforceCarrierPrivilege(android.content.Context,int,int,java.lang.String)>(r0, i0, $i1, r1);

        return;
    }

    public static void enforceCallingOrSelfModifyPermissionOrCarrierPrivilege(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0, $i1;
        java.lang.String r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $i1 = virtualinvoke r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.MODIFY_PHONE_STATE");

        if $i1 != 0 goto label1;

        return;

     label1:
        staticinvoke <com.android.internal.telephony.TelephonyPermissions: void enforceCallingOrSelfCarrierPrivilege(android.content.Context,int,java.lang.String)>(r0, i0, r1);

        return;
    }

    private static void enforceCarrierPrivilege(android.content.Context, int, int, java.lang.String)
    {
        android.content.Context r0;
        int i0, i1, $i2;
        java.lang.String r1;
        java.lang.SecurityException $r2;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $i2 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: int getCarrierPrivilegeStatus(android.content.Context,int,int)>(r0, i0, i1);

        if $i2 != 1 goto label1;

        return;

     label1:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public static void enforceShellOnly(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, $r6;
        java.lang.StringBuilder $r2;
        java.lang.SecurityException $r5;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        if i0 == 2000 goto label2;

        if i0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Only shell user can call it");

        $r5 = new java.lang.SecurityException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        return;
    }

    public static void enforeceCallingOrSelfReadPhoneStatePermissionOrCarrierPrivilege(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0, $i1;
        java.lang.String r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $i1 = virtualinvoke r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_PHONE_STATE");

        if $i1 != 0 goto label1;

        return;

     label1:
        staticinvoke <com.android.internal.telephony.TelephonyPermissions: void enforceCallingOrSelfCarrierPrivilege(android.content.Context,int,java.lang.String)>(r0, i0, r1);

        return;
    }

    public static void enforeceCallingOrSelfReadPrecisePhoneStatePermissionOrCarrierPrivilege(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0, $i1, $i2;
        java.lang.String r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $i1 = virtualinvoke r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_PRIVILEGED_PHONE_STATE");

        if $i1 != 0 goto label1;

        return;

     label1:
        $i2 = virtualinvoke r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_PRECISE_PHONE_STATE");

        if $i2 != 0 goto label2;

        return;

     label2:
        staticinvoke <com.android.internal.telephony.TelephonyPermissions: void enforceCallingOrSelfCarrierPrivilege(android.content.Context,int,java.lang.String)>(r0, i0, r1);

        return;
    }

    public static void enforeceCallingOrSelfReadPrivilegedPhoneStatePermissionOrCarrierPrivilege(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0, $i1;
        java.lang.String r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $i1 = virtualinvoke r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_PRIVILEGED_PHONE_STATE");

        if $i1 != 0 goto label1;

        return;

     label1:
        staticinvoke <com.android.internal.telephony.TelephonyPermissions: void enforceCallingOrSelfCarrierPrivilege(android.content.Context,int,java.lang.String)>(r0, i0, r1);

        return;
    }

    private static int getCarrierPrivilegeStatus(android.content.Context, int, int)
    {
        int i0, i2, i3;
        long l1;
        java.lang.Object $r0;
        android.telephony.TelephonyManager $r1, $r2;
        java.lang.Throwable $r3;
        android.content.Context r4;

        r4 := @parameter0: android.content.Context;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 == 1000 goto label5;

        if i0 != 1001 goto label1;

        goto label5;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r0 = virtualinvoke r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r1 = (android.telephony.TelephonyManager) $r0;

        $r2 = virtualinvoke $r1.<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>(i2);

        i3 = virtualinvoke $r2.<android.telephony.TelephonyManager: int getCarrierPrivilegeStatus(int)>(i0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return i3;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

     label5:
        return 1;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private static boolean reportAccessDeniedToReadIdentifiers(android.content.Context, int, int, int, java.lang.String, java.lang.String)
    {
        int i0, i1, i2, $i4, $i5;
        java.lang.String r0, r1, $r28, $r36, $r40;
        boolean z0, $z2, $z3;
        android.content.pm.PackageManager $r3;
        android.os.UserHandle $r4;
        java.util.Map $r5, $r6, $r19, $r21;
        java.lang.Object $r7, $r22, r33;
        java.util.Set $r23, r46;
        android.content.pm.PackageManager$NameNotFoundException $r24;
        android.content.Context r29;
        android.content.pm.ApplicationInfo r30, r31;
        java.lang.StringBuilder r41, r43, r44;
        java.util.HashSet r42;
        java.lang.SecurityException r45;

        r29 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r0 := @parameter4: java.lang.String;

        r1 := @parameter5: java.lang.String;

        r30 = null;

     label01:
        $r3 = virtualinvoke r29.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i2);

        r31 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,android.os.UserHandle)>(r0, 0, $r4);

     label02:
        r30 = r31;

        goto label04;

     label03:
        $r24 := @caughtexception;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception caught obtaining package info for package ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r28 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyPermissions", $r28, $r24);

     label04:
        $r5 = <com.android.internal.telephony.TelephonyPermissions: java.util.Map sReportedDeviceIDPackages>;

        z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if z0 == 0 goto label05;

        $r21 = <com.android.internal.telephony.TelephonyPermissions: java.util.Map sReportedDeviceIDPackages>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r23 = (java.util.Set) $r22;

        $z3 = interfaceinvoke $r23.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z3 != 0 goto label08;

     label05:
        if z0 != 0 goto label06;

        r42 = new java.util.HashSet;

        specialinvoke r42.<java.util.HashSet: void <init>()>();

        r33 = r42;

        $r19 = <com.android.internal.telephony.TelephonyPermissions: java.util.Map sReportedDeviceIDPackages>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r42);

        goto label07;

     label06:
        $r6 = <com.android.internal.telephony.TelephonyPermissions: java.util.Map sReportedDeviceIDPackages>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r33 = (java.util.Set) $r7;

     label07:
        r46 = (java.util.Set) r33;

        interfaceinvoke r46.<java.util.Set: boolean add(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.telephony.TelephonyCommonStatsLog: void write(int,java.lang.String,java.lang.String,boolean,boolean)>(172, r0, r1, 0, 0);

     label08:
        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reportAccessDeniedToReadIdentifiers:");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TelephonyPermissions", $r36);

        if r30 == null goto label10;

        $i4 = r30.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i4 >= 29 goto label10;

        $i5 = virtualinvoke r29.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.READ_PHONE_STATE", i1, i2);

        if $i5 != 0 goto label09;

        return 0;

     label09:
        $z2 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkCarrierPrivilegeForSubId(android.content.Context,int)>(r29, i0);

        if $z2 == 0 goto label10;

        return 0;

     label10:
        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": The user ");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not meet the requirements to access device identifiers.");

        r45 = new java.lang.SecurityException;

        $r40 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r45.<java.lang.SecurityException: void <init>(java.lang.String)>($r40);

        throw r45;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label03;
    }
}
