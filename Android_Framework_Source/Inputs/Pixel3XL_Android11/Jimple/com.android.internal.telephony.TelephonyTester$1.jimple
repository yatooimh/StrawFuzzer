class com.android.internal.telephony.TelephonyTester$1 extends android.content.BroadcastReceiver
{
    final com.android.internal.telephony.TelephonyTester this$0;

    void <init>(com.android.internal.telephony.TelephonyTester)
    {
        com.android.internal.telephony.TelephonyTester$1 r0;
        com.android.internal.telephony.TelephonyTester r1;

        r0 := @this: com.android.internal.telephony.TelephonyTester$1;

        r1 := @parameter0: com.android.internal.telephony.TelephonyTester;

        r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.internal.telephony.TelephonyTester$1 r0;
        android.content.Intent r1;
        java.lang.String r2, $r6, $r9, $r12, $r15, $r28;
        java.lang.StringBuilder r3, r43;
        com.android.internal.telephony.TelephonyTester $r7, $r10, $r16, $r17, $r18, $r20, $r23, $r24, $r25, $r26, $r27, $r29, $r35;
        com.android.internal.telephony.Phone $r8, $r11, $r21, $r30, $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11;
        com.android.internal.telephony.ServiceStateTracker $r22, $r31, $r37;
        android.util.SparseArray $r32, $r38;
        java.lang.Object $r33, $r39;
        com.android.internal.telephony.RegistrantList $r34, $r40;
        android.os.BadParcelableException $r41;
        android.content.Context r42;

        r0 := @this: com.android.internal.telephony.TelephonyTester$1;

        r42 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.Intent;

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

     label01:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sIntentReceiver.onReceive: action=");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>($r6);

        $r7 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        $r8 = staticinvoke <com.android.internal.telephony.TelephonyTester: com.android.internal.telephony.Phone access$100(com.android.internal.telephony.TelephonyTester)>($r7);

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.Phone: java.lang.String getActionDetached()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label03;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("simulate detaching");

        $r35 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        $r36 = staticinvoke <com.android.internal.telephony.TelephonyTester: com.android.internal.telephony.Phone access$100(com.android.internal.telephony.TelephonyTester)>($r35);

        $r37 = virtualinvoke $r36.<com.android.internal.telephony.Phone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        $r38 = $r37.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mDetachedRegistrants>;

        $r39 = virtualinvoke $r38.<android.util.SparseArray: java.lang.Object get(int)>(1);

        $r40 = (com.android.internal.telephony.RegistrantList) $r39;

        virtualinvoke $r40.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label02:
        goto label22;

     label03:
        $r10 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        $r11 = staticinvoke <com.android.internal.telephony.TelephonyTester: com.android.internal.telephony.Phone access$100(com.android.internal.telephony.TelephonyTester)>($r10);

        $r12 = virtualinvoke $r11.<com.android.internal.telephony.Phone: java.lang.String getActionAttached()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label05;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("simulate attaching");

        $r29 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        $r30 = staticinvoke <com.android.internal.telephony.TelephonyTester: com.android.internal.telephony.Phone access$100(com.android.internal.telephony.TelephonyTester)>($r29);

        $r31 = virtualinvoke $r30.<com.android.internal.telephony.Phone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        $r32 = $r31.<com.android.internal.telephony.ServiceStateTracker: android.util.SparseArray mAttachedRegistrants>;

        $r33 = virtualinvoke $r32.<android.util.SparseArray: java.lang.Object get(int)>(1);

        $r34 = (com.android.internal.telephony.RegistrantList) $r33;

        virtualinvoke $r34.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label04:
        goto label22;

     label05:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.internal.telephony.TestConferenceEventPackage");

        if $z2 == 0 goto label07;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("inject simulated conference event package");

        $r27 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        $r28 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("filename");

        $z11 = virtualinvoke r1.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("bypassImsCall", 0);

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$200(com.android.internal.telephony.TelephonyTester,android.content.Context,java.lang.String,boolean)>($r27, r42, $r28, $z11);

     label06:
        goto label22;

     label07:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.internal.telephony.TestDialogEventPackage");

        if $z3 == 0 goto label09;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("handle test dialog event package intent");

        $r26 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$300(com.android.internal.telephony.TelephonyTester,android.content.Intent)>($r26, r1);

     label08:
        goto label22;

     label09:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.internal.telephony.TestSuppSrvcFail");

        if $z4 == 0 goto label11;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("handle test supp svc failed intent");

        $r25 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$400(com.android.internal.telephony.TelephonyTester,android.content.Intent)>($r25, r1);

     label10:
        goto label22;

     label11:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.internal.telephony.TestHandoverFail");

        if $z5 == 0 goto label13;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("handle handover fail test intent");

        $r24 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$500(com.android.internal.telephony.TelephonyTester)>($r24);

     label12:
        goto label22;

     label13:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.internal.telephony.TestSuppSrvcNotification");

        if $z6 == 0 goto label15;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("handle supp service notification test intent");

        $r23 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$600(com.android.internal.telephony.TelephonyTester,android.content.Intent)>($r23, r1);

     label14:
        goto label22;

     label15:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.internal.telephony.TestServiceState");

        if $z7 == 0 goto label17;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("handle test service state changed intent");

        $r18 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        staticinvoke <com.android.internal.telephony.TelephonyTester: android.content.Intent access$702(com.android.internal.telephony.TelephonyTester,android.content.Intent)>($r18, r1);

        $r20 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        $r21 = staticinvoke <com.android.internal.telephony.TelephonyTester: com.android.internal.telephony.Phone access$100(com.android.internal.telephony.TelephonyTester)>($r20);

        $r22 = virtualinvoke $r21.<com.android.internal.telephony.Phone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        virtualinvoke $r22.<com.android.internal.telephony.ServiceStateTracker: boolean sendEmptyMessage(int)>(2);

     label16:
        goto label22;

     label17:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.internal.telephony.TestImsECall");

        if $z8 == 0 goto label19;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("handle test IMS ecall intent");

        $r17 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        virtualinvoke $r17.<com.android.internal.telephony.TelephonyTester: void testImsECall()>();

     label18:
        goto label22;

     label19:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.internal.telephony.TestChangeNumber");

        if $z9 == 0 goto label21;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("handle test change number intent");

        $r16 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        virtualinvoke $r16.<com.android.internal.telephony.TelephonyTester: void testChangeNumber(android.content.Intent)>(r1);

     label20:
        goto label22;

     label21:
        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onReceive: unknown action=");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>($r15);

     label22:
        goto label24;

     label23:
        $r41 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.Throwable)>("TelephonyTester", $r41);

     label24:
        return;

        catch android.os.BadParcelableException from label01 to label02 with label23;
        catch android.os.BadParcelableException from label03 to label04 with label23;
        catch android.os.BadParcelableException from label05 to label06 with label23;
        catch android.os.BadParcelableException from label07 to label08 with label23;
        catch android.os.BadParcelableException from label09 to label10 with label23;
        catch android.os.BadParcelableException from label11 to label12 with label23;
        catch android.os.BadParcelableException from label13 to label14 with label23;
        catch android.os.BadParcelableException from label15 to label16 with label23;
        catch android.os.BadParcelableException from label17 to label18 with label23;
        catch android.os.BadParcelableException from label19 to label20 with label23;
        catch android.os.BadParcelableException from label21 to label22 with label23;
    }
}
