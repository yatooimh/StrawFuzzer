public class com.android.internal.telephony.VisualVoicemailSmsFilter extends java.lang.Object
{
    private static final com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter DEFAULT_PHONE_ACCOUNT_HANDLE_CONVERTER;
    private static final android.content.ComponentName PSTN_CONNECTION_SERVICE_COMPONENT;
    private static final java.lang.String TAG;
    private static final java.lang.String TELEPHONY_SERVICE_PACKAGE;
    private static java.util.Map sPatterns;
    private static com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter sPhoneAccountHandleConverter;

    static void <clinit>()
    {
        android.content.ComponentName $r1;
        com.android.internal.telephony.VisualVoicemailSmsFilter$1 $r2;

        <com.android.internal.telephony.VisualVoicemailSmsFilter: java.lang.String TELEPHONY_SERVICE_PACKAGE> = "com.android.phone";

        <com.android.internal.telephony.VisualVoicemailSmsFilter: java.lang.String TAG> = "VvmSmsFilter";

        $r1 = new android.content.ComponentName;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.phone", "com.android.services.telephony.TelephonyConnectionService");

        <com.android.internal.telephony.VisualVoicemailSmsFilter: android.content.ComponentName PSTN_CONNECTION_SERVICE_COMPONENT> = $r1;

        $r2 = new com.android.internal.telephony.VisualVoicemailSmsFilter$1;

        specialinvoke $r2.<com.android.internal.telephony.VisualVoicemailSmsFilter$1: void <init>()>();

        <com.android.internal.telephony.VisualVoicemailSmsFilter: com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter DEFAULT_PHONE_ACCOUNT_HANDLE_CONVERTER> = $r2;

        <com.android.internal.telephony.VisualVoicemailSmsFilter: com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter sPhoneAccountHandleConverter> = $r2;

        return;
    }

    public void <init>()
    {
        com.android.internal.telephony.VisualVoicemailSmsFilter r0;

        r0 := @this: com.android.internal.telephony.VisualVoicemailSmsFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.content.ComponentName access$000()
    {
        android.content.ComponentName $r0;

        $r0 = <com.android.internal.telephony.VisualVoicemailSmsFilter: android.content.ComponentName PSTN_CONNECTION_SERVICE_COMPONENT>;

        return $r0;
    }

    private static void buildPatternsMap(android.content.Context)
    {
        java.lang.String[] r0, $r5, $r7, r18;
        int i0, i1, i2, i3;
        java.lang.String r1, $r6, $r8, r17;
        java.util.Map $r2, $r9, $r10, $r14;
        android.util.ArrayMap $r3;
        android.content.res.Resources $r4;
        boolean $z0;
        java.lang.Object $r11;
        java.util.List $r12;
        java.util.ArrayList $r13;
        android.content.Context r16;
        java.util.regex.Pattern r19;

        r16 := @parameter0: android.content.Context;

        $r2 = <com.android.internal.telephony.VisualVoicemailSmsFilter: java.util.Map sPatterns>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        <com.android.internal.telephony.VisualVoicemailSmsFilter: java.util.Map sPatterns> = $r3;

        $r4 = virtualinvoke r16.<android.content.Context: android.content.res.Resources getResources()>();

        r0 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236093);

        i0 = lengthof r0;

        i2 = 0;

     label2:
        if i2 >= i0 goto label6;

        r17 = r0[i2];

        $r5 = virtualinvoke r17.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $r6 = $r5[0];

        r18 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r7 = virtualinvoke r17.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $r8 = $r7[1];

        r19 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r8);

        i1 = lengthof r18;

        i3 = 0;

     label3:
        if i3 >= i1 goto label5;

        r1 = r18[i3];

        $r9 = <com.android.internal.telephony.VisualVoicemailSmsFilter: java.util.Map sPatterns>;

        $z0 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label4;

        $r14 = <com.android.internal.telephony.VisualVoicemailSmsFilter: java.util.Map sPatterns>;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13);

     label4:
        $r10 = <com.android.internal.telephony.VisualVoicemailSmsFilter: java.util.Map sPatterns>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r12 = (java.util.List) $r11;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r19);

        i3 = i3 + 1;

        goto label3;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        return;
    }

    public static boolean filter(android.content.Context, byte[][], java.lang.String, int, int)
    {
        int i0, i1, $i3, $i4, $i6, $i7;
        android.telephony.VisualVoicemailSmsFilterSettings r0;
        android.telecom.PhoneAccountHandle r1;
        java.lang.String r2, $r11, $r16, $r17, r20, r23, r27;
        java.lang.Object $r3;
        android.telephony.TelephonyManager $r4;
        com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter $r5;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r6, $r30;
        android.telephony.SmsMessage $r7;
        java.lang.StringBuilder $r8, $r12;
        android.content.Context r18;
        byte[][] r19;
        com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage r21, r24;
        com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData r25, r26, r28;

        r18 := @parameter0: android.content.Context;

        r19 := @parameter1: byte[][];

        r20 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r3 = virtualinvoke r18.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r4 = (android.telephony.TelephonyManager) $r3;

        r0 = virtualinvoke $r4.<android.telephony.TelephonyManager: android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int)>(i1);

        if r0 != null goto label02;

        r21 = staticinvoke <com.android.internal.telephony.VisualVoicemailSmsFilter: com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage getFullMessage(byte[][],java.lang.String)>(r19, r20);

        if r21 == null goto label01;

        $r17 = r21.<com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage: java.lang.String fullMessageBody>;

        $z2 = staticinvoke <com.android.internal.telephony.VisualVoicemailSmsFilter: boolean messageBodyMatchesVvmPattern(android.content.Context,int,java.lang.String)>(r18, i1, $r17);

        if $z2 == 0 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VvmSmsFilter", "SMS matching VVM format received but the filter not been set yet");

        return 1;

     label01:
        return 0;

     label02:
        $r5 = <com.android.internal.telephony.VisualVoicemailSmsFilter: com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter sPhoneAccountHandleConverter>;

        r1 = interfaceinvoke $r5.<com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter: android.telecom.PhoneAccountHandle fromSubId(int)>(i1);

        if r1 != null goto label03;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to convert subId ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to PhoneAccountHandle");

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VvmSmsFilter", $r16);

        return 0;

     label03:
        r23 = r0.<android.telephony.VisualVoicemailSmsFilterSettings: java.lang.String clientPrefix>;

        r24 = staticinvoke <com.android.internal.telephony.VisualVoicemailSmsFilter: com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage getFullMessage(byte[][],java.lang.String)>(r19, r20);

        if r24 != null goto label06;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VvmSmsFilter", "Unparsable SMS received");

        r2 = staticinvoke <com.android.internal.telephony.VisualVoicemailSmsFilter: java.lang.String parseAsciiPduMessage(byte[][])>(r19);

        r25 = staticinvoke <com.android.internal.telephony.VisualVoicemailSmsParser: com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData parseAlternativeFormat(java.lang.String)>(r2);

        r26 = r25;

        if r25 != null goto label04;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VvmSmsFilter", "Attempt to parse ascii PDU");

        r26 = staticinvoke <com.android.internal.telephony.VisualVoicemailSmsParser: com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData parse(java.lang.String,java.lang.String)>(r23, r2);

     label04:
        if r26 == null goto label05;

        staticinvoke <com.android.internal.telephony.VisualVoicemailSmsFilter: void sendVvmSmsBroadcast(android.content.Context,android.telephony.VisualVoicemailSmsFilterSettings,android.telecom.PhoneAccountHandle,com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData,java.lang.String)>(r18, r0, r1, r26, null);

     label05:
        return 0;

     label06:
        r27 = r24.<com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage: java.lang.String fullMessageBody>;

        r28 = staticinvoke <com.android.internal.telephony.VisualVoicemailSmsParser: com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData parse(java.lang.String,java.lang.String)>(r23, r27);

        if r28 == null goto label10;

        $i3 = r0.<android.telephony.VisualVoicemailSmsFilterSettings: int destinationPort>;

        if $i3 != -2 goto label07;

        if i0 != -1 goto label08;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VvmSmsFilter", "SMS matching VVM format received but is not a DATA SMS");

        return 0;

     label07:
        $i4 = r0.<android.telephony.VisualVoicemailSmsFilterSettings: int destinationPort>;

        if $i4 == -1 goto label08;

        $i6 = r0.<android.telephony.VisualVoicemailSmsFilterSettings: int destinationPort>;

        if $i6 == i0 goto label08;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SMS matching VVM format received but is not directed to port ");

        $i7 = r0.<android.telephony.VisualVoicemailSmsFilterSettings: int destinationPort>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VvmSmsFilter", $r11);

        return 0;

     label08:
        $r30 = r0.<android.telephony.VisualVoicemailSmsFilterSettings: java.util.List originatingNumbers>;

        $z3 = interfaceinvoke $r30.<java.util.List: boolean isEmpty()>();

        if $z3 != 0 goto label09;

        $r7 = r24.<com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage: android.telephony.SmsMessage firstMessage>;

        $r6 = r0.<android.telephony.VisualVoicemailSmsFilterSettings: java.util.List originatingNumbers>;

        $z1 = staticinvoke <com.android.internal.telephony.VisualVoicemailSmsFilter: boolean isSmsFromNumbers(android.telephony.SmsMessage,java.util.List)>($r7, $r6);

        if $z1 != 0 goto label09;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VvmSmsFilter", "SMS matching VVM format received but is not from originating numbers");

        return 0;

     label09:
        staticinvoke <com.android.internal.telephony.VisualVoicemailSmsFilter: void sendVvmSmsBroadcast(android.content.Context,android.telephony.VisualVoicemailSmsFilterSettings,android.telecom.PhoneAccountHandle,com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData,java.lang.String)>(r18, r0, r1, r28, null);

        return 1;

     label10:
        $z0 = staticinvoke <com.android.internal.telephony.VisualVoicemailSmsFilter: boolean messageBodyMatchesVvmPattern(android.content.Context,int,java.lang.String)>(r18, i1, r27);

        if $z0 == 0 goto label11;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VvmSmsFilter", "SMS matches pattern but has illegal format, still dropping as VVM SMS");

        staticinvoke <com.android.internal.telephony.VisualVoicemailSmsFilter: void sendVvmSmsBroadcast(android.content.Context,android.telephony.VisualVoicemailSmsFilterSettings,android.telecom.PhoneAccountHandle,com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData,java.lang.String)>(r18, r0, r1, null, r27);

        return 1;

     label11:
        return 0;
    }

    private static com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage getFullMessage(byte[][], java.lang.String)
    {
        java.lang.String r0, r5, $r9, r18;
        java.nio.charset.CharsetDecoder r3;
        int i0, i1;
        android.telephony.SmsMessage r4, $r11;
        com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage $r6;
        java.lang.StringBuilder $r7;
        java.nio.charset.Charset $r8;
        byte[] $r10, $r13, $r14;
        java.nio.CharBuffer $r15;
        java.lang.Throwable $r16;
        byte[][] r17;
        java.nio.ByteBuffer r19;

        r17 := @parameter0: byte[][];

        r0 := @parameter1: java.lang.String;

        $r6 = new com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage;

        specialinvoke $r6.<com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage: void <init>(com.android.internal.telephony.VisualVoicemailSmsFilter$1)>(null);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        r3 = virtualinvoke $r8.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        i0 = lengthof r17;

        i1 = 0;

     label1:
        if i1 >= i0 goto label9;

        $r10 = r17[i1];

        r4 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>($r10, r0);

        if r4 != null goto label2;

        return null;

     label2:
        $r11 = $r6.<com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage: android.telephony.SmsMessage firstMessage>;

        if $r11 != null goto label3;

        $r6.<com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage: android.telephony.SmsMessage firstMessage> = r4;

     label3:
        r5 = virtualinvoke r4.<android.telephony.SmsMessage: java.lang.String getMessageBody()>();

        r18 = r5;

        if r5 != null goto label7;

        r18 = r5;

        $r13 = virtualinvoke r4.<android.telephony.SmsMessage: byte[] getUserData()>();

        if $r13 == null goto label7;

        $r14 = virtualinvoke r4.<android.telephony.SmsMessage: byte[] getUserData()>();

        r19 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r14);

     label4:
        $r15 = virtualinvoke r3.<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)>(r19);

        r18 = virtualinvoke $r15.<java.nio.CharBuffer: java.lang.String toString()>();

     label5:
        goto label7;

     label6:
        $r16 := @caughtexception;

        return null;

     label7:
        if r18 == null goto label8;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

     label8:
        i1 = i1 + 1;

        goto label1;

     label9:
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6.<com.android.internal.telephony.VisualVoicemailSmsFilter$FullMessage: java.lang.String fullMessageBody> = $r9;

        return $r6;

        catch java.nio.charset.CharacterCodingException from label4 to label5 with label6;
    }

    private static boolean isSmsFromNumbers(android.telephony.SmsMessage, java.util.List)
    {
        android.telephony.SmsMessage r0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        java.lang.String $r2, $r3;
        java.util.List r4;
        java.util.Iterator r5;

        r0 := @parameter0: android.telephony.SmsMessage;

        r4 := @parameter1: java.util.List;

        if r0 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VvmSmsFilter", "Unable to create SmsMessage from PDU, cannot determine originating number");

        return 0;

     label1:
        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r1 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.String) $r1;

        $r3 = virtualinvoke r0.<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>();

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>($r2, $r3);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    private static boolean messageBodyMatchesVvmPattern(android.content.Context, int, java.lang.String)
    {
        int i0;
        java.util.Iterator r0;
        java.lang.Object $r1, $r4, $r5;
        android.telephony.TelephonyManager $r2;
        java.util.Map $r3;
        boolean $z0, $z1, $z2;
        java.util.regex.Matcher $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r10, r12, r13;
        android.content.Context r11;
        java.util.List r14;
        java.util.regex.Pattern r15;

        r11 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r12 := @parameter2: java.lang.String;

        staticinvoke <com.android.internal.telephony.VisualVoicemailSmsFilter: void buildPatternsMap(android.content.Context)>(r11);

        $r1 = virtualinvoke r11.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/TelephonyManager;");

        $r2 = (android.telephony.TelephonyManager) $r1;

        r13 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getSimOperator(int)>(i0);

        $r3 = <com.android.internal.telephony.VisualVoicemailSmsFilter: java.util.Map sPatterns>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        r14 = (java.util.List) $r4;

        if r14 == null goto label5;

        $z0 = interfaceinvoke r14.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label5;

     label1:
        r0 = interfaceinvoke r14.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.util.regex.Pattern) $r5;

        $r6 = virtualinvoke r15.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r12);

        $z2 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z2 == 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming SMS matches pattern ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VvmSmsFilter", $r10);

        return 1;

     label3:
        goto label2;

     label4:
        return 0;

     label5:
        return 0;
    }

    private static java.lang.String parseAsciiPduMessage(byte[][])
    {
        byte[][] r0;
        int i0, i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4;
        java.nio.charset.Charset $r5;
        byte[] $r6;

        r0 := @parameter0: byte[][];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = new java.lang.String;

        $r6 = r0[i1];

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r6, $r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static void sendVvmSmsBroadcast(android.content.Context, android.telephony.VisualVoicemailSmsFilterSettings, android.telecom.PhoneAccountHandle, com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData, java.lang.String)
    {
        android.content.Context r0;
        android.telephony.VisualVoicemailSmsFilterSettings r1;
        android.telecom.PhoneAccountHandle r2;
        com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData r3;
        java.lang.String r4, $r12, $r16;
        android.content.Intent $r7;
        android.telephony.VisualVoicemailSms$Builder $r8;
        android.telephony.VisualVoicemailSms $r10;
        android.os.Bundle $r18;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.telephony.VisualVoicemailSmsFilterSettings;

        r2 := @parameter2: android.telecom.PhoneAccountHandle;

        r3 := @parameter3: com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData;

        r4 := @parameter4: java.lang.String;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VvmSmsFilter", "VVM SMS received");

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("com.android.internal.provider.action.VOICEMAIL_SMS_RECEIVED");

        $r8 = new android.telephony.VisualVoicemailSms$Builder;

        specialinvoke $r8.<android.telephony.VisualVoicemailSms$Builder: void <init>()>();

        if r3 == null goto label1;

        $r16 = r3.<com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData: java.lang.String prefix>;

        virtualinvoke $r8.<android.telephony.VisualVoicemailSms$Builder: android.telephony.VisualVoicemailSms$Builder setPrefix(java.lang.String)>($r16);

        $r18 = r3.<com.android.internal.telephony.VisualVoicemailSmsParser$WrappedMessageData: android.os.Bundle fields>;

        virtualinvoke $r8.<android.telephony.VisualVoicemailSms$Builder: android.telephony.VisualVoicemailSms$Builder setFields(android.os.Bundle)>($r18);

     label1:
        if r4 == null goto label2;

        virtualinvoke $r8.<android.telephony.VisualVoicemailSms$Builder: android.telephony.VisualVoicemailSms$Builder setMessageBody(java.lang.String)>(r4);

     label2:
        virtualinvoke $r8.<android.telephony.VisualVoicemailSms$Builder: android.telephony.VisualVoicemailSms$Builder setPhoneAccountHandle(android.telecom.PhoneAccountHandle)>(r2);

        $r10 = virtualinvoke $r8.<android.telephony.VisualVoicemailSms$Builder: android.telephony.VisualVoicemailSms build()>();

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.provider.extra.VOICEMAIL_SMS", $r10);

        $r12 = r1.<android.telephony.VisualVoicemailSmsFilterSettings: java.lang.String packageName>;

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.provider.extra.TARGET_PACAKGE", $r12);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.android.phone");

        virtualinvoke r0.<android.content.Context: void sendBroadcast(android.content.Intent)>($r7);

        return;
    }

    public static void setPhoneAccountHandleConverterForTest(com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter)
    {
        com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter r0, $r1;

        r0 := @parameter0: com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter;

        if r0 != null goto label1;

        $r1 = <com.android.internal.telephony.VisualVoicemailSmsFilter: com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter DEFAULT_PHONE_ACCOUNT_HANDLE_CONVERTER>;

        <com.android.internal.telephony.VisualVoicemailSmsFilter: com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter sPhoneAccountHandleConverter> = $r1;

        goto label2;

     label1:
        <com.android.internal.telephony.VisualVoicemailSmsFilter: com.android.internal.telephony.VisualVoicemailSmsFilter$PhoneAccountHandleConverter sPhoneAccountHandleConverter> = r0;

     label2:
        return;
    }
}
