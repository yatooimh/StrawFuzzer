public class com.android.internal.telephony.WapPushOverSms extends java.lang.Object implements android.content.ServiceConnection
{
    private static final boolean DBG;
    private static final java.lang.String LOCATION_SELECTION;
    private static final java.lang.String TAG;
    private static final java.lang.String THREAD_ID_SELECTION;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private final android.content.Context mContext;
    android.os.PowerWhitelistManager mPowerWhitelistManager;
    private volatile com.android.internal.telephony.IWapPushManager mWapPushManager;
    private java.lang.String mWapPushManagerPackage;

    public void <init>(android.content.Context)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.Context r1, $r6, $r12;
        com.android.internal.telephony.WapPushOverSms$1 $r3;
        java.lang.Object $r4, $r7;
        android.os.PowerWhitelistManager $r5;
        android.os.UserManager $r8;
        boolean $z0;
        android.content.IntentFilter $r9;
        android.content.BroadcastReceiver $r10;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.android.internal.telephony.WapPushOverSms$1;

        specialinvoke $r3.<com.android.internal.telephony.WapPushOverSms$1: void <init>(com.android.internal.telephony.WapPushOverSms)>(r0);

        r0.<com.android.internal.telephony.WapPushOverSms: android.content.BroadcastReceiver mBroadcastReceiver> = $r3;

        r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext> = r1;

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerWhitelistManager;");

        $r5 = (android.os.PowerWhitelistManager) $r4;

        r0.<com.android.internal.telephony.WapPushOverSms: android.os.PowerWhitelistManager mPowerWhitelistManager> = $r5;

        $r6 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r8 = (android.os.UserManager) $r7;

        $z0 = virtualinvoke $r8.<android.os.UserManager: boolean isUserUnlocked()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        specialinvoke r0.<com.android.internal.telephony.WapPushOverSms: void bindWapPushManagerService(android.content.Context)>($r12);

        goto label2;

     label1:
        $r9 = new android.content.IntentFilter;

        specialinvoke $r9.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r9.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_UNLOCKED");

        $r10 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r10, $r9);

     label2:
        return;
    }

    static android.content.Context access$000(com.android.internal.telephony.WapPushOverSms)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.internal.telephony.WapPushOverSms;

        $r1 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        return $r1;
    }

    static void access$200(com.android.internal.telephony.WapPushOverSms, android.content.Context)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.Context r1;

        r0 := @parameter0: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter1: android.content.Context;

        specialinvoke r0.<com.android.internal.telephony.WapPushOverSms: void bindWapPushManagerService(android.content.Context)>(r1);

        return;
    }

    private void bindWapPushManagerService(android.content.Context)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.ComponentName r2;
        android.content.Intent $r3;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;
        android.content.pm.PackageManager $r6;
        boolean $z0;
        java.lang.Throwable $r9;
        android.content.Context r10;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r10 := @parameter0: android.content.Context;

        $r3 = new android.content.Intent;

        $r4 = class "Lcom/android/internal/telephony/IWapPushManager;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke r10.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = staticinvoke <com.android.internal.telephony.WapPushOverSms: android.content.ComponentName resolveSystemService(android.content.pm.PackageManager,android.content.Intent)>($r6, $r3);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r2);

        if r2 == null goto label7;

        $z0 = virtualinvoke r10.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r3, r0, 1);

        if $z0 != 0 goto label1;

        goto label7;

     label1:
        entermonitor r0;

     label2:
        $r8 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        r0.<com.android.internal.telephony.WapPushOverSms: java.lang.String mWapPushManagerPackage> = $r8;

        exitmonitor r0;

     label3:
        goto label8;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r9;

     label7:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "bindService() for wappush manager failed");

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private com.android.internal.telephony.WapPushOverSms$DecodedResult decodeWapPdu(byte[], com.android.internal.telephony.InboundSmsHandler)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        int i0, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i14, $i15, $i16, i21, i23, i27, i28, i29, i31, i33, i34, i35, i36, i37, $i38, $i39;
        com.android.internal.telephony.WspTypeDecoder r2;
        java.lang.String r3, $r10, $r17, $r20, $r22, $r27, r36, r37;
        long l1, $l4, $l11, $l13;
        byte[] r4, r23, r29;
        com.android.internal.telephony.WapPushOverSms$DecodedResult $r5;
        byte $b2, $b3, $b17, $b18;
        com.android.internal.telephony.Phone $r6;
        boolean $z0, $z2, $z3, $z4, $z5, $z6;
        com.google.android.mms.pdu.EncodedStringValue $r7, $r9;
        android.content.Context $r8, $r11;
        android.content.res.Resources $r12;
        java.lang.ArrayIndexOutOfBoundsException $r13;
        java.lang.StringBuilder $r14, r34;
        java.lang.Exception $r18;
        com.android.internal.telephony.InboundSmsHandler r24;
        short s22, s24, s25, s26, s30, s32;
        com.android.internal.telephony.TelephonyComponentFactory $r25, $r28;
        java.lang.Class $r26;
        int[] r30;
        com.google.android.mms.pdu.PduParser r31;
        com.google.android.mms.pdu.GenericPdu r32;
        com.google.android.mms.pdu.NotificationInd r35;
        java.util.HashMap $r38;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r23 := @parameter0: byte[];

        r24 := @parameter1: com.android.internal.telephony.InboundSmsHandler;

        $r5 = new com.android.internal.telephony.WapPushOverSms$DecodedResult;

        specialinvoke $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: void <init>(com.android.internal.telephony.WapPushOverSms,com.android.internal.telephony.WapPushOverSms$1)>(r0, null);

        i21 = 0 + 1;

        $b2 = r23[0];

        s22 = $b2 & 255;

        i23 = i21 + 1;

        $b3 = r23[i21];

        s24 = $b3 & 255;

     label01:
        $r6 = virtualinvoke r24.<com.android.internal.telephony.InboundSmsHandler: com.android.internal.telephony.Phone getPhone()>();

        i0 = virtualinvoke $r6.<com.android.internal.telephony.Phone: int getPhoneId()>();

     label02:
        s25 = s22;

        s26 = s24;

        i27 = i23;

        if s24 == 6 goto label09;

        s25 = s22;

        s26 = s24;

        i27 = i23;

        if s24 == 7 goto label09;

     label03:
        $r11 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.res.Resources getResources()>();

        i28 = virtualinvoke $r12.<android.content.res.Resources: int getInteger(int)>(17694915);

     label04:
        if i28 == -1 goto label07;

        i29 = i28 + 1;

        $b17 = r23[i28];

        s30 = $b17 & 255;

        i31 = i29 + 1;

        $b18 = r23[i29];

        s32 = $b18 & 255;

        s25 = s30;

        s26 = s32;

        i27 = i31;

        if s32 == 6 goto label09;

        s25 = s30;

        s26 = s32;

        i27 = i31;

        if s32 == 7 goto label09;

     label05:
        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int statusCode> = 1;

     label06:
        return $r5;

     label07:
        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int statusCode> = 1;

     label08:
        return $r5;

     label09:
        $r25 = staticinvoke <com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory getInstance()>();

        $r26 = class "Lcom/android/internal/telephony/WspTypeDecoder;";

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();

        $r28 = virtualinvoke $r25.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r27);

        r2 = virtualinvoke $r28.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.WspTypeDecoder makeWspTypeDecoder(byte[])>(r23);

        $z4 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: boolean decodeUintvarInteger(int)>(i27);

        if $z4 != 0 goto label11;

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int statusCode> = 2;

     label10:
        return $r5;

     label11:
        $l4 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        i33 = (int) $l4;

        $i5 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()>();

        i34 = i27 + $i5;

        $z0 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: boolean decodeContentType(int)>(i34);

        if $z0 != 0 goto label13;

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int statusCode> = 2;

     label12:
        return $r5;

     label13:
        r3 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()>();

        l1 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        $i6 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()>();

        i35 = i34 + $i6;

        r4 = newarray (byte)[i33];

        $i7 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r23, i34, r4, 0, $i7);

     label14:
        if r3 == null goto label17;

     label15:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("application/vnd.wap.coc");

        if $z3 == 0 goto label17;

     label16:
        goto label20;

     label17:
        i36 = i34 + i33;

     label18:
        $i8 = lengthof r23;

        $i9 = $i8 - i36;

        r29 = newarray (byte)[$i9];

        $i10 = lengthof r29;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r23, i36, r29, 0, $i10);

     label19:
        r23 = r29;

     label20:
        r30 = staticinvoke <android.telephony.SubscriptionManager: int[] getSubId(int)>(i0);

     label21:
        if r30 == null goto label24;

     label22:
        $i16 = lengthof r30;

        if $i16 <= 0 goto label24;

     label23:
        i37 = r30[0];

        goto label25;

     label24:
        i37 = staticinvoke <android.telephony.SmsManager: int getDefaultSmsSubscriptionId()>();

     label25:
        r31 = new com.google.android.mms.pdu.PduParser;

        $z5 = staticinvoke <com.android.internal.telephony.WapPushOverSms: boolean shouldParseContentDisposition(int)>(i37);

        specialinvoke r31.<com.google.android.mms.pdu.PduParser: void <init>(byte[],boolean)>(r23, $z5);

        r32 = virtualinvoke r31.<com.google.android.mms.pdu.PduParser: com.google.android.mms.pdu.GenericPdu parse()>();

     label26:
        goto label30;

     label27:
        $r18 := @caughtexception;

     label28:
        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse PDU: ");

        $r20 = virtualinvoke $r18.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", $r22);

     label29:
        r32 = null;

     label30:
        if r32 == null goto label33;

     label31:
        $i15 = virtualinvoke r32.<com.google.android.mms.pdu.GenericPdu: int getMessageType()>();

        if $i15 != 130 goto label33;

        r35 = (com.google.android.mms.pdu.NotificationInd) r32;

        $r7 = virtualinvoke r35.<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getFrom()>();

        if $r7 == null goto label33;

        $r8 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        $r9 = virtualinvoke r35.<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getFrom()>();

        $r10 = virtualinvoke $r9.<com.google.android.mms.pdu.EncodedStringValue: java.lang.String getString()>();

        $z2 = staticinvoke <com.android.internal.telephony.BlockChecker: boolean isBlocked(android.content.Context,java.lang.String,android.os.Bundle)>($r8, $r10, null);

        if $z2 == 0 goto label33;

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int statusCode> = 1;

     label32:
        return $r5;

     label33:
        $i38 = i35 + i33;

        $i39 = $i38 - 1;

        $z6 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: boolean seekXWapApplicationId(int,int)>(i35, $i39);

        if $z6 == 0 goto label43;

        $l11 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        $i12 = (int) $l11;

        virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: boolean decodeXWapApplicationId(int)>($i12);

        r36 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()>();

     label34:
        if r36 != null goto label37;

     label35:
        $l13 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        $i14 = (int) $l13;

        r36 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i14);

     label36:
        goto label37;

     label37:
        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.lang.String wapAppId> = r36;

     label38:
        if r3 != null goto label41;

     label39:
        r37 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

     label40:
        goto label42;

     label41:
        r37 = r3;

     label42:
        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.lang.String contentType> = r37;

     label43:
        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int subId> = i37;

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int phoneId> = i0;

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: com.google.android.mms.pdu.GenericPdu parsedPdu> = r32;

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.lang.String mimeType> = r3;

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int transactionId> = s25;

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int pduType> = s26;

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: byte[] header> = r4;

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: byte[] intentData> = r23;

        $r38 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: java.util.HashMap getContentParameters()>();

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.util.HashMap contentTypeParameters> = $r38;

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int statusCode> = -1;

     label44:
        goto label46;

     label45:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ignoring dispatchWapPdu() array index exception: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", $r17);

        $r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int statusCode> = 2;

     label46:
        return $r5;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label02 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label06 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label07 to label08 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label10 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label11 to label12 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label13 to label14 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label15 to label16 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label18 to label19 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label20 to label21 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label22 to label23 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label24 to label25 with label45;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.ArrayIndexOutOfBoundsException from label25 to label26 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label28 to label29 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label31 to label32 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label33 to label34 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label35 to label36 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label37 to label38 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label39 to label40 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label42 to label43 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label43 to label44 with label45;
    }

    public static java.lang.String getAppOpsStringPermissionForIntent(java.lang.String)
    {
        java.lang.String $r0, r1, r2;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = "application/vnd.wap.mms-message";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        r2 = "android:receive_mms";

        goto label2;

     label1:
        r2 = "android:receive_wap_push";

     label2:
        return r2;
    }

    private static long getDeliveryOrReadReportThreadId(android.content.Context, com.google.android.mms.pdu.GenericPdu)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r4, $r5, $r6, $r11, r18, r22;
        long l0;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        com.google.android.mms.pdu.ReadOrigInd $r7;
        byte[] $r8, $r13;
        java.lang.String[] $r9, $r10;
        com.google.android.mms.pdu.DeliveryInd $r12;
        android.database.sqlite.SQLiteException $r14;
        java.lang.Throwable $r15;
        android.content.Context r16;
        com.google.android.mms.pdu.GenericPdu r17;
        android.database.Cursor r19, r20, r23;
        android.net.Uri r21;

        r16 := @parameter0: android.content.Context;

        r17 := @parameter1: com.google.android.mms.pdu.GenericPdu;

        $z0 = r17 instanceof com.google.android.mms.pdu.DeliveryInd;

        if $z0 == 0 goto label01;

        $r11 = new java.lang.String;

        $r12 = (com.google.android.mms.pdu.DeliveryInd) r17;

        $r13 = virtualinvoke $r12.<com.google.android.mms.pdu.DeliveryInd: byte[] getMessageId()>();

        specialinvoke $r11.<java.lang.String: void <init>(byte[])>($r13);

        r18 = $r11;

        goto label02;

     label01:
        $z1 = r17 instanceof com.google.android.mms.pdu.ReadOrigInd;

        if $z1 == 0 goto label27;

        $r6 = new java.lang.String;

        $r7 = (com.google.android.mms.pdu.ReadOrigInd) r17;

        $r8 = virtualinvoke $r7.<com.google.android.mms.pdu.ReadOrigInd: byte[] getMessageId()>();

        specialinvoke $r6.<java.lang.String: void <init>(byte[])>($r8);

        r18 = $r6;

     label02:
        r19 = null;

        r20 = null;

     label03:
        r0 = virtualinvoke r16.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label04:
        r19 = null;

        r20 = null;

     label05:
        r21 = <android.provider.Telephony$Mms: android.net.Uri CONTENT_URI>;

     label06:
        r19 = null;

        r20 = null;

     label07:
        r22 = staticinvoke <android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>(r18);

     label08:
        r19 = null;

        r20 = null;

     label09:
        r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(128);

     label10:
        r19 = null;

        r20 = null;

     label11:
        $r9 = newarray (java.lang.String)[1];

        $r9[0] = "thread_id";

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = r22;

        $r10[1] = r1;

        r23 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r21, $r9, "m_id=? AND m_type=?", $r10, null);

     label12:
        if r23 == null goto label18;

        r19 = r23;

        r20 = r23;

     label13:
        $z2 = interfaceinvoke r23.<android.database.Cursor: boolean moveToFirst()>();

        if $z2 == 0 goto label18;

     label14:
        r19 = r23;

        r20 = r23;

     label15:
        l0 = interfaceinvoke r23.<android.database.Cursor: long getLong(int)>(0);

     label16:
        if r23 == null goto label17;

        interfaceinvoke r23.<android.database.Cursor: void close()>();

     label17:
        return l0;

     label18:
        if r23 == null goto label24;

     label19:
        interfaceinvoke r23.<android.database.Cursor: void close()>();

        goto label24;

     label20:
        $r15 := @caughtexception;

        goto label25;

     label21:
        $r14 := @caughtexception;

        r19 = r20;

     label22:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WAP PUSH", "Failed to query delivery or read report thread id", $r14);

     label23:
        if r20 == null goto label24;

        r23 = r20;

        goto label19;

     label24:
        return -1L;

     label25:
        if r19 == null goto label26;

        interfaceinvoke r19.<android.database.Cursor: void close()>();

     label26:
        throw $r15;

     label27:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WAP Push data is neither delivery or read report type: ");

        $r3 = virtualinvoke r17.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getCanonicalName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", $r5);

        return -1L;

        catch android.database.sqlite.SQLiteException from label03 to label04 with label21;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label21;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label21;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch android.database.sqlite.SQLiteException from label09 to label10 with label21;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch android.database.sqlite.SQLiteException from label11 to label12 with label21;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch android.database.sqlite.SQLiteException from label13 to label14 with label21;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch android.database.sqlite.SQLiteException from label15 to label16 with label21;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label22 to label23 with label20;
    }

    public static java.lang.String getPermissionForType(java.lang.String)
    {
        java.lang.String $r0, r1, r2;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = "application/vnd.wap.mms-message";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        r2 = "android.permission.RECEIVE_MMS";

        goto label2;

     label1:
        r2 = "android.permission.RECEIVE_WAP_PUSH";

     label2:
        return r2;
    }

    private static boolean isDuplicateNotification(android.content.Context, com.google.android.mms.pdu.NotificationInd)
    {
        byte[] r0;
        android.content.ContentResolver r1;
        android.net.Uri r2;
        java.lang.String r3, $r4, r13;
        int i0;
        java.lang.String[] $r5, $r6;
        java.lang.Throwable $r7;
        android.database.sqlite.SQLiteException $r8;
        android.content.Context r9;
        com.google.android.mms.pdu.NotificationInd r10;
        android.database.Cursor r11, r12, r14;

        r9 := @parameter0: android.content.Context;

        r10 := @parameter1: com.google.android.mms.pdu.NotificationInd;

        r0 = virtualinvoke r10.<com.google.android.mms.pdu.NotificationInd: byte[] getContentLocation()>();

        if r0 == null goto label24;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[])>(r0);

        r11 = null;

        r12 = null;

     label01:
        r1 = virtualinvoke r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label02:
        r11 = null;

        r12 = null;

     label03:
        r2 = <android.provider.Telephony$Mms: android.net.Uri CONTENT_URI>;

     label04:
        r11 = null;

        r12 = null;

     label05:
        r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(130);

     label06:
        r11 = null;

        r12 = null;

     label07:
        r3 = new java.lang.String;

     label08:
        r11 = null;

        r12 = null;

     label09:
        specialinvoke r3.<java.lang.String: void <init>(byte[])>(r0);

     label10:
        r11 = null;

        r12 = null;

     label11:
        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "_id";

        $r6 = newarray (java.lang.String)[2];

        $r6[0] = r13;

        $r6[1] = r3;

        r14 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, $r5, "m_type=? AND ct_l =?", $r6, null);

     label12:
        if r14 == null goto label16;

        r11 = r14;

        r12 = r14;

     label13:
        i0 = interfaceinvoke r14.<android.database.Cursor: int getCount()>();

     label14:
        if i0 <= 0 goto label16;

        if r14 == null goto label15;

        interfaceinvoke r14.<android.database.Cursor: void close()>();

     label15:
        return 1;

     label16:
        if r14 == null goto label24;

        goto label21;

     label17:
        $r7 := @caughtexception;

        goto label22;

     label18:
        $r8 := @caughtexception;

        r11 = r12;

     label19:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WAP PUSH", "failed to query existing notification ind", $r8);

     label20:
        if r12 == null goto label24;

        r14 = r12;

     label21:
        interfaceinvoke r14.<android.database.Cursor: void close()>();

        goto label24;

     label22:
        if r11 == null goto label23;

        interfaceinvoke r11.<android.database.Cursor: void close()>();

     label23:
        throw $r7;

     label24:
        return 0;

        catch android.database.sqlite.SQLiteException from label01 to label02 with label18;
        catch java.lang.Throwable from label01 to label02 with label17;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label18;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label18;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label18;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch android.database.sqlite.SQLiteException from label09 to label10 with label18;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch android.database.sqlite.SQLiteException from label11 to label12 with label18;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch android.database.sqlite.SQLiteException from label13 to label14 with label18;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label19 to label20 with label17;
    }

    private static android.content.ComponentName resolveSystemService(android.content.pm.PackageManager, android.content.Intent)
    {
        android.content.Intent r0;
        int $i0, i1;
        java.lang.Object $r1;
        android.content.ComponentName $r2, r19;
        android.content.pm.ServiceInfo $r3, $r5;
        android.content.pm.ApplicationInfo $r4;
        java.lang.String $r6, $r7, $r16;
        java.lang.StringBuilder $r8;
        java.lang.IllegalStateException $r15;
        android.content.pm.PackageManager r17;
        java.util.List r18;
        android.content.pm.ResolveInfo r20;

        r17 := @parameter0: android.content.pm.PackageManager;

        r0 := @parameter1: android.content.Intent;

        r18 = virtualinvoke r17.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r0, 1048576);

        if r18 != null goto label1;

        return null;

     label1:
        r19 = null;

        i1 = 0;

     label2:
        $i0 = interfaceinvoke r18.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r1 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(i1);

        r20 = (android.content.pm.ResolveInfo) $r1;

        $r2 = new android.content.ComponentName;

        $r3 = r20.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r4 = $r3.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = $r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r5 = r20.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = $r5.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r2.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r7, $r6);

        if r19 != null goto label3;

        r19 = $r2;

        i1 = i1 + 1;

        goto label2;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple system services handle ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r15 = new java.lang.IllegalStateException;

        $r16 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label4:
        return r19;
    }

    private static boolean shouldParseContentDisposition(int)
    {
        int i0;
        android.telephony.SmsManager $r0;
        android.os.Bundle $r1;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.telephony.SmsManager: android.telephony.SmsManager getSmsManagerForSubscriptionId(int)>(i0);

        $r1 = virtualinvoke $r0.<android.telephony.SmsManager: android.os.Bundle getCarrierConfigValues()>();

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("supportMmsContentDisposition", 1);

        return $z0;
    }

    private void writeInboxMessage(int, com.google.android.mms.pdu.GenericPdu)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        int i0, i1, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i15;
        long l2;
        byte[] r1, r2, $r6, r28;
        android.content.Context $r3, $r11, $r14, $r29;
        android.telephony.SmsManager $r4;
        java.lang.String $r8, $r20, r31;
        android.net.Uri $r9, $r10, $r12, r24;
        boolean $z0, $z1;
        byte $b7, $b14;
        java.lang.Long $r13;
        android.content.ContentResolver $r15;
        com.google.android.mms.MmsException $r16;
        java.lang.StringBuilder $r17, r30;
        java.lang.RuntimeException $r21;
        com.google.android.mms.pdu.GenericPdu r22;
        com.google.android.mms.pdu.PduPersister r23;
        android.content.ContentValues r25;
        com.google.android.mms.pdu.NotificationInd r26;
        android.os.Bundle r27;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        i0 := @parameter0: int;

        r22 := @parameter1: com.google.android.mms.pdu.GenericPdu;

        if r22 != null goto label01;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Invalid PUSH PDU");

     label01:
        $r3 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        r23 = staticinvoke <com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.PduPersister getPduPersister(android.content.Context)>($r3);

        i1 = virtualinvoke r22.<com.google.android.mms.pdu.GenericPdu: int getMessageType()>();

        if i1 == 130 goto label14;

        if i1 == 134 goto label04;

        if i1 == 136 goto label04;

     label02:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Received unrecognized WAP Push PDU.");

     label03:
        goto label23;

     label04:
        $r11 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        l2 = staticinvoke <com.android.internal.telephony.WapPushOverSms: long getDeliveryOrReadReportThreadId(android.content.Context,com.google.android.mms.pdu.GenericPdu)>($r11, r22);

     label05:
        $b14 = l2 cmp -1L;

        if $b14 != 0 goto label08;

     label06:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Failed to find delivery or read report\'s thread id");

     label07:
        goto label23;

     label08:
        $r12 = <android.provider.Telephony$Mms$Inbox: android.net.Uri CONTENT_URI>;

        r24 = virtualinvoke r23.<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri,boolean,boolean,java.util.HashMap)>(r22, $r12, 1, 1, null);

     label09:
        if r24 != null goto label12;

     label10:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Failed to persist delivery or read report");

     label11:
        goto label23;

     label12:
        r25 = new android.content.ContentValues;

        specialinvoke r25.<android.content.ContentValues: void <init>(int)>(1);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r25.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("thread_id", $r13);

        $r14 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i15 = virtualinvoke $r15.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r24, r25, null, null);

        if $i15 == 1 goto label23;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Failed to update delivery or read report thread id");

     label13:
        goto label23;

     label14:
        r26 = (com.google.android.mms.pdu.NotificationInd) r22;

        $r4 = staticinvoke <android.telephony.SmsManager: android.telephony.SmsManager getSmsManagerForSubscriptionId(int)>(i0);

        r27 = virtualinvoke $r4.<android.telephony.SmsManager: android.os.Bundle getCarrierConfigValues()>();

     label15:
        if r27 == null goto label17;

     label16:
        $z0 = virtualinvoke r27.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("enabledTransID", 0);

        if $z0 == 0 goto label17;

        r28 = virtualinvoke r26.<com.google.android.mms.pdu.NotificationInd: byte[] getContentLocation()>();

        $i5 = lengthof r28;

        $i6 = $i5 - 1;

        $b7 = r28[$i6];

        if 61 != $b7 goto label17;

        r1 = virtualinvoke r26.<com.google.android.mms.pdu.NotificationInd: byte[] getTransactionId()>();

        $i9 = lengthof r28;

        $i8 = lengthof r1;

        $i10 = $i9 + $i8;

        r2 = newarray (byte)[$i10];

        $i11 = lengthof r28;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r28, 0, r2, 0, $i11);

        $i13 = lengthof r28;

        $i12 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, $i13, $i12);

        virtualinvoke r26.<com.google.android.mms.pdu.NotificationInd: void setContentLocation(byte[])>(r2);

     label17:
        $r29 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        $z1 = staticinvoke <com.android.internal.telephony.WapPushOverSms: boolean isDuplicateNotification(android.content.Context,com.google.android.mms.pdu.NotificationInd)>($r29, r26);

        if $z1 != 0 goto label19;

        $r9 = <android.provider.Telephony$Mms$Inbox: android.net.Uri CONTENT_URI>;

        $r10 = virtualinvoke r23.<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri,boolean,boolean,java.util.HashMap)>(r22, $r9, 1, 1, null);

        if $r10 != null goto label18;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Failed to save MMS WAP push notification ind");

     label18:
        goto label23;

     label19:
        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip storing duplicate MMS WAP push notification ind: ");

        r31 = new java.lang.String;

        $r6 = virtualinvoke r26.<com.google.android.mms.pdu.NotificationInd: byte[] getContentLocation()>();

        specialinvoke r31.<java.lang.String: void <init>(byte[])>($r6);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r8 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("WAP PUSH", $r8);

     label20:
        goto label23;

     label21:
        $r21 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WAP PUSH", "Unexpected RuntimeException in persisting MMS WAP push data", $r21);

        goto label23;

     label22:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to save MMS WAP push data: type=");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WAP PUSH", $r20, $r16);

     label23:
        return;

        catch com.google.android.mms.MmsException from label02 to label03 with label22;
        catch java.lang.RuntimeException from label02 to label03 with label21;
        catch com.google.android.mms.MmsException from label04 to label05 with label22;
        catch java.lang.RuntimeException from label04 to label05 with label21;
        catch com.google.android.mms.MmsException from label06 to label07 with label22;
        catch java.lang.RuntimeException from label06 to label07 with label21;
        catch com.google.android.mms.MmsException from label08 to label09 with label22;
        catch java.lang.RuntimeException from label08 to label09 with label21;
        catch com.google.android.mms.MmsException from label10 to label11 with label22;
        catch java.lang.RuntimeException from label10 to label11 with label21;
        catch com.google.android.mms.MmsException from label12 to label13 with label22;
        catch java.lang.RuntimeException from label12 to label13 with label21;
        catch com.google.android.mms.MmsException from label14 to label15 with label22;
        catch java.lang.RuntimeException from label14 to label15 with label21;
        catch com.google.android.mms.MmsException from label16 to label17 with label22;
        catch java.lang.RuntimeException from label16 to label17 with label21;
        catch com.google.android.mms.MmsException from label17 to label18 with label22;
        catch java.lang.RuntimeException from label17 to label18 with label21;
        catch com.google.android.mms.MmsException from label19 to label20 with label22;
        catch java.lang.RuntimeException from label19 to label20 with label21;
    }

    public int dispatchWapPdu(byte[], android.content.BroadcastReceiver, com.android.internal.telephony.InboundSmsHandler, java.lang.String, int, long)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.BroadcastReceiver r1;
        com.android.internal.telephony.InboundSmsHandler r2;
        java.lang.String r3, $r5, $r7, $r18, $r19, $r20, $r21, $r25, $r28, $r38, $r39, $r48;
        int i0, i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13;
        com.android.internal.telephony.WapPushOverSms$DecodedResult r4;
        android.content.Intent $r6, r45;
        byte[] $r11, $r13, $r32, $r34, r43;
        java.util.HashMap $r15, $r36;
        boolean $z1, $z2, z3;
        byte $b6;
        android.content.Context $r17;
        android.os.UserHandle $r22;
        android.os.PowerWhitelistManager $r24, $r29;
        android.os.RemoteException $r41;
        java.lang.Throwable $r42;
        long l14, l15;
        com.android.internal.telephony.IWapPushManager r44;
        android.content.ComponentName r50;
        android.app.BroadcastOptions r51;
        android.os.Bundle r52;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r43 := @parameter0: byte[];

        r1 := @parameter1: android.content.BroadcastReceiver;

        r2 := @parameter2: com.android.internal.telephony.InboundSmsHandler;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        l14 := @parameter5: long;

        r4 = specialinvoke r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.WapPushOverSms$DecodedResult decodeWapPdu(byte[],com.android.internal.telephony.InboundSmsHandler)>(r43, r2);

        $i2 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int statusCode>;

        if $i2 == -1 goto label01;

        $i13 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int statusCode>;

        return $i13;

     label01:
        $r5 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.lang.String wapAppId>;

        if $r5 == null goto label15;

     label02:
        r44 = r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager>;

     label03:
        if r44 != null goto label04;

        z3 = 1;

        goto label09;

     label04:
        entermonitor r0;

     label05:
        $r29 = r0.<com.android.internal.telephony.WapPushOverSms: android.os.PowerWhitelistManager mPowerWhitelistManager>;

        $r28 = r0.<com.android.internal.telephony.WapPushOverSms: java.lang.String mWapPushManagerPackage>;

        virtualinvoke $r29.<android.os.PowerWhitelistManager: long whitelistAppTemporarilyForEvent(java.lang.String,int,java.lang.String)>($r28, 2, "mms-mgr");

        exitmonitor r0;

     label06:
        r45 = new android.content.Intent;

        specialinvoke r45.<android.content.Intent: void <init>()>();

        $i8 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int transactionId>;

        virtualinvoke r45.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("transactionId", $i8);

        $i9 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int pduType>;

        virtualinvoke r45.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("pduType", $i9);

        $r32 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: byte[] header>;

        virtualinvoke r45.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("header", $r32);

        $r34 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: byte[] intentData>;

        virtualinvoke r45.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("data", $r34);

        $r36 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.util.HashMap contentTypeParameters>;

        virtualinvoke r45.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("contentTypeParameters", $r36);

        $i10 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int phoneId>;

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int)>(r45, $i10);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z2 != 0 goto label07;

        virtualinvoke r45.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("address", r3);

     label07:
        $r39 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.lang.String wapAppId>;

        $r38 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.lang.String contentType>;

        i1 = interfaceinvoke r44.<com.android.internal.telephony.IWapPushManager: int processMessage(java.lang.String,java.lang.String,android.content.Intent)>($r39, $r38, r45);

     label08:
        z3 = 1;

        $i11 = i1 & 1;

        if $i11 <= 0 goto label09;

        z3 = 1;

        $i12 = 32768 & i1;

        if $i12 != 0 goto label09;

        z3 = 0;

     label09:
        if z3 != 0 goto label10;

        return 1;

     label10:
        goto label15;

     label11:
        $r42 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r42;

     label14:
        $r41 := @caughtexception;

     label15:
        $r48 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.lang.String mimeType>;

        if $r48 != null goto label16;

        return 2;

     label16:
        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.provider.Telephony.WAP_PUSH_DELIVER");

        $r7 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.lang.String mimeType>;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setType(java.lang.String)>($r7);

        $i3 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int transactionId>;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("transactionId", $i3);

        $i4 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int pduType>;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("pduType", $i4);

        $r11 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: byte[] header>;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("header", $r11);

        $r13 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: byte[] intentData>;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("data", $r13);

        $r15 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.util.HashMap contentTypeParameters>;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("contentTypeParameters", $r15);

        $i5 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int phoneId>;

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int)>($r6, $i5);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label17;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("address", r3);

     label17:
        $b6 = l14 cmp 0L;

        if $b6 == 0 goto label18;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("messageId", l14);

     label18:
        $r17 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        r50 = staticinvoke <com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultMmsApplication(android.content.Context,boolean)>($r17, 1);

        if r50 == null goto label19;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r50);

        $r24 = r0.<com.android.internal.telephony.WapPushOverSms: android.os.PowerWhitelistManager mPowerWhitelistManager>;

        $r25 = virtualinvoke r50.<android.content.ComponentName: java.lang.String getPackageName()>();

        l15 = virtualinvoke $r24.<android.os.PowerWhitelistManager: long whitelistAppTemporarilyForEvent(java.lang.String,int,java.lang.String)>($r25, 2, "mms-app");

        r51 = staticinvoke <android.app.BroadcastOptions: android.app.BroadcastOptions makeBasic()>();

        virtualinvoke r51.<android.app.BroadcastOptions: void setTemporaryAppWhitelistDuration(long)>(l15);

        r52 = virtualinvoke r51.<android.app.BroadcastOptions: android.os.Bundle toBundle()>();

        goto label20;

     label19:
        r52 = null;

     label20:
        $r18 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.lang.String mimeType>;

        $r19 = staticinvoke <com.android.internal.telephony.WapPushOverSms: java.lang.String getPermissionForType(java.lang.String)>($r18);

        $r20 = r4.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.lang.String mimeType>;

        $r21 = staticinvoke <com.android.internal.telephony.WapPushOverSms: java.lang.String getAppOpsStringPermissionForIntent(java.lang.String)>($r20);

        $r22 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        virtualinvoke r2.<com.android.internal.telephony.InboundSmsHandler: void dispatchIntent(android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle,android.content.BroadcastReceiver,android.os.UserHandle,int)>($r6, $r19, $r21, r52, r1, $r22, i0);

        return -1;

        catch android.os.RemoteException from label02 to label03 with label14;
        catch android.os.RemoteException from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch android.os.RemoteException from label06 to label07 with label14;
        catch android.os.RemoteException from label07 to label08 with label14;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch android.os.RemoteException from label13 to label14 with label14;
    }

    public void dispose()
    {
        com.android.internal.telephony.WapPushOverSms r0;
        com.android.internal.telephony.IWapPushManager $r1;
        android.content.Context $r2;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        $r1 = r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

        goto label2;

     label1:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "dispose: not bound to a wappush manager");

     label2:
        return;
    }

    public boolean isWapPushForMms(byte[], com.android.internal.telephony.InboundSmsHandler)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        com.android.internal.telephony.InboundSmsHandler r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0, z1;
        byte[] r4;
        com.android.internal.telephony.WapPushOverSms$DecodedResult r5;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r4 := @parameter0: byte[];

        r1 := @parameter1: com.android.internal.telephony.InboundSmsHandler;

        r5 = specialinvoke r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.WapPushOverSms$DecodedResult decodeWapPdu(byte[],com.android.internal.telephony.InboundSmsHandler)>(r4, r1);

        $i0 = r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: int statusCode>;

        if $i0 != -1 goto label1;

        $r3 = "application/vnd.wap.mms-message";

        $r2 = r5.<com.android.internal.telephony.WapPushOverSms$DecodedResult: java.lang.String mimeType>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        com.android.internal.telephony.IWapPushManager $r3;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r3 = staticinvoke <com.android.internal.telephony.IWapPushManager$Stub: com.android.internal.telephony.IWapPushManager asInterface(android.os.IBinder)>(r2);

        r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager> = $r3;

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.ComponentName r1;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter0: android.content.ComponentName;

        r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager> = null;

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.WapPushOverSms: java.lang.String THREAD_ID_SELECTION> = "m_id=? AND m_type=?";

        <com.android.internal.telephony.WapPushOverSms: java.lang.String TAG> = "WAP PUSH";

        <com.android.internal.telephony.WapPushOverSms: java.lang.String LOCATION_SELECTION> = "m_type=? AND ct_l =?";

        <com.android.internal.telephony.WapPushOverSms: boolean DBG> = 0;

        return;
    }
}
