class com.android.internal.telephony.cat.RilMessageDecoder$StateStart extends com.android.internal.telephony.State
{
    final com.android.internal.telephony.cat.RilMessageDecoder this$0;

    private void <init>(com.android.internal.telephony.cat.RilMessageDecoder)
    {
        com.android.internal.telephony.cat.RilMessageDecoder$StateStart r0;
        com.android.internal.telephony.cat.RilMessageDecoder r1;

        r0 := @this: com.android.internal.telephony.cat.RilMessageDecoder$StateStart;

        r1 := @parameter0: com.android.internal.telephony.cat.RilMessageDecoder;

        r0.<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: com.android.internal.telephony.cat.RilMessageDecoder this$0> = r1;

        specialinvoke r0.<com.android.internal.telephony.State: void <init>()>();

        return;
    }

    void <init>(com.android.internal.telephony.cat.RilMessageDecoder, com.android.internal.telephony.cat.RilMessageDecoder$1)
    {
        com.android.internal.telephony.cat.RilMessageDecoder$StateStart r0;
        com.android.internal.telephony.cat.RilMessageDecoder r1;
        com.android.internal.telephony.cat.RilMessageDecoder$1 r2;

        r0 := @this: com.android.internal.telephony.cat.RilMessageDecoder$StateStart;

        r1 := @parameter0: com.android.internal.telephony.cat.RilMessageDecoder;

        r2 := @parameter1: com.android.internal.telephony.cat.RilMessageDecoder$1;

        specialinvoke r0.<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: void <init>(com.android.internal.telephony.cat.RilMessageDecoder)>(r1);

        return;
    }

    public boolean processMessage(android.os.Message)
    {
        com.android.internal.telephony.cat.RilMessageDecoder$StateStart r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        java.lang.Object $r6;
        com.android.internal.telephony.cat.RilMessage $r7;
        com.android.internal.telephony.cat.RilMessageDecoder $r8, r11;
        boolean $z0;
        com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady $r9;
        android.os.Message r10;

        r0 := @this: com.android.internal.telephony.cat.RilMessageDecoder$StateStart;

        r10 := @parameter0: android.os.Message;

        $i0 = r10.<android.os.Message: int what>;

        if $i0 != 1 goto label1;

        $r8 = r0.<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: com.android.internal.telephony.cat.RilMessageDecoder this$0>;

        $r6 = r10.<android.os.Message: java.lang.Object obj>;

        $r7 = (com.android.internal.telephony.cat.RilMessage) $r6;

        $z0 = staticinvoke <com.android.internal.telephony.cat.RilMessageDecoder: boolean access$200(com.android.internal.telephony.cat.RilMessageDecoder,com.android.internal.telephony.cat.RilMessage)>($r8, $r7);

        if $z0 == 0 goto label2;

        r11 = r0.<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: com.android.internal.telephony.cat.RilMessageDecoder this$0>;

        $r9 = staticinvoke <com.android.internal.telephony.cat.RilMessageDecoder: com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady access$300(com.android.internal.telephony.cat.RilMessageDecoder)>(r11);

        virtualinvoke r11.<com.android.internal.telephony.cat.RilMessageDecoder: void transitionTo(com.android.internal.telephony.IState)>($r9);

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StateStart unexpected expecting START=1 got ");

        $i1 = r10.<android.os.Message: int what>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.cat.CatLog: void d(java.lang.Object,java.lang.String)>(r0, $r5);

     label2:
        return 1;
    }
}
