public class com.android.internal.telephony.cdma.CdmaInboundSmsHandler extends com.android.internal.telephony.InboundSmsHandler
{
    private static final java.lang.String SCP_TEST_ACTION;
    private static final java.lang.String TEST_ACTION;
    private static final boolean TEST_MODE;
    private static com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaCbTestBroadcastReceiver sTestBroadcastReceiver;
    private static com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaScpTestBroadcastReceiver sTestScpBroadcastReceiver;
    private final boolean mCheckForDuplicatePortsInOmadmWapPush;
    private byte[] mLastAcknowledgedSmsFingerprint;
    private byte[] mLastDispatchedSmsFingerprint;
    private android.os.RemoteCallback mScpCallback;
    private final com.android.internal.telephony.cdma.CdmaSMSDispatcher mSmsDispatcher;

    static void <clinit>()
    {
        int $i0;
        boolean z0;

        <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: java.lang.String TEST_ACTION> = "com.android.internal.telephony.cdma.TEST_TRIGGER_CELL_BROADCAST";

        <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: java.lang.String SCP_TEST_ACTION> = "com.android.internal.telephony.cdma.TEST_TRIGGER_SCP_MESSAGE";

        z0 = 0;

        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.debuggable", 0);

        if $i0 != 1 goto label1;

        z0 = 1;

     label1:
        <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean TEST_MODE> = z0;

        return;
    }

    private void <init>(android.content.Context, com.android.internal.telephony.SmsStorageMonitor, com.android.internal.telephony.Phone, com.android.internal.telephony.cdma.CdmaSMSDispatcher)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        android.content.Context r1;
        com.android.internal.telephony.Phone r2;
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r3;
        android.content.res.Resources $r4;
        boolean $z0, $z1;
        com.android.internal.telephony.CommandsInterface $r5;
        android.os.Handler $r6;
        com.android.internal.telephony.CellBroadcastServiceManager $r7;
        android.os.RemoteCallback $r8;
        com.android.internal.telephony.cdma._$$Lambda$CdmaInboundSmsHandler$sD3UQ6e4SE9ZbPjDZ9bEr_XRoaA $r9;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaCbTestBroadcastReceiver $r10, $r16, $r18;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaScpTestBroadcastReceiver $r11, $r12, $r14;
        android.content.IntentFilter $r13, $r17;
        com.android.internal.telephony.SmsStorageMonitor r20;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter0: android.content.Context;

        r20 := @parameter1: com.android.internal.telephony.SmsStorageMonitor;

        r2 := @parameter2: com.android.internal.telephony.Phone;

        r3 := @parameter3: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        specialinvoke r0.<com.android.internal.telephony.InboundSmsHandler: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.Phone)>("CdmaInboundSmsHandler", r1, r20, r2);

        $r4 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z0 = virtualinvoke $r4.<android.content.res.Resources: boolean getBoolean(int)>(17891432);

        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean mCheckForDuplicatePortsInOmadmWapPush> = $z0;

        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaSMSDispatcher mSmsDispatcher> = r3;

        $r5 = r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        $r6 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: android.os.Handler getHandler()>();

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void setOnNewCdmaSms(android.os.Handler,int,java.lang.Object)>($r6, 1, null);

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.CellBroadcastServiceManager mCellBroadcastServiceManager>;

        virtualinvoke $r7.<com.android.internal.telephony.CellBroadcastServiceManager: void enable()>();

        $r8 = new android.os.RemoteCallback;

        $r9 = new com.android.internal.telephony.cdma._$$Lambda$CdmaInboundSmsHandler$sD3UQ6e4SE9ZbPjDZ9bEr_XRoaA;

        specialinvoke $r9.<com.android.internal.telephony.cdma._$$Lambda$CdmaInboundSmsHandler$sD3UQ6e4SE9ZbPjDZ9bEr_XRoaA: void <init>(com.android.internal.telephony.cdma.CdmaInboundSmsHandler)>(r0);

        specialinvoke $r8.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r9);

        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: android.os.RemoteCallback mScpCallback> = $r8;

        $z1 = <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean TEST_MODE>;

        if $z1 == 0 goto label2;

        $r10 = <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaCbTestBroadcastReceiver sTestBroadcastReceiver>;

        if $r10 != null goto label1;

        $r16 = new com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaCbTestBroadcastReceiver;

        specialinvoke $r16.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaCbTestBroadcastReceiver: void <init>(com.android.internal.telephony.cdma.CdmaInboundSmsHandler)>(r0);

        <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaCbTestBroadcastReceiver sTestBroadcastReceiver> = $r16;

        $r17 = new android.content.IntentFilter;

        specialinvoke $r17.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r17.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.internal.telephony.cdma.TEST_TRIGGER_CELL_BROADCAST");

        $r18 = <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaCbTestBroadcastReceiver sTestBroadcastReceiver>;

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r18, $r17);

     label1:
        $r11 = <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaScpTestBroadcastReceiver sTestScpBroadcastReceiver>;

        if $r11 != null goto label2;

        $r12 = new com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaScpTestBroadcastReceiver;

        specialinvoke $r12.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaScpTestBroadcastReceiver: void <init>(com.android.internal.telephony.cdma.CdmaInboundSmsHandler)>(r0);

        <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaScpTestBroadcastReceiver sTestScpBroadcastReceiver> = $r12;

        $r13 = new android.content.IntentFilter;

        specialinvoke $r13.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r13.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.internal.telephony.cdma.TEST_TRIGGER_SCP_MESSAGE");

        $r14 = <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaInboundSmsHandler$CdmaScpTestBroadcastReceiver sTestScpBroadcastReceiver>;

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r14, $r13);

     label2:
        return;
    }

    static void access$000(com.android.internal.telephony.cdma.CdmaInboundSmsHandler, java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>(r1);

        return;
    }

    static byte[] access$100(com.android.internal.telephony.cdma.CdmaInboundSmsHandler, java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        java.lang.String r1;
        byte[] $r2;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] decodeHexString(java.lang.String)>(r1);

        return $r2;
    }

    static void access$200(com.android.internal.telephony.cdma.CdmaInboundSmsHandler, java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>(r1);

        return;
    }

    static com.android.internal.telephony.CellBroadcastServiceManager access$300(com.android.internal.telephony.cdma.CdmaInboundSmsHandler)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        com.android.internal.telephony.CellBroadcastServiceManager $r1;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.CellBroadcastServiceManager mCellBroadcastServiceManager>;

        return $r1;
    }

    static byte[] access$400(com.android.internal.telephony.cdma.CdmaInboundSmsHandler, java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        java.lang.String r1;
        byte[] $r2;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] decodeHexString(java.lang.String)>(r1);

        return $r2;
    }

    static void access$500(com.android.internal.telephony.cdma.CdmaInboundSmsHandler, java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>(r1);

        return;
    }

    static byte[] access$600(com.android.internal.telephony.cdma.CdmaInboundSmsHandler, java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        java.lang.String r1;
        byte[] $r2;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] decodeHexString(java.lang.String)>(r1);

        return $r2;
    }

    static void access$700(com.android.internal.telephony.cdma.CdmaInboundSmsHandler, java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>(r1);

        return;
    }

    static android.os.RemoteCallback access$800(com.android.internal.telephony.cdma.CdmaInboundSmsHandler)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        android.os.RemoteCallback $r1;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: android.os.RemoteCallback mScpCallback>;

        return $r1;
    }

    static com.android.internal.telephony.CellBroadcastServiceManager access$900(com.android.internal.telephony.cdma.CdmaInboundSmsHandler)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        com.android.internal.telephony.CellBroadcastServiceManager $r1;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.CellBroadcastServiceManager mCellBroadcastServiceManager>;

        return $r1;
    }

    private void addVoicemailSmsToMetrics()
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.metrics.TelephonyMetrics $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.Phone: int getPhoneId()>();

        virtualinvoke $r2.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeIncomingVoiceMailSms(int,java.lang.String)>($i0, "3gpp2");

        return;
    }

    private static boolean checkDuplicatePortOmadmWapPush(byte[], int)
    {
        byte[] r0, r4;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        com.android.internal.telephony.WspTypeDecoder $r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2, $r3;

        r4 := @parameter0: byte[];

        i5 := @parameter1: int;

        i6 = i5 + 4;

        $i0 = lengthof r4;

        $i1 = $i0 - i6;

        r0 = newarray (byte)[$i1];

        $i2 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i6, r0, 0, $i2);

        $r1 = new com.android.internal.telephony.WspTypeDecoder;

        specialinvoke $r1.<com.android.internal.telephony.WspTypeDecoder: void <init>(byte[])>(r0);

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.WspTypeDecoder: boolean decodeUintvarInteger(int)>(2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i3 = virtualinvoke $r1.<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()>();

        $i4 = 2 + $i3;

        $z1 = virtualinvoke $r1.<com.android.internal.telephony.WspTypeDecoder: boolean decodeContentType(int)>($i4);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r2 = "application/vnd.syncml.notification";

        $r3 = virtualinvoke $r1.<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z2;
    }

    private void handleVoicemailTeleservice(com.android.internal.telephony.cdma.SmsMessage)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        com.android.internal.telephony.cdma.SmsMessage r5;
        com.android.internal.telephony.Phone $r7;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r5 := @parameter0: com.android.internal.telephony.cdma.SmsMessage;

        i0 = virtualinvoke r5.<com.android.internal.telephony.cdma.SmsMessage: int getNumOfVoicemails()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Voicemail count=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>($r4);

        if i0 >= 0 goto label1;

        i1 = -1;

        goto label2;

     label1:
        i1 = i0;

        if i0 <= 99 goto label2;

        i1 = 99;

     label2:
        $r7 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.Phone mPhone>;

        virtualinvoke $r7.<com.android.internal.telephony.Phone: void setVoiceMessageCount(int)>(i1);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void addVoicemailSmsToMetrics()>();

        return;
    }

    public static com.android.internal.telephony.cdma.CdmaInboundSmsHandler makeInboundSmsHandler(android.content.Context, com.android.internal.telephony.SmsStorageMonitor, com.android.internal.telephony.Phone, com.android.internal.telephony.cdma.CdmaSMSDispatcher)
    {
        com.android.internal.telephony.SmsStorageMonitor r0;
        com.android.internal.telephony.Phone r1;
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r2;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler $r3;
        android.content.Context r4;

        r4 := @parameter0: android.content.Context;

        r0 := @parameter1: com.android.internal.telephony.SmsStorageMonitor;

        r1 := @parameter2: com.android.internal.telephony.Phone;

        r2 := @parameter3: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        $r3 = new com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        specialinvoke $r3.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void <init>(android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.Phone,com.android.internal.telephony.cdma.CdmaSMSDispatcher)>(r4, r0, r1, r2);

        virtualinvoke $r3.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void start()>();

        return $r3;
    }

    private int processCdmaWapPdu(byte[], int, java.lang.String, java.lang.String, long)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        int i0, $i12, $i16, $i17, i18, i19, i20, i21, i22, i24, i25, i26, $i27, $i28, $i29, $i30, $i31, $i32;
        java.lang.String r1, r2, $r22, $r27, $r31, $r34;
        long l1;
        short s2, s3, s4, $s9, $s11, $s13, $s15;
        byte b5, $b6, $b7, $b8, $b10, $b14, b23;
        boolean $z0, $z1;
        java.lang.StringBuilder $r17, $r25;
        byte[] r23, r28;
        com.android.internal.telephony.TelephonyComponentFactory $r29, $r32;
        java.lang.Class $r30;
        android.content.Context $r33;
        com.android.internal.telephony.Phone $r35;
        com.android.internal.telephony.InboundSmsTracker $r36;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r23 := @parameter0: byte[];

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        l1 := @parameter4: long;

        i18 = 0 + 1;

        $b6 = r23[0];

        s2 = $b6 & 255;

        if s2 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>("Received a WAP SMS which is not WDP. Discard.");

        return 1;

     label1:
        i19 = i18 + 1;

        $b7 = r23[i18];

        s3 = $b7 & 255;

        i20 = i19 + 1;

        $b8 = r23[i19];

        s4 = $b8 & 255;

        if s4 < s3 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WDP bad segment #");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s4);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expecting 0-");

        $i17 = s3 - 1;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void loge(java.lang.String)>($r22);

        return 1;

     label2:
        i21 = 0;

        if s4 != 0 goto label4;

        i22 = i20 + 1;

        b23 = r23[i20];

        i24 = i22 + 1;

        $s9 = b23 & 255;

        $i12 = $s9 << 8;

        $b10 = r23[i22];

        $s11 = $b10 & 255;

        i21 = $i12 | $s11;

        i25 = i24 + 1;

        b5 = r23[i24];

        i20 = i25 + 1;

        $s13 = b5 & 255;

        $i16 = $s13 << 8;

        $b14 = r23[i25];

        $s15 = $b14 & 255;

        i26 = $i16 | $s15;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean mCheckForDuplicatePortsInOmadmWapPush>;

        if $z0 == 0 goto label3;

        $z1 = staticinvoke <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean checkDuplicatePortOmadmWapPush(byte[],int)>(r23, i20);

        if $z1 == 0 goto label3;

        i20 = i20 + 4;

        goto label5;

     label3:
        goto label5;

     label4:
        i26 = 0;

     label5:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received WAP PDU. Type = ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", originator = ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", src-port = ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dst-port = ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ID = ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", segment# = ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s4);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s3);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>($r27);

        $i27 = lengthof r23;

        $i28 = $i27 - i20;

        r28 = newarray (byte)[$i28];

        $i29 = lengthof r23;

        $i30 = $i29 - i20;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r23, i20, r28, 0, $i30);

        $r29 = staticinvoke <com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory getInstance()>();

        $r30 = class "Lcom/android/internal/telephony/InboundSmsTracker;";

        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>();

        $r32 = virtualinvoke $r29.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.TelephonyComponentFactory inject(java.lang.String)>($r31);

        $r33 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: android.content.Context mContext>;

        $r34 = staticinvoke <com.android.internal.telephony.HexDump: java.lang.String toHexString(byte[])>(r28);

        $r35 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.Phone mPhone>;

        $i31 = virtualinvoke $r35.<com.android.internal.telephony.Phone: int getSubId()>();

        $r36 = virtualinvoke $r32.<com.android.internal.telephony.TelephonyComponentFactory: com.android.internal.telephony.InboundSmsTracker makeInboundSmsTracker(android.content.Context,byte[],long,int,boolean,java.lang.String,java.lang.String,int,int,int,boolean,java.lang.String,boolean,int)>($r33, r28, l1, i26, 1, r1, r2, i0, s4, s3, 1, $r34, 0, $i31);

        $i32 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int addTrackerToRawTableAndSendMessage(com.android.internal.telephony.InboundSmsTracker,boolean)>($r36, 0);

        return $i32;
    }

    private static int resultToCause(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == -1 goto label3;

        if i0 == 1 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        return 39;

     label1:
        return 4;

     label2:
        return 35;

     label3:
        return 0;
    }

    protected void acknowledgeLastIncomingSms(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;
        com.android.internal.telephony.CommandsInterface $r3;
        byte[] $r4;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        i1 = staticinvoke <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int resultToCause(int)>(i0);

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.Phone mPhone>;

        $r3 = $r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)>(z0, i1, r1);

        if i1 != 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastDispatchedSmsFingerprint>;

        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastAcknowledgedSmsFingerprint> = $r4;

     label1:
        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastDispatchedSmsFingerprint> = null;

        return;
    }

    protected int dispatchMessageRadioSpecific(com.android.internal.telephony.SmsMessageBase)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        com.android.internal.telephony.cdma.SmsMessage r1;
        byte[] r2, r3, $r4;
        int i0, $i1, $i2, $i3, $i5, i6;
        boolean $z0, $z1, $z2, z3, $z4;
        java.lang.String $r5, $r6, $r14, $r16;
        long $l4;
        com.android.internal.telephony.SmsConstants$MessageClass $r7, $r8;
        android.os.RemoteCallback $r9;
        com.android.internal.telephony.CellBroadcastServiceManager $r10, $r17;
        com.android.internal.telephony.cdma.CdmaSMSDispatcher $r11;
        java.lang.StringBuilder $r12;
        com.android.internal.telephony.SmsMessageBase r18;
        com.android.internal.telephony.SmsStorageMonitor $r20;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r18 := @parameter0: com.android.internal.telephony.SmsMessageBase;

        r1 = (com.android.internal.telephony.cdma.SmsMessage) r18;

        $i1 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: int getMessageType()>();

        if 1 != $i1 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        if z3 == 0 goto label03;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>("Broadcast type message");

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.CellBroadcastServiceManager mCellBroadcastServiceManager>;

        virtualinvoke $r17.<com.android.internal.telephony.CellBroadcastServiceManager: void sendCdmaMessageToHandler(com.android.internal.telephony.cdma.SmsMessage)>(r1);

        return 1;

     label03:
        r2 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: byte[] getIncomingSmsFingerprint()>();

        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastDispatchedSmsFingerprint> = r2;

        r3 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastAcknowledgedSmsFingerprint>;

        if r3 == null goto label04;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r2, r3);

        if $z2 == 0 goto label04;

        return 1;

     label04:
        virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: void parseSms()>();

        i0 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: int getTeleService()>();

        if i0 == 65002 goto label09;

        if i0 == 262144 goto label08;

        i6 = i0;

        tableswitch(i0)
        {
            case 4098: goto label07;
            case 4099: goto label08;
            case 4100: goto label11;
            case 4101: goto label07;
            case 4102: goto label06;
            default: goto label05;
        };

     label05:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported teleservice 0x");

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void loge(java.lang.String)>($r16);

        return 4;

     label06:
        $r10 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.CellBroadcastServiceManager mCellBroadcastServiceManager>;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: android.os.RemoteCallback mScpCallback>;

        virtualinvoke $r10.<com.android.internal.telephony.CellBroadcastServiceManager: void sendCdmaScpMessageToHandler(com.android.internal.telephony.cdma.SmsMessage,android.os.RemoteCallback)>(r1, $r9);

        return 1;

     label07:
        i6 = i0;

        $z1 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: boolean isStatusReportMessage()>();

        if $z1 == 0 goto label11;

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaSMSDispatcher mSmsDispatcher>;

        virtualinvoke $r11.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendStatusReportMessage(com.android.internal.telephony.cdma.SmsMessage)>(r1);

        return 1;

     label08:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void handleVoicemailTeleservice(com.android.internal.telephony.cdma.SmsMessage)>(r1);

        return 1;

     label09:
        $z0 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: boolean preprocessCdmaFdeaWap()>();

        if $z0 != 0 goto label10;

        return 1;

     label10:
        i6 = 4100;

     label11:
        $r20 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.SmsStorageMonitor mStorageMonitor>;

        $z4 = virtualinvoke $r20.<com.android.internal.telephony.SmsStorageMonitor: boolean isStorageAvailable()>();

        if $z4 != 0 goto label12;

        $r7 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()>();

        $r8 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_0>;

        if $r7 == $r8 goto label12;

        return 3;

     label12:
        if 4100 != i6 goto label13;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: byte[] getUserData()>();

        $i3 = r1.<com.android.internal.telephony.cdma.SmsMessage: int mMessageRef>;

        $r5 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: java.lang.String getOriginatingAddress()>();

        $r6 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: java.lang.String getDisplayOriginatingAddress()>();

        $l4 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: long getTimestampMillis()>();

        $i5 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int processCdmaWapPdu(byte[],int,java.lang.String,java.lang.String,long)>($r4, $i3, $r5, $r6, $l4);

        return $i5;

     label13:
        $i2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>(r18);

        return $i2;
    }

    protected boolean is3gpp2()
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        return 1;
    }

    public void lambda$new$0$CdmaInboundSmsHandler(android.os.Bundle)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        com.android.internal.telephony.cdma.sms.BearerData $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.io.ByteArrayOutputStream $r3;
        java.io.DataOutputStream $r4;
        java.lang.String $r5, r16;
        byte[] $r6, $r7, $r10, r19;
        com.android.internal.telephony.Phone $r8;
        com.android.internal.telephony.CommandsInterface $r9;
        java.lang.Throwable $r11, $r12, $r13, $r14;
        android.os.Bundle r15;
        java.util.ArrayList r17;
        com.android.internal.telephony.cdma.sms.CdmaSmsAddress r21;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r15 := @parameter0: android.os.Bundle;

        if r15 != null goto label01;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void loge(java.lang.String)>("SCP results error: missing extras");

        return;

     label01:
        r16 = virtualinvoke r15.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sender");

        if r16 != null goto label02;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void loge(java.lang.String)>("SCP results error: missing sender extra.");

        return;

     label02:
        r17 = virtualinvoke r15.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("results");

        if r17 != null goto label03;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void loge(java.lang.String)>("SCP results error: missing results extra.");

        return;

     label03:
        $r2 = new com.android.internal.telephony.cdma.sms.BearerData;

        specialinvoke $r2.<com.android.internal.telephony.cdma.sms.BearerData: void <init>()>();

        $r2.<com.android.internal.telephony.cdma.sms.BearerData: int messageType> = 2;

        $i0 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: int getNextMessageId()>();

        $r2.<com.android.internal.telephony.cdma.sms.BearerData: int messageId> = $i0;

        $r2.<com.android.internal.telephony.cdma.sms.BearerData: java.util.ArrayList serviceCategoryProgramResults> = r17;

        r19 = staticinvoke <com.android.internal.telephony.cdma.sms.BearerData: byte[] encode(com.android.internal.telephony.cdma.sms.BearerData)>($r2);

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>(int)>(100);

        $r4 = new java.io.DataOutputStream;

        specialinvoke $r4.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r3);

     label04:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(4102);

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(0);

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(0);

     label05:
        $r5 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCodeForSms(java.lang.String)>(r16);

        r21 = staticinvoke <com.android.internal.telephony.cdma.sms.CdmaSmsAddress: com.android.internal.telephony.cdma.sms.CdmaSmsAddress parse(java.lang.String)>($r5);

        $i1 = r21.<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: int digitMode>;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(int)>($i1);

        $i2 = r21.<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: int numberMode>;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(int)>($i2);

        $i3 = r21.<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: int ton>;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(int)>($i3);

        $i4 = r21.<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: int numberPlan>;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(int)>($i4);

        $i5 = r21.<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: int numberOfDigits>;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(int)>($i5);

        $r7 = r21.<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: byte[] origBytes>;

        $r6 = r21.<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: byte[] origBytes>;

        $i6 = lengthof $r6;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[],int,int)>($r7, 0, $i6);

        virtualinvoke $r4.<java.io.DataOutputStream: void write(int)>(0);

        virtualinvoke $r4.<java.io.DataOutputStream: void write(int)>(0);

        virtualinvoke $r4.<java.io.DataOutputStream: void write(int)>(0);

        $i7 = lengthof r19;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(int)>($i7);

        $i8 = lengthof r19;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[],int,int)>(r19, 0, $i8);

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.Phone mPhone>;

        $r9 = $r8.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        $r10 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        interfaceinvoke $r9.<com.android.internal.telephony.CommandsInterface: void sendCdmaSms(byte[],android.os.Message)>($r10, null);

     label06:
        virtualinvoke $r4.<java.io.DataOutputStream: void close()>();

     label07:
        goto label12;

     label08:
        $r11 := @caughtexception;

        goto label15;

     label09:
        $r14 := @caughtexception;

     label10:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void loge(java.lang.String,java.lang.Throwable)>("exception creating SCP results PDU", $r14);

     label11:
        virtualinvoke $r4.<java.io.DataOutputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r13 := @caughtexception;

     label14:
        return;

     label15:
        virtualinvoke $r4.<java.io.DataOutputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r12 := @caughtexception;

     label18:
        throw $r11;

        catch java.io.IOException from label04 to label05 with label09;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.io.IOException from label06 to label07 with label13;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label15 to label16 with label17;
    }

    protected void onQuitting()
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.CommandsInterface $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.Phone mPhone>;

        $r2 = $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: android.os.Handler getHandler()>();

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void unSetOnNewCdmaSms(android.os.Handler)>($r3);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>("unregistered for 3GPP2 SMS");

        specialinvoke r0.<com.android.internal.telephony.InboundSmsHandler: void onQuitting()>();

        return;
    }
}
