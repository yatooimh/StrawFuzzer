public class com.android.internal.telephony.cdnr.CarrierDisplayNameResolver extends java.lang.Object
{
    private static final boolean DBG;
    private static final com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule DEFAULT_CARRIER_DISPLAY_NAME_RULE;
    private static final int DEFAULT_CARRIER_NAME_DISPLAY_CONDITION_BITMASK;
    private static final java.util.List EF_SOURCE_PRIORITY;
    private static final java.lang.String TAG;
    private final android.telephony.CarrierConfigManager mCCManager;
    private com.android.internal.telephony.cdnr.CarrierDisplayNameData mCarrierDisplayNameData;
    private final android.content.Context mContext;
    private final android.util.SparseArray mEf;
    private final com.android.internal.telephony.LocalLog mLocalLog;
    private final com.android.internal.telephony.GsmCdmaPhone mPhone;

    static void <clinit>()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule $r0;
        java.lang.Integer[] $r1;
        java.lang.Integer $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.util.List $r12;

        <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: java.lang.String TAG> = "CDNR";

        <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: int DEFAULT_CARRIER_NAME_DISPLAY_CONDITION_BITMASK> = 0;

        <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: boolean DBG> = 1;

        $r0 = new com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule;

        specialinvoke $r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule: void <init>(int)>(0);

        <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule DEFAULT_CARRIER_DISPLAY_NAME_RULE> = $r0;

        $r1 = newarray (java.lang.Integer)[10];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r1[2] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r1[3] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r1[4] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r1[5] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r1[6] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r1[7] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r1[8] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r1[9] = $r11;

        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: java.util.List EF_SOURCE_PRIORITY> = $r12;

        return;
    }

    public void <init>(com.android.internal.telephony.GsmCdmaPhone)
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        com.android.internal.telephony.GsmCdmaPhone r1;
        android.content.Context r2;
        android.util.SparseArray $r3;
        com.android.internal.telephony.LocalLog $r4;
        java.lang.Object $r5;
        android.telephony.CarrierConfigManager $r6;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        r1 := @parameter0: com.android.internal.telephony.GsmCdmaPhone;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf> = $r3;

        $r4 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r4.<com.android.internal.telephony.LocalLog: void <init>(int)>(32);

        r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.LocalLog mLocalLog> = $r4;

        r2 = virtualinvoke r1.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.content.Context mContext> = r2;

        r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.GsmCdmaPhone mPhone> = r1;

        $r5 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r6 = (android.telephony.CarrierConfigManager) $r5;

        r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.telephony.CarrierConfigManager mCCManager> = $r6;

        return;
    }

    private android.os.PersistableBundle getCarrierConfig()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        android.os.PersistableBundle r1, r4;
        com.android.internal.telephony.GsmCdmaPhone $r2;
        android.telephony.CarrierConfigManager $r3;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        $r3 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.telephony.CarrierConfigManager mCCManager>;

        $r2 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        r1 = virtualinvoke $r3.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        r4 = r1;

        if r1 != null goto label1;

        r4 = staticinvoke <android.telephony.CarrierConfigManager: android.os.PersistableBundle getDefaultConfig()>();

     label1:
        return r4;
    }

    private com.android.internal.telephony.cdnr.CarrierDisplayNameData getCarrierDisplayNameFromEf()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        java.lang.String r1, r2, r17, r18;
        boolean z0, $z1, $z2, $z3, z4, z5, $z6, $z7;
        java.util.List r3, r15, r16;
        android.telephony.ServiceState $r4, $r5;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder $r6, $r7, $r8, $r9, $r10;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData $r11;
        java.lang.Object $r12;
        com.android.internal.telephony.uicc.IccRecords$PlmnNetworkName $r13;
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule r14;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        r14 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule getDisplayRule()>();

        $r4 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.telephony.ServiceState getServiceState()>();

        r1 = virtualinvoke $r4.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        r15 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: java.util.List getEfSpdi()>();

        $r5 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.telephony.ServiceState getServiceState()>();

        $z1 = virtualinvoke $r5.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z1 == 0 goto label1;

        $z3 = interfaceinvoke r15.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z3 != 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        z0 = virtualinvoke r14.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule: boolean shouldShowSpn(boolean)>(z4);

        z5 = virtualinvoke r14.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule: boolean shouldShowPnn(boolean)>(z4);

        r2 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: java.lang.String getEfSpn()>();

        r3 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: java.util.List getEfOpl()>();

        r16 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: java.util.List getEfPnn()>();

        r17 = null;

        $z6 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z6 == 0 goto label4;

        $z2 = interfaceinvoke r16.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        r17 = "";

        goto label4;

     label3:
        $r12 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = (com.android.internal.telephony.uicc.IccRecords$PlmnNetworkName) $r12;

        r17 = staticinvoke <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: java.lang.String getPlmnNetworkName(com.android.internal.telephony.uicc.IccRecords$PlmnNetworkName)>($r13);

     label4:
        r18 = r17;

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r17);

        if $z7 == 0 goto label5;

        r18 = r1;

     label5:
        $r6 = new com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder;

        specialinvoke $r6.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: void <init>()>();

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setSpn(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setShowSpn(boolean)>(z0);

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setPlmn(java.lang.String)>(r18);

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setShowPlmn(boolean)>(z5);

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData build()>();

        return $r11;
    }

    private com.android.internal.telephony.cdnr.CarrierDisplayNameData getCarrierDisplayNameFromWifiCallingOverride(com.android.internal.telephony.cdnr.CarrierDisplayNameData)
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        java.lang.String r1, $r5, $r6, $r7, r22, r23;
        android.content.Context $r2;
        android.telephony.ServiceState $r3;
        int $i0;
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$WfcCarrierNameFormatter $r4;
        boolean $z0, $z1, $z2, z3, z4;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        android.content.res.Configuration $r15;
        java.util.Locale $r16;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData r17;
        android.os.PersistableBundle r18;
        android.content.res.Resources r19;
        java.lang.String[] r20;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        r17 := @parameter0: com.android.internal.telephony.cdnr.CarrierDisplayNameData;

        r18 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.os.PersistableBundle getCarrierConfig()>();

        z3 = virtualinvoke r18.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("wfc_spn_use_root_locale");

        $r2 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.content.Context mContext>;

        r19 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        if z3 == 0 goto label1;

        $r15 = virtualinvoke r19.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r16 = <java.util.Locale: java.util.Locale ROOT>;

        virtualinvoke $r15.<android.content.res.Configuration: void setLocale(java.util.Locale)>($r16);

     label1:
        r20 = virtualinvoke r19.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236137);

        $r3 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.telephony.ServiceState getServiceState()>();

        $i0 = virtualinvoke $r3.<android.telephony.ServiceState: int getState()>();

        if $i0 != 3 goto label2;

        z4 = 1;

        goto label3;

     label2:
        z4 = 0;

     label3:
        $r4 = new com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$WfcCarrierNameFormatter;

        specialinvoke $r4.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$WfcCarrierNameFormatter: void <init>(android.os.PersistableBundle,java.lang.String[],boolean)>(r18, r20, z4);

        $r5 = virtualinvoke r17.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getSpn()>();

        r22 = virtualinvoke $r4.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$WfcCarrierNameFormatter: java.lang.String formatVoiceName(java.lang.String)>($r5);

        $r6 = virtualinvoke r17.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getSpn()>();

        r1 = virtualinvoke $r4.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$WfcCarrierNameFormatter: java.lang.String formatDataName(java.lang.String)>($r6);

        $r7 = virtualinvoke r17.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getPlmn()>();

        r23 = virtualinvoke $r4.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$WfcCarrierNameFormatter: java.lang.String formatVoiceName(java.lang.String)>($r7);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r22);

        if $z0 != 0 goto label4;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 != 0 goto label4;

        $r11 = new com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder;

        specialinvoke $r11.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: void <init>()>();

        $r12 = virtualinvoke $r11.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setSpn(java.lang.String)>(r22);

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setDataSpn(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setShowSpn(boolean)>(1);

        r17 = virtualinvoke $r14.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData build()>();

        goto label5;

     label4:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r23);

        if $z1 != 0 goto label5;

        $r8 = new com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder;

        specialinvoke $r8.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: void <init>()>();

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setPlmn(java.lang.String)>(r23);

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setShowPlmn(boolean)>(1);

        r17 = virtualinvoke $r10.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData build()>();

     label5:
        return r17;
    }

    private static int getCombinedRegState(android.telephony.ServiceState)
    {
        android.telephony.ServiceState r0;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.telephony.ServiceState;

        $i0 = virtualinvoke r0.<android.telephony.ServiceState: int getState()>();

        if $i0 == 0 goto label1;

        $i2 = virtualinvoke r0.<android.telephony.ServiceState: int getDataRegistrationState()>();

        return $i2;

     label1:
        $i1 = virtualinvoke r0.<android.telephony.ServiceState: int getState()>();

        return $i1;
    }

    private com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule getDisplayRule()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        android.util.SparseArray $r1, $r3, $r7;
        int $i0, $i1, $i2, i3;
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule $r2, $r6;
        java.lang.Object $r4, $r8;
        com.android.internal.telephony.cdnr.EfData $r5, $r9;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        i3 = 0;

     label1:
        $r1 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i3 >= $i0 goto label3;

        $r3 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r5 = (com.android.internal.telephony.cdnr.EfData) $r4;

        $i1 = interfaceinvoke $r5.<com.android.internal.telephony.cdnr.EfData: int getServiceProviderNameDisplayCondition()>();

        if $i1 == -1 goto label2;

        $r6 = new com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule;

        $r7 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r9 = (com.android.internal.telephony.cdnr.EfData) $r8;

        $i2 = interfaceinvoke $r9.<com.android.internal.telephony.cdnr.EfData: int getServiceProviderNameDisplayCondition()>();

        specialinvoke $r6.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule: void <init>(int)>($i2);

        return $r6;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r2 = <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver$CarrierDisplayNameConditionRule DEFAULT_CARRIER_DISPLAY_NAME_RULE>;

        return $r2;
    }

    private java.util.List getEfOpl()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        android.util.SparseArray $r1, $r3, $r7;
        int $i0, i1;
        java.util.List $r2, $r6, $r10;
        java.lang.Object $r4, $r8;
        com.android.internal.telephony.cdnr.EfData $r5, $r9;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.internal.telephony.cdnr.EfData) $r4;

        $r6 = interfaceinvoke $r5.<com.android.internal.telephony.cdnr.EfData: java.util.List getOperatorPlmnList()>();

        if $r6 == null goto label2;

        $r7 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r9 = (com.android.internal.telephony.cdnr.EfData) $r8;

        $r10 = interfaceinvoke $r9.<com.android.internal.telephony.cdnr.EfData: java.util.List getOperatorPlmnList()>();

        return $r10;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r2;
    }

    private java.util.List getEfPnn()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        android.util.SparseArray $r1, $r3, $r7;
        int $i0, i1;
        java.util.List $r2, $r6, $r10;
        java.lang.Object $r4, $r8;
        com.android.internal.telephony.cdnr.EfData $r5, $r9;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.internal.telephony.cdnr.EfData) $r4;

        $r6 = interfaceinvoke $r5.<com.android.internal.telephony.cdnr.EfData: java.util.List getPlmnNetworkNameList()>();

        if $r6 == null goto label2;

        $r7 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r9 = (com.android.internal.telephony.cdnr.EfData) $r8;

        $r10 = interfaceinvoke $r9.<com.android.internal.telephony.cdnr.EfData: java.util.List getPlmnNetworkNameList()>();

        return $r10;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r2;
    }

    private java.util.List getEfSpdi()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        android.util.SparseArray $r1, $r3, $r7;
        int $i0, i1;
        java.util.List $r2, $r6, $r10;
        java.lang.Object $r4, $r8;
        com.android.internal.telephony.cdnr.EfData $r5, $r9;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.internal.telephony.cdnr.EfData) $r4;

        $r6 = interfaceinvoke $r5.<com.android.internal.telephony.cdnr.EfData: java.util.List getServiceProviderDisplayInformation()>();

        if $r6 == null goto label2;

        $r7 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r9 = (com.android.internal.telephony.cdnr.EfData) $r8;

        $r10 = interfaceinvoke $r9.<com.android.internal.telephony.cdnr.EfData: java.util.List getServiceProviderDisplayInformation()>();

        return $r10;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r2;
    }

    private java.lang.String getEfSpn()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        android.util.SparseArray $r1, $r2, $r6;
        int $i0, i1;
        java.lang.Object $r3, $r7;
        com.android.internal.telephony.cdnr.EfData $r4, $r8;
        java.lang.String $r5, $r9;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r4 = (com.android.internal.telephony.cdnr.EfData) $r3;

        $r5 = interfaceinvoke $r4.<com.android.internal.telephony.cdnr.EfData: java.lang.String getServiceProviderName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 != 0 goto label2;

        $r6 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r8 = (com.android.internal.telephony.cdnr.EfData) $r7;

        $r9 = interfaceinvoke $r8.<com.android.internal.telephony.cdnr.EfData: java.lang.String getServiceProviderName()>();

        return $r9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return "";
    }

    private com.android.internal.telephony.cdnr.CarrierDisplayNameData getOutOfServiceDisplayName(com.android.internal.telephony.cdnr.CarrierDisplayNameData)
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData r1, $r24;
        com.android.internal.telephony.GsmCdmaPhone $r2, $r5, $r10;
        boolean $z1, z2, z3, $z4, $z5;
        android.content.Context $r3, $r14;
        android.content.res.Resources $r4, $r15;
        com.android.internal.telephony.uicc.UiccCardApplication $r6, r9;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState $r7, $r8;
        com.android.internal.telephony.ServiceStateTracker $r11;
        android.telephony.ServiceState $r12;
        int $i0;
        java.lang.String r13, $r17, $r19;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder $r16, $r18, $r20, $r21, $r22, $r23;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        r1 := @parameter0: com.android.internal.telephony.cdnr.CarrierDisplayNameData;

        $r2 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        r9 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication()>();

        if r9 == null goto label1;

        $r5 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication()>();

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState getState()>();

        $r8 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState APPSTATE_READY>;

        if $r7 != $r8 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        z3 = 0;

        $r10 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        $z4 = virtualinvoke $r11.<com.android.internal.telephony.ServiceStateTracker: boolean shouldForceDisplayNoService()>();

        if $z4 == 0 goto label3;

        z3 = 0;

        if z2 != 0 goto label3;

        z3 = 1;

     label3:
        $r12 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.telephony.ServiceState getServiceState()>();

        $i0 = virtualinvoke $r12.<android.telephony.ServiceState: int getState()>();

        if $i0 == 3 goto label5;

        if z3 != 0 goto label5;

        $z1 = staticinvoke <com.android.internal.telephony.Phone: boolean isEmergencyCallOnly()>();

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        $r3 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r13 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17040083);

        goto label6;

     label5:
        $r14 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        r13 = virtualinvoke $r15.<android.content.res.Resources: java.lang.String getString(int)>(17040442);

     label6:
        $r16 = new com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder;

        specialinvoke $r16.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: void <init>()>();

        $r17 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getSpn()>();

        $r18 = virtualinvoke $r16.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setSpn(java.lang.String)>($r17);

        $r19 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String getDataSpn()>();

        $r20 = virtualinvoke $r18.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setDataSpn(java.lang.String)>($r19);

        $z5 = virtualinvoke r1.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: boolean shouldShowSpn()>();

        $r21 = virtualinvoke $r20.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setShowSpn(boolean)>($z5);

        $r22 = virtualinvoke $r21.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setPlmn(java.lang.String)>(r13);

        $r23 = virtualinvoke $r22.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder setShowPlmn(boolean)>(1);

        $r24 = virtualinvoke $r23.<com.android.internal.telephony.cdnr.CarrierDisplayNameData$Builder: com.android.internal.telephony.cdnr.CarrierDisplayNameData build()>();

        return $r24;
    }

    private static java.lang.String getPlmnNetworkName(com.android.internal.telephony.uicc.IccRecords$PlmnNetworkName)
    {
        com.android.internal.telephony.uicc.IccRecords$PlmnNetworkName r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @parameter0: com.android.internal.telephony.uicc.IccRecords$PlmnNetworkName;

        if r0 != null goto label1;

        return "";

     label1:
        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords$PlmnNetworkName: java.lang.String fullName>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label2;

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords$PlmnNetworkName: java.lang.String fullName>;

        return $r4;

     label2:
        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords$PlmnNetworkName: java.lang.String shortName>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label3;

        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords$PlmnNetworkName: java.lang.String shortName>;

        return $r3;

     label3:
        return "";
    }

    private android.telephony.ServiceState getServiceState()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        com.android.internal.telephony.GsmCdmaPhone $r1;
        com.android.internal.telephony.ServiceStateTracker $r2;
        android.telephony.ServiceState $r3;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        $r1 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState getServiceState()>();

        return $r3;
    }

    private static int getSourcePriority(int)
    {
        int i0, i1, i2;
        java.util.List $r0;
        java.lang.Integer $r1;

        i1 := @parameter0: int;

        $r0 = <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: java.util.List EF_SOURCE_PRIORITY>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        i0 = interfaceinvoke $r0.<java.util.List: int indexOf(java.lang.Object)>($r1);

        i2 = i0;

        if i0 != -1 goto label1;

        i2 = 2147483647;

     label1:
        return i2;
    }

    private void resolveCarrierDisplayName()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        java.lang.StringBuilder $r1, $r6, $r15;
        java.lang.String $r4, $r9, $r12, $r13, $r18;
        android.telephony.ServiceState $r5;
        int $i1;
        java.lang.Object[] $r10;
        com.android.internal.telephony.LocalLog $r11;
        com.android.internal.telephony.GsmCdmaPhone $r14;
        boolean $z0, $z1;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData r19, r21, $r24;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        r19 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.cdnr.CarrierDisplayNameData getCarrierDisplayNameFromEf()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CarrierName from EF: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CDNR", $r4);

        $r5 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.telephony.ServiceState getServiceState()>();

        $i1 = staticinvoke <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: int getCombinedRegState(android.telephony.ServiceState)>($r5);

        if $i1 != 0 goto label1;

        r21 = r19;

        $r14 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r14.<com.android.internal.telephony.GsmCdmaPhone: boolean isWifiCallingEnabled()>();

        if $z0 == 0 goto label2;

        r21 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.cdnr.CarrierDisplayNameData getCarrierDisplayNameFromWifiCallingOverride(com.android.internal.telephony.cdnr.CarrierDisplayNameData)>(r19);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CarrierName override by wifi-calling ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CDNR", $r18);

        goto label2;

     label1:
        r21 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.cdnr.CarrierDisplayNameData getOutOfServiceDisplayName(com.android.internal.telephony.cdnr.CarrierDisplayNameData)>(r19);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Out of service carrierName ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CDNR", $r9);

     label2:
        $r24 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.cdnr.CarrierDisplayNameData mCarrierDisplayNameData>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r24, r21);

        if $z1 != 0 goto label3;

        $r11 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.LocalLog mLocalLog>;

        $r10 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke r21.<com.android.internal.telephony.cdnr.CarrierDisplayNameData: java.lang.String toString()>();

        $r10[0] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ResolveCarrierDisplayName: %s", $r10);

        virtualinvoke $r11.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r13);

     label3:
        r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.cdnr.CarrierDisplayNameData mCarrierDisplayNameData> = r21;

        return;
    }

    public void dump(com.android.internal.telephony.IndentingPrintWriter)
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        com.android.internal.telephony.IndentingPrintWriter r1;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r5, $r7, $r12;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData $r10;
        com.android.internal.telephony.LocalLog $r15;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        r1 := @parameter0: com.android.internal.telephony.IndentingPrintWriter;

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("CDNR:");

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fields = ");

        $r5 = virtualinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("carrierDisplayNameData = ");

        $r10 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.cdnr.CarrierDisplayNameData mCarrierDisplayNameData>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r12);

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("CDNR local log:");

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r15 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.LocalLog mLocalLog>;

        virtualinvoke $r15.<com.android.internal.telephony.LocalLog: void dump(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    public com.android.internal.telephony.cdnr.CarrierDisplayNameData getCarrierDisplayNameData()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        com.android.internal.telephony.cdnr.CarrierDisplayNameData $r1;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: void resolveCarrierDisplayName()>();

        $r1 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.cdnr.CarrierDisplayNameData mCarrierDisplayNameData>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        com.android.internal.telephony.cdnr.EfData r2;
        java.lang.StringBuilder $r3, $r5, $r11, $r21;
        android.util.SparseArray $r4, $r19;
        int $i0, $i1, i2;
        android.telephony.ServiceState $r7, $r13;
        boolean $z0;
        java.lang.String $r9, $r14, $r16, $r18, $r25, $r40;
        java.lang.Object $r20;
        java.util.List $r28, $r31, $r34, $r37;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        $r4 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i2 >= $i0 goto label2;

        $r19 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r20 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r2 = (com.android.internal.telephony.cdnr.EfData) $r20;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{spnDisplayCondition = ");

        $i1 = interfaceinvoke r2.<com.android.internal.telephony.cdnr.EfData: int getServiceProviderNameDisplayCondition()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", spn = ");

        $r25 = interfaceinvoke r2.<com.android.internal.telephony.cdnr.EfData: java.lang.String getServiceProviderName()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", spdiList = ");

        $r28 = interfaceinvoke r2.<com.android.internal.telephony.cdnr.EfData: java.util.List getServiceProviderDisplayInformation()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pnnList = ");

        $r31 = interfaceinvoke r2.<com.android.internal.telephony.cdnr.EfData: java.util.List getPlmnNetworkNameList()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oplList = ");

        $r34 = interfaceinvoke r2.<com.android.internal.telephony.cdnr.EfData: java.util.List getOperatorPlmnList()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ehplmn = ");

        $r37 = interfaceinvoke r2.<com.android.internal.telephony.cdnr.EfData: java.util.List getEhplmnList()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}, ");

        $r40 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", roamingFromSS = ");

        $r7 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.telephony.ServiceState getServiceState()>();

        $z0 = virtualinvoke $r7.<android.telephony.ServiceState: boolean getRoaming()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", registeredPLMN = ");

        $r13 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.telephony.ServiceState getServiceState()>();

        $r14 = virtualinvoke $r13.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    public void updateEfForBrandOverride(java.lang.String)
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        java.lang.String r1, $r5;
        int i0;
        boolean $z0;
        com.android.internal.telephony.cdnr.BrandOverrideEfData $r2;
        android.util.SparseArray $r3, $r6;
        android.telephony.ServiceState $r4;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: int getSourcePriority(int)>(2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r2 = new com.android.internal.telephony.cdnr.BrandOverrideEfData;

        $r4 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.telephony.ServiceState getServiceState()>();

        $r5 = virtualinvoke $r4.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        specialinvoke $r2.<com.android.internal.telephony.cdnr.BrandOverrideEfData: void <init>(java.lang.String,java.lang.String)>(r1, $r5);

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r2);

     label2:
        return;
    }

    public void updateEfForEri(java.lang.String)
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        java.lang.String r1;
        android.os.PersistableBundle r2;
        int i0;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.telephony.GsmCdmaPhone $r3, $r6;
        com.android.internal.telephony.cdnr.EriEfData $r4;
        android.util.SparseArray $r5, $r7;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.os.PersistableBundle getCarrierConfig()>();

        i0 = staticinvoke <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: int getSourcePriority(int)>(10);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label2;

        $r3 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z1 = virtualinvoke $r3.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdma()>();

        if $z1 != 0 goto label1;

        $r6 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z3 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeCdmaLte()>();

        if $z3 == 0 goto label2;

     label1:
        $z2 = virtualinvoke r2.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("allow_cdma_eri_bool");

        if $z2 == 0 goto label2;

        $r5 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r4 = new com.android.internal.telephony.cdnr.EriEfData;

        specialinvoke $r4.<com.android.internal.telephony.cdnr.EriEfData: void <init>(java.lang.String)>(r1);

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

        goto label3;

     label2:
        $r7 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>(i0);

     label3:
        return;
    }

    public void updateEfFromCarrierConfig(android.os.PersistableBundle)
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        android.os.PersistableBundle r1;
        int i0;
        com.android.internal.telephony.cdnr.CarrierConfigEfData $r2;
        android.util.SparseArray $r3, $r4;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        r1 := @parameter0: android.os.PersistableBundle;

        i0 = staticinvoke <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: int getSourcePriority(int)>(1);

        if r1 != null goto label1;

        $r4 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r2 = new com.android.internal.telephony.cdnr.CarrierConfigEfData;

        specialinvoke $r2.<com.android.internal.telephony.cdnr.CarrierConfigEfData: void <init>(android.os.PersistableBundle)>(r1);

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r2);

     label2:
        return;
    }

    public void updateEfFromRuim(com.android.internal.telephony.uicc.RuimRecords)
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        com.android.internal.telephony.uicc.RuimRecords r1;
        int i0;
        com.android.internal.telephony.cdnr.RuimEfData $r2;
        android.util.SparseArray $r3, $r4;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        r1 := @parameter0: com.android.internal.telephony.uicc.RuimRecords;

        i0 = staticinvoke <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: int getSourcePriority(int)>(6);

        if r1 != null goto label1;

        $r4 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r2 = new com.android.internal.telephony.cdnr.RuimEfData;

        specialinvoke $r2.<com.android.internal.telephony.cdnr.RuimEfData: void <init>(com.android.internal.telephony.uicc.RuimRecords)>(r1);

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r2);

     label2:
        return;
    }

    public void updateEfFromUsim(com.android.internal.telephony.uicc.SIMRecords)
    {
        com.android.internal.telephony.cdnr.CarrierDisplayNameResolver r0;
        com.android.internal.telephony.uicc.SIMRecords r1;
        int i0;
        com.android.internal.telephony.cdnr.UsimEfData $r2;
        android.util.SparseArray $r3, $r4;

        r0 := @this: com.android.internal.telephony.cdnr.CarrierDisplayNameResolver;

        r1 := @parameter0: com.android.internal.telephony.uicc.SIMRecords;

        i0 = staticinvoke <com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: int getSourcePriority(int)>(3);

        if r1 != null goto label1;

        $r4 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.telephony.cdnr.CarrierDisplayNameResolver: android.util.SparseArray mEf>;

        $r2 = new com.android.internal.telephony.cdnr.UsimEfData;

        specialinvoke $r2.<com.android.internal.telephony.cdnr.UsimEfData: void <init>(com.android.internal.telephony.uicc.SIMRecords)>(r1);

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r2);

     label2:
        return;
    }
}
