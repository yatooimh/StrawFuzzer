public class com.android.internal.telephony.dataconnection.AccessNetworksManager extends android.os.Handler
{
    private static final boolean DBG;
    private static final int EVENT_BIND_QUALIFIED_NETWORKS_SERVICE;
    private static final int[] SUPPORTED_APN_TYPES;
    private static final java.lang.String TAG;
    private final android.util.SparseArray mAvailableNetworks;
    private final android.telephony.CarrierConfigManager mCarrierConfigManager;
    private final android.content.BroadcastReceiver mConfigChangedReceiver;
    private com.android.internal.telephony.dataconnection.AccessNetworksManager$AccessNetworksManagerDeathRecipient mDeathRecipient;
    private android.telephony.data.IQualifiedNetworksService mIQualifiedNetworksService;
    private final com.android.internal.telephony.Phone mPhone;
    private final com.android.internal.telephony.RegistrantList mQualifiedNetworksChangedRegistrants;
    private com.android.internal.telephony.dataconnection.AccessNetworksManager$QualifiedNetworksServiceConnection mServiceConnection;
    private java.lang.String mTargetBindingPackageName;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        int[] $r2;

        <com.android.internal.telephony.dataconnection.AccessNetworksManager: int EVENT_BIND_QUALIFIED_NETWORKS_SERVICE> = 1;

        <com.android.internal.telephony.dataconnection.AccessNetworksManager: boolean DBG> = 0;

        $r0 = class "Lcom/android/internal/telephony/dataconnection/AccessNetworksManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.internal.telephony.dataconnection.AccessNetworksManager: java.lang.String TAG> = $r1;

        $r2 = newarray (int)[7];

        $r2[0] = 17;

        $r2[1] = 2;

        $r2[2] = 32;

        $r2[3] = 64;

        $r2[4] = 128;

        $r2[5] = 4;

        $r2[6] = 512;

        <com.android.internal.telephony.dataconnection.AccessNetworksManager: int[] SUPPORTED_APN_TYPES> = $r2;

        return;
    }

    public void <init>(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        android.util.SparseArray $r2;
        com.android.internal.telephony.RegistrantList $r3;
        com.android.internal.telephony.dataconnection.AccessNetworksManager$1 $r4;
        android.content.Context $r5, $r9, $r10, $r13;
        java.lang.Object $r6;
        android.telephony.CarrierConfigManager $r7;
        android.content.IntentFilter $r8;
        java.lang.String $r11, $r19, $r21, r24;
        android.os.UserHandle $r12;
        android.content.BroadcastReceiver $r14;
        android.content.pm.PackageManager$NameNotFoundException $r16;
        java.lang.StringBuilder $r17;
        com.android.internal.telephony.Phone r22;

        r0 := @this: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r22 := @parameter0: com.android.internal.telephony.Phone;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.util.SparseArray mAvailableNetworks> = $r2;

        $r3 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r3.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.RegistrantList mQualifiedNetworksChangedRegistrants> = $r3;

        $r4 = new com.android.internal.telephony.dataconnection.AccessNetworksManager$1;

        specialinvoke $r4.<com.android.internal.telephony.dataconnection.AccessNetworksManager$1: void <init>(com.android.internal.telephony.dataconnection.AccessNetworksManager)>(r0);

        r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.content.BroadcastReceiver mConfigChangedReceiver> = $r4;

        r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.Phone mPhone> = r22;

        $r5 = virtualinvoke r22.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r7 = (android.telephony.CarrierConfigManager) $r6;

        r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.telephony.CarrierConfigManager mCarrierConfigManager> = $r7;

        $r8 = new android.content.IntentFilter;

        specialinvoke $r8.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.telephony.action.CARRIER_CONFIG_CHANGED");

     label1:
        $r9 = virtualinvoke r22.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r10 = virtualinvoke r22.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.String getPackageName()>();

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r13 = virtualinvoke $r9.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>($r11, 0, $r12);

        $r14 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.content.BroadcastReceiver mConfigChangedReceiver>;

        virtualinvoke $r13.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r14, $r8, null, null);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        r24 = <com.android.internal.telephony.dataconnection.AccessNetworksManager: java.lang.String TAG>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package name not found: ");

        $r19 = virtualinvoke $r16.<android.content.pm.PackageManager$NameNotFoundException: java.lang.String getMessage()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>(r24, $r21);

     label4:
        virtualinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: boolean sendEmptyMessage(int)>(1);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    static com.android.internal.telephony.Phone access$000(com.android.internal.telephony.dataconnection.AccessNetworksManager)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.Phone mPhone>;

        return $r1;
    }

    static java.lang.String access$100(com.android.internal.telephony.dataconnection.AccessNetworksManager)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: java.lang.String mTargetBindingPackageName>;

        return $r1;
    }

    static com.android.internal.telephony.RegistrantList access$1000(com.android.internal.telephony.dataconnection.AccessNetworksManager)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        com.android.internal.telephony.RegistrantList $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.RegistrantList mQualifiedNetworksChangedRegistrants>;

        return $r1;
    }

    static java.lang.String access$102(com.android.internal.telephony.dataconnection.AccessNetworksManager, java.lang.String)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: java.lang.String mTargetBindingPackageName> = r1;

        return r1;
    }

    static void access$200(com.android.internal.telephony.dataconnection.AccessNetworksManager, java.lang.String)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: void loge(java.lang.String)>(r1);

        return;
    }

    static android.telephony.data.IQualifiedNetworksService access$300(com.android.internal.telephony.dataconnection.AccessNetworksManager)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        android.telephony.data.IQualifiedNetworksService $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.telephony.data.IQualifiedNetworksService mIQualifiedNetworksService>;

        return $r1;
    }

    static android.telephony.data.IQualifiedNetworksService access$302(com.android.internal.telephony.dataconnection.AccessNetworksManager, android.telephony.data.IQualifiedNetworksService)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        android.telephony.data.IQualifiedNetworksService r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r1 := @parameter1: android.telephony.data.IQualifiedNetworksService;

        r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.telephony.data.IQualifiedNetworksService mIQualifiedNetworksService> = r1;

        return r1;
    }

    static com.android.internal.telephony.dataconnection.AccessNetworksManager$AccessNetworksManagerDeathRecipient access$400(com.android.internal.telephony.dataconnection.AccessNetworksManager)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        com.android.internal.telephony.dataconnection.AccessNetworksManager$AccessNetworksManagerDeathRecipient $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.dataconnection.AccessNetworksManager$AccessNetworksManagerDeathRecipient mDeathRecipient>;

        return $r1;
    }

    static com.android.internal.telephony.dataconnection.AccessNetworksManager$AccessNetworksManagerDeathRecipient access$402(com.android.internal.telephony.dataconnection.AccessNetworksManager, com.android.internal.telephony.dataconnection.AccessNetworksManager$AccessNetworksManagerDeathRecipient)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        com.android.internal.telephony.dataconnection.AccessNetworksManager$AccessNetworksManagerDeathRecipient r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r1 := @parameter1: com.android.internal.telephony.dataconnection.AccessNetworksManager$AccessNetworksManagerDeathRecipient;

        r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.dataconnection.AccessNetworksManager$AccessNetworksManagerDeathRecipient mDeathRecipient> = r1;

        return r1;
    }

    static void access$700(com.android.internal.telephony.dataconnection.AccessNetworksManager, java.lang.String)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: void log(java.lang.String)>(r1);

        return;
    }

    static int[] access$800()
    {
        int[] $r0;

        $r0 = <com.android.internal.telephony.dataconnection.AccessNetworksManager: int[] SUPPORTED_APN_TYPES>;

        return $r0;
    }

    static android.util.SparseArray access$900(com.android.internal.telephony.dataconnection.AccessNetworksManager)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.util.SparseArray mAvailableNetworks>;

        return $r1;
    }

    private void bindQualifiedNetworksService()
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.content.ComponentName $r2;
        android.content.Intent $r3, $r13, r27;
        java.lang.String $r4, $r19, $r24, r25, r26, $r33;
        android.os.IBinder $r7;
        com.android.internal.telephony.Phone $r8, $r10, $r34;
        android.telephony.data.IQualifiedNetworksService $r9, r29;
        int $i0;
        android.content.Context $r11, $r35;
        com.android.internal.telephony.dataconnection.AccessNetworksManager$QualifiedNetworksServiceConnection $r12, r31, $r36;
        android.os.RemoteException $r15;
        java.lang.StringBuilder $r16, $r21, r32;
        java.lang.Exception $r20;

        r0 := @this: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r25 = specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: java.lang.String getQualifiedNetworksServicePackageName()>();

        r26 = specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: java.lang.String getQualifiedNetworksServiceClassName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r25);

        if $z0 == 0 goto label01;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: void loge(java.lang.String)>("Can\'t find the binding package");

        return;

     label01:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r26);

        if $z1 == 0 goto label02;

        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String)>("android.telephony.data.QualifiedNetworksService");

        r27 = $r13;

        virtualinvoke $r13.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r25);

        goto label03;

     label02:
        $r2 = new android.content.ComponentName;

        specialinvoke $r2.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r25, r26);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.telephony.data.QualifiedNetworksService");

        r27 = virtualinvoke $r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r2);

     label03:
        $r4 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: java.lang.String mTargetBindingPackageName>;

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r25, $r4);

        if $z2 == 0 goto label04;

        return;

     label04:
        r29 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.telephony.data.IQualifiedNetworksService mIQualifiedNetworksService>;

        if r29 == null goto label09;

        $r7 = interfaceinvoke r29.<android.telephony.data.IQualifiedNetworksService: android.os.IBinder asBinder()>();

        $z3 = interfaceinvoke $r7.<android.os.IBinder: boolean isBinderAlive()>();

        if $z3 == 0 goto label09;

     label05:
        $r9 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.telephony.data.IQualifiedNetworksService mIQualifiedNetworksService>;

        $r8 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r8.<com.android.internal.telephony.Phone: int getPhoneId()>();

        interfaceinvoke $r9.<android.telephony.data.IQualifiedNetworksService: void removeNetworkAvailabilityProvider(int)>($i0);

     label06:
        goto label08;

     label07:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot remove network availability updater. ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: void loge(java.lang.String)>($r19);

     label08:
        $r10 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.Phone mPhone>;

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r12 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.dataconnection.AccessNetworksManager$QualifiedNetworksServiceConnection mServiceConnection>;

        virtualinvoke $r11.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r12);

     label09:
        r31 = new com.android.internal.telephony.dataconnection.AccessNetworksManager$QualifiedNetworksServiceConnection;

        specialinvoke r31.<com.android.internal.telephony.dataconnection.AccessNetworksManager$QualifiedNetworksServiceConnection: void <init>(com.android.internal.telephony.dataconnection.AccessNetworksManager,com.android.internal.telephony.dataconnection.AccessNetworksManager$1)>(r0, null);

        r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.dataconnection.AccessNetworksManager$QualifiedNetworksServiceConnection mServiceConnection> = r31;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bind to ");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r33 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: void log(java.lang.String)>($r33);

        $r34 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.Phone mPhone>;

        $r35 = virtualinvoke $r34.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r36 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.dataconnection.AccessNetworksManager$QualifiedNetworksServiceConnection mServiceConnection>;

        $z4 = virtualinvoke $r35.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r27, $r36, 1);

        if $z4 != 0 goto label11;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: void loge(java.lang.String)>("Cannot bind to the qualified networks service.");

     label10:
        return;

     label11:
        r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: java.lang.String mTargetBindingPackageName> = r25;

     label12:
        goto label14;

     label13:
        $r20 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot bind to the qualified networks service. Exception: ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: void loge(java.lang.String)>($r24);

     label14:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    private java.util.List getQualifiedNetworksList()
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        java.util.ArrayList $r2;
        android.util.SparseArray $r3, $r5, $r6;
        int $i0, $i1, i2;
        com.android.internal.telephony.dataconnection.AccessNetworksManager$QualifiedNetworks $r4;
        java.lang.Object $r7;
        int[] $r8;

        r0 := @this: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $r3 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.util.SparseArray mAvailableNetworks>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i2 >= $i0 goto label2;

        $r4 = new com.android.internal.telephony.dataconnection.AccessNetworksManager$QualifiedNetworks;

        $r5 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.util.SparseArray mAvailableNetworks>;

        $i1 = virtualinvoke $r5.<android.util.SparseArray: int keyAt(int)>(i2);

        $r6 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.util.SparseArray mAvailableNetworks>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r8 = (int[]) $r7;

        specialinvoke $r4.<com.android.internal.telephony.dataconnection.AccessNetworksManager$QualifiedNetworks: void <init>(int,int[])>($i1, $r8);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private java.lang.String getQualifiedNetworksServiceClassName()
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        java.lang.String r1, r8, r9;
        com.android.internal.telephony.Phone $r2, $r5;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        android.telephony.CarrierConfigManager $r6;
        int $i0;
        boolean $z0;
        android.os.PersistableBundle r7;

        r0 := @this: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        $r2 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.Phone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039934);

        $r6 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.telephony.CarrierConfigManager mCarrierConfigManager>;

        $r5 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.Phone: int getSubId()>();

        r7 = virtualinvoke $r6.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        r8 = r1;

        if r7 == null goto label1;

        r9 = virtualinvoke r7.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("carrier_qualified_networks_service_class_override_string");

        r8 = r1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z0 != 0 goto label1;

        r8 = r9;

     label1:
        return r8;
    }

    private java.lang.String getQualifiedNetworksServicePackageName()
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        java.lang.String r1, r8, r9;
        com.android.internal.telephony.Phone $r2, $r5;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        android.telephony.CarrierConfigManager $r6;
        int $i0;
        boolean $z0;
        android.os.PersistableBundle r7;

        r0 := @this: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        $r2 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.Phone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039935);

        $r6 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.telephony.CarrierConfigManager mCarrierConfigManager>;

        $r5 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.Phone: int getSubId()>();

        r7 = virtualinvoke $r6.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        r8 = r1;

        if r7 == null goto label1;

        r9 = virtualinvoke r7.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("carrier_qualified_networks_service_package_override_string");

        r8 = r1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z0 != 0 goto label1;

        r8 = r9;

     label1:
        return r8;
    }

    static java.lang.String lambda$dump$0(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.telephony.AccessNetworkConstants$AccessNetworkType: java.lang.String toString(int)>(i0);

        return $r0;
    }

    private void log(java.lang.String)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r1 := @parameter0: java.lang.String;

        $r2 = <com.android.internal.telephony.dataconnection.AccessNetworksManager: java.lang.String TAG>;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    private void loge(java.lang.String)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r1 := @parameter0: java.lang.String;

        $r2 = <com.android.internal.telephony.dataconnection.AccessNetworksManager: java.lang.String TAG>;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    public void dump(java.io.FileDescriptor, com.android.internal.telephony.IndentingPrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        com.android.internal.telephony.IndentingPrintWriter r1;
        java.lang.String[] r2;
        android.util.SparseArray $r5, $r10, $r14;
        int $i0, $i1, i2;
        java.lang.String $r11, $r22, $r25;
        java.lang.Object $r15, $r21;
        int[] $r16;
        java.util.stream.IntStream $r17;
        com.android.internal.telephony.dataconnection.'-$$Lambda$AccessNetworksManager$Su9aGPx8cN_dALH_BE7MctE6qX8' $r18;
        java.util.stream.Stream $r19;
        java.util.stream.Collector $r20;
        java.io.FileDescriptor r26;
        java.lang.StringBuilder r28;
        java.util.function.IntFunction r29;

        r0 := @this: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r26 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: com.android.internal.telephony.IndentingPrintWriter;

        r2 := @parameter2: java.lang.String[];

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("AccessNetworksManager:");

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("Available networks:");

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        i2 = 0;

     label1:
        $r5 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.util.SparseArray mAvailableNetworks>;

        $i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i2 >= $i0 goto label2;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("APN type ");

        $r10 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.util.SparseArray mAvailableNetworks>;

        $i1 = virtualinvoke $r10.<android.util.SparseArray: int keyAt(int)>(i2);

        $r11 = staticinvoke <android.telephony.data.ApnSetting: java.lang.String getApnTypeString(int)>($i1);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": [");

        $r14 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.util.SparseArray mAvailableNetworks>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r16 = (int[]) $r15;

        $r17 = staticinvoke <java.util.Arrays: java.util.stream.IntStream stream(int[])>($r16);

        $r18 = <com.android.internal.telephony.dataconnection._$$Lambda$AccessNetworksManager$Su9aGPx8cN_dALH_BE7MctE6qX8: com.android.internal.telephony.dataconnection.'-$$Lambda$AccessNetworksManager$Su9aGPx8cN_dALH_BE7MctE6qX8' INSTANCE>;

        r29 = (java.util.function.IntFunction) $r18;

        $r19 = interfaceinvoke $r17.<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>(r29);

        $r20 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>(",");

        $r21 = interfaceinvoke $r19.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r20);

        $r22 = (java.lang.String) $r21;

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r25 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r25);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r1.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        android.os.Message r1;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        if $i0 == 1 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled event ");

        $i1 = r1.<android.os.Message: int what>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: void loge(java.lang.String)>($r6);

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: void bindQualifiedNetworksService()>();

     label2:
        return;
    }

    public void registerForQualifiedNetworksChanged(android.os.Handler, int)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        int i0, $i1;
        com.android.internal.telephony.Registrant $r1;
        com.android.internal.telephony.RegistrantList $r2;
        android.util.SparseArray $r3;
        java.util.List $r4;
        android.os.Handler r5;

        r0 := @this: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r5 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        if r5 == null goto label1;

        $r1 = new com.android.internal.telephony.Registrant;

        specialinvoke $r1.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r5, i0, null);

        $r2 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.RegistrantList mQualifiedNetworksChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r1);

        $r3 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: android.util.SparseArray mAvailableNetworks>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if $i1 == 0 goto label1;

        $r4 = specialinvoke r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: java.util.List getQualifiedNetworksList()>();

        virtualinvoke $r1.<com.android.internal.telephony.Registrant: void notifyResult(java.lang.Object)>($r4);

     label1:
        return;
    }

    public void unregisterForQualifiedNetworksChanged(android.os.Handler)
    {
        com.android.internal.telephony.dataconnection.AccessNetworksManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.AccessNetworksManager;

        r1 := @parameter0: android.os.Handler;

        if r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.dataconnection.AccessNetworksManager: com.android.internal.telephony.RegistrantList mQualifiedNetworksChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

     label1:
        return;
    }
}
