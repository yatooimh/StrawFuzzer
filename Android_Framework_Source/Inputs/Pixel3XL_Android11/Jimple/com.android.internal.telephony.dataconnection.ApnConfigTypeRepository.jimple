public class com.android.internal.telephony.dataconnection.ApnConfigTypeRepository extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final java.util.Map mConfigTypeMap;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Lcom/android/internal/telephony/dataconnection/ApnConfigTypeRepository;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.os.PersistableBundle)
    {
        com.android.internal.telephony.dataconnection.ApnConfigTypeRepository r0;
        android.os.PersistableBundle r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.ApnConfigTypeRepository;

        r1 := @parameter0: android.os.PersistableBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.util.Map mConfigTypeMap> = $r2;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void setup(android.os.PersistableBundle)>(r1);

        return;
    }

    private void add(int, java.util.Map)
    {
        com.android.internal.telephony.dataconnection.ApnConfigTypeRepository r0;
        int i0, $i1;
        java.util.Map r1, $r3;
        java.lang.Integer $r2, $r4, $r6, $r8;
        boolean $z0;
        com.android.internal.telephony.dataconnection.ApnConfigType $r5;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.telephony.dataconnection.ApnConfigTypeRepository;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Map;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.util.Map mConfigTypeMap>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = new com.android.internal.telephony.dataconnection.ApnConfigType;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (java.lang.Integer) $r7;

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        specialinvoke $r5.<com.android.internal.telephony.dataconnection.ApnConfigType: void <init>(int,int)>(i0, $i1);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

     label1:
        return;
    }

    private void addApns(java.util.Map)
    {
        com.android.internal.telephony.dataconnection.ApnConfigTypeRepository r0;
        java.util.Map r1;

        r0 := @this: com.android.internal.telephony.dataconnection.ApnConfigTypeRepository;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(17, r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(2, r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(4, r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(8, r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(16, r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(32, r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(64, r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(128, r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(256, r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(512, r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(1024, r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void add(int,java.util.Map)>(2048, r1);

        return;
    }

    private java.util.Map getCarrierApnTypeMap(android.os.PersistableBundle)
    {
        com.android.internal.telephony.dataconnection.ApnConfigTypeRepository r0;
        java.lang.String[] r1, r28;
        int i0, i1, $i2, $i4, i9;
        boolean z0;
        android.util.ArrayMap $r4, $r19;
        java.lang.String $r5, $r6, $r9, $r11, $r16, $r17, $r18, $r25, r27, r29, r31, r34;
        java.lang.Integer $r10, $r12;
        java.lang.Exception $r20;
        java.lang.StringBuilder $r21, r30, r32;
        android.os.PersistableBundle r26;

        r0 := @this: com.android.internal.telephony.dataconnection.ApnConfigTypeRepository;

        r26 := @parameter0: android.os.PersistableBundle;

        if r26 != null goto label01;

        $r18 = <com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.lang.String TAG>;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>($r18, "carrier config is null");

        $r19 = new android.util.ArrayMap;

        specialinvoke $r19.<android.util.ArrayMap: void <init>()>();

        return $r19;

     label01:
        r1 = virtualinvoke r26.<android.os.PersistableBundle: java.lang.String[] getStringArray(java.lang.String)>("apn_priority_string_array");

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        if r1 == null goto label17;

        i0 = lengthof r1;

        i9 = 0;

     label02:
        if i9 >= i0 goto label17;

        r27 = r1[i9];

     label03:
        r28 = virtualinvoke r27.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $i2 = lengthof r28;

        if $i2 == 2 goto label05;

        $r17 = <com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.lang.String TAG>;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>($r17, "Apn type entry must have exactly one \':\'");

     label04:
        goto label14;

     label05:
        $r5 = r28[0];

        z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(",");

     label06:
        if z0 == 0 goto label09;

     label07:
        r29 = <com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.lang.String TAG>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid apn type name, entry: ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r16 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>(r29, $r16);

     label08:
        goto label14;

     label09:
        $r6 = r28[0];

        i1 = staticinvoke <android.telephony.data.ApnSetting: int getApnTypesBitmaskFromString(java.lang.String)>($r6);

     label10:
        if i1 <= 0 goto label13;

     label11:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r11 = r28[1];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r12);

     label12:
        goto label14;

     label13:
        r31 = <com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.lang.String TAG>;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid apn type name, entry: ");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r9 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>(r31, $r9);

     label14:
        goto label16;

     label15:
        $r20 := @caughtexception;

        r34 = <com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.lang.String TAG>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception on apn type entry: ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r34, $r25, $r20);

     label16:
        i9 = i9 + 1;

        goto label02;

     label17:
        return $r4;

        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    private void setup(android.os.PersistableBundle)
    {
        com.android.internal.telephony.dataconnection.ApnConfigTypeRepository r0;
        android.os.PersistableBundle r1, $r2;
        java.util.Map $r3, $r4;

        r0 := @this: com.android.internal.telephony.dataconnection.ApnConfigTypeRepository;

        r1 := @parameter0: android.os.PersistableBundle;

        $r2 = staticinvoke <android.telephony.CarrierConfigManager: android.os.PersistableBundle getDefaultConfig()>();

        $r3 = specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.util.Map getCarrierApnTypeMap(android.os.PersistableBundle)>($r2);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void addApns(java.util.Map)>($r3);

        $r4 = specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.util.Map getCarrierApnTypeMap(android.os.PersistableBundle)>(r1);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: void addApns(java.util.Map)>($r4);

        return;
    }

    public com.android.internal.telephony.dataconnection.ApnConfigType getByType(int)
    {
        com.android.internal.telephony.dataconnection.ApnConfigTypeRepository r0;
        int i0;
        java.util.Map $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        com.android.internal.telephony.dataconnection.ApnConfigType $r4;

        r0 := @this: com.android.internal.telephony.dataconnection.ApnConfigTypeRepository;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.util.Map mConfigTypeMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (com.android.internal.telephony.dataconnection.ApnConfigType) $r3;

        return $r4;
    }

    public java.util.Collection getTypes()
    {
        com.android.internal.telephony.dataconnection.ApnConfigTypeRepository r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.ApnConfigTypeRepository;

        $r1 = r0.<com.android.internal.telephony.dataconnection.ApnConfigTypeRepository: java.util.Map mConfigTypeMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }
}
