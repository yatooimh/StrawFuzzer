class com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider extends android.telephony.data.DataService$DataServiceProvider
{
    private final java.util.Map mCallbackMap;
    private final android.os.Handler mHandler;
    private final com.android.internal.telephony.Phone mPhone;
    final com.android.internal.telephony.dataconnection.CellularDataService this$0;

    private void <init>(com.android.internal.telephony.dataconnection.CellularDataService, int)
    {
        com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider r0;
        com.android.internal.telephony.dataconnection.CellularDataService r1;
        int i0, $i1;
        java.util.HashMap $r2;
        com.android.internal.telephony.Phone $r3, $r6;
        com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider$1 $r4;
        android.os.Looper $r5;
        android.os.Handler $r7;
        com.android.internal.telephony.CommandsInterface $r8;

        r0 := @this: com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider;

        r1 := @parameter0: com.android.internal.telephony.dataconnection.CellularDataService;

        i0 := @parameter1: int;

        r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: com.android.internal.telephony.dataconnection.CellularDataService this$0> = r1;

        specialinvoke r0.<android.telephony.data.DataService$DataServiceProvider: void <init>(android.telephony.data.DataService,int)>(r1, i0);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: java.util.Map mCallbackMap> = $r2;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: int getSlotIndex()>();

        $r3 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getPhone(int)>($i1);

        r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: com.android.internal.telephony.Phone mPhone> = $r3;

        $r4 = new com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider$1;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke $r4.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider$1: void <init>(com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider,android.os.Looper,com.android.internal.telephony.dataconnection.CellularDataService)>(r0, $r5, r1);

        r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: android.os.Handler mHandler> = $r4;

        $r6 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: com.android.internal.telephony.Phone mPhone>;

        $r8 = $r6.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        $r7 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: android.os.Handler mHandler>;

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void registerForDataCallListChanged(android.os.Handler,int,java.lang.Object)>($r7, 6, null);

        return;
    }

    void <init>(com.android.internal.telephony.dataconnection.CellularDataService, int, com.android.internal.telephony.dataconnection.CellularDataService$1)
    {
        com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider r0;
        com.android.internal.telephony.dataconnection.CellularDataService r1;
        int i0;
        com.android.internal.telephony.dataconnection.CellularDataService$1 r2;

        r0 := @this: com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider;

        r1 := @parameter0: com.android.internal.telephony.dataconnection.CellularDataService;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.telephony.dataconnection.CellularDataService$1;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: void <init>(com.android.internal.telephony.dataconnection.CellularDataService,int)>(r1, i0);

        return;
    }

    static java.util.Map access$000(com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider)
    {
        com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider;

        $r1 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: java.util.Map mCallbackMap>;

        return $r1;
    }

    public void close()
    {
        com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider r0;
        com.android.internal.telephony.Phone $r1;
        android.os.Handler $r2;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider;

        $r1 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: com.android.internal.telephony.Phone mPhone>;

        $r3 = $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: android.os.Handler mHandler>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void unregisterForDataCallListChanged(android.os.Handler)>($r2);

        return;
    }

    public void deactivateDataCall(int, int, android.telephony.data.DataServiceCallback)
    {
        com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider r0;
        int i0, i1;
        android.telephony.data.DataServiceCallback r1;
        com.android.internal.telephony.Phone $r2;
        com.android.internal.telephony.CommandsInterface $r3;
        android.os.Handler $r4;
        java.util.Map $r5;
        android.os.Message r7;

        r0 := @this: com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.telephony.data.DataServiceCallback;

        r7 = null;

        if r1 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: android.os.Handler mHandler>;

        r7 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r4, 2);

        $r5 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: java.util.Map mCallbackMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r1);

     label1:
        $r2 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: com.android.internal.telephony.Phone mPhone>;

        $r3 = $r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void deactivateDataCall(int,int,android.os.Message)>(i0, i1, r7);

        return;
    }

    public void requestDataCallList(android.telephony.data.DataServiceCallback)
    {
        com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider r0;
        android.telephony.data.DataServiceCallback r1;
        com.android.internal.telephony.Phone $r2;
        com.android.internal.telephony.CommandsInterface $r3;
        android.os.Handler $r4;
        java.util.Map $r5;
        android.os.Message r7;

        r0 := @this: com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider;

        r1 := @parameter0: android.telephony.data.DataServiceCallback;

        r7 = null;

        if r1 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: android.os.Handler mHandler>;

        r7 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r4, 5);

        $r5 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: java.util.Map mCallbackMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r1);

     label1:
        $r2 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: com.android.internal.telephony.Phone mPhone>;

        $r3 = $r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void getDataCallList(android.os.Message)>(r7);

        return;
    }

    public void setDataProfile(java.util.List, boolean, android.telephony.data.DataServiceCallback)
    {
        com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider r0;
        java.util.List r1;
        boolean z0;
        android.telephony.data.DataServiceCallback r2;
        com.android.internal.telephony.Phone $r3;
        com.android.internal.telephony.CommandsInterface $r4;
        int $i0;
        android.telephony.data.DataProfile[] $r5, $r7;
        java.lang.Object[] $r6;
        android.os.Handler $r8;
        java.util.Map $r9;
        android.os.Message r11;

        r0 := @this: com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.telephony.data.DataServiceCallback;

        r11 = null;

        if r2 == null goto label1;

        $r8 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: android.os.Handler mHandler>;

        r11 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r8, 4);

        $r9 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: java.util.Map mCallbackMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r2);

     label1:
        $r3 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: com.android.internal.telephony.Phone mPhone>;

        $r4 = $r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r5 = newarray (android.telephony.data.DataProfile)[$i0];

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (android.telephony.data.DataProfile[]) $r6;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void setDataProfile(android.telephony.data.DataProfile[],boolean,android.os.Message)>($r7, z0, r11);

        return;
    }

    public void setInitialAttachApn(android.telephony.data.DataProfile, boolean, android.telephony.data.DataServiceCallback)
    {
        com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider r0;
        android.telephony.data.DataProfile r1;
        boolean z0;
        android.telephony.data.DataServiceCallback r2;
        com.android.internal.telephony.Phone $r3;
        com.android.internal.telephony.CommandsInterface $r4;
        android.os.Handler $r5;
        java.util.Map $r6;
        android.os.Message r8;

        r0 := @this: com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider;

        r1 := @parameter0: android.telephony.data.DataProfile;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.telephony.data.DataServiceCallback;

        r8 = null;

        if r2 == null goto label1;

        $r5 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: android.os.Handler mHandler>;

        r8 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r5, 3);

        $r6 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: java.util.Map mCallbackMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r2);

     label1:
        $r3 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: com.android.internal.telephony.Phone mPhone>;

        $r4 = $r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void setInitialAttachApn(android.telephony.data.DataProfile,boolean,android.os.Message)>(r1, z0, r8);

        return;
    }

    public void setupDataCall(int, android.telephony.data.DataProfile, boolean, boolean, int, android.net.LinkProperties, android.telephony.data.DataServiceCallback)
    {
        com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider r0;
        int i0, i1;
        android.telephony.data.DataProfile r1;
        boolean z0, z1;
        android.net.LinkProperties r2;
        android.telephony.data.DataServiceCallback r3;
        com.android.internal.telephony.Phone $r4;
        com.android.internal.telephony.CommandsInterface $r5;
        android.os.Handler $r6;
        java.util.Map $r7;
        android.os.Message r9;

        r0 := @this: com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.data.DataProfile;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i1 := @parameter4: int;

        r2 := @parameter5: android.net.LinkProperties;

        r3 := @parameter6: android.telephony.data.DataServiceCallback;

        r9 = null;

        if r3 == null goto label1;

        $r6 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: android.os.Handler mHandler>;

        r9 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r6, 1);

        $r7 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: java.util.Map mCallbackMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r3);

     label1:
        $r4 = r0.<com.android.internal.telephony.dataconnection.CellularDataService$CellularDataServiceProvider: com.android.internal.telephony.Phone mPhone>;

        $r5 = $r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void setupDataCall(int,android.telephony.data.DataProfile,boolean,boolean,int,android.net.LinkProperties,android.os.Message)>(i0, r1, z0, z1, i1, r2, r9);

        return;
    }
}
