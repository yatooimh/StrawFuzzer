public class com.android.internal.telephony.dataconnection.DataServiceManager extends android.os.Handler
{
    private static final long CHANGE_PERMISSION_TIMEOUT_MS;
    static final java.lang.String DATA_CALL_RESPONSE;
    private static final boolean DBG;
    private static final int EVENT_BIND_DATA_SERVICE;
    private static final int EVENT_WATCHDOG_TIMEOUT;
    private static final long REQUEST_UNRESPONDED_TIMEOUT;
    private final android.app.AppOpsManager mAppOps;
    private boolean mBound;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private final android.telephony.CarrierConfigManager mCarrierConfigManager;
    private final com.android.internal.telephony.RegistrantList mDataCallListChangedRegistrants;
    private com.android.internal.telephony.dataconnection.DataServiceManager$DataServiceManagerDeathRecipient mDeathRecipient;
    private android.telephony.data.IDataService mIDataService;
    private final java.util.Map mMessageMap;
    private final android.permission.PermissionManager mPermissionManager;
    private final com.android.internal.telephony.Phone mPhone;
    private final com.android.internal.telephony.RegistrantList mServiceBindingChangedRegistrants;
    private com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceConnection mServiceConnection;
    private final java.lang.String mTag;
    private java.lang.String mTargetBindingPackageName;
    private final int mTransportType;

    public void <init>(com.android.internal.telephony.Phone, int, java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        int i0;
        com.android.internal.telephony.RegistrantList $r2, $r4;
        java.util.concurrent.ConcurrentHashMap $r3;
        com.android.internal.telephony.dataconnection.DataServiceManager$1 $r5;
        java.lang.StringBuilder $r6, $r28;
        java.lang.String $r9, $r22, $r30, $r32, r34;
        android.content.Context $r10, $r13, $r16, $r20, $r21, $r24;
        java.lang.Object $r11, $r14, $r17;
        android.telephony.CarrierConfigManager $r12;
        android.permission.PermissionManager $r15;
        android.app.AppOpsManager $r18;
        android.content.IntentFilter $r19;
        android.os.UserHandle $r23;
        android.content.BroadcastReceiver $r25;
        android.content.pm.PackageManager$NameNotFoundException $r27;
        com.android.internal.telephony.Phone r33;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r33 := @parameter0: com.android.internal.telephony.Phone;

        i0 := @parameter1: int;

        r34 := @parameter2: java.lang.String;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        $r2 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r2.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.RegistrantList mServiceBindingChangedRegistrants> = $r2;

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap> = $r3;

        $r4 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r4.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.RegistrantList mDataCallListChangedRegistrants> = $r4;

        $r5 = new com.android.internal.telephony.dataconnection.DataServiceManager$1;

        specialinvoke $r5.<com.android.internal.telephony.dataconnection.DataServiceManager$1: void <init>(com.android.internal.telephony.dataconnection.DataServiceManager)>(r0);

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.content.BroadcastReceiver mBroadcastReceiver> = $r5;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone> = r33;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DSM");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String mTag> = $r9;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: int mTransportType> = i0;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: boolean mBound> = 0;

        $r10 = virtualinvoke r33.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r12 = (android.telephony.CarrierConfigManager) $r11;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.CarrierConfigManager mCarrierConfigManager> = $r12;

        $r13 = virtualinvoke r33.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("permission");

        $r15 = (android.permission.PermissionManager) $r14;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.permission.PermissionManager mPermissionManager> = $r15;

        $r16 = virtualinvoke r33.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r17 = virtualinvoke $r16.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r18 = (android.app.AppOpsManager) $r17;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.app.AppOpsManager mAppOps> = $r18;

        $r19 = new android.content.IntentFilter;

        specialinvoke $r19.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r19.<android.content.IntentFilter: void addAction(java.lang.String)>("android.telephony.action.CARRIER_CONFIG_CHANGED");

     label1:
        $r20 = virtualinvoke r33.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r21 = virtualinvoke r33.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r22 = virtualinvoke $r21.<android.content.Context: java.lang.String getPackageName()>();

        $r23 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r24 = virtualinvoke $r20.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>($r22, 0, $r23);

        $r25 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r24.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r25, $r19, null, null);

     label2:
        goto label4;

     label3:
        $r27 := @caughtexception;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package name not found: ");

        $r30 = virtualinvoke $r27.<android.content.pm.PackageManager$NameNotFoundException: java.lang.String getMessage()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>($r32);

     label4:
        staticinvoke <com.android.internal.telephony.PhoneConfigurationManager: void registerForMultiSimConfigChange(android.os.Handler,int,java.lang.Object)>(r0, 1, null);

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: boolean sendEmptyMessage(int)>(1);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    static com.android.internal.telephony.Phone access$000(com.android.internal.telephony.dataconnection.DataServiceManager)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        return $r1;
    }

    static void access$100(com.android.internal.telephony.dataconnection.DataServiceManager, java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void log(java.lang.String)>(r1);

        return;
    }

    static java.util.Map access$1000(com.android.internal.telephony.dataconnection.DataServiceManager)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap>;

        return $r1;
    }

    static void access$1100(com.android.internal.telephony.dataconnection.DataServiceManager, android.os.Message, int)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        android.os.Message r1;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter1: android.os.Message;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void sendCompleteMessage(android.os.Message,int)>(r1, i0);

        return;
    }

    static com.android.internal.telephony.RegistrantList access$1200(com.android.internal.telephony.dataconnection.DataServiceManager)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        com.android.internal.telephony.RegistrantList $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.RegistrantList mDataCallListChangedRegistrants>;

        return $r1;
    }

    static java.lang.String access$200(com.android.internal.telephony.dataconnection.DataServiceManager)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String mTargetBindingPackageName>;

        return $r1;
    }

    static java.lang.String access$202(com.android.internal.telephony.dataconnection.DataServiceManager, java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String mTargetBindingPackageName> = r1;

        return r1;
    }

    static int access$300(com.android.internal.telephony.dataconnection.DataServiceManager)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        int $i0;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        $i0 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: int mTransportType>;

        return $i0;
    }

    static void access$400(com.android.internal.telephony.dataconnection.DataServiceManager, java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>(r1);

        return;
    }

    static android.telephony.data.IDataService access$500(com.android.internal.telephony.dataconnection.DataServiceManager)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        android.telephony.data.IDataService $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.data.IDataService mIDataService>;

        return $r1;
    }

    static android.telephony.data.IDataService access$502(com.android.internal.telephony.dataconnection.DataServiceManager, android.telephony.data.IDataService)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        android.telephony.data.IDataService r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter1: android.telephony.data.IDataService;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.data.IDataService mIDataService> = r1;

        return r1;
    }

    static com.android.internal.telephony.dataconnection.DataServiceManager$DataServiceManagerDeathRecipient access$600(com.android.internal.telephony.dataconnection.DataServiceManager)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        com.android.internal.telephony.dataconnection.DataServiceManager$DataServiceManagerDeathRecipient $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.dataconnection.DataServiceManager$DataServiceManagerDeathRecipient mDeathRecipient>;

        return $r1;
    }

    static com.android.internal.telephony.dataconnection.DataServiceManager$DataServiceManagerDeathRecipient access$602(com.android.internal.telephony.dataconnection.DataServiceManager, com.android.internal.telephony.dataconnection.DataServiceManager$DataServiceManagerDeathRecipient)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        com.android.internal.telephony.dataconnection.DataServiceManager$DataServiceManagerDeathRecipient r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter1: com.android.internal.telephony.dataconnection.DataServiceManager$DataServiceManagerDeathRecipient;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.dataconnection.DataServiceManager$DataServiceManagerDeathRecipient mDeathRecipient> = r1;

        return r1;
    }

    static boolean access$802(com.android.internal.telephony.dataconnection.DataServiceManager, boolean)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: boolean mBound> = z0;

        return z0;
    }

    static com.android.internal.telephony.RegistrantList access$900(com.android.internal.telephony.dataconnection.DataServiceManager)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        com.android.internal.telephony.RegistrantList $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager;

        $r1 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.RegistrantList mServiceBindingChangedRegistrants>;

        return $r1;
    }

    private void bindDataService(java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceConnection r1, $r6;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        android.content.ComponentName $r2;
        android.content.Intent $r3, $r7, r17;
        com.android.internal.telephony.Phone $r4, r15;
        android.content.Context $r5;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r13, r14, r16;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r14 := @parameter0: java.lang.String;

        r15 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        if r15 == null goto label11;

        $i0 = virtualinvoke r15.<com.android.internal.telephony.Phone: int getPhoneId()>();

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidPhoneId(int)>($i0);

        if $z0 != 0 goto label01;

        goto label11;

     label01:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r14);

        if $z1 == 0 goto label02;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Can\'t find the binding package");

        return;

     label02:
        r16 = specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String getDataServiceClassName()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r16);

        if $z2 == 0 goto label03;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.telephony.data.DataService");

        r17 = $r7;

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r14);

        goto label04;

     label03:
        $r2 = new android.content.ComponentName;

        specialinvoke $r2.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r14, r16);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.telephony.data.DataService");

        r17 = virtualinvoke $r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r2);

     label04:
        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void grantPermissionsToService(java.lang.String)>(r14);

     label05:
        r1 = new com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceConnection;

        specialinvoke r1.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceConnection: void <init>(com.android.internal.telephony.dataconnection.DataServiceManager,com.android.internal.telephony.dataconnection.DataServiceManager$1)>(r0, null);

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceConnection mServiceConnection> = r1;

        $r4 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r6 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceConnection mServiceConnection>;

        $z3 = virtualinvoke $r5.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r17, $r6, 1);

        if $z3 != 0 goto label07;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Cannot bind to the data service.");

     label06:
        return;

     label07:
        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String mTargetBindingPackageName> = r14;

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot bind to the data service. Exception: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>($r13);

     label10:
        return;

     label11:
        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("can\'t bindDataService with invalid phone or phoneId.");

        return;

        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private java.util.Set getAllDataServicePackageNames()
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        android.content.pm.ResolveInfo r2;
        com.android.internal.telephony.Phone $r3;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        android.content.Intent $r6;
        java.util.HashSet $r7;
        java.lang.Object $r8;
        android.content.pm.ServiceInfo $r9, $r10;
        java.lang.String $r11;
        java.util.List r12;
        java.util.Iterator r13;
        boolean $z1;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        $r3 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.telephony.data.DataService");

        r12 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r6, 1048576);

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r13 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.pm.ResolveInfo) $r8;

        $r9 = r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if $r9 != null goto label2;

        goto label1;

     label2:
        $r10 = r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r11 = $r10.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>($r11);

        goto label1;

     label3:
        return $r7;
    }

    private java.lang.String getDataServiceClassName()
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        $i0 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: int mTransportType>;

        $r1 = specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String getDataServiceClassName(int)>($i0);

        return $r1;
    }

    private java.lang.String getDataServiceClassName(int)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.lang.String r1, $r8, $r13, r14, r16;
        android.os.PersistableBundle r2;
        com.android.internal.telephony.Phone $r3, $r6;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        android.telephony.CarrierConfigManager $r7;
        int $i0, i1, i2;
        boolean $z0;
        java.lang.StringBuilder $r9;
        java.lang.IllegalStateException $r12;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        i1 := @parameter0: int;

        if i1 == 1 goto label2;

        if i1 != 2 goto label1;

        i2 = 17039968;

        r14 = "carrier_data_service_wlan_class_override_string";

        goto label3;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transport type not WWAN or WLAN. type=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = new java.lang.IllegalStateException;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label2:
        i2 = 17039972;

        r14 = "carrier_data_service_wwan_class_override_string";

     label3:
        $r3 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(i2);

        $r7 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.CarrierConfigManager mCarrierConfigManager>;

        $r6 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r6.<com.android.internal.telephony.Phone: int getSubId()>();

        r2 = virtualinvoke $r7.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        r16 = r1;

        if r2 == null goto label4;

        r16 = r1;

        $r8 = virtualinvoke r2.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>(r14);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

        if $z0 != 0 goto label4;

        r16 = virtualinvoke r2.<android.os.PersistableBundle: java.lang.String getString(java.lang.String,java.lang.String)>(r14, r1);

     label4:
        return r16;
    }

    private java.lang.String getDataServicePackageName()
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        $i0 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: int mTransportType>;

        $r1 = specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String getDataServicePackageName(int)>($i0);

        return $r1;
    }

    private java.lang.String getDataServicePackageName(int)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.lang.String r1, $r8, $r11, $r14, r15, r17;
        android.os.PersistableBundle r2;
        com.android.internal.telephony.Phone $r3, $r6;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        android.telephony.CarrierConfigManager $r7;
        int $i0, $i1, i2, i3;
        boolean $z0;
        java.lang.StringBuilder $r9;
        java.lang.IllegalStateException $r13;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        i2 := @parameter0: int;

        if i2 == 1 goto label2;

        if i2 != 2 goto label1;

        i3 = 17039969;

        r15 = "carrier_data_service_wlan_package_override_string";

        goto label3;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transport type not WWAN or WLAN. type=");

        $i1 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: int mTransportType>;

        $r11 = staticinvoke <android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)>($i1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = new java.lang.IllegalStateException;

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label2:
        i3 = 17039973;

        r15 = "carrier_data_service_wwan_package_override_string";

     label3:
        $r3 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(i3);

        $r7 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.CarrierConfigManager mCarrierConfigManager>;

        $r6 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r6.<com.android.internal.telephony.Phone: int getSubId()>();

        r2 = virtualinvoke $r7.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        r17 = r1;

        if r2 == null goto label4;

        r17 = r1;

        $r8 = virtualinvoke r2.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>(r15);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

        if $z0 != 0 goto label4;

        r17 = virtualinvoke r2.<android.os.PersistableBundle: java.lang.String getString(java.lang.String,java.lang.String)>(r15, r1);

     label4:
        return r17;
    }

    private void grantPermissionsToService(java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.lang.String[] r1;
        android.permission.PermissionManager r3;
        android.os.UserHandle r4;
        int $i0, $i1;
        android.app.AppOpsManager $r7;
        java.lang.String $r8, r10;
        java.lang.RuntimeException $r9;
        com.android.internal.telephony.dataconnection.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' r11;
        java.util.concurrent.CountDownLatch r13;
        com.android.internal.telephony.dataconnection._$$Lambda$DataServiceManager$2a7xr2LJHlS6olAlh4Mo6_JISsk r14;
        java.util.concurrent.Executor r15;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r10 := @parameter0: java.lang.String;

        r1 = newarray (java.lang.String)[1];

        r1[0] = r10;

        r13 = new java.util.concurrent.CountDownLatch;

        specialinvoke r13.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

     label1:
        r3 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.permission.PermissionManager mPermissionManager>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r4 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i0);

        r11 = <com.android.internal.telephony.dataconnection._$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo: com.android.internal.telephony.dataconnection.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' INSTANCE>;

        r14 = new com.android.internal.telephony.dataconnection._$$Lambda$DataServiceManager$2a7xr2LJHlS6olAlh4Mo6_JISsk;

        specialinvoke r14.<com.android.internal.telephony.dataconnection._$$Lambda$DataServiceManager$2a7xr2LJHlS6olAlh4Mo6_JISsk: void <init>(com.android.internal.telephony.dataconnection.DataServiceManager,java.util.concurrent.CountDownLatch)>(r0, r13);

        r15 = (java.util.concurrent.Executor) r11;

        virtualinvoke r3.<android.permission.PermissionManager: void grantDefaultPermissionsToEnabledTelephonyDataServices(java.lang.String[],android.os.UserHandle,java.util.concurrent.Executor,java.util.function.Consumer)>(r1, r4, r15, r14);

        staticinvoke <com.android.internal.telephony.util.TelephonyUtils: void waitUntilReady(java.util.concurrent.CountDownLatch,long)>(r13, 15000L);

        $r7 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.app.AppOpsManager mAppOps>;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r8 = r1[0];

        virtualinvoke $r7.<android.app.AppOpsManager: void setMode(java.lang.String,int,java.lang.String,int)>("android:manage_ipsec_tunnels", $i1, $r8, 0);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Binder to package manager died, permission grant for DataService failed.");

        throw $r9;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void handleRequestUnresponded(com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7, r14;
        int $i0;
        java.util.UUID $r12;
        com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback r13;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r13 := @parameter0: com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request ");

        $r4 = virtualinvoke r13.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: java.lang.String getTag()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unresponded on transport ");

        $i0 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: int mTransportType>;

        $r7 = staticinvoke <android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(600L);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds.");

        r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void log(java.lang.String)>(r14);

        $r12 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>("f5d5cbe6-9bd6-4009-b764-42b1b649b1de");

        staticinvoke <android.telephony.AnomalyReporter: void reportAnomaly(java.util.UUID,java.lang.String)>($r12, r14);

        return;
    }

    private void log(java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String mTag>;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    private void loge(java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String mTag>;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    private void rebindDataService()
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.lang.String r1, $r4, $r9;
        com.android.internal.telephony.Phone $r3;
        int $i0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 = specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String getDataServicePackageName()>();

        $r3 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r3.<com.android.internal.telephony.Phone: int getPhoneId()>();

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidPhoneId(int)>($i0);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String mTargetBindingPackageName>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, $r4);

        if $z1 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already bound or being bound.");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void log(java.lang.String)>($r9);

        return;

     label1:
        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void unbindDataService()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void bindDataService(java.lang.String)>(r1);

        return;
    }

    private void revokePermissionsFromUnusedDataServices()
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String[] r2;
        android.permission.PermissionManager r3;
        android.os.UserHandle r4;
        com.android.internal.telephony.Phone $r6;
        com.android.internal.telephony.dataconnection.TransportManager $r7;
        boolean $z0;
        java.lang.Object $r10;
        android.app.AppOpsManager $r11;
        java.lang.String $r12, r18;
        java.lang.RuntimeException $r13;
        java.util.Set r14;
        int[] r15;
        com.android.internal.telephony.dataconnection.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' r16;
        java.util.Iterator r17;
        java.util.concurrent.CountDownLatch r20;
        com.android.internal.telephony.dataconnection._$$Lambda$DataServiceManager$gm7tzLm_diEKxyiT0UlWDC2zRy8 r21;
        java.util.concurrent.Executor r22;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r14 = specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Set getAllDataServicePackageNames()>();

        $r6 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.Phone: com.android.internal.telephony.dataconnection.TransportManager getTransportManager()>();

        r15 = virtualinvoke $r7.<com.android.internal.telephony.dataconnection.TransportManager: int[] getAvailableTransports()>();

        i0 = lengthof r15;

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $i4 = r15[i5];

        $r12 = specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String getDataServicePackageName(int)>($i4);

        interfaceinvoke r14.<java.util.Set: boolean remove(java.lang.Object)>($r12);

        i5 = i5 + 1;

        goto label1;

     label2:
        r20 = new java.util.concurrent.CountDownLatch;

        specialinvoke r20.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

     label3:
        $i1 = interfaceinvoke r14.<java.util.Set: int size()>();

        r2 = newarray (java.lang.String)[$i1];

        interfaceinvoke r14.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        r3 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.permission.PermissionManager mPermissionManager>;

        $i2 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r4 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i2);

        r16 = <com.android.internal.telephony.dataconnection._$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo: com.android.internal.telephony.dataconnection.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' INSTANCE>;

        r21 = new com.android.internal.telephony.dataconnection._$$Lambda$DataServiceManager$gm7tzLm_diEKxyiT0UlWDC2zRy8;

        specialinvoke r21.<com.android.internal.telephony.dataconnection._$$Lambda$DataServiceManager$gm7tzLm_diEKxyiT0UlWDC2zRy8: void <init>(com.android.internal.telephony.dataconnection.DataServiceManager,java.util.concurrent.CountDownLatch)>(r0, r20);

        r22 = (java.util.concurrent.Executor) r16;

        virtualinvoke r3.<android.permission.PermissionManager: void revokeDefaultPermissionsFromDisabledTelephonyDataServices(java.lang.String[],android.os.UserHandle,java.util.concurrent.Executor,java.util.function.Consumer)>(r2, r4, r22, r21);

        staticinvoke <com.android.internal.telephony.util.TelephonyUtils: void waitUntilReady(java.util.concurrent.CountDownLatch,long)>(r20, 15000L);

        r17 = interfaceinvoke r14.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r10 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.String) $r10;

        $r11 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.app.AppOpsManager mAppOps>;

        $i3 = staticinvoke <android.os.UserHandle: int myUserId()>();

        virtualinvoke $r11.<android.app.AppOpsManager: void setMode(java.lang.String,int,java.lang.String,int)>("android:manage_ipsec_tunnels", $i3, r18, 2);

     label5:
        goto label4;

     label6:
        return;

     label7:
        $r13 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Binder to package manager died; failed to revoke DataService permissions.");

        throw $r13;

        catch java.lang.RuntimeException from label3 to label4 with label7;
        catch java.lang.RuntimeException from label4 to label5 with label7;
    }

    private void sendCompleteMessage(android.os.Message, int)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        android.os.Message r1;
        int i0;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        r1.<android.os.Message: int arg1> = i0;

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    private void unbindDataService()
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        com.android.internal.telephony.Phone $r2, $r6;
        android.content.Context $r3;
        com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceConnection $r4, $r15;
        android.os.IBinder $r5;
        boolean $z0;
        android.telephony.data.IDataService $r7, r13;
        int $i0;
        android.os.RemoteException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r12;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void revokePermissionsFromUnusedDataServices()>();

        r13 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.data.IDataService mIDataService>;

        if r13 == null goto label4;

        $r5 = interfaceinvoke r13.<android.telephony.data.IDataService: android.os.IBinder asBinder()>();

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean isBinderAlive()>();

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void log(java.lang.String)>("unbinding service");

     label1:
        $r7 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.data.IDataService mIDataService>;

        $r6 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r6.<com.android.internal.telephony.Phone: int getPhoneId()>();

        interfaceinvoke $r7.<android.telephony.data.IDataService: void removeDataServiceProvider(int)>($i0);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot remove data service provider. ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>($r12);

     label4:
        $r15 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceConnection mServiceConnection>;

        if $r15 == null goto label5;

        $r2 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r4 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceConnection mServiceConnection>;

        virtualinvoke $r3.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r4);

     label5:
        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.data.IDataService mIDataService> = null;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceConnection mServiceConnection> = null;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String mTargetBindingPackageName> = null;

        r0.<com.android.internal.telephony.dataconnection.DataServiceManager: boolean mBound> = 0;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void deactivateDataCall(int, int, android.os.Message)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        int i0, i1, $i2;
        android.os.Message r1, $r5;
        boolean $z0;
        com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback $r4;
        com.android.internal.telephony.Phone $r6;
        android.telephony.data.IDataService $r7;
        java.util.Map $r8, $r12;
        android.os.IBinder $r9, $r13;
        android.os.RemoteException $r11;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void log(java.lang.String)>("deactivateDataCall");

        $z0 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: boolean mBound>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Data service not bound.");

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void sendCompleteMessage(android.os.Message,int)>(r1, 4);

        return;

     label1:
        $r4 = new com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback;

        specialinvoke $r4.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: void <init>(com.android.internal.telephony.dataconnection.DataServiceManager,java.lang.String)>(r0, "deactivateDataCall");

        if r1 == null goto label2;

        $r8 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap>;

        $r9 = virtualinvoke $r4.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);

     label2:
        $r5 = virtualinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r4);

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: boolean sendMessageDelayed(android.os.Message,long)>($r5, 600000L);

        $r7 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.data.IDataService mIDataService>;

        $r6 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $i2 = virtualinvoke $r6.<com.android.internal.telephony.Phone: int getPhoneId()>();

        interfaceinvoke $r7.<android.telephony.data.IDataService: void deactivateDataCall(int,int,int,android.telephony.data.IDataServiceCallback)>($i2, i0, i1, $r4);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Cannot invoke deactivateDataCall on data service.");

        $r12 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap>;

        $r13 = virtualinvoke $r4.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r13);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void sendCompleteMessage(android.os.Message,int)>(r1, 4);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public int getTransportType()
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        $i0 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: int mTransportType>;

        return $i0;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        android.os.Message r1;
        int i0, $i1;
        java.lang.Object $r3;
        com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int what>;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled event ");

        $i1 = r1.<android.os.Message: int what>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>($r8);

        goto label3;

     label1:
        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        $r4 = (com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback) $r3;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void handleRequestUnresponded(com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback)>($r4);

        goto label3;

     label2:
        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void rebindDataService()>();

     label3:
        return;
    }

    public void lambda$grantPermissionsToService$0$DataServiceManager(java.util.concurrent.CountDownLatch, java.lang.Boolean)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.util.concurrent.CountDownLatch r1;
        java.lang.Boolean r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter0: java.util.concurrent.CountDownLatch;

        r2 := @parameter1: java.lang.Boolean;

        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.util.concurrent.CountDownLatch: void countDown()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Failed to grant permissions to service.");

     label2:
        return;
    }

    public void lambda$revokePermissionsFromUnusedDataServices$1$DataServiceManager(java.util.concurrent.CountDownLatch, java.lang.Boolean)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        java.util.concurrent.CountDownLatch r1;
        java.lang.Boolean r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter0: java.util.concurrent.CountDownLatch;

        r2 := @parameter1: java.lang.Boolean;

        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.util.concurrent.CountDownLatch: void countDown()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Failed to revoke permissions from data services.");

     label2:
        return;
    }

    public void registerForDataCallListChanged(android.os.Handler, int)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        android.os.Handler r1;
        int i0;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.RegistrantList mDataCallListChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, null);

     label1:
        return;
    }

    public void registerForServiceBindingChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        if r1 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.RegistrantList mServiceBindingChangedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

     label1:
        return;
    }

    public void requestDataCallList(android.os.Message)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        android.os.Message r1;
        boolean $z0;
        com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback $r4;
        com.android.internal.telephony.Phone $r5;
        android.telephony.data.IDataService $r6;
        int $i0;
        java.util.Map $r7, $r11;
        android.os.IBinder $r8, $r12;
        android.os.RemoteException $r10;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter0: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void log(java.lang.String)>("requestDataCallList");

        $z0 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: boolean mBound>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Data service not bound.");

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void sendCompleteMessage(android.os.Message,int)>(r1, 4);

        return;

     label1:
        $r4 = new com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback;

        specialinvoke $r4.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: void <init>(com.android.internal.telephony.dataconnection.DataServiceManager,java.lang.String)>(r0, "requestDataCallList");

        if r1 == null goto label2;

        $r7 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap>;

        $r8 = virtualinvoke $r4.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r1);

     label2:
        $r6 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.data.IDataService mIDataService>;

        $r5 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.Phone: int getPhoneId()>();

        interfaceinvoke $r6.<android.telephony.data.IDataService: void requestDataCallList(int,android.telephony.data.IDataServiceCallback)>($i0, $r4);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Cannot invoke requestDataCallList on data service.");

        $r11 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap>;

        $r12 = virtualinvoke $r4.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r12);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void sendCompleteMessage(android.os.Message,int)>(r1, 4);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void setDataProfile(java.util.List, boolean, android.os.Message)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        boolean z0, $z1;
        android.os.Message r1;
        com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback $r3;
        com.android.internal.telephony.Phone $r4;
        android.telephony.data.IDataService $r5;
        int $i0;
        java.util.Map $r6, $r10;
        android.os.IBinder $r7, $r11;
        android.os.RemoteException $r9;
        java.util.List r13;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r13 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void log(java.lang.String)>("setDataProfile");

        $z1 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: boolean mBound>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Data service not bound.");

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void sendCompleteMessage(android.os.Message,int)>(r1, 4);

        return;

     label1:
        $r3 = new com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback;

        specialinvoke $r3.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: void <init>(com.android.internal.telephony.dataconnection.DataServiceManager,java.lang.String)>(r0, "setDataProfile");

        if r1 == null goto label2;

        $r6 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap>;

        $r7 = virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r1);

     label2:
        $r5 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.data.IDataService mIDataService>;

        $r4 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r4.<com.android.internal.telephony.Phone: int getPhoneId()>();

        interfaceinvoke $r5.<android.telephony.data.IDataService: void setDataProfile(int,java.util.List,boolean,android.telephony.data.IDataServiceCallback)>($i0, r13, z0, $r3);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Cannot invoke setDataProfile on data service.");

        $r10 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap>;

        $r11 = virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void sendCompleteMessage(android.os.Message,int)>(r1, 4);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void setInitialAttachApn(android.telephony.data.DataProfile, boolean, android.os.Message)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        boolean z0, $z1;
        android.os.Message r1;
        com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback $r3;
        com.android.internal.telephony.Phone $r4;
        android.telephony.data.IDataService $r5;
        int $i0;
        java.util.Map $r6, $r10;
        android.os.IBinder $r7, $r11;
        android.os.RemoteException $r9;
        android.telephony.data.DataProfile r13;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r13 := @parameter0: android.telephony.data.DataProfile;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void log(java.lang.String)>("setInitialAttachApn");

        $z1 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: boolean mBound>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Data service not bound.");

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void sendCompleteMessage(android.os.Message,int)>(r1, 4);

        return;

     label1:
        $r3 = new com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback;

        specialinvoke $r3.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: void <init>(com.android.internal.telephony.dataconnection.DataServiceManager,java.lang.String)>(r0, "setInitialAttachApn");

        if r1 == null goto label2;

        $r6 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap>;

        $r7 = virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r1);

     label2:
        $r5 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.data.IDataService mIDataService>;

        $r4 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r4.<com.android.internal.telephony.Phone: int getPhoneId()>();

        interfaceinvoke $r5.<android.telephony.data.IDataService: void setInitialAttachApn(int,android.telephony.data.DataProfile,boolean,android.telephony.data.IDataServiceCallback)>($i0, r13, z0, $r3);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Cannot invoke setInitialAttachApn on data service.");

        $r10 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap>;

        $r11 = virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void sendCompleteMessage(android.os.Message,int)>(r1, 4);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void setupDataCall(int, android.telephony.data.DataProfile, boolean, boolean, int, android.net.LinkProperties, android.os.Message)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        int i0, i1, $i2;
        boolean z0, z1, $z2;
        android.net.LinkProperties r1;
        android.os.Message r2, $r5;
        com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback $r4;
        com.android.internal.telephony.Phone $r6;
        android.telephony.data.IDataService $r7;
        java.util.Map $r8, $r12;
        android.os.IBinder $r9, $r13;
        android.os.RemoteException $r11;
        android.telephony.data.DataProfile r15;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        i0 := @parameter0: int;

        r15 := @parameter1: android.telephony.data.DataProfile;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i1 := @parameter4: int;

        r1 := @parameter5: android.net.LinkProperties;

        r2 := @parameter6: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void log(java.lang.String)>("setupDataCall");

        $z2 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: boolean mBound>;

        if $z2 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Data service not bound.");

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void sendCompleteMessage(android.os.Message,int)>(r2, 4);

        return;

     label1:
        $r4 = new com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback;

        specialinvoke $r4.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: void <init>(com.android.internal.telephony.dataconnection.DataServiceManager,java.lang.String)>(r0, "setupDataCall");

        if r2 == null goto label2;

        $r8 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap>;

        $r9 = virtualinvoke $r4.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r2);

     label2:
        $r5 = virtualinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r4);

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: boolean sendMessageDelayed(android.os.Message,long)>($r5, 600000L);

        $r7 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: android.telephony.data.IDataService mIDataService>;

        $r6 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.Phone mPhone>;

        $i2 = virtualinvoke $r6.<com.android.internal.telephony.Phone: int getPhoneId()>();

        interfaceinvoke $r7.<android.telephony.data.IDataService: void setupDataCall(int,int,android.telephony.data.DataProfile,boolean,boolean,int,android.net.LinkProperties,android.telephony.data.IDataServiceCallback)>($i2, i0, r15, z0, z1, i1, r1, $r4);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void loge(java.lang.String)>("Cannot invoke setupDataCall on data service.");

        $r12 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: java.util.Map mMessageMap>;

        $r13 = virtualinvoke $r4.<com.android.internal.telephony.dataconnection.DataServiceManager$CellularDataServiceCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r13);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DataServiceManager: void sendCompleteMessage(android.os.Message,int)>(r2, 4);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void unregisterForDataCallListChanged(android.os.Handler)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter0: android.os.Handler;

        if r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.RegistrantList mDataCallListChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

     label1:
        return;
    }

    public void unregisterForServiceBindingChanged(android.os.Handler)
    {
        com.android.internal.telephony.dataconnection.DataServiceManager r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.DataServiceManager;

        r1 := @parameter0: android.os.Handler;

        if r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.dataconnection.DataServiceManager: com.android.internal.telephony.RegistrantList mServiceBindingChangedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.dataconnection.DataServiceManager: long REQUEST_UNRESPONDED_TIMEOUT> = 600000L;

        <com.android.internal.telephony.dataconnection.DataServiceManager: int EVENT_WATCHDOG_TIMEOUT> = 2;

        <com.android.internal.telephony.dataconnection.DataServiceManager: int EVENT_BIND_DATA_SERVICE> = 1;

        <com.android.internal.telephony.dataconnection.DataServiceManager: boolean DBG> = 1;

        <com.android.internal.telephony.dataconnection.DataServiceManager: java.lang.String DATA_CALL_RESPONSE> = "data_call_response";

        <com.android.internal.telephony.dataconnection.DataServiceManager: long CHANGE_PERMISSION_TIMEOUT_MS> = 15000L;

        return;
    }
}
