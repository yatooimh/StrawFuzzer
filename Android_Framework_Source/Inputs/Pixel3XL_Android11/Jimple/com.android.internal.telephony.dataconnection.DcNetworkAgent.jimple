public class com.android.internal.telephony.dataconnection.DcNetworkAgent extends android.net.NetworkAgent
{
    private static java.util.Set sInterfaceNames;
    public final com.android.internal.telephony.dataconnection.DcNetworkAgent$DcKeepaliveTracker keepaliveTracker;
    private com.android.internal.telephony.dataconnection.DataConnection mDataConnection;
    private final com.android.internal.telephony.LocalLog mNetCapsLocalLog;
    private android.net.NetworkCapabilities mNetworkCapabilities;
    private android.net.NetworkInfo mNetworkInfo;
    private com.android.internal.telephony.Phone mPhone;
    private final java.lang.String mTag;
    private int mTransportType;

    static void <clinit>()
    {
        java.util.HashSet $r0;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <com.android.internal.telephony.dataconnection.DcNetworkAgent: java.util.Set sInterfaceNames> = $r0;

        return;
    }

    void <init>(com.android.internal.telephony.dataconnection.DataConnection, com.android.internal.telephony.Phone, android.net.NetworkInfo, int, android.net.NetworkAgentConfig, android.net.NetworkProvider, int)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        com.android.internal.telephony.dataconnection.DataConnection r1;
        android.net.NetworkInfo r2, $r18;
        int i0, i1, $i2, $i3;
        android.net.NetworkProvider r3;
        android.content.Context $r4;
        android.os.Handler $r5;
        android.os.Looper $r6;
        android.net.NetworkCapabilities $r7, $r17;
        android.net.LinkProperties $r8, $r21, $r25, $r27;
        com.android.internal.telephony.dataconnection.DcNetworkAgent$DcKeepaliveTracker $r9;
        com.android.internal.telephony.LocalLog $r10;
        java.lang.StringBuilder $r12, $r32;
        android.net.Network $r14;
        java.lang.String $r16, $r19, $r20, $r26, $r28, $r34, $r35, $r36;
        boolean $z0;
        com.android.internal.telephony.Phone r29;
        android.net.NetworkAgentConfig r30;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r1 := @parameter0: com.android.internal.telephony.dataconnection.DataConnection;

        r29 := @parameter1: com.android.internal.telephony.Phone;

        r2 := @parameter2: android.net.NetworkInfo;

        i0 := @parameter3: int;

        r30 := @parameter4: android.net.NetworkAgentConfig;

        r3 := @parameter5: android.net.NetworkProvider;

        i1 := @parameter6: int;

        $r4 = virtualinvoke r29.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r5 = virtualinvoke r1.<com.android.internal.telephony.dataconnection.DataConnection: android.os.Handler getHandler()>();

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Looper getLooper()>();

        $r7 = virtualinvoke r1.<com.android.internal.telephony.dataconnection.DataConnection: android.net.NetworkCapabilities getNetworkCapabilities()>();

        $r8 = virtualinvoke r1.<com.android.internal.telephony.dataconnection.DataConnection: android.net.LinkProperties getLinkProperties()>();

        specialinvoke r0.<android.net.NetworkAgent: void <init>(android.content.Context,android.os.Looper,java.lang.String,android.net.NetworkCapabilities,android.net.LinkProperties,int,android.net.NetworkAgentConfig,android.net.NetworkProvider)>($r4, $r6, "DcNetworkAgent", $r7, $r8, i0, r30, r3);

        $r9 = new com.android.internal.telephony.dataconnection.DcNetworkAgent$DcKeepaliveTracker;

        specialinvoke $r9.<com.android.internal.telephony.dataconnection.DcNetworkAgent$DcKeepaliveTracker: void <init>(com.android.internal.telephony.dataconnection.DcNetworkAgent)>(r0);

        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DcNetworkAgent$DcKeepaliveTracker keepaliveTracker> = $r9;

        $r10 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r10.<com.android.internal.telephony.LocalLog: void <init>(int)>(50);

        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.LocalLog mNetCapsLocalLog> = $r10;

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.Network register()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DcNetworkAgent-");

        $r14 = virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.Network getNetwork()>();

        $i2 = $r14.<android.net.Network: int netId>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: java.lang.String mTag> = $r16;

        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.Phone mPhone> = r29;

        $r17 = virtualinvoke r1.<com.android.internal.telephony.dataconnection.DataConnection: android.net.NetworkCapabilities getNetworkCapabilities()>();

        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkCapabilities mNetworkCapabilities> = $r17;

        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: int mTransportType> = i1;

        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection> = r1;

        $r18 = new android.net.NetworkInfo;

        specialinvoke $r18.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>(r2);

        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkInfo mNetworkInfo> = $r18;

        $i3 = virtualinvoke r2.<android.net.NetworkInfo: int getSubtype()>();

        $r19 = virtualinvoke r2.<android.net.NetworkInfo: java.lang.String getSubtypeName()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void setLegacySubtype(int,java.lang.String)>($i3, $r19);

        $r20 = virtualinvoke r2.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void setLegacyExtraInfo(java.lang.String)>($r20);

        $r21 = virtualinvoke r1.<com.android.internal.telephony.dataconnection.DataConnection: android.net.LinkProperties getLinkProperties()>();

        if $r21 == null goto label1;

        $r25 = virtualinvoke r1.<com.android.internal.telephony.dataconnection.DataConnection: android.net.LinkProperties getLinkProperties()>();

        $r26 = virtualinvoke $r25.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r26);

        if $z0 != 0 goto label1;

        $r27 = virtualinvoke r1.<com.android.internal.telephony.dataconnection.DataConnection: android.net.LinkProperties getLinkProperties()>();

        $r28 = virtualinvoke $r27.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void checkDuplicateInterface(java.lang.String)>($r28);

     label1:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: java.lang.String mTag>;

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" created for data connection ");

        $r35 = virtualinvoke r1.<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String getName()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void logd(java.lang.String)>($r36);

        return;
    }

    static void access$000(com.android.internal.telephony.dataconnection.DcNetworkAgent, java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void logd(java.lang.String)>(r1);

        return;
    }

    static void access$100(com.android.internal.telephony.dataconnection.DcNetworkAgent, java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void loge(java.lang.String)>(r1);

        return;
    }

    private void checkDuplicateInterface(java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.lang.String r1, r10;
        java.util.Set $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.util.UUID $r8;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r1 := @parameter0: java.lang.String;

        $r2 = <com.android.internal.telephony.dataconnection.DcNetworkAgent: java.util.Set sInterfaceNames>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate interface ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is detected.");

        r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void log(java.lang.String)>(r10);

        $r8 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>("02f3d3f6-4613-4415-b6cb-8d92c8a938a6");

        staticinvoke <android.telephony.AnomalyReporter: void reportAnomaly(java.util.UUID,java.lang.String)>($r8, r10);

     label1:
        $r3 = <com.android.internal.telephony.dataconnection.DcNetworkAgent: java.util.Set sInterfaceNames>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    private boolean isOwned(com.android.internal.telephony.dataconnection.DataConnection, java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.lang.String r1, $r8, $r11, $r13, $r16;
        java.lang.StringBuilder r2, r19;
        com.android.internal.telephony.dataconnection.DataConnection $r3, $r4, $r7, r18;
        java.lang.Throwable $r17;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r18 := @parameter0: com.android.internal.telephony.dataconnection.DataConnection;

        r1 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        if $r3 != null goto label3;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" called on no-owner DcNetworkAgent!");

        $r16 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void loge(java.lang.String)>($r16);

     label2:
        exitmonitor r0;

        return 0;

     label3:
        $r4 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        if $r4 == r18 goto label5;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": This agent belongs to ");

        $r7 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String getName()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ignored the request from ");

        $r11 = virtualinvoke r18.<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String getName()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void loge(java.lang.String)>($r13);

     label4:
        exitmonitor r0;

        return 0;

     label5:
        exitmonitor r0;

        return 1;

     label6:
        $r17 := @caughtexception;

        exitmonitor r0;

        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    private void logd(java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: java.lang.String mTag>;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    private void loge(java.lang.String)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: java.lang.String mTag>;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    public void acquireOwnership(com.android.internal.telephony.dataconnection.DataConnection, int)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        int i0;
        java.lang.StringBuilder r1;
        java.lang.String $r2, $r5;
        java.lang.Throwable $r6;
        com.android.internal.telephony.dataconnection.DataConnection r7;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r7 := @parameter0: com.android.internal.telephony.dataconnection.DataConnection;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection> = r7;

        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: int mTransportType> = i0;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r7.<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" acquired the ownership of this agent.");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void logd(java.lang.String)>($r5);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        com.android.internal.telephony.IndentingPrintWriter $r3;
        java.lang.String $r4;
        com.android.internal.telephony.LocalLog $r6;
        java.io.PrintWriter r8;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r1 := @parameter0: java.io.FileDescriptor;

        r8 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = new com.android.internal.telephony.IndentingPrintWriter;

        specialinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r8, "  ");

        $r4 = virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r4);

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("Net caps logs:");

        $r6 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.LocalLog mNetCapsLocalLog>;

        virtualinvoke $r6.<com.android.internal.telephony.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, $r3, r2);

        virtualinvoke $r3.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    public com.android.internal.telephony.dataconnection.DataConnection getDataConnection()
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.lang.Throwable $r1;
        com.android.internal.telephony.dataconnection.DataConnection r2;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        entermonitor r0;

     label1:
        r2 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.net.NetworkInfo getNetworkInfo()
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.lang.Throwable $r1;
        android.net.NetworkInfo r2;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        entermonitor r0;

     label1:
        r2 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkInfo mNetworkInfo>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    java.lang.String getTag()
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        $r1 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: java.lang.String mTag>;

        return $r1;
    }

    public void onBandwidthUpdateRequested()
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        com.android.internal.telephony.dataconnection.DataConnection $r2, $r5;
        com.android.internal.telephony.Phone $r3, $r4;
        int $i0, $i1;
        com.android.internal.telephony.CommandsInterface $r6;
        android.os.Message $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        if $r2 != null goto label3;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void loge(java.lang.String)>("onBandwidthUpdateRequested called on no-owner DcNetworkAgent!");

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r3.<com.android.internal.telephony.Phone: int getLceStatus()>();

        if $i0 != 1 goto label4;

        $i1 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: int mTransportType>;

        if $i1 != 1 goto label4;

        $r4 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.Phone mPhone>;

        $r6 = $r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        $r5 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        $r7 = virtualinvoke $r5.<com.android.internal.telephony.dataconnection.DataConnection: android.os.Message obtainMessage(int)>(262158);

        interfaceinvoke $r6.<com.android.internal.telephony.CommandsInterface: void pullLceData(android.os.Message)>($r7);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onNetworkUnwanted()
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        com.android.internal.telephony.dataconnection.DataConnection $r1, $r3, $r7;
        java.lang.String $r4, $r6;
        java.lang.Throwable $r8;
        java.lang.StringBuilder r9;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        if $r1 != null goto label3;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void loge(java.lang.String)>("onNetworkUnwanted found called on no-owner DcNetworkAgent!");

     label2:
        exitmonitor r0;

        return;

     label3:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onNetworkUnwanted called. Now tear down the data connection ");

        $r3 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String getName()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void logd(java.lang.String)>($r6);

        $r7 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        virtualinvoke $r7.<com.android.internal.telephony.dataconnection.DataConnection: void tearDownAll(java.lang.String,int,android.os.Message)>("releasedByConnectivityService", 2, null);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onStartSocketKeepalive(int, java.time.Duration, android.net.KeepalivePacketData)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        int i0, $i2;
        android.net.KeepalivePacketData r1;
        com.android.internal.telephony.dataconnection.DataConnection $r2, $r3;
        boolean $z0;
        long $l1;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.time.Duration r6;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        i0 := @parameter0: int;

        r6 := @parameter1: java.time.Duration;

        r1 := @parameter2: android.net.KeepalivePacketData;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        if $r2 != null goto label3;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void loge(java.lang.String)>("onStartSocketKeepalive called on no-owner DcNetworkAgent!");

     label2:
        exitmonitor r0;

        return;

     label3:
        $z0 = r1 instanceof android.net.NattKeepalivePacketData;

        if $z0 == 0 goto label5;

        $r3 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        $l1 = virtualinvoke r6.<java.time.Duration: long getSeconds()>();

        $i2 = (int) $l1;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DataConnection: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(262165, i0, $i2, r1);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label4:
        goto label6;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void sendSocketKeepaliveEvent(int,int)>(i0, -30);

     label6:
        exitmonitor r0;

        return;

     label7:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void onStopSocketKeepalive(int)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        int i0;
        com.android.internal.telephony.dataconnection.DataConnection $r2, $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        if $r2 != null goto label3;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void loge(java.lang.String)>("onStopSocketKeepalive called on no-owner DcNetworkAgent!");

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DataConnection: android.os.Message obtainMessage(int,int)>(262166, i0);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onValidationStatus(int, android.net.Uri)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        int i0, $i1, $i2;
        com.android.internal.telephony.dataconnection.DataConnection $r1, $r8;
        java.lang.String $r6, $r9;
        com.android.internal.telephony.Phone $r7;
        android.os.Message $r10;
        java.lang.Throwable $r11;
        android.net.Uri r12;
        java.lang.StringBuilder r13;
        com.android.internal.telephony.dataconnection.DcTracker r14;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        i0 := @parameter0: int;

        r12 := @parameter1: android.net.Uri;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        if $r1 != null goto label3;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void loge(java.lang.String)>("onValidationStatus called on no-owner DcNetworkAgent!");

     label2:
        exitmonitor r0;

        return;

     label3:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("validation status: ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with redirection URL: ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r6 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void logd(java.lang.String)>($r6);

        $r7 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.Phone mPhone>;

        $i1 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: int mTransportType>;

        r14 = virtualinvoke $r7.<com.android.internal.telephony.Phone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>($i1);

     label4:
        if r14 == null goto label6;

     label5:
        $r8 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        $i2 = virtualinvoke $r8.<com.android.internal.telephony.dataconnection.DataConnection: int getCid()>();

        $r9 = virtualinvoke r12.<android.net.Uri: java.lang.String toString()>();

        $r10 = virtualinvoke r14.<com.android.internal.telephony.dataconnection.DcTracker: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(270380, i0, $i2, $r9);

        virtualinvoke $r10.<android.os.Message: void sendToTarget()>();

     label6:
        exitmonitor r0;

        return;

     label7:
        $r11 := @caughtexception;

        exitmonitor r0;

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void releaseOwnership(com.android.internal.telephony.dataconnection.DataConnection)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.lang.StringBuilder r1, r20;
        com.android.internal.telephony.dataconnection.DataConnection $r2, $r3, $r5, $r11, r19;
        java.lang.String $r6, $r9, $r12, $r15, $r17;
        java.lang.Throwable $r18;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r19 := @parameter0: com.android.internal.telephony.dataconnection.DataConnection;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        if $r2 != null goto label3;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void loge(java.lang.String)>("releaseOwnership called on no-owner DcNetworkAgent!");

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        if $r3 == r19 goto label5;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("releaseOwnership: This agent belongs to ");

        $r11 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        $r12 = virtualinvoke $r11.<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ignored the request from ");

        $r15 = virtualinvoke r19.<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void log(java.lang.String)>($r17);

     label4:
        exitmonitor r0;

        return;

     label5:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data connection ");

        $r5 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String getName()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" released the ownership.");

        $r9 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void logd(java.lang.String)>($r9);

        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection> = null;

     label6:
        exitmonitor r0;

        return;

     label7:
        $r18 := @caughtexception;

        exitmonitor r0;

        throw $r18;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void sendLinkProperties(android.net.LinkProperties, com.android.internal.telephony.dataconnection.DataConnection)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        com.android.internal.telephony.dataconnection.DataConnection r1;
        boolean z0;
        java.lang.Throwable $r2;
        android.net.LinkProperties r3;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r3 := @parameter0: android.net.LinkProperties;

        r1 := @parameter1: com.android.internal.telephony.dataconnection.DataConnection;

        entermonitor r0;

     label1:
        z0 = specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: boolean isOwned(com.android.internal.telephony.dataconnection.DataConnection,java.lang.String)>(r1, "sendLinkProperties");

     label2:
        if z0 != 0 goto label3;

        exitmonitor r0;

        return;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void sendLinkProperties(android.net.LinkProperties)>(r3);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void sendNetworkCapabilities(android.net.NetworkCapabilities, com.android.internal.telephony.dataconnection.DataConnection)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.net.NetworkCapabilities $r1, $r3, $r16, $r19, r21;
        com.android.internal.telephony.Phone $r8, $r18;
        android.telephony.ServiceState $r9;
        int $i0, $i1;
        com.android.internal.telephony.dataconnection.DataConnection $r12, r22;
        java.lang.String $r13, r24;
        com.android.internal.telephony.LocalLog $r15;
        com.android.internal.telephony.metrics.TelephonyMetrics $r17;
        java.lang.Throwable $r20;
        java.lang.StringBuilder r23;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r21 := @parameter0: android.net.NetworkCapabilities;

        r22 := @parameter1: com.android.internal.telephony.dataconnection.DataConnection;

        entermonitor r0;

     label1:
        z0 = specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: boolean isOwned(com.android.internal.telephony.dataconnection.DataConnection,java.lang.String)>(r22, "sendNetworkCapabilities");

     label2:
        if z0 != 0 goto label3;

        exitmonitor r0;

        return;

     label3:
        $r1 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkCapabilities mNetworkCapabilities>;

        $z1 = virtualinvoke r21.<android.net.NetworkCapabilities: boolean equals(java.lang.Object)>($r1);

        if $z1 != 0 goto label6;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Changed from ");

        $r3 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Data RAT=");

        $r8 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.Phone mPhone>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $i0 = virtualinvoke $r9.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dc=");

        $r12 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String getName()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r24 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void logd(java.lang.String)>(r24);

        $r15 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.LocalLog mNetCapsLocalLog>;

        virtualinvoke $r15.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>(r24);

        $z2 = virtualinvoke r21.<android.net.NetworkCapabilities: boolean hasCapability(int)>(12);

        if $z2 == 0 goto label5;

        $r16 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkCapabilities mNetworkCapabilities>;

        if $r16 == null goto label4;

        $z3 = virtualinvoke r21.<android.net.NetworkCapabilities: boolean hasCapability(int)>(25);

        $r19 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkCapabilities mNetworkCapabilities>;

        $z4 = virtualinvoke $r19.<android.net.NetworkCapabilities: boolean hasCapability(int)>(25);

        if $z3 == $z4 goto label5;

     label4:
        $r17 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        $r18 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.Phone mPhone>;

        $i1 = virtualinvoke $r18.<com.android.internal.telephony.Phone: int getPhoneId()>();

        virtualinvoke $r17.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeNetworkCapabilitiesChangedEvent(int,android.net.NetworkCapabilities)>($i1, r21);

     label5:
        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkCapabilities mNetworkCapabilities> = r21;

     label6:
        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void sendNetworkCapabilities(android.net.NetworkCapabilities)>(r21);

     label7:
        exitmonitor r0;

        return;

     label8:
        $r20 := @caughtexception;

        exitmonitor r0;

        throw $r20;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void sendNetworkInfo(android.net.NetworkInfo, com.android.internal.telephony.dataconnection.DataConnection)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        boolean z0;
        android.net.NetworkInfo$State r1, r2, $r8, $r9, $r10;
        int i0, $i1;
        android.net.NetworkInfo $r3, $r4, $r7, r14, r16;
        java.lang.String $r5, $r6, $r11, $r12;
        java.lang.Throwable $r13;
        com.android.internal.telephony.dataconnection.DataConnection r15;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r14 := @parameter0: android.net.NetworkInfo;

        r15 := @parameter1: com.android.internal.telephony.dataconnection.DataConnection;

        entermonitor r0;

     label1:
        z0 = specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: boolean isOwned(com.android.internal.telephony.dataconnection.DataConnection,java.lang.String)>(r15, "sendNetworkInfo");

     label2:
        if z0 != 0 goto label3;

        exitmonitor r0;

        return;

     label3:
        $r3 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        r1 = virtualinvoke $r3.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        r2 = virtualinvoke r14.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r4 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        $r5 = virtualinvoke $r4.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        $r6 = virtualinvoke r14.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        if $r5 == $r6 goto label4;

        $r12 = virtualinvoke r14.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void setLegacyExtraInfo(java.lang.String)>($r12);

     label4:
        i0 = virtualinvoke r14.<android.net.NetworkInfo: int getSubtype()>();

        $r7 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        $i1 = virtualinvoke $r7.<android.net.NetworkInfo: int getSubtype()>();

        if $i1 == i0 goto label5;

        $r11 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)>(i0);

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void setLegacySubtype(int,java.lang.String)>(i0, $r11);

     label5:
        $r8 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State SUSPENDED>;

        if r1 == $r8 goto label6;

        $r10 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if r1 != $r10 goto label7;

     label6:
        $r9 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State DISCONNECTED>;

        if r2 != $r9 goto label7;

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void unregister(com.android.internal.telephony.dataconnection.DataConnection)>(r15);

     label7:
        r16 = new android.net.NetworkInfo;

        specialinvoke r16.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>(r14);

        r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkInfo mNetworkInfo> = r16;

     label8:
        exitmonitor r0;

        return;

     label9:
        $r13 := @caughtexception;

        exitmonitor r0;

        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public void sendNetworkScore(int, com.android.internal.telephony.dataconnection.DataConnection)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        int i0;
        boolean z0;
        java.lang.Throwable $r1;
        com.android.internal.telephony.dataconnection.DataConnection r2;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        i0 := @parameter0: int;

        r2 := @parameter1: com.android.internal.telephony.dataconnection.DataConnection;

        entermonitor r0;

     label1:
        z0 = specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: boolean isOwned(com.android.internal.telephony.dataconnection.DataConnection,java.lang.String)>(r2, "sendNetworkScore");

     label2:
        if z0 != 0 goto label3;

        exitmonitor r0;

        return;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void sendNetworkScore(int)>(i0);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r6, $r11, r13;
        android.net.NetworkCapabilities $r9;
        com.android.internal.telephony.dataconnection.DataConnection r12;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DcNetworkAgent: mDataConnection=");

        r12 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: com.android.internal.telephony.dataconnection.DataConnection mDataConnection>;

        if r12 == null goto label1;

        r13 = virtualinvoke r12.<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String getName()>();

        goto label2;

     label1:
        r13 = null;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mTransportType=");

        $i0 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: int mTransportType>;

        $r6 = staticinvoke <android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNetworkCapabilities=");

        $r9 = r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public void unregister(com.android.internal.telephony.dataconnection.DataConnection)
    {
        com.android.internal.telephony.dataconnection.DcNetworkAgent r0;
        boolean z0, $z1;
        android.net.LinkProperties $r1, $r2, $r5;
        java.lang.String $r3, $r6;
        java.util.Set $r4;
        java.lang.Throwable $r7;
        com.android.internal.telephony.dataconnection.DataConnection r8;

        r0 := @this: com.android.internal.telephony.dataconnection.DcNetworkAgent;

        r8 := @parameter0: com.android.internal.telephony.dataconnection.DataConnection;

        entermonitor r0;

     label1:
        z0 = specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: boolean isOwned(com.android.internal.telephony.dataconnection.DataConnection,java.lang.String)>(r8, "unregister");

     label2:
        if z0 != 0 goto label3;

        exitmonitor r0;

        return;

     label3:
        $r1 = virtualinvoke r8.<com.android.internal.telephony.dataconnection.DataConnection: android.net.LinkProperties getLinkProperties()>();

        if $r1 == null goto label4;

        $r2 = virtualinvoke r8.<com.android.internal.telephony.dataconnection.DataConnection: android.net.LinkProperties getLinkProperties()>();

        $r3 = virtualinvoke $r2.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z1 != 0 goto label4;

        $r4 = <com.android.internal.telephony.dataconnection.DcNetworkAgent: java.util.Set sInterfaceNames>;

        $r5 = virtualinvoke r8.<com.android.internal.telephony.dataconnection.DataConnection: android.net.LinkProperties getLinkProperties()>();

        $r6 = virtualinvoke $r5.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>($r6);

     label4:
        specialinvoke r0.<com.android.internal.telephony.dataconnection.DcNetworkAgent: void logd(java.lang.String)>("Unregister from connectivity service");

        specialinvoke r0.<android.net.NetworkAgent: void unregister()>();

     label5:
        exitmonitor r0;

        return;

     label6:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
