public class com.android.internal.telephony.dataconnection.TelephonyNetworkFactory extends com.android.internal.telephony.NetworkFactory
{
    private static final int ACTION_NO_OP;
    private static final int ACTION_RELEASE;
    private static final int ACTION_REQUEST;
    protected static final boolean DBG;
    public static final int EVENT_ACTIVE_PHONE_SWITCH;
    private static final int EVENT_DATA_HANDOVER_COMPLETED;
    private static final int EVENT_DATA_HANDOVER_NEEDED;
    private static final int EVENT_NETWORK_RELEASE;
    private static final int EVENT_NETWORK_REQUEST;
    public static final int EVENT_SUBSCRIPTION_CHANGED;
    private static final int REQUEST_LOG_SIZE;
    private static final int TELEPHONY_NETWORK_SCORE;
    public final java.lang.String LOG_TAG;
    public final android.os.Handler mInternalHandler;
    private final com.android.internal.telephony.LocalLog mLocalLog;
    private final java.util.Map mNetworkRequests;
    private final java.util.Map mPendingHandovers;
    private final com.android.internal.telephony.Phone mPhone;
    private final com.android.internal.telephony.PhoneSwitcher mPhoneSwitcher;
    private final com.android.internal.telephony.SubscriptionController mSubscriptionController;
    private int mSubscriptionId;
    private final android.telephony.SubscriptionManager$OnSubscriptionsChangedListener mSubscriptionsChangedListener;
    private final com.android.internal.telephony.dataconnection.TransportManager mTransportManager;

    public void <init>(android.os.Looper, com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        com.android.internal.telephony.Phone r1, $r15, $r20, $r28;
        android.content.Context r2, $r29;
        java.lang.StringBuilder $r4, $r18;
        int $i0, $i1, $i2;
        java.lang.String $r8, $r23;
        com.android.internal.telephony.LocalLog $r9;
        java.util.HashMap $r10, $r11;
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory$1 $r12;
        com.android.internal.telephony.dataconnection.TransportManager $r13, $r27;
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory$InternalHandler $r14;
        android.net.NetworkCapabilities $r16;
        com.android.internal.telephony.PhoneSwitcher $r17, $r25;
        android.os.Handler $r24, $r26;
        android.telephony.SubscriptionManager $r30;
        android.telephony.SubscriptionManager$OnSubscriptionsChangedListener $r31;
        android.os.Looper r32;
        com.android.internal.telephony.SubscriptionController r33;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r32 := @parameter0: android.os.Looper;

        r1 := @parameter1: com.android.internal.telephony.Phone;

        r2 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TelephonyNetworkFactory[");

        $i0 = virtualinvoke r1.<com.android.internal.telephony.Phone: int getPhoneId()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.NetworkFactory: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkCapabilities)>(r32, r2, $r8, null);

        $r9 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r9.<com.android.internal.telephony.LocalLog: void <init>(int)>(40);

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.LocalLog mLocalLog> = $r9;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mNetworkRequests> = $r10;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mPendingHandovers> = $r11;

        $r12 = new com.android.internal.telephony.dataconnection.TelephonyNetworkFactory$1;

        specialinvoke $r12.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory$1: void <init>(com.android.internal.telephony.dataconnection.TelephonyNetworkFactory)>(r0);

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: android.telephony.SubscriptionManager$OnSubscriptionsChangedListener mSubscriptionsChangedListener> = $r12;

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone> = r1;

        $r13 = virtualinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.dataconnection.TransportManager getTransportManager()>();

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.dataconnection.TransportManager mTransportManager> = $r13;

        $r14 = new com.android.internal.telephony.dataconnection.TelephonyNetworkFactory$InternalHandler;

        specialinvoke $r14.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory$InternalHandler: void <init>(com.android.internal.telephony.dataconnection.TelephonyNetworkFactory,android.os.Looper)>(r0, r32);

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: android.os.Handler mInternalHandler> = $r14;

        r33 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.SubscriptionController mSubscriptionController> = r33;

        $r15 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone>;

        $i1 = virtualinvoke $r15.<com.android.internal.telephony.Phone: int getPhoneId()>();

        $r16 = specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: android.net.NetworkCapabilities makeNetworkFilter(com.android.internal.telephony.SubscriptionController,int)>(r33, $i1);

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void setCapabilityFilter(android.net.NetworkCapabilities)>($r16);

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void setScoreFilter(int)>(50);

        $r17 = staticinvoke <com.android.internal.telephony.PhoneSwitcher: com.android.internal.telephony.PhoneSwitcher getInstance()>();

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.PhoneSwitcher mPhoneSwitcher> = $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TelephonyNetworkFactory[");

        $r20 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone>;

        $i2 = virtualinvoke $r20.<com.android.internal.telephony.Phone: int getPhoneId()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.lang.String LOG_TAG> = $r23;

        $r25 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.PhoneSwitcher mPhoneSwitcher>;

        $r24 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: android.os.Handler mInternalHandler>;

        virtualinvoke $r25.<com.android.internal.telephony.PhoneSwitcher: void registerForActivePhoneSwitch(android.os.Handler,int,java.lang.Object)>($r24, 1, null);

        $r27 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        $r26 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: android.os.Handler mInternalHandler>;

        virtualinvoke $r27.<com.android.internal.telephony.dataconnection.TransportManager: void registerForHandoverNeededEvent(android.os.Handler,int)>($r26, 5);

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int mSubscriptionId> = -1;

        $r28 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone>;

        $r29 = virtualinvoke $r28.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r30 = staticinvoke <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager 'from'(android.content.Context)>($r29);

        $r31 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: android.telephony.SubscriptionManager$OnSubscriptionsChangedListener mSubscriptionsChangedListener>;

        virtualinvoke $r30.<android.telephony.SubscriptionManager: void addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>($r31);

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void register()>();

        return;
    }

    static void access$000(com.android.internal.telephony.dataconnection.TelephonyNetworkFactory)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void onActivePhoneSwitch()>();

        return;
    }

    static void access$100(com.android.internal.telephony.dataconnection.TelephonyNetworkFactory)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void onSubIdChange()>();

        return;
    }

    static void access$200(com.android.internal.telephony.dataconnection.TelephonyNetworkFactory, android.os.Message)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void onNeedNetworkFor(android.os.Message)>(r1);

        return;
    }

    static void access$300(com.android.internal.telephony.dataconnection.TelephonyNetworkFactory, android.os.Message)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void onReleaseNetworkFor(android.os.Message)>(r1);

        return;
    }

    static void access$400(com.android.internal.telephony.dataconnection.TelephonyNetworkFactory, int, int, com.android.internal.telephony.dataconnection.TransportManager$HandoverParams)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        int i0, i1;
        com.android.internal.telephony.dataconnection.TransportManager$HandoverParams r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: com.android.internal.telephony.dataconnection.TransportManager$HandoverParams;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void onDataHandoverNeeded(int,int,com.android.internal.telephony.dataconnection.TransportManager$HandoverParams)>(i0, i1, r1);

        return;
    }

    static java.util.Map access$500(com.android.internal.telephony.dataconnection.TelephonyNetworkFactory)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        $r1 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mPendingHandovers>;

        return $r1;
    }

    static void access$600(com.android.internal.telephony.dataconnection.TelephonyNetworkFactory, android.net.NetworkRequest, boolean, int, boolean, com.android.internal.telephony.dataconnection.TransportManager$HandoverParams)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        android.net.NetworkRequest r1;
        boolean z0, z1;
        int i0;
        com.android.internal.telephony.dataconnection.TransportManager$HandoverParams r2;

        r0 := @parameter0: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter1: android.net.NetworkRequest;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        z1 := @parameter4: boolean;

        r2 := @parameter5: com.android.internal.telephony.dataconnection.TransportManager$HandoverParams;

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void onDataHandoverSetupCompleted(android.net.NetworkRequest,boolean,int,boolean,com.android.internal.telephony.dataconnection.TransportManager$HandoverParams)>(r1, z0, i0, z1, r2);

        return;
    }

    private static int getAction(boolean, boolean)
    {
        boolean z0, z1;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 != 0 goto label1;

        if z1 == 0 goto label1;

        return 1;

     label1:
        if z0 == 0 goto label2;

        if z1 != 0 goto label2;

        return 2;

     label2:
        return 0;
    }

    private int getTransportTypeFromNetworkRequest(android.net.NetworkRequest)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        android.net.NetworkRequest r1;
        int i0, $i1;
        com.android.internal.telephony.dataconnection.TransportManager $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        i0 = staticinvoke <com.android.internal.telephony.dataconnection.ApnContext: int getApnTypeFromNetworkRequest(android.net.NetworkRequest)>(r1);

        $r2 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        $i1 = virtualinvoke $r2.<com.android.internal.telephony.dataconnection.TransportManager: int getCurrentTransport(int)>(i0);

        return $i1;
    }

    private android.net.NetworkCapabilities makeNetworkFilter(int)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        int i0;
        android.net.NetworkCapabilities $r2;
        android.net.TelephonyNetworkSpecifier$Builder $r16, $r17;
        android.net.TelephonyNetworkSpecifier $r18;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        i0 := @parameter0: int;

        $r2 = new android.net.NetworkCapabilities;

        specialinvoke $r2.<android.net.NetworkCapabilities: void <init>()>();

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addTransportType(int)>(0);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(0);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(1);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(2);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(3);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(4);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(5);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(7);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(8);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(9);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(10);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(13);

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(12);

        $r16 = new android.net.TelephonyNetworkSpecifier$Builder;

        specialinvoke $r16.<android.net.TelephonyNetworkSpecifier$Builder: void <init>()>();

        $r17 = virtualinvoke $r16.<android.net.TelephonyNetworkSpecifier$Builder: android.net.TelephonyNetworkSpecifier$Builder setSubscriptionId(int)>(i0);

        $r18 = virtualinvoke $r17.<android.net.TelephonyNetworkSpecifier$Builder: android.net.TelephonyNetworkSpecifier build()>();

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setNetworkSpecifier(android.net.NetworkSpecifier)>($r18);

        return $r2;
    }

    private android.net.NetworkCapabilities makeNetworkFilter(com.android.internal.telephony.SubscriptionController, int)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        com.android.internal.telephony.SubscriptionController r1;
        int i0, $i1;
        android.net.NetworkCapabilities $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter0: com.android.internal.telephony.SubscriptionController;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r1.<com.android.internal.telephony.SubscriptionController: int getSubIdUsingPhoneId(int)>(i0);

        $r2 = specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: android.net.NetworkCapabilities makeNetworkFilter(int)>($i1);

        return $r2;
    }

    private void onActivePhoneSwitch()
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        java.util.Iterator r1;
        android.net.NetworkRequest r2;
        boolean z0, $z1, z2;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        java.util.Map $r4, r22;
        java.util.Set $r5;
        java.lang.Object $r6, $r7, $r8;
        java.lang.Integer $r9, $r18;
        com.android.internal.telephony.Phone $r10;
        com.android.internal.telephony.PhoneSwitcher $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r17, r21;
        java.util.Map$Entry r20;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        $r4 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mNetworkRequests>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        r2 = (android.net.NetworkRequest) $r7;

        $r8 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.Integer) $r8;

        i4 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        i5 = -1;

        if i4 == -1 goto label02;

        z2 = 1;

        goto label03;

     label02:
        z2 = 0;

     label03:
        $r11 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.PhoneSwitcher mPhoneSwitcher>;

        $r10 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone>;

        $i1 = virtualinvoke $r10.<com.android.internal.telephony.Phone: int getPhoneId()>();

        z0 = virtualinvoke $r11.<com.android.internal.telephony.PhoneSwitcher: boolean shouldApplyNetworkRequest(android.net.NetworkRequest,int)>(r2, $i1);

        i0 = staticinvoke <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int getAction(boolean,boolean)>(z2, z0);

        if i0 != 0 goto label04;

        goto label01;

     label04:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onActivePhoneSwitch: ");

        if i0 != 1 goto label05;

        r21 = "Requesting";

        goto label06;

     label05:
        r21 = "Releasing";

     label06:
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" network request ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void logl(java.lang.String)>($r17);

        i6 = specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int getTransportTypeFromNetworkRequest(android.net.NetworkRequest)>(r2);

        if i0 != 1 goto label07;

        $i3 = specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int getTransportTypeFromNetworkRequest(android.net.NetworkRequest)>(r2);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void requestNetworkInternal(android.net.NetworkRequest,int,int,android.os.Message)>(r2, 1, $i3, null);

        goto label08;

     label07:
        if i0 != 2 goto label08;

        $i2 = specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int getTransportTypeFromNetworkRequest(android.net.NetworkRequest)>(r2);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void releaseNetworkInternal(android.net.NetworkRequest,int,int)>(r2, 2, $i2);

     label08:
        r22 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mNetworkRequests>;

        if z0 == 0 goto label09;

        i5 = i6;

     label09:
        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r18);

        goto label01;

     label10:
        return;
    }

    private void onDataHandoverNeeded(int, int, com.android.internal.telephony.dataconnection.TransportManager$HandoverParams)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        int i0, i1, i2, $i3, $i4;
        boolean z0, $z1, z2, z3, z4;
        com.android.internal.telephony.dataconnection.DataConnection r1;
        java.lang.StringBuilder $r2, $r19, $r26, $r42, $r50;
        java.lang.String $r4, $r7, $r9, $r21, $r24, $r25, $r28, $r31, $r35, $r44, $r47, $r49, $r52, $r55, $r57;
        com.android.internal.telephony.dataconnection.TransportManager $r10;
        java.util.Map $r11, $r40;
        java.util.Set $r12;
        com.android.internal.telephony.dataconnection.TransportManager$HandoverParams$HandoverCallback $r13;
        java.lang.Object $r14, $r15, $r16;
        java.lang.Integer $r17, $r36;
        com.android.internal.telephony.Phone $r18;
        android.os.Handler $r38;
        android.os.Bundle $r39;
        com.android.internal.telephony.dataconnection.TransportManager$HandoverParams r58;
        java.util.Iterator r61;
        java.util.Map$Entry r62;
        android.net.NetworkRequest r63;
        com.android.internal.telephony.dataconnection.DcTracker r64;
        android.os.Message r65;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r58 := @parameter2: com.android.internal.telephony.dataconnection.TransportManager$HandoverParams;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDataHandoverNeeded: apnType=");

        $r4 = staticinvoke <android.telephony.data.ApnSetting: java.lang.String getApnTypeString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", target transport=");

        $r7 = staticinvoke <android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void log(java.lang.String)>($r9);

        $r10 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.dataconnection.TransportManager mTransportManager>;

        $i3 = virtualinvoke $r10.<com.android.internal.telephony.dataconnection.TransportManager: int getCurrentTransport(int)>(i0);

        if $i3 != i1 goto label1;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("APN type ");

        $r52 = staticinvoke <android.telephony.data.ApnSetting: java.lang.String getApnTypeString(int)>(i0);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already on ");

        $r55 = staticinvoke <android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)>(i1);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void log(java.lang.String)>($r57);

        return;

     label1:
        z2 = 0;

        $r11 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mNetworkRequests>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();

        r61 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        z0 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>();

        z3 = 0;

        if z0 == 0 goto label8;

        $r14 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>();

        r62 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke r62.<java.util.Map$Entry: java.lang.Object getKey()>();

        r63 = (android.net.NetworkRequest) $r15;

        $r16 = interfaceinvoke r62.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.lang.Integer) $r16;

        i2 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        if i2 == -1 goto label3;

        z3 = 1;

     label3:
        z4 = z2;

        $i4 = staticinvoke <com.android.internal.telephony.dataconnection.ApnContext: int getApnTypeFromNetworkRequest(android.net.NetworkRequest)>(r63);

        if $i4 != i0 goto label7;

        z4 = z2;

        if z3 == 0 goto label7;

        z4 = z2;

        if i2 == i1 goto label7;

        $r18 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone>;

        r64 = virtualinvoke $r18.<com.android.internal.telephony.Phone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(i2);

        if r64 == null goto label6;

        $r25 = staticinvoke <android.telephony.data.ApnSetting: java.lang.String getApnTypeString(int)>(i0);

        r1 = virtualinvoke r64.<com.android.internal.telephony.dataconnection.DcTracker: com.android.internal.telephony.dataconnection.DataConnection getDataConnectionByApnType(java.lang.String)>($r25);

        if r1 == null goto label4;

        $z1 = virtualinvoke r1.<com.android.internal.telephony.dataconnection.DataConnection: boolean isActive()>();

        if $z1 == 0 goto label4;

        $r38 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: android.os.Handler mInternalHandler>;

        r65 = virtualinvoke $r38.<android.os.Handler: android.os.Message obtainMessage(int)>(6);

        $r39 = virtualinvoke r65.<android.os.Message: android.os.Bundle getData()>();

        virtualinvoke $r39.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("extra_network_request", r63);

        $r40 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mPendingHandovers>;

        interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r65, r58);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void requestNetworkInternal(android.net.NetworkRequest,int,int,android.os.Message)>(r63, 2, i1, r65);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested handover ");

        $r44 = staticinvoke <android.telephony.data.ApnSetting: java.lang.String getApnTypeString(int)>(i0);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r47 = staticinvoke <android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)>(i1);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void log(java.lang.String)>($r49);

        z2 = 1;

        goto label5;

     label4:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The network request is on transport ");

        $r28 = staticinvoke <android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)>(i2);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but no live data connection. Just move the request to transport ");

        $r31 = staticinvoke <android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)>(i1);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dc=");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r35 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void log(java.lang.String)>($r35);

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke r62.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r36);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void releaseNetworkInternal(android.net.NetworkRequest,int,int)>(r63, 1, i2);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void requestNetworkInternal(android.net.NetworkRequest,int,int,android.os.Message)>(r63, 1, i1, null);

     label5:
        z4 = z2;

        goto label7;

     label6:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DcTracker on ");

        $r21 = staticinvoke <android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)>(i2);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not available.");

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void log(java.lang.String)>($r24);

        z4 = z2;

     label7:
        z2 = z4;

        goto label2;

     label8:
        if z2 != 0 goto label9;

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void log(java.lang.String)>("No handover request pending. Handover process is now completed");

        $r13 = r58.<com.android.internal.telephony.dataconnection.TransportManager$HandoverParams: com.android.internal.telephony.dataconnection.TransportManager$HandoverParams$HandoverCallback callback>;

        interfaceinvoke $r13.<com.android.internal.telephony.dataconnection.TransportManager$HandoverParams$HandoverCallback: void onCompleted(boolean,boolean)>(1, 0);

     label9:
        return;
    }

    private void onDataHandoverSetupCompleted(android.net.NetworkRequest, boolean, int, boolean, com.android.internal.telephony.dataconnection.TransportManager$HandoverParams)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        android.net.NetworkRequest r1;
        boolean z0, z1;
        int i0;
        com.android.internal.telephony.dataconnection.TransportManager$HandoverParams r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r10, $r14;
        java.util.Map $r15;
        java.lang.Integer $r16;
        byte b1, b2;
        com.android.internal.telephony.dataconnection.TransportManager$HandoverParams$HandoverCallback $r18;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        r2 := @parameter4: com.android.internal.telephony.dataconnection.TransportManager$HandoverParams;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDataHandoverSetupCompleted: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", success=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", targetTransport=");

        $r10 = staticinvoke <android.telephony.AccessNetworkConstants: java.lang.String transportTypeToString(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", fallback=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void log(java.lang.String)>($r14);

        if z1 != 0 goto label3;

        b1 = 2;

        b2 = 1;

        if i0 != 1 goto label1;

        b2 = 2;

        goto label1;

     label1:
        if z0 == 0 goto label2;

        b1 = 3;

        goto label2;

     label2:
        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void releaseNetworkInternal(android.net.NetworkRequest,int,int)>(r1, b1, b2);

        $r15 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mNetworkRequests>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r16);

     label3:
        $r18 = r2.<com.android.internal.telephony.dataconnection.TransportManager$HandoverParams: com.android.internal.telephony.dataconnection.TransportManager$HandoverParams$HandoverCallback callback>;

        interfaceinvoke $r18.<com.android.internal.telephony.dataconnection.TransportManager$HandoverParams$HandoverCallback: void onCompleted(boolean,boolean)>(z0, z1);

        return;
    }

    private void onNeedNetworkFor(android.os.Message)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        boolean z0;
        java.lang.Object $r1;
        com.android.internal.telephony.Phone $r2;
        com.android.internal.telephony.PhoneSwitcher $r3;
        int $i0, $i1, i2;
        java.lang.Integer $r4;
        java.lang.StringBuilder $r6;
        java.lang.String $r11;
        android.os.Message r12;
        android.net.NetworkRequest r13;
        java.util.Map r14;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r12 := @parameter0: android.os.Message;

        $r1 = r12.<android.os.Message: java.lang.Object obj>;

        r13 = (android.net.NetworkRequest) $r1;

        $r3 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.PhoneSwitcher mPhoneSwitcher>;

        $r2 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.Phone: int getPhoneId()>();

        z0 = virtualinvoke $r3.<com.android.internal.telephony.PhoneSwitcher: boolean shouldApplyNetworkRequest(android.net.NetworkRequest,int)>(r13, $i0);

        r14 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mNetworkRequests>;

        if z0 == 0 goto label1;

        i2 = specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int getTransportTypeFromNetworkRequest(android.net.NetworkRequest)>(r13);

        goto label2;

     label1:
        i2 = -1;

     label2:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onNeedNetworkFor ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shouldApply ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void logl(java.lang.String)>($r11);

        if z0 == 0 goto label3;

        $i1 = specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int getTransportTypeFromNetworkRequest(android.net.NetworkRequest)>(r13);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void requestNetworkInternal(android.net.NetworkRequest,int,int,android.os.Message)>(r13, 1, $i1, null);

     label3:
        return;
    }

    private void onReleaseNetworkFor(android.os.Message)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        java.lang.Object $r2, $r4;
        java.util.Map $r3, $r6;
        java.lang.Integer $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r8;
        java.lang.String $r13;
        android.os.Message r14;
        android.net.NetworkRequest r15;
        boolean z0;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r14 := @parameter0: android.os.Message;

        $r2 = r14.<android.os.Message: java.lang.Object obj>;

        r15 = (android.net.NetworkRequest) $r2;

        $r3 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mNetworkRequests>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r15);

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i0 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r6 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mNetworkRequests>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r15);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onReleaseNetworkFor ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" applied ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void logl(java.lang.String)>($r13);

        if z0 == 0 goto label3;

        $i1 = specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int getTransportTypeFromNetworkRequest(android.net.NetworkRequest)>(r15);

        specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void releaseNetworkInternal(android.net.NetworkRequest,int,int)>(r15, 1, $i1);

     label3:
        return;
    }

    private void onSubIdChange()
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        int i0, $i1, $i2, $i3;
        com.android.internal.telephony.Phone $r2;
        com.android.internal.telephony.SubscriptionController $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r9;
        android.net.NetworkCapabilities $r10;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        $r3 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.SubscriptionController mSubscriptionController>;

        $r2 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone>;

        $i1 = virtualinvoke $r2.<com.android.internal.telephony.Phone: int getPhoneId()>();

        i0 = virtualinvoke $r3.<com.android.internal.telephony.SubscriptionController: int getSubIdUsingPhoneId(int)>($i1);

        $i2 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int mSubscriptionId>;

        if $i2 == i0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSubIdChange ");

        $i3 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int mSubscriptionId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void log(java.lang.String)>($r9);

        r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int mSubscriptionId> = i0;

        $r10 = specialinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: android.net.NetworkCapabilities makeNetworkFilter(int)>(i0);

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void setCapabilityFilter(android.net.NetworkCapabilities)>($r10);

     label1:
        return;
    }

    private void releaseNetworkInternal(android.net.NetworkRequest, int, int)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        android.net.NetworkRequest r1;
        int i0, i1;
        com.android.internal.telephony.Phone $r2, $r4;
        com.android.internal.telephony.dataconnection.DcTracker $r3, $r5;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(i1);

        if $r3 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(i1);

        virtualinvoke $r5.<com.android.internal.telephony.dataconnection.DcTracker: void releaseNetwork(android.net.NetworkRequest,int)>(r1, i0);

     label1:
        return;
    }

    private void requestNetworkInternal(android.net.NetworkRequest, int, int, android.os.Message)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        android.net.NetworkRequest r1;
        int i0, i1;
        android.os.Message r2;
        com.android.internal.telephony.Phone $r3, $r5;
        com.android.internal.telephony.dataconnection.DcTracker $r4, $r6;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(i1);

        if $r4 == null goto label1;

        $r5 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.Phone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.Phone: com.android.internal.telephony.dataconnection.DcTracker getDcTracker(int)>(i1);

        virtualinvoke $r6.<com.android.internal.telephony.dataconnection.DcTracker: void requestNetwork(android.net.NetworkRequest,int,android.os.Message)>(r1, i0, r2);

     label1:
        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        java.util.Iterator r4;
        int i0;
        com.android.internal.telephony.IndentingPrintWriter $r5;
        java.util.Map $r7;
        java.util.Set $r8;
        boolean $z0;
        com.android.internal.telephony.LocalLog $r9;
        java.lang.Object $r11, $r12, $r13;
        java.lang.Integer $r14;
        java.lang.StringBuilder $r15, $r19;
        java.lang.String $r18, r27;
        java.io.PrintWriter r22;
        java.util.Map$Entry r23;
        android.net.NetworkRequest r24;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter0: java.io.FileDescriptor;

        r22 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r5 = new com.android.internal.telephony.IndentingPrintWriter;

        specialinvoke $r5.<com.android.internal.telephony.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r22, "  ");

        virtualinvoke $r5.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("Network Requests:");

        virtualinvoke $r5.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r7 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.util.Map mNetworkRequests>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.util.Map$Entry) $r11;

        $r12 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        r24 = (android.net.NetworkRequest) $r12;

        $r13 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.lang.Integer) $r13;

        i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        if i0 == -1 goto label2;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" applied on ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r27 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        r27 = " not applied";

     label3:
        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r18);

        goto label1;

     label4:
        $r9 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.LocalLog mLocalLog>;

        virtualinvoke $r9.<com.android.internal.telephony.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, $r5, r2);

        virtualinvoke $r5.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: java.lang.String LOG_TAG>;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    protected void logl(java.lang.String)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        java.lang.String r1;
        com.android.internal.telephony.LocalLog $r2;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: void log(java.lang.String)>(r1);

        $r2 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: com.android.internal.telephony.LocalLog mLocalLog>;

        virtualinvoke $r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>(r1);

        return;
    }

    public void needNetworkFor(android.net.NetworkRequest, int)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        android.net.NetworkRequest r1;
        int i0;
        android.os.Message r2;
        android.os.Handler $r3;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: android.os.Handler mInternalHandler>;

        r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(3);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void releaseNetworkFor(android.net.NetworkRequest)
    {
        com.android.internal.telephony.dataconnection.TelephonyNetworkFactory r0;
        android.net.NetworkRequest r1;
        android.os.Message r2;
        android.os.Handler $r3;

        r0 := @this: com.android.internal.telephony.dataconnection.TelephonyNetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        $r3 = r0.<com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: android.os.Handler mInternalHandler>;

        r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int TELEPHONY_NETWORK_SCORE> = 50;

        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int REQUEST_LOG_SIZE> = 40;

        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int EVENT_SUBSCRIPTION_CHANGED> = 2;

        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int EVENT_NETWORK_REQUEST> = 3;

        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int EVENT_NETWORK_RELEASE> = 4;

        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int EVENT_DATA_HANDOVER_NEEDED> = 5;

        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int EVENT_DATA_HANDOVER_COMPLETED> = 6;

        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int EVENT_ACTIVE_PHONE_SWITCH> = 1;

        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: boolean DBG> = 1;

        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int ACTION_REQUEST> = 1;

        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int ACTION_RELEASE> = 2;

        <com.android.internal.telephony.dataconnection.TelephonyNetworkFactory: int ACTION_NO_OP> = 0;

        return;
    }
}
