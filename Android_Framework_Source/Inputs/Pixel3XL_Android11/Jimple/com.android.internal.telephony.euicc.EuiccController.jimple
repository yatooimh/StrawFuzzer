public class com.android.internal.telephony.euicc.EuiccController extends com.android.internal.telephony.euicc.IEuiccController$Stub
{
    private static final int ERROR;
    private static final int EUICC_DUMP_TIME_OUT_SECONDS;
    private static final java.lang.String EXTRA_EMBEDDED_SUBSCRIPTION_DOWNLOADABLE_SUBSCRIPTION;
    static final java.lang.String EXTRA_OPERATION;
    private static final int OK;
    private static final java.lang.String RESOLUTION_ACTIVITY_CLASS_NAME;
    private static final java.lang.String RESOLUTION_ACTIVITY_PACKAGE_NAME;
    private static final int RESOLVABLE_ERROR;
    private static final java.lang.String TAG;
    private static com.android.internal.telephony.euicc.EuiccController sInstance;
    private final android.app.AppOpsManager mAppOpsManager;
    private final com.android.internal.telephony.euicc.EuiccConnector mConnector;
    private final android.content.Context mContext;
    private final android.content.pm.PackageManager mPackageManager;
    private final android.telephony.SubscriptionManager mSubscriptionManager;
    private java.util.List mSupportedCountries;
    private final android.telephony.TelephonyManager mTelephonyManager;
    private java.util.List mUnsupportedCountries;

    private void <init>(android.content.Context)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.content.Context r1;
        com.android.internal.telephony.euicc.EuiccConnector $r2;
        android.os.TelephonyServiceManager $r3;
        android.os.TelephonyServiceManager$ServiceRegisterer $r4;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r1 := @parameter0: android.content.Context;

        $r2 = new com.android.internal.telephony.euicc.EuiccConnector;

        specialinvoke $r2.<com.android.internal.telephony.euicc.EuiccConnector: void <init>(android.content.Context)>(r1);

        specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void <init>(android.content.Context,com.android.internal.telephony.euicc.EuiccConnector)>(r1, $r2);

        $r3 = staticinvoke <android.telephony.TelephonyFrameworkInitializer: android.os.TelephonyServiceManager getTelephonyServiceManager()>();

        $r4 = virtualinvoke $r3.<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getEuiccControllerService()>();

        virtualinvoke $r4.<android.os.TelephonyServiceManager$ServiceRegisterer: void register(android.os.IBinder)>(r0);

        return;
    }

    public void <init>(android.content.Context, com.android.internal.telephony.euicc.EuiccConnector)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.content.Context r1;
        com.android.internal.telephony.euicc.EuiccConnector r2;
        java.lang.Object $r3, $r5, $r7;
        android.telephony.SubscriptionManager $r4;
        android.telephony.TelephonyManager $r6;
        android.app.AppOpsManager $r8;
        android.content.pm.PackageManager $r9;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.euicc.EuiccConnector;

        specialinvoke r0.<com.android.internal.telephony.euicc.IEuiccController$Stub: void <init>()>();

        r0.<com.android.internal.telephony.euicc.EuiccController: android.content.Context mContext> = r1;

        r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector> = r2;

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telephony_subscription_service");

        $r4 = (android.telephony.SubscriptionManager) $r3;

        r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionManager mSubscriptionManager> = $r4;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r6 = (android.telephony.TelephonyManager) $r5;

        r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.TelephonyManager mTelephonyManager> = $r6;

        $r7 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r8 = (android.app.AppOpsManager) $r7;

        r0.<com.android.internal.telephony.euicc.EuiccController: android.app.AppOpsManager mAppOpsManager> = $r8;

        $r9 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.internal.telephony.euicc.EuiccController: android.content.pm.PackageManager mPackageManager> = $r9;

        return;
    }

    static void access$000(com.android.internal.telephony.euicc.EuiccController, android.content.Intent, int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.content.Intent r1;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.euicc.EuiccController;

        r1 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void addExtrasToResultIntent(android.content.Intent,int)>(r1, i0);

        return;
    }

    static boolean access$100(com.android.internal.telephony.euicc.EuiccController, android.telephony.euicc.DownloadableSubscription, java.lang.String)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.telephony.euicc.DownloadableSubscription r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.euicc.EuiccController;

        r1 := @parameter1: android.telephony.euicc.DownloadableSubscription;

        r2 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean checkCarrierPrivilegeInMetadata(android.telephony.euicc.DownloadableSubscription,java.lang.String)>(r1, r2);

        return $z0;
    }

    static android.content.Context access$200(com.android.internal.telephony.euicc.EuiccController)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.internal.telephony.euicc.EuiccController;

        $r1 = r0.<com.android.internal.telephony.euicc.EuiccController: android.content.Context mContext>;

        return $r1;
    }

    private void addExtrasToResultIntent(android.content.Intent, int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.content.Intent r1;
        int i0, $i1, i2;
        java.lang.String r2, r11;
        java.lang.Object $r6, $r7;
        boolean z0;
        android.util.Pair r10;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i2 = i0 >>> 24;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.telephony.euicc.extra.EMBEDDED_SUBSCRIPTION_DETAILED_CODE", i0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.telephony.euicc.extra.EMBEDDED_SUBSCRIPTION_OPERATION_CODE", i2);

        if i2 != 10 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        r10 = virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: android.util.Pair decodeSmdxSubjectAndReasonCode(int)>(i0);

        $r6 = r10.<android.util.Pair: java.lang.Object first>;

        r2 = (java.lang.String) $r6;

        $r7 = r10.<android.util.Pair: java.lang.Object second>;

        r11 = (java.lang.String) $r7;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.telephony.euicc.extra.EMBEDDED_SUBSCRIPTION_SMDX_SUBJECT_CODE", r2);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.telephony.euicc.extra.EMBEDDED_SUBSCRIPTION_SMDX_REASON_CODE", r11);

        goto label4;

     label3:
        $i1 = i0 & 16777215;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.telephony.euicc.extra.EMBEDDED_SUBSCRIPTION_ERROR_CODE", $i1);

     label4:
        return;
    }

    private static java.lang.Object awaitResult(java.util.concurrent.CountDownLatch, java.util.concurrent.atomic.AtomicReference)
    {
        java.util.concurrent.atomic.AtomicReference r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        java.lang.Thread $r3;
        java.util.concurrent.CountDownLatch r4;

        r4 := @parameter0: java.util.concurrent.CountDownLatch;

        r0 := @parameter1: java.util.concurrent.atomic.AtomicReference;

     label1:
        virtualinvoke r4.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

     label4:
        $r1 = virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        return $r1;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private java.lang.String blockingGetEidFromEuiccService(int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        java.util.concurrent.CountDownLatch $r3;
        java.util.concurrent.atomic.AtomicReference $r4;
        com.android.internal.telephony.euicc.EuiccController$11 $r5;
        com.android.internal.telephony.euicc.EuiccConnector $r6;
        java.lang.Object $r7;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        $r3 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r3.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r4 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        $r6 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        $r5 = new com.android.internal.telephony.euicc.EuiccController$11;

        specialinvoke $r5.<com.android.internal.telephony.euicc.EuiccController$11: void <init>(com.android.internal.telephony.euicc.EuiccController,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.CountDownLatch)>(r0, $r4, $r3);

        virtualinvoke $r6.<com.android.internal.telephony.euicc.EuiccConnector: void getEid(int,com.android.internal.telephony.euicc.EuiccConnector$GetEidCommandCallback)>(i0, $r5);

        $r7 = staticinvoke <com.android.internal.telephony.euicc.EuiccController: java.lang.Object awaitResult(java.util.concurrent.CountDownLatch,java.util.concurrent.atomic.AtomicReference)>($r3, $r4);

        $r8 = (java.lang.String) $r7;

        return $r8;
    }

    private android.telephony.euicc.EuiccInfo blockingGetEuiccInfoFromEuiccService(int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        java.util.concurrent.CountDownLatch $r3;
        java.util.concurrent.atomic.AtomicReference $r4;
        com.android.internal.telephony.euicc.EuiccController$13 $r5;
        com.android.internal.telephony.euicc.EuiccConnector $r6;
        java.lang.Object $r7;
        android.telephony.euicc.EuiccInfo $r8;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        $r3 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r3.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r4 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        $r6 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        $r5 = new com.android.internal.telephony.euicc.EuiccController$13;

        specialinvoke $r5.<com.android.internal.telephony.euicc.EuiccController$13: void <init>(com.android.internal.telephony.euicc.EuiccController,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.CountDownLatch)>(r0, $r4, $r3);

        virtualinvoke $r6.<com.android.internal.telephony.euicc.EuiccConnector: void getEuiccInfo(int,com.android.internal.telephony.euicc.EuiccConnector$GetEuiccInfoCommandCallback)>(i0, $r5);

        $r7 = staticinvoke <com.android.internal.telephony.euicc.EuiccController: java.lang.Object awaitResult(java.util.concurrent.CountDownLatch,java.util.concurrent.atomic.AtomicReference)>($r3, $r4);

        $r8 = (android.telephony.euicc.EuiccInfo) $r7;

        return $r8;
    }

    private int blockingGetOtaStatusFromEuiccService(int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, $i1;
        java.util.concurrent.CountDownLatch $r3;
        java.util.concurrent.atomic.AtomicReference $r4;
        java.lang.Integer $r5, $r9;
        com.android.internal.telephony.euicc.EuiccController$12 $r6;
        com.android.internal.telephony.euicc.EuiccConnector $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        $r3 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r3.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r4 = new java.util.concurrent.atomic.AtomicReference;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r5);

        $r7 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        $r6 = new com.android.internal.telephony.euicc.EuiccController$12;

        specialinvoke $r6.<com.android.internal.telephony.euicc.EuiccController$12: void <init>(com.android.internal.telephony.euicc.EuiccController,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.CountDownLatch)>(r0, $r4, $r3);

        virtualinvoke $r7.<com.android.internal.telephony.euicc.EuiccConnector: void getOtaStatus(int,com.android.internal.telephony.euicc.EuiccConnector$GetOtaStatusCommandCallback)>(i0, $r6);

        $r8 = staticinvoke <com.android.internal.telephony.euicc.EuiccController: java.lang.Object awaitResult(java.util.concurrent.CountDownLatch,java.util.concurrent.atomic.AtomicReference)>($r3, $r4);

        $r9 = (java.lang.Integer) $r8;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    private boolean callerCanReadPhoneStatePrivileged()
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.content.Context $r1;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        $r1 = r0.<com.android.internal.telephony.euicc.EuiccController: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_PRIVILEGED_PHONE_STATE");

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean callerCanWriteEmbeddedSubscriptions()
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.content.Context $r1;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        $r1 = r0.<com.android.internal.telephony.euicc.EuiccController: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS");

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean canManageActiveSubscriptionOnTargetSim(int, java.lang.String)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, $i1, $i2;
        java.lang.String r1;
        android.telephony.SubscriptionInfo r2;
        android.telephony.SubscriptionManager $r3, $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;
        java.util.List r6;
        java.util.Iterator r7;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionManager mSubscriptionManager>;

        r6 = virtualinvoke $r3.<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList(boolean)>(0);

        if r6 == null goto label6;

        $i1 = interfaceinvoke r6.<java.util.List: int size()>();

        if $i1 != 0 goto label1;

        goto label6;

     label1:
        r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telephony.SubscriptionInfo) $r4;

        if i0 == -1 goto label3;

        $i2 = virtualinvoke r2.<android.telephony.SubscriptionInfo: int getCardId()>();

        if $i2 != i0 goto label4;

     label3:
        $z1 = virtualinvoke r2.<android.telephony.SubscriptionInfo: boolean isEmbedded()>();

        if $z1 == 0 goto label4;

        $r5 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionManager mSubscriptionManager>;

        $z2 = virtualinvoke $r5.<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo,java.lang.String)>(r2, r1);

        if $z2 == 0 goto label4;

        return 1;

     label4:
        goto label2;

     label5:
        return 0;

     label6:
        return 0;
    }

    private boolean canManageSubscriptionOnTargetSim(int, java.lang.String)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, $i1, $i2, $i3, $i5;
        java.lang.String r1;
        android.telephony.UiccCardInfo r2;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12;
        java.lang.Object $r3, $r7, $r9;
        android.telephony.SubscriptionManager $r4, $r8, r10;
        android.telephony.TelephonyManager $r5, $r6;
        java.util.List r11, r12;
        java.util.Iterator r13, r14, r16;
        android.telephony.SubscriptionInfo r15, r17;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r10 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionManager mSubscriptionManager>;

        z11 = 0;

        r11 = virtualinvoke r10.<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList(boolean)>(0);

        if r11 == null goto label16;

        $i1 = interfaceinvoke r11.<java.util.List: int size()>();

        if $i1 != 0 goto label01;

        goto label16;

     label01:
        $z1 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean supportMultiActiveSlots()>();

        if $z1 == 0 goto label12;

        $r5 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.TelephonyManager mTelephonyManager>;

        r12 = virtualinvoke $r5.<android.telephony.TelephonyManager: java.util.List getUiccCardsInfo()>();

        if r12 == null goto label11;

        $z5 = interfaceinvoke r12.<java.util.List: boolean isEmpty()>();

        if $z5 == 0 goto label02;

        goto label11;

     label02:
        r13 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label03:
        z12 = 0;

        $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label05;

        $r9 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telephony.UiccCardInfo) $r9;

        if r2 == null goto label04;

        $i5 = virtualinvoke r2.<android.telephony.UiccCardInfo: int getCardId()>();

        if $i5 != i0 goto label04;

        $z10 = virtualinvoke r2.<android.telephony.UiccCardInfo: boolean isEuicc()>();

        if $z10 == 0 goto label04;

        z12 = 1;

        goto label05;

     label04:
        goto label03;

     label05:
        if z12 != 0 goto label06;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("EuiccController", "The target SIM is not an eUICC.");

        return 0;

     label06:
        r14 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z7 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label09;

        $r7 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (android.telephony.SubscriptionInfo) $r7;

        $z8 = virtualinvoke r15.<android.telephony.SubscriptionInfo: boolean isEmbedded()>();

        if $z8 == 0 goto label08;

        $i3 = virtualinvoke r15.<android.telephony.SubscriptionInfo: int getCardId()>();

        if $i3 != i0 goto label08;

        $r8 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionManager mSubscriptionManager>;

        $z9 = virtualinvoke $r8.<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo,java.lang.String)>(r15, r1);

        return $z9;

     label08:
        goto label07;

     label09:
        $r6 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.TelephonyManager mTelephonyManager>;

        $i2 = virtualinvoke $r6.<android.telephony.TelephonyManager: int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String)>(r1);

        if $i2 != 1 goto label10;

        z11 = 1;

     label10:
        return z11;

     label11:
        return 0;

     label12:
        r16 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r3 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (android.telephony.SubscriptionInfo) $r3;

        $z3 = virtualinvoke r17.<android.telephony.SubscriptionInfo: boolean isEmbedded()>();

        if $z3 == 0 goto label14;

        $r4 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionManager mSubscriptionManager>;

        $z4 = virtualinvoke $r4.<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo,java.lang.String)>(r17, r1);

        if $z4 == 0 goto label14;

        return 1;

     label14:
        goto label13;

     label15:
        return 0;

     label16:
        return 0;
    }

    private boolean checkCarrierPrivilegeInMetadata(android.telephony.euicc.DownloadableSubscription, java.lang.String)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        java.util.List r1;
        android.content.pm.PackageManager $r2;
        int $i0, $i1, $i2, i3;
        android.telephony.UiccAccessRule $r3;
        android.telephony.UiccAccessRule[] $r4, r9;
        java.lang.Object[] $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        android.telephony.euicc.DownloadableSubscription r7;
        java.lang.String r8;
        android.content.pm.PackageInfo r10;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r7 := @parameter0: android.telephony.euicc.DownloadableSubscription;

        r8 := @parameter1: java.lang.String;

        r1 = virtualinvoke r7.<android.telephony.euicc.DownloadableSubscription: java.util.List getAccessRules()>();

        r9 = null;

        if r1 == null goto label1;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        $r4 = newarray (android.telephony.UiccAccessRule)[$i2];

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        r9 = (android.telephony.UiccAccessRule[]) $r5;

     label1:
        if r9 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EuiccController", "No access rules but caller is unprivileged");

        return 0;

     label2:
        $r2 = r0.<com.android.internal.telephony.euicc.EuiccController: android.content.pm.PackageManager mPackageManager>;

        r10 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r8, 134217728);

     label3:
        i3 = 0;

     label4:
        $i0 = lengthof r9;

        if i3 >= $i0 goto label6;

        $r3 = r9[i3];

        $i1 = virtualinvoke $r3.<android.telephony.UiccAccessRule: int getCarrierPrivilegeStatus(android.content.pm.PackageInfo)>(r10);

        if $i1 != 1 goto label5;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("EuiccController", "Calling package has carrier privilege to this profile");

        return 1;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EuiccController", "Calling package doesn\'t have carrier privilege to this profile");

        return 0;

     label7:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EuiccController", "Calling package valid but gone");

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label7;
    }

    public static com.android.internal.telephony.euicc.EuiccController get()
    {
        com.android.internal.telephony.euicc.EuiccController $r0, $r1, $r2;
        java.lang.Throwable $r3;
        java.lang.IllegalStateException r4;

        $r0 = <com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccController sInstance>;

        if $r0 != null goto label7;

        entermonitor class "Lcom/android/internal/telephony/euicc/EuiccController;";

     label1:
        $r2 = <com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccController sInstance>;

        if $r2 == null goto label3;

        exitmonitor class "Lcom/android/internal/telephony/euicc/EuiccController;";

     label2:
        goto label7;

     label3:
        r4 = new java.lang.IllegalStateException;

        specialinvoke r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("get() called before init()");

        throw r4;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor class "Lcom/android/internal/telephony/euicc/EuiccController;";

     label6:
        throw $r3;

     label7:
        $r1 = <com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccController sInstance>;

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private android.telephony.SubscriptionInfo getSubscriptionForSubscriptionId(int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, $i1, i2, i3;
        java.util.List r1;
        android.telephony.SubscriptionInfo r2;
        android.telephony.SubscriptionManager $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionManager mSubscriptionManager>;

        r1 = virtualinvoke $r3.<android.telephony.SubscriptionManager: java.util.List getAvailableSubscriptionInfoList()>();

        if r1 == null goto label1;

        i2 = interfaceinvoke r1.<java.util.List: int size()>();

        goto label2;

     label1:
        i2 = 0;

     label2:
        i3 = 0;

     label3:
        if i3 >= i2 goto label5;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r2 = (android.telephony.SubscriptionInfo) $r4;

        $i1 = virtualinvoke r2.<android.telephony.SubscriptionInfo: int getSubscriptionId()>();

        if i0 != $i1 goto label4;

        return r2;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return null;
    }

    public static com.android.internal.telephony.euicc.EuiccController init(android.content.Context)
    {
        com.android.internal.telephony.euicc.EuiccController r0, $r1, $r3, $r6;
        java.lang.String $r5;
        java.lang.Throwable $r7;
        android.content.Context r8;
        java.lang.StringBuilder r9;

        r8 := @parameter0: android.content.Context;

        entermonitor class "Lcom/android/internal/telephony/euicc/EuiccController;";

     label1:
        $r1 = <com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccController sInstance>;

        if $r1 != null goto label3;

        r0 = new com.android.internal.telephony.euicc.EuiccController;

        specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void <init>(android.content.Context)>(r8);

        <com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccController sInstance> = r0;

     label2:
        goto label4;

     label3:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init() called multiple times! sInstance = ");

        $r3 = <com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccController sInstance>;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("EuiccController", $r5);

     label4:
        exitmonitor class "Lcom/android/internal/telephony/euicc/EuiccController;";

     label5:
        $r6 = <com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccController sInstance>;

        return $r6;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor class "Lcom/android/internal/telephony/euicc/EuiccController;";

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private boolean isEsimSupportedCountry(java.lang.String)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        java.lang.String r1;
        java.util.List $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.euicc.EuiccController: java.util.List mSupportedCountries>;

        if $r2 == null goto label2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.telephony.euicc.EuiccController: java.util.List mSupportedCountries>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z1;

     label2:
        return 1;
    }

    private boolean isEsimUnsupportedCountry(java.lang.String)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        java.lang.String r1;
        java.util.List $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.euicc.EuiccController: java.util.List mUnsupportedCountries>;

        if $r2 == null goto label2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.telephony.euicc.EuiccController: java.util.List mUnsupportedCountries>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z1;

     label2:
        return 0;
    }

    private boolean supportMultiActiveSlots()
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        android.telephony.TelephonyManager $r1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        $r1 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.TelephonyManager mTelephonyManager>;

        i0 = virtualinvoke $r1.<android.telephony.TelephonyManager: int getSupportedModemCount()>();

        z0 = 1;

        if i0 <= 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void addResolutionIntent(android.content.Intent, java.lang.String, java.lang.String, int, boolean, com.android.internal.telephony.euicc.EuiccOperation, int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.content.Intent r1, $r6;
        java.lang.String r2, r3;
        int i0, i1;
        boolean z0;
        com.android.internal.telephony.euicc.EuiccOperation r4;
        android.content.ComponentName $r8;
        android.content.Context $r16;
        android.app.PendingIntent $r17;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: com.android.internal.telephony.euicc.EuiccOperation;

        i1 := @parameter6: int;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.telephony.euicc.action.RESOLVE_ERROR");

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.android.phone");

        $r8 = new android.content.ComponentName;

        specialinvoke $r8.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.phone", "com.android.phone.euicc.EuiccResolutionUiDispatcherActivity");

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r8);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.telephony.euicc.extra.EMBEDDED_SUBSCRIPTION_RESOLUTION_ACTION", r2);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.service.euicc.extra.RESOLUTION_CALLING_PACKAGE", r3);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.service.euicc.extra.RESOLVABLE_ERRORS", i0);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.service.euicc.extra.RESOLUTION_CARD_ID", i1);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.service.euicc.extra.RESOLUTION_CONFIRMATION_CODE_RETRIED", z0);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("operation", r4);

        $r16 = r0.<com.android.internal.telephony.euicc.EuiccController: android.content.Context mContext>;

        $r17 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>($r16, 0, $r6, 1073741824);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.telephony.euicc.extra.EMBEDDED_SUBSCRIPTION_RESOLUTION_INTENT", $r17);

        return;
    }

    public android.service.euicc.GetEuiccProfileInfoListResult blockingGetEuiccProfileInfoList(int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        java.util.concurrent.CountDownLatch $r3;
        java.util.concurrent.atomic.AtomicReference $r4;
        com.android.internal.telephony.euicc.EuiccController$3 $r5;
        com.android.internal.telephony.euicc.EuiccConnector $r6;
        java.lang.Object $r7;
        android.service.euicc.GetEuiccProfileInfoListResult $r8;
        java.lang.Throwable $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r13;
        java.lang.Thread $r14;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        $r3 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r3.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r4 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        $r6 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        $r5 = new com.android.internal.telephony.euicc.EuiccController$3;

        specialinvoke $r5.<com.android.internal.telephony.euicc.EuiccController$3: void <init>(com.android.internal.telephony.euicc.EuiccController,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.CountDownLatch)>(r0, $r4, $r3);

        virtualinvoke $r6.<com.android.internal.telephony.euicc.EuiccConnector: void getEuiccProfileInfoList(int,com.android.internal.telephony.euicc.EuiccConnector$GetEuiccProfileInfoListCommandCallback)>(i0, $r5);

     label1:
        virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blockingGetEuiccInfoFromEuiccService got InterruptedException e: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EuiccController", $r13);

        $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r14.<java.lang.Thread: void interrupt()>();

     label4:
        $r7 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r8 = (android.service.euicc.GetEuiccProfileInfoListResult) $r7;

        return $r8;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void continueOperation(int, android.content.Intent, android.os.Bundle)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        android.os.Bundle r1;
        long l1;
        com.android.internal.telephony.euicc.EuiccOperation r2;
        boolean $z0;
        java.lang.SecurityException $r3;
        android.os.Parcelable $r4, $r5;
        android.app.PendingIntent $r6;
        java.lang.Throwable $r7;
        android.content.Intent r8;
        java.lang.IllegalArgumentException r9;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r8 := @parameter1: android.content.Intent;

        r1 := @parameter2: android.os.Bundle;

        $z0 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        if $z0 == 0 goto label7;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = virtualinvoke r8.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("operation");

        r2 = (com.android.internal.telephony.euicc.EuiccOperation) $r4;

     label2:
        if r2 == null goto label5;

     label3:
        $r5 = virtualinvoke r8.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.telephony.euicc.extra.EMBEDDED_SUBSCRIPTION_RESOLUTION_CALLBACK_INTENT");

        $r6 = (android.app.PendingIntent) $r5;

        virtualinvoke r2.<com.android.internal.telephony.euicc.EuiccOperation: void continueOperation(int,android.os.Bundle,android.app.PendingIntent)>(i0, r1, $r6);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label5:
        r9 = new java.lang.IllegalArgumentException;

        specialinvoke r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid resolution intent");

        throw r9;

     label6:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

     label7:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Must have WRITE_EMBEDDED_SUBSCRIPTIONS to continue operation");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    android.util.Pair decodeSmdxSubjectAndReasonCode(int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        java.util.Stack $r2;
        java.lang.StringBuilder $r3, $r12;
        java.lang.Object $r4, $r7, $r10, $r13, $r16, $r19;
        java.lang.String $r21, $r22, r28, r29;
        android.util.Pair $r23;
        int $i1, i2, i3, i4;
        java.lang.Integer $r24;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i2 := @parameter0: int;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        i3 = i2;

        i4 = 0;

     label1:
        if i4 >= 6 goto label2;

        $i1 = i3 & 15;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r24);

        i3 = i3 >>> 4;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        r28 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r16 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r19 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        r29 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke r28.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("^(0\\.)*", "");

        $r22 = virtualinvoke r29.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("^(0\\.)*", "");

        $r23 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r21, $r22);

        return $r23;
    }

    public void deleteSubscription(int, int, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, i1, $i3;
        android.app.PendingIntent r1;
        boolean z0, $z1;
        long l2;
        android.telephony.SubscriptionInfo r2;
        android.app.AppOpsManager $r3;
        java.lang.String $r4, $r8, $r11, r13;
        android.telephony.SubscriptionManager $r5;
        java.lang.Throwable $r12;
        java.lang.StringBuilder r14, r15;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r13 := @parameter2: java.lang.String;

        r1 := @parameter3: android.app.PendingIntent;

        z0 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        $r3 = r0.<com.android.internal.telephony.euicc.EuiccController: android.app.AppOpsManager mAppOpsManager>;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i3, r13);

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r2 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionInfo getSubscriptionForSubscriptionId(int)>(i1);

     label02:
        if r2 != null goto label05;

     label03:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot delete nonexistent subscription: ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EuiccController", $r11);

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void sendResult(android.app.PendingIntent,int,android.content.Intent)>(r1, 2, null);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label05:
        if z0 != 0 goto label08;

     label06:
        $r5 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionManager mSubscriptionManager>;

        $z1 = virtualinvoke $r5.<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo,java.lang.String)>(r2, r13);

        if $z1 != 0 goto label08;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permissions: ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EuiccController", $r8);

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void sendResult(android.app.PendingIntent,int,android.content.Intent)>(r1, 2, null);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label08:
        $r4 = virtualinvoke r2.<android.telephony.SubscriptionInfo: java.lang.String getIccId()>();

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void deleteSubscriptionPrivileged(int,java.lang.String,android.app.PendingIntent)>(i0, $r4, r1);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label10:
        $r12 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    void deleteSubscriptionPrivileged(int, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        java.lang.String r1;
        android.app.PendingIntent r2;
        com.android.internal.telephony.euicc.EuiccController$4 $r3;
        com.android.internal.telephony.euicc.EuiccConnector $r4;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.app.PendingIntent;

        $r4 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        $r3 = new com.android.internal.telephony.euicc.EuiccController$4;

        specialinvoke $r3.<com.android.internal.telephony.euicc.EuiccController$4: void <init>(com.android.internal.telephony.euicc.EuiccController,android.app.PendingIntent)>(r0, r2);

        virtualinvoke $r4.<com.android.internal.telephony.euicc.EuiccConnector: void deleteSubscription(int,java.lang.String,com.android.internal.telephony.euicc.EuiccConnector$DeleteCommandCallback)>(i0, r1, $r3);

        return;
    }

    public void downloadSubscription(int, android.telephony.euicc.DownloadableSubscription, boolean, java.lang.String, android.os.Bundle, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        android.telephony.euicc.DownloadableSubscription r1;
        boolean z0;
        java.lang.String r2;
        android.os.Bundle r3;
        android.app.PendingIntent r4;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.euicc.DownloadableSubscription;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.Bundle;

        r4 := @parameter5: android.app.PendingIntent;

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void downloadSubscription(int,android.telephony.euicc.DownloadableSubscription,boolean,java.lang.String,boolean,android.os.Bundle,android.app.PendingIntent)>(i0, r1, z0, r2, 0, r3, r4);

        return;
    }

    void downloadSubscription(int, android.telephony.euicc.DownloadableSubscription, boolean, java.lang.String, boolean, android.os.Bundle, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, $i3;
        boolean z0, z1, z2, z3;
        java.lang.String r1;
        android.app.PendingIntent r2;
        long l1;
        com.android.internal.telephony.euicc.EuiccConnector r3;
        android.app.AppOpsManager $r4;
        android.content.Intent $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, r16;
        android.telephony.euicc.DownloadableSubscription r14;
        android.os.Bundle r15;
        com.android.internal.telephony.euicc.EuiccController$DownloadSubscriptionGetMetadataCommandCallback r17;
        com.android.internal.telephony.euicc.EuiccOperation r19;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r14 := @parameter1: android.telephony.euicc.DownloadableSubscription;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        z1 := @parameter4: boolean;

        r15 := @parameter5: android.os.Bundle;

        r2 := @parameter6: android.app.PendingIntent;

        z2 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        $r4 = r0.<com.android.internal.telephony.euicc.EuiccController: android.app.AppOpsManager mAppOpsManager>;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r4.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i3, r1);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if z2 == 0 goto label04;

     label01:
        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void downloadSubscriptionPrivileged(int,long,android.telephony.euicc.DownloadableSubscription,boolean,boolean,java.lang.String,android.os.Bundle,android.app.PendingIntent)>(i0, l1, r14, z0, z1, r1, r15, r2);

     label02:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label03:
        $r10 := @caughtexception;

        r16 = $r10;

        goto label23;

     label04:
        z3 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean canManageSubscriptionOnTargetSim(int,java.lang.String)>(i0, r1);

     label05:
        if z3 == 0 goto label12;

     label06:
        r3 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        r17 = new com.android.internal.telephony.euicc.EuiccController$DownloadSubscriptionGetMetadataCommandCallback;

     label07:
        specialinvoke r17.<com.android.internal.telephony.euicc.EuiccController$DownloadSubscriptionGetMetadataCommandCallback: void <init>(com.android.internal.telephony.euicc.EuiccController,long,android.telephony.euicc.DownloadableSubscription,boolean,java.lang.String,boolean,android.app.PendingIntent,boolean)>(r0, l1, r14, z0, r1, z1, r2, 0);

     label08:
        virtualinvoke r3.<com.android.internal.telephony.euicc.EuiccConnector: void getDownloadableSubscriptionMetadata(int,android.telephony.euicc.DownloadableSubscription,boolean,com.android.internal.telephony.euicc.EuiccConnector$GetMetadataCommandCallback)>(i0, r14, z1, r17);

     label09:
        goto label16;

     label10:
        $r8 := @caughtexception;

        r16 = $r8;

        goto label21;

     label11:
        $r6 := @caughtexception;

        r16 = $r6;

        goto label23;

     label12:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("EuiccController", "Caller can\'t manage subscription on target SIM. Ask user\'s consent first");

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>()>();

     label13:
        r19 = staticinvoke <com.android.internal.telephony.euicc.EuiccOperation: com.android.internal.telephony.euicc.EuiccOperation forDownloadNoPrivilegesOrDeactivateSimCheckMetadata(long,android.telephony.euicc.DownloadableSubscription,boolean,java.lang.String)>(l1, r14, z0, r1);

     label14:
        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void addResolutionIntent(android.content.Intent,java.lang.String,java.lang.String,int,boolean,com.android.internal.telephony.euicc.EuiccOperation,int)>($r5, "android.service.euicc.action.RESOLVE_NO_PRIVILEGES", r1, 0, 0, r19, i0);

     label15:
        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void sendResult(android.app.PendingIntent,int,android.content.Intent)>(r2, 1, $r5);

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label17:
        $r12 := @caughtexception;

        r16 = $r12;

        goto label23;

     label18:
        $r13 := @caughtexception;

        r16 = $r13;

        goto label21;

     label19:
        $r7 := @caughtexception;

        r16 = $r7;

        goto label23;

     label20:
        $r11 := @caughtexception;

        r16 = $r11;

     label21:
        goto label23;

     label22:
        $r9 := @caughtexception;

        r16 = $r9;

     label23:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r16;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    void downloadSubscriptionPrivileged(int, long, android.telephony.euicc.DownloadableSubscription, boolean, boolean, java.lang.String, android.os.Bundle, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        long l1;
        android.telephony.euicc.DownloadableSubscription r1;
        boolean z0, z1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.app.PendingIntent r4;
        com.android.internal.telephony.euicc.EuiccController$2 $r5;
        com.android.internal.telephony.euicc.EuiccConnector $r6;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: android.telephony.euicc.DownloadableSubscription;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        r3 := @parameter6: android.os.Bundle;

        r4 := @parameter7: android.app.PendingIntent;

        $r6 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        $r5 = new com.android.internal.telephony.euicc.EuiccController$2;

        specialinvoke $r5.<com.android.internal.telephony.euicc.EuiccController$2: void <init>(com.android.internal.telephony.euicc.EuiccController,android.telephony.euicc.DownloadableSubscription,boolean,android.app.PendingIntent,java.lang.String,long,int)>(r0, r1, z0, r4, r2, l1, i0);

        virtualinvoke $r6.<com.android.internal.telephony.euicc.EuiccConnector: void downloadSubscription(int,android.telephony.euicc.DownloadableSubscription,boolean,boolean,android.os.Bundle,com.android.internal.telephony.euicc.EuiccConnector$DownloadCommandCallback)>(i0, r1, z0, z1, r3, $r5);

        return;
    }

    void downloadSubscriptionPrivilegedCheckMetadata(int, long, android.telephony.euicc.DownloadableSubscription, boolean, boolean, java.lang.String, android.os.Bundle, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        long l1;
        android.telephony.euicc.DownloadableSubscription r1;
        boolean z0, z1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.app.PendingIntent r4;
        com.android.internal.telephony.euicc.EuiccController$DownloadSubscriptionGetMetadataCommandCallback $r5;
        com.android.internal.telephony.euicc.EuiccConnector $r6;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: android.telephony.euicc.DownloadableSubscription;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        r3 := @parameter6: android.os.Bundle;

        r4 := @parameter7: android.app.PendingIntent;

        $r6 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        $r5 = new com.android.internal.telephony.euicc.EuiccController$DownloadSubscriptionGetMetadataCommandCallback;

        specialinvoke $r5.<com.android.internal.telephony.euicc.EuiccController$DownloadSubscriptionGetMetadataCommandCallback: void <init>(com.android.internal.telephony.euicc.EuiccController,long,android.telephony.euicc.DownloadableSubscription,boolean,java.lang.String,boolean,android.app.PendingIntent,boolean)>(r0, l1, r1, z0, r2, z1, r4, 1);

        virtualinvoke $r6.<com.android.internal.telephony.euicc.EuiccConnector: void getDownloadableSubscriptionMetadata(int,android.telephony.euicc.DownloadableSubscription,boolean,com.android.internal.telephony.euicc.EuiccConnector$GetMetadataCommandCallback)>(i0, r1, z1, $r5);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        java.io.PrintWriter r1;
        long l0;
        java.util.concurrent.CountDownLatch r2;
        android.content.Context $r3;
        com.android.internal.telephony.euicc.EuiccConnector $r4, r10;
        java.util.concurrent.TimeUnit $r5;
        boolean $z0;
        java.lang.Throwable $r6, $r7;
        java.io.FileDescriptor r8;
        java.lang.String[] r9;
        com.android.internal.telephony.euicc.EuiccController$10 r11;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r8 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r9 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.internal.telephony.euicc.EuiccController: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "Requires DUMP");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("===== BEGIN EUICC CLINIC =====");

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("===== EUICC CONNECTOR =====");

        $r4 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        virtualinvoke $r4.<com.android.internal.telephony.euicc.EuiccConnector: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r8, r1, r9);

        r2 = new java.util.concurrent.CountDownLatch;

        specialinvoke r2.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r10 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        r11 = new com.android.internal.telephony.euicc.EuiccController$10;

        specialinvoke r11.<com.android.internal.telephony.euicc.EuiccController$10: void <init>(com.android.internal.telephony.euicc.EuiccController,java.io.PrintWriter,java.util.concurrent.CountDownLatch)>(r0, r1, r2);

        virtualinvoke r10.<com.android.internal.telephony.euicc.EuiccConnector: void dumpEuiccService(com.android.internal.telephony.euicc.EuiccConnector$DumpEuiccServiceCommandCallback)>(r11);

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $z0 = virtualinvoke r2.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(5L, $r5);

        if $z0 != 0 goto label6;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("===== EUICC SERVICE TIMEOUT =====");

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

        goto label7;

     label4:
        $r7 := @caughtexception;

     label5:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("===== EUICC SERVICE INTERRUPTED =====");

     label6:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("===== END EUICC CLINIC =====");

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label7:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("===== END EUICC CLINIC =====");

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r6;

        catch java.lang.InterruptedException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public void eraseSubscriptions(int, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        long l1;
        com.android.internal.telephony.euicc.EuiccConnector r1;
        com.android.internal.telephony.euicc.EuiccController$7 r2;
        boolean $z0;
        java.lang.SecurityException $r3;
        java.lang.Throwable $r4;
        android.app.PendingIntent r5;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r5 := @parameter1: android.app.PendingIntent;

        $z0 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        if $z0 == 0 goto label4;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        r2 = new com.android.internal.telephony.euicc.EuiccController$7;

        specialinvoke r2.<com.android.internal.telephony.euicc.EuiccController$7: void <init>(com.android.internal.telephony.euicc.EuiccController,android.app.PendingIntent)>(r0, r5);

        virtualinvoke r1.<com.android.internal.telephony.euicc.EuiccConnector: void eraseSubscriptions(int,com.android.internal.telephony.euicc.EuiccConnector$EraseCommandCallback)>(i0, r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r4;

     label4:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Must have WRITE_EMBEDDED_SUBSCRIPTIONS to erase subscriptions");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void eraseSubscriptionsWithOptions(int, int, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, i1;
        long l2;
        com.android.internal.telephony.euicc.EuiccConnector r1;
        com.android.internal.telephony.euicc.EuiccController$8 r2;
        boolean $z0;
        java.lang.SecurityException $r3;
        java.lang.Throwable $r4;
        android.app.PendingIntent r5;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r5 := @parameter2: android.app.PendingIntent;

        $z0 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        if $z0 == 0 goto label4;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        r2 = new com.android.internal.telephony.euicc.EuiccController$8;

        specialinvoke r2.<com.android.internal.telephony.euicc.EuiccController$8: void <init>(com.android.internal.telephony.euicc.EuiccController,android.app.PendingIntent)>(r0, r5);

        virtualinvoke r1.<com.android.internal.telephony.euicc.EuiccConnector: void eraseSubscriptionsWithOptions(int,int,com.android.internal.telephony.euicc.EuiccConnector$EraseCommandCallback)>(i0, i1, r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r4;

     label4:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Must have WRITE_EMBEDDED_SUBSCRIPTIONS to erase subscriptions");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void getDefaultDownloadableSubscriptionList(int, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        java.lang.String r1;
        android.app.PendingIntent r2;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.app.PendingIntent;

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void getDefaultDownloadableSubscriptionList(int,boolean,java.lang.String,android.app.PendingIntent)>(i0, 0, r1, r2);

        return;
    }

    void getDefaultDownloadableSubscriptionList(int, boolean, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, $i2;
        boolean z0, $z1;
        android.app.PendingIntent r1;
        long l1;
        com.android.internal.telephony.euicc.EuiccConnector r2;
        com.android.internal.telephony.euicc.EuiccController$GetDefaultListCommandCallback r3;
        java.lang.SecurityException $r4;
        android.app.AppOpsManager $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r7 := @parameter2: java.lang.String;

        r1 := @parameter3: android.app.PendingIntent;

        $z1 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        if $z1 == 0 goto label4;

        $r5 = r0.<com.android.internal.telephony.euicc.EuiccController: android.app.AppOpsManager mAppOpsManager>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r5.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i2, r7);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        r3 = new com.android.internal.telephony.euicc.EuiccController$GetDefaultListCommandCallback;

        specialinvoke r3.<com.android.internal.telephony.euicc.EuiccController$GetDefaultListCommandCallback: void <init>(com.android.internal.telephony.euicc.EuiccController,long,java.lang.String,android.app.PendingIntent)>(r0, l1, r7, r1);

        virtualinvoke r2.<com.android.internal.telephony.euicc.EuiccConnector: void getDefaultDownloadableSubscriptionList(int,boolean,com.android.internal.telephony.euicc.EuiccConnector$GetDefaultListCommandCallback)>(i0, z0, r3);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r6;

     label4:
        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("Must have WRITE_EMBEDDED_SUBSCRIPTIONS to get default list");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void getDownloadableSubscriptionMetadata(int, android.telephony.euicc.DownloadableSubscription, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        android.telephony.euicc.DownloadableSubscription r1;
        java.lang.String r2;
        android.app.PendingIntent r3;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.euicc.DownloadableSubscription;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.app.PendingIntent;

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void getDownloadableSubscriptionMetadata(int,android.telephony.euicc.DownloadableSubscription,boolean,java.lang.String,android.app.PendingIntent)>(i0, r1, 0, r2, r3);

        return;
    }

    void getDownloadableSubscriptionMetadata(int, android.telephony.euicc.DownloadableSubscription, boolean, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, $i2;
        boolean z0, $z1;
        java.lang.String r1;
        android.app.PendingIntent r2;
        long l1;
        com.android.internal.telephony.euicc.EuiccConnector r3;
        com.android.internal.telephony.euicc.EuiccController$GetMetadataCommandCallback r4;
        java.lang.SecurityException $r5;
        android.app.AppOpsManager $r6;
        java.lang.Throwable $r7, $r8, r10;
        android.telephony.euicc.DownloadableSubscription r9;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r9 := @parameter1: android.telephony.euicc.DownloadableSubscription;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.app.PendingIntent;

        $z1 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        if $z1 == 0 goto label7;

        $r6 = r0.<com.android.internal.telephony.euicc.EuiccController: android.app.AppOpsManager mAppOpsManager>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r6.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i2, r1);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r3 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        r4 = new com.android.internal.telephony.euicc.EuiccController$GetMetadataCommandCallback;

        specialinvoke r4.<com.android.internal.telephony.euicc.EuiccController$GetMetadataCommandCallback: void <init>(com.android.internal.telephony.euicc.EuiccController,long,android.telephony.euicc.DownloadableSubscription,java.lang.String,android.app.PendingIntent)>(r0, l1, r9, r1, r2);

     label2:
        virtualinvoke r3.<com.android.internal.telephony.euicc.EuiccConnector: void getDownloadableSubscriptionMetadata(int,android.telephony.euicc.DownloadableSubscription,boolean,com.android.internal.telephony.euicc.EuiccConnector$GetMetadataCommandCallback)>(i0, r9, z0, r4);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

        goto label6;

     label5:
        $r7 := @caughtexception;

        r10 = $r7;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r10;

     label7:
        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("Must have WRITE_EMBEDDED_SUBSCRIPTIONS to get metadata");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public java.lang.String getEid(int, java.lang.String)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        boolean z0, $z1;
        long l1;
        java.lang.SecurityException r1;
        java.lang.String $r4, r6, r8;
        java.lang.Throwable $r5;
        java.lang.StringBuilder r7;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        z0 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanReadPhoneStatePrivileged()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if z0 != 0 goto label4;

     label1:
        $z1 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean canManageSubscriptionOnTargetSim(int,java.lang.String)>(i0, r6);

        if $z1 == 0 goto label3;

     label2:
        goto label4;

     label3:
        r1 = new java.lang.SecurityException;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must have carrier privileges on subscription to read EID for cardId=");

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw r1;

     label4:
        r8 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: java.lang.String blockingGetEidFromEuiccService(int)>(i0);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r8;

     label6:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public android.telephony.euicc.EuiccInfo getEuiccInfo(int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        long l1;
        java.lang.Throwable $r1;
        android.telephony.euicc.EuiccInfo r2;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.euicc.EuiccInfo blockingGetEuiccInfoFromEuiccService(int)>(i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r2;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getOtaStatus(int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        long l0;
        boolean $z0;
        java.lang.SecurityException $r2;
        java.lang.Throwable $r3;
        int i1, i2;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i1 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        if $z0 == 0 goto label4;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        i2 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: int blockingGetOtaStatusFromEuiccService(int)>(i1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i2;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

     label4:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Must have WRITE_EMBEDDED_SUBSCRIPTIONS to get OTA status");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.List getSupportedCountries(boolean)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        boolean z0, $z1;
        java.lang.SecurityException $r1;
        java.util.List $r2, r3, r4;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        if $z1 == 0 goto label3;

        if z0 == 0 goto label1;

        r3 = r0.<com.android.internal.telephony.euicc.EuiccController: java.util.List mSupportedCountries>;

        if r3 == null goto label1;

        return r3;

     label1:
        if z0 != 0 goto label2;

        r4 = r0.<com.android.internal.telephony.euicc.EuiccController: java.util.List mUnsupportedCountries>;

        if r4 == null goto label2;

        return r4;

     label2:
        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;

     label3:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Must have WRITE_EMBEDDED_SUBSCRIPTIONS to get supported countries");

        throw $r1;
    }

    public boolean isSupportedCountry(java.lang.String)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        java.lang.String r1, $r7, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.SecurityException $r2;
        java.lang.StringBuilder $r3, $r8;
        java.util.List $r5, $r10, r13;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        if $z0 == 0 goto label3;

        r13 = r0.<com.android.internal.telephony.euicc.EuiccController: java.util.List mSupportedCountries>;

        if r13 == null goto label2;

        $z3 = interfaceinvoke r13.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label1;

        goto label2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using whitelist supportedCountries=");

        $r10 = r0.<com.android.internal.telephony.euicc.EuiccController: java.util.List mSupportedCountries>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("EuiccController", $r12);

        $z4 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean isEsimSupportedCountry(java.lang.String)>(r1);

        return $z4;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using blacklist unsupportedCountries=");

        $r5 = r0.<com.android.internal.telephony.euicc.EuiccController: java.util.List mUnsupportedCountries>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("EuiccController", $r7);

        $z1 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean isEsimUnsupportedCountry(java.lang.String)>(r1);

        $z2 = $z1 ^ 1;

        return $z2;

     label3:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Must have WRITE_EMBEDDED_SUBSCRIPTIONS to check if the country is supported");

        throw $r2;
    }

    public void lambda$refreshSubscriptionsAndSendResult$0$EuiccController(android.app.PendingIntent, int, android.content.Intent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.app.PendingIntent r1;
        int i0;
        android.content.Intent r2;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r1 := @parameter0: android.app.PendingIntent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void sendResult(android.app.PendingIntent,int,android.content.Intent)>(r1, i0, r2);

        return;
    }

    public void refreshSubscriptionsAndSendResult(android.app.PendingIntent, int, android.content.Intent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.app.PendingIntent r1;
        int i0;
        android.content.Intent r2;
        com.android.internal.telephony.SubscriptionController $r3;
        com.android.internal.telephony.euicc._$$Lambda$EuiccController$aZ8yEHh32lS1TctCOFmVEa57ekc $r4;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r1 := @parameter0: android.app.PendingIntent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        $r3 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $r4 = new com.android.internal.telephony.euicc._$$Lambda$EuiccController$aZ8yEHh32lS1TctCOFmVEa57ekc;

        specialinvoke $r4.<com.android.internal.telephony.euicc._$$Lambda$EuiccController$aZ8yEHh32lS1TctCOFmVEa57ekc: void <init>(com.android.internal.telephony.euicc.EuiccController,android.app.PendingIntent,int,android.content.Intent)>(r0, r1, i0, r2);

        virtualinvoke $r3.<com.android.internal.telephony.SubscriptionController: void requestEmbeddedSubscriptionInfoListRefresh(java.lang.Runnable)>($r4);

        return;
    }

    public void retainSubscriptionsForFactoryReset(int, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        long l1;
        com.android.internal.telephony.euicc.EuiccConnector r1;
        com.android.internal.telephony.euicc.EuiccController$9 r2;
        android.content.Context $r3;
        java.lang.Throwable $r4;
        android.app.PendingIntent r5;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        r5 := @parameter1: android.app.PendingIntent;

        $r3 = r0.<com.android.internal.telephony.euicc.EuiccController: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MASTER_CLEAR", "Must have MASTER_CLEAR to retain subscriptions for factory reset");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        r2 = new com.android.internal.telephony.euicc.EuiccController$9;

        specialinvoke r2.<com.android.internal.telephony.euicc.EuiccController$9: void <init>(com.android.internal.telephony.euicc.EuiccController,android.app.PendingIntent)>(r0, r5);

        virtualinvoke r1.<com.android.internal.telephony.euicc.EuiccConnector: void retainSubscriptions(int,com.android.internal.telephony.euicc.EuiccConnector$RetainSubscriptionsCommandCallback)>(i0, r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void sendOtaStatusChangedBroadcast()
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.content.pm.ComponentInfo r2;
        android.content.Intent $r3;
        android.content.Context $r4, $r6;
        android.content.pm.PackageManager $r5;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.telephony.euicc.action.OTA_STATUS_CHANGED");

        $r4 = r0.<com.android.internal.telephony.euicc.EuiccController: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = staticinvoke <com.android.internal.telephony.euicc.EuiccConnector: android.content.pm.ComponentInfo findBestComponent(android.content.pm.PackageManager)>($r5);

        if r2 == null goto label1;

        $r7 = r2.<android.content.pm.ComponentInfo: java.lang.String packageName>;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r7);

     label1:
        $r6 = r0.<com.android.internal.telephony.euicc.EuiccController: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r3, "android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS");

        return;
    }

    public void sendResult(android.app.PendingIntent, int, android.content.Intent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        android.content.Intent r1;
        android.content.Context $r2;
        android.app.PendingIntent$CanceledException $r3;
        android.app.PendingIntent r4;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        r4 := @parameter0: android.app.PendingIntent;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

     label1:
        $r2 = r0.<com.android.internal.telephony.euicc.EuiccController: android.content.Context mContext>;

        virtualinvoke r4.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>($r2, i0, r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    public void setSupportedCountries(boolean, java.util.List)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        boolean z0, $z1;
        java.util.List r1;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.List;

        $z1 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        if $z1 == 0 goto label3;

        if z0 == 0 goto label1;

        r0.<com.android.internal.telephony.euicc.EuiccController: java.util.List mSupportedCountries> = r1;

        goto label2;

     label1:
        r0.<com.android.internal.telephony.euicc.EuiccController: java.util.List mUnsupportedCountries> = r1;

     label2:
        return;

     label3:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Must have WRITE_EMBEDDED_SUBSCRIPTIONS to set supported countries");

        throw $r2;
    }

    public void startOtaUpdatingIfNecessary()
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        android.telephony.TelephonyManager $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        $r1 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.TelephonyManager mTelephonyManager>;

        $i0 = virtualinvoke $r1.<android.telephony.TelephonyManager: int getCardIdForDefaultEuicc()>();

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void startOtaUpdatingIfNecessary(int)>($i0);

        return;
    }

    public void startOtaUpdatingIfNecessary(int)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0;
        com.android.internal.telephony.euicc.EuiccController$1 $r1;
        com.android.internal.telephony.euicc.EuiccConnector $r2;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        $r1 = new com.android.internal.telephony.euicc.EuiccController$1;

        specialinvoke $r1.<com.android.internal.telephony.euicc.EuiccController$1: void <init>(com.android.internal.telephony.euicc.EuiccController)>(r0);

        virtualinvoke $r2.<com.android.internal.telephony.euicc.EuiccConnector: void startOtaIfNecessary(int,com.android.internal.telephony.euicc.EuiccConnector$OtaStatusChangedCallback)>(i0, $r1);

        return;
    }

    public void switchToSubscription(int, int, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, i1;
        java.lang.String r1;
        android.app.PendingIntent r2;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.app.PendingIntent;

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void switchToSubscription(int,int,boolean,java.lang.String,android.app.PendingIntent)>(i0, i1, 0, r1, r2);

        return;
    }

    void switchToSubscription(int, int, boolean, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, i1, $i4;
        android.app.PendingIntent r1;
        long l2;
        android.content.Intent r2;
        android.app.AppOpsManager $r3;
        android.telephony.SubscriptionManager $r4;
        boolean $z0, $z1, z2, z3, z4, z5;
        java.lang.String $r7, $r10, r14, r16;
        java.lang.Throwable $r11, $r12, $r13, r15;
        android.telephony.SubscriptionInfo r17;
        java.lang.StringBuilder r18, r19;
        com.android.internal.telephony.euicc.EuiccOperation r20;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z2 := @parameter2: boolean;

        r14 := @parameter3: java.lang.String;

        r1 := @parameter4: android.app.PendingIntent;

        z3 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        $r3 = r0.<com.android.internal.telephony.euicc.EuiccController: android.app.AppOpsManager mAppOpsManager>;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i4, r14);

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if z3 == 0 goto label01;

        z2 = 1;

        goto label01;

     label01:
        z4 = 0;

        if i1 != -1 goto label08;

        if z3 != 0 goto label07;

     label02:
        $z1 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean canManageActiveSubscriptionOnTargetSim(int,java.lang.String)>(i0, r14);

        if $z1 == 0 goto label04;

     label03:
        goto label07;

     label04:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EuiccController", "Not permitted to switch to empty subscription");

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void sendResult(android.app.PendingIntent,int,android.content.Intent)>(r1, 2, null);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label06:
        $r13 := @caughtexception;

        r15 = $r13;

        goto label28;

     label07:
        z4 = 1;

        r16 = null;

        goto label20;

     label08:
        r17 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionInfo getSubscriptionForSubscriptionId(int)>(i1);

     label09:
        if r17 != null goto label12;

     label10:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot switch to nonexistent sub: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EuiccController", $r10);

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void sendResult(android.app.PendingIntent,int,android.content.Intent)>(r1, 2, null);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label12:
        if z3 == 0 goto label13;

        z4 = 1;

        goto label19;

     label13:
        $r4 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionManager mSubscriptionManager>;

        z5 = virtualinvoke $r4.<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo,java.lang.String)>(r17, r14);

     label14:
        if z5 != 0 goto label17;

     label15:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not permitted to switch to sub: ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EuiccController", $r7);

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void sendResult(android.app.PendingIntent,int,android.content.Intent)>(r1, 2, null);

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label17:
        $z0 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean canManageSubscriptionOnTargetSim(int,java.lang.String)>(i0, r14);

        if $z0 == 0 goto label19;

     label18:
        z4 = 1;

     label19:
        r16 = virtualinvoke r17.<android.telephony.SubscriptionInfo: java.lang.String getIccId()>();

     label20:
        if z4 != 0 goto label24;

     label21:
        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>()>();

        r20 = staticinvoke <com.android.internal.telephony.euicc.EuiccOperation: com.android.internal.telephony.euicc.EuiccOperation forSwitchNoPrivileges(long,int,java.lang.String)>(l2, i1, r14);

     label22:
        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void addResolutionIntent(android.content.Intent,java.lang.String,java.lang.String,int,boolean,com.android.internal.telephony.euicc.EuiccOperation,int)>(r2, "android.service.euicc.action.RESOLVE_NO_PRIVILEGES", r14, 0, 0, r20, i0);

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void sendResult(android.app.PendingIntent,int,android.content.Intent)>(r1, 1, r2);

     label23:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label24:
        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void switchToSubscriptionPrivileged(int,long,int,java.lang.String,boolean,java.lang.String,android.app.PendingIntent)>(i0, l2, i1, r16, z2, r14, r1);

     label25:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label26:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label28;

     label27:
        $r12 := @caughtexception;

        r15 = $r12;

     label28:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r15;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label27;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label15 to label16 with label06;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label21 to label22 with label27;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
    }

    void switchToSubscriptionPrivileged(int, long, int, java.lang.String, boolean, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, i2;
        long l1;
        java.lang.String r1, r2;
        boolean z0;
        android.app.PendingIntent r3;
        com.android.internal.telephony.euicc.EuiccController$5 $r4;
        com.android.internal.telephony.euicc.EuiccConnector $r5;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        r3 := @parameter6: android.app.PendingIntent;

        $r5 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        $r4 = new com.android.internal.telephony.euicc.EuiccController$5;

        specialinvoke $r4.<com.android.internal.telephony.euicc.EuiccController$5: void <init>(com.android.internal.telephony.euicc.EuiccController,java.lang.String,long,int,int,android.app.PendingIntent)>(r0, r2, l1, i2, i0, r3);

        virtualinvoke $r5.<com.android.internal.telephony.euicc.EuiccConnector: void switchToSubscription(int,java.lang.String,boolean,com.android.internal.telephony.euicc.EuiccConnector$SwitchCommandCallback)>(i0, r1, z0, $r4);

        return;
    }

    void switchToSubscriptionPrivileged(int, long, int, boolean, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, i2;
        long l1;
        boolean z0;
        java.lang.String r1, r4;
        android.app.PendingIntent r2;
        android.telephony.SubscriptionInfo r3;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: android.app.PendingIntent;

        r4 = null;

        r3 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionInfo getSubscriptionForSubscriptionId(int)>(i2);

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<android.telephony.SubscriptionInfo: java.lang.String getIccId()>();

     label1:
        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void switchToSubscriptionPrivileged(int,long,int,java.lang.String,boolean,java.lang.String,android.app.PendingIntent)>(i0, l1, i2, r4, z0, r1, r2);

        return;
    }

    public void updateSubscriptionNickname(int, int, java.lang.String, java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.euicc.EuiccController r0;
        int i0, i1, $i3;
        android.app.PendingIntent r1;
        boolean z0, $z1;
        long l2;
        com.android.internal.telephony.euicc.EuiccController$6 r2;
        android.app.AppOpsManager $r3;
        android.telephony.SubscriptionManager $r4;
        java.lang.String $r7, $r10, r12, r13, r18;
        java.lang.Throwable $r11;
        android.telephony.SubscriptionInfo r14;
        java.lang.StringBuilder r15, r16;
        com.android.internal.telephony.euicc.EuiccConnector r17;

        r0 := @this: com.android.internal.telephony.euicc.EuiccController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r12 := @parameter2: java.lang.String;

        r13 := @parameter3: java.lang.String;

        r1 := @parameter4: android.app.PendingIntent;

        z0 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: boolean callerCanWriteEmbeddedSubscriptions()>();

        $r3 = r0.<com.android.internal.telephony.euicc.EuiccController: android.app.AppOpsManager mAppOpsManager>;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i3, r13);

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r14 = specialinvoke r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionInfo getSubscriptionForSubscriptionId(int)>(i1);

     label02:
        if r14 != null goto label05;

     label03:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot update nickname to nonexistent sub: ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EuiccController", $r10);

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void sendResult(android.app.PendingIntent,int,android.content.Intent)>(r1, 2, null);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label05:
        if z0 != 0 goto label08;

     label06:
        $r4 = r0.<com.android.internal.telephony.euicc.EuiccController: android.telephony.SubscriptionManager mSubscriptionManager>;

        $z1 = virtualinvoke $r4.<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo,java.lang.String)>(r14, r13);

        if $z1 != 0 goto label08;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permissions: ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EuiccController", $r7);

        virtualinvoke r0.<com.android.internal.telephony.euicc.EuiccController: void sendResult(android.app.PendingIntent,int,android.content.Intent)>(r1, 2, null);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label08:
        r17 = r0.<com.android.internal.telephony.euicc.EuiccController: com.android.internal.telephony.euicc.EuiccConnector mConnector>;

        r18 = virtualinvoke r14.<android.telephony.SubscriptionInfo: java.lang.String getIccId()>();

        r2 = new com.android.internal.telephony.euicc.EuiccController$6;

        specialinvoke r2.<com.android.internal.telephony.euicc.EuiccController$6: void <init>(com.android.internal.telephony.euicc.EuiccController,android.app.PendingIntent)>(r0, r1);

        virtualinvoke r17.<com.android.internal.telephony.euicc.EuiccConnector: void updateSubscriptionNickname(int,java.lang.String,java.lang.String,com.android.internal.telephony.euicc.EuiccConnector$UpdateNicknameCommandCallback)>(i0, r18, r12, r2);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label10:
        $r11 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.euicc.EuiccController: java.lang.String TAG> = "EuiccController";

        <com.android.internal.telephony.euicc.EuiccController: int RESOLVABLE_ERROR> = 1;

        <com.android.internal.telephony.euicc.EuiccController: java.lang.String RESOLUTION_ACTIVITY_PACKAGE_NAME> = "com.android.phone";

        <com.android.internal.telephony.euicc.EuiccController: java.lang.String RESOLUTION_ACTIVITY_CLASS_NAME> = "com.android.phone.euicc.EuiccResolutionUiDispatcherActivity";

        <com.android.internal.telephony.euicc.EuiccController: int OK> = 0;

        <com.android.internal.telephony.euicc.EuiccController: java.lang.String EXTRA_OPERATION> = "operation";

        <com.android.internal.telephony.euicc.EuiccController: java.lang.String EXTRA_EMBEDDED_SUBSCRIPTION_DOWNLOADABLE_SUBSCRIPTION> = "android.telephony.euicc.extra.EMBEDDED_SUBSCRIPTION_DOWNLOADABLE_SUBSCRIPTION";

        <com.android.internal.telephony.euicc.EuiccController: int EUICC_DUMP_TIME_OUT_SECONDS> = 5;

        <com.android.internal.telephony.euicc.EuiccController: int ERROR> = 2;

        return;
    }
}
