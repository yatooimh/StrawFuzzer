public class com.android.internal.telephony.gsm.GsmSmsAddress extends com.android.internal.telephony.SmsAddress
{
    static final int OFFSET_ADDRESS_LENGTH;
    static final int OFFSET_ADDRESS_VALUE;
    static final int OFFSET_TOA;

    public void <init>(byte[], int, int) throws java.text.ParseException
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        int i0, $i7, $i8, $i10, $i12, $i17, i18, i20, i22;
        short s1, $s4, $s5, $s6, $s9, $s14, s19;
        byte[] $r1, $r2, $r3, $r4, $r10, $r11, $r13, $r14, r16, r17;
        byte $b2, $b3, $b11, $b13, $b15, $b16, b21;
        java.lang.StringBuilder $r5;
        java.text.ParseException $r8;
        java.lang.String $r9, $r12, $r15;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        r16 := @parameter0: byte[];

        i18 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.telephony.SmsAddress: void <init>()>();

        $r1 = newarray (byte)[i0];

        r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes> = $r1;

        $r2 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r16, i18, $r2, 0, i0);

        $r3 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $b2 = $r3[0];

        s19 = $b2 & 255;

        $r4 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $b3 = $r4[1];

        s1 = $b3 & 255;

        $s4 = s1 >> 4;

        $s5 = $s4 & 7;

        r0.<com.android.internal.telephony.gsm.GsmSmsAddress: int ton> = $s5;

        $s6 = s1 & 128;

        if $s6 != 128 goto label4;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isAlphanumeric()>();

        if $z0 == 0 goto label1;

        $i17 = s19 * 4;

        i20 = $i17 / 7;

        $r14 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $r15 = staticinvoke <com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int)>($r14, 2, i20);

        r0.<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String address> = $r15;

        goto label3;

     label1:
        $r10 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $i8 = i0 - 1;

        b21 = $r10[$i8];

        $s9 = s19 & 1;

        if $s9 != 1 goto label2;

        r17 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        i22 = i0 - 1;

        $b13 = r17[i22];

        $s14 = $b13 | 240;

        $b15 = (byte) $s14;

        $b16 = (byte) $b15;

        r17[i22] = $b16;

     label2:
        $r11 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $i10 = i0 - 1;

        $r12 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int,int)>($r11, 1, $i10, 2);

        r0.<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String address> = $r12;

        $r13 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $i12 = i0 - 1;

        $b11 = (byte) b21;

        $r13[$i12] = $b11;

     label3:
        return;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid TOA - high bit must be set. toa = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s1);

        $r8 = new java.text.ParseException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $i7 = i18 + 1;

        specialinvoke $r8.<java.text.ParseException: void <init>(java.lang.String,int)>($r9, $i7);

        throw $r8;
    }

    public java.lang.String getAddressString()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        $r1 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String address>;

        return $r1;
    }

    public boolean isAlphanumeric()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        $i0 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: int ton>;

        if $i0 != 5 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isCphsVoiceMessageClear()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        boolean $z0, z1;
        byte[] $r1;
        byte $b0;
        short $s1;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageIndicatorAddress()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $b0 = $r1[2];

        $s1 = $b0 & 255;

        if $s1 != 16 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isCphsVoiceMessageIndicatorAddress()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        byte[] r1, $r2;
        byte $b0, $b2, $b3;
        short $s1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        r1 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        z1 = 0;

        $b0 = r1[0];

        $s1 = $b0 & 255;

        if $s1 != 4 goto label1;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isAlphanumeric()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $b2 = $r2[1];

        $b3 = $b2 & 15;

        if $b3 != 0 goto label1;

        z1 = 1;

        goto label1;

     label1:
        return z1;
    }

    public boolean isCphsVoiceMessageSet()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        boolean $z0, z1;
        byte[] $r1;
        byte $b0;
        short $s1;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageIndicatorAddress()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $b0 = $r1[2];

        $s1 = $b0 & 255;

        if $s1 != 17 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isNetworkSpecific()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        $i0 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: int ton>;

        if $i0 != 3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.gsm.GsmSmsAddress: int OFFSET_TOA> = 1;

        <com.android.internal.telephony.gsm.GsmSmsAddress: int OFFSET_ADDRESS_VALUE> = 2;

        <com.android.internal.telephony.gsm.GsmSmsAddress: int OFFSET_ADDRESS_LENGTH> = 0;

        return;
    }
}
