public class com.android.internal.telephony.gsm.SmsMessage extends com.android.internal.telephony.SmsMessageBase
{
    private static final int INVALID_VALIDITY_PERIOD;
    static final java.lang.String LOG_TAG;
    private static final int VALIDITY_PERIOD_FORMAT_ABSOLUTE;
    private static final int VALIDITY_PERIOD_FORMAT_ENHANCED;
    private static final int VALIDITY_PERIOD_FORMAT_NONE;
    private static final int VALIDITY_PERIOD_FORMAT_RELATIVE;
    private static final int VALIDITY_PERIOD_MAX;
    private static final int VALIDITY_PERIOD_MIN;
    private static final boolean VDBG;
    private int mDataCodingScheme;
    private boolean mIsStatusReportMessage;
    private int mMti;
    private int mProtocolIdentifier;
    private boolean mReplyPathPresent;
    private int mStatus;
    private int mVoiceMailCount;
    private com.android.internal.telephony.SmsConstants$MessageClass messageClass;

    public void <init>()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        specialinvoke r0.<com.android.internal.telephony.SmsMessageBase: void <init>()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mReplyPathPresent> = 0;

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsStatusReportMessage> = 0;

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mVoiceMailCount> = 0;

        return;
    }

    public static com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence, boolean)
    {
        boolean z0, $z1, $z2;
        android.content.res.Resources $r0;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails $r1, r5;
        java.lang.CharSequence r2, r6, r7;
        java.lang.String r3;
        java.lang.Object r4;

        r2 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        r3 = null;

        $r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z1 = virtualinvoke $r0.<android.content.res.Resources: boolean getBoolean(int)>(17891535);

        if $z1 == 0 goto label1;

        r3 = staticinvoke <com.android.internal.telephony.Sms7BitEncodingTranslator: java.lang.String translate(java.lang.CharSequence,boolean)>(r2, 0);

     label1:
        r4 = r3;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z2 == 0 goto label2;

        r4 = r2;

     label2:
        r6 = (java.lang.CharSequence) r4;

        r5 = staticinvoke <com.android.internal.telephony.GsmAlphabet: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails countGsmSeptets(java.lang.CharSequence,boolean)>(r6, z0);

        if r5 != null goto label3;

        r7 = (java.lang.CharSequence) r4;

        $r1 = staticinvoke <com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calcUnicodeEncodingDetails(java.lang.CharSequence)>(r7);

        return $r1;

     label3:
        return r5;
    }

    public static com.android.internal.telephony.gsm.SmsMessage createFromEfRecord(int, byte[])
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        byte[] r1, r3;
        byte $b0, $b1, $b2, $b3;
        int $i4, i7, i8;
        java.lang.RuntimeException $r2;

        i7 := @parameter0: int;

        r3 := @parameter1: byte[];

     label1:
        r0 = new com.android.internal.telephony.gsm.SmsMessage;

        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void <init>()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mIndexOnIcc> = i7;

     label2:
        $b0 = r3[0];

        $b1 = $b0 & 1;

        if $b1 != 0 goto label5;

     label3:
        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", "SMS parsing failed: Trying to parse a free record");

     label4:
        return null;

     label5:
        $b2 = r3[0];

        $b3 = $b2 & 7;

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mStatusOnIcc> = $b3;

        $i4 = lengthof r3;

        i8 = $i4 - 1;

        r1 = newarray (byte)[i8];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 1, r1, 0, i8);

        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parsePdu(byte[])>(r1);

     label6:
        return r0;

     label7:
        $r2 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "SMS PDU parsing failed: ", $r2);

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label7;
        catch java.lang.RuntimeException from label3 to label4 with label7;
        catch java.lang.RuntimeException from label5 to label6 with label7;
    }

    public static com.android.internal.telephony.gsm.SmsMessage createFromPdu(byte[])
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        java.lang.RuntimeException $r1;
        java.lang.OutOfMemoryError $r2;
        byte[] r3;

        r3 := @parameter0: byte[];

     label1:
        r0 = new com.android.internal.telephony.gsm.SmsMessage;

        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void <init>()>();

        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parsePdu(byte[])>(r3);

     label2:
        return r0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "SMS PDU parsing failed with out of memory: ", $r2);

        return null;

     label4:
        $r1 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "SMS PDU parsing failed: ", $r1);

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.OutOfMemoryError from label1 to label2 with label3;
    }

    private static byte[] encodeUCS2(java.lang.String, byte[]) throws java.io.UnsupportedEncodingException, com.android.internal.telephony.EncodeException
    {
        byte[] r0, r3, r4, r5;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i17, $i18;
        com.android.internal.telephony.EncodeException $r1;
        byte $b5, $b6, $b13, $b14;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: byte[];

        r0 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-16be");

        if r3 == null goto label1;

        $i9 = lengthof r3;

        $i8 = lengthof r0;

        $i10 = $i9 + $i8;

        $i11 = $i10 + 1;

        r4 = newarray (byte)[$i11];

        $i12 = lengthof r3;

        $b13 = (byte) $i12;

        $b14 = (byte) $b13;

        r4[0] = $b14;

        $i15 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 1, $i15);

        $i16 = lengthof r3;

        $i18 = $i16 + 1;

        $i17 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r4, $i18, $i17);

        goto label2;

     label1:
        r4 = r0;

     label2:
        $i0 = lengthof r4;

        if $i0 > 255 goto label3;

        $i1 = lengthof r4;

        $i2 = $i1 + 1;

        r5 = newarray (byte)[$i2];

        $i3 = lengthof r4;

        $i4 = 255 & $i3;

        $b5 = (byte) $i4;

        $b6 = (byte) $b5;

        r5[0] = $b6;

        $i7 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r5, 1, $i7);

        return r5;

     label3:
        $r1 = new com.android.internal.telephony.EncodeException;

        specialinvoke $r1.<com.android.internal.telephony.EncodeException: void <init>(java.lang.String,int)>("Payload cannot exceed 255 bytes", 1);

        throw $r1;
    }

    public static com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getDeliverPdu(java.lang.String, java.lang.String, java.lang.String, long)
    {
        long l0;
        int i1, i2, i3, $i4, $i5, $i8, $i9, $i10, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i24, $i25, $i26, $i27, $i28, $i29, $i32, $i33, $i34, $i35, $i36, $i37, $i40, $i41, $i42, $i43, $i44, $i45, $i48, $i49, $i50, $i51, $i52, $i53, $i56, $i57, $i58, $i59, $i60, $i61, $i64, $i65, $i66, $i67, $i68, $i69, $i72, $i73, $i87, i91, i92, i93, i94, i96, i97, i98, i99, i100, i101, i102;
        byte[] $r2, $r6, r27, r30, r31, r36;
        byte $b6, $b12, $b22, $b23, $b30, $b31, $b38, $b39, $b46, $b47, $b54, $b55, $b62, $b63, $b70, $b71, $b74, $b75, $b76, $b77, $b78, $b81, $b83, b95;
        short $s7, $s13, $s79, $s82, $s84;
        java.time.Instant $r3;
        java.time.ZoneId $r4;
        java.time.ZoneOffset $r5;
        java.lang.StringBuilder $r7, $r12;
        java.lang.String $r11, $r16, r22, r23, r24;
        com.android.internal.telephony.SmsHeader $r17;
        com.android.internal.telephony.EncodeException $r18, $r19;
        java.lang.Throwable $r20, $r21;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails r25;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu $r28;
        java.io.ByteArrayOutputStream $r29;
        java.time.ZonedDateTime r37;
        java.time.LocalDateTime r38;
        boolean z0;

        r22 := @parameter0: java.lang.String;

        r23 := @parameter1: java.lang.String;

        r24 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        if r23 == null goto label34;

        if r24 != null goto label01;

        goto label34;

     label01:
        r25 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>(r24, 0);

        i91 = r25.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize>;

        i92 = r25.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageTable>;

        i93 = r25.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageShiftTable>;

        if i91 != 1 goto label03;

        if i92 != 0 goto label02;

        if i93 == 0 goto label03;

     label02:
        $r17 = new com.android.internal.telephony.SmsHeader;

        specialinvoke $r17.<com.android.internal.telephony.SmsHeader: void <init>()>();

        $r17.<com.android.internal.telephony.SmsHeader: int languageTable> = i92;

        $r17.<com.android.internal.telephony.SmsHeader: int languageShiftTable> = i93;

        r27 = staticinvoke <com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)>($r17);

        goto label04;

     label03:
        r27 = null;

     label04:
        $r28 = new com.android.internal.telephony.gsm.SmsMessage$SubmitPdu;

        specialinvoke $r28.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: void <init>()>();

        $r29 = new java.io.ByteArrayOutputStream;

        specialinvoke $r29.<java.io.ByteArrayOutputStream: void <init>(int)>(180);

        if r22 != null goto label05;

        $r28.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedScAddress> = null;

        goto label06;

     label05:
        $r2 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>(r22);

        $r28.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedScAddress> = $r2;

     label06:
        virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(int)>(0);

        r30 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>(r23);

        if r30 != null goto label07;

        return null;

     label07:
        i94 = lengthof r30;

        $i4 = lengthof r30;

        $i5 = $i4 - 1;

        $b6 = r30[$i5];

        $s7 = $b6 & 240;

        if $s7 != 240 goto label08;

        b95 = 1;

        goto label09;

     label08:
        b95 = 0;

     label09:
        $i8 = i94 - 1;

        $i9 = $i8 * 2;

        $i10 = $i9 - b95;

        virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(int)>($i10);

        $i11 = lengthof r30;

        virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r30, 0, $i11);

        virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(int)>(0);

        if i91 != 1 goto label12;

     label10:
        r31 = staticinvoke <com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[],int,int)>(r24, r27, i92, i93);

     label11:
        goto label13;

     label12:
        r31 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: byte[] encodeUCS2(java.lang.String,byte[])>(r24, r27);

     label13:
        i96 = i91;

        goto label21;

     label14:
        $r19 := @caughtexception;

        goto label18;

     label15:
        $r21 := @caughtexception;

     label16:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "Implausible UnsupportedEncodingException ", $r21);

     label17:
        return null;

     label18:
        $i87 = virtualinvoke $r19.<com.android.internal.telephony.EncodeException: int getError()>();

        if $i87 != 1 goto label19;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "Exceed size limitation EncodeException", $r19);

        return null;

     label19:
        r31 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: byte[] encodeUCS2(java.lang.String,byte[])>(r24, r27);

     label20:
        i96 = 3;

     label21:
        if i96 != 1 goto label23;

        $b81 = r31[0];

        $s82 = $b81 & 255;

        if $s82 <= 160 goto label22;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message too long (");

        $b83 = r31[0];

        $s84 = $b83 & 255;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s84);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" septets)");

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r16);

        return null;

     label22:
        virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(int)>(0);

        goto label25;

     label23:
        $b12 = r31[0];

        $s13 = $b12 & 255;

        if $s13 <= 140 goto label24;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message too long (");

        $b78 = r31[0];

        $s79 = $b78 & 255;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s79);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes)");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r11);

        return null;

     label24:
        virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(int)>(8);

     label25:
        r36 = newarray (byte)[7];

        $r3 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>(l0);

        $r4 = staticinvoke <java.time.ZoneId: java.time.ZoneId systemDefault()>();

        r37 = virtualinvoke $r3.<java.time.Instant: java.time.ZonedDateTime atZone(java.time.ZoneId)>($r4);

        r38 = virtualinvoke r37.<java.time.ZonedDateTime: java.time.LocalDateTime toLocalDateTime()>();

        $r5 = virtualinvoke r37.<java.time.ZonedDateTime: java.time.ZoneOffset getOffset()>();

        $i14 = virtualinvoke $r5.<java.time.ZoneOffset: int getTotalSeconds()>();

        $i15 = $i14 / 60;

        i97 = $i15 / 15;

        if i97 >= 0 goto label26;

        z0 = 1;

        goto label27;

     label26:
        z0 = 0;

     label27:
        i98 = i97;

        if z0 == 0 goto label28;

        i98 = neg i97;

     label28:
        i99 = virtualinvoke r38.<java.time.LocalDateTime: int getYear()>();

        i100 = virtualinvoke r38.<java.time.LocalDateTime: int getMonthValue()>();

        i1 = virtualinvoke r38.<java.time.LocalDateTime: int getDayOfMonth()>();

        i2 = virtualinvoke r38.<java.time.LocalDateTime: int getHour()>();

        i101 = virtualinvoke r38.<java.time.LocalDateTime: int getMinute()>();

        i3 = virtualinvoke r38.<java.time.LocalDateTime: int getSecond()>();

        if i99 <= 2000 goto label29;

        i102 = i99 + -2000;

        goto label30;

     label29:
        i102 = i99 + -1900;

     label30:
        $i16 = i102 % 10;

        $i17 = $i16 & 15;

        $i20 = $i17 << 4;

        $i18 = i102 / 10;

        $i19 = $i18 & 15;

        $i21 = $i20 | $i19;

        $b22 = (byte) $i21;

        $b23 = (byte) $b22;

        r36[0] = $b23;

        $i24 = i100 % 10;

        $i25 = $i24 & 15;

        $i28 = $i25 << 4;

        $i26 = i100 / 10;

        $i27 = $i26 & 15;

        $i29 = $i28 | $i27;

        $b30 = (byte) $i29;

        $b31 = (byte) $b30;

        r36[1] = $b31;

        $i32 = i1 % 10;

        $i33 = $i32 & 15;

        $i36 = $i33 << 4;

        $i34 = i1 / 10;

        $i35 = $i34 & 15;

        $i37 = $i36 | $i35;

        $b38 = (byte) $i37;

        $b39 = (byte) $b38;

        r36[2] = $b39;

        $i40 = i2 % 10;

        $i41 = $i40 & 15;

        $i44 = $i41 << 4;

        $i42 = i2 / 10;

        $i43 = $i42 & 15;

        $i45 = $i44 | $i43;

        $b46 = (byte) $i45;

        $b47 = (byte) $b46;

        r36[3] = $b47;

        $i48 = i101 % 10;

        $i49 = $i48 & 15;

        $i52 = $i49 << 4;

        $i50 = i101 / 10;

        $i51 = $i50 & 15;

        $i53 = $i52 | $i51;

        $b54 = (byte) $i53;

        $b55 = (byte) $b54;

        r36[4] = $b55;

        $i56 = i3 % 10;

        $i57 = $i56 & 15;

        $i60 = $i57 << 4;

        $i58 = i3 / 10;

        $i59 = $i58 & 15;

        $i61 = $i60 | $i59;

        $b62 = (byte) $i61;

        $b63 = (byte) $b62;

        r36[5] = $b63;

        $i64 = i98 % 10;

        $i65 = $i64 & 15;

        $i68 = $i65 << 4;

        $i66 = i98 / 10;

        $i67 = $i66 & 15;

        $i69 = $i68 | $i67;

        $b70 = (byte) $i69;

        $b71 = (byte) $b70;

        r36[6] = $b71;

        if z0 == 0 goto label31;

        $b74 = r36[0];

        $b75 = $b74 | 8;

        $b76 = (byte) $b75;

        $b77 = (byte) $b76;

        r36[0] = $b77;

        goto label31;

     label31:
        $i72 = lengthof r36;

        virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r36, 0, $i72);

        $i73 = lengthof r31;

        virtualinvoke $r29.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r31, 0, $i73);

        $r6 = virtualinvoke $r29.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r28.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedMessage> = $r6;

        return $r28;

     label32:
        $r20 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "Implausible UnsupportedEncodingException ", $r20);

        return null;

     label33:
        $r18 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "Exceed size limitation EncodeException", $r18);

        return null;

     label34:
        return null;

        catch com.android.internal.telephony.EncodeException from label10 to label11 with label14;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label15;
        catch com.android.internal.telephony.EncodeException from label12 to label13 with label14;
        catch com.android.internal.telephony.EncodeException from label16 to label17 with label14;
        catch com.android.internal.telephony.EncodeException from label19 to label20 with label33;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label32;
    }

    public static int getRelativeValidityPeriod(int)
    {
        int i0, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        i7 = -1;

        if i0 < 5 goto label6;

        if i0 <= 635040 goto label1;

        goto label6;

     label1:
        if i0 > 720 goto label2;

        $i6 = i0 / 5;

        i7 = $i6 - 1;

        goto label5;

     label2:
        if i0 > 1440 goto label3;

        $i4 = i0 - 720;

        $i5 = $i4 / 30;

        i7 = $i5 + 143;

        goto label5;

     label3:
        if i0 > 43200 goto label4;

        $i3 = i0 / 1440;

        i7 = $i3 + 166;

        goto label5;

     label4:
        if i0 > 635040 goto label5;

        $i2 = i0 / 10080;

        i7 = $i2 + 192;

     label5:
        return i7;

     label6:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Validity Period");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r4);

        return -1;
    }

    public static com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, int, byte[], boolean)
    {
        java.lang.String r0, $r10, r11;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        byte[] r1, $r5, r14;
        boolean z0;
        com.android.internal.telephony.SmsHeader$PortAddrs $r2;
        com.android.internal.telephony.SmsHeader $r3;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu $r4;
        java.lang.StringBuilder $r6;
        java.io.ByteArrayOutputStream r17;

        r11 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: byte[];

        z0 := @parameter4: boolean;

        $r2 = new com.android.internal.telephony.SmsHeader$PortAddrs;

        specialinvoke $r2.<com.android.internal.telephony.SmsHeader$PortAddrs: void <init>()>();

        $r2.<com.android.internal.telephony.SmsHeader$PortAddrs: int destPort> = i0;

        $r2.<com.android.internal.telephony.SmsHeader$PortAddrs: int origPort> = 0;

        $r2.<com.android.internal.telephony.SmsHeader$PortAddrs: boolean areEightBits> = 0;

        $r3 = new com.android.internal.telephony.SmsHeader;

        specialinvoke $r3.<com.android.internal.telephony.SmsHeader: void <init>()>();

        $r3.<com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader$PortAddrs portAddrs> = $r2;

        r14 = staticinvoke <com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)>($r3);

        $i2 = lengthof r1;

        $i1 = lengthof r14;

        $i3 = $i2 + $i1;

        $i4 = $i3 + 1;

        if $i4 <= 140 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SMS data message may only contain ");

        $i12 = lengthof r14;

        $i13 = 140 - $i12;

        $i14 = $i13 - 1;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r10);

        return null;

     label1:
        $r4 = new com.android.internal.telephony.gsm.SmsMessage$SubmitPdu;

        specialinvoke $r4.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: void <init>()>();

        r17 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: java.io.ByteArrayOutputStream getSubmitPduHead(java.lang.String,java.lang.String,byte,boolean,com.android.internal.telephony.gsm.SmsMessage$SubmitPdu)>(r11, r0, 65, z0, $r4);

        if r17 != null goto label2;

        return $r4;

     label2:
        virtualinvoke r17.<java.io.ByteArrayOutputStream: void write(int)>(4);

        $i6 = lengthof r1;

        $i5 = lengthof r14;

        $i7 = $i6 + $i5;

        $i8 = $i7 + 1;

        virtualinvoke r17.<java.io.ByteArrayOutputStream: void write(int)>($i8);

        $i9 = lengthof r14;

        virtualinvoke r17.<java.io.ByteArrayOutputStream: void write(int)>($i9);

        $i10 = lengthof r14;

        virtualinvoke r17.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r14, 0, $i10);

        $i11 = lengthof r1;

        virtualinvoke r17.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, $i11);

        $r5 = virtualinvoke r17.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r4.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedMessage> = $r5;

        return $r4;
    }

    public static com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, r2;
        boolean z0;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])>(r0, r1, r2, z0, null);

        return $r3;
    }

    public static com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, java.lang.String, boolean, int)
    {
        java.lang.String r0, r1, r2;
        boolean z0;
        int i0;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        $r3 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int,int)>(r0, r1, r2, z0, null, 0, 0, 0, i0);

        return $r3;
    }

    public static com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, java.lang.String, boolean, byte[])
    {
        java.lang.String r0, r1, r2;
        boolean z0;
        byte[] r3;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r3 := @parameter4: byte[];

        $r4 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int)>(r0, r1, r2, z0, r3, 0, 0, 0);

        return $r4;
    }

    public static com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, java.lang.String, boolean, byte[], int, int, int)
    {
        java.lang.String r0, r1, r2;
        boolean z0;
        byte[] r3;
        int i0, i1, i2;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r3 := @parameter4: byte[];

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        $r4 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int,int)>(r0, r1, r2, z0, r3, i0, i1, i2, -1);

        return $r4;
    }

    public static com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, java.lang.String, boolean, byte[], int, int, int, int)
    {
        java.lang.String r0, $r6, $r11, $r22, r27, r28;
        boolean z0;
        int i0, $i1, $i2, $i3, $i7, $i16, $i17, $i18, $i20, $i22, i26, i27, i28, i29, i30, i31;
        byte $b4, $b5, $b8, $b11, $b13, b33, b34;
        short $s6, $s9, $s12, $s14;
        byte[] $r1, r29, r37;
        java.lang.StringBuilder $r2, $r7, $r13;
        com.android.internal.telephony.SmsHeader $r12, r31;
        java.lang.Throwable $r23, $r25;
        com.android.internal.telephony.EncodeException $r24, $r26;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails r30;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu $r34;
        java.io.ByteArrayOutputStream r36;

        r27 := @parameter0: java.lang.String;

        r28 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r29 := @parameter4: byte[];

        i26 := @parameter5: int;

        i27 := @parameter6: int;

        i28 := @parameter7: int;

        i29 := @parameter8: int;

        if r0 == null goto label34;

        if r28 != null goto label01;

        goto label34;

     label01:
        if i26 != 0 goto label08;

        r30 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>(r0, 0);

        i26 = r30.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize>;

        i30 = r30.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageTable>;

        i31 = r30.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageShiftTable>;

        if i26 != 1 goto label07;

        if i30 != 0 goto label02;

        if i31 == 0 goto label07;

     label02:
        if r29 == null goto label06;

        r31 = staticinvoke <com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader fromByteArray(byte[])>(r29);

        $i16 = r31.<com.android.internal.telephony.SmsHeader: int languageTable>;

        if $i16 != i30 goto label04;

        $i20 = r31.<com.android.internal.telephony.SmsHeader: int languageShiftTable>;

        if $i20 == i31 goto label03;

        goto label04;

     label03:
        goto label05;

     label04:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating language table in SMS header: ");

        $i17 = r31.<com.android.internal.telephony.SmsHeader: int languageTable>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i18 = r31.<com.android.internal.telephony.SmsHeader: int languageShiftTable>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i31);

        $r22 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r22);

        r31.<com.android.internal.telephony.SmsHeader: int languageTable> = i30;

        r31.<com.android.internal.telephony.SmsHeader: int languageShiftTable> = i31;

        r29 = staticinvoke <com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)>(r31);

     label05:
        goto label09;

     label06:
        $r12 = new com.android.internal.telephony.SmsHeader;

        specialinvoke $r12.<com.android.internal.telephony.SmsHeader: void <init>()>();

        $r12.<com.android.internal.telephony.SmsHeader: int languageTable> = i30;

        $r12.<com.android.internal.telephony.SmsHeader: int languageShiftTable> = i31;

        r29 = staticinvoke <com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)>($r12);

        goto label09;

     label07:
        goto label09;

     label08:
        i31 = i28;

        i30 = i27;

     label09:
        $r34 = new com.android.internal.telephony.gsm.SmsMessage$SubmitPdu;

        specialinvoke $r34.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: void <init>()>();

        i0 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: int getRelativeValidityPeriod(int)>(i29);

        if i0 < 0 goto label10;

        b33 = 2;

        goto label11;

     label10:
        b33 = 0;

     label11:
        if r29 == null goto label12;

        b34 = 64;

        goto label13;

     label12:
        b34 = 0;

     label13:
        $i1 = b33 << 3;

        $i2 = $i1 | 1;

        $i3 = $i2 | b34;

        $b4 = (byte) $i3;

        r36 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: java.io.ByteArrayOutputStream getSubmitPduHead(java.lang.String,java.lang.String,byte,boolean,com.android.internal.telephony.gsm.SmsMessage$SubmitPdu)>(r27, r28, $b4, z0, $r34);

        if r36 != null goto label14;

        return $r34;

     label14:
        if i26 != 1 goto label17;

     label15:
        r37 = staticinvoke <com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[],int,int)>(r0, r29, i30, i31);

     label16:
        goto label18;

     label17:
        r37 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: byte[] encodeUCS2(java.lang.String,byte[])>(r0, r29);

     label18:
        goto label26;

     label19:
        $r24 := @caughtexception;

        goto label23;

     label20:
        $r23 := @caughtexception;

     label21:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "Implausible UnsupportedEncodingException ", $r23);

     label22:
        return null;

     label23:
        $i22 = virtualinvoke $r24.<com.android.internal.telephony.EncodeException: int getError()>();

        if $i22 != 1 goto label24;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "Exceed size limitation EncodeException", $r24);

        return null;

     label24:
        r37 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: byte[] encodeUCS2(java.lang.String,byte[])>(r0, r29);

     label25:
        i26 = 3;

     label26:
        if i26 != 1 goto label28;

        $b11 = r37[0];

        $s12 = $b11 & 255;

        if $s12 <= 160 goto label27;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message too long (");

        $b13 = r37[0];

        $s14 = $b13 & 255;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s14);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" septets)");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r11);

        return null;

     label27:
        virtualinvoke r36.<java.io.ByteArrayOutputStream: void write(int)>(0);

        goto label30;

     label28:
        $b5 = r37[0];

        $s6 = $b5 & 255;

        if $s6 <= 140 goto label29;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message too long (");

        $b8 = r37[0];

        $s9 = $b8 & 255;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes)");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r6);

        return null;

     label29:
        virtualinvoke r36.<java.io.ByteArrayOutputStream: void write(int)>(8);

     label30:
        if b33 != 2 goto label31;

        virtualinvoke r36.<java.io.ByteArrayOutputStream: void write(int)>(i0);

     label31:
        $i7 = lengthof r37;

        virtualinvoke r36.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r37, 0, $i7);

        $r1 = virtualinvoke r36.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r34.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedMessage> = $r1;

        return $r34;

     label32:
        $r25 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "Implausible UnsupportedEncodingException ", $r25);

        return null;

     label33:
        $r26 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "Exceed size limitation EncodeException", $r26);

        return null;

     label34:
        return null;

        catch com.android.internal.telephony.EncodeException from label15 to label16 with label19;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label20;
        catch com.android.internal.telephony.EncodeException from label17 to label18 with label19;
        catch com.android.internal.telephony.EncodeException from label21 to label22 with label19;
        catch com.android.internal.telephony.EncodeException from label24 to label25 with label33;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label32;
    }

    private static java.io.ByteArrayOutputStream getSubmitPduHead(java.lang.String, java.lang.String, byte, boolean, com.android.internal.telephony.gsm.SmsMessage$SubmitPdu)
    {
        java.lang.String r0, r5;
        boolean z0;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu r1;
        java.io.ByteArrayOutputStream $r3;
        byte[] $r4, r6;
        int $i0, $i1, $i4, $i5, $i6, $i7, i11;
        byte $b2, $b8, b9, b10, b12;
        short $s3;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        b9 := @parameter2: byte;

        z0 := @parameter3: boolean;

        r1 := @parameter4: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>(int)>(180);

        if r5 != null goto label1;

        r1.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedScAddress> = null;

        goto label2;

     label1:
        $r4 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>(r5);

        r1.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedScAddress> = $r4;

     label2:
        b10 = b9;

        if z0 == 0 goto label3;

        $b8 = b9 | 32;

        b10 = (byte) $b8;

     label3:
        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(int)>(b10);

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(int)>(0);

        r6 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>(r0);

        if r6 != null goto label4;

        return null;

     label4:
        i11 = lengthof r6;

        b12 = 1;

        $i0 = lengthof r6;

        $i1 = $i0 - 1;

        $b2 = r6[$i1];

        $s3 = $b2 & 240;

        if $s3 != 240 goto label5;

        goto label6;

     label5:
        b12 = 0;

     label6:
        $i4 = i11 - 1;

        $i5 = $i4 * 2;

        $i6 = $i5 - b12;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(int)>($i6);

        $i7 = lengthof r6;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r6, 0, $i7);

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(int)>(0);

        return $r3;
    }

    public static int getTPLayerLengthForPDU(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 / 2;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r1, 16);

        $i3 = $i1 - $i2;

        $i4 = $i3 - 1;

        return $i4;
    }

    public static com.android.internal.telephony.gsm.SmsMessage newFromCDS(byte[])
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        java.lang.RuntimeException $r1;
        byte[] r2;

        r2 := @parameter0: byte[];

     label1:
        r0 = new com.android.internal.telephony.gsm.SmsMessage;

        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void <init>()>();

        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parsePdu(byte[])>(r2);

     label2:
        return r0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "CDS SMS PDU parsing failed: ", $r1);

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public static com.android.internal.telephony.gsm.SmsMessage newFromCMT(byte[])
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        java.lang.RuntimeException $r1;
        byte[] r2;

        r2 := @parameter0: byte[];

     label1:
        r0 = new com.android.internal.telephony.gsm.SmsMessage;

        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void <init>()>();

        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parsePdu(byte[])>(r2);

     label2:
        return r0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "SMS PDU parsing failed: ", $r1);

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void parsePdu(byte[])
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int i0, i1;
        com.android.internal.telephony.gsm.SmsMessage$PduParser $r2;
        java.lang.String $r3;
        java.lang.RuntimeException $r4;
        byte[] r5;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        r5 := @parameter0: byte[];

        r0.<com.android.internal.telephony.gsm.SmsMessage: byte[] mPdu> = r5;

        $r2 = new com.android.internal.telephony.gsm.SmsMessage$PduParser;

        specialinvoke $r2.<com.android.internal.telephony.gsm.SmsMessage$PduParser: void <init>(byte[])>(r5);

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getSCAddress()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mScAddress> = $r3;

        i0 = virtualinvoke $r2.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        i1 = i0 & 3;

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mMti> = i1;

        if i1 == 0 goto label4;

        if i1 == 1 goto label3;

        if i1 == 2 goto label2;

        if i1 != 3 goto label1;

        goto label4;

     label1:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unsupported message type");

        throw $r4;

     label2:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseSmsStatusReport(com.android.internal.telephony.gsm.SmsMessage$PduParser,int)>($r2, i0);

        goto label5;

     label3:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseSmsSubmit(com.android.internal.telephony.gsm.SmsMessage$PduParser,int)>($r2, i0);

        goto label5;

     label4:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseSmsDeliver(com.android.internal.telephony.gsm.SmsMessage$PduParser,int)>($r2, i0);

     label5:
        return;
    }

    private void parseSmsDeliver(com.android.internal.telephony.gsm.SmsMessage$PduParser, int)
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.gsm.SmsMessage$PduParser r1;
        int i0, $i1, $i2, $i3, $i5;
        com.android.internal.telephony.gsm.GsmSmsAddress $r3;
        long $l4;
        boolean z1, z2;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsMessage$PduParser;

        i0 := @parameter1: int;

        $i1 = i0 & 128;

        if $i1 != 128 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mReplyPathPresent> = z1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress> = $r3;

        $i2 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier> = $i2;

        $i3 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme> = $i3;

        $l4 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: long mScTimeMillis> = $l4;

        $i5 = i0 & 64;

        if $i5 != 64 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseUserData(com.android.internal.telephony.gsm.SmsMessage$PduParser,boolean)>(r1, z2);

        return;
    }

    private void parseSmsStatusReport(com.android.internal.telephony.gsm.SmsMessage$PduParser, int)
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.gsm.SmsMessage$PduParser r1;
        int i0, i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        com.android.internal.telephony.gsm.GsmSmsAddress $r2;
        long $l3;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsMessage$PduParser;

        i0 := @parameter1: int;

        z1 = 1;

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsStatusReportMessage> = 1;

        $i2 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mMessageRef> = $i2;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mRecipientAddress> = $r2;

        $l3 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: long mScTimeMillis> = $l3;

        virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()>();

        $i5 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mStatus> = $i5;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: boolean moreDataPresent()>();

        if $z0 == 0 goto label7;

        i1 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        i14 = i1;

     label1:
        $i6 = i14 & 128;

        if $i6 == 0 goto label2;

        i14 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        goto label1;

     label2:
        $i7 = i1 & 120;

        if $i7 != 0 goto label7;

        $i8 = i1 & 1;

        if $i8 == 0 goto label3;

        $i13 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier> = $i13;

     label3:
        $i9 = i1 & 2;

        if $i9 == 0 goto label4;

        $i12 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme> = $i12;

     label4:
        $i10 = i1 & 4;

        if $i10 == 0 goto label7;

        $i11 = i0 & 64;

        if $i11 != 64 goto label5;

        goto label6;

     label5:
        z1 = 0;

     label6:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseUserData(com.android.internal.telephony.gsm.SmsMessage$PduParser,boolean)>(r1, z1);

     label7:
        return;
    }

    private void parseSmsSubmit(com.android.internal.telephony.gsm.SmsMessage$PduParser, int)
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.gsm.SmsMessage$PduParser r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i8, i9;
        com.android.internal.telephony.gsm.GsmSmsAddress $r3;
        boolean z1, z2;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsMessage$PduParser;

        i0 := @parameter1: int;

        $i1 = i0 & 128;

        if $i1 != 128 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mReplyPathPresent> = z1;

        $i2 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mMessageRef> = $i2;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mRecipientAddress> = $r3;

        $i3 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier> = $i3;

        $i4 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme> = $i4;

        $i5 = i0 >> 3;

        i8 = $i5 & 3;

        if i8 != 0 goto label3;

        i9 = 0;

        goto label5;

     label3:
        if 2 != i8 goto label4;

        i9 = 1;

        goto label5;

     label4:
        i9 = 7;

     label5:
        if i9 <= 0 goto label6;

        virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        i9 = i9 + -1;

        goto label5;

     label6:
        $i6 = i0 & 64;

        if $i6 != 64 goto label7;

        z2 = 1;

        goto label8;

     label7:
        z2 = 0;

     label8:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseUserData(com.android.internal.telephony.gsm.SmsMessage$PduParser,boolean)>(r1, z2);

        return;
    }

    private void parseUserData(com.android.internal.telephony.gsm.SmsMessage$PduParser, boolean)
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.gsm.SmsMessage$PduParser r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z9, z10, z11, z12;
        android.content.res.Resources r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, $i45, i49, i50, i51, $i52, $i53, i54, i55, i56, $i57, i58, i59, i60, i61;
        java.lang.StringBuilder $r3, $r25, $r33, $r37, $r45, $r49, $r53, $r57;
        java.lang.String $r6, $r14, $r17, $r18, $r19, $r32, $r36, $r44, $r48, $r52, $r56, $r60, $r71;
        byte[] $r7;
        com.android.internal.telephony.SmsHeader $r8, $r15, $r16, $r20, $r22;
        com.android.internal.telephony.SmsConstants$MessageClass $r9, $r10, $r11, $r12, $r13;
        java.util.ArrayList $r21, $r23;
        java.lang.Object $r24;
        java.util.Iterator r67;
        com.android.internal.telephony.SmsHeader$SpecialSmsMsg r68;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsMessage$PduParser;

        z0 := @parameter1: boolean;

        z7 = 0;

        r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i49 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i0 = i49 & 128;

        if $i0 != 0 goto label11;

        $i36 = i49 & 32;

        if $i36 == 0 goto label01;

        z8 = 1;

        goto label02;

     label01:
        z8 = 0;

     label02:
        $i37 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i38 = $i37 & 16;

        if $i38 == 0 goto label03;

        z9 = 1;

        goto label04;

     label03:
        z9 = 0;

     label04:
        z7 = z9;

        if z8 == 0 goto label05;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("4 - Unsupported SMS data coding scheme (compression) ");

        $i44 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i45 = $i44 & 255;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r60);

        i50 = 0;

        goto label27;

     label05:
        $i39 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i40 = $i39 >> 2;

        i51 = $i40 & 3;

        if i51 == 0 goto label09;

        if i51 == 1 goto label07;

        if i51 == 2 goto label06;

        if i51 == 3 goto label08;

        i50 = 0;

        goto label10;

     label06:
        i50 = 3;

        goto label10;

     label07:
        $z6 = virtualinvoke r2.<android.content.res.Resources: boolean getBoolean(int)>(17891534);

        if $z6 == 0 goto label08;

        i50 = 2;

        goto label10;

     label08:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1 - Unsupported SMS data coding scheme ");

        $i41 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i42 = $i41 & 255;

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r56);

        i50 = virtualinvoke r2.<android.content.res.Resources: int getInteger(int)>(17694932);

        goto label10;

     label09:
        i50 = 1;

     label10:
        goto label27;

     label11:
        $i1 = i49 & 240;

        if $i1 != 240 goto label13;

        z7 = 1;

        $i35 = i49 & 4;

        if $i35 != 0 goto label12;

        i50 = 1;

        goto label27;

     label12:
        i50 = 2;

        goto label27;

     label13:
        $i2 = i49 & 240;

        if $i2 == 192 goto label17;

        $i26 = i49 & 240;

        if $i26 == 208 goto label17;

        $i27 = i49 & 240;

        if $i27 != 224 goto label14;

        goto label17;

     label14:
        $i28 = i49 & 192;

        if $i28 != 128 goto label16;

        if i49 != 132 goto label15;

        i50 = 4;

        goto label27;

     label15:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("5 - Unsupported SMS data coding scheme ");

        $i32 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i33 = $i32 & 255;

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r52);

        i50 = 0;

        goto label27;

     label16:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("3 - Unsupported SMS data coding scheme ");

        $i29 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i30 = $i29 & 255;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r48);

        i50 = 0;

        goto label27;

     label17:
        $i52 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i53 = $i52 & 240;

        if $i53 != 224 goto label18;

        i50 = 3;

        goto label19;

     label18:
        i50 = 1;

     label19:
        $i3 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i4 = $i3 & 8;

        if $i4 != 8 goto label20;

        z10 = 1;

        goto label21;

     label20:
        z10 = 0;

     label21:
        $i5 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i6 = $i5 & 3;

        if $i6 != 0 goto label26;

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi> = 1;

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiSense> = z10;

        $i20 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i21 = $i20 & 240;

        if $i21 != 192 goto label22;

        z11 = 1;

        goto label23;

     label22:
        z11 = 0;

     label23:
        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiDontStore> = z11;

        if z10 != 1 goto label24;

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mVoiceMailCount> = -1;

        goto label25;

     label24:
        r0.<com.android.internal.telephony.gsm.SmsMessage: int mVoiceMailCount> = 0;

     label25:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MWI in DCS for Vmail. DCS = ");

        $i22 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i23 = $i22 & 255;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Dont store = ");

        $z5 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiDontStore>;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vmail count = ");

        $i24 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mVoiceMailCount>;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r44);

        goto label27;

     label26:
        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi> = 0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MWI in DCS for fax/email/other: ");

        $i7 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i8 = $i7 & 255;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r6);

     label27:
        if i50 != 1 goto label28;

        z12 = 1;

        goto label29;

     label28:
        z12 = 0;

     label29:
        i54 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int constructUserData(boolean,boolean)>(z0, z12);

        $r7 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: byte[] getUserData()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: byte[] mUserData> = $r7;

        $r8 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.SmsHeader getUserDataHeader()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsHeader mUserDataHeader> = $r8;

        if z0 == 0 goto label40;

        $r20 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsHeader mUserDataHeader>;

        $r21 = $r20.<com.android.internal.telephony.SmsHeader: java.util.ArrayList specialSmsMsgList>;

        $i11 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        if $i11 == 0 goto label40;

        $r22 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsHeader mUserDataHeader>;

        $r23 = $r22.<com.android.internal.telephony.SmsHeader: java.util.ArrayList specialSmsMsgList>;

        r67 = virtualinvoke $r23.<java.util.ArrayList: java.util.Iterator iterator()>();

     label30:
        $z2 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label40;

        $r24 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>();

        r68 = (com.android.internal.telephony.SmsHeader$SpecialSmsMsg) $r24;

        $i12 = r68.<com.android.internal.telephony.SmsHeader$SpecialSmsMsg: int msgIndType>;

        i55 = $i12 & 255;

        if i55 == 0 goto label32;

        if i55 != 128 goto label31;

        goto label32;

     label31:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TP_UDH fax/email/extended msg/multisubscriber profile. Msg Ind = ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i55);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r36);

        goto label39;

     label32:
        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi> = 1;

        if i55 != 128 goto label33;

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiDontStore> = 0;

        goto label36;

     label33:
        $z3 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiDontStore>;

        if $z3 != 0 goto label36;

        i56 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i15 = i56 & 240;

        if $i15 == 208 goto label34;

        $i18 = i56 & 240;

        if $i18 != 224 goto label35;

        goto label34;

     label34:
        $i16 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i17 = $i16 & 3;

        if $i17 == 0 goto label36;

     label35:
        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiDontStore> = 1;

        goto label36;

     label36:
        $i57 = r68.<com.android.internal.telephony.SmsHeader$SpecialSmsMsg: int msgCount>;

        i58 = $i57 & 255;

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mVoiceMailCount> = i58;

        if i58 <= 0 goto label37;

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiSense> = 1;

        goto label38;

     label37:
        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiSense> = 0;

     label38:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MWI in TP-UDH for Vmail. Msg Ind = ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i55);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Dont store = ");

        $z4 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiDontStore>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Vmail count = ");

        $i13 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mVoiceMailCount>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r32 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r32);

     label39:
        goto label30;

     label40:
        if i50 == 0 goto label50;

        if i50 == 1 goto label45;

        if i50 == 2 goto label43;

        if i50 == 3 goto label42;

        if i50 == 4 goto label41;

        goto label51;

     label41:
        $r19 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataKSC5601(int)>(i54);

        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody> = $r19;

        goto label51;

     label42:
        $r18 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataUCS2(int)>(i54);

        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody> = $r18;

        goto label51;

     label43:
        $z1 = virtualinvoke r2.<android.content.res.Resources: boolean getBoolean(int)>(17891534);

        if $z1 == 0 goto label44;

        $r17 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataGSM8bit(int)>(i54);

        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody> = $r17;

        goto label51;

     label44:
        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody> = null;

        goto label51;

     label45:
        if z0 == 0 goto label46;

        $r16 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsHeader mUserDataHeader>;

        i59 = $r16.<com.android.internal.telephony.SmsHeader: int languageTable>;

        goto label47;

     label46:
        i59 = 0;

     label47:
        if z0 == 0 goto label48;

        $r15 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsHeader mUserDataHeader>;

        i60 = $r15.<com.android.internal.telephony.SmsHeader: int languageShiftTable>;

        goto label49;

     label48:
        i60 = 0;

     label49:
        $r14 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataGSM7Bit(int,int,int)>(i54, i59, i60);

        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody> = $r14;

        goto label51;

     label50:
        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody> = null;

     label51:
        $r71 = r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody>;

        if $r71 == null goto label52;

        virtualinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseMessageBody()>();

     label52:
        if z7 != 0 goto label53;

        $r13 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass UNKNOWN>;

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass> = $r13;

        goto label58;

     label53:
        $i10 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        i61 = $i10 & 3;

        if i61 == 0 goto label57;

        if i61 == 1 goto label56;

        if i61 == 2 goto label55;

        if i61 == 3 goto label54;

        goto label58;

     label54:
        $r12 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_3>;

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass> = $r12;

        goto label58;

     label55:
        $r11 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_2>;

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass> = $r11;

        goto label58;

     label56:
        $r10 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_1>;

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass> = $r10;

        goto label58;

     label57:
        $r9 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_0>;

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass> = $r9;

     label58:
        return;
    }

    int getDataCodingScheme()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        return $i0;
    }

    public com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.SmsConstants$MessageClass $r1;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $r1 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass>;

        return $r1;
    }

    public int getNumOfVoicemails()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.SmsAddress $r1, $r2;
        com.android.internal.telephony.gsm.GsmSmsAddress $r3;
        int $i1;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $z0 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi>;

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: boolean isCphsMwiMessage()>();

        if $z1 == 0 goto label3;

        $r1 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        $r3 = (com.android.internal.telephony.gsm.GsmSmsAddress) $r2;

        $z2 = virtualinvoke $r3.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageSet()>();

        if $z2 == 0 goto label1;

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mVoiceMailCount> = 255;

        goto label2;

     label1:
        r0.<com.android.internal.telephony.gsm.SmsMessage: int mVoiceMailCount> = 0;

     label2:
        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("SmsMessage", "CPHS voice mail message");

     label3:
        $i1 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mVoiceMailCount>;

        return $i1;
    }

    public int getProtocolIdentifier()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier>;

        return $i0;
    }

    public int getStatus()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mStatus>;

        return $i0;
    }

    public boolean isCphsMwiMessage()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.SmsAddress $r1, $r3;
        com.android.internal.telephony.gsm.GsmSmsAddress $r2, $r4;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $r1 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        $r2 = (com.android.internal.telephony.gsm.GsmSmsAddress) $r1;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageClear()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        $r4 = (com.android.internal.telephony.gsm.GsmSmsAddress) $r3;

        $z1 = virtualinvoke $r4.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageSet()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public boolean isMWIClearMessage()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        boolean z0, $z1, $z2, z3;
        com.android.internal.telephony.SmsAddress $r1, $r2;
        com.android.internal.telephony.gsm.GsmSmsAddress $r3;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        z0 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi>;

        z3 = 1;

        if z0 == 0 goto label1;

        $z2 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiSense>;

        if $z2 != 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        $r3 = (com.android.internal.telephony.gsm.GsmSmsAddress) $r2;

        $z1 = virtualinvoke $r3.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageClear()>();

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    public boolean isMWISetMessage()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        boolean z0, $z1, $z2, z3;
        com.android.internal.telephony.SmsAddress $r1, $r2;
        com.android.internal.telephony.gsm.GsmSmsAddress $r3;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        z0 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi>;

        z3 = 1;

        if z0 == 0 goto label1;

        $z2 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiSense>;

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        $r3 = (com.android.internal.telephony.gsm.GsmSmsAddress) $r2;

        $z1 = virtualinvoke $r3.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageSet()>();

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    public boolean isMwiDontStore()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r1, $r2;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $z0 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi>;

        if $z0 == 0 goto label1;

        $z3 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiDontStore>;

        if $z3 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: boolean isCphsMwiMessage()>();

        if $z1 == 0 goto label2;

        $r1 = " ";

        $r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String getMessageBody()>();

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isReplace()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int i0, $i1, $i2, $i3;
        boolean z0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier>;

        $i1 = i0 & 192;

        if $i1 != 64 goto label1;

        $i2 = i0 & 63;

        if $i2 <= 0 goto label1;

        $i3 = i0 & 63;

        if $i3 >= 8 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isReplyPathPresent()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $z0 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mReplyPathPresent>;

        return $z0;
    }

    public boolean isStatusReportMessage()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $z0 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsStatusReportMessage>;

        return $z0;
    }

    public boolean isTypeZero()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier>;

        if $i0 != 64 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isUsimDataDownload()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int i0;
        com.android.internal.telephony.SmsConstants$MessageClass $r1, $r2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $r2 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass>;

        $r1 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_2>;

        if $r2 != $r1 goto label2;

        i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier>;

        if i0 == 127 goto label1;

        if i0 != 124 goto label2;

     label1:
        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.gsm.SmsMessage: boolean VDBG> = 0;

        <com.android.internal.telephony.gsm.SmsMessage: int VALIDITY_PERIOD_MIN> = 5;

        <com.android.internal.telephony.gsm.SmsMessage: int VALIDITY_PERIOD_MAX> = 635040;

        <com.android.internal.telephony.gsm.SmsMessage: int VALIDITY_PERIOD_FORMAT_RELATIVE> = 2;

        <com.android.internal.telephony.gsm.SmsMessage: int VALIDITY_PERIOD_FORMAT_NONE> = 0;

        <com.android.internal.telephony.gsm.SmsMessage: int VALIDITY_PERIOD_FORMAT_ENHANCED> = 1;

        <com.android.internal.telephony.gsm.SmsMessage: int VALIDITY_PERIOD_FORMAT_ABSOLUTE> = 3;

        <com.android.internal.telephony.gsm.SmsMessage: java.lang.String LOG_TAG> = "SmsMessage";

        <com.android.internal.telephony.gsm.SmsMessage: int INVALID_VALIDITY_PERIOD> = -1;

        return;
    }
}
