public class com.android.internal.telephony.ims.ImsResolver extends java.lang.Object implements com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks
{
    private static final int DELAY_DYNAMIC_QUERY_MS;
    private static final int GET_IMS_SERVICE_TIMEOUT_MS;
    private static final int HANDLER_ADD_PACKAGE;
    private static final int HANDLER_BOOT_COMPLETE;
    private static final int HANDLER_CONFIG_CHANGED;
    private static final int HANDLER_DYNAMIC_FEATURE_CHANGE;
    private static final int HANDLER_MSIM_CONFIGURATION_CHANGE;
    private static final int HANDLER_OVERRIDE_IMS_SERVICE_CONFIG;
    private static final int HANDLER_REMOVE_PACKAGE;
    private static final int HANDLER_START_DYNAMIC_FEATURE_QUERY;
    public static final java.lang.String METADATA_EMERGENCY_MMTEL_FEATURE;
    public static final java.lang.String METADATA_MMTEL_FEATURE;
    private static final java.lang.String METADATA_OVERRIDE_PERM_CHECK;
    public static final java.lang.String METADATA_RCS_FEATURE;
    private static final java.lang.String TAG;
    private java.util.Map mActiveControllers;
    private android.content.BroadcastReceiver mAppChangedReceiver;
    private android.content.BroadcastReceiver mBootCompleted;
    private boolean mBootCompletedHandlerRan;
    private android.util.SparseArray mBoundImsServicesByFeature;
    private final java.lang.Object mBoundServicesLock;
    private final android.telephony.CarrierConfigManager mCarrierConfigManager;
    private android.util.SparseArray mCarrierServices;
    private android.content.BroadcastReceiver mConfigChangedReceiver;
    private final android.content.Context mContext;
    private java.util.Map mDeviceServices;
    private com.android.internal.telephony.ims.ImsServiceFeatureQueryManager$Listener mDynamicQueryListener;
    private com.android.internal.telephony.ims.ImsResolver$ImsDynamicQueryManagerFactory mDynamicQueryManagerFactory;
    private final com.android.internal.telephony.LocalLog mEventLog;
    private com.android.internal.telephony.ims.ImsServiceFeatureQueryManager mFeatureQueryManager;
    private android.os.Handler mHandler;
    private com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory mImsServiceControllerFactory;
    private com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory mImsServiceControllerFactoryCompat;
    private java.util.Map mInstalledServicesCache;
    private int mNumSlots;
    private android.util.SparseArray mOverrideServices;
    private final android.content.Context mReceiverContext;
    private com.android.internal.telephony.ims.ImsResolver$SubscriptionManagerProxy mSubscriptionManagerProxy;
    private com.android.internal.telephony.ims.ImsResolver$TelephonyManagerProxy mTelephonyManagerProxy;

    public void <init>(android.content.Context, java.lang.String, java.lang.String, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.lang.String r1, r2, $r25;
        int i0, $i2, $i3;
        com.android.internal.telephony.ims.'-$$Lambda$WamP7BPq0j01TgYE3GvUqU3b-rs' $r11;
        android.os.Looper $r15;
        android.os.UserHandle $r26;
        android.content.Context $r27, $r30, $r37, $r40, $r43, $r46, r53;
        java.lang.Object $r31, $r44, r63;
        android.telephony.CarrierConfigManager $r32;
        android.content.BroadcastReceiver $r36, $r41, $r47;
        boolean $z0, $z1;
        android.os.Handler $r49, $r51, r66;
        android.os.Message $r50, $r52;
        android.os.UserManager r55;
        com.android.internal.telephony.ims.ImsResolver$1 r56;
        com.android.internal.telephony.ims.ImsResolver$2 r57;
        com.android.internal.telephony.ims.ImsResolver$3 r58;
        com.android.internal.telephony.ims.ImsResolver$4 r59;
        com.android.internal.telephony.ims.ImsResolver$5 r60;
        com.android.internal.telephony.ims.ImsResolver$6 r61;
        com.android.internal.telephony.ims.ImsResolver$7 r62;
        com.android.internal.telephony.LocalLog r64;
        com.android.internal.telephony.ims._$$Lambda$ImsResolver$pNx4XUM9FmR6cV_MCAGiEt8F4pg r65;
        com.android.internal.telephony.ims.ImsResolver$8 r67;
        java.util.HashMap r68, r69;
        java.lang.StringBuilder r70;
        android.util.SparseArray r71, r73, r74;
        android.util.ArrayMap r72;
        android.content.IntentFilter r75, r76, r77;
        com.android.internal.telephony.ims.ImsResolver$ImsDynamicQueryManagerFactory r78;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r53 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r56 = new com.android.internal.telephony.ims.ImsResolver$1;

        specialinvoke r56.<com.android.internal.telephony.ims.ImsResolver$1: void <init>(com.android.internal.telephony.ims.ImsResolver)>(r0);

        r0.<com.android.internal.telephony.ims.ImsResolver: android.content.BroadcastReceiver mAppChangedReceiver> = r56;

        r57 = new com.android.internal.telephony.ims.ImsResolver$2;

        specialinvoke r57.<com.android.internal.telephony.ims.ImsResolver$2: void <init>(com.android.internal.telephony.ims.ImsResolver)>(r0);

        r0.<com.android.internal.telephony.ims.ImsResolver: android.content.BroadcastReceiver mConfigChangedReceiver> = r57;

        r58 = new com.android.internal.telephony.ims.ImsResolver$3;

        specialinvoke r58.<com.android.internal.telephony.ims.ImsResolver$3: void <init>(com.android.internal.telephony.ims.ImsResolver)>(r0);

        r0.<com.android.internal.telephony.ims.ImsResolver: android.content.BroadcastReceiver mBootCompleted> = r58;

        r59 = new com.android.internal.telephony.ims.ImsResolver$4;

        specialinvoke r59.<com.android.internal.telephony.ims.ImsResolver$4: void <init>(com.android.internal.telephony.ims.ImsResolver)>(r0);

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$TelephonyManagerProxy mTelephonyManagerProxy> = r59;

        r60 = new com.android.internal.telephony.ims.ImsResolver$5;

        specialinvoke r60.<com.android.internal.telephony.ims.ImsResolver$5: void <init>(com.android.internal.telephony.ims.ImsResolver)>(r0);

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$SubscriptionManagerProxy mSubscriptionManagerProxy> = r60;

        r61 = new com.android.internal.telephony.ims.ImsResolver$6;

        specialinvoke r61.<com.android.internal.telephony.ims.ImsResolver$6: void <init>(com.android.internal.telephony.ims.ImsResolver)>(r0);

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory mImsServiceControllerFactory> = r61;

        r62 = new com.android.internal.telephony.ims.ImsResolver$7;

        specialinvoke r62.<com.android.internal.telephony.ims.ImsResolver$7: void <init>(com.android.internal.telephony.ims.ImsResolver)>(r0);

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory mImsServiceControllerFactoryCompat> = r62;

        $r11 = <com.android.internal.telephony.ims._$$Lambda$WamP7BPq0j01TgYE3GvUqU3b_rs: com.android.internal.telephony.ims.'-$$Lambda$WamP7BPq0j01TgYE3GvUqU3b-rs' INSTANCE>;

        r78 = (com.android.internal.telephony.ims.ImsResolver$ImsDynamicQueryManagerFactory) $r11;

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsDynamicQueryManagerFactory mDynamicQueryManagerFactory> = r78;

        r63 = new java.lang.Object;

        specialinvoke r63.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.Object mBoundServicesLock> = r63;

        r64 = new com.android.internal.telephony.LocalLog;

        specialinvoke r64.<com.android.internal.telephony.LocalLog: void <init>(int)>(50);

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog> = r64;

        r0.<com.android.internal.telephony.ims.ImsResolver: boolean mBootCompletedHandlerRan> = 0;

        r66 = new android.os.Handler;

        $r15 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        r65 = new com.android.internal.telephony.ims._$$Lambda$ImsResolver$pNx4XUM9FmR6cV_MCAGiEt8F4pg;

        specialinvoke r65.<com.android.internal.telephony.ims._$$Lambda$ImsResolver$pNx4XUM9FmR6cV_MCAGiEt8F4pg: void <init>(com.android.internal.telephony.ims.ImsResolver)>(r0);

        specialinvoke r66.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r15, r65);

        r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler> = r66;

        r67 = new com.android.internal.telephony.ims.ImsResolver$8;

        specialinvoke r67.<com.android.internal.telephony.ims.ImsResolver$8: void <init>(com.android.internal.telephony.ims.ImsResolver)>(r0);

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceFeatureQueryManager$Listener mDynamicQueryListener> = r67;

        r68 = new java.util.HashMap;

        specialinvoke r68.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mInstalledServicesCache> = r68;

        r69 = new java.util.HashMap;

        specialinvoke r69.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mActiveControllers> = r69;

        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("device MMTEL package: ");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", device RCS package:");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r25);

        r0.<com.android.internal.telephony.ims.ImsResolver: android.content.Context mContext> = r53;

        r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots> = i0;

        $r26 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r27 = virtualinvoke r53.<android.content.Context: android.content.Context createContextAsUser(android.os.UserHandle,int)>($r26, 0);

        r0.<com.android.internal.telephony.ims.ImsResolver: android.content.Context mReceiverContext> = $r27;

        r71 = new android.util.SparseArray;

        $i2 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        specialinvoke r71.<android.util.SparseArray: void <init>(int)>($i2);

        r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mCarrierServices> = r71;

        r72 = new android.util.ArrayMap;

        specialinvoke r72.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mDeviceServices> = r72;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void setDeviceConfiguration(java.lang.String,int)>(r1, 0);

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void setDeviceConfiguration(java.lang.String,int)>(r1, 1);

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void setDeviceConfiguration(java.lang.String,int)>(r2, 2);

        $r30 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.Context mContext>;

        $r31 = virtualinvoke $r30.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r32 = (android.telephony.CarrierConfigManager) $r31;

        r0.<com.android.internal.telephony.ims.ImsResolver: android.telephony.CarrierConfigManager mCarrierConfigManager> = $r32;

        r73 = new android.util.SparseArray;

        specialinvoke r73.<android.util.SparseArray: void <init>(int)>(0);

        r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mOverrideServices> = r73;

        r74 = new android.util.SparseArray;

        $i3 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        specialinvoke r74.<android.util.SparseArray: void <init>(int)>($i3);

        r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mBoundImsServicesByFeature> = r74;

        r75 = new android.content.IntentFilter;

        specialinvoke r75.<android.content.IntentFilter: void <init>()>();

        virtualinvoke r75.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_CHANGED");

        virtualinvoke r75.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke r75.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke r75.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r37 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.Context mReceiverContext>;

        $r36 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.BroadcastReceiver mAppChangedReceiver>;

        virtualinvoke $r37.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r36, r75);

        $r40 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.Context mReceiverContext>;

        $r41 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.BroadcastReceiver mConfigChangedReceiver>;

        r76 = new android.content.IntentFilter;

        specialinvoke r76.<android.content.IntentFilter: void <init>(java.lang.String)>("android.telephony.action.CARRIER_CONFIG_CHANGED");

        virtualinvoke $r40.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r41, r76);

        $r43 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.Context mContext>;

        $r44 = virtualinvoke $r43.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        r55 = (android.os.UserManager) $r44;

        $z0 = virtualinvoke r55.<android.os.UserManager: boolean isUserUnlocked()>();

        if $z0 == 0 goto label1;

        $r51 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        $r52 = virtualinvoke $r51.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(6, null);

        virtualinvoke $r52.<android.os.Message: void sendToTarget()>();

        goto label2;

     label1:
        $r46 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.Context mReceiverContext>;

        $r47 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.BroadcastReceiver mBootCompleted>;

        r77 = new android.content.IntentFilter;

        specialinvoke r77.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.BOOT_COMPLETED");

        virtualinvoke $r46.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r47, r77);

        $z1 = virtualinvoke r55.<android.os.UserManager: boolean isUserUnlocked()>();

        if $z1 == 0 goto label2;

        $r49 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        $r50 = virtualinvoke $r49.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(6, null);

        virtualinvoke $r50.<android.os.Message: void sendToTarget()>();

     label2:
        return;
    }

    static java.lang.String access$000(java.util.Set)
    {
        java.util.Set r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = staticinvoke <com.android.internal.telephony.ims.ImsResolver: java.lang.String printFeatures(java.util.Set)>(r0);

        return $r1;
    }

    static android.os.Handler access$100(com.android.internal.telephony.ims.ImsResolver)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsResolver;

        $r1 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        return $r1;
    }

    static android.content.Context access$200(com.android.internal.telephony.ims.ImsResolver)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsResolver;

        $r1 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.Context mContext>;

        return $r1;
    }

    static com.android.internal.telephony.ims.ImsResolver$TelephonyManagerProxy access$300(com.android.internal.telephony.ims.ImsResolver)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$TelephonyManagerProxy $r1;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsResolver;

        $r1 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$TelephonyManagerProxy mTelephonyManagerProxy>;

        return $r1;
    }

    static void access$400(com.android.internal.telephony.ims.ImsResolver, android.content.ComponentName, java.util.Set)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.content.ComponentName r1;
        java.util.Set r2;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter1: android.content.ComponentName;

        r2 := @parameter2: java.util.Set;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void handleFeaturesChanged(android.content.ComponentName,java.util.Set)>(r1, r2);

        return;
    }

    static com.android.internal.telephony.LocalLog access$500(com.android.internal.telephony.ims.ImsResolver)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.LocalLog $r1;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsResolver;

        $r1 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        return $r1;
    }

    static void access$600(com.android.internal.telephony.ims.ImsResolver, android.content.ComponentName, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.content.ComponentName r1;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void scheduleQueryForFeatures(android.content.ComponentName,int)>(r1, i0);

        return;
    }

    private void bindCarrierServicesIfAvailable()
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.util.Map r1;
        java.lang.String r2, $r11;
        int $i0, i1, i2;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        boolean $z0, $z1, z2, z3;
        java.lang.StringBuilder $r6;
        com.android.internal.telephony.LocalLog r12;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r13;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        z2 = 0;

        i1 = 0;

     label1:
        $i0 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i1 >= $i0 goto label6;

        r1 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map getImsPackageOverrideConfig(int)>(i1);

        i2 = 0;

     label2:
        if i2 >= 3 goto label5;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r4, "");

        r2 = (java.lang.String) $r5;

        z3 = z2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label4;

        r12 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bindCarrierServicesIfAvailable - carrier package found: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on slot ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void setCarrierConfiguredPackageName(java.lang.String,int,int)>(r2, i1, i2);

        r13 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getImsServiceInfoFromCache(java.lang.String)>(r2);

        if r13 == null goto label3;

        $z1 = r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: boolean featureFromMetadata>;

        if $z1 == 0 goto label3;

        z3 = 1;

        goto label4;

     label3:
        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void scheduleQueryForFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r13);

        z3 = z2;

     label4:
        i2 = i2 + 1;

        z2 = z3;

        goto label2;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        if z2 == 0 goto label7;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void calculateFeatureConfigurationChange()>();

     label7:
        return;
    }

    private void bindImsServiceWithFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo, java.util.Set)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r1;
        boolean $z0;
        java.util.Map $r2, $r18;
        android.content.ComponentName $r3, $r8, $r17, $r22;
        android.content.Context $r4;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory $r5;
        java.lang.StringBuilder $r6, $r13, $r20, $r28;
        java.lang.String $r12, $r16, $r26, $r30, $r32;
        android.os.RemoteException $r27;
        java.util.Set r33;
        com.android.internal.telephony.ims.ImsServiceController r34, r36, r39;
        com.android.internal.telephony.LocalLog r41;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        r33 := @parameter1: java.util.Set;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: boolean shouldFeaturesCauseBind(java.util.Set)>(r33);

        if $z0 == 0 goto label6;

        $r2 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mActiveControllers>;

        r34 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceController getControllerByServiceInfo(java.util.Map,com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>($r2, r1);

        if r34 == null goto label4;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsService connection exists for ");

        $r22 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", updating features ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        $r26 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r26);

     label1:
        virtualinvoke r34.<com.android.internal.telephony.ims.ImsServiceController: void changeImsServiceFeatures(java.util.Set)>(r33);

     label2:
        r36 = r34;

        goto label5;

     label3:
        $r27 := @caughtexception;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bindImsService: error=");

        $r30 = virtualinvoke $r27.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", $r32);

        goto label2;

     label4:
        $r5 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory controllerFactory>;

        $r4 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.Context mContext>;

        $r3 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        r39 = interfaceinvoke $r5.<com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory: com.android.internal.telephony.ims.ImsServiceController create(android.content.Context,android.content.ComponentName,com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks)>($r4, $r3, r0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding ImsService: ");

        $r8 = virtualinvoke r39.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName getComponentName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with features: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r12);

        virtualinvoke r39.<com.android.internal.telephony.ims.ImsServiceController: boolean bind(java.util.Set)>(r33);

        r41 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bindImsServiceWithFeatures - create new controller: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r16);

        r36 = r39;

     label5:
        $r18 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mActiveControllers>;

        $r17 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r36);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void calculateFeatureConfigurationChange()
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.util.Iterator r1;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r2;
        java.util.HashSet r3;
        java.util.Map $r4;
        java.util.Collection $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        $r4 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mInstalledServicesCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo) $r6;

        r3 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.HashSet calculateFeaturesToCreate(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r2);

        $z1 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: boolean shouldFeaturesCauseBind(java.util.Set)>(r3);

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void bindImsServiceWithFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo,java.util.Set)>(r2, r3);

        goto label3;

     label2:
        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void unbindImsService(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r2);

     label3:
        goto label1;

     label4:
        return;
    }

    private java.util.HashSet calculateFeaturesToCreate(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r1;
        java.util.HashSet $r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.util.Set $r5, $r14;
        java.util.stream.Stream $r6, $r8, $r10, $r15, $r17;
        com.android.internal.telephony.ims._$$Lambda$ImsResolver$oeSP2Iz_zrO9kfSLbkKm4bHmNgY $r7;
        com.android.internal.telephony.ims._$$Lambda$ImsResolver$SnaJj6pf3PqDCDE3qwnbsOuijMI $r9;
        java.util.stream.Collector $r11, $r18;
        java.lang.Object $r12, $r19;
        java.util.Collection $r13, $r20;
        com.android.internal.telephony.ims._$$Lambda$ImsResolver$yURh30VmM1FDHDFQfIJPzHT_ats $r16;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r4 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.List getSlotsForActiveCarrierService(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r1);

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r14 = virtualinvoke r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: java.util.Set getSupportedFeatures()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.stream.Stream stream()>();

        $r16 = new com.android.internal.telephony.ims._$$Lambda$ImsResolver$yURh30VmM1FDHDFQfIJPzHT_ats;

        specialinvoke $r16.<com.android.internal.telephony.ims._$$Lambda$ImsResolver$yURh30VmM1FDHDFQfIJPzHT_ats: void <init>(com.android.internal.telephony.ims.ImsResolver,com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r0, r1);

        $r17 = interfaceinvoke $r15.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r16);

        $r18 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r19 = interfaceinvoke $r17.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r18);

        $r20 = (java.util.Collection) $r19;

        virtualinvoke $r3.<java.util.HashSet: boolean addAll(java.util.Collection)>($r20);

        return $r3;

     label1:
        $z1 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: boolean isDeviceService(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r1);

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: java.util.Set getSupportedFeatures()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.stream.Stream stream()>();

        $r7 = new com.android.internal.telephony.ims._$$Lambda$ImsResolver$oeSP2Iz_zrO9kfSLbkKm4bHmNgY;

        specialinvoke $r7.<com.android.internal.telephony.ims._$$Lambda$ImsResolver$oeSP2Iz_zrO9kfSLbkKm4bHmNgY: void <init>(com.android.internal.telephony.ims.ImsResolver,com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r0, r1);

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r7);

        $r9 = new com.android.internal.telephony.ims._$$Lambda$ImsResolver$SnaJj6pf3PqDCDE3qwnbsOuijMI;

        specialinvoke $r9.<com.android.internal.telephony.ims._$$Lambda$ImsResolver$SnaJj6pf3PqDCDE3qwnbsOuijMI: void <init>(com.android.internal.telephony.ims.ImsResolver)>(r0);

        $r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r9);

        $r11 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r12 = interfaceinvoke $r10.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r11);

        $r13 = (java.util.Collection) $r12;

        virtualinvoke $r3.<java.util.HashSet: boolean addAll(java.util.Collection)>($r13);

     label2:
        return $r3;
    }

    private void carrierConfigChanged(int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, $i1, i2;
        java.util.Map $r1, $r2;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void updateBoundDeviceServices()>();

        if i0 > -1 goto label2;

        i2 = 0;

     label1:
        $i1 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i2 >= $i1 goto label2;

        $r2 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map getImsPackageOverrideConfig(int)>(i2);

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void updateBoundServices(int,java.util.Map)>(i2, $r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r1 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map getImsPackageOverrideConfig(int)>(i0);

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void updateBoundServices(int,java.util.Map)>(i0, $r1);

        return;
    }

    private boolean doesCarrierConfigurationExist(int, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1;
        java.util.Set $r1;
        java.util.stream.Stream $r2;
        com.android.internal.telephony.ims._$$Lambda$ImsResolver$dOMO5UJiM_7dLu0AXN3dPUAWtQw $r3;
        boolean $z1, z2, z3;
        java.lang.String r4;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r5;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.String getCarrierConfiguredPackageName(int,int)>(i0, i1);

        z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if z2 == 0 goto label1;

        return 0;

     label1:
        r5 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getImsServiceInfoFromCache(java.lang.String)>(r4);

        z3 = 0;

        if r5 == null goto label2;

        z3 = 0;

        $r1 = virtualinvoke r5.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: java.util.Set getSupportedFeatures()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.stream.Stream stream()>();

        $r3 = new com.android.internal.telephony.ims._$$Lambda$ImsResolver$dOMO5UJiM_7dLu0AXN3dPUAWtQw;

        specialinvoke $r3.<com.android.internal.telephony.ims._$$Lambda$ImsResolver$dOMO5UJiM_7dLu0AXN3dPUAWtQw: void <init>(int,int)>(i0, i1);

        $z1 = interfaceinvoke $r2.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r3);

        if $z1 == 0 goto label2;

        z3 = 1;

     label2:
        return z3;
    }

    private void dynamicQueryComplete(android.content.ComponentName, java.util.Set)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.content.ComponentName r1;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r2;
        com.android.internal.telephony.LocalLog r3, $r19;
        java.lang.String $r5, $r11, $r14, $r16, $r23;
        java.lang.StringBuilder $r6, $r20;
        java.util.Set $r10, r24;
        com.android.internal.telephony.ims.ImsServiceFeatureQueryManager $r17;
        boolean $z0, $z1;
        android.os.Handler $r18;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: android.content.ComponentName;

        r24 := @parameter1: java.util.Set;

        $r5 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        r2 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getImsServiceInfoFromCache(java.lang.String)>($r5);

        if r2 != null goto label1;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dynamicQueryComplete: Couldn\'t find cached info for name: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", $r23);

        return;

     label1:
        r3 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dynamicQueryComplete: for package ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", features: ");

        $r10 = virtualinvoke r2.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: java.util.Set getSupportedFeatures()>();

        $r11 = staticinvoke <com.android.internal.telephony.ims.ImsResolver: java.lang.String printFeatures(java.util.Set)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r14 = staticinvoke <com.android.internal.telephony.ims.ImsResolver: java.lang.String printFeatures(java.util.Set)>(r24);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r16);

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void sanitizeFeatureConfig(java.util.Set)>(r24);

        virtualinvoke r2.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: void replaceFeatures(java.util.Set)>(r24);

        $r17 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceFeatureQueryManager mFeatureQueryManager>;

        $z0 = virtualinvoke $r17.<com.android.internal.telephony.ims.ImsServiceFeatureQueryManager: boolean isQueryInProgress()>();

        if $z0 != 0 goto label3;

        $r18 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        $z1 = virtualinvoke $r18.<android.os.Handler: boolean hasMessages(int)>(4);

        if $z1 == 0 goto label2;

        $r19 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        virtualinvoke $r19.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("[warning] dynamicQueryComplete - HANDLER_DYNAMIC_FEATURE_CHANGE pending with calculateFeatureConfigurationChange()");

     label2:
        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void calculateFeatureConfigurationChange()>();

     label3:
        return;
    }

    private java.lang.String getCarrierConfiguredPackageName(int, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1;
        java.util.Map $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map getCarrierConfiguredPackageNames(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r2, "");

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    private java.util.Map getCarrierConfiguredPackageNames(int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0;
        java.util.Map r1, r8;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3, r6;
        android.util.ArrayMap r7;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mCarrierServices>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (java.util.Map) $r3;

        r6 = r1;

        if r1 != null goto label1;

        r7 = new android.util.ArrayMap;

        specialinvoke r7.<android.util.ArrayMap: void <init>()>();

        r6 = r7;

        $r5 = r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mCarrierServices>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r7);

     label1:
        r8 = (java.util.Map) r6;

        return r8;
    }

    private com.android.internal.telephony.ims.ImsServiceController getControllerByServiceInfo(java.util.Map, com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.util.Map r1;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r2;
        java.util.Collection $r3;
        java.util.stream.Stream $r4, $r6;
        com.android.internal.telephony.ims._$$Lambda$ImsResolver$use6u7mjyFwGMQa1xQzNeqkEeHk $r5;
        java.util.Optional $r7;
        java.lang.Object $r8;
        com.android.internal.telephony.ims.ImsServiceController $r9;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        $r3 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.stream.Stream stream()>();

        $r5 = new com.android.internal.telephony.ims._$$Lambda$ImsResolver$use6u7mjyFwGMQa1xQzNeqkEeHk;

        specialinvoke $r5.<com.android.internal.telephony.ims._$$Lambda$ImsResolver$use6u7mjyFwGMQa1xQzNeqkEeHk: void <init>(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r2);

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.Optional findFirst()>();

        $r8 = virtualinvoke $r7.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        $r9 = (com.android.internal.telephony.ims.ImsServiceController) $r8;

        return $r9;
    }

    private java.lang.String getDeviceConfiguration(int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0;
        java.util.Map $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mDeviceServices>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r2, "");

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    private java.util.Map getImsPackageOverrideConfig(int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.lang.String r1, r13, r14;
        com.android.internal.telephony.ims.ImsResolver$SubscriptionManagerProxy $r2;
        android.telephony.CarrierConfigManager $r3;
        android.util.ArrayMap $r4;
        boolean $z0, $z1;
        java.lang.Integer $r5, $r7, $r9;
        java.util.Map $r11;
        int i0, i1;
        android.os.PersistableBundle r12;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$SubscriptionManagerProxy mSubscriptionManagerProxy>;

        i1 = interfaceinvoke $r2.<com.android.internal.telephony.ims.ImsResolver$SubscriptionManagerProxy: int getSubId(int)>(i0);

        $r3 = r0.<com.android.internal.telephony.ims.ImsResolver: android.telephony.CarrierConfigManager mCarrierConfigManager>;

        r12 = virtualinvoke $r3.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>(i1);

        if r12 != null goto label1;

        $r11 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r11;

     label1:
        r13 = virtualinvoke r12.<android.os.PersistableBundle: java.lang.String getString(java.lang.String,java.lang.String)>("config_ims_package_override_string", null);

        r1 = virtualinvoke r12.<android.os.PersistableBundle: java.lang.String getString(java.lang.String,java.lang.String)>("config_ims_mmtel_package_override_string", r13);

        r14 = virtualinvoke r12.<android.os.PersistableBundle: java.lang.String getString(java.lang.String,java.lang.String)>("config_ims_rcs_package_override_string", r13);

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r1);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);

     label2:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r14);

        if $z1 != 0 goto label3;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r14);

     label3:
        return $r4;
    }

    private android.util.SparseArray getImsServiceControllers(int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, $i1;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2, r5;
        java.lang.Throwable $r4;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        if i0 < 0 goto label11;

        $i1 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i0 < $i1 goto label01;

        goto label11;

     label01:
        r1 = r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.Object mBoundServicesLock>;

        entermonitor r1;

     label02:
        $r2 = r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mBoundImsServicesByFeature>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (android.util.SparseArray) $r3;

     label03:
        if r5 != null goto label06;

     label04:
        exitmonitor r1;

     label05:
        return null;

     label06:
        exitmonitor r1;

     label07:
        return r5;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

     label11:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private java.util.List getImsServiceInfo(java.lang.String)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.lang.String r1;
        java.util.ArrayList $r3;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory $r4, $r6;
        java.util.List $r5, $r7;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory mImsServiceControllerFactory>;

        $r5 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.List searchForImsServices(java.lang.String,com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory)>(r1, $r4);

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r6 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory mImsServiceControllerFactoryCompat>;

        $r7 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.List searchForImsServices(java.lang.String,com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory)>(r1, $r6);

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        return $r3;
    }

    private com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getInfoByComponentName(java.util.Map, android.content.ComponentName)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.util.Map r1;
        android.content.ComponentName r2;
        java.lang.Object $r3;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo $r4;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: android.content.ComponentName;

        $r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r4 = (com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo) $r3;

        return $r4;
    }

    private com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getInfoByPackageName(java.util.Map, java.lang.String)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.util.Map r1;
        java.lang.String r2;
        java.util.Collection $r3;
        java.util.stream.Stream $r4, $r6;
        com.android.internal.telephony.ims._$$Lambda$ImsResolver$lVg6r_2Lq_BbKhcbrdw8mVdSJHg $r5;
        java.util.Optional $r7;
        java.lang.Object $r8;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo $r9;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.String;

        $r3 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.stream.Stream stream()>();

        $r5 = new com.android.internal.telephony.ims._$$Lambda$ImsResolver$lVg6r_2Lq_BbKhcbrdw8mVdSJHg;

        specialinvoke $r5.<com.android.internal.telephony.ims._$$Lambda$ImsResolver$lVg6r_2Lq_BbKhcbrdw8mVdSJHg: void <init>(java.lang.String)>(r2);

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.Optional findFirst()>();

        $r8 = virtualinvoke $r7.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        $r9 = (com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo) $r8;

        return $r9;
    }

    private android.util.SparseArray getOverridePackageName(int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0;
        android.util.SparseArray r1, $r2, $r4, $r5, r6;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mOverrideServices>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.SparseArray) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r6 = $r4;

        $r5 = r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mOverrideServices>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    private java.lang.String getOverridePackageName(int, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray getOverridePackageName(int)>(i0);

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    private java.util.List getSlotsForActiveCarrierService(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r1;
        java.util.ArrayList $r3;
        int $i0, $i1, i2;
        java.util.Map $r4;
        java.util.Collection $r5;
        java.util.stream.Stream $r6, $r8;
        com.android.internal.telephony.ims._$$Lambda$ImsResolver$mYPahpIy8KhmCYdkPh39h26WdT0 $r7;
        java.util.Optional $r9;
        java.lang.Object $r10;
        java.lang.CharSequence $r11;
        boolean $z0;
        java.lang.Integer $r12;
        java.util.List $r13;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        if r1 != null goto label1;

        $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r13;

     label1:
        $r3 = new java.util.ArrayList;

        $i0 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label2:
        $i1 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i2 >= $i1 goto label4;

        $r4 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map getCarrierConfiguredPackageNames(int)>(i2);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.stream.Stream stream()>();

        $r7 = new com.android.internal.telephony.ims._$$Lambda$ImsResolver$mYPahpIy8KhmCYdkPh39h26WdT0;

        specialinvoke $r7.<com.android.internal.telephony.ims._$$Lambda$ImsResolver$mYPahpIy8KhmCYdkPh39h26WdT0: void <init>(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r1);

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r7);

        $r9 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.Optional findAny()>();

        $r10 = virtualinvoke $r9.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>("");

        $r11 = (java.lang.CharSequence) $r10;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r11);

        if $z0 != 0 goto label3;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r12);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return $r3;
    }

    private void handleFeaturesChanged(android.content.ComponentName, java.util.Set)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.content.ComponentName r1;
        java.util.Set r2;
        com.android.internal.telephony.SomeArgs r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: java.util.Set;

        r3 = staticinvoke <com.android.internal.telephony.SomeArgs: com.android.internal.telephony.SomeArgs obtain()>();

        r3.<com.android.internal.telephony.SomeArgs: java.lang.Object arg1> = r1;

        r3.<com.android.internal.telephony.SomeArgs: java.lang.Object arg2> = r2;

        $r4 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(4, r3);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void handleMsimConfigChange(java.lang.Integer)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.lang.Integer r1, $r38;
        int i0, $i1, $i2, $i4, $i5, $i7, $i8, $i9, i10, i11;
        com.android.internal.telephony.LocalLog r2, r40;
        java.lang.StringBuilder $r3, $r9, $r20, $r24;
        java.lang.String $r8, $r14, $r23, $r27, $r30;
        java.util.List $r15;
        java.lang.Object $r16, $r19, $r37;
        android.content.ComponentName $r17, $r28;
        java.util.Map $r18, $r35;
        android.os.Handler $r29;
        android.os.Message $r31;
        boolean $z0, $z2, $z3;
        java.util.Set $r32, $r34, $r36;
        com.android.internal.telephony.ims._$$Lambda$ImsResolver$wtWAg0kZ1ynQR75nxRle10IWBLU $r33;
        java.util.Iterator r42, r44;
        android.util.SparseArray r43;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r45, r46;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.lang.Integer;

        i0 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if i0 != $i1 goto label01;

        return;

     label01:
        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots> = $i2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMsimConfigChange: oldLen=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newLen=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r8);

        r40 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MSIM config change: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r40.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r14);

        $i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i4 >= i0 goto label07;

        i10 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

     label02:
        if i10 >= i0 goto label07;

        $r35 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map getCarrierConfiguredPackageNames(int)>(i10);

        $r36 = interfaceinvoke $r35.<java.util.Map: java.util.Set keySet()>();

        r42 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label04;

        $r37 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        $r38 = (java.lang.Integer) $r37;

        $i9 = virtualinvoke $r38.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void setCarrierConfiguredPackageName(java.lang.String,int,int)>("", i10, $i9);

        goto label03;

     label04:
        r43 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray getOverridePackageName(int)>(i10);

        i11 = 0;

     label05:
        $i7 = virtualinvoke r43.<android.util.SparseArray: int size()>();

        if i11 >= $i7 goto label06;

        $i8 = virtualinvoke r43.<android.util.SparseArray: int keyAt(int)>(i11);

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void setOverridePackageName(java.lang.String,int,int)>("", i10, $i8);

        i11 = i11 + 1;

        goto label05;

     label06:
        i10 = i10 + 1;

        goto label02;

     label07:
        $r15 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.List getImsServiceInfo(java.lang.String)>(null);

        r44 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z3 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r16 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo) $r16;

        $r18 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mInstalledServicesCache>;

        $r17 = r45.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        r46 = (com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo) $r19;

        if r46 == null goto label10;

        $z0 = r45.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: boolean featureFromMetadata>;

        if $z0 == 0 goto label09;

        $r34 = virtualinvoke r45.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: java.util.Set getSupportedFeatures()>();

        virtualinvoke r46.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: void replaceFeatures(java.util.Set)>($r34);

        goto label11;

     label09:
        $r32 = virtualinvoke r46.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: java.util.Set getSupportedFeatures()>();

        $r33 = new com.android.internal.telephony.ims._$$Lambda$ImsResolver$wtWAg0kZ1ynQR75nxRle10IWBLU;

        specialinvoke $r33.<com.android.internal.telephony.ims._$$Lambda$ImsResolver$wtWAg0kZ1ynQR75nxRle10IWBLU: void <init>(java.lang.Integer)>(r1);

        interfaceinvoke $r32.<java.util.Set: boolean removeIf(java.util.function.Predicate)>($r33);

        goto label11;

     label10:
        r2 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMsimConfigChange: detected untracked service - ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r45);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r23);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMsimConfigChange: detected untracked package, queueing to add ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r45);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", $r27);

        $r29 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        $r28 = r45.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        $r30 = virtualinvoke $r28.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r31 = virtualinvoke $r29.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(0, $r30);

        virtualinvoke $r31.<android.os.Message: void sendToTarget()>();

     label11:
        goto label08;

     label12:
        $i5 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i5 >= i0 goto label13;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void calculateFeatureConfigurationChange()>();

     label13:
        return;
    }

    private boolean isDeviceService(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r1;
        android.content.ComponentName $r2;
        java.util.Map $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mDeviceServices>;

        $r2 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        $r4 = virtualinvoke $r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsValue(java.lang.Object)>($r4);

        return $z0;
    }

    static boolean lambda$doesCarrierConfigurationExist$1(int, int, android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)
    {
        int i0, i1, $i2, $i3;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r0;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $i2 = r0.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        if $i2 != i0 goto label1;

        $i3 = r0.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        if $i3 != i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean lambda$getControllerByServiceInfo$4(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo, com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r0;
        com.android.internal.telephony.ims.ImsServiceController r1;
        android.content.ComponentName $r2, $r3;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        r1 := @parameter1: com.android.internal.telephony.ims.ImsServiceController;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName getComponentName()>();

        $r3 = r0.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $z0;
    }

    static boolean lambda$getInfoByPackageName$5(java.lang.String, com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)
    {
        java.lang.String r0, $r3;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r1;
        android.content.ComponentName $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        $r2 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        $r3 = virtualinvoke $r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, r0);

        return $z0;
    }

    static boolean lambda$getSlotsForActiveCarrierService$3(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo, java.lang.String)
    {
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r0;
        java.lang.String r1, $r3;
        android.content.ComponentName $r2;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        $r3 = virtualinvoke $r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    static boolean lambda$handleMsimConfigChange$10(java.lang.Integer, android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)
    {
        java.lang.Integer r0;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r1;
        int $i0, $i1;
        boolean z0;

        r0 := @parameter0: java.lang.Integer;

        r1 := @parameter1: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $i0 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        if $i0 < $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean lambda$sanitizeFeatureConfig$11(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)
    {
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $i0 = r0.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean lambda$shouldFeaturesCauseBind$9(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)
    {
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $i0 = r0.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void maybeAddedImsService(java.lang.String)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.lang.StringBuilder $r2, $r9, $r14, $r21, $r25, $r38, $r43;
        java.lang.String $r5, $r13, $r17, $r24, $r31, $r35, $r37, $r42, $r48, r50;
        boolean $z0, $z1, $z2, z3;
        java.lang.Object $r6;
        android.content.ComponentName $r7, $r11, $r18, $r27, $r40;
        java.util.Map $r8, $r19;
        java.util.Set $r30, $r34, $r49;
        java.util.List r52;
        java.util.Iterator r53;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r54, r55;
        com.android.internal.telephony.LocalLog r56, r59, r62;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r50 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maybeAddedImsService, packageName: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImsResolver", $r5);

        r52 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.List getImsServiceInfo(java.lang.String)>(r50);

        z3 = 0;

        r53 = interfaceinvoke r52.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>();

        r54 = (com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo) $r6;

        $r8 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mInstalledServicesCache>;

        $r7 = r54.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        r55 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getInfoByComponentName(java.util.Map,android.content.ComponentName)>($r8, $r7);

        if r55 == null goto label3;

        $z2 = r54.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: boolean featureFromMetadata>;

        if $z2 == 0 goto label2;

        r56 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maybeAddedImsService - updating features for ");

        $r27 = r54.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r30 = virtualinvoke r55.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: java.util.Set getSupportedFeatures()>();

        $r31 = staticinvoke <com.android.internal.telephony.ims.ImsResolver: java.lang.String printFeatures(java.util.Set)>($r30);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r34 = virtualinvoke r54.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: java.util.Set getSupportedFeatures()>();

        $r35 = staticinvoke <com.android.internal.telephony.ims.ImsResolver: java.lang.String printFeatures(java.util.Set)>($r34);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r56.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating features in cached ImsService: ");

        $r40 = r54.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r42);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating features - Old features: ");

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r55);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new features: ");

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r54);

        $r48 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImsResolver", $r48);

        $r49 = virtualinvoke r54.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: java.util.Set getSupportedFeatures()>();

        virtualinvoke r55.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: void replaceFeatures(java.util.Set)>($r49);

        z3 = 1;

        goto label5;

     label2:
        r59 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maybeAddedImsService - scheduling query for ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r54);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r59.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r24);

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void scheduleQueryForFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r54);

        goto label5;

     label3:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding newly added ImsService to cache: ");

        $r11 = r54.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r13);

        r62 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maybeAddedImsService - adding new ImsService: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r54);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r62.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r17);

        $r19 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mInstalledServicesCache>;

        $r18 = r54.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r54);

        $z1 = r54.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: boolean featureFromMetadata>;

        if $z1 == 0 goto label4;

        z3 = 1;

        goto label5;

     label4:
        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void scheduleQueryForFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r54);

     label5:
        goto label1;

     label6:
        if z3 == 0 goto label7;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void calculateFeatureConfigurationChange()>();

     label7:
        return;
    }

    private boolean maybeRemovedImsService(java.lang.String)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.LocalLog r1;
        java.util.Map $r2, $r4;
        android.content.ComponentName $r3, $r12;
        java.lang.StringBuilder $r6, $r10;
        java.lang.String $r9, $r14, r15;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r16;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r15 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mInstalledServicesCache>;

        r16 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getInfoByPackageName(java.util.Map,java.lang.String)>($r2, r15);

        if r16 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mInstalledServicesCache>;

        $r3 = r16.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        r1 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maybeRemovedImsService - removing ImsService: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing ImsService: ");

        $r12 = r16.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r14);

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void unbindImsService(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r16);

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void calculateFeatureConfigurationChange()>();

        return 1;

     label1:
        return 0;
    }

    private void overrideCarrierService(int, java.util.Map)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, $i1;
        java.util.Map r1, $r8, $r17;
        java.util.Iterator r2;
        java.lang.Integer r3;
        java.lang.String r4, $r19, $r21;
        com.android.internal.telephony.LocalLog r5;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r9, $r10, $r18;
        java.lang.StringBuilder $r11;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Map;

        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) $r9;

        $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.lang.String) $r10;

        r5 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("overriding carrier ImsService to ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on slot ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for feature ");

        $r17 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r3, "invalid");

        $r19 = (java.lang.String) $r18;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r21);

        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void setOverridePackageName(java.lang.String,int,int)>(r4, i0, $i1);

        goto label1;

     label2:
        $r8 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void updateBoundServices(int,java.util.Map)>(i0, $r8);

        return;
    }

    private void overrideDeviceService(java.util.Map)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.util.Map r1, $r12;
        java.util.Iterator r2;
        java.lang.Integer r3;
        java.util.Set $r5;
        boolean $z0, $z1, $z2, z3, z4;
        java.lang.Object $r6, $r7, $r13;
        java.lang.StringBuilder $r8, $r17, $r23;
        java.lang.String $r14, $r16, $r22, $r28, r29, r32;
        int $i0, $i2;
        com.android.internal.telephony.LocalLog r30, r34;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r35;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.util.Map;

        z3 = 0;

        $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) $r6;

        $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r29 = (java.lang.String) $r7;

        r30 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("overriding device ImsService to ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for feature ");

        $r12 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r3, "invalid");

        $r14 = (java.lang.String) $r13;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r30.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r16);

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        r32 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.String getDeviceConfiguration(int)>($i0);

        z4 = z3;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r32, r29);

        if $z1 != 0 goto label4;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("overrideDeviceService - device package changed (override): ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r22);

        r34 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("overrideDeviceService - device package changed (override): ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r34.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r28);

        $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void setDeviceConfiguration(java.lang.String,int)>(r29, $i2);

        r35 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getImsServiceInfoFromCache(java.lang.String)>(r29);

        if r35 == null goto label3;

        $z2 = r35.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: boolean featureFromMetadata>;

        if $z2 == 0 goto label2;

        goto label3;

     label2:
        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void scheduleQueryForFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r35);

        z4 = z3;

        goto label4;

     label3:
        z4 = 1;

     label4:
        z3 = z4;

        goto label1;

     label5:
        if z3 == 0 goto label6;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void calculateFeatureConfigurationChange()>();

     label6:
        return;
    }

    private static java.lang.String printFeatures(java.util.Set)
    {
        java.util.Iterator r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r13;
        boolean $z0;
        java.lang.Object $r6, $r12;
        int $i0, $i1;
        java.util.Map $r10;
        java.lang.Integer $r11;
        java.util.Set r16;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r17;

        r16 := @parameter0: java.util.Set;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" features: [");

        if r16 == null goto label3;

        r1 = interfaceinvoke r16.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r17 = (android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair) $r6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $i0 = r17.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r10 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $i1 = r17.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = (java.lang.String) $r12;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        goto label1;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label3:
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private void putImsController(int, int, com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1, $i3;
        java.lang.Object r1, $r8, $r14, $r25;
        com.android.internal.telephony.LocalLog r2;
        android.util.SparseArray $r7, $r32, r35, r36;
        java.util.Map $r12, $r23;
        java.lang.Integer $r13, $r24;
        java.lang.String $r15, $r19, $r26, $r31, $r42;
        android.content.ComponentName $r29;
        java.lang.Throwable $r33;
        com.android.internal.telephony.ims.ImsServiceController r34;
        java.lang.StringBuilder r37, r38, $r40;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r34 := @parameter2: com.android.internal.telephony.ims.ImsServiceController;

        if i0 < 0 goto label11;

        $i3 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i0 >= $i3 goto label11;

        if i1 <= -1 goto label11;

        if i1 < 3 goto label01;

        goto label11;

     label01:
        r1 = r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.Object mBoundServicesLock>;

        entermonitor r1;

     label02:
        $r7 = r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mBoundImsServicesByFeature>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r35 = (android.util.SparseArray) $r8;

     label03:
        r36 = r35;

        if r35 != null goto label06;

     label04:
        r36 = new android.util.SparseArray;

        specialinvoke r36.<android.util.SparseArray: void <init>()>();

     label05:
        $r32 = r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mBoundImsServicesByFeature>;

        virtualinvoke $r32.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r36);

     label06:
        r2 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("putImsController - [");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r12 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        $r15 = (java.lang.String) $r14;

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] -> ");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        $r19 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r19);

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsServiceController added on slot: ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with feature: ");

        $r23 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r25 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24);

        $r26 = (java.lang.String) $r25;

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using package: ");

        $r29 = virtualinvoke r34.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName getComponentName()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r31);

        virtualinvoke r36.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r34);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r33 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r33;

     label11:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("putImsController received invalid parameters - slot: ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", feature: ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", $r42);

        return;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private com.android.internal.telephony.ims.ImsServiceController removeImsController(int, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1;
        android.util.SparseArray r1, $r7;
        java.lang.StringBuilder r2, r37, $r39;
        java.lang.Object $r8, $r9, $r15, $r26, r34;
        java.util.Map $r13, $r24;
        java.lang.Integer $r14, $r25;
        java.lang.String $r16, $r20, $r27, $r32, $r41;
        android.content.ComponentName $r30;
        java.lang.Throwable $r33;
        com.android.internal.telephony.ims.ImsServiceController r35;
        com.android.internal.telephony.LocalLog r36;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label14;

        if i1 <= -1 goto label14;

        if i1 < 3 goto label01;

        goto label14;

     label01:
        r34 = r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.Object mBoundServicesLock>;

        entermonitor r34;

     label02:
        $r7 = r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mBoundImsServicesByFeature>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.SparseArray) $r8;

     label03:
        if r1 != null goto label06;

     label04:
        exitmonitor r34;

     label05:
        return null;

     label06:
        $r9 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(i1, null);

        r35 = (com.android.internal.telephony.ims.ImsServiceController) $r9;

     label07:
        if r35 == null goto label09;

     label08:
        r36 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeImsController - [");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r13 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r15 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);

        $r16 = (java.lang.String) $r15;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] -> ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r20 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r36.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r20);

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsServiceController removed on slot: ");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with feature: ");

        $r24 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r26 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25);

        $r27 = (java.lang.String) $r26;

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using package: ");

        $r30 = virtualinvoke r35.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName getComponentName()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r32);

        virtualinvoke r1.<android.util.SparseArray: void remove(int)>(i1);

     label09:
        exitmonitor r34;

     label10:
        return r35;

     label11:
        $r33 := @caughtexception;

     label12:
        exitmonitor r34;

     label13:
        throw $r33;

     label14:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeImsController received invalid parameters - slot: ");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", feature: ");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", $r41);

        return null;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void sanitizeFeatureConfig(java.util.Set)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.util.Set r1, $r9;
        java.util.Iterator r2;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r3, r12;
        java.util.stream.Stream $r4, $r6;
        com.android.internal.telephony.ims.'-$$Lambda$ImsResolver$MKr_7p0HFVv6wc4qXSbF1MX3W_M' $r5;
        java.util.stream.Collector $r7;
        java.lang.Object $r8, $r10;
        boolean $z0, $z1;
        int $i0;
        java.util.function.Predicate r13;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.util.Set;

        $r4 = interfaceinvoke r1.<java.util.Set: java.util.stream.Stream stream()>();

        $r5 = <com.android.internal.telephony.ims._$$Lambda$ImsResolver$MKr_7p0HFVv6wc4qXSbF1MX3W_M: com.android.internal.telephony.ims.'-$$Lambda$ImsResolver$MKr_7p0HFVv6wc4qXSbF1MX3W_M' INSTANCE>;

        r13 = (java.util.function.Predicate) $r5;

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r13);

        $r7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toSet()>();

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r7);

        $r9 = (java.util.Set) $r8;

        r2 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair) $r10;

        r12 = new android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $i0 = r3.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        specialinvoke r12.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: void <init>(int,int)>($i0, 1);

        $z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r12);

        if $z1 != 0 goto label2;

        interfaceinvoke r1.<java.util.Set: boolean remove(java.lang.Object)>(r3);

     label2:
        goto label1;

     label3:
        return;
    }

    private void scheduleQueryForFeatures(android.content.ComponentName, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.content.ComponentName r1;
        int i0;
        java.lang.String $r2, $r6;
        java.lang.StringBuilder $r3;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r7;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        r7 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getImsServiceInfoFromCache(java.lang.String)>($r2);

        if r7 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduleQueryForFeatures: Couldn\'t find cached info for name: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", $r6);

        return;

     label1:
        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void scheduleQueryForFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo,int)>(r7, i0);

        return;
    }

    private void scheduleQueryForFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r1;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void scheduleQueryForFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo,int)>(r1, 0);

        return;
    }

    private void scheduleQueryForFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r1;
        int i0;
        android.os.Handler $r3, $r4, $r13;
        boolean $z0;
        java.lang.StringBuilder $r5, $r14;
        android.content.ComponentName $r7, $r16;
        java.lang.String $r12, $r19;
        long $l2;
        android.os.Message r20;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        r20 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r3, 3, r1);

        $r4 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r4.<android.os.Handler: boolean hasMessages(int,java.lang.Object)>(3, r1);

        if $z0 == 0 goto label2;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduleQueryForFeatures: dynamic query for ");

        $r16 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already scheduled");

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImsResolver", $r19);

        return;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduleQueryForFeatures: starting dynamic query for ");

        $r7 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms.");

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImsResolver", $r12);

        $r13 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        $l2 = (long) i0;

        virtualinvoke $r13.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r20, $l2);

        return;
    }

    private java.util.List searchForImsServices(java.lang.String, com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory r1, $r31, $r38;
        android.content.pm.ServiceInfo r3;
        java.util.ArrayList $r4;
        android.content.Intent $r5;
        java.lang.String $r6, $r15, $r16, $r27, r32, $r42, $r43;
        android.content.Context $r8;
        int $i0, $i3, $i4, $i5;
        android.os.UserHandle $r9;
        java.util.List $r10;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Object $r11;
        android.content.pm.ResolveInfo $r12;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo $r13;
        android.content.ComponentName $r14, $r25, $r41;
        android.os.Bundle $r17, $r22, $r29, $r30, $r37;
        java.lang.StringBuilder $r23, $r39;
        java.util.Set $r28;
        android.content.pm.PackageManager r34;
        java.util.Iterator r35;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r32 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new android.content.Intent;

        $r6 = interfaceinvoke r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory: java.lang.String getServiceInterface()>();

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>($r6);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r32);

        $r8 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.Context mContext>;

        r34 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r9 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>($i0);

        $r10 = virtualinvoke r34.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,android.os.UserHandle)>($r5, 128, $r9);

        r35 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r11 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (android.content.pm.ResolveInfo) $r11;

        r3 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if r3 == null goto label09;

        $r13 = new com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        specialinvoke $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: void <init>()>();

        $r14 = new android.content.ComponentName;

        $r16 = r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r15 = r3.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r14.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r16, $r15);

        $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name> = $r14;

        $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory controllerFactory> = r1;

        $z1 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: boolean isDeviceService(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>($r13);

        if $z1 != 0 goto label03;

        $r31 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory mImsServiceControllerFactoryCompat>;

        if $r31 != r1 goto label02;

        goto label03;

     label02:
        $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: boolean featureFromMetadata> = 0;

        goto label06;

     label03:
        $r17 = r3.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        if $r17 == null goto label05;

        $r29 = r3.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        $z5 = virtualinvoke $r29.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android.telephony.ims.MMTEL_FEATURE", 0);

        if $z5 == 0 goto label04;

        $i4 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        virtualinvoke $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: void addFeatureForAllSlots(int,int)>($i4, 1);

        $r30 = r3.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        $z6 = virtualinvoke $r30.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android.telephony.ims.EMERGENCY_MMTEL_FEATURE", 0);

        if $z6 == 0 goto label04;

        $i5 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        virtualinvoke $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: void addFeatureForAllSlots(int,int)>($i5, 0);

     label04:
        $r37 = r3.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        $z7 = virtualinvoke $r37.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android.telephony.ims.RCS_FEATURE", 0);

        if $z7 == 0 goto label05;

        $i3 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        virtualinvoke $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: void addFeatureForAllSlots(int,int)>($i3, 2);

     label05:
        $r38 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory mImsServiceControllerFactoryCompat>;

        if $r38 == r1 goto label06;

        $r28 = virtualinvoke $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: java.util.Set getSupportedFeatures()>();

        $z4 = interfaceinvoke $r28.<java.util.Set: boolean isEmpty()>();

        if $z4 == 0 goto label06;

        $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: boolean featureFromMetadata> = 0;

     label06:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("service name: ");

        $r41 = $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", manifest query: ");

        $z8 = $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: boolean featureFromMetadata>;

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r42);

        $r43 = r3.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z9 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r43, "android.permission.BIND_IMS_SERVICE");

        if $z9 != 0 goto label08;

        $r22 = r3.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        $z3 = virtualinvoke $r22.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("override_bind_check", 0);

        if $z3 == 0 goto label07;

        goto label08;

     label07:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsService is not protected with BIND_IMS_SERVICE permission: ");

        $r25 = $r13.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", $r27);

        goto label09;

     label08:
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r13);

     label09:
        goto label01;

     label10:
        return $r4;
    }

    private void setCarrierConfiguredPackageName(java.lang.String, int, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.lang.String r1;
        int i0, i1;
        java.util.Map $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map getCarrierConfiguredPackageNames(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        return;
    }

    private void setDeviceConfiguration(java.lang.String, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.lang.String r1;
        int i0;
        java.util.Map $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mDeviceServices>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        return;
    }

    private void setOverridePackageName(java.lang.String, int, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.lang.String r1;
        int i0, i1;
        android.util.SparseArray $r2;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray getOverridePackageName(int)>(i0);

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r1);

        return;
    }

    private boolean shouldFeaturesCauseBind(java.util.Set)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.util.Set r1;
        java.util.stream.Stream $r2, $r4;
        com.android.internal.telephony.ims.'-$$Lambda$ImsResolver$DGXV4lyokZNWMjtSTSA-6rRxQis' $r3;
        long $l0;
        byte $b1;
        boolean z0;
        java.util.function.Predicate r5;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.util.Set;

        $r2 = interfaceinvoke r1.<java.util.Set: java.util.stream.Stream stream()>();

        $r3 = <com.android.internal.telephony.ims._$$Lambda$ImsResolver$DGXV4lyokZNWMjtSTSA_6rRxQis: com.android.internal.telephony.ims.'-$$Lambda$ImsResolver$DGXV4lyokZNWMjtSTSA-6rRxQis' INSTANCE>;

        r5 = (java.util.function.Predicate) $r3;

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r5);

        $l0 = interfaceinvoke $r4.<java.util.stream.Stream: long count()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void startDynamicQuery(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r1;
        com.android.internal.telephony.LocalLog r2, $r12;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, $r11;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory $r8;
        com.android.internal.telephony.ims.ImsServiceFeatureQueryManager $r9;
        android.content.ComponentName $r10;
        java.util.List $r13;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: boolean isDeviceService(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r1);

        if $z0 != 0 goto label1;

        $r13 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.List getSlotsForActiveCarrierService(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r1);

        $z2 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", "scheduleQueryForFeatures: skipping query for ImsService that is not set as carrier/device ImsService.");

        return;

     label1:
        r2 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startDynamicQuery - starting query for ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r7);

        $r9 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceFeatureQueryManager mFeatureQueryManager>;

        $r10 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        $r8 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory controllerFactory>;

        $r11 = interfaceinvoke $r8.<com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory: java.lang.String getServiceInterface()>();

        $z1 = virtualinvoke $r9.<com.android.internal.telephony.ims.ImsServiceFeatureQueryManager: boolean startQuery(android.content.ComponentName,java.lang.String)>($r10, $r11);

        if $z1 != 0 goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", "startDynamicQuery: service could not connect. Retrying after delay.");

        $r12 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        virtualinvoke $r12.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("startDynamicQuery - query failed. Retrying in 5000 mS");

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void scheduleQueryForFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo,int)>(r1, 5000);

        goto label3;

     label2:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImsResolver", "startDynamicQuery: Service queried, waiting for response.");

     label3:
        return;
    }

    private void unbindImsService(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r1;
        com.android.internal.telephony.LocalLog r2;
        java.util.Map $r3, $r12;
        android.content.ComponentName $r5, $r11;
        java.lang.String $r7, $r10, $r17, $r19;
        android.os.RemoteException $r14;
        java.lang.StringBuilder $r15, r21, r22;
        com.android.internal.telephony.ims.ImsServiceController r20;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mActiveControllers>;

        r20 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceController getControllerByServiceInfo(java.util.Map,com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>($r3, r1);

        if r20 == null goto label6;

     label2:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding ImsService: ");

        $r5 = virtualinvoke r20.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName getComponentName()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r7);

        r2 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unbindImsService - unbinding and removing ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r10 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r10);

        virtualinvoke r20.<com.android.internal.telephony.ims.ImsServiceController: void unbind()>();

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unbindImsService: Remote Exception: ");

        $r17 = virtualinvoke $r14.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImsResolver", $r19);

     label5:
        $r12 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mActiveControllers>;

        $r11 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11);

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void updateBoundDeviceServices()
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.lang.String r2, $r8;
        android.util.ArrayMap $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5;
        java.lang.Object $r9;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo $r10, r11;
        int i2;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImsResolver", "updateBoundDeviceServices: called");

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        i2 = 0;

     label1:
        if i2 >= 3 goto label3;

        r2 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.String getDeviceConfiguration(int)>(i2);

        r11 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getImsServiceInfoFromCache(java.lang.String)>(r2);

        if r11 == null goto label2;

        $z0 = r11.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: boolean featureFromMetadata>;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke $r3.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r11);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateBoundDeviceServices: Schedule query for package=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImsResolver", $r8);

        $r9 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r10 = (com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo) $r9;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void scheduleQueryForFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>($r10);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private void updateBoundServices(int, java.util.Map)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, $i1, i3;
        java.lang.String r1, $r6, $r22, r24, r25, r26, $r30;
        java.lang.StringBuilder $r3, $r29;
        java.lang.Integer $r7, $r19, $r21;
        java.lang.Object $r8, $r20;
        boolean $z0, $z1, $z2, z3, z4;
        java.lang.Object[] $r17;
        java.util.Map $r18, r23;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r27;
        com.android.internal.telephony.LocalLog r28, r31;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        r23 := @parameter1: java.util.Map;

        if i0 <= -1 goto label11;

        $i1 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i0 < $i1 goto label01;

        goto label11;

     label01:
        z3 = 0;

        z4 = 0;

        i3 = 0;

     label02:
        if i3 >= 3 goto label08;

        r24 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.String getOverridePackageName(int,int)>(i0, i3);

        r1 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.String getCarrierConfiguredPackageName(int,int)>(i0, i3);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r8 = interfaceinvoke r23.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r7, "");

        r25 = (java.lang.String) $r8;

        r26 = r25;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r24);

        if $z0 != 0 goto label04;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r25);

        if $z2 == 0 goto label03;

        r25 = "(none)";

        goto label03;

     label03:
        $r17 = newarray (java.lang.Object)[4];

        $r17[0] = r25;

        $r17[1] = r24;

        $r18 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r20 = interfaceinvoke $r18.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r19, "invalid");

        $r17[2] = $r20;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r17[3] = $r21;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("updateBoundServices: overriding %s with %s for feature %s on slot %d", $r17);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r22);

        r26 = r24;

     label04:
        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void setCarrierConfiguredPackageName(java.lang.String,int,int)>(r26, i0, i3);

        r27 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getImsServiceInfoFromCache(java.lang.String)>(r26);

        r28 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateBoundServices - carrier package changed: ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on slot ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hasConfigChanged=");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r28.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r30);

        if r27 == null goto label06;

        $z1 = r27.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: boolean featureFromMetadata>;

        if $z1 == 0 goto label05;

        goto label06;

     label05:
        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void scheduleQueryForFeatures(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>(r27);

        z4 = 1;

        goto label07;

     label06:
        z3 = 1;

     label07:
        i3 = i3 + 1;

        goto label02;

     label08:
        if z3 == 0 goto label09;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void calculateFeatureConfigurationChange()>();

     label09:
        if z3 == 0 goto label10;

        if z4 == 0 goto label10;

        r31 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[warning] updateBoundServices - both hasConfigChange and query scheduled on slot ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r31.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r6);

     label10:
        return;

     label11:
        return;
    }

    public void destroy()
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.os.Handler $r1, $r2;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        $r1 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        staticinvoke <com.android.internal.telephony.PhoneConfigurationManager: void unregisterForMultiSimConfigChange(android.os.Handler)>($r1);

        $r2 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        return;
    }

    public void disableIms(int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, $i1, $i2, i3;
        android.util.SparseArray r1;
        java.lang.Object $r2;
        com.android.internal.telephony.ims.ImsServiceController $r3;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray getImsServiceControllers(int)>(i0);

        if r1 == null goto label2;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        if i3 >= $i1 goto label2;

        $i2 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i3);

        $r2 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        $r3 = (com.android.internal.telephony.ims.ImsServiceController) $r2;

        virtualinvoke $r3.<com.android.internal.telephony.ims.ImsServiceController: void disableIms(int)>(i0);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.util.Iterator r1, r62, r63;
        com.android.internal.telephony.IndentingPrintWriter $r2;
        java.util.Map $r6, $r15, $r19, $r30, $r36, $r44, $r49;
        java.util.Set $r7;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, i2, i3, i4, i5;
        java.util.Collection $r16, $r20;
        com.android.internal.telephony.LocalLog $r23;
        java.lang.Object $r25, $r28, $r32, $r38, $r42, $r45, $r50, r61;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo $r29;
        java.lang.Integer $r31, $r37, r58;
        java.lang.String $r33, $r39, $r46, $r51, $r53, r60;
        java.lang.StringBuilder $r43;
        java.io.FileDescriptor r54;
        java.io.PrintWriter r55;
        java.lang.String[] r56;
        com.android.internal.telephony.ims.ImsServiceController r64;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r54 := @parameter0: java.io.FileDescriptor;

        r55 := @parameter1: java.io.PrintWriter;

        r56 := @parameter2: java.lang.String[];

        $r2 = new com.android.internal.telephony.IndentingPrintWriter;

        specialinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r55, "  ");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("ImsResolver:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("Configurations:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("Device:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r6 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mDeviceServices>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        r1 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r42 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r58 = (java.lang.Integer) $r42;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $r45 = interfaceinvoke $r44.<java.util.Map: java.lang.Object get(java.lang.Object)>(r58);

        $r46 = (java.lang.String) $r45;

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r49 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mDeviceServices>;

        $r50 = interfaceinvoke $r49.<java.util.Map: java.lang.Object get(java.lang.Object)>(r58);

        $r51 = (java.lang.String) $r50;

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r53);

        goto label01;

     label02:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("Carrier: ");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        i2 = 0;

     label03:
        $i0 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i2 >= $i0 goto label07;

        i3 = 0;

     label04:
        if i3 >= 3 goto label06;

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void print(java.lang.String)>("slot=");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void print(int)>(i2);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void print(java.lang.String)>(", feature=");

        $r36 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r38 = interfaceinvoke $r36.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r37, "?");

        $r39 = (java.lang.String) $r38;

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void print(java.lang.String)>($r39);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>(": ");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        r60 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.String getCarrierConfiguredPackageName(int,int)>(i2, i3);

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r60);

        if $z3 == 0 goto label05;

        r60 = "none";

        goto label05;

     label05:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>(r60);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        i3 = i3 + 1;

        goto label04;

     label06:
        i2 = i2 + 1;

        goto label03;

     label07:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("Bound Features:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        i4 = 0;

     label08:
        $i1 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i4 >= $i1 goto label12;

        i5 = 0;

     label09:
        if i5 >= 3 goto label11;

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void print(java.lang.String)>("slot=");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void print(int)>(i4);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void print(java.lang.String)>(", feature=");

        $r30 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r32 = interfaceinvoke $r30.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r31, "?");

        $r33 = (java.lang.String) $r32;

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void print(java.lang.String)>($r33);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>(": ");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        r61 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceController getImsServiceController(int,int)>(i4, i5);

        if r61 != null goto label10;

        r61 = "none";

        goto label10;

     label10:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.Object)>(r61);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        i5 = i5 + 1;

        goto label09;

     label11:
        i4 = i4 + 1;

        goto label08;

     label12:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("Cached ImsServices:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r15 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mInstalledServicesCache>;

        $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Collection values()>();

        r62 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label13:
        $z1 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r28 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>();

        $r29 = (com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo) $r28;

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.Object)>($r29);

        goto label13;

     label14:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("Active controllers:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r19 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mActiveControllers>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Collection values()>();

        r63 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r25 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>();

        r64 = (com.android.internal.telephony.ims.ImsServiceController) $r25;

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.Object)>(r64);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        virtualinvoke r64.<com.android.internal.telephony.ims.ImsServiceController: void dump(java.io.PrintWriter)>($r2);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        goto label15;

     label16:
        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("Event Log:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r23 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        virtualinvoke $r23.<com.android.internal.telephony.LocalLog: void dump(java.io.PrintWriter)>($r2);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    public void enableIms(int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, $i1, $i2, i3;
        android.util.SparseArray r1;
        java.lang.Object $r2;
        com.android.internal.telephony.ims.ImsServiceController $r3;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray getImsServiceControllers(int)>(i0);

        if r1 == null goto label2;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        if i3 >= $i1 goto label2;

        $i2 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i3);

        $r2 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        $r3 = (com.android.internal.telephony.ims.ImsServiceController) $r2;

        virtualinvoke $r3.<com.android.internal.telephony.ims.ImsServiceController: void enableIms(int)>(i0);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public android.os.Handler getHandler()
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.os.Handler $r1;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        $r1 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        return $r1;
    }

    public android.telephony.ims.aidl.IImsConfig getImsConfig(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1;
        com.android.internal.telephony.ims.ImsServiceController r1;
        android.telephony.ims.aidl.IImsConfig $r2;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceController getImsServiceController(int,int)>(i0, i1);

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsConfig getConfig(int)>(i0);

        return $r2;

     label1:
        return null;
    }

    public android.telephony.ims.aidl.IImsRegistration getImsRegistration(int, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1;
        com.android.internal.telephony.ims.ImsServiceController r1;
        android.telephony.ims.aidl.IImsRegistration $r2;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceController getImsServiceController(int,int)>(i0, i1);

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsRegistration getRegistration(int)>(i0);

        return $r2;

     label1:
        return null;
    }

    public java.lang.String getImsServiceConfiguration(int, boolean, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1, $i3;
        boolean z0;
        android.os.Handler $r4;
        java.util.concurrent.TimeUnit $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        java.lang.String $r10, $r12, r14;
        java.util.concurrent.LinkedBlockingQueue r16;
        com.android.internal.telephony.ims._$$Lambda$ImsResolver$58Dyd_iWRTmHiB5bOwghxMnTeew r17;
        java.lang.StringBuilder r18;
        java.lang.InterruptedException r19;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        if i0 < 0 goto label5;

        $i3 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i0 < $i3 goto label1;

        goto label5;

     label1:
        r16 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke r16.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(1);

        $r4 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        r17 = new com.android.internal.telephony.ims._$$Lambda$ImsResolver$58Dyd_iWRTmHiB5bOwghxMnTeew;

        specialinvoke r17.<com.android.internal.telephony.ims._$$Lambda$ImsResolver$58Dyd_iWRTmHiB5bOwghxMnTeew: void <init>(com.android.internal.telephony.ims.ImsResolver,java.util.concurrent.LinkedBlockingQueue,boolean,int,int)>(r0, r16, z0, i0, i1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>(r17);

     label2:
        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r6 = virtualinvoke r16.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(5000L, $r5);

        r14 = (java.lang.String) $r6;

     label3:
        return r14;

     label4:
        $r7 := @caughtexception;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getImsServiceConfiguration: exception=");

        r19 = (java.lang.InterruptedException) $r7;

        $r10 = virtualinvoke r19.<java.lang.InterruptedException: java.lang.String getMessage()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", $r12);

        return null;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", "getImsServiceConfiguration: invalid slotId!");

        return "";

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public com.android.internal.telephony.ims.ImsServiceController getImsServiceController(int, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1, $i2;
        java.lang.Object r1, $r3, $r4;
        android.util.SparseArray $r2, r6;
        java.lang.Throwable $r5;
        com.android.internal.telephony.ims.ImsServiceController r7;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label11;

        $i2 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i0 < $i2 goto label01;

        goto label11;

     label01:
        r1 = r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.Object mBoundServicesLock>;

        entermonitor r1;

     label02:
        $r2 = r0.<com.android.internal.telephony.ims.ImsResolver: android.util.SparseArray mBoundImsServicesByFeature>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (android.util.SparseArray) $r3;

     label03:
        if r6 != null goto label06;

     label04:
        exitmonitor r1;

     label05:
        return null;

     label06:
        $r4 = virtualinvoke r6.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r7 = (com.android.internal.telephony.ims.ImsServiceController) $r4;

        exitmonitor r1;

     label07:
        return r7;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

     label11:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public com.android.internal.telephony.ims.ImsServiceController getImsServiceControllerAndListen(int, int, com.android.ims.internal.IImsServiceFeatureCallback)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1;
        com.android.ims.internal.IImsServiceFeatureCallback r1;
        com.android.internal.telephony.ims.ImsServiceController r2;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.ims.internal.IImsServiceFeatureCallback;

        r2 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceController getImsServiceController(int,int)>(i0, i1);

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.telephony.ims.ImsServiceController: void addImsServiceFeatureCallback(com.android.ims.internal.IImsServiceFeatureCallback)>(r1);

        return r2;

     label1:
        return null;
    }

    public com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getImsServiceInfoFromCache(java.lang.String)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        boolean $z0;
        java.util.Map $r1;
        java.lang.String r2;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r3;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r2 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mInstalledServicesCache>;

        r3 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo getInfoByPackageName(java.util.Map,java.lang.String)>($r1, r2);

        if r3 == null goto label2;

        return r3;

     label2:
        return null;
    }

    public android.telephony.ims.aidl.IImsMmTelFeature getMmTelFeatureAndListen(int, com.android.ims.internal.IImsServiceFeatureCallback)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0;
        com.android.ims.internal.IImsServiceFeatureCallback r1;
        com.android.internal.telephony.ims.ImsServiceController r2;
        android.telephony.ims.aidl.IImsMmTelFeature r3;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.ims.internal.IImsServiceFeatureCallback;

        r2 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceController getImsServiceControllerAndListen(int,int,com.android.ims.internal.IImsServiceFeatureCallback)>(i0, 1, r1);

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsMmTelFeature getMmTelFeature(int)>(i0);

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public android.telephony.ims.aidl.IImsRcsFeature getRcsFeatureAndListen(int, com.android.ims.internal.IImsServiceFeatureCallback)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0;
        com.android.ims.internal.IImsServiceFeatureCallback r1;
        com.android.internal.telephony.ims.ImsServiceController r2;
        android.telephony.ims.aidl.IImsRcsFeature r3;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.ims.internal.IImsServiceFeatureCallback;

        r2 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceController getImsServiceControllerAndListen(int,int,com.android.ims.internal.IImsServiceFeatureCallback)>(i0, 2, r1);

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsRcsFeature getRcsFeature(int)>(i0);

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public void imsServiceBindPermanentError(android.content.ComponentName)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.content.ComponentName r1;
        com.android.internal.telephony.LocalLog r2;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r6, $r10, $r12;
        android.os.Handler $r11;
        android.os.Message $r13;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: android.content.ComponentName;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("imsServiceBindPermanentError: component=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", $r6);

        r2 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("imsServiceBindPermanentError - for ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r10);

        $r11 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        $r12 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r13 = virtualinvoke $r11.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r12);

        virtualinvoke $r13.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void imsServiceFeatureCreated(int, int, com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1;
        com.android.internal.telephony.ims.ImsServiceController r1;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.telephony.ims.ImsServiceController;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void putImsController(int,int,com.android.internal.telephony.ims.ImsServiceController)>(i0, i1, r1);

        return;
    }

    public void imsServiceFeatureRemoved(int, int, com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1;
        com.android.internal.telephony.ims.ImsServiceController r1;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.telephony.ims.ImsServiceController;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceController removeImsController(int,int)>(i0, i1);

        return;
    }

    public void imsServiceFeaturesChanged(android.telephony.ims.stub.ImsFeatureConfiguration, com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.telephony.ims.stub.ImsFeatureConfiguration r1;
        com.android.internal.telephony.ims.ImsServiceController r2;
        com.android.internal.telephony.LocalLog r3;
        java.lang.StringBuilder $r4, $r12;
        java.util.Set $r6, $r16, $r20;
        android.content.ComponentName $r9, $r19;
        java.lang.String $r11, $r18;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: android.telephony.ims.stub.ImsFeatureConfiguration;

        r2 := @parameter1: com.android.internal.telephony.ims.ImsServiceController;

        if r2 == null goto label2;

        if r1 != null goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("imsServiceFeaturesChanged: config=");

        $r6 = virtualinvoke r1.<android.telephony.ims.stub.ImsFeatureConfiguration: java.util.Set getServiceFeatures()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ComponentName=");

        $r9 = virtualinvoke r2.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName getComponentName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", $r11);

        r3 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("imsServiceFeaturesChanged - for ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new config ");

        $r16 = virtualinvoke r1.<android.telephony.ims.stub.ImsFeatureConfiguration: java.util.Set getServiceFeatures()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r18);

        $r19 = virtualinvoke r2.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName getComponentName()>();

        $r20 = virtualinvoke r1.<android.telephony.ims.stub.ImsFeatureConfiguration: java.util.Set getServiceFeatures()>();

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void handleFeaturesChanged(android.content.ComponentName,java.util.Set)>($r19, $r20);

        return;

     label2:
        return;
    }

    public void initialize()
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.util.Iterator r1;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r2;
        com.android.internal.telephony.LocalLog $r3;
        android.os.Handler $r4;
        com.android.internal.telephony.ims.ImsServiceFeatureQueryManager$Listener $r5;
        android.content.Context $r6;
        com.android.internal.telephony.ims.ImsResolver$ImsDynamicQueryManagerFactory $r7;
        com.android.internal.telephony.ims.ImsServiceFeatureQueryManager $r8;
        java.util.List $r9;
        boolean $z0, $z1;
        java.lang.Object $r10;
        android.content.ComponentName $r11, $r13;
        java.util.Map $r12, $r14;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        $r3 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        virtualinvoke $r3.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("Initializing");

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsResolver", "Initializing cache.");

        $r4 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        staticinvoke <com.android.internal.telephony.PhoneConfigurationManager: void registerForMultiSimConfigChange(android.os.Handler,int,java.lang.Object)>($r4, 7, null);

        $r7 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsDynamicQueryManagerFactory mDynamicQueryManagerFactory>;

        $r6 = r0.<com.android.internal.telephony.ims.ImsResolver: android.content.Context mContext>;

        $r5 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceFeatureQueryManager$Listener mDynamicQueryListener>;

        $r8 = interfaceinvoke $r7.<com.android.internal.telephony.ims.ImsResolver$ImsDynamicQueryManagerFactory: com.android.internal.telephony.ims.ImsServiceFeatureQueryManager create(android.content.Context,com.android.internal.telephony.ims.ImsServiceFeatureQueryManager$Listener)>($r6, $r5);

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceFeatureQueryManager mFeatureQueryManager> = $r8;

        $r9 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.util.List getImsServiceInfo(java.lang.String)>(null);

        r1 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo) $r10;

        $r12 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mInstalledServicesCache>;

        $r11 = r2.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        $z1 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>($r11);

        if $z1 != 0 goto label2;

        $r14 = r0.<com.android.internal.telephony.ims.ImsResolver: java.util.Map mInstalledServicesCache>;

        $r13 = r2.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r2);

     label2:
        goto label1;

     label3:
        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void bindCarrierServicesIfAvailable()>();

        return;
    }

    public boolean lambda$calculateFeaturesToCreate$6$ImsResolver(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo, android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r1;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r2;
        android.content.ComponentName $r3;
        java.lang.String $r4, $r5;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        r2 := @parameter1: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $r3 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getPackageName()>();

        $i1 = r2.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i0 = r2.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        $r5 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.String getCarrierConfiguredPackageName(int,int)>($i1, $i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public boolean lambda$calculateFeaturesToCreate$7$ImsResolver(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo, android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo r1;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r2;
        android.content.ComponentName $r3;
        java.lang.String $r4, $r5;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo;

        r2 := @parameter1: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $r3 = r1.<com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo: android.content.ComponentName name>;

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getPackageName()>();

        $i0 = r2.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        $r5 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.String getDeviceConfiguration(int)>($i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public boolean lambda$calculateFeaturesToCreate$8$ImsResolver(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r1;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $i1 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i0 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: boolean doesCarrierConfigurationExist(int,int)>($i1, $i0);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public void lambda$getImsServiceConfiguration$2$ImsResolver(java.util.concurrent.LinkedBlockingQueue, boolean, int, int)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        java.util.concurrent.LinkedBlockingQueue r1;
        boolean z0;
        int i0, i1;
        java.lang.String r2;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: java.util.concurrent.LinkedBlockingQueue;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if z0 == 0 goto label1;

        r2 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.String getCarrierConfiguredPackageName(int,int)>(i0, i1);

        goto label2;

     label1:
        r2 = specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: java.lang.String getDeviceConfiguration(int)>(i1);

     label2:
        virtualinvoke r1.<java.util.concurrent.LinkedBlockingQueue: boolean offer(java.lang.Object)>(r2);

        return;
    }

    public boolean lambda$new$0$ImsResolver(android.os.Message)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.SomeArgs r1;
        java.util.Set r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object $r3, $r5, $r8, $r11, $r12, $r13, $r14, $r16, $r22, $r24;
        android.os.AsyncResult $r4;
        java.lang.Integer $r6, $r17;
        boolean $z0, $z1;
        com.android.internal.telephony.LocalLog $r7;
        java.util.Map $r9, $r10;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo $r15;
        java.lang.StringBuilder $r18;
        java.lang.String $r21, $r23, $r25;
        android.os.Message r26;
        com.android.internal.telephony.ims.ImsResolver$OverrideConfig r27;
        android.content.ComponentName r28;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r26 := @parameter0: android.os.Message;

        $i1 = r26.<android.os.Message: int what>;

        tableswitch($i1)
        {
            case 0: goto label11;
            case 1: goto label10;
            case 2: goto label08;
            case 3: goto label07;
            case 4: goto label06;
            case 5: goto label04;
            case 6: goto label03;
            case 7: goto label02;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        $r3 = r26.<android.os.Message: java.lang.Object obj>;

        $r4 = (android.os.AsyncResult) $r3;

        $r5 = $r4.<android.os.AsyncResult: java.lang.Object result>;

        $r6 = (java.lang.Integer) $r5;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void handleMsimConfigChange(java.lang.Integer)>($r6);

        goto label12;

     label03:
        $z0 = r0.<com.android.internal.telephony.ims.ImsResolver: boolean mBootCompletedHandlerRan>;

        if $z0 != 0 goto label12;

        r0.<com.android.internal.telephony.ims.ImsResolver: boolean mBootCompletedHandlerRan> = 1;

        $r7 = r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.LocalLog mEventLog>;

        virtualinvoke $r7.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("handling BOOT_COMPLETE");

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void maybeAddedImsService(java.lang.String)>(null);

        goto label12;

     label04:
        $r8 = r26.<android.os.Message: java.lang.Object obj>;

        r27 = (com.android.internal.telephony.ims.ImsResolver$OverrideConfig) $r8;

        $z1 = r27.<com.android.internal.telephony.ims.ImsResolver$OverrideConfig: boolean isCarrierService>;

        if $z1 == 0 goto label05;

        $i2 = r27.<com.android.internal.telephony.ims.ImsResolver$OverrideConfig: int slotId>;

        $r10 = r27.<com.android.internal.telephony.ims.ImsResolver$OverrideConfig: java.util.Map featureTypeToPackageMap>;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void overrideCarrierService(int,java.util.Map)>($i2, $r10);

        goto label12;

     label05:
        $r9 = r27.<com.android.internal.telephony.ims.ImsResolver$OverrideConfig: java.util.Map featureTypeToPackageMap>;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void overrideDeviceService(java.util.Map)>($r9);

        goto label12;

     label06:
        $r11 = r26.<android.os.Message: java.lang.Object obj>;

        r1 = (com.android.internal.telephony.SomeArgs) $r11;

        $r12 = r1.<com.android.internal.telephony.SomeArgs: java.lang.Object arg1>;

        r28 = (android.content.ComponentName) $r12;

        $r13 = r1.<com.android.internal.telephony.SomeArgs: java.lang.Object arg2>;

        r2 = (java.util.Set) $r13;

        virtualinvoke r1.<com.android.internal.telephony.SomeArgs: void recycle()>();

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void dynamicQueryComplete(android.content.ComponentName,java.util.Set)>(r28, r2);

        goto label12;

     label07:
        $r14 = r26.<android.os.Message: java.lang.Object obj>;

        $r15 = (com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo) $r14;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void startDynamicQuery(com.android.internal.telephony.ims.ImsResolver$ImsServiceInfo)>($r15);

        goto label12;

     label08:
        $r16 = r26.<android.os.Message: java.lang.Object obj>;

        $r17 = (java.lang.Integer) $r16;

        i0 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $i3 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i0 < $i3 goto label09;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HANDLER_CONFIG_CHANGED for invalid slotid=");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", $r21);

        goto label12;

     label09:
        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void carrierConfigChanged(int)>(i0);

        goto label12;

     label10:
        $r22 = r26.<android.os.Message: java.lang.Object obj>;

        $r23 = (java.lang.String) $r22;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: boolean maybeRemovedImsService(java.lang.String)>($r23);

        goto label12;

     label11:
        $r24 = r26.<android.os.Message: java.lang.Object obj>;

        $r25 = (java.lang.String) $r24;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsResolver: void maybeAddedImsService(java.lang.String)>($r25);

     label12:
        return 1;
    }

    public boolean overrideImsServiceConfiguration(int, boolean, java.util.Map)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, $i2;
        boolean z0;
        com.android.internal.telephony.ims.ImsResolver$OverrideConfig $r1;
        android.os.Handler $r2;
        android.os.Message $r3;
        java.util.Map r4;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r4 := @parameter2: java.util.Map;

        if i0 < 0 goto label2;

        $i2 = r0.<com.android.internal.telephony.ims.ImsResolver: int mNumSlots>;

        if i0 < $i2 goto label1;

        goto label2;

     label1:
        $r1 = new com.android.internal.telephony.ims.ImsResolver$OverrideConfig;

        specialinvoke $r1.<com.android.internal.telephony.ims.ImsResolver$OverrideConfig: void <init>(int,boolean,java.util.Map)>(i0, z0, r4);

        $r2 = r0.<com.android.internal.telephony.ims.ImsResolver: android.os.Handler mHandler>;

        $r3 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r2, 5, $r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return 1;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsResolver", "overrideImsServiceConfiguration: invalid slotId!");

        return 0;
    }

    public void setImsDynamicQueryManagerFactory(com.android.internal.telephony.ims.ImsResolver$ImsDynamicQueryManagerFactory)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsDynamicQueryManagerFactory r1;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsDynamicQueryManagerFactory;

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsDynamicQueryManagerFactory mDynamicQueryManagerFactory> = r1;

        return;
    }

    public void setImsServiceControllerFactory(com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory r1;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory;

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$ImsServiceControllerFactory mImsServiceControllerFactory> = r1;

        return;
    }

    public void setSubscriptionManagerProxy(com.android.internal.telephony.ims.ImsResolver$SubscriptionManagerProxy)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$SubscriptionManagerProxy r1;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$SubscriptionManagerProxy;

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$SubscriptionManagerProxy mSubscriptionManagerProxy> = r1;

        return;
    }

    public void setTelephonyManagerProxy(com.android.internal.telephony.ims.ImsResolver$TelephonyManagerProxy)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        com.android.internal.telephony.ims.ImsResolver$TelephonyManagerProxy r1;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        r1 := @parameter0: com.android.internal.telephony.ims.ImsResolver$TelephonyManagerProxy;

        r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsResolver$TelephonyManagerProxy mTelephonyManagerProxy> = r1;

        return;
    }

    public void unregisterImsFeatureCallback(int, int, com.android.ims.internal.IImsServiceFeatureCallback)
    {
        com.android.internal.telephony.ims.ImsResolver r0;
        int i0, i1;
        com.android.ims.internal.IImsServiceFeatureCallback r1;
        com.android.internal.telephony.ims.ImsServiceController r2;

        r0 := @this: com.android.internal.telephony.ims.ImsResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.ims.internal.IImsServiceFeatureCallback;

        r2 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsResolver: com.android.internal.telephony.ims.ImsServiceController getImsServiceController(int,int)>(i0, i1);

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.telephony.ims.ImsServiceController: void removeImsServiceFeatureCallback(com.android.ims.internal.IImsServiceFeatureCallback)>(r1);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.ims.ImsResolver: java.lang.String TAG> = "ImsResolver";

        <com.android.internal.telephony.ims.ImsResolver: java.lang.String METADATA_RCS_FEATURE> = "android.telephony.ims.RCS_FEATURE";

        <com.android.internal.telephony.ims.ImsResolver: java.lang.String METADATA_OVERRIDE_PERM_CHECK> = "override_bind_check";

        <com.android.internal.telephony.ims.ImsResolver: java.lang.String METADATA_MMTEL_FEATURE> = "android.telephony.ims.MMTEL_FEATURE";

        <com.android.internal.telephony.ims.ImsResolver: java.lang.String METADATA_EMERGENCY_MMTEL_FEATURE> = "android.telephony.ims.EMERGENCY_MMTEL_FEATURE";

        <com.android.internal.telephony.ims.ImsResolver: int HANDLER_START_DYNAMIC_FEATURE_QUERY> = 3;

        <com.android.internal.telephony.ims.ImsResolver: int HANDLER_REMOVE_PACKAGE> = 1;

        <com.android.internal.telephony.ims.ImsResolver: int HANDLER_OVERRIDE_IMS_SERVICE_CONFIG> = 5;

        <com.android.internal.telephony.ims.ImsResolver: int HANDLER_MSIM_CONFIGURATION_CHANGE> = 7;

        <com.android.internal.telephony.ims.ImsResolver: int HANDLER_DYNAMIC_FEATURE_CHANGE> = 4;

        <com.android.internal.telephony.ims.ImsResolver: int HANDLER_CONFIG_CHANGED> = 2;

        <com.android.internal.telephony.ims.ImsResolver: int HANDLER_BOOT_COMPLETE> = 6;

        <com.android.internal.telephony.ims.ImsResolver: int HANDLER_ADD_PACKAGE> = 0;

        <com.android.internal.telephony.ims.ImsResolver: int GET_IMS_SERVICE_TIMEOUT_MS> = 5000;

        <com.android.internal.telephony.ims.ImsResolver: int DELAY_DYNAMIC_QUERY_MS> = 5000;

        return;
    }
}
