public class com.android.internal.telephony.ims.ImsServiceController extends java.lang.Object
{
    private static final long CHANGE_PERMISSION_TIMEOUT_MS;
    private static final java.lang.String LOG_TAG;
    private static final int REBIND_MAXIMUM_DELAY_MS;
    private static final int REBIND_START_DELAY_MS;
    private com.android.internal.telephony.ExponentialBackoff mBackoff;
    private com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks mCallbacks;
    private final android.content.ComponentName mComponentName;
    protected final android.content.Context mContext;
    private android.telephony.ims.ImsService$Listener mFeatureChangedListener;
    private java.util.Set mFeatureStatusCallbacks;
    private final android.os.HandlerThread mHandlerThread;
    private android.telephony.ims.aidl.IImsServiceController mIImsServiceController;
    private java.util.HashSet mImsFeatureBinders;
    private java.util.Set mImsFeatures;
    private com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection mImsServiceConnection;
    private java.util.Set mImsStatusCallbacks;
    private boolean mIsBinding;
    private boolean mIsBound;
    private final com.android.internal.telephony.LocalLog mLocalLog;
    protected final java.lang.Object mLock;
    private final android.permission.PermissionManager mPermissionManager;
    private com.android.internal.telephony.ims.ImsServiceController$RebindRetry mRebindRetry;
    private java.lang.Runnable mRestartImsServiceRunnable;

    public void <init>(android.content.Context, android.content.ComponentName, com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        android.content.Context r1, $r20;
        android.content.ComponentName r2;
        com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks r3;
        android.os.HandlerThread $r4, $r13, $r17;
        java.util.HashSet $r5, $r7;
        java.util.concurrent.ConcurrentHashMap$KeySetView $r6;
        com.android.internal.telephony.LocalLog $r8;
        java.lang.Object $r9, $r21;
        com.android.internal.telephony.ims.ImsServiceController$1 $r10;
        com.android.internal.telephony.ims.ImsServiceController$2 $r11;
        com.android.internal.telephony.ims.ImsServiceController$3 $r12;
        com.android.internal.telephony.ExponentialBackoff $r14;
        com.android.internal.telephony.ims.ImsServiceController$RebindRetry $r15, $r16;
        long $l0, $l1;
        android.os.Looper $r18;
        java.lang.Runnable $r19;
        android.permission.PermissionManager $r22;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.os.HandlerThread;

        specialinvoke $r4.<android.os.HandlerThread: void <init>(java.lang.String)>("ImsServiceControllerHandler");

        r0.<com.android.internal.telephony.ims.ImsServiceController: android.os.HandlerThread mHandlerThread> = $r4;

        r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBound> = 0;

        r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBinding> = 0;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.HashSet mImsFeatureBinders> = $r5;

        $r6 = staticinvoke <java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$KeySetView newKeySet()>();

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsStatusCallbacks> = $r6;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mFeatureStatusCallbacks> = $r7;

        $r8 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r8.<com.android.internal.telephony.LocalLog: void <init>(int)>(10);

        r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.LocalLog mLocalLog> = $r8;

        $r9 = new java.lang.Object;

        specialinvoke $r9.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock> = $r9;

        $r10 = new com.android.internal.telephony.ims.ImsServiceController$1;

        specialinvoke $r10.<com.android.internal.telephony.ims.ImsServiceController$1: void <init>(com.android.internal.telephony.ims.ImsServiceController)>(r0);

        r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.ImsService$Listener mFeatureChangedListener> = $r10;

        $r11 = new com.android.internal.telephony.ims.ImsServiceController$2;

        specialinvoke $r11.<com.android.internal.telephony.ims.ImsServiceController$2: void <init>(com.android.internal.telephony.ims.ImsServiceController)>(r0);

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Runnable mRestartImsServiceRunnable> = $r11;

        $r12 = new com.android.internal.telephony.ims.ImsServiceController$3;

        specialinvoke $r12.<com.android.internal.telephony.ims.ImsServiceController$3: void <init>(com.android.internal.telephony.ims.ImsServiceController)>(r0);

        r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$RebindRetry mRebindRetry> = $r12;

        r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.Context mContext> = r1;

        r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName mComponentName> = r2;

        r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks mCallbacks> = r3;

        $r13 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r13.<android.os.HandlerThread: void start()>();

        $r14 = new com.android.internal.telephony.ExponentialBackoff;

        $r15 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$RebindRetry mRebindRetry>;

        $l0 = interfaceinvoke $r15.<com.android.internal.telephony.ims.ImsServiceController$RebindRetry: long getStartDelay()>();

        $r16 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$RebindRetry mRebindRetry>;

        $l1 = interfaceinvoke $r16.<com.android.internal.telephony.ims.ImsServiceController$RebindRetry: long getMaximumDelay()>();

        $r17 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.os.HandlerThread mHandlerThread>;

        $r18 = virtualinvoke $r17.<android.os.HandlerThread: android.os.Looper getLooper()>();

        $r19 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Runnable mRestartImsServiceRunnable>;

        specialinvoke $r14.<com.android.internal.telephony.ExponentialBackoff: void <init>(long,long,int,android.os.Looper,java.lang.Runnable)>($l0, $l1, 2, $r18, $r19);

        r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff> = $r14;

        $r20 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.Context mContext>;

        $r21 = virtualinvoke $r20.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("permission");

        $r22 = (android.permission.PermissionManager) $r21;

        r0.<com.android.internal.telephony.ims.ImsServiceController: android.permission.PermissionManager mPermissionManager> = $r22;

        return;
    }

    public void <init>(android.content.Context, android.content.ComponentName, com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks, android.os.Handler, com.android.internal.telephony.ims.ImsServiceController$RebindRetry)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks r3;
        android.os.Handler r4;
        com.android.internal.telephony.ims.ImsServiceController$RebindRetry r5;
        android.os.HandlerThread $r6;
        java.util.HashSet $r7, $r9;
        java.util.concurrent.ConcurrentHashMap$KeySetView $r8;
        com.android.internal.telephony.LocalLog $r10;
        java.lang.Object $r11;
        com.android.internal.telephony.ims.ImsServiceController$1 $r12;
        com.android.internal.telephony.ims.ImsServiceController$2 $r13;
        com.android.internal.telephony.ims.ImsServiceController$3 $r14;
        com.android.internal.telephony.ExponentialBackoff $r15;
        long $l0, $l1;
        java.lang.Runnable $r16;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks;

        r4 := @parameter3: android.os.Handler;

        r5 := @parameter4: com.android.internal.telephony.ims.ImsServiceController$RebindRetry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new android.os.HandlerThread;

        specialinvoke $r6.<android.os.HandlerThread: void <init>(java.lang.String)>("ImsServiceControllerHandler");

        r0.<com.android.internal.telephony.ims.ImsServiceController: android.os.HandlerThread mHandlerThread> = $r6;

        r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBound> = 0;

        r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBinding> = 0;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.HashSet mImsFeatureBinders> = $r7;

        $r8 = staticinvoke <java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$KeySetView newKeySet()>();

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsStatusCallbacks> = $r8;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mFeatureStatusCallbacks> = $r9;

        $r10 = new com.android.internal.telephony.LocalLog;

        specialinvoke $r10.<com.android.internal.telephony.LocalLog: void <init>(int)>(10);

        r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.LocalLog mLocalLog> = $r10;

        $r11 = new java.lang.Object;

        specialinvoke $r11.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock> = $r11;

        $r12 = new com.android.internal.telephony.ims.ImsServiceController$1;

        specialinvoke $r12.<com.android.internal.telephony.ims.ImsServiceController$1: void <init>(com.android.internal.telephony.ims.ImsServiceController)>(r0);

        r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.ImsService$Listener mFeatureChangedListener> = $r12;

        $r13 = new com.android.internal.telephony.ims.ImsServiceController$2;

        specialinvoke $r13.<com.android.internal.telephony.ims.ImsServiceController$2: void <init>(com.android.internal.telephony.ims.ImsServiceController)>(r0);

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Runnable mRestartImsServiceRunnable> = $r13;

        $r14 = new com.android.internal.telephony.ims.ImsServiceController$3;

        specialinvoke $r14.<com.android.internal.telephony.ims.ImsServiceController$3: void <init>(com.android.internal.telephony.ims.ImsServiceController)>(r0);

        r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$RebindRetry mRebindRetry> = $r14;

        r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.Context mContext> = r1;

        r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName mComponentName> = r2;

        r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks mCallbacks> = r3;

        $r15 = new com.android.internal.telephony.ExponentialBackoff;

        $l0 = interfaceinvoke r5.<com.android.internal.telephony.ims.ImsServiceController$RebindRetry: long getStartDelay()>();

        $l1 = interfaceinvoke r5.<com.android.internal.telephony.ims.ImsServiceController$RebindRetry: long getMaximumDelay()>();

        $r16 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Runnable mRestartImsServiceRunnable>;

        specialinvoke $r15.<com.android.internal.telephony.ExponentialBackoff: void <init>(long,long,int,android.os.Handler,java.lang.Runnable)>($l0, $l1, 2, r4, $r16);

        r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff> = $r15;

        r0.<com.android.internal.telephony.ims.ImsServiceController: android.permission.PermissionManager mPermissionManager> = null;

        return;
    }

    static com.android.internal.telephony.ExponentialBackoff access$000(com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        com.android.internal.telephony.ExponentialBackoff $r1;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff>;

        return $r1;
    }

    static boolean access$100(com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        $z0 = r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBound>;

        return $z0;
    }

    static void access$1000(com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void cleanUpService()>();

        return;
    }

    static boolean access$102(com.android.internal.telephony.ims.ImsServiceController, boolean)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBound> = z0;

        return z0;
    }

    static void access$1300(com.android.internal.telephony.ims.ImsServiceController, int, int, int)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0, i1, i2;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void sendImsFeatureStatusChanged(int,int,int)>(i0, i1, i2);

        return;
    }

    static boolean access$202(com.android.internal.telephony.ims.ImsServiceController, boolean)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBinding> = z0;

        return z0;
    }

    static com.android.internal.telephony.LocalLog access$300(com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        com.android.internal.telephony.LocalLog $r1;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.LocalLog mLocalLog>;

        return $r1;
    }

    static java.util.Set access$400(com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.util.Set $r1;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        return $r1;
    }

    static void access$500(com.android.internal.telephony.ims.ImsServiceController, android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair) throws android.os.RemoteException
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r1;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        r1 := @parameter1: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void addImsServiceFeature(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)>(r1);

        return;
    }

    static void access$600(com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void startDelayedRebindToService()>();

        return;
    }

    static com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection access$700(com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection $r1;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection mImsServiceConnection>;

        return $r1;
    }

    static com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks access$800(com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks $r1;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks mCallbacks>;

        return $r1;
    }

    static void access$900(com.android.internal.telephony.ims.ImsServiceController)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;

        r0 := @parameter0: com.android.internal.telephony.ims.ImsServiceController;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void cleanupAllFeatures()>();

        return;
    }

    private void addImsFeatureBinder(int, int, android.os.IInterface)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0, i1;
        android.os.IInterface r1;
        com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer $r2;
        java.util.HashSet $r3;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.IInterface;

        $r3 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.HashSet mImsFeatureBinders>;

        $r2 = new com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer;

        specialinvoke $r2.<com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer: void <init>(com.android.internal.telephony.ims.ImsServiceController,int,int,android.os.IInterface)>(r0, i0, i1, r1);

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r2);

        return;
    }

    private void addImsServiceFeature(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair) throws android.os.RemoteException
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r1;
        boolean $z0;
        com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks $r2, $r7;
        int $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback $r8;
        java.util.Set $r9;
        com.android.ims.internal.IImsFeatureStatusCallback $r10;
        android.os.IInterface r12;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 := @parameter0: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: boolean isServiceControllerAvailable()>();

        if $z0 == 0 goto label4;

        $r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks mCallbacks>;

        if $r2 != null goto label1;

        goto label4;

     label1:
        $i1 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        if $i1 == 0 goto label2;

        $r8 = new com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback;

        $i9 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i8 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        specialinvoke $r8.<com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback: void <init>(com.android.internal.telephony.ims.ImsServiceController,int,int)>(r0, $i9, $i8);

        $r9 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mFeatureStatusCallbacks>;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r8);

        $i10 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i11 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        $r10 = virtualinvoke $r8.<com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback: com.android.ims.internal.IImsFeatureStatusCallback getCallback()>();

        r12 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: android.os.IInterface createImsFeature(int,int,com.android.ims.internal.IImsFeatureStatusCallback)>($i10, $i11, $r10);

        $i13 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i12 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void addImsFeatureBinder(int,int,android.os.IInterface)>($i13, $i12, r12);

        goto label3;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("supports emergency calling on slot ");

        $i2 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsServiceController", $r6);

     label3:
        $r7 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks mCallbacks>;

        $i5 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i4 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        interfaceinvoke $r7.<com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks: void imsServiceFeatureCreated(int,int,com.android.internal.telephony.ims.ImsServiceController)>($i5, $i4, r0);

        $i7 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i6 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void sendImsFeatureCreatedCallback(int,int)>($i7, $i6);

        return;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsServiceController", "addImsServiceFeature called with null values.");

        return;
    }

    private void cleanUpService()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection mImsServiceConnection> = null;

        virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void setServiceController(android.os.IBinder)>(null);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void cleanupAllFeatures()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.lang.Object r1, $r3;
        java.util.Set $r2;
        boolean $z0;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair $r4;
        java.lang.Throwable $r5;
        java.util.Iterator r6;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        r6 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair) $r3;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void removeImsServiceFeature(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)>($r4);

     label3:
        goto label2;

     label4:
        virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void removeImsServiceFeatureCallbacks()>();

        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer getImsFeatureContainer(int, int)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0, i1;
        java.util.HashSet $r1;
        java.util.stream.Stream $r2, $r4;
        com.android.internal.telephony.ims._$$Lambda$ImsServiceController$IJrnXG2yhIaEC45D3nKBsljObu4 $r3;
        java.util.Optional $r5;
        java.lang.Object $r6;
        com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer $r7;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.HashSet mImsFeatureBinders>;

        $r2 = virtualinvoke $r1.<java.util.HashSet: java.util.stream.Stream stream()>();

        $r3 = new com.android.internal.telephony.ims._$$Lambda$ImsServiceController$IJrnXG2yhIaEC45D3nKBsljObu4;

        specialinvoke $r3.<com.android.internal.telephony.ims._$$Lambda$ImsServiceController$IJrnXG2yhIaEC45D3nKBsljObu4: void <init>(int,int)>(i0, i1);

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.Optional findFirst()>();

        $r6 = virtualinvoke $r5.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        $r7 = (com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer) $r6;

        return $r7;
    }

    private void grantPermissionsToService()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.lang.String r1, $r9, $r14;
        com.android.internal.telephony.ims.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' r3;
        android.content.ComponentName $r7, $r12, $r15;
        android.permission.PermissionManager $r16, r22;
        int $i1;
        java.lang.String[] $r17;
        java.lang.RuntimeException $r18;
        com.android.internal.telephony.LocalLog r19;
        android.os.UserHandle r23;
        java.lang.StringBuilder r25, r26;
        java.util.concurrent.CountDownLatch r27;
        com.android.internal.telephony.ims._$$Lambda$ImsServiceController$XdiUmHGfQNQ0jPoWWQq514P4lBw r28;
        java.util.concurrent.Executor r29;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r19 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.LocalLog mLocalLog>;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("grant permissions to ");

        $r7 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName getComponentName()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r9);

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Granting Runtime permissions to:");

        $r12 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName getComponentName()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsServiceController", $r14);

        $r15 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName mComponentName>;

        r1 = virtualinvoke $r15.<android.content.ComponentName: java.lang.String getPackageName()>();

     label1:
        $r16 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.permission.PermissionManager mPermissionManager>;

        if $r16 == null goto label2;

        r27 = new java.util.concurrent.CountDownLatch;

        specialinvoke r27.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r22 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.permission.PermissionManager mPermissionManager>;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r23 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        r3 = <com.android.internal.telephony.ims._$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo: com.android.internal.telephony.ims.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' INSTANCE>;

        r28 = new com.android.internal.telephony.ims._$$Lambda$ImsServiceController$XdiUmHGfQNQ0jPoWWQq514P4lBw;

        specialinvoke r28.<com.android.internal.telephony.ims._$$Lambda$ImsServiceController$XdiUmHGfQNQ0jPoWWQq514P4lBw: void <init>(java.util.concurrent.CountDownLatch)>(r27);

        $r17 = newarray (java.lang.String)[1];

        $r17[0] = r1;

        r29 = (java.util.concurrent.Executor) r3;

        virtualinvoke r22.<android.permission.PermissionManager: void grantDefaultPermissionsToEnabledImsServices(java.lang.String[],android.os.UserHandle,java.util.concurrent.Executor,java.util.function.Consumer)>($r17, r23, r29, r28);

        staticinvoke <com.android.internal.telephony.util.TelephonyUtils: void waitUntilReady(java.util.concurrent.CountDownLatch,long)>(r27, 15000L);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsServiceController", "Unable to grant permissions, binder died.");

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    static boolean lambda$getImsFeatureContainer$4(int, int, com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer)
    {
        int i0, i1, $i2, $i3;
        com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer r0;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer;

        $i2 = r0.<com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer: int slotId>;

        if $i2 != i0 goto label1;

        $i3 = r0.<com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer: int featureType>;

        if $i3 != i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static void lambda$grantPermissionsToService$1(java.util.concurrent.CountDownLatch, java.lang.Boolean)
    {
        java.util.concurrent.CountDownLatch r0;
        java.lang.Boolean r1;
        boolean $z0;

        r0 := @parameter0: java.util.concurrent.CountDownLatch;

        r1 := @parameter1: java.lang.Boolean;

        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<java.util.concurrent.CountDownLatch: void countDown()>();

        goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImsServiceController", "Failed to grant permissions to service.");

     label2:
        return;
    }

    static boolean lambda$removeImsFeatureBinder$3(int, int, com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer)
    {
        int i0, i1, $i2, $i3;
        com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer r0;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer;

        $i2 = r0.<com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer: int slotId>;

        if $i2 != i0 goto label1;

        $i3 = r0.<com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer: int featureType>;

        if $i3 != i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean lambda$removeImsServiceFeature$2(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair, com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback)
    {
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r0;
        com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback r1;
        int $i0, $i1, $i2, $i3;
        boolean z0;

        r0 := @parameter0: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        r1 := @parameter1: com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback;

        $i0 = staticinvoke <com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback: int access$1100(com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback)>(r1);

        $i1 = r0.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        if $i0 != $i1 goto label1;

        $i2 = staticinvoke <com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback: int access$1200(com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback)>(r1);

        $i3 = r0.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        if $i2 != $i3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean lambda$sanitizeFeatureConfig$0(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)
    {
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $i0 = r0.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void removeImsFeatureBinder(int, int)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0, i1;
        com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer r1;
        java.util.HashSet $r2, $r8;
        java.util.stream.Stream $r3, $r5;
        com.android.internal.telephony.ims._$$Lambda$ImsServiceController$ru5C8MVmVtDoF1EN3MmwgnNQDlY $r4;
        java.util.Optional $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.HashSet mImsFeatureBinders>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.stream.Stream stream()>();

        $r4 = new com.android.internal.telephony.ims._$$Lambda$ImsServiceController$ru5C8MVmVtDoF1EN3MmwgnNQDlY;

        specialinvoke $r4.<com.android.internal.telephony.ims._$$Lambda$ImsServiceController$ru5C8MVmVtDoF1EN3MmwgnNQDlY: void <init>(int,int)>(i0, i1);

        $r5 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.stream.Stream: java.util.Optional findFirst()>();

        $r7 = virtualinvoke $r6.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        r1 = (com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer) $r7;

        if r1 == null goto label1;

        $r8 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.HashSet mImsFeatureBinders>;

        virtualinvoke $r8.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    private void removeImsServiceFeature(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r1;
        int i0, i1, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12;
        boolean $z0;
        java.lang.StringBuilder $r2, $r13;
        java.lang.String $r5, $r18, $r21, $r23;
        java.util.Set $r6, $r11;
        java.util.stream.Stream $r7, $r9;
        com.android.internal.telephony.ims._$$Lambda$ImsServiceController$fEtONGgfrcxCK13hPNLVKSZN4aQ $r8;
        java.lang.Object $r10, $r17;
        android.os.RemoteException $r12;
        java.util.Map $r15;
        java.lang.Integer $r16;
        com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks r24;
        java.util.Optional r25;
        com.android.ims.internal.IImsFeatureStatusCallback r26;
        com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback r27;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 := @parameter0: android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: boolean isServiceControllerAvailable()>();

        if $z0 == 0 goto label12;

        r24 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks mCallbacks>;

        if r24 != null goto label01;

        goto label12;

     label01:
        $i4 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i3 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        interfaceinvoke r24.<com.android.internal.telephony.ims.ImsServiceController$ImsServiceControllerCallbacks: void imsServiceFeatureRemoved(int,int,com.android.internal.telephony.ims.ImsServiceController)>($i4, $i3, r0);

        $i5 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        if $i5 == 0 goto label10;

        $r6 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mFeatureStatusCallbacks>;

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.stream.Stream stream()>();

        $r8 = new com.android.internal.telephony.ims._$$Lambda$ImsServiceController$fEtONGgfrcxCK13hPNLVKSZN4aQ;

        specialinvoke $r8.<com.android.internal.telephony.ims._$$Lambda$ImsServiceController$fEtONGgfrcxCK13hPNLVKSZN4aQ: void <init>(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)>(r1);

        $r9 = interfaceinvoke $r7.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r8);

        r25 = interfaceinvoke $r9.<java.util.stream.Stream: java.util.Optional findFirst()>();

        r26 = null;

        $r10 = virtualinvoke r25.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        r27 = (com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback) $r10;

        if r27 == null goto label02;

        $r11 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mFeatureStatusCallbacks>;

        interfaceinvoke $r11.<java.util.Set: boolean remove(java.lang.Object)>(r27);

     label02:
        $i11 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i10 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void removeImsFeatureBinder(int,int)>($i11, $i10);

     label03:
        i0 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        i1 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

     label04:
        if r27 == null goto label06;

     label05:
        r26 = virtualinvoke r27.<com.android.internal.telephony.ims.ImsServiceController$ImsFeatureStatusCallback: com.android.ims.internal.IImsFeatureStatusCallback getCallback()>();

     label06:
        virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void removeImsFeature(int,int,com.android.ims.internal.IImsFeatureStatusCallback)>(i0, i1, r26);

     label07:
        goto label09;

     label08:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t remove feature {");

        $r15 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $i12 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        $r18 = (java.lang.String) $r17;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}, connection is down: ");

        $r21 = virtualinvoke $r12.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsServiceController", $r23);

     label09:
        goto label11;

     label10:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doesn\'t support emergency calling on slot ");

        $i6 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsServiceController", $r5);

     label11:
        $i9 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i8 = r1.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void sendImsFeatureRemovedCallback(int,int)>($i9, $i8);

        return;

     label12:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsServiceController", "removeImsServiceFeature called with null values.");

        return;

        catch android.os.RemoteException from label03 to label04 with label08;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch android.os.RemoteException from label06 to label07 with label08;
    }

    private void sanitizeFeatureConfig(java.util.Set)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.util.Set r1, $r9;
        java.util.Iterator r2;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r3, r12;
        java.util.stream.Stream $r4, $r6;
        com.android.internal.telephony.ims.'-$$Lambda$ImsServiceController$5k6RQOUDhDyYW5SSmzvGb6VniLs' $r5;
        java.util.stream.Collector $r7;
        java.lang.Object $r8, $r10;
        boolean $z0, $z1;
        int $i0;
        java.util.function.Predicate r13;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 := @parameter0: java.util.Set;

        $r4 = interfaceinvoke r1.<java.util.Set: java.util.stream.Stream stream()>();

        $r5 = <com.android.internal.telephony.ims._$$Lambda$ImsServiceController$5k6RQOUDhDyYW5SSmzvGb6VniLs: com.android.internal.telephony.ims.'-$$Lambda$ImsServiceController$5k6RQOUDhDyYW5SSmzvGb6VniLs' INSTANCE>;

        r13 = (java.util.function.Predicate) $r5;

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r13);

        $r7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toSet()>();

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r7);

        $r9 = (java.util.Set) $r8;

        r2 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair) $r10;

        r12 = new android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair;

        $i0 = r3.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        specialinvoke r12.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: void <init>(int,int)>($i0, 1);

        $z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r12);

        if $z1 != 0 goto label2;

        interfaceinvoke r1.<java.util.Set: boolean remove(java.lang.Object)>(r3);

     label2:
        goto label1;

     label3:
        return;
    }

    private void sendImsFeatureCreatedCallback(int, int)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0, i1;
        java.util.Iterator r1;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r8, $r10;
        com.android.ims.internal.IImsServiceFeatureCallback r11;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsStatusCallbacks>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.android.ims.internal.IImsServiceFeatureCallback) $r4;

     label2:
        interfaceinvoke r11.<com.android.ims.internal.IImsServiceFeatureCallback: void imsFeatureCreated(int,int)>(i0, i1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendImsFeatureCreatedCallback: Binder died, removing callback. Exception:");

        $r8 = virtualinvoke $r5.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsServiceController", $r10);

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

     label5:
        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void sendImsFeatureRemovedCallback(int, int)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0, i1;
        java.util.Iterator r1;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r8, $r10;
        com.android.ims.internal.IImsServiceFeatureCallback r11;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsStatusCallbacks>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.android.ims.internal.IImsServiceFeatureCallback) $r4;

     label2:
        interfaceinvoke r11.<com.android.ims.internal.IImsServiceFeatureCallback: void imsFeatureRemoved(int,int)>(i0, i1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendImsFeatureRemovedCallback: Binder died, removing callback. Exception:");

        $r8 = virtualinvoke $r5.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsServiceController", $r10);

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

     label5:
        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void sendImsFeatureStatusChanged(int, int, int)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0, i1, i2;
        java.util.Iterator r1;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r8, $r10;
        com.android.ims.internal.IImsServiceFeatureCallback r11;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r3 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsStatusCallbacks>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.android.ims.internal.IImsServiceFeatureCallback) $r4;

     label2:
        interfaceinvoke r11.<com.android.ims.internal.IImsServiceFeatureCallback: void imsStatusChanged(int,int,int)>(i0, i1, i2);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendImsFeatureStatusChanged: Binder died, removing callback. Exception:");

        $r8 = virtualinvoke $r5.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsServiceController", $r10);

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

     label5:
        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void startDelayedRebindToService()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        com.android.internal.telephony.ExponentialBackoff $r1;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff>;

        virtualinvoke $r1.<com.android.internal.telephony.ExponentialBackoff: void start()>();

        return;
    }

    public void addImsServiceFeatureCallback(com.android.ims.internal.IImsServiceFeatureCallback)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.util.Set $r1, $r2, $r3, $r4;
        boolean $z1, $z2;
        java.lang.Object $r5, r9;
        int $i0, $i1;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        com.android.ims.internal.IImsServiceFeatureCallback r8;
        java.util.HashSet r10;
        java.util.Iterator r11;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair r12;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r8 := @parameter0: com.android.ims.internal.IImsServiceFeatureCallback;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsStatusCallbacks>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r8);

        r9 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r9;

     label01:
        $r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        if $r2 == null goto label10;

        $r3 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label03;

     label02:
        goto label10;

     label03:
        r10 = new java.util.HashSet;

        $r4 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        specialinvoke r10.<java.util.HashSet: void <init>(java.util.Collection)>($r4);

        exitmonitor r9;

     label04:
        r11 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r5 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair) $r5;

        $i1 = r12.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int slotId>;

        $i0 = r12.<android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair: int featureType>;

        interfaceinvoke r8.<com.android.ims.internal.IImsServiceFeatureCallback: void imsFeatureCreated(int,int)>($i1, $i0);

     label06:
        goto label05;

     label07:
        goto label09;

     label08:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsServiceController", "addImsServiceFeatureCallback: exception notifying callback");

     label09:
        return;

     label10:
        exitmonitor r9;

     label11:
        return;

     label12:
        $r7 := @caughtexception;

     label13:
        exitmonitor r9;

     label14:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label04 to label05 with label08;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean bind(java.util.Set)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.lang.Object r1;
        java.lang.StringBuilder r2, r47, r49, r52, r53;
        boolean z0, $z1, $z2;
        java.lang.String $r3, $r7, $r11, $r18, $r23, $r29, $r34, $r40;
        android.content.ComponentName $r4, $r9, $r31;
        com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection $r12, r45;
        android.content.Context $r13;
        com.android.internal.telephony.ExponentialBackoff $r15, $r19, $r21, $r26, $r37;
        long $l1, $l2, $l3;
        java.lang.Exception $r20;
        java.lang.Throwable $r41;
        java.util.Set r42;
        android.content.Intent r43, r44;
        com.android.internal.telephony.LocalLog r46, r48, r51;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r42 := @parameter0: java.util.Set;

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBound>;

        if $z1 != 0 goto label10;

        $z2 = r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBinding>;

        if $z2 != 0 goto label10;

        r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBinding> = 1;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void sanitizeFeatureConfig(java.util.Set)>(r42);

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures> = r42;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void grantPermissionsToService()>();

        r43 = new android.content.Intent;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.String getServiceInterface()>();

        specialinvoke r43.<android.content.Intent: void <init>(java.lang.String)>($r3);

        $r4 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName mComponentName>;

        r44 = virtualinvoke r43.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r4);

        r45 = new com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection;

        specialinvoke r45.<com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection: void <init>(com.android.internal.telephony.ims.ImsServiceController)>(r0);

        r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection mImsServiceConnection> = r45;

        r46 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.LocalLog mLocalLog>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("binding ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r46.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r7);

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding ImsService:");

        $r9 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName mComponentName>;

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsServiceController", $r11);

     label02:
        $r13 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.Context mContext>;

        $r12 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection mImsServiceConnection>;

        z0 = virtualinvoke $r13.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r44, $r12, 67108929);

     label03:
        if z0 != 0 goto label05;

     label04:
        r48 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.LocalLog mLocalLog>;

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    binding failed, retrying in ");

        $r15 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff>;

        $l1 = virtualinvoke $r15.<com.android.internal.telephony.ExponentialBackoff: long getCurrentDelay()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mS");

        $r18 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r48.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r18);

        r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBinding> = 0;

        $r19 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff>;

        virtualinvoke $r19.<com.android.internal.telephony.ExponentialBackoff: void notifyFailed()>();

     label05:
        exitmonitor r1;

     label06:
        return z0;

     label07:
        $r20 := @caughtexception;

     label08:
        $r21 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff>;

        virtualinvoke $r21.<com.android.internal.telephony.ExponentialBackoff: void notifyFailed()>();

        r51 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.LocalLog mLocalLog>;

        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    binding exception=");

        $r23 = virtualinvoke $r20.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", retrying in ");

        $r26 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff>;

        $l2 = virtualinvoke $r26.<com.android.internal.telephony.ExponentialBackoff: long getCurrentDelay()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mS");

        $r29 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r51.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r29);

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error binding (");

        $r31 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName mComponentName>;

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") with exception: ");

        $r34 = virtualinvoke $r20.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rebinding in ");

        $r37 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff>;

        $l3 = virtualinvoke $r37.<com.android.internal.telephony.ExponentialBackoff: long getCurrentDelay()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r40 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImsServiceController", $r40);

        exitmonitor r1;

     label09:
        return 0;

     label10:
        exitmonitor r1;

     label11:
        return 0;

     label12:
        $r41 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r41;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Exception from label02 to label03 with label07;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Exception from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void changeImsServiceFeatures(java.util.Set) throws android.os.RemoteException
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.lang.Object r1, $r23, $r25;
        com.android.internal.telephony.LocalLog r2;
        java.util.Set $r3, $r5, $r12, $r20, $r21, $r22, r28;
        boolean $z0, $z1, $z3, $z5;
        java.lang.String $r10, $r19;
        android.content.ComponentName $r17;
        android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair $r24, $r26;
        java.lang.Throwable $r27;
        java.lang.StringBuilder r29, r30;
        java.util.HashSet r31, r32, r34;
        java.util.Iterator r33, r35;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r28 := @parameter0: java.util.Set;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void sanitizeFeatureConfig(java.util.Set)>(r28);

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean equals(java.lang.Object)>(r28);

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.LocalLog mLocalLog>;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Features changed (");

        $r5 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r10);

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Features changed (");

        $r12 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for ImsService: ");

        $r17 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName mComponentName>;

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsServiceController", $r19);

        r31 = new java.util.HashSet;

        $r20 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        specialinvoke r31.<java.util.HashSet: void <init>(java.util.Collection)>($r20);

        r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures> = r28;

        $z1 = r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBound>;

        if $z1 == 0 goto label09;

        r32 = new java.util.HashSet;

        $r21 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        specialinvoke r32.<java.util.HashSet: void <init>(java.util.Collection)>($r21);

        virtualinvoke r32.<java.util.HashSet: boolean removeAll(java.util.Collection)>(r31);

        r33 = virtualinvoke r32.<java.util.HashSet: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        $r25 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        $r26 = (android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair) $r25;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void addImsServiceFeature(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)>($r26);

     label05:
        goto label04;

     label06:
        r34 = new java.util.HashSet;

        specialinvoke r34.<java.util.HashSet: void <init>(java.util.Collection)>(r31);

        $r22 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        virtualinvoke r34.<java.util.HashSet: boolean removeAll(java.util.Collection)>($r22);

        r35 = virtualinvoke r34.<java.util.HashSet: java.util.Iterator iterator()>();

     label07:
        $z5 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label09;

        $r23 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        $r24 = (android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair) $r23;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void removeImsServiceFeature(android.telephony.ims.stub.ImsFeatureConfiguration$FeatureSlotPair)>($r24);

     label08:
        goto label07;

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r27 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r27;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    protected android.os.IInterface createImsFeature(int, int, com.android.ims.internal.IImsFeatureStatusCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0, i1;
        com.android.ims.internal.IImsFeatureStatusCallback r1;
        android.telephony.ims.aidl.IImsServiceController $r2, $r4;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        android.telephony.ims.aidl.IImsRcsFeature $r5;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.ims.internal.IImsFeatureStatusCallback;

        if i1 == 1 goto label2;

        if i1 == 2 goto label1;

        return null;

     label1:
        $r4 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController>;

        $r5 = interfaceinvoke $r4.<android.telephony.ims.aidl.IImsServiceController: android.telephony.ims.aidl.IImsRcsFeature createRcsFeature(int,com.android.ims.internal.IImsFeatureStatusCallback)>(i0, r1);

        return $r5;

     label2:
        $r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController>;

        $r3 = interfaceinvoke $r2.<android.telephony.ims.aidl.IImsServiceController: android.telephony.ims.aidl.IImsMmTelFeature createMmTelFeature(int,com.android.ims.internal.IImsFeatureStatusCallback)>(i0, r1);

        return $r3;
    }

    public void disableIms(int)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0;
        boolean $z0;
        android.telephony.ims.aidl.IImsServiceController $r1;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;
        java.lang.Throwable $r8;
        java.lang.Object r9;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

     label1:
        r9 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r9;

     label2:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: boolean isServiceControllerAvailable()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController>;

        interfaceinvoke $r1.<android.telephony.ims.aidl.IImsServiceController: void disableIms(int)>(i0);

     label3:
        exitmonitor r9;

     label4:
        goto label9;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor r9;

     label7:
        throw $r8;

     label8:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t disable IMS: ");

        $r5 = virtualinvoke $r2.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsServiceController", $r7);

     label9:
        return;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch android.os.RemoteException from label7 to label8 with label8;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.io.PrintWriter r1;
        com.android.internal.telephony.LocalLog $r2;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.LocalLog mLocalLog>;

        virtualinvoke $r2.<com.android.internal.telephony.LocalLog: void dump(java.io.PrintWriter)>(r1);

        return;
    }

    public void enableIms(int)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0;
        boolean $z0;
        android.telephony.ims.aidl.IImsServiceController $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r8;
        java.lang.Object r9;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

     label1:
        r9 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r9;

     label2:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: boolean isServiceControllerAvailable()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController>;

        interfaceinvoke $r1.<android.telephony.ims.aidl.IImsServiceController: void enableIms(int)>(i0);

     label3:
        exitmonitor r9;

     label4:
        goto label9;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r9;

     label7:
        throw $r2;

     label8:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t enable IMS: ");

        $r6 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsServiceController", $r8);

     label9:
        return;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch android.os.RemoteException from label7 to label8 with label8;
    }

    public android.content.ComponentName getComponentName()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        android.content.ComponentName $r1;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName mComponentName>;

        return $r1;
    }

    public android.telephony.ims.aidl.IImsConfig getConfig(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        android.telephony.ims.aidl.IImsServiceController $r2;
        java.lang.Throwable $r3;
        android.telephony.ims.aidl.IImsConfig r4;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: boolean isServiceControllerAvailable()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController>;

        r4 = interfaceinvoke $r2.<android.telephony.ims.aidl.IImsServiceController: android.telephony.ims.aidl.IImsConfig getConfig(int)>(i0);

     label2:
        goto label4;

     label3:
        r4 = null;

     label4:
        exitmonitor r1;

     label5:
        return r4;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public android.telephony.ims.aidl.IImsServiceController getImsServiceController()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        android.telephony.ims.aidl.IImsServiceController $r1;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController>;

        return $r1;
    }

    public android.telephony.ims.aidl.IImsMmTelFeature getMmTelFeature(int)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0;
        java.lang.Object r1;
        android.os.IInterface $r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer r7;
        java.lang.StringBuilder r8;
        android.telephony.ims.aidl.IImsMmTelFeature r9;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r7 = specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer getImsFeatureContainer(int,int)>(i0, 1);

     label2:
        if r7 != null goto label5;

     label3:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested null MMTelFeature on slot ");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsServiceController", $r5);

        exitmonitor r1;

     label4:
        return null;

     label5:
        $r2 = virtualinvoke r7.<com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer: android.os.IInterface resolve(java.lang.Class)>(class "Landroid/telephony/ims/aidl/IImsMmTelFeature;");

        r9 = (android.telephony.ims.aidl.IImsMmTelFeature) $r2;

        exitmonitor r1;

     label6:
        return r9;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.telephony.ims.aidl.IImsRcsFeature getRcsFeature(int)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0;
        java.lang.Object r1;
        android.os.IInterface $r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer r7;
        java.lang.StringBuilder r8;
        android.telephony.ims.aidl.IImsRcsFeature r9;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r7 = specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer getImsFeatureContainer(int,int)>(i0, 2);

     label2:
        if r7 != null goto label5;

     label3:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested null RcsFeature on slot ");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsServiceController", $r5);

        exitmonitor r1;

     label4:
        return null;

     label5:
        $r2 = virtualinvoke r7.<com.android.internal.telephony.ims.ImsServiceController$ImsFeatureContainer: android.os.IInterface resolve(java.lang.Class)>(class "Landroid/telephony/ims/aidl/IImsRcsFeature;");

        r9 = (android.telephony.ims.aidl.IImsRcsFeature) $r2;

        exitmonitor r1;

     label6:
        return r9;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public long getRebindDelay()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        com.android.internal.telephony.ExponentialBackoff $r1;
        long $l0;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff>;

        $l0 = virtualinvoke $r1.<com.android.internal.telephony.ExponentialBackoff: long getCurrentDelay()>();

        return $l0;
    }

    public android.telephony.ims.aidl.IImsRegistration getRegistration(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        android.telephony.ims.aidl.IImsServiceController $r2;
        java.lang.Throwable $r3;
        android.telephony.ims.aidl.IImsRegistration r4;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: boolean isServiceControllerAvailable()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController>;

        r4 = interfaceinvoke $r2.<android.telephony.ims.aidl.IImsServiceController: android.telephony.ims.aidl.IImsRegistration getRegistration(int)>(i0);

     label2:
        goto label4;

     label3:
        r4 = null;

     label4:
        exitmonitor r1;

     label5:
        return r4;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    protected java.lang.String getServiceInterface()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        return "android.telephony.ims.ImsService";
    }

    public boolean isBound()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBound>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected boolean isServiceControllerAvailable()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        android.telephony.ims.aidl.IImsServiceController $r1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    protected void notifyImsServiceReady() throws android.os.RemoteException
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.lang.Object r1;
        boolean $z0;
        android.telephony.ims.ImsService$Listener $r3;
        android.telephony.ims.aidl.IImsServiceController $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: boolean isServiceControllerAvailable()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImsServiceController", "notifyImsServiceReady");

        $r4 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController>;

        $r3 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.ImsService$Listener mFeatureChangedListener>;

        interfaceinvoke $r4.<android.telephony.ims.aidl.IImsServiceController: void setListener(android.telephony.ims.aidl.IImsServiceControllerListener)>($r3);

        $r5 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController>;

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsServiceController: void notifyImsServiceReadyForFeatureCreation()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected void removeImsFeature(int, int, com.android.ims.internal.IImsFeatureStatusCallback) throws android.os.RemoteException
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        int i0, i1;
        com.android.ims.internal.IImsFeatureStatusCallback r1;
        android.telephony.ims.aidl.IImsServiceController $r2;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.ims.internal.IImsFeatureStatusCallback;

        $r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController>;

        interfaceinvoke $r2.<android.telephony.ims.aidl.IImsServiceController: void removeImsFeature(int,int,com.android.ims.internal.IImsFeatureStatusCallback)>(i0, i1, r1);

        return;
    }

    public void removeImsServiceFeatureCallback(com.android.ims.internal.IImsServiceFeatureCallback)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        com.android.ims.internal.IImsServiceFeatureCallback r1;
        java.util.Set $r2;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 := @parameter0: com.android.ims.internal.IImsServiceFeatureCallback;

        $r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsStatusCallbacks>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void removeImsServiceFeatureCallbacks()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.util.Set $r1;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsStatusCallbacks>;

        interfaceinvoke $r1.<java.util.Set: void clear()>();

        return;
    }

    protected void setServiceController(android.os.IBinder)
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        android.os.IBinder r1;
        android.telephony.ims.aidl.IImsServiceController $r2;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.telephony.ims.aidl.IImsServiceController$Stub: android.telephony.ims.aidl.IImsServiceController asInterface(android.os.IBinder)>(r1);

        r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController mIImsServiceController> = $r2;

        return;
    }

    public void stopBackoffTimerForTesting()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        com.android.internal.telephony.ExponentialBackoff $r1;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        $r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff>;

        virtualinvoke $r1.<com.android.internal.telephony.ExponentialBackoff: void stop()>();

        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.lang.Object r1;
        android.content.ComponentName $r3;
        java.util.Set $r6;
        boolean $z0, $z1;
        android.telephony.ims.aidl.IImsServiceController $r13;
        long $l0;
        java.lang.Throwable $r18;
        java.lang.StringBuilder r19;
        java.lang.String r20;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ImsServiceController: componentName=");

        $r3 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName getComponentName()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", features=");

        $r6 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.util.Set mImsFeatures>;

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isBinding=");

        $z0 = r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBinding>;

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isBound=");

        $z1 = r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBound>;

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceController=");

        $r13 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: android.telephony.ims.aidl.IImsServiceController getImsServiceController()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rebindDelay=");

        $l0 = virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: long getRebindDelay()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r20 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r1;

     label2:
        return r20;

     label3:
        $r18 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r18;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unbind() throws android.os.RemoteException
    {
        com.android.internal.telephony.ims.ImsServiceController r0;
        java.lang.Object r1;
        com.android.internal.telephony.ExponentialBackoff $r2;
        com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection $r3, $r9;
        android.content.ComponentName $r5;
        java.lang.String $r7;
        com.android.internal.telephony.LocalLog $r8;
        android.content.Context $r10;
        java.lang.Throwable $r11;
        java.util.HashSet r12;
        java.lang.StringBuilder r13;

        r0 := @this: com.android.internal.telephony.ims.ImsServiceController;

        r1 = r0.<com.android.internal.telephony.ims.ImsServiceController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ExponentialBackoff mBackoff>;

        virtualinvoke $r2.<com.android.internal.telephony.ExponentialBackoff: void stop()>();

        $r3 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection mImsServiceConnection>;

        if $r3 != null goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r12 = new java.util.HashSet;

        specialinvoke r12.<java.util.HashSet: void <init>()>();

        virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void changeImsServiceFeatures(java.util.Set)>(r12);

        virtualinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void removeImsServiceFeatureCallbacks()>();

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding ImsService: ");

        $r5 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.ComponentName mComponentName>;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsServiceController", $r7);

        $r8 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.LocalLog mLocalLog>;

        virtualinvoke $r8.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("unbinding");

        $r10 = r0.<com.android.internal.telephony.ims.ImsServiceController: android.content.Context mContext>;

        $r9 = r0.<com.android.internal.telephony.ims.ImsServiceController: com.android.internal.telephony.ims.ImsServiceController$ImsServiceConnection mImsServiceConnection>;

        virtualinvoke $r10.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r9);

        r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBound> = 0;

        r0.<com.android.internal.telephony.ims.ImsServiceController: boolean mIsBinding> = 0;

        specialinvoke r0.<com.android.internal.telephony.ims.ImsServiceController: void cleanUpService()>();

        exitmonitor r1;

     label4:
        return;

     label5:
        $r11 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.ims.ImsServiceController: int REBIND_START_DELAY_MS> = 2000;

        <com.android.internal.telephony.ims.ImsServiceController: int REBIND_MAXIMUM_DELAY_MS> = 60000;

        <com.android.internal.telephony.ims.ImsServiceController: java.lang.String LOG_TAG> = "ImsServiceController";

        <com.android.internal.telephony.ims.ImsServiceController: long CHANGE_PERMISSION_TIMEOUT_MS> = 15000L;

        return;
    }
}
