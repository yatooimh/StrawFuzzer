public class com.android.internal.telephony.imsphone.ImsExternalConnection extends com.android.internal.telephony.Connection
{
    private static final java.lang.String CONFERENCE_PREFIX;
    private com.android.internal.telephony.imsphone.ImsExternalCall mCall;
    private int mCallId;
    private final android.content.Context mContext;
    private boolean mIsPullable;
    private final java.util.Set mListeners;
    private android.net.Uri mOriginalAddress;

    protected void <init>(com.android.internal.telephony.Phone, int, android.net.Uri, boolean)
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        com.android.internal.telephony.Phone r1;
        int i0, $i1;
        android.net.Uri r2;
        boolean z0;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.util.Set $r4;
        android.content.Context $r5;
        com.android.internal.telephony.imsphone.ImsExternalCall $r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        i0 := @parameter1: int;

        r2 := @parameter2: android.net.Uri;

        z0 := @parameter3: boolean;

        $i1 = virtualinvoke r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>(int)>($i1);

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(8, 0.9F, 1);

        $r4 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r3);

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: java.util.Set mListeners> = $r4;

        $r5 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: android.content.Context mContext> = $r5;

        $r6 = new com.android.internal.telephony.imsphone.ImsExternalCall;

        specialinvoke $r6.<com.android.internal.telephony.imsphone.ImsExternalCall: void <init>(com.android.internal.telephony.Phone,com.android.internal.telephony.imsphone.ImsExternalConnection)>(r1, r0);

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: com.android.internal.telephony.imsphone.ImsExternalCall mCall> = $r6;

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: int mCallId> = i0;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: void setExternalConnectionAddress(android.net.Uri)>(r2);

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: int mNumberPresentation> = 1;

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: boolean mIsPullable> = z0;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: void rebuildCapabilities()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: void setActive()>();

        return;
    }

    private void rebuildCapabilities()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        boolean $z0;
        byte b0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        b0 = 16;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: boolean mIsPullable>;

        if $z0 == 0 goto label1;

        b0 = 16 | 32;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: void setConnectionCapabilities(int)>(b0);

        return;
    }

    public void addListener(com.android.internal.telephony.imsphone.ImsExternalConnection$Listener)
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        com.android.internal.telephony.imsphone.ImsExternalConnection$Listener r1;
        java.util.Set $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsExternalConnection$Listener;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: java.util.Set mListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void cancelPostDial()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        return;
    }

    public void consultativeTransfer(com.android.internal.telephony.Connection) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        com.android.internal.telephony.Connection r1;
        com.android.internal.telephony.CallStateException $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        $r2 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r2.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("Transfer is not supported for external calls");

        throw $r2;
    }

    public void deflect(java.lang.String) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        java.lang.String r1;
        com.android.internal.telephony.CallStateException $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        r1 := @parameter0: java.lang.String;

        $r2 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r2.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("Deflect is not supported for external calls");

        throw $r2;
    }

    public com.android.internal.telephony.Call getCall()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        com.android.internal.telephony.imsphone.ImsExternalCall $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: com.android.internal.telephony.imsphone.ImsExternalCall mCall>;

        return $r1;
    }

    public int getCallId()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: int mCallId>;

        return $i0;
    }

    public long getDisconnectTime()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        return 0L;
    }

    public long getHoldDurationMillis()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        return 0L;
    }

    public int getNumberPresentation()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: int mNumberPresentation>;

        return $i0;
    }

    public int getPreciseDisconnectCause()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        return 0;
    }

    public com.android.internal.telephony.UUSInfo getUUSInfo()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        return null;
    }

    public java.lang.String getVendorDisconnectCause()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        return null;
    }

    public void hangup() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        return;
    }

    public boolean isMultiparty()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        return 0;
    }

    public void proceedAfterWaitChar()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        return;
    }

    public void proceedAfterWildChar(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void pullExternalCall()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        java.util.Iterator r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.internal.telephony.imsphone.ImsExternalConnection$Listener $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.internal.telephony.imsphone.ImsExternalConnection$Listener) $r3;

        interfaceinvoke $r4.<com.android.internal.telephony.imsphone.ImsExternalConnection$Listener: void onPullExternalCall(com.android.internal.telephony.imsphone.ImsExternalConnection)>(r0);

        goto label1;

     label2:
        return;
    }

    public void removeListener(com.android.internal.telephony.imsphone.ImsExternalConnection$Listener)
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        com.android.internal.telephony.imsphone.ImsExternalConnection$Listener r1;
        java.util.Set $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsExternalConnection$Listener;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: java.util.Set mListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void separate() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        return;
    }

    public void setActive()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        com.android.internal.telephony.imsphone.ImsExternalCall r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: com.android.internal.telephony.imsphone.ImsExternalCall mCall>;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsExternalCall: void setActive()>();

        return;
    }

    public void setExternalConnectionAddress(android.net.Uri)
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        android.net.Uri r1, $r4;
        java.lang.String $r2, $r3, $r5, $r6, $r8;
        boolean $z0, $z1;
        android.content.Context $r7;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        r1 := @parameter0: android.net.Uri;

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: android.net.Uri mOriginalAddress> = r1;

        $r2 = "sip";

        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r1.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("conf");

        if $z1 == 0 goto label1;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.String getString(int)>(17039819);

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: java.lang.String mCnapName> = $r8;

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: int mCnapNamePresentation> = 1;

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: java.lang.String mAddress> = "";

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: int mNumberPresentation> = 2;

        return;

     label1:
        $r4 = staticinvoke <android.telephony.PhoneNumberUtils: android.net.Uri convertSipUriToTelUri(android.net.Uri)>(r1);

        $r5 = virtualinvoke $r4.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: java.lang.String mAddress> = $r5;

        return;
    }

    public void setIsPullable(boolean)
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: boolean mIsPullable> = z0;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: void rebuildCapabilities()>();

        return;
    }

    public void setTerminated()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        com.android.internal.telephony.imsphone.ImsExternalCall r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: com.android.internal.telephony.imsphone.ImsExternalCall mCall>;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsExternalCall: void setTerminated()>();

        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        java.lang.StringBuilder $r2;
        int $i0;
        com.android.internal.telephony.imsphone.ImsExternalCall $r6, $r9;
        com.android.internal.telephony.Call$State $r7, $r8, $r10, $r11;
        java.lang.String $r15;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ImsExternalConnection dialogCallId:");

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: int mCallId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state:");

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: com.android.internal.telephony.imsphone.ImsExternalCall mCall>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsExternalCall: com.android.internal.telephony.Call$State getState()>();

        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r7 != $r8 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Active");

        goto label2;

     label1:
        $r9 = r0.<com.android.internal.telephony.imsphone.ImsExternalConnection: com.android.internal.telephony.imsphone.ImsExternalCall mCall>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsExternalCall: com.android.internal.telephony.Call$State getState()>();

        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if $r10 != $r11 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disconnected");

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public void transfer(java.lang.String, boolean) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsExternalConnection r0;
        java.lang.String r1;
        boolean z0;
        com.android.internal.telephony.CallStateException $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsExternalConnection;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r2.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("Transfer is not supported for external calls");

        throw $r2;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.imsphone.ImsExternalConnection: java.lang.String CONFERENCE_PREFIX> = "conf";

        return;
    }
}
