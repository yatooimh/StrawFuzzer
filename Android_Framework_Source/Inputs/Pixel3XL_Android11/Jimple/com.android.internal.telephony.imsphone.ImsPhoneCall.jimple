public class com.android.internal.telephony.imsphone.ImsPhoneCall extends com.android.internal.telephony.Call
{
    public static final java.lang.String CONTEXT_BACKGROUND;
    public static final java.lang.String CONTEXT_FOREGROUND;
    public static final java.lang.String CONTEXT_HANDOVER;
    public static final java.lang.String CONTEXT_RINGING;
    public static final java.lang.String CONTEXT_UNKNOWN;
    private static final boolean DBG;
    private static final boolean FORCE_DEBUG;
    private static final java.lang.String LOG_TAG;
    private static final boolean VDBG;
    private final java.lang.String mCallContext;
    private boolean mIsRingbackTonePlaying;
    com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner;

    static void <clinit>()
    {
        boolean $z0, $z1;

        <com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String LOG_TAG> = "ImsPhoneCall";

        <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean FORCE_DEBUG> = 0;

        <com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String CONTEXT_UNKNOWN> = "UK";

        <com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String CONTEXT_RINGING> = "RG";

        <com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String CONTEXT_HANDOVER> = "HO";

        <com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String CONTEXT_FOREGROUND> = "FG";

        <com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String CONTEXT_BACKGROUND> = "BG";

        $z0 = staticinvoke <com.android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("ImsPhoneCall", 3);

        <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean DBG> = $z0;

        $z1 = staticinvoke <com.android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("ImsPhoneCall", 2);

        <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean VDBG> = $z1;

        return;
    }

    void <init>()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke r0.<com.android.internal.telephony.Call: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean mIsRingbackTonePlaying> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String mCallContext> = "UK";

        return;
    }

    public void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r1;
        java.lang.String r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.telephony.Call: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean mIsRingbackTonePlaying> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner> = r1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String mCallContext> = r2;

        return;
    }

    static boolean isLocalTone(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsCallProfile $r1, $r2, $r4;
        android.telephony.ims.ImsStreamMediaProfile $r3, $r5;
        int $i0;
        boolean z0;

        r0 := @parameter0: com.android.ims.ImsCall;

        z0 = 0;

        if r0 == null goto label3;

        $r1 = virtualinvoke r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        if $r1 == null goto label3;

        $r2 = virtualinvoke r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        $r3 = $r2.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        if $r3 != null goto label1;

        goto label3;

     label1:
        $r4 = virtualinvoke r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        $r5 = $r4.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $i0 = $r5.<android.telephony.ims.ImsStreamMediaProfile: int mAudioDirection>;

        if $i0 != 0 goto label2;

        z0 = 1;

        goto label2;

     label2:
        return z0;

     label3:
        return 0;
    }

    private void takeOver(com.android.internal.telephony.imsphone.ImsPhoneCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0, r6;
        com.android.internal.telephony.Call$State $r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.internal.telephony.Connection $r4;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r5;
        java.util.Iterator r7;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r6 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCall;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: void copyConnectionFrom(com.android.internal.telephony.Call)>(r6);

        $r1 = r6.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState> = $r1;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        r7 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.internal.telephony.Connection) $r3;

        $r5 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r4;

        virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void changeParent(com.android.internal.telephony.imsphone.ImsPhoneCall)>(r0);

        goto label1;

     label2:
        return;
    }

    public void attach(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.Connection r1;
        boolean $z0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r10;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        $z0 = <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean VDBG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attach : ");

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String mCallContext>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conn = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneCall", $r10);

     label1:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearDisconnected()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: void addConnection(com.android.internal.telephony.Connection)>(r1);

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logState()>();

        return;
    }

    public void attach(com.android.internal.telephony.Connection, com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.Connection r1;
        com.android.internal.telephony.Call$State r2;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r9, $r11;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        $z0 = <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean VDBG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attach : ");

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String mCallContext>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state = ");

        $r9 = virtualinvoke r2.<com.android.internal.telephony.Call$State: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneCall", $r11);

     label1:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: void attach(com.android.internal.telephony.Connection)>(r1);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState> = r2;

        return;
    }

    public void attachFake(com.android.internal.telephony.Connection, com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.Connection r1;
        com.android.internal.telephony.Call$State r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: void attach(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r1, r2);

        return;
    }

    public boolean connectionDisconnected(com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.Call$State $r1, $r2, $r4, $r10, $r15, $r16;
        java.util.ArrayList $r3;
        boolean $z1, $z2, z3;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r12;
        java.lang.Object $r13;
        com.android.internal.telephony.Connection $r14;
        java.lang.Throwable $r17;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r18;
        java.util.Iterator r19;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r18 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        $r1 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if $r2 == $r1 goto label10;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        r19 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        z3 = 1;

        $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r13 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.android.internal.telephony.Connection) $r13;

        $r15 = virtualinvoke $r14.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>();

        $r16 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if $r15 == $r16 goto label02;

        z3 = 0;

        goto label03;

     label02:
        goto label01;

     label03:
        if z3 == 0 goto label10;

        entermonitor r0;

     label04:
        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState> = $r4;

        exitmonitor r0;

     label05:
        $z2 = <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean VDBG>;

        if $z2 == 0 goto label06;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connectionDisconnected : ");

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String mCallContext>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state = ");

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneCall", $r12);

     label06:
        return 1;

     label07:
        $r17 := @caughtexception;

     label08:
        exitmonitor r0;

     label09:
        throw $r17;

     label10:
        return 0;

        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void detach(com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        boolean $z0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r10;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $z0 = <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean VDBG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("detach : ");

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String mCallContext>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conn = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneCall", $r10);

     label1:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: void removeConnection(com.android.internal.telephony.Connection)>(r1);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearDisconnected()>();

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logState()>();

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r2;
        java.util.ArrayList $r3, $r7, $r11;
        boolean $z0, $z2, $z4;
        java.lang.Object $r4, $r8, $r12;
        com.android.internal.telephony.Connection $r5, $r9, $r13;
        java.lang.Throwable $r6;
        com.android.internal.telephony.CallStateException $r10;
        java.util.Iterator r14, r15, r17;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

     label1:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall)>(r0);

     label2:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        r14 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r4 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.internal.telephony.Connection) $r4;

        virtualinvoke $r5.<com.android.internal.telephony.Connection: boolean onDisconnect(int)>(14);

        goto label3;

     label4:
        $r6 := @caughtexception;

        $r7 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        r15 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r8 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.android.internal.telephony.Connection) $r8;

        virtualinvoke $r9.<com.android.internal.telephony.Connection: boolean onDisconnect(int)>(14);

        goto label5;

     label6:
        throw $r6;

     label7:
        $r10 := @caughtexception;

        $r11 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        r17 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label8:
        $z4 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label9;

        $r12 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (com.android.internal.telephony.Connection) $r12;

        virtualinvoke $r13.<com.android.internal.telephony.Connection: boolean onDisconnect(int)>(14);

        goto label8;

     label9:
        return;

        catch com.android.internal.telephony.CallStateException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.util.List getConferenceParticipants()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r2;
        boolean $z0;
        java.util.List $r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isConferenceEventPackageEnabled()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 != null goto label2;

        return null;

     label2:
        $r3 = virtualinvoke r1.<com.android.ims.ImsCall: java.util.List getConferenceParticipants()>();

        return $r3;
    }

    public java.util.ArrayList getConnections()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        $r1 = specialinvoke r0.<com.android.internal.telephony.Call: java.util.ArrayList getConnections()>();

        return $r1;
    }

    public com.android.internal.telephony.imsphone.ImsPhoneConnection getFirstConnection()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        java.util.ArrayList r1;
        int $i0;
        java.lang.Object $r2;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r2;

        return $r3;
    }

    com.android.internal.telephony.imsphone.ImsPhoneConnection getHandoverConnection()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.Connection $r1;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Connection getEarliestConnection()>();

        $r2 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r1;

        return $r2;
    }

    public com.android.ims.ImsCall getImsCall()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        com.android.ims.ImsCall r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneConnection getFirstConnection()>();

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

     label2:
        return r2;
    }

    public com.android.internal.telephony.Phone getPhone()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r1;
        com.android.internal.telephony.imsphone.ImsPhone $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone getPhone()>();

        return $r2;
    }

    public void hangup() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall)>(r0);

        return;
    }

    public void hangup(int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        int i0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall,int)>(r0, i0);

        return;
    }

    boolean isFull()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: int getConnectionsCount()>();

        if $i0 != 5 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isMultiparty()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.ims.ImsCall r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.ims.ImsCall: boolean isMultiparty()>();

        return $z0;
    }

    public void maybeStopRingback()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        boolean $z0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean mIsRingbackTonePlaying>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Phone getPhone()>();

        virtualinvoke $r1.<com.android.internal.telephony.Phone: void stopRingbackTone()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean mIsRingbackTonePlaying> = 0;

     label1:
        return;
    }

    void merge(com.android.internal.telephony.imsphone.ImsPhoneCall, com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0, r1;
        com.android.internal.telephony.Call$State r2;
        long l0, $l4;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r11;
        byte $b2;
        boolean $z0, $z1;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r12;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        r12 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneConnection getFirstConnection()>();

        if r12 == null goto label2;

        l0 = virtualinvoke r12.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long getConferenceConnectTime()>();

        $b2 = l0 cmp 0L;

        if $b2 <= 0 goto label1;

        virtualinvoke r12.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setConnectTime(long)>(l0);

        $l4 = virtualinvoke r12.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long getConnectTimeReal()>();

        virtualinvoke r12.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setConnectTimeReal(long)>($l4);

        goto label2;

     label1:
        $z0 = <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean DBG>;

        if $z0 == 0 goto label2;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneCall", "merge: conference connect time is 0");

     label2:
        $z1 = <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean DBG>;

        if $z1 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("merge(");

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String mCallContext>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneCall", $r11);

     label3:
        return;
    }

    public void onHangupLocal()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        java.util.ArrayList $r1;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.Call$State $r2, $r8, $r11;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r10;
        java.lang.Object $r12;
        com.android.internal.telephony.Connection $r13;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r14;
        java.lang.Throwable $r15;
        java.util.Iterator r16;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        r16 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (com.android.internal.telephony.Connection) $r12;

        $r14 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r13;

        virtualinvoke $r14.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onHangupLocal()>();

        goto label1;

     label2:
        entermonitor r0;

     label3:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z1 == 0 goto label4;

        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTING>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState> = $r11;

     label4:
        exitmonitor r0;

     label5:
        $z2 = <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean VDBG>;

        if $z2 == 0 goto label6;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onHangupLocal : ");

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String mCallContext>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state = ");

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneCall", $r10);

     label6:
        return;

     label7:
        $r15 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r15;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void setMute(boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        boolean z0;
        com.android.ims.ImsException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r8;
        com.android.ims.ImsCall r9;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        z0 := @parameter0: boolean;

        r8 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneConnection getFirstConnection()>();

        if r8 != null goto label1;

        r9 = null;

        goto label2;

     label1:
        r9 = virtualinvoke r8.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

     label2:
        if r9 == null goto label6;

     label3:
        virtualinvoke r9.<com.android.ims.ImsCall: void setMute(boolean)>(z0);

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setMute failed : ");

        $r5 = virtualinvoke $r2.<com.android.ims.ImsException: java.lang.String getMessage()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsPhoneCall", $r7);

     label6:
        return;

        catch com.android.ims.ImsException from label3 to label4 with label5;
    }

    public void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0, r9, r11;
        boolean $z0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r9 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCall;

        $z0 = <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean VDBG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("switchWith : switchCall = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" withCall = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneCall", $r7);

     label1:
        entermonitor class "Lcom/android/internal/telephony/imsphone/ImsPhoneCall;";

     label2:
        r11 = new com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke r11.<com.android.internal.telephony.imsphone.ImsPhoneCall: void <init>()>();

        specialinvoke r11.<com.android.internal.telephony.imsphone.ImsPhoneCall: void takeOver(com.android.internal.telephony.imsphone.ImsPhoneCall)>(r0);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: void takeOver(com.android.internal.telephony.imsphone.ImsPhoneCall)>(r9);

        specialinvoke r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: void takeOver(com.android.internal.telephony.imsphone.ImsPhoneCall)>(r11);

        exitmonitor class "Lcom/android/internal/telephony/imsphone/ImsPhoneCall;";

     label3:
        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logState()>();

        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor class "Lcom/android/internal/telephony/imsphone/ImsPhoneCall;";

     label6:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r8, $r12;
        com.android.internal.telephony.Call$State $r7;
        int $i0;
        java.lang.Object $r13;
        com.android.internal.telephony.Connection $r14;
        java.util.ArrayList r18;
        java.util.Iterator r19;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r18 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ImsPhoneCall ");

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String mCallContext>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state: ");

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.Call$State: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i0 = interfaceinvoke r18.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ERROR_MULTIPLE ");

     label1:
        r19 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.android.internal.telephony.Connection) $r13;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label2;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public boolean update(com.android.internal.telephony.imsphone.ImsPhoneConnection, com.android.ims.ImsCall, com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCall r0;
        com.android.internal.telephony.Call$State r1, $r2, $r3, $r11, $r14, r20, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r13;
        com.android.internal.telephony.Phone $r15, $r16, $r17;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r18;
        com.android.ims.ImsCall r19;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r18 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r19 := @parameter1: com.android.ims.ImsCall;

        r1 := @parameter2: com.android.internal.telephony.Call$State;

        z5 = 0;

        r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ALERTING>;

        if r1 != $r2 goto label2;

        $z1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean mIsRingbackTonePlaying>;

        if $z1 == 0 goto label1;

        $z4 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isLocalTone(com.android.ims.ImsCall)>(r19);

        if $z4 != 0 goto label1;

        $r17 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Phone getPhone()>();

        virtualinvoke $r17.<com.android.internal.telephony.Phone: void stopRingbackTone()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean mIsRingbackTonePlaying> = 0;

        goto label3;

     label1:
        $z2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean mIsRingbackTonePlaying>;

        if $z2 != 0 goto label3;

        $z3 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isLocalTone(com.android.ims.ImsCall)>(r19);

        if $z3 == 0 goto label3;

        $r16 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Phone getPhone()>();

        virtualinvoke $r16.<com.android.internal.telephony.Phone: void startRingbackTone()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean mIsRingbackTonePlaying> = 1;

        goto label3;

     label2:
        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean mIsRingbackTonePlaying>;

        if $z0 == 0 goto label3;

        $r15 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Phone getPhone()>();

        virtualinvoke $r15.<com.android.internal.telephony.Phone: void stopRingbackTone()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean mIsRingbackTonePlaying> = 0;

     label3:
        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        if r1 == $r21 goto label4;

        $r14 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if r1 == $r14 goto label4;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState> = r1;

        z5 = 1;

        goto label5;

     label4:
        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if r1 != $r3 goto label5;

        z5 = 1;

     label5:
        $z6 = <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean VDBG>;

        if $z6 == 0 goto label6;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update : ");

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String mCallContext>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --> ");

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneCall", $r13);

     label6:
        return z5;
    }
}
