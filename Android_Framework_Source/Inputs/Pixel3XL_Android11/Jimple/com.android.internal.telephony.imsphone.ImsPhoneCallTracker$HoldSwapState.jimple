final enum class com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState extends java.lang.Enum
{
    private static final com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState[] $VALUES;
    public static final enum com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState HOLDING_TO_ANSWER_INCOMING;
    public static final enum com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState HOLDING_TO_DIAL_OUTGOING;
    public static final enum com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState INACTIVE;
    public static final enum com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_RESUME_FOREGROUND_AFTER_FAILURE;
    public static final enum com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_SINGLE_CALL_HOLD;
    public static final enum com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_SINGLE_CALL_UNHOLD;
    public static final enum com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState SWAPPING_ACTIVE_AND_HELD;

    static void <clinit>()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState[] $r8;

        $r1 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState;

        specialinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: void <init>(java.lang.String,int)>("INACTIVE", 0);

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState INACTIVE> = $r1;

        $r2 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState;

        specialinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: void <init>(java.lang.String,int)>("PENDING_SINGLE_CALL_HOLD", 1);

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_SINGLE_CALL_HOLD> = $r2;

        $r3 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState;

        specialinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: void <init>(java.lang.String,int)>("PENDING_SINGLE_CALL_UNHOLD", 2);

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_SINGLE_CALL_UNHOLD> = $r3;

        $r4 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState;

        specialinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: void <init>(java.lang.String,int)>("SWAPPING_ACTIVE_AND_HELD", 3);

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState SWAPPING_ACTIVE_AND_HELD> = $r4;

        $r5 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState;

        specialinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: void <init>(java.lang.String,int)>("HOLDING_TO_ANSWER_INCOMING", 4);

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState HOLDING_TO_ANSWER_INCOMING> = $r5;

        $r6 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState;

        specialinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: void <init>(java.lang.String,int)>("PENDING_RESUME_FOREGROUND_AFTER_FAILURE", 5);

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_RESUME_FOREGROUND_AFTER_FAILURE> = $r6;

        $r7 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState;

        specialinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: void <init>(java.lang.String,int)>("HOLDING_TO_DIAL_OUTGOING", 6);

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState HOLDING_TO_DIAL_OUTGOING> = $r7;

        $r8 = newarray (com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState)[7];

        $r9 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState INACTIVE>;

        $r8[0] = $r9;

        $r10 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_SINGLE_CALL_HOLD>;

        $r8[1] = $r10;

        $r11 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_SINGLE_CALL_UNHOLD>;

        $r8[2] = $r11;

        $r12 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState SWAPPING_ACTIVE_AND_HELD>;

        $r8[3] = $r12;

        $r13 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState HOLDING_TO_ANSWER_INCOMING>;

        $r8[4] = $r13;

        $r14 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_RESUME_FOREGROUND_AFTER_FAILURE>;

        $r8[5] = $r14;

        $r8[6] = $r7;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState[] $VALUES> = $r8;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker$HoldSwapState;", r0);

        $r2 = (com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState) $r1;

        return $r2;
    }

    public static com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState[] values()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState[]) $r1;

        return $r2;
    }
}
