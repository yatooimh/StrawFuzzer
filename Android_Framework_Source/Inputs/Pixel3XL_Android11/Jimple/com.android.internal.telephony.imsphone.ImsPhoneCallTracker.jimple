public class com.android.internal.telephony.imsphone.ImsPhoneCallTracker extends com.android.internal.telephony.CallTracker implements com.android.internal.telephony.imsphone.ImsPullCall
{
    private static final boolean DBG;
    private static final int EVENT_ANSWER_WAITING_CALL;
    private static final int EVENT_CHECK_FOR_WIFI_HANDOVER;
    private static final int EVENT_DATA_ENABLED_CHANGED;
    private static final int EVENT_DIAL_PENDINGMO;
    private static final int EVENT_EXIT_ECBM_BEFORE_PENDINGMO;
    private static final int EVENT_HANGUP_PENDINGMO;
    private static final int EVENT_ON_FEATURE_CAPABILITY_CHANGED;
    private static final int EVENT_REDIAL_WIFI_E911_CALL;
    private static final int EVENT_REDIAL_WIFI_E911_TIMEOUT;
    private static final int EVENT_REDIAL_WITHOUT_RTT;
    private static final int EVENT_RESUME_NOW_FOREGROUND_CALL;
    private static final int EVENT_SUPP_SERVICE_INDICATION;
    private static final int EVENT_VT_DATA_USAGE_UPDATE;
    private static final boolean FORCE_VERBOSE_STATE_LOGGING;
    private static final int HANDOVER_TO_WIFI_TIMEOUT_MS;
    static final java.lang.String LOG_TAG;
    private static final int MAX_CALL_QUALITY_HISTORY;
    static final int MAX_CONNECTIONS;
    static final int MAX_CONNECTIONS_PER_CALL;
    private static final android.util.SparseIntArray PRECISE_CAUSE_MAP;
    private static final int TIMEOUT_HANGUP_PENDINGMO;
    private static final int TIMEOUT_PARTICIPANT_CONNECT_TIME_CACHE_MS;
    private static final int TIMEOUT_REDIAL_WIFI_E911_MS;
    private static final boolean VERBOSE_STATE_LOGGING;
    static final java.lang.String VERBOSE_STATE_TAG;
    private boolean mAllowAddCallDuringVideoCall;
    private boolean mAllowEmergencyVideoCalls;
    private boolean mAllowHoldingVideoCall;
    private boolean mAlwaysPlayRemoteHoldTone;
    private boolean mAutoRetryFailedWifiEmergencyCall;
    public com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall;
    private com.android.ims.ImsCall mCallExpectedToResume;
    private final java.util.Map mCallQualityMetrics;
    private final java.util.concurrent.ConcurrentLinkedQueue mCallQualityMetricsHistory;
    private boolean mCarrierConfigLoaded;
    private int mClirMode;
    private final android.telephony.ims.ProvisioningManager$Callback mConfigCallback;
    private java.util.ArrayList mConnections;
    private final java.util.concurrent.atomic.AtomicInteger mDefaultDialerUid;
    private boolean mDesiredMute;
    private boolean mDropVideoCallWhenAnsweringAudioCall;
    public com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall;
    public com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall;
    private boolean mHasAttemptedStartOfCallHandover;
    private com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState;
    private boolean mIgnoreDataEnabledChangedForVideoCalls;
    private com.android.ims.ImsCall$Listener mImsCallListener;
    private final android.telephony.ims.ImsMmTelManager$CapabilityCallback mImsCapabilityCallback;
    private com.android.ims.ImsConfigListener$Stub mImsConfigListener;
    private com.android.ims.ImsManager mImsManager;
    private final com.android.ims.FeatureConnector mImsManagerConnector;
    private java.util.Map mImsReasonCodeMap;
    private com.android.ims.ImsCall$Listener mImsUssdListener;
    private boolean mIsConferenceEventPackageEnabled;
    private boolean mIsDataEnabled;
    private boolean mIsInEmergencyCall;
    private boolean mIsMonitoringConnectivity;
    private boolean mIsViLteDataMetered;
    private com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs mLastDialArgs;
    private java.lang.String mLastDialString;
    private com.android.internal.telephony.metrics.TelephonyMetrics mMetrics;
    private android.telephony.ims.feature.MmTelFeature$MmTelCapabilities mMmTelCapabilities;
    private final com.android.internal.telephony.imsphone.ImsPhoneCallTracker$MmTelFeatureListener mMmTelFeatureListener;
    private android.net.ConnectivityManager$NetworkCallback mNetworkCallback;
    private boolean mNotifyHandoverVideoFromLTEToWifi;
    private boolean mNotifyHandoverVideoFromWifiToLTE;
    private boolean mNotifyVtHandoverToWifiFail;
    private int mOnHoldToneId;
    private boolean mOnHoldToneStarted;
    private final com.android.internal.telephony.LocalLog mOperationLocalLog;
    private int mPendingCallVideoState;
    private android.os.Bundle mPendingIntentExtras;
    private com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO;
    private android.os.Message mPendingUssd;
    com.android.internal.telephony.imsphone.ImsPhone mPhone;
    private final java.util.Map mPhoneNumAndConnTime;
    private com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy mPhoneNumberUtilsProxy;
    private java.util.List mPhoneStateListeners;
    private android.content.BroadcastReceiver mReceiver;
    private final com.android.internal.telephony.LocalLog mRegLocalLog;
    public com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall;
    private com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy mSharedPreferenceProxy;
    private boolean mShouldUpdateImsConfigOnDisconnect;
    private com.android.internal.telephony.Call$SrvccState mSrvccState;
    private com.android.internal.telephony.PhoneConstants$State mState;
    private boolean mSupportCepOnPeer;
    private boolean mSupportDowngradeVtToAudio;
    private boolean mSupportPauseVideo;
    private boolean mSwitchingFgAndBgCalls;
    private java.lang.Object mSyncHold;
    private boolean mTreatDowngradedVideoCallsAsVideoCalls;
    private final java.util.Queue mUnknownPeerConnTime;
    private com.android.ims.ImsCall mUssdSession;
    private com.android.ims.ImsUtInterface mUtInterface;
    private com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants;
    private com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants;
    private final java.util.HashMap mVtDataUsageMap;
    private final com.android.internal.telephony.imsphone.ImsPhoneCallTracker$VtDataUsageProvider mVtDataUsageProvider;
    private volatile android.net.NetworkStats mVtDataUsageSnapshot;
    private volatile android.net.NetworkStats mVtDataUsageUidSnapshot;
    private int pendingCallClirMode;
    private boolean pendingCallInEcm;

    static void <clinit>()
    {
        boolean $z0;
        android.util.SparseIntArray $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String VERBOSE_STATE_TAG> = "IPCTState";

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int TIMEOUT_REDIAL_WIFI_E911_MS> = 10000;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int TIMEOUT_PARTICIPANT_CONNECT_TIME_CACHE_MS> = 60000;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int TIMEOUT_HANGUP_PENDINGMO> = 500;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int MAX_CONNECTIONS_PER_CALL> = 5;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int MAX_CONNECTIONS> = 7;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int MAX_CALL_QUALITY_HISTORY> = 10;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String LOG_TAG> = "ImsPhoneCallTracker";

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int HANDOVER_TO_WIFI_TIMEOUT_MS> = 60000;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean FORCE_VERBOSE_STATE_LOGGING> = 0;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_VT_DATA_USAGE_UPDATE> = 22;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_SUPP_SERVICE_INDICATION> = 27;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_RESUME_NOW_FOREGROUND_CALL> = 31;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_REDIAL_WITHOUT_RTT> = 32;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_REDIAL_WIFI_E911_TIMEOUT> = 29;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_REDIAL_WIFI_E911_CALL> = 28;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_ON_FEATURE_CAPABILITY_CHANGED> = 26;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_HANGUP_PENDINGMO> = 18;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_EXIT_ECBM_BEFORE_PENDINGMO> = 21;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_DIAL_PENDINGMO> = 20;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_DATA_ENABLED_CHANGED> = 23;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_CHECK_FOR_WIFI_HANDOVER> = 25;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_ANSWER_WAITING_CALL> = 30;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean DBG> = 1;

        $z0 = staticinvoke <com.android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("IPCTState", 2);

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean VERBOSE_STATE_LOGGING> = $z0;

        $r1 = new android.util.SparseIntArray;

        specialinvoke $r1.<android.util.SparseIntArray: void <init>()>();

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP> = $r1;

        virtualinvoke $r1.<android.util.SparseIntArray: void append(int,int)>(101, 1200);

        $r2 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void append(int,int)>(102, 1201);

        $r3 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r3.<android.util.SparseIntArray: void append(int,int)>(103, 1202);

        $r4 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r4.<android.util.SparseIntArray: void append(int,int)>(106, 1203);

        $r5 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r5.<android.util.SparseIntArray: void append(int,int)>(107, 1204);

        $r6 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r6.<android.util.SparseIntArray: void append(int,int)>(108, 16);

        $r7 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r7.<android.util.SparseIntArray: void append(int,int)>(111, 1205);

        $r8 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r8.<android.util.SparseIntArray: void append(int,int)>(112, 1206);

        $r9 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r9.<android.util.SparseIntArray: void append(int,int)>(121, 1207);

        $r10 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r10.<android.util.SparseIntArray: void append(int,int)>(122, 1208);

        $r11 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r11.<android.util.SparseIntArray: void append(int,int)>(123, 1209);

        $r12 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r12.<android.util.SparseIntArray: void append(int,int)>(124, 1210);

        $r13 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r13.<android.util.SparseIntArray: void append(int,int)>(131, 1211);

        $r14 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r14.<android.util.SparseIntArray: void append(int,int)>(132, 1212);

        $r15 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r15.<android.util.SparseIntArray: void append(int,int)>(141, 1213);

        $r16 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r16.<android.util.SparseIntArray: void append(int,int)>(143, 1214);

        $r17 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r17.<android.util.SparseIntArray: void append(int,int)>(144, 1215);

        $r18 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r18.<android.util.SparseIntArray: void append(int,int)>(145, 1216);

        $r19 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r19.<android.util.SparseIntArray: void append(int,int)>(146, 1217);

        $r20 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r20.<android.util.SparseIntArray: void append(int,int)>(147, 1218);

        $r21 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r21.<android.util.SparseIntArray: void append(int,int)>(148, 1219);

        $r22 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r22.<android.util.SparseIntArray: void append(int,int)>(149, 1220);

        $r23 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r23.<android.util.SparseIntArray: void append(int,int)>(201, 1221);

        $r24 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r24.<android.util.SparseIntArray: void append(int,int)>(202, 1222);

        $r25 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r25.<android.util.SparseIntArray: void append(int,int)>(203, 1223);

        $r26 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r26.<android.util.SparseIntArray: void append(int,int)>(241, 241);

        $r27 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r27.<android.util.SparseIntArray: void append(int,int)>(321, 1300);

        $r28 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r28.<android.util.SparseIntArray: void append(int,int)>(331, 1310);

        $r29 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r29.<android.util.SparseIntArray: void append(int,int)>(332, 1311);

        $r30 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r30.<android.util.SparseIntArray: void append(int,int)>(333, 1312);

        $r31 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r31.<android.util.SparseIntArray: void append(int,int)>(334, 1313);

        $r32 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r32.<android.util.SparseIntArray: void append(int,int)>(335, 1314);

        $r33 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r33.<android.util.SparseIntArray: void append(int,int)>(336, 1315);

        $r34 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r34.<android.util.SparseIntArray: void append(int,int)>(337, 1316);

        $r35 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r35.<android.util.SparseIntArray: void append(int,int)>(338, 1317);

        $r36 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r36.<android.util.SparseIntArray: void append(int,int)>(339, 1318);

        $r37 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r37.<android.util.SparseIntArray: void append(int,int)>(340, 1319);

        $r38 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r38.<android.util.SparseIntArray: void append(int,int)>(341, 1320);

        $r39 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r39.<android.util.SparseIntArray: void append(int,int)>(342, 1321);

        $r40 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r40.<android.util.SparseIntArray: void append(int,int)>(343, 1322);

        $r41 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r41.<android.util.SparseIntArray: void append(int,int)>(351, 1330);

        $r42 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r42.<android.util.SparseIntArray: void append(int,int)>(352, 1331);

        $r43 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r43.<android.util.SparseIntArray: void append(int,int)>(353, 1332);

        $r44 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r44.<android.util.SparseIntArray: void append(int,int)>(354, 1333);

        $r45 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r45.<android.util.SparseIntArray: void append(int,int)>(361, 1340);

        $r46 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r46.<android.util.SparseIntArray: void append(int,int)>(362, 1341);

        $r47 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r47.<android.util.SparseIntArray: void append(int,int)>(363, 1342);

        $r48 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r48.<android.util.SparseIntArray: void append(int,int)>(364, 1343);

        $r49 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r49.<android.util.SparseIntArray: void append(int,int)>(401, 1400);

        $r50 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r50.<android.util.SparseIntArray: void append(int,int)>(402, 1401);

        $r51 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r51.<android.util.SparseIntArray: void append(int,int)>(403, 1402);

        $r52 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r52.<android.util.SparseIntArray: void append(int,int)>(404, 1403);

        $r53 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r53.<android.util.SparseIntArray: void append(int,int)>(501, 1500);

        $r54 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r54.<android.util.SparseIntArray: void append(int,int)>(502, 1501);

        $r55 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r55.<android.util.SparseIntArray: void append(int,int)>(503, 1502);

        $r56 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r56.<android.util.SparseIntArray: void append(int,int)>(504, 1503);

        $r57 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r57.<android.util.SparseIntArray: void append(int,int)>(505, 1504);

        $r58 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r58.<android.util.SparseIntArray: void append(int,int)>(506, 1505);

        $r59 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r59.<android.util.SparseIntArray: void append(int,int)>(510, 1510);

        $r60 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r60.<android.util.SparseIntArray: void append(int,int)>(801, 1800);

        $r61 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r61.<android.util.SparseIntArray: void append(int,int)>(802, 1801);

        $r62 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r62.<android.util.SparseIntArray: void append(int,int)>(803, 1802);

        $r63 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r63.<android.util.SparseIntArray: void append(int,int)>(804, 1803);

        $r64 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r64.<android.util.SparseIntArray: void append(int,int)>(821, 1804);

        $r65 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r65.<android.util.SparseIntArray: void append(int,int)>(901, 1900);

        $r66 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r66.<android.util.SparseIntArray: void append(int,int)>(902, 1901);

        $r67 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r67.<android.util.SparseIntArray: void append(int,int)>(1100, 2000);

        $r68 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r68.<android.util.SparseIntArray: void append(int,int)>(1014, 2100);

        $r69 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r69.<android.util.SparseIntArray: void append(int,int)>(1015, 2101);

        $r70 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r70.<android.util.SparseIntArray: void append(int,int)>(1016, 2102);

        $r71 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r71.<android.util.SparseIntArray: void append(int,int)>(1201, 2300);

        $r72 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r72.<android.util.SparseIntArray: void append(int,int)>(1202, 2301);

        $r73 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r73.<android.util.SparseIntArray: void append(int,int)>(1203, 2302);

        $r74 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r74.<android.util.SparseIntArray: void append(int,int)>(1300, 2400);

        $r75 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r75.<android.util.SparseIntArray: void append(int,int)>(1400, 2500);

        $r76 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r76.<android.util.SparseIntArray: void append(int,int)>(1401, 2501);

        $r77 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r77.<android.util.SparseIntArray: void append(int,int)>(1402, 2502);

        $r78 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r78.<android.util.SparseIntArray: void append(int,int)>(1403, 2503);

        $r79 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r79.<android.util.SparseIntArray: void append(int,int)>(1404, 2504);

        $r80 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r80.<android.util.SparseIntArray: void append(int,int)>(1405, 2505);

        $r81 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r81.<android.util.SparseIntArray: void append(int,int)>(1406, 2506);

        $r82 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r82.<android.util.SparseIntArray: void append(int,int)>(1407, 2507);

        $r83 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r83.<android.util.SparseIntArray: void append(int,int)>(1500, 247);

        $r84 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r84.<android.util.SparseIntArray: void append(int,int)>(1501, 249);

        $r85 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r85.<android.util.SparseIntArray: void append(int,int)>(1502, 250);

        $r86 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r86.<android.util.SparseIntArray: void append(int,int)>(1503, 251);

        $r87 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r87.<android.util.SparseIntArray: void append(int,int)>(1504, 252);

        $r88 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r88.<android.util.SparseIntArray: void append(int,int)>(1505, 253);

        $r89 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r89.<android.util.SparseIntArray: void append(int,int)>(1506, 254);

        $r90 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r90.<android.util.SparseIntArray: void append(int,int)>(1507, 255);

        $r91 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r91.<android.util.SparseIntArray: void append(int,int)>(1508, 256);

        $r92 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r92.<android.util.SparseIntArray: void append(int,int)>(1509, 257);

        $r93 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r93.<android.util.SparseIntArray: void append(int,int)>(1510, 258);

        $r94 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r94.<android.util.SparseIntArray: void append(int,int)>(1511, 259);

        $r95 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r95.<android.util.SparseIntArray: void append(int,int)>(1512, 260);

        $r96 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r96.<android.util.SparseIntArray: void append(int,int)>(1513, 261);

        $r97 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r97.<android.util.SparseIntArray: void append(int,int)>(1515, 1);

        $r98 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r98.<android.util.SparseIntArray: void append(int,int)>(61441, 61441);

        $r99 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r99.<android.util.SparseIntArray: void append(int,int)>(61442, 61442);

        $r100 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r100.<android.util.SparseIntArray: void append(int,int)>(61443, 61443);

        $r101 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r101.<android.util.SparseIntArray: void append(int,int)>(61444, 61444);

        $r102 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r102.<android.util.SparseIntArray: void append(int,int)>(61445, 61445);

        $r103 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r103.<android.util.SparseIntArray: void append(int,int)>(61446, 61446);

        $r104 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r104.<android.util.SparseIntArray: void append(int,int)>(61447, 61447);

        $r105 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r105.<android.util.SparseIntArray: void append(int,int)>(61448, 61448);

        $r106 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r106.<android.util.SparseIntArray: void append(int,int)>(61449, 61449);

        $r107 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r107.<android.util.SparseIntArray: void append(int,int)>(61450, 61450);

        $r108 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r108.<android.util.SparseIntArray: void append(int,int)>(61451, 61451);

        $r109 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r109.<android.util.SparseIntArray: void append(int,int)>(61452, 61452);

        $r110 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r110.<android.util.SparseIntArray: void append(int,int)>(61453, 61453);

        $r111 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r111.<android.util.SparseIntArray: void append(int,int)>(61454, 61454);

        $r112 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        virtualinvoke $r112.<android.util.SparseIntArray: void append(int,int)>(61455, 61455);

        return;
    }

    public void <init>(com.android.internal.telephony.imsphone.ImsPhone)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone r1;
        android.content.Context $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhone;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.util.concurrent.Executor getMainExecutor()>();

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void <init>(com.android.internal.telephony.imsphone.ImsPhone,java.util.concurrent.Executor)>(r1, $r3);

        return;
    }

    public void <init>(com.android.internal.telephony.imsphone.ImsPhone, java.util.concurrent.Executor)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.concurrent.Executor r1;
        long l0;
        com.android.internal.telephony.PhoneConstants$State $r21;
        com.android.internal.telephony.Call$SrvccState $r22;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState $r23;
        com.android.internal.telephony.imsphone.'-$$Lambda$ImsPhoneCallTracker$Zw03itjXT6-LrhiYuD-9nKFg2Wg' $r26;
        com.android.internal.telephony.imsphone.'-$$Lambda$ImsPhoneCallTracker$QlPVd_3u4_verjHUDnkn6zaSe54' $r27;
        com.android.internal.telephony.metrics.TelephonyMetrics $r35;
        com.android.internal.telephony.imsphone.ImsPhone $r37, $r41, $r42, $r45, $r48, $r54, r62;
        android.content.Context $r38, $r46, $r50, $r55, $r60;
        android.content.BroadcastReceiver $r39;
        int $i1, $i2, $i3;
        com.android.internal.telephony.Phone $r43;
        com.android.internal.telephony.dataconnection.DataEnabledSettings $r44;
        java.lang.Object $r47, $r56, r84;
        java.util.concurrent.atomic.AtomicInteger $r49, r83;
        java.lang.String $r51;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$VtDataUsageProvider $r57, r82;
        android.app.usage.NetworkStatsManager $r58;
        android.telecom.TelecomManager r64;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities r66;
        java.util.concurrent.ConcurrentHashMap r67, r80;
        java.util.concurrent.ConcurrentLinkedQueue r68;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$MmTelFeatureListener r69;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$1 r70;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$2 r71;
        java.util.ArrayList r72, r85;
        com.android.internal.telephony.RegistrantList r73, r74;
        com.android.internal.telephony.imsphone.ImsPhoneCall r75, r76, r77, r78;
        java.util.HashMap r79;
        java.util.concurrent.LinkedBlockingQueue r81;
        android.util.ArrayMap r86;
        com.android.internal.telephony.LocalLog r87, r88;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4 r89;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$5 r90;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$6 r91;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$7 r92;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$8 r93;
        android.content.IntentFilter r94;
        android.net.NetworkStats r95, r96;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3 r97;
        com.android.ims.FeatureConnector r98;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy r99;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy r100;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r62 := @parameter0: com.android.internal.telephony.imsphone.ImsPhone;

        r1 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<com.android.internal.telephony.CallTracker: void <init>()>();

        r66 = new android.telephony.ims.feature.MmTelFeature$MmTelCapabilities;

        specialinvoke r66.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities mMmTelCapabilities> = r66;

        r67 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke r67.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mCallQualityMetrics> = r67;

        r68 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke r68.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.ConcurrentLinkedQueue mCallQualityMetricsHistory> = r68;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mCarrierConfigLoaded> = 0;

        r69 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$MmTelFeatureListener;

        specialinvoke r69.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$MmTelFeatureListener: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker,com.android.internal.telephony.imsphone.ImsPhoneCallTracker$1)>(r0, null);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$MmTelFeatureListener mMmTelFeatureListener> = r69;

        r70 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$1;

        specialinvoke r70.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$1: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.content.BroadcastReceiver mReceiver> = r70;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsMonitoringConnectivity> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsConferenceEventPackageEnabled> = 1;

        r71 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$2;

        specialinvoke r71.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$2: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.ConnectivityManager$NetworkCallback mNetworkCallback> = r71;

        r72 = new java.util.ArrayList;

        specialinvoke r72.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections> = r72;

        r73 = new com.android.internal.telephony.RegistrantList;

        specialinvoke r73.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants> = r73;

        r74 = new com.android.internal.telephony.RegistrantList;

        specialinvoke r74.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants> = r74;

        r75 = new com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke r75.<com.android.internal.telephony.imsphone.ImsPhoneCall: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker,java.lang.String)>(r0, "RG");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall> = r75;

        r76 = new com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke r76.<com.android.internal.telephony.imsphone.ImsPhoneCall: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker,java.lang.String)>(r0, "FG");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall> = r76;

        r77 = new com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke r77.<com.android.internal.telephony.imsphone.ImsPhoneCall: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker,java.lang.String)>(r0, "BG");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall> = r77;

        r78 = new com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke r78.<com.android.internal.telephony.imsphone.ImsPhoneCall: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker,java.lang.String)>(r0, "HO");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall> = r78;

        r79 = new java.util.HashMap;

        specialinvoke r79.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.HashMap mVtDataUsageMap> = r79;

        r80 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke r80.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mPhoneNumAndConnTime> = r80;

        r81 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke r81.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Queue mUnknownPeerConnTime> = r81;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageSnapshot> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageUidSnapshot> = null;

        r82 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$VtDataUsageProvider;

        specialinvoke r82.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$VtDataUsageProvider: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$VtDataUsageProvider mVtDataUsageProvider> = r82;

        r83 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke r83.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(-1);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.atomic.AtomicInteger mDefaultDialerUid> = r83;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mClirMode> = 0;

        r84 = new java.lang.Object;

        specialinvoke r84.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.Object mSyncHold> = r84;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Message mPendingUssd> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mDesiredMute> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mOnHoldToneStarted> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mOnHoldToneId> = -1;

        $r21 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r21;

        $r22 = <com.android.internal.telephony.Call$SrvccState: com.android.internal.telephony.Call$SrvccState NONE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.Call$SrvccState mSrvccState> = $r22;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsInEmergencyCall> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsDataEnabled> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean pendingCallInEcm> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSwitchingFgAndBgCalls> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mCallExpectedToResume> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowEmergencyVideoCalls> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIgnoreDataEnabledChangedForVideoCalls> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsViLteDataMetered> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAlwaysPlayRemoteHoldTone> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAutoRetryFailedWifiEmergencyCall> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportCepOnPeer> = 1;

        $r23 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState INACTIVE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState> = $r23;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String mLastDialString> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs mLastDialArgs> = null;

        r85 = new java.util.ArrayList;

        specialinvoke r85.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.List mPhoneStateListeners> = r85;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mTreatDowngradedVideoCallsAsVideoCalls> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mDropVideoCallWhenAnsweringAudioCall> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowAddCallDuringVideoCall> = 1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowHoldingVideoCall> = 1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyVtHandoverToWifiFail> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportDowngradeVtToAudio> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyHandoverVideoFromWifiToLTE> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyHandoverVideoFromLTEToWifi> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mHasAttemptedStartOfCallHandover> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportPauseVideo> = 0;

        r86 = new android.util.ArrayMap;

        specialinvoke r86.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mImsReasonCodeMap> = r86;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mShouldUpdateImsConfigOnDisconnect> = 0;

        $r26 = <com.android.internal.telephony.imsphone._$$Lambda$ImsPhoneCallTracker$Zw03itjXT6_LrhiYuD_9nKFg2Wg: com.android.internal.telephony.imsphone.'-$$Lambda$ImsPhoneCallTracker$Zw03itjXT6-LrhiYuD-9nKFg2Wg' INSTANCE>;

        r99 = (com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy) $r26;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy mSharedPreferenceProxy> = r99;

        $r27 = <com.android.internal.telephony.imsphone._$$Lambda$ImsPhoneCallTracker$QlPVd_3u4_verjHUDnkn6zaSe54: com.android.internal.telephony.imsphone.'-$$Lambda$ImsPhoneCallTracker$QlPVd_3u4_verjHUDnkn6zaSe54' INSTANCE>;

        r100 = (com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy) $r27;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy mPhoneNumberUtilsProxy> = r100;

        r87 = new com.android.internal.telephony.LocalLog;

        specialinvoke r87.<com.android.internal.telephony.LocalLog: void <init>(int)>(100);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mRegLocalLog> = r87;

        r88 = new com.android.internal.telephony.LocalLog;

        specialinvoke r88.<com.android.internal.telephony.LocalLog: void <init>(int)>(100);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mOperationLocalLog> = r88;

        r89 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4;

        specialinvoke r89.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsCallListener> = r89;

        r90 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$5;

        specialinvoke r90.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$5: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsUssdListener> = r90;

        r91 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$6;

        specialinvoke r91.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$6: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.ImsMmTelManager$CapabilityCallback mImsCapabilityCallback> = r91;

        r92 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$7;

        specialinvoke r92.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$7: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsConfigListener$Stub mImsConfigListener> = r92;

        r93 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$8;

        specialinvoke r93.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$8: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.ProvisioningManager$Callback mConfigCallback> = r93;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone> = r62;

        $r35 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics> = $r35;

        r94 = new android.content.IntentFilter;

        specialinvoke r94.<android.content.IntentFilter: void <init>()>();

        virtualinvoke r94.<android.content.IntentFilter: void addAction(java.lang.String)>("android.telephony.action.CARRIER_CONFIG_CHANGED");

        virtualinvoke r94.<android.content.IntentFilter: void addAction(java.lang.String)>("android.telecom.action.CHANGE_DEFAULT_DIALER");

        $r37 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r38 = virtualinvoke $r37.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r39 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r38.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r39, r94);

        $r41 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i1 = virtualinvoke $r41.<com.android.internal.telephony.imsphone.ImsPhone: int getSubId()>();

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void cacheCarrierConfiguration(int)>($i1);

        $r42 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r43 = virtualinvoke $r42.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $r44 = virtualinvoke $r43.<com.android.internal.telephony.Phone: com.android.internal.telephony.dataconnection.DataEnabledSettings getDataEnabledSettings()>();

        virtualinvoke $r44.<com.android.internal.telephony.dataconnection.DataEnabledSettings: void registerForDataEnabledChanged(android.os.Handler,int,java.lang.Object)>(r0, 23, null);

        $r45 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r46 = virtualinvoke $r45.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r47 = virtualinvoke $r46.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telecom");

        r64 = (android.telecom.TelecomManager) $r47;

        $r49 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.atomic.AtomicInteger mDefaultDialerUid>;

        $r48 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r50 = virtualinvoke $r48.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r51 = virtualinvoke r64.<android.telecom.TelecomManager: java.lang.String getDefaultDialerPackage()>();

        $i2 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int getPackageUid(android.content.Context,java.lang.String)>($r50, $r51);

        virtualinvoke $r49.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i2);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r95 = new android.net.NetworkStats;

        specialinvoke r95.<android.net.NetworkStats: void <init>(long,int)>(l0, 1);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageSnapshot> = r95;

        r96 = new android.net.NetworkStats;

        specialinvoke r96.<android.net.NetworkStats: void <init>(long,int)>(l0, 1);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageUidSnapshot> = r96;

        $r54 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r55 = virtualinvoke $r54.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r56 = virtualinvoke $r55.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("netstats");

        $r58 = (android.app.usage.NetworkStatsManager) $r56;

        $r57 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$VtDataUsageProvider mVtDataUsageProvider>;

        virtualinvoke $r58.<android.app.usage.NetworkStatsManager: void registerNetworkStatsProvider(java.lang.String,android.net.netstats.provider.NetworkStatsProvider)>("ImsPhoneCallTracker", $r57);

        r98 = new com.android.ims.FeatureConnector;

        $r60 = virtualinvoke r62.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $i3 = virtualinvoke r62.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        r97 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3;

        specialinvoke r97.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker,com.android.internal.telephony.imsphone.ImsPhone)>(r0, r62);

        specialinvoke r98.<com.android.ims.FeatureConnector: void <init>(android.content.Context,int,com.android.ims.FeatureConnector$Listener,java.util.concurrent.Executor,java.lang.String)>($r60, $i3, r97, r1, "ImsPhoneCallTracker");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.FeatureConnector mImsManagerConnector> = r98;

        virtualinvoke r98.<com.android.ims.FeatureConnector: void connect()>();

        return;
    }

    static com.android.internal.telephony.LocalLog access$100(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.LocalLog $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mOperationLocalLog>;

        return $r1;
    }

    static void access$1000(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneConnection, com.android.ims.ImsCall) throws android.os.RemoteException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        com.android.ims.ImsCall r2;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r2 := @parameter2: com.android.ims.ImsCall;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void setVideoCallProvider(com.android.internal.telephony.imsphone.ImsPhoneConnection,com.android.ims.ImsCall)>(r1, r2);

        return;
    }

    static void access$1100(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        return;
    }

    static com.android.internal.telephony.PhoneConstants$State access$1200(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.PhoneConstants$State $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        return $r1;
    }

    static java.util.ArrayList access$1300(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        return $r1;
    }

    static android.net.NetworkStats access$1400(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.net.NetworkStats $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageSnapshot>;

        return $r1;
    }

    static android.net.NetworkStats access$1500(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.net.NetworkStats $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageUidSnapshot>;

        return $r1;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneCallTracker$VtDataUsageProvider access$1600(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$VtDataUsageProvider $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$VtDataUsageProvider mVtDataUsageProvider>;

        return $r1;
    }

    static void access$1700(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void cacheCarrierConfiguration(int)>(i0);

        return;
    }

    static boolean access$1800(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowEmergencyVideoCalls>;

        return $z0;
    }

    static int access$1900(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, android.content.Context, java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.content.Context r1;
        java.lang.String r2;
        int $i0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: java.lang.String;

        $i0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int getPackageUid(android.content.Context,java.lang.String)>(r1, r2);

        return $i0;
    }

    static com.android.ims.ImsManager access$200(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsManager $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        return $r1;
    }

    static java.util.concurrent.atomic.AtomicInteger access$2000(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.atomic.AtomicInteger mDefaultDialerUid>;

        return $r1;
    }

    static com.android.ims.ImsManager access$202(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.ImsManager)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsManager r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.ImsManager;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager> = r1;

        return r1;
    }

    static void access$2100(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void scheduleHandoverCheck()>();

        return;
    }

    static void access$2200(com.android.internal.telephony.imsphone.ImsPhoneCallTracker) throws com.android.ims.ImsException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void startListeningForCalls()>();

        return;
    }

    static void access$2300(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void stopListeningForCalls()>();

        return;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneConnection access$2600(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        return $r1;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneConnection access$2602(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = r1;

        return r1;
    }

    static void access$2700(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.ImsCall, com.android.internal.telephony.Call$State, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.Call$State r2;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.ImsCall;

        r2 := @parameter2: com.android.internal.telephony.Call$State;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void processCallStateChange(com.android.ims.ImsCall,com.android.internal.telephony.Call$State,int)>(r1, r2, i0);

        return;
    }

    static com.android.internal.telephony.metrics.TelephonyMetrics access$2800(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.metrics.TelephonyMetrics $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        return $r1;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState access$2900(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        return $r1;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState access$2902(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState> = r1;

        return r1;
    }

    static com.android.ims.ImsCall access$300(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession>;

        return $r1;
    }

    static com.android.ims.ImsCall access$3000(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mCallExpectedToResume>;

        return $r1;
    }

    static com.android.ims.ImsCall access$3002(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.ImsCall;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mCallExpectedToResume> = r1;

        return r1;
    }

    static com.android.ims.ImsCall access$302(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.ImsCall;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession> = r1;

        return r1;
    }

    static boolean access$3100(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyVtHandoverToWifiFail>;

        return $z0;
    }

    static boolean access$3200(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isWifiConnected()>();

        return $z0;
    }

    static boolean access$3300(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mHasAttemptedStartOfCallHandover>;

        return $z0;
    }

    static boolean access$3302(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mHasAttemptedStartOfCallHandover> = z0;

        return z0;
    }

    static void access$3400(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void registerForConnectivityChanges()>();

        return;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneConnection access$3500(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r2;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.ImsCall;

        $r2 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>(r1);

        return $r2;
    }

    static void access$3600(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.ImsCall, com.android.internal.telephony.Call$State, int, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.Call$State r2;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.ImsCall;

        r2 := @parameter2: com.android.internal.telephony.Call$State;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void processCallStateChange(com.android.ims.ImsCall,com.android.internal.telephony.Call$State,int,boolean)>(r1, r2, i0, z0);

        return;
    }

    static void access$3700(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r1);

        return;
    }

    static int access$3800(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int $i0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mOnHoldToneId>;

        return $i0;
    }

    static int access$3802(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter1: int;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mOnHoldToneId> = i0;

        return i0;
    }

    static boolean access$3900(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mOnHoldToneStarted>;

        return $z0;
    }

    static boolean access$3902(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mOnHoldToneStarted> = z0;

        return z0;
    }

    static com.android.ims.ImsCall$Listener access$400(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall$Listener $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsUssdListener>;

        return $r1;
    }

    static java.util.Map access$4000(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mCallQualityMetrics>;

        return $r1;
    }

    static java.lang.String access$4100(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String getNetworkCountryIso()>();

        return $r1;
    }

    static java.util.concurrent.ConcurrentLinkedQueue access$4200(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.concurrent.ConcurrentLinkedQueue $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.ConcurrentLinkedQueue mCallQualityMetricsHistory>;

        return $r1;
    }

    static void access$4300(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void pruneCallQualityMetricsHistory()>();

        return;
    }

    static int access$4400(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, android.telephony.ims.ImsReasonInfo)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.telephony.ims.ImsReasonInfo r1;
        int $i0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: android.telephony.ims.ImsReasonInfo;

        $i0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int getPreciseDisconnectCauseFromReasonInfo(android.telephony.ims.ImsReasonInfo)>(r1);

        return $i0;
    }

    static boolean access$4500(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAutoRetryFailedWifiEmergencyCall>;

        return $z0;
    }

    static boolean access$4600(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mShouldUpdateImsConfigOnDisconnect>;

        return $z0;
    }

    static boolean access$4602(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mShouldUpdateImsConfigOnDisconnect> = z0;

        return z0;
    }

    static java.lang.Object access$4700(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.Object mSyncHold>;

        return $r1;
    }

    static void access$4800(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void dialPendingMO()>();

        return;
    }

    static boolean access$4900(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportPauseVideo>;

        return $z0;
    }

    static com.android.ims.ImsCall$Listener access$500(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall$Listener $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsCallListener>;

        return $r1;
    }

    static void access$5000(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void switchAfterConferenceSuccess()>();

        return;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry access$5100(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.internal.ConferenceParticipant)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.internal.ConferenceParticipant r1;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry $r2;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.internal.ConferenceParticipant;

        $r2 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry findConnectionTimeUsePhoneNumber(com.android.ims.internal.ConferenceParticipant)>(r1);

        return $r2;
    }

    static boolean access$5400(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsConferenceEventPackageEnabled>;

        return $z0;
    }

    static boolean access$5500(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportCepOnPeer>;

        return $z0;
    }

    static boolean access$5600(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsDataEnabled>;

        return $z0;
    }

    static boolean access$5602(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsDataEnabled> = z0;

        return z0;
    }

    static boolean access$5700(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsViLteDataMetered>;

        return $z0;
    }

    static boolean access$5800(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyHandoverVideoFromLTEToWifi>;

        return $z0;
    }

    static void access$5900(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void unregisterForConnectivityChanges()>();

        return;
    }

    static boolean access$600(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.ImsCall, com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1, r2;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.ImsCall;

        r2 := @parameter2: com.android.ims.ImsCall;

        $z0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean shouldDisconnectActiveCallOnAnswer(com.android.ims.ImsCall,com.android.ims.ImsCall)>(r1, r2);

        return $z0;
    }

    static boolean access$6000(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyHandoverVideoFromWifiToLTE>;

        return $z0;
    }

    static void access$6100(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, int, com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void downgradeVideoCall(int,com.android.internal.telephony.imsphone.ImsPhoneConnection)>(i0, r1);

        return;
    }

    static android.os.Message access$6200(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Message $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Message mPendingUssd>;

        return $r1;
    }

    static android.os.Message access$6202(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, android.os.Message)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: android.os.Message;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Message mPendingUssd> = r1;

        return r1;
    }

    static boolean access$700(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowAddCallDuringVideoCall>;

        return $z0;
    }

    static boolean access$800(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowHoldingVideoCall>;

        return $z0;
    }

    static void access$900(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void addConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r1);

        return;
    }

    private void addConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.ArrayList $r1;
        boolean $z1;
        com.android.internal.telephony.imsphone.ImsPhone $r2;
        java.lang.Throwable $r3;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r4 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $z1 = virtualinvoke r4.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isEmergency()>();

        if $z1 == 0 goto label2;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsInEmergencyCall> = 1;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: void sendEmergencyCallStateChange(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void answerWaitingCall() throws com.android.ims.ImsException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r5;
        com.android.internal.telephony.imsphone.ImsPhone $r3, $r7;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r4;
        java.util.ArrayList $r6;
        int $i0, $i1, $i2;
        com.android.internal.telephony.metrics.TelephonyMetrics $r8;
        android.telephony.ims.ImsCallSession $r9;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        r1 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        virtualinvoke $r4.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onImsAcceptCall(java.util.List)>($r6);

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mPendingCallVideoState>;

        $i1 = staticinvoke <android.telephony.ims.ImsCallProfile: int getCallTypeFromVideoState(int)>($i0);

        virtualinvoke r1.<com.android.ims.ImsCall: void accept(int)>($i1);

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i2 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r9 = virtualinvoke r1.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getSession()>();

        virtualinvoke $r8.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCommand(int,android.telephony.ims.ImsCallSession,int)>($i2, $r9, 2);

     label1:
        return;
    }

    private void cacheCarrierConfiguration(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        com.android.internal.telephony.imsphone.ImsPhone $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        com.android.internal.telephony.SubscriptionController $r8;
        boolean $z0;
        android.telephony.CarrierConfigManager r9;
        android.os.PersistableBundle r10;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        r9 = (android.telephony.CarrierConfigManager) $r3;

        if r9 == null goto label3;

        $r8 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $z0 = virtualinvoke $r8.<com.android.internal.telephony.SubscriptionController: boolean isActiveSubId(int)>(i0);

        if $z0 != 0 goto label1;

        goto label3;

     label1:
        r10 = virtualinvoke r9.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>(i0);

        if r10 != null goto label2;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>("cacheCarrierConfiguration: Empty carrier config.");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mCarrierConfigLoaded> = 0;

        return;

     label2:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mCarrierConfigLoaded> = 1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updateCarrierConfigCache(android.os.PersistableBundle)>(r10);

        return;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cacheCarrierConfiguration: No carrier config service found or not active subId = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r7);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mCarrierConfigLoaded> = 0;

        return;
    }

    private void cacheConnectionTimeWithPhoneNumber(com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        java.lang.String r3, $r6;
        boolean $z0, $z2;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry $r4, $r12;
        long $l0, $l1, $l2, $l4, $l5;
        int $i3;
        java.util.Queue $r5;
        java.util.Map $r7, $r8, $r10;
        java.lang.Object $r11;
        byte $b6, b7;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isIncoming()>();

        if $z0 == 0 goto label1;

        b7 = 0;

        goto label2;

     label1:
        b7 = 1;

     label2:
        $r4 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long getConnectTime()>();

        $l2 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long getConnectTimeReal()>();

        specialinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry: void <init>(long,long,long,int)>($l0, $l1, $l2, b7);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void maintainConnectTimeCache()>();

        $i3 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getNumberPresentation()>();

        if 1 != $i3 goto label4;

        $r6 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        r3 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String getFormattedPhoneNumber(java.lang.String)>($r6);

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mPhoneNumAndConnTime>;

        $z2 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        if $z2 == 0 goto label3;

        $l4 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long getConnectTime()>();

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mPhoneNumAndConnTime>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r12 = (com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry) $r11;

        $l5 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry: long access$2500(com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry)>($r12);

        $b6 = $l4 cmp $l5;

        if $b6 > 0 goto label3;

        return;

     label3:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mPhoneNumAndConnTime>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r4);

        goto label5;

     label4:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Queue mUnknownPeerConnTime>;

        interfaceinvoke $r5.<java.util.Queue: boolean add(java.lang.Object)>($r4);

     label5:
        return;
    }

    private boolean canAddVideoCallDuringImsAudioCall(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        com.android.ims.ImsCall r1, r10;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r3, $r6, $r9;
        com.android.internal.telephony.Call$State $r4, $r5, $r7, $r8;
        boolean $z1, $z2, z3, z4, z5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter0: int;

        z3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowHoldingVideoCall>;

        if z3 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        r10 = r1;

        if r1 != null goto label2;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        r10 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

     label2:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r5 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r4 == $r5 goto label3;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r7 != $r8 goto label4;

     label3:
        if r10 == null goto label4;

        $z2 = virtualinvoke r10.<com.android.ims.ImsCall: boolean isVideoCall()>();

        if $z2 != 0 goto label4;

        z4 = 1;

        goto label5;

     label4:
        z4 = 0;

     label5:
        z5 = 1;

        if z4 == 0 goto label7;

        $z1 = staticinvoke <android.telecom.VideoProfile: boolean isVideo(int)>(i0);

        if $z1 != 0 goto label6;

        z5 = 1;

        goto label7;

     label6:
        z5 = 0;

     label7:
        return z5;
    }

    private java.lang.String cleanseInstantLetteringMessage(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, r6, r9, r10, r11;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.imsphone.ImsPhone $r2, $r5;
        android.content.Context $r3;
        java.lang.Object $r4;
        int $i0;
        android.telephony.CarrierConfigManager r7;
        android.os.PersistableBundle r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r6 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z0 == 0 goto label1;

        return r6;

     label1:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        r7 = (android.telephony.CarrierConfigManager) $r4;

        if r7 != null goto label2;

        return r6;

     label2:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhone: int getSubId()>();

        r8 = virtualinvoke r7.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        if r8 != null goto label3;

        return r6;

     label3:
        r1 = virtualinvoke r8.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("carrier_instant_lettering_invalid_chars_string");

        r9 = r6;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label4;

        r9 = virtualinvoke r6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(r1, "");

     label4:
        r10 = virtualinvoke r8.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("carrier_instant_lettering_escaped_chars_string");

        r11 = r9;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r10);

        if $z2 != 0 goto label5;

        r11 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String escapeChars(java.lang.String,java.lang.String)>(r10, r9);

     label5:
        return r11;
    }

    private void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection, int, int, int, int, android.os.Bundle)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7, i9;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z11;
        java.lang.String r1, $r3, $r13, $r14, $r15, $r16, $r17, $r45, $r49;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy $r2;
        com.android.ims.ImsManager $r4, r35;
        java.lang.String[] $r5, r36;
        com.android.ims.ImsCall$Listener $r6;
        com.android.internal.telephony.imsphone.ImsPhone $r7, $r33;
        com.android.internal.telephony.metrics.TelephonyMetrics $r8;
        android.telephony.ims.ImsCallSession $r9;
        android.os.Bundle $r10, $r11, r31;
        android.telephony.ims.ImsStreamMediaProfile $r12;
        com.android.ims.ImsException $r18, $r23, $r25, $r27, r39;
        android.os.RemoteException $r24, $r26, $r28, $r29;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r30;
        byte b8;
        android.telephony.ims.ImsCallProfile r32;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r34;
        com.android.ims.ImsCall r37;
        java.lang.StringBuilder $r43, $r47;
        com.android.internal.telephony.LocalLog r46;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r30 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i7 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r31 := @parameter5: android.os.Bundle;

        if r30 != null goto label01;

        return;

     label01:
        $z1 = virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isAdhocConference()>();

        if $z1 != 0 goto label03;

        $r15 = virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        if $r15 == null goto label02;

        $r16 = virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        $i5 = virtualinvoke $r16.<java.lang.String: int length()>();

        if $i5 == 0 goto label02;

        $r17 = virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        $i6 = virtualinvoke $r17.<java.lang.String: int indexOf(int)>(78);

        if $i6 < 0 goto label03;

     label02:
        virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setDisconnectCause(int)>(7);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean sendEmptyMessageDelayed(int,long)>(18, 500L);

        return;

     label03:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void setMute(boolean)>(0);

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy mPhoneNumberUtilsProxy>;

        $r3 = virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy: boolean isEmergencyNumber(java.lang.String)>($r3);

        if z0 == 0 goto label04;

        b8 = 2;

        goto label05;

     label04:
        b8 = 1;

     label05:
        i3 = staticinvoke <android.telephony.ims.ImsCallProfile: int getCallTypeFromVideoState(int)>(i0);

        virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setVideoState(int)>(i0);

     label06:
        r1 = virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        r32 = virtualinvoke $r4.<com.android.ims.ImsManager: android.telephony.ims.ImsCallProfile createCallProfile(int,int)>(b8, i3);

        $z2 = virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isAdhocConference()>();

        if $z2 == 0 goto label07;

        virtualinvoke r32.<android.telephony.ims.ImsCallProfile: void setCallExtraBoolean(java.lang.String,boolean)>("conference", 1);

     label07:
        virtualinvoke r32.<android.telephony.ims.ImsCallProfile: void setCallExtraInt(java.lang.String,int)>("oir", i7);

     label08:
        virtualinvoke r32.<android.telephony.ims.ImsCallProfile: void setCallExtraInt(java.lang.String,int)>("android.telephony.ims.extra.RETRY_CALL_FAIL_REASON", i1);

     label09:
        virtualinvoke r32.<android.telephony.ims.ImsCallProfile: void setCallExtraInt(java.lang.String,int)>("android.telephony.ims.extra.RETRY_CALL_FAIL_NETWORKTYPE", i2);

     label10:
        if z0 == 0 goto label12;

     label11:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void setEmergencyCallInfo(android.telephony.ims.ImsCallProfile,com.android.internal.telephony.Connection)>(r32, r30);

     label12:
        if r31 == null goto label17;

     label13:
        $z5 = virtualinvoke r31.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.telecom.extra.CALL_SUBJECT");

        if $z5 == 0 goto label14;

        $r13 = virtualinvoke r31.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.telecom.extra.CALL_SUBJECT");

        $r14 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String cleanseInstantLetteringMessage(java.lang.String)>($r13);

        virtualinvoke r31.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("DisplayText", $r14);

     label14:
        $z6 = virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean hasRttTextStream()>();

        if $z6 == 0 goto label15;

        $r12 = r32.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $r12.<android.telephony.ims.ImsStreamMediaProfile: int mRttMode> = 1;

     label15:
        $z7 = virtualinvoke r31.<android.os.Bundle: boolean containsKey(java.lang.String)>("CallPull");

        if $z7 == 0 goto label16;

        $r11 = r32.<android.telephony.ims.ImsCallProfile: android.os.Bundle mCallExtras>;

        $z8 = virtualinvoke r31.<android.os.Bundle: boolean getBoolean(java.lang.String)>("CallPull");

        virtualinvoke $r11.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("CallPull", $z8);

        i9 = virtualinvoke r31.<android.os.Bundle: int getInt(java.lang.String)>("android.telephony.ImsExternalCallTracker.extra.EXTERNAL_CALL_ID");

        virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setIsPulledCall(boolean)>(1);

        virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPulledDialogId(int)>(i9);

     label16:
        $r10 = r32.<android.telephony.ims.ImsCallProfile: android.os.Bundle mCallExtras>;

        virtualinvoke $r10.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android.telephony.ims.extra.OEM_EXTRAS", r31);

     label17:
        $r33 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r34 = virtualinvoke $r33.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        virtualinvoke $r34.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onImsDial(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r30);

        r35 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $z11 = virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isAdhocConference()>();

        if $z11 == 0 goto label19;

        r36 = virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String[] getParticipantsToDial()>();

     label18:
        goto label20;

     label19:
        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r1;

        r36 = $r5;

     label20:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsCallListener>;

        r37 = virtualinvoke r35.<com.android.ims.ImsManager: com.android.ims.ImsCall makeCall(android.telephony.ims.ImsCallProfile,java.lang.String[],com.android.ims.ImsCall$Listener)>(r32, r36, $r6);

        virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setImsCall(com.android.ims.ImsCall)>(r37);

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i4 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r9 = virtualinvoke r37.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getSession()>();

        virtualinvoke $r8.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCallStart(int,android.telephony.ims.ImsCallSession)>($i4, $r9);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void setVideoCallProvider(com.android.internal.telephony.imsphone.ImsPhoneConnection,com.android.ims.ImsCall)>(r30, r37);

        $z3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowAddCallDuringVideoCall>;

        virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setAllowAddCallDuringVideoCall(boolean)>($z3);

        $z4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowHoldingVideoCall>;

        virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setAllowHoldingVideoCall(boolean)>($z4);

     label21:
        goto label32;

     label22:
        $r28 := @caughtexception;

        goto label32;

     label23:
        $r23 := @caughtexception;

        r39 = $r23;

        goto label31;

     label24:
        $r24 := @caughtexception;

        goto label29;

     label25:
        $r27 := @caughtexception;

        r39 = $r27;

        goto label31;

     label26:
        $r26 := @caughtexception;

        goto label29;

     label27:
        $r25 := @caughtexception;

        r39 = $r25;

        goto label31;

     label28:
        $r29 := @caughtexception;

     label29:
        goto label32;

     label30:
        $r18 := @caughtexception;

        r39 = $r18;

     label31:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialInternal : ");

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r45);

        r46 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mOperationLocalLog>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialInternal exception: ");

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r46.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r49);

        virtualinvoke r30.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setDisconnectCause(int)>(36);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean sendEmptyMessageDelayed(int,long)>(18, 500L);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void retryGetImsService()>();

     label32:
        return;

        catch com.android.ims.ImsException from label06 to label07 with label30;
        catch android.os.RemoteException from label06 to label07 with label28;
        catch com.android.ims.ImsException from label07 to label08 with label27;
        catch android.os.RemoteException from label07 to label08 with label26;
        catch com.android.ims.ImsException from label08 to label09 with label25;
        catch android.os.RemoteException from label08 to label09 with label24;
        catch com.android.ims.ImsException from label09 to label10 with label23;
        catch android.os.RemoteException from label09 to label10 with label22;
        catch com.android.ims.ImsException from label11 to label12 with label23;
        catch android.os.RemoteException from label11 to label12 with label22;
        catch com.android.ims.ImsException from label13 to label14 with label23;
        catch android.os.RemoteException from label13 to label14 with label22;
        catch com.android.ims.ImsException from label14 to label15 with label23;
        catch android.os.RemoteException from label14 to label15 with label22;
        catch com.android.ims.ImsException from label15 to label16 with label23;
        catch android.os.RemoteException from label15 to label16 with label22;
        catch com.android.ims.ImsException from label16 to label17 with label23;
        catch android.os.RemoteException from label16 to label17 with label22;
        catch com.android.ims.ImsException from label17 to label18 with label23;
        catch android.os.RemoteException from label17 to label18 with label22;
        catch com.android.ims.ImsException from label19 to label20 with label23;
        catch android.os.RemoteException from label19 to label20 with label22;
        catch com.android.ims.ImsException from label20 to label21 with label23;
        catch android.os.RemoteException from label20 to label21 with label22;
    }

    private void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection, int, int, android.os.Bundle)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        int i0, i1;
        android.os.Bundle r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Bundle;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection,int,int,int,int,android.os.Bundle)>(r1, i0, i1, 0, 0, r2);

        return;
    }

    private void dialPendingMO()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0, z1;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isPhoneInEcbMode()>();

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        z1 = virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isEmergency()>();

        if z0 == 0 goto label2;

        if z0 == 0 goto label1;

        if z1 == 0 goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean sendEmptyMessage(int)>(21);

        goto label3;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean sendEmptyMessage(int)>(20);

     label3:
        return;
    }

    private void downgradeVideoCall(int, com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r8, $r14;
        java.lang.String $r4, $r7, $r10, $r13, $r16, $r19;
        com.android.ims.ImsCall r20;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r20 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        if r20 == null goto label3;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean hasCapabilities(int)>(3);

        if $z0 == 0 goto label1;

        $z2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportPauseVideo>;

        if $z2 != 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("downgradeVideoCall :: callId=");

        $r16 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getTelecomCallId()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Downgrade to audio");

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r19);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void modifyVideoCall(com.android.ims.ImsCall,int)>(r20, 0);

        goto label3;

     label1:
        $z1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportPauseVideo>;

        if $z1 == 0 goto label2;

        if i0 == 1407 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("downgradeVideoCall :: callId=");

        $r10 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getTelecomCallId()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Pause audio");

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r13);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mShouldUpdateImsConfigOnDisconnect> = 1;

        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void pauseVideo(int)>(2);

        goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("downgradeVideoCall :: callId=");

        $r4 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getTelecomCallId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Disconnect call.");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r7);

        virtualinvoke r20.<com.android.ims.ImsCall: void terminate(int,int)>(501, i0);

     label3:
        return;
    }

    private void dumpState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.StringBuilder $r1, $r6, $r13, $r20;
        com.android.internal.telephony.PhoneConstants$State $r3;
        java.lang.String $r5, $r9, $r11, $r16, $r18, $r23, $r25, $r28, $r30, $r32;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r8, $r12, $r15, $r19, $r22, $r26;
        java.lang.Object $r27, $r29, $r31;
        java.util.ArrayList r35, r37, r39;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Phone State:");

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ringing call: ");

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r11);

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        r35 = virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        i0 = 0;

        i1 = interfaceinvoke r35.<java.util.List: int size()>();

     label1:
        if i0 >= i1 goto label2;

        $r31 = interfaceinvoke r35.<java.util.List: java.lang.Object get(int)>(i0);

        $r32 = virtualinvoke $r31.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r32);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Foreground call: ");

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r16 = virtualinvoke $r15.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String toString()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r18);

        $r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r37 = virtualinvoke $r19.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        i2 = 0;

        i3 = interfaceinvoke r37.<java.util.List: int size()>();

     label3:
        if i2 >= i3 goto label4;

        $r29 = interfaceinvoke r37.<java.util.List: java.lang.Object get(int)>(i2);

        $r30 = virtualinvoke $r29.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r30);

        i2 = i2 + 1;

        goto label3;

     label4:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Background call: ");

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r23 = virtualinvoke $r22.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String toString()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r25);

        $r26 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        r39 = virtualinvoke $r26.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        i4 = 0;

        i5 = interfaceinvoke r39.<java.util.List: int size()>();

     label5:
        if i4 >= i5 goto label6;

        $r27 = interfaceinvoke r39.<java.util.List: java.lang.Object get(int)>(i4);

        $r28 = virtualinvoke $r27.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r28);

        i4 = i4 + 1;

        goto label5;

     label6:
        return;
    }

    private java.lang.String escapeChars(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, $r4, $r5, r8;
        int i0, i2;
        char c1;
        java.lang.StringBuilder $r3;
        boolean $z0;
        char[] r9;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r9 = virtualinvoke r8.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof r9;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        c1 = r9[i2];

        $r5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1);

        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\");

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        i2 = i2 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.Iterator r1;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r2;
        com.android.ims.ImsCall r3, r7;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r7 := @parameter0: com.android.ims.ImsCall;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r5;

        r3 = virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

     label3:
        if r3 != r7 goto label4;

        exitmonitor r0;

        return r2;

     label4:
        goto label2;

     label5:
        exitmonitor r0;

        return null;

     label6:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
    }

    private com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry findConnectionTimeUsePhoneNumber(com.android.ims.internal.ConferenceParticipant)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int $i0;
        java.util.Queue $r1;
        java.lang.Object $r2, $r11;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry $r3, $r12;
        android.net.Uri $r4, $r5, $r7, $r9;
        java.lang.String $r6, $r8, r14, r15;
        boolean $z0;
        java.util.Map $r10;
        com.android.ims.internal.ConferenceParticipant r13;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r13 := @parameter0: com.android.ims.internal.ConferenceParticipant;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void maintainConnectTimeCache()>();

        $i0 = virtualinvoke r13.<com.android.ims.internal.ConferenceParticipant: int getParticipantPresentation()>();

        if 1 != $i0 goto label4;

        $r4 = virtualinvoke r13.<com.android.ims.internal.ConferenceParticipant: android.net.Uri getHandle()>();

        if $r4 == null goto label3;

        $r5 = virtualinvoke r13.<com.android.ims.internal.ConferenceParticipant: android.net.Uri getHandle()>();

        $r6 = virtualinvoke $r5.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        if $r6 != null goto label1;

        goto label3;

     label1:
        $r7 = virtualinvoke r13.<com.android.ims.internal.ConferenceParticipant: android.net.Uri getHandle()>();

        $r8 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String getCountryIso()>();

        $r9 = staticinvoke <com.android.ims.internal.ConferenceParticipant: android.net.Uri getParticipantAddress(android.net.Uri,java.lang.String)>($r7, $r8);

        r14 = virtualinvoke $r9.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r14);

        if $z0 == 0 goto label2;

        return null;

     label2:
        r15 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String getFormattedPhoneNumber(java.lang.String)>(r14);

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mPhoneNumAndConnTime>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r15);

        $r12 = (com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry) $r11;

        return $r12;

     label3:
        return null;

     label4:
        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Queue mUnknownPeerConnTime>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object poll()>();

        $r3 = (com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry) $r2;

        return $r3;
    }

    private java.lang.String getCountryIso()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        com.android.internal.telephony.imsphone.ImsPhone $r1, $r2;
        android.content.Context $r3;
        android.telephony.SubscriptionManager $r4;
        android.telephony.SubscriptionInfo r5;
        java.lang.String r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        i0 = virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhone: int getSubId()>();

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r4 = staticinvoke <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager 'from'(android.content.Context)>($r3);

        r5 = virtualinvoke $r4.<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>(i0);

        if r5 != null goto label1;

        r6 = null;

        goto label2;

     label1:
        r6 = virtualinvoke r5.<android.telephony.SubscriptionInfo: java.lang.String getCountryIso()>();

     label2:
        return r6;
    }

    private java.lang.String getFormattedPhoneNumber(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String getCountryIso()>();

        if r2 != null goto label1;

        return r1;

     label1:
        r3 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String formatNumberToE164(java.lang.String,java.lang.String)>(r1, r2);

        if r3 != null goto label2;

        goto label3;

     label2:
        r1 = r3;

     label3:
        return r1;
    }

    private com.android.ims.ImsException getImsManagerIsNullException()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsException $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = new com.android.ims.ImsException;

        specialinvoke $r1.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("no ims manager", 102);

        return $r1;
    }

    private java.lang.String getNetworkCountryIso()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone r2;
        java.lang.String r3;
        com.android.internal.telephony.ServiceStateTracker r4;
        com.android.internal.telephony.LocaleTracker r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        r3 = "";

        if r2 == null goto label1;

        r4 = virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        r3 = "";

        if r4 == null goto label1;

        r5 = virtualinvoke r4.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.LocaleTracker getLocaleTracker()>();

        r3 = "";

        if r5 == null goto label1;

        r3 = virtualinvoke r5.<com.android.internal.telephony.LocaleTracker: java.lang.String getCurrentCountry()>();

     label1:
        return r3;
    }

    private int getPackageUid(android.content.Context, java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, $r7;
        int i0, i1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r3;
        java.lang.StringBuilder $r4;
        android.content.Context r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r8 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return -1;

     label1:
        i1 = -1;

     label2:
        $r2 = virtualinvoke r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        i0 = virtualinvoke $r2.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>(r1, 0);

     label3:
        i1 = i0;

        goto label5;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find package uid. pkg = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r7);

     label5:
        return i1;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    private int getPreciseDisconnectCauseFromReasonInfo(android.telephony.ims.ImsReasonInfo)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.telephony.ims.ImsReasonInfo r1;
        android.util.SparseIntArray $r2;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.telephony.ims.ImsReasonInfo;

        $r2 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.util.SparseIntArray PRECISE_CAUSE_MAP>;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int maybeRemapReasonCode(android.telephony.ims.ImsReasonInfo)>(r1);

        $i1 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>($i0, 65535);

        return $i1;
    }

    private void handleDataEnabledChange(boolean, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int i0, $i1;
        java.util.ArrayList $r1, $r7;
        java.lang.Object $r2, $r8;
        java.lang.StringBuilder $r3, $r9;
        java.lang.String $r6, $r12;
        java.util.Iterator r13, r17;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r14, r18;
        com.android.ims.ImsCall r15;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        if z0 != 0 goto label4;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        r13 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z5 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label3;

        $r8 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r8;

        r15 = virtualinvoke r14.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        if r15 == null goto label2;

        $z6 = virtualinvoke r15.<com.android.ims.ImsCall: boolean isVideoCall()>();

        if $z6 == 0 goto label2;

        $z7 = virtualinvoke r15.<com.android.ims.ImsCall: boolean isWifiCall()>();

        if $z7 != 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleDataEnabledChange - downgrading ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r12);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void downgradeVideoCall(int,com.android.internal.telephony.imsphone.ImsPhoneConnection)>(i0, r14);

     label2:
        goto label1;

     label3:
        goto label8;

     label4:
        $z1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportPauseVideo>;

        if $z1 == 0 goto label8;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        r17 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r2 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleDataEnabledChange - resuming ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r6);

        $i1 = virtualinvoke r18.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getVideoState()>();

        $z3 = staticinvoke <android.telecom.VideoProfile: boolean isPaused(int)>($i1);

        if $z3 == 0 goto label6;

        $z4 = virtualinvoke r18.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean wasVideoPausedFromSource(int)>(2);

        if $z4 == 0 goto label6;

        virtualinvoke r18.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void resumeVideo(int)>(2);

     label6:
        goto label5;

     label7:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mShouldUpdateImsConfigOnDisconnect> = 0;

     label8:
        return;
    }

    private void handleEcmTimer(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        com.android.internal.telephony.imsphone.ImsPhone $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhone: void handleTimerInEmergencyCallbackMode(int)>(i0);

        return;
    }

    private void handleFeatureCapabilityChanged(android.telephony.ims.feature.ImsFeature$Capabilities)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6;
        java.lang.StringBuilder $r2, $r9, $r23;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities $r5, $r22;
        java.lang.String $r8, $r26, r31;
        com.android.internal.telephony.LocalLog $r18;
        com.android.internal.telephony.imsphone.ImsPhone $r19, $r20, $r27;
        com.android.internal.telephony.metrics.TelephonyMetrics $r21;
        int $i0, $i1;
        android.telephony.ims.feature.ImsFeature$Capabilities r28;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r28 := @parameter0: android.telephony.ims.feature.ImsFeature$Capabilities;

        z5 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isVideoCallEnabled()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(120);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleFeatureCapabilityChanged: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r5 = new android.telephony.ims.feature.MmTelFeature$MmTelCapabilities;

        specialinvoke $r5.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: void <init>(android.telephony.ims.feature.ImsFeature$Capabilities)>(r28);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities mMmTelCapabilities> = $r5;

        z0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isVideoCallEnabled()>();

        if z5 == z0 goto label1;

        z6 = 1;

        goto label2;

     label1:
        z6 = 0;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isVideoEnabledStateChanged=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z6);

        if z6 == 0 goto label3;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleFeatureCapabilityChanged - notifyForVideoCapabilityChanged=");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r26);

        $r27 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r27.<com.android.internal.telephony.imsphone.ImsPhone: void notifyForVideoCapabilityChanged(boolean)>(z0);

     label3:
        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleFeatureCapabilityChanged: isVolteEnabled=");

        $z1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isVolteEnabled()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isVideoCallEnabled=");

        $z2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isVideoCallEnabled()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isVowifiEnabled=");

        $z3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isVowifiEnabled()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isUtEnabled=");

        $z4 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isUtEnabled()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        r31 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>(r31);

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mRegLocalLog>;

        virtualinvoke $r18.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>(r31);

        $r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r19.<com.android.internal.telephony.imsphone.ImsPhone: void onFeatureCapabilityChanged()>();

        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r20.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $i1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int getImsRegistrationTech()>();

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities mMmTelCapabilities>;

        virtualinvoke $r21.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCapabilities(int,int,android.telephony.ims.feature.MmTelFeature$MmTelCapabilities)>($i0, $i1, $r22);

        return;
    }

    private void handleRadioNotAvailable()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void pollCallsWhenSafe()>();

        return;
    }

    private void holdActiveCallForPendingMo() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState r1, $r2, $r3, $r4, $r5, $r7;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r6, $r8, $r9, $r14, $r15;
        com.android.internal.telephony.imsphone.ImsPhone $r10;
        com.android.internal.telephony.metrics.TelephonyMetrics $r11;
        int $i0;
        android.telephony.ims.ImsCallSession $r12;
        com.android.ims.ImsException $r13;
        com.android.internal.telephony.CallStateException $r16;
        java.lang.String $r17;
        com.android.ims.ImsCall r18;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        $r2 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_SINGLE_CALL_HOLD>;

        if $r3 == $r2 goto label5;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        $r4 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState SWAPPING_ACTIVE_AND_HELD>;

        if $r5 != $r4 goto label1;

        goto label5;

     label1:
        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r18 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        $r7 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState HOLDING_TO_DIAL_OUTGOING>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState> = $r7;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logHoldSwapState(java.lang.String)>("holdActiveCallForPendingMo");

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r8);

     label2:
        virtualinvoke r18.<com.android.ims.ImsCall: void hold()>();

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r10.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r12 = virtualinvoke r18.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getSession()>();

        virtualinvoke $r11.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCommand(int,android.telephony.ims.ImsCallSession,int)>($i0, $r12, 5);

     label3:
        return;

     label4:
        $r13 := @caughtexception;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r15.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r14);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState> = r1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logHoldSwapState(java.lang.String)>("holdActiveCallForPendingMo - fail");

        $r16 = new com.android.internal.telephony.CallStateException;

        $r17 = virtualinvoke $r13.<com.android.ims.ImsException: java.lang.String getMessage()>();

        specialinvoke $r16.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logi(java.lang.String)>("Ignoring hold request while already holding or swapping");

        return;

        catch com.android.ims.ImsException from label2 to label3 with label4;
    }

    private void internalClearDisconnected()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearDisconnected()>();

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearDisconnected()>();

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearDisconnected()>();

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearDisconnected()>();

        return;
    }

    private boolean isImsCapabilityInCacheAvailable(int, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0, i1, $i2;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities $r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int getImsRegistrationTech()>();

        if $i2 != i1 goto label1;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities mMmTelCapabilities>;

        $z0 = virtualinvoke $r1.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: boolean isCapable(int)>(i0);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isPhoneInEcbMode()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhone: boolean isInEcm()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isWifiConnected()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        boolean $z0, z1;
        int $i0;
        android.net.ConnectivityManager r4;
        android.net.NetworkInfo r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r4 = (android.net.ConnectivityManager) $r3;

        z1 = 0;

        if r4 == null goto label2;

        r5 = virtualinvoke r4.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if r5 == null goto label2;

        $z0 = virtualinvoke r5.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r5.<android.net.NetworkInfo: int getType()>();

        if $i0 != 1 goto label1;

        z1 = 1;

     label1:
        return z1;

     label2:
        return 0;
    }

    static boolean lambda$maintainConnectTimeCache$2(long, java.util.Map$Entry)
    {
        long l0, $l1;
        java.util.Map$Entry r0;
        java.lang.Object $r1;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry $r2;
        byte $b2;
        boolean z0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.Map$Entry;

        $r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r2 = (com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry) $r1;

        $l1 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry: long access$2400(com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry)>($r2);

        $b2 = $l1 cmp l0;

        if $b2 >= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static android.content.SharedPreferences lambda$new$0(android.content.Context)
    {
        android.content.Context r0;
        android.content.SharedPreferences $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        return $r1;
    }

    static boolean lambda$new$1(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>(r0);

        return $z0;
    }

    private void maintainConnectTimeCache()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        long l0, $l1, $l2;
        java.util.Map $r1;
        java.util.Set $r2;
        com.android.internal.telephony.imsphone._$$Lambda$ImsPhoneCallTracker$R2Z9jNp4rrTM4H39vy492Fbmqyc $r3;
        java.util.Queue $r4, $r5, $r8;
        boolean $z1;
        java.lang.Object $r6;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry $r7;
        byte $b3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l0 = $l1 - 60000L;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mPhoneNumAndConnTime>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = new com.android.internal.telephony.imsphone._$$Lambda$ImsPhoneCallTracker$R2Z9jNp4rrTM4H39vy492Fbmqyc;

        specialinvoke $r3.<com.android.internal.telephony.imsphone._$$Lambda$ImsPhoneCallTracker$R2Z9jNp4rrTM4H39vy492Fbmqyc: void <init>(long)>(l0);

        interfaceinvoke $r2.<java.util.Set: boolean removeIf(java.util.function.Predicate)>($r3);

     label1:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Queue mUnknownPeerConnTime>;

        $z1 = interfaceinvoke $r4.<java.util.Queue: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Queue mUnknownPeerConnTime>;

        $r6 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object peek()>();

        $r7 = (com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry) $r6;

        $l2 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry: long access$2400(com.android.internal.telephony.imsphone.ImsPhoneCallTracker$CacheEntry)>($r7);

        $b3 = $l2 cmp l0;

        if $b3 >= 0 goto label2;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Queue mUnknownPeerConnTime>;

        interfaceinvoke $r8.<java.util.Queue: java.lang.Object poll()>();

        goto label1;

     label2:
        return;
    }

    private void maybeNotifyDataDisabled(boolean, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0;
        java.util.Iterator r1;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r2;
        com.android.ims.ImsCall r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        if z0 != 0 goto label4;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r5;

        r3 = virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        if r3 == null goto label3;

        $z2 = virtualinvoke r3.<com.android.ims.ImsCall: boolean isVideoCall()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r3.<com.android.ims.ImsCall: boolean isWifiCall()>();

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean hasCapabilities(int)>(3);

        if $z4 == 0 goto label3;

        if i0 != 1406 goto label2;

        virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onConnectionEvent(java.lang.String,android.os.Bundle)>("android.telephony.event.EVENT_DOWNGRADE_DATA_DISABLED", null);

        goto label3;

     label2:
        if i0 != 1405 goto label3;

        virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onConnectionEvent(java.lang.String,android.os.Bundle)>("android.telephony.event.EVENT_DOWNGRADE_DATA_LIMIT_REACHED", null);

     label3:
        goto label1;

     label4:
        return;
    }

    private void maybeSetVideoCallProvider(com.android.internal.telephony.imsphone.ImsPhoneConnection, com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.telecom.Connection$VideoProvider $r1;
        android.telephony.ims.ImsCallSession $r2;
        com.android.ims.internal.IImsVideoCallProvider $r3;
        android.os.RemoteException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r9;
        com.android.ims.ImsCall r10;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r9 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r10 := @parameter1: com.android.ims.ImsCall;

        $r1 = virtualinvoke r9.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.telecom.Connection$VideoProvider getVideoProvider()>();

        if $r1 != null goto label5;

        $r2 = virtualinvoke r10.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getCallSession()>();

        $r3 = virtualinvoke $r2.<android.telephony.ims.ImsCallSession: com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider()>();

        if $r3 != null goto label1;

        goto label5;

     label1:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void setVideoCallProvider(com.android.internal.telephony.imsphone.ImsPhoneConnection,com.android.ims.ImsCall)>(r9, r10);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maybeSetVideoCallProvider: exception ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r8);

     label4:
        return;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void modifyVideoCall(com.android.ims.ImsCall, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0, i1;
        android.telecom.Connection$VideoProvider $r1, $r2;
        android.telecom.VideoProfile $r3, $r4;
        com.android.ims.ImsCall r5;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r5 := @parameter0: com.android.ims.ImsCall;

        i0 := @parameter1: int;

        r6 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>(r5);

        if r6 == null goto label1;

        i1 = virtualinvoke r6.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getVideoState()>();

        $r1 = virtualinvoke r6.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.telecom.Connection$VideoProvider getVideoProvider()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r6.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.telecom.Connection$VideoProvider getVideoProvider()>();

        $r3 = new android.telecom.VideoProfile;

        specialinvoke $r3.<android.telecom.VideoProfile: void <init>(int)>(i1);

        $r4 = new android.telecom.VideoProfile;

        specialinvoke $r4.<android.telecom.VideoProfile: void <init>(int)>(i0);

        virtualinvoke $r2.<android.telecom.Connection$VideoProvider: void onSendSessionModifyRequest(android.telecom.VideoProfile,android.telecom.VideoProfile)>($r3, $r4);

     label1:
        return;
    }

    private void notifyPhoneStateChanged(com.android.internal.telephony.PhoneConstants$State, com.android.internal.telephony.PhoneConstants$State)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.PhoneConstants$State r1, r2;
        java.util.Iterator r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneStateListener $r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.PhoneConstants$State;

        r2 := @parameter1: com.android.internal.telephony.PhoneConstants$State;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.List mPhoneStateListeners>;

        r3 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneStateListener) $r5;

        interfaceinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneStateListener: void onPhoneStateChanged(com.android.internal.telephony.PhoneConstants$State,com.android.internal.telephony.PhoneConstants$State)>(r1, r2);

        goto label1;

     label2:
        return;
    }

    private void onDataEnabledChanged(boolean, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0, $z2, $z3, $z4, z5, z6, $z7;
        int i0;
        com.android.ims.ImsCall r1;
        java.lang.StringBuilder $r2, $r10;
        java.lang.String $r7, $r14, r17;
        java.util.ArrayList $r8;
        java.lang.Object $r9;
        java.util.Iterator r18;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r19;
        short s1;
        com.android.ims.ImsManager r20;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDataEnabledChanged: enabled=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reason=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r7);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsDataEnabled> = z0;

        $z2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsViLteDataMetered>;

        if $z2 != 0 goto label03;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore data ");

        if z0 == 0 goto label01;

        r17 = "enabled";

        goto label02;

     label01:
        r17 = "disabled";

     label02:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - carrier policy indicates that data is not metered for ViLTE calls.");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r14);

        return;

     label03:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        r18 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        z5 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if z5 == 0 goto label07;

        $r9 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r9;

        r1 = virtualinvoke r19.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        z6 = 1;

        if z0 != 0 goto label06;

        if r1 == null goto label05;

        $z4 = virtualinvoke r1.<com.android.ims.ImsCall: boolean isWifiCall()>();

        if $z4 == 0 goto label05;

        z6 = 1;

        goto label06;

     label05:
        z6 = 0;

     label06:
        virtualinvoke r19.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setLocalVideoCapable(boolean)>(z6);

        goto label04;

     label07:
        if i0 != 3 goto label08;

        s1 = 1405;

        goto label10;

     label08:
        if i0 != 2 goto label09;

        s1 = 1406;

        goto label10;

     label09:
        s1 = 1406;

     label10:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void maybeNotifyDataDisabled(boolean,int)>(z0, s1);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void handleDataEnabledChange(boolean,int)>(z0, s1);

        $z7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mShouldUpdateImsConfigOnDisconnect>;

        if $z7 != 0 goto label11;

        if i0 == 0 goto label11;

        $z3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mCarrierConfigLoaded>;

        if $z3 == 0 goto label11;

        r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if r20 == null goto label11;

        virtualinvoke r20.<com.android.ims.ImsManager: void updateImsServiceConfig(boolean)>(1);

     label11:
        return;
    }

    private boolean prepareForDialing(com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        com.android.internal.telephony.Call$State r1, $r6, $r7, $r10, $r11, $r13, $r14, r19, r20, r22;
        com.android.ims.ImsManager $r2;
        com.android.internal.telephony.CallStateException $r3, $r4, $r15, r23;
        boolean $z0, z1, z2;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r5, $r8, $r9, $r12;
        android.os.Bundle $r16;
        java.lang.Throwable $r17;
        com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs r18;
        java.lang.Object r21;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r18 := @parameter0: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs;

        z1 = 0;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void clearDisconnected()>();

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if $r2 == null goto label14;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void checkForDialIssues()>();

        i0 = r18.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: int videoState>;

        $z0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean canAddVideoCallDuringImsAudioCall(int)>(i0);

        if $z0 == 0 goto label13;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r7 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r6 != $r7 goto label02;

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r14 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r13 != $r14 goto label01;

        z1 = 1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mPendingCallVideoState> = i0;

        $r16 = r18.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: android.os.Bundle intentExtras>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Bundle mPendingIntentExtras> = $r16;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void holdActiveCallForPendingMo()>();

        goto label02;

     label01:
        $r15 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r15.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(6, "Already too many ongoing calls.");

        throw $r15;

     label02:
        r19 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        r20 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.Object mSyncHold>;

        entermonitor r21;

        z2 = z1;

        if z1 == 0 goto label08;

     label03:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        r22 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r10 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if r1 == $r10 goto label07;

     label04:
        z2 = z1;

     label05:
        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if r22 != $r11 goto label08;

     label06:
        z2 = 0;

        goto label08;

     label07:
        r23 = new com.android.internal.telephony.CallStateException;

        specialinvoke r23.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot dial in current state");

        throw r23;

     label08:
        exitmonitor r21;

     label09:
        return z2;

     label10:
        $r17 := @caughtexception;

     label11:
        exitmonitor r21;

     label12:
        throw $r17;

     label13:
        $r4 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r4.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot dial in current state");

        throw $r4;

     label14:
        $r3 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r3.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("service not available");

        throw $r3;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private void processCallStateChange(com.android.ims.ImsCall, com.android.internal.telephony.Call$State, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.Call$State r2;
        int i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r11;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.ims.ImsCall;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        i0 := @parameter2: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processCallStateChange ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cause=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void processCallStateChange(com.android.ims.ImsCall,com.android.internal.telephony.Call$State,int,boolean)>(r1, r2, i0, 0);

        return;
    }

    private void processCallStateChange(com.android.ims.ImsCall, com.android.internal.telephony.Call$State, int, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.Call$State r2, $r11;
        int i0;
        boolean z0, $z2, z5, z6;
        java.lang.StringBuilder $r3;
        java.lang.String $r10;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r12, $r13, $r17;
        com.android.internal.telephony.imsphone.ImsPhone $r14;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r16;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.ims.ImsCall;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        i0 := @parameter2: int;

        z5 := @parameter3: boolean;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processCallStateChange state=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cause=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignoreState=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r10);

        if r1 != null goto label1;

        return;

     label1:
        r16 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>(r1);

        if r16 != null goto label2;

        return;

     label2:
        virtualinvoke r16.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean updateMediaCapabilities(com.android.ims.ImsCall)>(r1);

        if z5 == 0 goto label3;

        virtualinvoke r16.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean updateAddressDisplay(com.android.ims.ImsCall)>(r1);

        virtualinvoke r16.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean updateExtras(com.android.ims.ImsCall)>(r1);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void maybeSetVideoCallProvider(com.android.internal.telephony.imsphone.ImsPhoneConnection,com.android.ims.ImsCall)>(r16, r1);

        return;

     label3:
        z0 = virtualinvoke r16.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean update(com.android.ims.ImsCall,com.android.internal.telephony.Call$State)>(r1, r2);

        z6 = z0;

        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if r2 != $r11 goto label7;

        $z2 = virtualinvoke r16.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean onDisconnect(int)>(i0);

        if $z2 != 0 goto label5;

        if z0 == 0 goto label4;

        goto label5;

     label4:
        z6 = 0;

        goto label6;

     label5:
        z6 = 1;

     label6:
        $r17 = virtualinvoke r16.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall getCall()>();

        virtualinvoke $r17.<com.android.internal.telephony.imsphone.ImsPhoneCall: void detach(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r16);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r16);

     label7:
        if z6 == 0 goto label9;

        $r12 = virtualinvoke r16.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall getCall()>();

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        if $r12 != $r13 goto label8;

        return;

     label8:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r14.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPreciseCallStateChanged()>();

     label9:
        return;
    }

    private void pruneCallQualityMetricsHistory()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.concurrent.ConcurrentLinkedQueue $r1, $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.ConcurrentLinkedQueue mCallQualityMetricsHistory>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.ConcurrentLinkedQueue: int size()>();

        if $i0 <= 10 goto label1;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.ConcurrentLinkedQueue mCallQualityMetricsHistory>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();

     label1:
        return;
    }

    private void registerForConnectivityChanges()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.net.ConnectivityManager r1;
        boolean $z0, $z1;
        com.android.internal.telephony.imsphone.ImsPhone $r3;
        android.content.Context $r4;
        java.lang.Object $r5;
        android.net.NetworkRequest$Builder $r6;
        android.net.NetworkRequest $r8;
        android.net.ConnectivityManager$NetworkCallback $r9;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsMonitoringConnectivity>;

        if $z0 != 0 goto label3;

        $z1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyVtHandoverToWifiFail>;

        if $z1 != 0 goto label1;

        goto label3;

     label1:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r1 = (android.net.ConnectivityManager) $r5;

        if r1 == null goto label2;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "registerForConnectivityChanges");

        $r6 = new android.net.NetworkRequest$Builder;

        specialinvoke $r6.<android.net.NetworkRequest$Builder: void <init>()>();

        virtualinvoke $r6.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addTransportType(int)>(1);

        $r8 = virtualinvoke $r6.<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>();

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.ConnectivityManager$NetworkCallback mNetworkCallback>;

        virtualinvoke r1.<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>($r8, $r9);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsMonitoringConnectivity> = 1;

     label2:
        return;

     label3:
        return;
    }

    private void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2, $r3;
        boolean $z2, $z3, $z4, $z5, z6;
        com.android.internal.telephony.imsphone.ImsPhone $r4, $r5, $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r8;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r9, r10;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r9 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        entermonitor r0;

     label01:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r9);

        $z2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsInEmergencyCall>;

        if $z2 == 0 goto label12;

     label02:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        z6 = 0;

     label04:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r7;

     label05:
        if r10 == null goto label08;

     label06:
        $z5 = virtualinvoke r10.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isEmergency()>();

        if $z5 != 1 goto label08;

     label07:
        z6 = 1;

        goto label09;

     label08:
        goto label03;

     label09:
        if z6 != 0 goto label12;

     label10:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $z4 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhone: boolean isEcmCanceledForEmergency()>();

        if $z4 == 0 goto label11;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhone: void handleTimerInEmergencyCallbackMode(int)>(0);

     label11:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsInEmergencyCall> = 0;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhone: void sendEmergencyCallStateChange(boolean)>(0);

     label12:
        exitmonitor r0;

        return;

     label13:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    private void resetImsCapabilities()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0, z1;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities $r1;
        com.android.internal.telephony.imsphone.ImsPhone $r2, $r3, $r5, $r6;
        android.telephony.ims.ImsReasonInfo $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("Resetting Capabilities...");

        z0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isVideoCallEnabled()>();

        $r1 = new android.telephony.ims.feature.MmTelFeature$MmTelCapabilities;

        specialinvoke $r1.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities mMmTelCapabilities> = $r1;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: void setServiceState(int)>(1);

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhone: void resetImsRegistrationState()>();

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r4 = new android.telephony.ims.ImsReasonInfo;

        specialinvoke $r4.<android.telephony.ims.ImsReasonInfo: void <init>(int,int)>(106, 0);

        virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhone: void processDisconnectReason(android.telephony.ims.ImsReasonInfo)>($r4);

        z1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isVideoCallEnabled()>();

        if z0 == z1 goto label1;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhone: void notifyForVideoCapabilityChanged(boolean)>(z1);

     label1:
        return;
    }

    private void resetState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsInEmergencyCall> = 0;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhone: void setEcmCanceledForEmergency(boolean)>(0);

        return;
    }

    private void resumeForegroundCall() throws com.android.ims.ImsException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2;
        com.android.internal.telephony.imsphone.ImsPhone $r3;
        com.android.internal.telephony.metrics.TelephonyMetrics $r4;
        int $i0;
        android.telephony.ims.ImsCallSession $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.ims.ImsCall: void resume()>();

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r5 = virtualinvoke r1.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getSession()>();

        virtualinvoke $r4.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCommand(int,android.telephony.ims.ImsCallSession,int)>($i0, $r5, 6);

     label1:
        return;
    }

    private void retryGetImsService()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsManager $r1;
        boolean $z0;
        com.android.ims.FeatureConnector $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $z0 = virtualinvoke $r1.<com.android.ims.ImsManager: boolean isServiceAvailable()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.FeatureConnector mImsManagerConnector>;

        virtualinvoke $r2.<com.android.ims.FeatureConnector: void connect()>();

        return;
    }

    private void scheduleHandoverCheck()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r2;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r3, $r4;
        boolean $z0, $z1, $z2;
        int $i0;
        android.os.Message $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r2 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneConnection getFirstConnection()>();

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyVtHandoverToWifiFail>;

        if $z0 == 0 goto label3;

        if r1 == null goto label3;

        $z1 = virtualinvoke r1.<com.android.ims.ImsCall: boolean isVideoCall()>();

        if $z1 == 0 goto label3;

        if r2 == null goto label3;

        $i0 = virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getDisconnectCause()>();

        if $i0 == 0 goto label1;

        goto label3;

     label1:
        $z2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean hasMessages(int)>(25);

        if $z2 != 0 goto label2;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "scheduleHandoverCheck: schedule");

        $r5 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Message obtainMessage(int,java.lang.Object)>(25, r1);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean sendMessageDelayed(android.os.Message,long)>($r5, 60000L);

     label2:
        return;

     label3:
        return;
    }

    private void sendImsServiceStateIntent(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.content.Intent $r2;
        com.android.internal.telephony.imsphone.ImsPhone $r3, $r6, r9;
        int $i0;
        android.content.Context $r5, $r7;
        java.lang.String r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r8 := @parameter0: java.lang.String;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>(r8);

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android:phone_id", $i0);

        r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        if r9 == null goto label1;

        $r5 = virtualinvoke r9.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        if $r5 == null goto label1;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        virtualinvoke $r7.<android.content.Context: void sendBroadcast(android.content.Intent)>($r2);

     label1:
        return;
    }

    private void setEmergencyCallInfo(android.telephony.ims.ImsCallProfile, com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.telephony.ims.ImsCallProfile r1;
        com.android.internal.telephony.Connection r2;
        android.telephony.emergency.EmergencyNumber r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.telephony.ims.ImsCallProfile;

        r2 := @parameter1: com.android.internal.telephony.Connection;

        r3 = virtualinvoke r2.<com.android.internal.telephony.Connection: android.telephony.emergency.EmergencyNumber getEmergencyNumberInfo()>();

        if r3 == null goto label1;

        $z0 = virtualinvoke r2.<com.android.internal.telephony.Connection: boolean hasKnownUserIntentEmergency()>();

        virtualinvoke r1.<android.telephony.ims.ImsCallProfile: void setEmergencyCallInfo(android.telephony.emergency.EmergencyNumber,boolean)>(r3, $z0);

     label1:
        return;
    }

    private void setVideoCallProvider(com.android.internal.telephony.imsphone.ImsPhoneConnection, com.android.ims.ImsCall) throws android.os.RemoteException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        com.android.ims.ImsCall r2;
        boolean z0;
        android.telephony.ims.ImsCallSession $r3;
        com.android.internal.telephony.imsphone.ImsPhone $r4;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        com.android.ims.internal.ImsVideoCallProviderWrapper $r7;
        com.android.ims.internal.IImsVideoCallProvider r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r2 := @parameter1: com.android.ims.ImsCall;

        $r3 = virtualinvoke r2.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getCallSession()>();

        r8 = virtualinvoke $r3.<android.telephony.ims.ImsCallSession: com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider()>();

        if r8 == null goto label2;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        z0 = virtualinvoke $r6.<android.content.res.Resources: boolean getBoolean(int)>(17891575);

        $r7 = new com.android.ims.internal.ImsVideoCallProviderWrapper;

        specialinvoke $r7.<com.android.ims.internal.ImsVideoCallProviderWrapper: void <init>(com.android.ims.internal.IImsVideoCallProvider)>(r8);

        if z0 == 0 goto label1;

        virtualinvoke $r7.<com.android.ims.internal.ImsVideoCallProviderWrapper: void setUseVideoPauseWorkaround(boolean)>(z0);

     label1:
        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setVideoProvider(android.telecom.Connection$VideoProvider)>($r7);

        virtualinvoke $r7.<com.android.ims.internal.ImsVideoCallProviderWrapper: void registerForDataUsageUpdate(android.os.Handler,int,java.lang.Object)>(r0, 22, r2);

        virtualinvoke $r7.<com.android.ims.internal.ImsVideoCallProviderWrapper: void addImsVideoProviderCallback(com.android.ims.internal.ImsVideoCallProviderWrapper$ImsVideoProviderWrapperCallback)>(r1);

     label2:
        return;
    }

    private boolean shouldDisconnectActiveCallOnAnswer(com.android.ims.ImsCall, com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1, r11;
        boolean z1, z2, $z3, $z4, $z5, $z6, $z7, z8, $z9, z10, $z11, z12;
        com.android.ims.ImsManager $r10, $r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r15;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r11 := @parameter0: com.android.ims.ImsCall;

        r1 := @parameter1: com.android.ims.ImsCall;

        if r11 == null goto label9;

        if r1 != null goto label1;

        goto label9;

     label1:
        $z3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mDropVideoCallWhenAnsweringAudioCall>;

        if $z3 != 0 goto label2;

        return 0;

     label2:
        $z4 = virtualinvoke r11.<com.android.ims.ImsCall: boolean isVideoCall()>();

        if $z4 != 0 goto label4;

        $z6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mTreatDowngradedVideoCallsAsVideoCalls>;

        if $z6 == 0 goto label3;

        $z7 = virtualinvoke r11.<com.android.ims.ImsCall: boolean wasVideoCall()>();

        if $z7 == 0 goto label3;

        goto label4;

     label3:
        z8 = 0;

        goto label5;

     label4:
        z8 = 1;

     label5:
        z1 = virtualinvoke r11.<com.android.ims.ImsCall: boolean isWifiCall()>();

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $z9 = virtualinvoke $r12.<com.android.ims.ImsManager: boolean isWfcEnabledByPlatform()>();

        if $z9 == 0 goto label6;

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $z5 = virtualinvoke $r10.<com.android.ims.ImsManager: boolean isWfcEnabledByUser()>();

        if $z5 == 0 goto label6;

        z10 = 1;

        goto label7;

     label6:
        z10 = 0;

     label7:
        $z11 = virtualinvoke r1.<com.android.ims.ImsCall: boolean isVideoCall()>();

        z2 = $z11 ^ 1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shouldDisconnectActiveCallOnAnswer : isActiveCallVideo=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z8);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isActiveCallOnWifi=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isIncomingCallAudio=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isVowifiEnabled=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z10);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r15);

        z12 = 0;

        if z8 == 0 goto label8;

        z12 = 0;

        if z1 == 0 goto label8;

        z12 = 0;

        if z2 == 0 goto label8;

        z12 = 0;

        if z10 != 0 goto label8;

        z12 = 1;

     label8:
        return z12;

     label9:
        return 0;
    }

    private boolean shouldNumberBePlacedOnIms(boolean, java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;
        int i0;
        java.lang.StringBuilder r1;
        com.android.ims.ImsManager $r2, $r4;
        java.lang.String[] $r3;
        java.lang.String $r6, $r10, r12;
        com.android.ims.ImsException $r11;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter0: boolean;

        r12 := @parameter1: java.lang.String;

     label1:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if $r2 == null goto label5;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r12;

        i0 = virtualinvoke $r4.<com.android.ims.ImsManager: int shouldProcessCall(boolean,java.lang.String[])>(z0, $r3);

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shouldProcessCall: number: ");

        $r6 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsPhoneCallTracker", r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", result: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", $r10);

     label2:
        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "shouldProcessCall returned unknown result.");

        return 0;

     label3:
        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "shouldProcessCall: place over CSFB instead.");

        return 0;

     label4:
        return 1;

     label5:
        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "ImsManager unavailable, shouldProcessCall returning false.");

     label6:
        return 0;

     label7:
        $r11 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "ImsService unavailable, shouldProcessCall returning false.");

        return 0;

        catch com.android.ims.ImsException from label1 to label2 with label7;
        catch com.android.ims.ImsException from label5 to label6 with label7;
    }

    private void startListeningForCalls() throws com.android.ims.ImsException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        com.android.internal.telephony.LocalLog $r1;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$MmTelFeatureListener $r2;
        com.android.ims.ImsManager $r3, $r5, $r8, $r10, $r11, $r22, $r24;
        com.android.internal.telephony.imsphone.ImsPhone $r4, $r15, $r17, $r18, $r21, $r25, $r28;
        android.telephony.ims.RegistrationManager$RegistrationCallback $r6;
        android.telephony.ims.ImsMmTelManager$CapabilityCallback $r7;
        com.android.ims.ImsConfigListener$Stub $r9;
        com.android.ims.ImsConfig $r12;
        android.telephony.ims.ProvisioningManager$Callback $r13;
        com.android.ims.ImsEcbm $r14;
        com.android.ims.ImsEcbmStateListener $r16;
        boolean $z0, $z1;
        android.content.Context $r19, $r23;
        android.content.ContentResolver $r20;
        com.android.internal.telephony.imsphone.ImsExternalCallTracker $r26;
        com.android.internal.telephony.imsphone.ImsExternalCallTracker$ExternalCallStateListener $r27;
        com.android.ims.ImsMultiEndpoint r29;
        com.android.ims.ImsUtInterface r30;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("startListeningForCalls");

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mOperationLocalLog>;

        virtualinvoke $r1.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("startListeningForCalls - Connecting to ImsService");

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$MmTelFeatureListener mMmTelFeatureListener>;

        virtualinvoke $r3.<com.android.ims.ImsManager: void open(android.telephony.ims.feature.MmTelFeature$Listener)>($r2);

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r6 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ims.RegistrationManager$RegistrationCallback getImsMmTelRegistrationCallback()>();

        virtualinvoke $r5.<com.android.ims.ImsManager: void addRegistrationCallback(android.telephony.ims.RegistrationManager$RegistrationCallback)>($r6);

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.ImsMmTelManager$CapabilityCallback mImsCapabilityCallback>;

        virtualinvoke $r8.<com.android.ims.ImsManager: void addCapabilitiesCallback(android.telephony.ims.ImsMmTelManager$CapabilityCallback)>($r7);

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsConfigListener$Stub mImsConfigListener>;

        virtualinvoke $r10.<com.android.ims.ImsManager: void setConfigListener(com.android.ims.ImsConfigListener)>($r9);

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $r12 = virtualinvoke $r11.<com.android.ims.ImsManager: com.android.ims.ImsConfig getConfigInterface()>();

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.ProvisioningManager$Callback mConfigCallback>;

        virtualinvoke $r12.<com.android.ims.ImsConfig: void addConfigCallback(android.telephony.ims.ProvisioningManager$Callback)>($r13);

        $r14 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsEcbm getEcbmInterface()>();

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r16 = virtualinvoke $r15.<com.android.internal.telephony.imsphone.ImsPhone: com.android.ims.ImsEcbmStateListener getImsEcbmStateListener()>();

        virtualinvoke $r14.<com.android.ims.ImsEcbm: void setEcbmStateListener(com.android.ims.ImsEcbmStateListener)>($r16);

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $z0 = virtualinvoke $r17.<com.android.internal.telephony.imsphone.ImsPhone: boolean isInEcm()>();

        if $z0 == 0 goto label1;

        $r28 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r28.<com.android.internal.telephony.imsphone.ImsPhone: void exitEmergencyCallbackMode()>();

     label1:
        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r19 = virtualinvoke $r18.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r20 = virtualinvoke $r19.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r20, "preferred_tty_mode", 0);

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r23 = virtualinvoke $r21.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        virtualinvoke $r22.<com.android.ims.ImsManager: void setUiTTYMode(android.content.Context,int,android.os.Message)>($r23, i0, null);

        r29 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsMultiEndpoint getMultiEndpointInterface()>();

        if r29 == null goto label2;

        $r25 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r26 = virtualinvoke $r25.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsExternalCallTracker getExternalCallTracker()>();

        $r27 = virtualinvoke $r26.<com.android.internal.telephony.imsphone.ImsExternalCallTracker: com.android.internal.telephony.imsphone.ImsExternalCallTracker$ExternalCallStateListener getExternalCallStateListener()>();

        virtualinvoke r29.<com.android.ims.ImsMultiEndpoint: void setExternalCallStateListener(com.android.ims.ImsExternalCallStateListener)>($r27);

     label2:
        r30 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface mUtInterface> = r30;

        if r30 == null goto label3;

        interfaceinvoke r30.<com.android.ims.ImsUtInterface: void registerForSuppServiceIndication(android.os.Handler,int,java.lang.Object)>(r0, 27, null);

     label3:
        $z1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mCarrierConfigLoaded>;

        if $z1 == 0 goto label4;

        $r24 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        virtualinvoke $r24.<com.android.ims.ImsManager: void updateImsServiceConfig(boolean)>(1);

     label4:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void sendImsServiceStateIntent(java.lang.String)>("com.android.ims.IMS_SERVICE_UP");

        return;
    }

    private void stopListeningForCalls()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.LocalLog $r1;
        com.android.ims.ImsConfig $r2;
        android.telephony.ims.ProvisioningManager$Callback $r3;
        android.telephony.ims.aidl.IImsConfigCallback $r4;
        com.android.ims.ImsManager $r5, r7;
        com.android.ims.ImsException $r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("stopListeningForCalls");

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mOperationLocalLog>;

        virtualinvoke $r1.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("stopListeningForCalls - Disconnecting from ImsService");

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void resetImsCapabilities()>();

        r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if r7 == null goto label5;

     label1:
        $r2 = virtualinvoke r7.<com.android.ims.ImsManager: com.android.ims.ImsConfig getConfigInterface()>();

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.ProvisioningManager$Callback mConfigCallback>;

        $r4 = virtualinvoke $r3.<android.telephony.ims.ProvisioningManager$Callback: android.telephony.ims.aidl.IImsConfigCallback getBinder()>();

        virtualinvoke $r2.<com.android.ims.ImsConfig: void removeConfigCallback(android.telephony.ims.aidl.IImsConfigCallback)>($r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "stopListeningForCalls: unable to remove config callback.");

     label4:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        virtualinvoke $r5.<com.android.ims.ImsManager: void close()>();

     label5:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void sendImsServiceStateIntent(java.lang.String)>("com.android.ims.IMS_SERVICE_DOWN");

        return;

        catch com.android.ims.ImsException from label1 to label2 with label3;
    }

    private void switchAfterConferenceSuccess()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.StringBuilder $r2;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r4, $r8, $r12, $r15, $r16;
        com.android.internal.telephony.Call$State $r5, $r9, $r13, $r14;
        java.lang.String $r11;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("switchAfterConferenceSuccess fg =");

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bg = ");

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r11);

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r14 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r13 != $r14 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("switchAfterConferenceSuccess");

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r16.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r15);

     label1:
        return;
    }

    private void transferHandoverConnections(com.android.internal.telephony.imsphone.ImsPhoneCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall r1, $r4, $r6, $r9, $r10, $r21, $r23, $r26, $r31;
        com.android.internal.telephony.Connection r2, r43;
        java.util.ArrayList $r3, $r5, $r7, $r8, $r11, $r24, $r30, $r32;
        com.android.internal.telephony.Call$State $r12, $r13, $r17, $r20, $r34, $r37;
        boolean $z1, $z2, $z3;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r14, $r27, $r28;
        java.lang.StringBuilder $r15, $r35;
        java.lang.String $r19, $r39;
        com.android.ims.ImsCall $r22, $r29;
        java.lang.Object $r25, $r33;
        java.util.Iterator r40, r42;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCall;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        if $r3 == null goto label2;

        $r32 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        r40 = virtualinvoke $r32.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r33 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Connection) $r33;

        $r34 = r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        r2.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State mPreHandoverState> = $r34;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection state before handover is ");

        $r37 = virtualinvoke r2.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getStateBeforeHandover()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r39);

        goto label1;

     label2:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        if $r5 != null goto label3;

        $r31 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        $r30 = r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList mConnections>;

        $r31.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList mConnections> = $r30;

        goto label4;

     label3:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        $r8 = $r6.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList mConnections>;

        $r7 = r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList mConnections>;

        virtualinvoke $r8.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r7);

     label4:
        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: void copyConnectionFrom(com.android.internal.telephony.Call)>(r1);

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        if $r11 == null goto label7;

        $r22 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if $r22 == null goto label5;

        $r29 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        virtualinvoke $r29.<com.android.ims.ImsCall: void close()>();

     label5:
        $r23 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        $r24 = virtualinvoke $r23.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        r42 = virtualinvoke $r24.<java.util.ArrayList: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r25 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r43 = (com.android.internal.telephony.Connection) $r25;

        $r27 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) r43;

        $r26 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        virtualinvoke $r27.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void changeParent(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r26);

        $r28 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) r43;

        virtualinvoke $r28.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void releaseWakeLock()>();

        goto label6;

     label7:
        $r12 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z1 = virtualinvoke $r12.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z1 == 0 goto label8;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call is alive and state is ");

        $r17 = r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r19);

        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        $r20 = r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState>;

        $r21.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState> = $r20;

     label8:
        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearConnections()>();

        $r13 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State mState> = $r13;

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        if $r14 == null goto label9;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logi(java.lang.String)>("pending MO on handover, clearing...");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = null;

     label9:
        return;
    }

    private void unregisterForConnectivityChanges()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.net.ConnectivityManager r1;
        boolean $z0, $z1;
        com.android.internal.telephony.imsphone.ImsPhone $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.net.ConnectivityManager$NetworkCallback $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsMonitoringConnectivity>;

        if $z0 == 0 goto label3;

        $z1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyVtHandoverToWifiFail>;

        if $z1 != 0 goto label1;

        goto label3;

     label1:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r1 = (android.net.ConnectivityManager) $r4;

        if r1 == null goto label2;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "unregisterForConnectivityChanges");

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.ConnectivityManager$NetworkCallback mNetworkCallback>;

        virtualinvoke r1.<android.net.ConnectivityManager: void unregisterNetworkCallback(android.net.ConnectivityManager$NetworkCallback)>($r5);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsMonitoringConnectivity> = 0;

     label2:
        return;

     label3:
        return;
    }

    private void updatePhoneState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.PhoneConstants$State r1, $r3, $r26, $r29, $r33, $r34, $r35, $r38, $r43, $r44, $r48, $r49, $r50;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r7, $r11, $r14, $r18, $r41, $r42, $r47;
        com.android.internal.telephony.Call$State $r8, $r15, $r45;
        int $i0, $i1, $i2;
        java.lang.String $r21, $r28;
        java.lang.StringBuilder $r22, $r51;
        com.android.internal.telephony.imsphone.ImsPhone $r30, $r31;
        com.android.internal.telephony.metrics.TelephonyMetrics $r32;
        android.os.AsyncResult $r36, $r39;
        com.android.internal.telephony.RegistrantList $r37, $r40;
        boolean $z0, $z1, $z2, z3, $z4;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r46, r52;
        java.io.Serializable r53;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        r46 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        if r46 == null goto label02;

        $r45 = virtualinvoke r46.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Call$State getState()>();

        $z2 = virtualinvoke $r45.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z2 != 0 goto label01;

        goto label02;

     label01:
        z3 = 0;

        goto label03;

     label02:
        z3 = 1;

     label03:
        $r47 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $z4 = virtualinvoke $r47.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isRinging()>();

        if $z4 == 0 goto label04;

        $r44 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r44;

        goto label07;

     label04:
        if z3 == 0 goto label06;

        $r41 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $z0 = virtualinvoke $r41.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isIdle()>();

        if $z0 == 0 goto label06;

        $r42 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $z1 = virtualinvoke $r42.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isIdle()>();

        if $z1 != 0 goto label05;

        goto label06;

     label05:
        $r43 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r43;

        goto label07;

     label06:
        $r48 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r48;

     label07:
        $r49 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r50 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r49 != $r50 goto label08;

        $r38 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if r1 == $r38 goto label08;

        $r40 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants>;

        $r39 = new android.os.AsyncResult;

        specialinvoke $r39.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r40.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r39);

        goto label09;

     label08:
        $r3 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if r1 != $r3 goto label09;

        $r35 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if r1 == $r35 goto label09;

        $r37 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants>;

        $r36 = new android.os.AsyncResult;

        specialinvoke $r36.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r37.<com.android.internal.telephony.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r36);

     label09:
        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updatePhoneState pendingMo = ");

        r52 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        if r52 != null goto label10;

        r53 = "null";

        goto label11;

     label10:
        r53 = virtualinvoke r52.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Call$State getState()>();

     label11:
        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r53);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", fg= ");

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $i0 = virtualinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhoneCall: int getConnectionsCount()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), bg= ");

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r15 = virtualinvoke $r14.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $i1 = virtualinvoke $r18.<com.android.internal.telephony.imsphone.ImsPhoneCall: int getConnectionsCount()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updatePhoneState oldState=");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newState=");

        $r26 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r28);

        $r29 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if $r29 == r1 goto label12;

        $r30 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r30.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPhoneStateChanged()>();

        $r32 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r31 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i2 = virtualinvoke $r31.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r33 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        virtualinvoke $r32.<com.android.internal.telephony.metrics.TelephonyMetrics: void writePhoneState(int,com.android.internal.telephony.PhoneConstants$State)>($i2, $r33);

        $r34 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void notifyPhoneStateChanged(com.android.internal.telephony.PhoneConstants$State,com.android.internal.telephony.PhoneConstants$State)>(r1, $r34);

     label12:
        return;
    }

    public void acceptCall(int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0, $i1, $i2, $i3;
        com.android.ims.ImsCall r1, r37, r39;
        com.android.internal.telephony.LocalLog $r2;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r3, $r5, $r8, $r11, $r14, $r19, $r21, $r22, $r23, $r24, $r27, $r29, $r30;
        com.android.internal.telephony.Call$State $r4, $r6, $r7, $r9, $r20, $r31;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, z7;
        com.android.internal.telephony.CallStateException $r10, $r32, $r34, $r36, r40;
        com.android.internal.telephony.imsphone.ImsPhone $r12, $r16, $r25;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r13, $r26;
        java.util.ArrayList $r15, $r28;
        com.android.internal.telephony.metrics.TelephonyMetrics $r17;
        android.telephony.ims.ImsCallSession $r18;
        com.android.ims.ImsException $r33, $r35;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("acceptCall");

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mOperationLocalLog>;

        virtualinvoke $r2.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("accepted incoming call");

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z1 = virtualinvoke $r4.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z1 == 0 goto label02;

        $r30 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r31 = virtualinvoke $r30.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z6 = virtualinvoke $r31.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z6 != 0 goto label01;

        goto label02;

     label01:
        $r32 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r32.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot accept call");

        throw $r32;

     label02:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r7 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        if $r6 != $r7 goto label09;

        $r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r20 = virtualinvoke $r19.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z3 = virtualinvoke $r20.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z3 == 0 goto label09;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void setMute(boolean)>(0);

        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r21.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        r37 = virtualinvoke $r22.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        z7 = 0;

        $r23 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $z4 = virtualinvoke $r23.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean hasConnections()>();

        if $z4 == 0 goto label03;

        z7 = 0;

        $r29 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $z5 = virtualinvoke $r29.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean hasConnections()>();

        if $z5 == 0 goto label03;

        z7 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean shouldDisconnectActiveCallOnAnswer(com.android.ims.ImsCall,com.android.ims.ImsCall)>(r1, r37);

     label03:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mPendingCallVideoState> = i0;

        if z7 == 0 goto label07;

        $r24 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r24.<com.android.internal.telephony.imsphone.ImsPhoneCall: void hangup()>();

        $r25 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r26 = virtualinvoke $r25.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        $r27 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r28 = virtualinvoke $r27.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        virtualinvoke $r26.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onImsAcceptCall(java.util.List)>($r28);

     label04:
        $i3 = staticinvoke <android.telephony.ims.ImsCallProfile: int getCallTypeFromVideoState(int)>(i0);

        virtualinvoke r37.<com.android.ims.ImsCall: void accept(int)>($i3);

     label05:
        goto label08;

     label06:
        $r35 := @caughtexception;

        $r36 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r36.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot accept call");

        throw $r36;

     label07:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void holdActiveCallForWaitingCall()>();

     label08:
        goto label13;

     label09:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z2 = virtualinvoke $r9.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z2 == 0 goto label16;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("acceptCall: incoming...");

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void setMute(boolean)>(0);

     label10:
        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        r39 = virtualinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

     label11:
        if r39 == null goto label14;

     label12:
        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r15 = virtualinvoke $r14.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        virtualinvoke $r13.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onImsAcceptCall(java.util.List)>($r15);

        $i1 = staticinvoke <android.telephony.ims.ImsCallProfile: int getCallTypeFromVideoState(int)>(i0);

        virtualinvoke r39.<com.android.ims.ImsCall: void accept(int)>($i1);

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i2 = virtualinvoke $r16.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r18 = virtualinvoke r39.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getSession()>();

        virtualinvoke $r17.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCommand(int,android.telephony.ims.ImsCallSession,int)>($i2, $r18, 2);

     label13:
        return;

     label14:
        r40 = new com.android.internal.telephony.CallStateException;

        specialinvoke r40.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no valid ims call");

        throw r40;

     label15:
        $r33 := @caughtexception;

        $r34 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r34.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot accept call");

        throw $r34;

     label16:
        $r10 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r10.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("phone not ringing");

        throw $r10;

        catch com.android.ims.ImsException from label04 to label05 with label06;
        catch com.android.ims.ImsException from label10 to label11 with label15;
        catch com.android.ims.ImsException from label12 to label13 with label15;
        catch com.android.ims.ImsException from label14 to label15 with label15;
    }

    public void addReasonCodeRemapping(java.lang.Integer, java.lang.String, java.lang.Integer)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.Integer r1, r3;
        java.lang.String r2, r7;
        android.util.Pair $r4;
        java.util.Map $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Integer;

        r7 = r2;

        if r2 == null goto label1;

        r7 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

     label1:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mImsReasonCodeMap>;

        $r4 = new android.util.Pair;

        specialinvoke $r4.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, r7);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r3);

        return;
    }

    void callEndCleanupHandOverCallIfAny()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r6, $r10;
        java.util.ArrayList $r3, $r7, $r11;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r9;
        com.android.internal.telephony.PhoneConstants$State $r12;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("callEndCleanupHandOverCallIfAny, mHandoverCall.mConnections=");

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.ArrayList getConnections()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r9);

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        virtualinvoke $r10.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearConnections()>();

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        virtualinvoke $r11.<java.util.ArrayList: void clear()>();

        $r12 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r12;

     label1:
        return;
    }

    public boolean canConference()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1, $r4, $r7, $r8;
        com.android.internal.telephony.Call$State $r2, $r3, $r5, $r6;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r2 != $r3 goto label1;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r5 != $r6 goto label1;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $z0 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isFull()>();

        if $z0 != 0 goto label1;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $z1 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isFull()>();

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean canTransfer()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1, $r4;
        com.android.internal.telephony.Call$State $r2, $r3, $r5, $r6;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r2 != $r3 goto label1;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r5 != $r6 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void cancelUSSD(android.os.Message)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Message r1;
        com.android.ims.ImsCall r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.os.Message;

        r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession>;

        if r2 != null goto label1;

        return;

     label1:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Message mPendingUssd> = r1;

        virtualinvoke r2.<com.android.ims.ImsCall: void terminate(int)>(501);

        return;
    }

    public void checkForDialIssues() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.Optional $r1;
        java.lang.Boolean $r2, $r4;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.internal.telephony.CallStateException $r5, $r7, $r9, $r14;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r6;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r8, $r10, $r12;
        com.android.internal.telephony.Call$State $r11, $r13;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = staticinvoke <android.internal.telephony.sysprop.TelephonyProperties: java.util.Optional disable_call()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r3 = virtualinvoke $r1.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label4;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        if $r6 != null goto label3;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $z1 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isRinging()>();

        if $z1 != 0 goto label2;

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z2 = virtualinvoke $r11.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z3 = virtualinvoke $r13.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        $z4 = $z2 & $z3;

        if $z4 != 0 goto label1;

        return;

     label1:
        $r14 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r14.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(6, "Already an active foreground and background call.");

        throw $r14;

     label2:
        $r9 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r9.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(4, "Can\'t place a call while another is ringing.");

        throw $r9;

     label3:
        $r7 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r7.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(3, "Another outgoing call is already being dialed.");

        throw $r7;

     label4:
        $r5 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r5.<com.android.internal.telephony.CallStateException: void <init>(int,java.lang.String)>(5, "ro.telephony.disable-call has been used to disable calling.");

        throw $r5;
    }

    public void clearDisconnected()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("clearDisconnected");

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void internalClearDisconnected()>();

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPreciseCallStateChanged()>();

        return;
    }

    public void conference()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1, r2;
        long l0, $l4, $l5, l6;
        com.android.internal.telephony.LocalLog r3;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r4, $r5, $r6, $r7, $r28, $r29, $r43;
        boolean $z0, $z1;
        byte $b1, $b2, $b3;
        java.lang.StringBuilder $r8, $r12, $r18, $r24, $r30, $r35;
        java.lang.String $r11, $r17, $r23, $r27, $r33, $r37, $r39, r45, r47;
        com.android.ims.ImsException $r34;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r44, r46;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 != null goto label01;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("conference no foreground ims call");

        return;

     label01:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        r2 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r2 != null goto label02;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("conference no background ims call");

        return;

     label02:
        $z0 = virtualinvoke r1.<com.android.ims.ImsCall: boolean isCallSessionMergePending()>();

        if $z0 == 0 goto label03;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("conference: skip; foreground call already in process of merging.");

        return;

     label03:
        $z1 = virtualinvoke r2.<com.android.ims.ImsCall: boolean isCallSessionMergePending()>();

        if $z1 == 0 goto label04;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("conference: skip; background call already in process of merging.");

        return;

     label04:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        l6 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCall: long getEarliestConnectTime()>();

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        l0 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneCall: long getEarliestConnectTime()>();

        $b1 = l6 cmp 0L;

        if $b1 <= 0 goto label05;

        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label05;

        $r28 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $l4 = virtualinvoke $r28.<com.android.internal.telephony.imsphone.ImsPhoneCall: long getEarliestConnectTime()>();

        $r29 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $l5 = virtualinvoke $r29.<com.android.internal.telephony.imsphone.ImsPhoneCall: long getEarliestConnectTime()>();

        l6 = staticinvoke <java.lang.Math: long min(long,long)>($l4, $l5);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("conference - using connect time = ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r33);

        goto label07;

     label05:
        $b2 = l6 cmp 0L;

        if $b2 <= 0 goto label06;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("conference - bg call connect time is 0; using fg = ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r27);

        goto label07;

     label06:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("conference - fg call connect time is 0; using bg = ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r11);

        l6 = l0;

     label07:
        $r43 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r44 = virtualinvoke $r43.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneConnection getFirstConnection()>();

        if r44 == null goto label08;

        virtualinvoke r44.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setConferenceConnectTime(long)>(l6);

        virtualinvoke r44.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void handleMergeStart()>();

        r45 = virtualinvoke r44.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getTelecomCallId()>();

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void cacheConnectionTimeWithPhoneNumber(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r44);

        goto label09;

     label08:
        r45 = "";

     label09:
        r46 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>(r2);

        if r46 == null goto label10;

        virtualinvoke r46.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void handleMergeStart()>();

        r47 = virtualinvoke r46.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getTelecomCallId()>();

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void cacheConnectionTimeWithPhoneNumber(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r46);

        goto label11;

     label10:
        r47 = "";

     label11:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("conference: fgCallId=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bgCallId=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r17);

        r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mOperationLocalLog>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("conference: fgCallId=");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bgCallId=");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>($r23);

     label12:
        virtualinvoke r1.<com.android.ims.ImsCall: void merge(com.android.ims.ImsCall)>(r2);

     label13:
        goto label15;

     label14:
        $r34 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("conference ");

        $r37 = virtualinvoke $r34.<com.android.ims.ImsException: java.lang.String getMessage()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r39);

     label15:
        return;

        catch com.android.ims.ImsException from label12 to label13 with label14;
    }

    public com.android.internal.telephony.Connection dial(java.lang.String, int, android.os.Bundle) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1;
        int i0, $i1;
        android.os.Bundle r2;
        com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder $r3, $r5, $r7, $r8;
        com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder $r4, $r6;
        com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs $r9;
        com.android.internal.telephony.Connection $r10;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r3 = new com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder;

        specialinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder: com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder setIntentExtras(android.os.Bundle)>(r2);

        $r5 = (com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder) $r4;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder: com.android.internal.telephony.PhoneInternalInterface$DialArgs$Builder setVideoState(int)>(i0);

        $r7 = (com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder) $r6;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int getClirMode()>();

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder setClirMode(int)>($i1);

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs build()>();

        $r10 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs)>(r1, $r9);

        return $r10;
    }

    public com.android.internal.telephony.Connection dial(java.lang.String, com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs r1;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Object r2;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r3, $r13, $r15, $r17, $r22, $r29, $r46, r50;
        com.android.internal.telephony.imsphone.ImsPhone r4, $r12, $r14, $r19, $r30;
        com.android.internal.telephony.imsphone.ImsPhoneCall r5;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy $r6;
        com.android.internal.telephony.LocalLog $r7, $r11;
        java.lang.String $r10, $r27, $r33, r40, r43;
        android.os.Bundle $r16, $r20, $r23, $r25, $r28;
        int $i1, $i2, i4, i5;
        com.android.ims.ImsEcbm $r18;
        android.telecom.Connection$RttTextStream $r21, r47;
        com.android.ims.ImsException $r34;
        java.lang.Throwable $r35, $r36, $r37, $r38, $r39, r45;
        java.lang.StringBuilder r41, r42, r44;
        com.android.internal.telephony.CallStateException r49, r51;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r40 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs;

        entermonitor r0;

     label01:
        z0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isPhoneInEcbMode()>();

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy mPhoneNumberUtilsProxy>;

        z1 = interfaceinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy: boolean isEmergencyNumber(java.lang.String)>(r40);

        $z3 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean shouldNumberBePlacedOnIms(boolean,java.lang.String)>(z1, r40);

        if $z3 == 0 goto label40;

        i4 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: int clirMode>;

        i5 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: int videoState>;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dial clirMode=");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r10 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r10);

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mOperationLocalLog>;

        virtualinvoke $r11.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("dial requested.");

     label02:
        if z1 == 0 goto label05;

     label03:
        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dial emergency call, set clirModIe=");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2);

        $r33 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r33);

     label04:
        r43 = r40;

        i4 = 2;

        goto label06;

     label05:
        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        r43 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String convertNumberIfNecessary(com.android.internal.telephony.Phone,java.lang.String)>($r12, r40);

     label06:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mClirMode> = i4;

        z2 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean prepareForDialing(com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs)>(r1);

     label07:
        if z0 == 0 goto label09;

        if z1 == 0 goto label09;

     label08:
        $r30 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r30.<com.android.internal.telephony.imsphone.ImsPhone: void handleTimerInEmergencyCallbackMode(int)>(1);

     label09:
        if z1 == 0 goto label12;

     label10:
        $z6 = staticinvoke <android.telecom.VideoProfile: boolean isVideo(int)>(i5);

        if $z6 == 0 goto label12;

        $z7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowEmergencyVideoCalls>;

        if $z7 != 0 goto label12;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>("dial: carrier does not support video emergency calls; downgrade to audio-only");

     label11:
        i5 = 0;

        goto label12;

     label12:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mPendingCallVideoState> = i5;

        r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.Object mSyncHold>;

        entermonitor r2;

     label13:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String mLastDialString> = r43;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs mLastDialArgs> = r1;

        r3 = new com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

     label14:
        specialinvoke r3.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void <init>(com.android.internal.telephony.Phone,java.lang.String,com.android.internal.telephony.imsphone.ImsPhoneCallTracker,com.android.internal.telephony.imsphone.ImsPhoneCall,boolean)>(r4, r43, r0, r5, z1);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = r3;

     label15:
        if z1 == 0 goto label19;

        if r1 == null goto label19;

     label16:
        $r23 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: android.os.Bundle intentExtras>;

        if $r23 == null goto label19;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dial ims emergency dialer: ");

        $r25 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: android.os.Bundle intentExtras>;

        $z4 = virtualinvoke $r25.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.telecom.extra.IS_USER_INTENT_EMERGENCY_CALL");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r27 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", $r27);

        $r29 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        $r28 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: android.os.Bundle intentExtras>;

        $z5 = virtualinvoke $r28.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.telecom.extra.IS_USER_INTENT_EMERGENCY_CALL");

        virtualinvoke $r29.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setHasKnownUserIntentEmergency(boolean)>($z5);

     label17:
        goto label19;

     label18:
        $r35 := @caughtexception;

        r45 = $r35;

        goto label37;

     label19:
        $r46 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        virtualinvoke $r46.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setVideoState(int)>(i5);

        r47 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: android.telecom.Connection$RttTextStream rttTextStream>;

     label20:
        if r47 == null goto label22;

     label21:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("dial: setting RTT stream on mPendingMO");

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        $r21 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: android.telecom.Connection$RttTextStream rttTextStream>;

        virtualinvoke $r22.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setCurrentRttTextStream(android.telecom.Connection$RttTextStream)>($r21);

     label22:
        exitmonitor r2;

     label23:
        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void addConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>($r13);

     label24:
        if z2 != 0 goto label32;

        if z0 == 0 goto label30;

        if z0 == 0 goto label25;

        if z1 == 0 goto label25;

        goto label30;

     label25:
        $r18 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsEcbm getEcbmInterface()>();

        virtualinvoke $r18.<com.android.ims.ImsEcbm: void exitEmergencyCallbackMode()>();

     label26:
        $r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r19.<com.android.internal.telephony.imsphone.ImsPhone: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>(r0, 14, null);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int pendingCallClirMode> = i4;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mPendingCallVideoState> = i5;

        $r20 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: android.os.Bundle intentExtras>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Bundle mPendingIntentExtras> = $r20;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean pendingCallInEcm> = 1;

     label27:
        goto label32;

     label28:
        $r34 := @caughtexception;

     label29:
        virtualinvoke $r34.<com.android.ims.ImsException: void printStackTrace()>();

        r49 = new com.android.internal.telephony.CallStateException;

        specialinvoke r49.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("service not available");

        throw r49;

     label30:
        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        $i2 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: int retryCallFailCause>;

        $i1 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: int retryCallFailNetworkType>;

        $r16 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: android.os.Bundle intentExtras>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection,int,int,int,int,android.os.Bundle)>($r17, i4, i5, $i2, $i1, $r16);

     label31:
        goto label32;

     label32:
        $z8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNumberConverted>;

        if $z8 == 0 goto label33;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        virtualinvoke $r15.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void restoreDialedNumberAfterConversion(java.lang.String)>(r40);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNumberConverted> = 0;

     label33:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r14.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPreciseCallStateChanged()>();

        r50 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

     label34:
        exitmonitor r0;

        return r50;

     label35:
        $r37 := @caughtexception;

        r45 = $r37;

        goto label37;

     label36:
        $r39 := @caughtexception;

        r45 = $r39;

     label37:
        exitmonitor r2;

     label38:
        throw r45;

     label39:
        $r36 := @caughtexception;

        r45 = $r36;

        goto label37;

     label40:
        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "dial: shouldNumberBePlacedOnIms = false");

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mOperationLocalLog>;

        virtualinvoke $r7.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("dial: shouldNumberBePlacedOnIms = false");

        r51 = new com.android.internal.telephony.CallStateException;

        specialinvoke r51.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cs_fallback");

        throw r51;

     label41:
        $r38 := @caughtexception;

        exitmonitor r0;

        throw $r38;

        catch java.lang.Throwable from label01 to label02 with label41;
        catch java.lang.Throwable from label03 to label04 with label41;
        catch java.lang.Throwable from label05 to label06 with label41;
        catch java.lang.Throwable from label06 to label07 with label41;
        catch java.lang.Throwable from label08 to label09 with label41;
        catch java.lang.Throwable from label10 to label11 with label41;
        catch java.lang.Throwable from label12 to label13 with label41;
        catch java.lang.Throwable from label13 to label14 with label36;
        catch java.lang.Throwable from label14 to label15 with label35;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label35;
        catch java.lang.Throwable from label21 to label22 with label18;
        catch java.lang.Throwable from label22 to label23 with label35;
        catch java.lang.Throwable from label23 to label24 with label41;
        catch com.android.ims.ImsException from label25 to label26 with label28;
        catch java.lang.Throwable from label25 to label26 with label41;
        catch java.lang.Throwable from label26 to label27 with label41;
        catch java.lang.Throwable from label29 to label30 with label41;
        catch java.lang.Throwable from label30 to label31 with label41;
        catch java.lang.Throwable from label32 to label33 with label41;
        catch java.lang.Throwable from label33 to label34 with label41;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label38 to label39 with label41;
        catch java.lang.Throwable from label40 to label41 with label41;
    }

    public void dispose()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsUtInterface r1;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r3, $r4, $r5;
        com.android.internal.telephony.imsphone.ImsPhone $r6, $r9, $r13;
        android.content.Context $r7, $r14;
        android.content.BroadcastReceiver $r8;
        com.android.internal.telephony.Phone $r10;
        com.android.internal.telephony.dataconnection.DataEnabledSettings $r11;
        com.android.ims.FeatureConnector $r12;
        java.lang.Object $r15;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$VtDataUsageProvider $r16;
        android.app.usage.NetworkStatsManager $r17;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("dispose");

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: void dispose()>();

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: void dispose()>();

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: void dispose()>();

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhoneCall: void dispose()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void clearDisconnected()>();

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface mUtInterface>;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.ims.ImsUtInterface: void unregisterForSuppServiceIndication(android.os.Handler)>(r0);

     label1:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r7.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r8);

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.Phone: com.android.internal.telephony.dataconnection.DataEnabledSettings getDataEnabledSettings()>();

        virtualinvoke $r11.<com.android.internal.telephony.dataconnection.DataEnabledSettings: void unregisterForDataEnabledChanged(android.os.Handler)>(r0);

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.FeatureConnector mImsManagerConnector>;

        virtualinvoke $r12.<com.android.ims.FeatureConnector: void disconnect()>();

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r15 = virtualinvoke $r14.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("netstats");

        $r17 = (android.app.usage.NetworkStatsManager) $r15;

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$VtDataUsageProvider mVtDataUsageProvider>;

        virtualinvoke $r17.<android.app.usage.NetworkStatsManager: void unregisterNetworkStatsProvider(android.net.netstats.provider.NetworkStatsProvider)>($r16);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String[] r1;
        com.android.internal.telephony.IndentingPrintWriter $r2;
        java.lang.StringBuilder $r5, $r10, $r15, $r20, $r25, $r30, $r35, $r40, $r45, $r49, $r54, $r59, $r64, $r69, $r74, $r79, $r84, $r88, $r97;
        com.android.internal.telephony.RegistrantList $r7, $r12;
        java.lang.String $r9, $r14, $r19, $r24, $r29, $r34, $r39, $r44, $r48, $r53, $r58, $r63, $r68, $r73, $r78, $r83, $r87, $r91, $r104;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r17, $r22, $r27, $r32;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r37;
        com.android.internal.telephony.imsphone.ImsPhone $r42;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.PhoneConstants$State $r51;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities $r56;
        java.util.concurrent.atomic.AtomicInteger $r61;
        int $i0, $i1, $i2, i3;
        android.net.NetworkStats $r66, $r71;
        java.util.Map $r76;
        java.util.concurrent.ConcurrentLinkedQueue $r81;
        com.android.internal.telephony.LocalLog $r93;
        com.android.ims.ImsManager $r95, $r105;
        java.util.ArrayList $r96, $r101, r129;
        java.lang.Object $r102;
        java.lang.Exception $r106;
        java.io.FileDescriptor r107;
        java.io.PrintWriter r108;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r107 := @parameter0: java.io.FileDescriptor;

        r108 := @parameter1: java.io.PrintWriter;

        r1 := @parameter2: java.lang.String[];

        $r2 = new com.android.internal.telephony.IndentingPrintWriter;

        specialinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r108, "  ");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("ImsPhoneCallTracker extends:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        specialinvoke r0.<com.android.internal.telephony.CallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r107, $r2, r1);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVoiceCallEndedRegistrants=");

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVoiceCallStartedRegistrants=");

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRingingCall=");

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mForegroundCall=");

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r24);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBackgroundCall=");

        $r27 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHandoverCall=");

        $r32 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r34);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingMO=");

        $r37 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r39);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPhone=");

        $r42 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r44);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDesiredMute=");

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mDesiredMute>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r48);

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mState=");

        $r51 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r51);

        $r53 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r53);

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMmTelCapabilities=");

        $r56 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities mMmTelCapabilities>;

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r58);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDefaultDialerUid=");

        $r61 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.atomic.AtomicInteger mDefaultDialerUid>;

        $i0 = virtualinvoke $r61.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r63 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r63);

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVtDataUsageSnapshot=");

        $r66 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageSnapshot>;

        virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        $r68 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r68);

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVtDataUsageUidSnapshot=");

        $r71 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageUidSnapshot>;

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r71);

        $r73 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r73);

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCallQualityMetrics=");

        $r76 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mCallQualityMetrics>;

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r76);

        $r78 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r78);

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCallQualityMetricsHistory=");

        $r81 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.ConcurrentLinkedQueue mCallQualityMetricsHistory>;

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r81);

        $r83 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r83);

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsConferenceEventPackageHandlingEnabled=");

        $z1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsConferenceEventPackageEnabled>;

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r87);

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSupportCepOnPeer=");

        $z2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportCepOnPeer>;

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r91 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r91);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>(" Event Log:");

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter increaseIndent()>();

        $r93 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mOperationLocalLog>;

        virtualinvoke $r93.<com.android.internal.telephony.LocalLog: void dump(java.io.PrintWriter)>($r2);

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: com.android.internal.telephony.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void flush()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

     label1:
        $r95 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if $r95 == null goto label2;

        $r105 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        virtualinvoke $r105.<com.android.ims.ImsManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r107, $r2, r1);

     label2:
        goto label4;

     label3:
        $r106 := @caughtexception;

        virtualinvoke $r106.<java.lang.Exception: void printStackTrace()>();

     label4:
        r129 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        if r129 == null goto label6;

        $i1 = virtualinvoke r129.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label6;

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>("mConnections:");

        i3 = 0;

     label5:
        $r96 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        $i2 = virtualinvoke $r96.<java.util.ArrayList: int size()>();

        if i3 >= $i2 goto label6;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  [");

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r101 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        $r102 = virtualinvoke $r101.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r102);

        $r104 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.telephony.IndentingPrintWriter: void println(java.lang.String)>($r104);

        i3 = i3 + 1;

        goto label5;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void explicitCallTransfer() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1, r7;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r3;
        boolean $z0;
        com.android.ims.ImsException $r4;
        com.android.internal.telephony.CallStateException $r5, $r9;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r7 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        r1 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r7 == null goto label4;

        if r1 == null goto label4;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean canTransfer()>();

        if $z0 == 0 goto label4;

     label1:
        virtualinvoke r7.<com.android.ims.ImsCall: void consultativeTransfer(com.android.ims.ImsCall)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new com.android.internal.telephony.CallStateException;

        $r6 = virtualinvoke $r4.<com.android.ims.ImsException: java.lang.String getMessage()>();

        specialinvoke $r5.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label4:
        $r9 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r9.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot transfer");

        throw $r9;

        catch com.android.ims.ImsException from label1 to label2 with label3;
    }

    protected void finalize()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("ImsPhoneCallTracker finalized");

        return;
    }

    public int getClirMode()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.content.SharedPreferences r1;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy $r3, $r7;
        com.android.internal.telephony.imsphone.ImsPhone $r4, $r6, $r11;
        com.android.internal.telephony.Phone $r5;
        android.content.Context $r8;
        java.lang.StringBuilder $r9;
        int $i0, $i1;
        java.lang.String $r13;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy mSharedPreferenceProxy>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        if $r5 == null goto label1;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy mSharedPreferenceProxy>;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r8 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        r1 = interfaceinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clir_sub_key");

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhone: int getSubId()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = interfaceinvoke r1.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r13, 0);

        return $i1;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>("dial; could not get default CLIR mode.");

        return 0;
    }

    public java.util.ArrayList getConnections()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        return $r1;
    }

    public int getDisconnectCauseFromReasonInfo(android.telephony.ims.ImsReasonInfo, com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.telephony.ims.ImsReasonInfo r1;
        com.android.internal.telephony.Call$State r2, $r3;
        int $i0;
        com.android.internal.telephony.imsphone.ImsPhone $r4, $r8, $r12;
        com.android.internal.telephony.Phone $r5, $r9, $r13;
        com.android.internal.telephony.ServiceStateTracker $r6, $r10, $r14;
        com.android.internal.telephony.RestrictedState $r7, $r11, $r15;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.telephony.ims.ImsReasonInfo;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int maybeRemapReasonCode(android.telephony.ims.ImsReasonInfo)>(r1);

        lookupswitch($i0)
        {
            case 0: goto label43;
            case 106: goto label42;
            case 108: goto label41;
            case 111: goto label40;
            case 112: goto label38;
            case 121: goto label42;
            case 122: goto label42;
            case 123: goto label42;
            case 124: goto label42;
            case 131: goto label42;
            case 132: goto label42;
            case 143: goto label37;
            case 144: goto label42;
            case 201: goto label36;
            case 202: goto label36;
            case 203: goto label36;
            case 240: goto label35;
            case 241: goto label34;
            case 243: goto label33;
            case 244: goto label32;
            case 245: goto label31;
            case 246: goto label30;
            case 247: goto label29;
            case 248: goto label28;
            case 249: goto label27;
            case 250: goto label26;
            case 251: goto label25;
            case 321: goto label24;
            case 331: goto label23;
            case 332: goto label22;
            case 333: goto label21;
            case 335: goto label36;
            case 337: goto label20;
            case 338: goto label19;
            case 340: goto label24;
            case 341: goto label20;
            case 352: goto label18;
            case 354: goto label18;
            case 361: goto label17;
            case 362: goto label24;
            case 363: goto label16;
            case 364: goto label15;
            case 402: goto label14;
            case 501: goto label13;
            case 505: goto label38;
            case 510: goto label17;
            case 1014: goto label12;
            case 1016: goto label11;
            case 1403: goto label10;
            case 1404: goto label37;
            case 1405: goto label09;
            case 1406: goto label08;
            case 1407: goto label07;
            case 1512: goto label06;
            case 1514: goto label05;
            case 1515: goto label04;
            case 1602: goto label23;
            case 1606: goto label23;
            case 1607: goto label23;
            case 1608: goto label23;
            case 1611: goto label23;
            case 1614: goto label23;
            case 1616: goto label23;
            case 1618: goto label23;
            case 1622: goto label03;
            case 1623: goto label02;
            default: goto label01;
        };

     label01:
        goto label46;

     label02:
        return 79;

     label03:
        return 78;

     label04:
        return 25;

     label05:
        return 71;

     label06:
        return 60;

     label07:
        return 59;

     label08:
        return 54;

     label09:
        return 55;

     label10:
        return 53;

     label11:
        return 51;

     label12:
        return 52;

     label13:
        return 3;

     label14:
        return 77;

     label15:
        return 64;

     label16:
        return 63;

     label17:
        return 2;

     label18:
        return 9;

     label19:
        return 4;

     label20:
        return 8;

     label21:
        return 7;

     label22:
        return 12;

     label23:
        return 81;

     label24:
        return 12;

     label25:
        return 68;

     label26:
        return 67;

     label27:
        return 70;

     label28:
        return 69;

     label29:
        return 66;

     label30:
        return 48;

     label31:
        return 47;

     label32:
        return 46;

     label33:
        return 58;

     label34:
        return 21;

     label35:
        return 20;

     label36:
        return 13;

     label37:
        return 16;

     label38:
        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        if r2 != $r3 goto label39;

        return 62;

     label39:
        return 61;

     label40:
        return 17;

     label41:
        return 45;

     label42:
        return 18;

     label43:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.Phone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        $r7 = $r6.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z0 = virtualinvoke $r7.<com.android.internal.telephony.RestrictedState: boolean isCsRestricted()>();

        if $z0 == 0 goto label44;

        return 22;

     label44:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.Phone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        $r11 = $r10.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z1 = virtualinvoke $r11.<com.android.internal.telephony.RestrictedState: boolean isCsEmergencyRestricted()>();

        if $z1 == 0 goto label45;

        return 24;

     label45:
        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.Phone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        $r15 = $r14.<com.android.internal.telephony.ServiceStateTracker: com.android.internal.telephony.RestrictedState mRestrictedState>;

        $z2 = virtualinvoke $r15.<com.android.internal.telephony.RestrictedState: boolean isCsNormalRestricted()>();

        if $z2 == 0 goto label46;

        return 23;

     label46:
        return 36;
    }

    com.android.ims.ImsEcbm getEcbmInterface() throws com.android.ims.ImsException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsManager r1;
        com.android.ims.ImsException $r2;
        com.android.ims.ImsEcbm $r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.ims.ImsManager: com.android.ims.ImsEcbm getEcbmInterface()>();

        return $r3;

     label1:
        $r2 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsException getImsManagerIsNullException()>();

        throw $r2;
    }

    public com.android.ims.ImsCall$Listener getImsCallListener()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall$Listener $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsCallListener>;

        return $r1;
    }

    public int getImsRegistrationTech()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsManager r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<com.android.ims.ImsManager: int getRegistrationTech()>();

        return $i0;

     label1:
        return -1;
    }

    public void getImsRegistrationTech(java.util.function.Consumer)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.function.Consumer r1;
        com.android.ims.ImsManager r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.util.function.Consumer;

        r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.ims.ImsManager: void getRegistrationTech(java.util.function.Consumer)>(r1);

        goto label2;

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r3);

     label2:
        return;
    }

    com.android.ims.ImsMultiEndpoint getMultiEndpointInterface() throws com.android.ims.ImsException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsException $r1, $r2;
        int $i0;
        com.android.ims.ImsManager r3;
        com.android.ims.ImsMultiEndpoint r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if r3 == null goto label5;

     label1:
        r4 = virtualinvoke r3.<com.android.ims.ImsManager: com.android.ims.ImsMultiEndpoint getMultiEndpointInterface()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $i0 = virtualinvoke $r2.<com.android.ims.ImsException: int getCode()>();

        if $i0 != 902 goto label4;

        return null;

     label4:
        throw $r2;

     label5:
        $r1 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsException getImsManagerIsNullException()>();

        throw $r1;

        catch com.android.ims.ImsException from label1 to label2 with label3;
    }

    public boolean getMute()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mDesiredMute>;

        return $z0;
    }

    public volatile com.android.internal.telephony.Phone getPhone()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone getPhone()>();

        return $r1;
    }

    public com.android.internal.telephony.imsphone.ImsPhone getPhone()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        return $r1;
    }

    public com.android.internal.telephony.PhoneConstants$State getState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.PhoneConstants$State $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        return $r1;
    }

    public com.android.ims.ImsUtInterface getUtInterface() throws com.android.ims.ImsException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsManager r1;
        com.android.ims.ImsException $r2;
        com.android.ims.ImsUtInterface $r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.ims.ImsManager: com.android.ims.ImsUtInterface getSupplementaryServiceConfiguration()>();

        return $r3;

     label1:
        $r2 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsException getImsManagerIsNullException()>();

        throw $r2;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.StringBuilder $r1, $r72, $r89, $r94, $r99;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i12, $i13, $i14, $i15, $i16;
        java.lang.String $r4, $r16, $r42, $r77, $r92, $r97, $r102;
        java.lang.Object $r5, $r6, $r18, $r19, $r22, $r26, $r27, $r30, $r32, $r36, $r47, $r48, $r51, $r54, $r55, $r57, $r58, $r61, $r62, $r63, $r64, $r66, $r68, $r69, $r70, $r106, $r107, $r112, $r113;
        com.android.ims.ImsCall $r7, $r21, $r29, $r37, $r50, $r60, $r109, $r115, r129, r137, r142;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r8, $r38, $r44, $r59;
        com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs $r9, $r41, r120;
        com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder $r10, $r11, $r12, $r13;
        com.android.internal.telephony.imsphone.ImsPhone $r14, $r23, $r33, $r39, $r53, $r80, $r83, $r85;
        com.android.internal.telephony.Phone $r15, $r24, $r34, $r40;
        com.android.internal.telephony.Connection $r17, $r43;
        android.telephony.ims.ImsReasonInfo $r20, $r28, $r49, $r108, $r114;
        com.android.internal.telephony.CommandsInterface $r25, $r35;
        android.os.AsyncResult $r31, r131, r139, r141;
        android.telephony.ims.ImsCallProfile $r45;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r46, $r78, $r82, $r84, $r87, $r104, r119, r128, r138, r146;
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode $r52;
        android.telephony.ims.feature.ImsFeature$Capabilities $r56;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z8;
        java.lang.Boolean $r65;
        java.lang.Integer $r67;
        java.lang.Long $r71, r143;
        long $l8, $l9, $l11;
        byte $b10;
        com.android.ims.ImsEcbm $r79;
        android.os.Bundle $r81, $r86;
        com.android.ims.ImsException $r88, $r93, $r98, $r103;
        com.android.internal.telephony.CallStateException $r105, $r111;
        java.lang.Throwable $r110;
        android.os.Message r116;
        android.util.Pair r118, r126, r127, r140;
        com.android.internal.telephony.SomeArgs r135;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r116 := @parameter0: android.os.Message;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage what=");

        $i0 = r116.<android.os.Message: int what>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r4);

        $i1 = r116.<android.os.Message: int what>;

        tableswitch($i1)
        {
            case 14: goto label42;
            case 15: goto label01;
            case 16: goto label01;
            case 17: goto label01;
            case 18: goto label40;
            case 19: goto label01;
            case 20: goto label39;
            case 21: goto label34;
            case 22: goto label33;
            case 23: goto label32;
            case 24: goto label01;
            case 25: goto label27;
            case 26: goto label23;
            case 27: goto label19;
            case 28: goto label14;
            case 29: goto label13;
            case 30: goto label10;
            case 31: goto label07;
            case 32: goto label02;
            default: goto label01;
        };

     label01:
        goto label44;

     label02:
        $r5 = r116.<android.os.Message: java.lang.Object obj>;

        r118 = (android.util.Pair) $r5;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeMessages(int)>(32);

        $r6 = r118.<android.util.Pair: java.lang.Object first>;

        $r7 = (com.android.ims.ImsCall) $r6;

        r119 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>($r7);

        if r119 != null goto label03;

        $r18 = r118.<android.util.Pair: java.lang.Object first>;

        $r21 = (com.android.ims.ImsCall) $r18;

        $r19 = r118.<android.util.Pair: java.lang.Object second>;

        $r20 = (android.telephony.ims.ImsReasonInfo) $r19;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void sendCallStartFailedDisconnect(com.android.ims.ImsCall,android.telephony.ims.ImsReasonInfo)>($r21, $r20);

        goto label44;

     label03:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCall: void detach(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r119);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r119);

     label04:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = null;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs mLastDialArgs>;

        $r10 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder 'from'(com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs)>($r9);

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder setRttTextStream(android.telecom.Connection$RttTextStream)>(null);

        $r12 = virtualinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder setRetryCallFailCause(int)>(3001);

        $i2 = virtualinvoke r119.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getCallRadioTech()>();

        $i3 = staticinvoke <android.telephony.ServiceState: int rilRadioTechnologyToNetworkType(int)>($i2);

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder setRetryCallFailNetworkType(int)>($i3);

        r120 = virtualinvoke $r13.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs$Builder: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs build()>();

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r15 = virtualinvoke $r14.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String mLastDialString>;

        $r17 = virtualinvoke $r15.<com.android.internal.telephony.Phone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.PhoneInternalInterface$DialArgs)>($r16, r120);

        virtualinvoke r119.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onOriginalConnectionReplaced(com.android.internal.telephony.Connection)>($r17);

     label05:
        goto label44;

     label06:
        $r105 := @caughtexception;

        $r106 = r118.<android.util.Pair: java.lang.Object first>;

        $r109 = (com.android.ims.ImsCall) $r106;

        $r107 = r118.<android.util.Pair: java.lang.Object second>;

        $r108 = (android.telephony.ims.ImsReasonInfo) $r107;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void sendCallStartFailedDisconnect(com.android.ims.ImsCall,android.telephony.ims.ImsReasonInfo)>($r109, $r108);

        goto label44;

     label07:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void resumeForegroundCall()>();

     label08:
        goto label44;

     label09:
        $r98 := @caughtexception;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage EVENT_RESUME_NOW_FOREGROUND_CALL exception=");

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r98);

        $r102 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r102);

        goto label44;

     label10:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void answerWaitingCall()>();

     label11:
        goto label44;

     label12:
        $r88 := @caughtexception;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage EVENT_ANSWER_WAITING_CALL exception=");

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r88);

        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r92);

        goto label44;

     label13:
        $r22 = r116.<android.os.Message: java.lang.Object obj>;

        r126 = (android.util.Pair) $r22;

        $r23 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r24 = virtualinvoke $r23.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $r25 = $r24.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r25.<com.android.internal.telephony.CommandsInterface: void unregisterForOn(android.os.Handler)>(r0);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeMessages(int)>(28);

        $r26 = r126.<android.util.Pair: java.lang.Object first>;

        $r29 = (com.android.ims.ImsCall) $r26;

        $r27 = r126.<android.util.Pair: java.lang.Object second>;

        $r28 = (android.telephony.ims.ImsReasonInfo) $r27;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void sendCallStartFailedDisconnect(com.android.ims.ImsCall,android.telephony.ims.ImsReasonInfo)>($r29, $r28);

        goto label44;

     label14:
        $r30 = r116.<android.os.Message: java.lang.Object obj>;

        $r31 = (android.os.AsyncResult) $r30;

        $r32 = $r31.<android.os.AsyncResult: java.lang.Object userObj>;

        r127 = (android.util.Pair) $r32;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeMessages(int)>(29);

        $r33 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r34 = virtualinvoke $r33.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $r35 = $r34.<com.android.internal.telephony.Phone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r35.<com.android.internal.telephony.CommandsInterface: void unregisterForOn(android.os.Handler)>(r0);

        $r36 = r127.<android.util.Pair: java.lang.Object first>;

        $r37 = (com.android.ims.ImsCall) $r36;

        r128 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>($r37);

        if r128 != null goto label15;

        $r47 = r127.<android.util.Pair: java.lang.Object first>;

        $r50 = (com.android.ims.ImsCall) $r47;

        $r48 = r127.<android.util.Pair: java.lang.Object second>;

        $r49 = (android.telephony.ims.ImsReasonInfo) $r48;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void sendCallStartFailedDisconnect(com.android.ims.ImsCall,android.telephony.ims.ImsReasonInfo)>($r50, $r49);

        goto label44;

     label15:
        $r38 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r38.<com.android.internal.telephony.imsphone.ImsPhoneCall: void detach(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r128);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r128);

     label16:
        $r39 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r40 = virtualinvoke $r39.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $r42 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String mLastDialString>;

        $r41 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs mLastDialArgs>;

        $r43 = virtualinvoke $r40.<com.android.internal.telephony.Phone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.PhoneInternalInterface$DialArgs)>($r42, $r41);

        virtualinvoke r128.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onOriginalConnectionReplaced(com.android.internal.telephony.Connection)>($r43);

        $r44 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r129 = virtualinvoke $r44.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        $r45 = virtualinvoke r129.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        virtualinvoke $r45.<android.telephony.ims.ImsCallProfile: void setCallExtraBoolean(java.lang.String,boolean)>("e_call", 1);

        $r46 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>(r129);

        virtualinvoke $r46.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean updateExtras(com.android.ims.ImsCall)>(r129);

     label17:
        goto label44;

     label18:
        $r111 := @caughtexception;

        $r112 = r127.<android.util.Pair: java.lang.Object first>;

        $r115 = (com.android.ims.ImsCall) $r112;

        $r113 = r127.<android.util.Pair: java.lang.Object second>;

        $r114 = (android.telephony.ims.ImsReasonInfo) $r113;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void sendCallStartFailedDisconnect(com.android.ims.ImsCall,android.telephony.ims.ImsReasonInfo)>($r115, $r114);

        goto label44;

     label19:
        $r51 = r116.<android.os.Message: java.lang.Object obj>;

        r131 = (android.os.AsyncResult) $r51;

        $r52 = new com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r53 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        specialinvoke $r52.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void <init>(com.android.internal.telephony.imsphone.ImsPhone)>($r53);

     label20:
        virtualinvoke $r52.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void setIsSsInfo(boolean)>(1);

        virtualinvoke $r52.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void processImsSsData(android.os.AsyncResult)>(r131);

     label21:
        goto label44;

     label22:
        $r93 := @caughtexception;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in parsing SS Data: ");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r93);

        $r97 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", $r97);

        goto label44;

     label23:
        $r54 = r116.<android.os.Message: java.lang.Object obj>;

        r135 = (com.android.internal.telephony.SomeArgs) $r54;

     label24:
        $r55 = r135.<com.android.internal.telephony.SomeArgs: java.lang.Object arg1>;

        $r56 = (android.telephony.ims.feature.ImsFeature$Capabilities) $r55;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void handleFeatureCapabilityChanged(android.telephony.ims.feature.ImsFeature$Capabilities)>($r56);

     label25:
        virtualinvoke r135.<com.android.internal.telephony.SomeArgs: void recycle()>();

        goto label44;

     label26:
        $r110 := @caughtexception;

        virtualinvoke r135.<com.android.internal.telephony.SomeArgs: void recycle()>();

        throw $r110;

     label27:
        $r57 = r116.<android.os.Message: java.lang.Object obj>;

        $z1 = $r57 instanceof com.android.ims.ImsCall;

        if $z1 == 0 goto label44;

        $r58 = r116.<android.os.Message: java.lang.Object obj>;

        r137 = (com.android.ims.ImsCall) $r58;

        $r59 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r60 = virtualinvoke $r59.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r137 == $r60 goto label28;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "handoverCheck: no longer FG; check skipped.");

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void unregisterForConnectivityChanges()>();

        return;

     label28:
        $z2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mHasAttemptedStartOfCallHandover>;

        if $z2 != 0 goto label29;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mHasAttemptedStartOfCallHandover> = 1;

     label29:
        $z3 = virtualinvoke r137.<com.android.ims.ImsCall: boolean isWifiCall()>();

        if $z3 != 0 goto label31;

        r138 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>(r137);

        if r138 == null goto label30;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "handoverCheck: handover failed.");

        virtualinvoke r138.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onHandoverToWifiFailed()>();

     label30:
        $z4 = virtualinvoke r137.<com.android.ims.ImsCall: boolean isVideoCall()>();

        if $z4 == 0 goto label31;

        $i4 = virtualinvoke r138.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getDisconnectCause()>();

        if $i4 != 0 goto label31;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void registerForConnectivityChanges()>();

     label31:
        goto label44;

     label32:
        $r61 = r116.<android.os.Message: java.lang.Object obj>;

        r139 = (android.os.AsyncResult) $r61;

        $r62 = r139.<android.os.AsyncResult: java.lang.Object result>;

        $z5 = $r62 instanceof android.util.Pair;

        if $z5 == 0 goto label44;

        $r63 = r139.<android.os.AsyncResult: java.lang.Object result>;

        r140 = (android.util.Pair) $r63;

        $r64 = r140.<android.util.Pair: java.lang.Object first>;

        $r65 = (java.lang.Boolean) $r64;

        $z6 = virtualinvoke $r65.<java.lang.Boolean: boolean booleanValue()>();

        $r66 = r140.<android.util.Pair: java.lang.Object second>;

        $r67 = (java.lang.Integer) $r66;

        $i7 = virtualinvoke $r67.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void onDataEnabledChanged(boolean,int)>($z6, $i7);

        goto label44;

     label33:
        $r68 = r116.<android.os.Message: java.lang.Object obj>;

        r141 = (android.os.AsyncResult) $r68;

        $r69 = r141.<android.os.AsyncResult: java.lang.Object userObj>;

        r142 = (com.android.ims.ImsCall) $r69;

        $r70 = r141.<android.os.AsyncResult: java.lang.Object result>;

        $r71 = (java.lang.Long) $r70;

        $l8 = virtualinvoke $r71.<java.lang.Long: long longValue()>();

        r143 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VT data usage update. usage = ");

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r143);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", imsCall = ");

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r142);

        $r77 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r77);

        $l9 = virtualinvoke r143.<java.lang.Long: long longValue()>();

        $b10 = $l9 cmp 0L;

        if $b10 <= 0 goto label44;

        $l11 = virtualinvoke r143.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updateVtDataUsage(com.android.ims.ImsCall,long)>(r142, $l11);

        goto label44;

     label34:
        $r78 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        if $r78 == null goto label44;

     label35:
        $r79 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsEcbm getEcbmInterface()>();

        virtualinvoke $r79.<com.android.ims.ImsEcbm: void exitEmergencyCallbackMode()>();

        $r80 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r80.<com.android.internal.telephony.imsphone.ImsPhone: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>(r0, 14, null);

        $i12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mClirMode>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int pendingCallClirMode> = $i12;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean pendingCallInEcm> = 1;

     label36:
        goto label38;

     label37:
        $r103 := @caughtexception;

        virtualinvoke $r103.<com.android.ims.ImsException: void printStackTrace()>();

        $r104 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        virtualinvoke $r104.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setDisconnectCause(int)>(36);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean sendEmptyMessageDelayed(int,long)>(18, 500L);

     label38:
        goto label44;

     label39:
        $r82 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        $i14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mClirMode>;

        $i13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mPendingCallVideoState>;

        $r81 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Bundle mPendingIntentExtras>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection,int,int,android.os.Bundle)>($r82, $i14, $i13, $r81);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Bundle mPendingIntentExtras> = null;

        goto label44;

     label40:
        r146 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        if r146 == null goto label41;

        virtualinvoke r146.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean onDisconnect()>();

        $r84 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>($r84);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = null;

     label41:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Bundle mPendingIntentExtras> = null;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        $r83 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r83.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPreciseCallStateChanged()>();

        goto label44;

     label42:
        $z8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean pendingCallInEcm>;

        if $z8 == 0 goto label43;

        $r87 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        $i16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int pendingCallClirMode>;

        $i15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mPendingCallVideoState>;

        $r86 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Bundle mPendingIntentExtras>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection,int,int,android.os.Bundle)>($r87, $i16, $i15, $r86);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Bundle mPendingIntentExtras> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean pendingCallInEcm> = 0;

     label43:
        $r85 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r85.<com.android.internal.telephony.imsphone.ImsPhone: void unsetOnEcbModeExitResponse(android.os.Handler)>(r0);

     label44:
        return;

        catch com.android.internal.telephony.CallStateException from label04 to label05 with label06;
        catch com.android.ims.ImsException from label07 to label08 with label09;
        catch com.android.ims.ImsException from label10 to label11 with label12;
        catch com.android.internal.telephony.CallStateException from label16 to label17 with label18;
        catch com.android.ims.ImsException from label20 to label21 with label22;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch com.android.ims.ImsException from label35 to label36 with label37;
    }

    protected void handlePollCalls(android.os.AsyncResult)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.AsyncResult r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.os.AsyncResult;

        return;
    }

    public void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCall;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall,int)>(r1, 1);

        return;
    }

    public void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r10;
        java.lang.String $r4, $r16, $r31;
        com.android.internal.telephony.CallStateException $r5, $r15, $r30;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r6, $r7, $r8, $r9, $r18, r32;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r17, $r20, $r21, $r22;
        com.android.internal.telephony.Call$State $r19;
        com.android.internal.telephony.imsphone.ImsPhone $r23, $r26, $r35;
        com.android.internal.telephony.metrics.TelephonyMetrics $r24, $r27;
        android.telephony.ims.ImsCallSession $r25, $r28;
        boolean $z2, z3;
        com.android.ims.ImsException $r29;
        com.android.ims.ImsCall r34;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r32 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCall;

        i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hangup call - reason=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r4);

        $i1 = virtualinvoke r32.<com.android.internal.telephony.imsphone.ImsPhoneCall: int getConnectionsCount()>();

        if $i1 == 0 goto label17;

        r34 = virtualinvoke r32.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        z3 = 0;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        if r32 != $r6 goto label01;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("(ringing) hangup incoming");

        z3 = 1;

        goto label05;

     label01:
        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        if r32 != $r7 goto label03;

        $z2 = virtualinvoke r32.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isDialingOrAlerting()>();

        if $z2 == 0 goto label02;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("(foregnd) hangup dialing or alerting...");

        goto label05;

     label02:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("(foregnd) hangup foreground");

        goto label05;

     label03:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        if r32 != $r8 goto label04;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("(backgnd) hangup waiting or background");

        goto label05;

     label04:
        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        if r32 != $r9 goto label16;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("(handover) hangup handover (SRVCC) call");

     label05:
        virtualinvoke r32.<com.android.internal.telephony.imsphone.ImsPhoneCall: void onHangupLocal()>();

        if r34 == null goto label13;

        if z3 == 0 goto label11;

        if i0 != 2 goto label08;

     label06:
        virtualinvoke r34.<com.android.ims.ImsCall: void reject(int)>(365);

     label07:
        goto label09;

     label08:
        virtualinvoke r34.<com.android.ims.ImsCall: void reject(int)>(504);

     label09:
        $r27 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r26 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i3 = virtualinvoke $r26.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r28 = virtualinvoke r34.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getSession()>();

        virtualinvoke $r27.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCommand(int,android.telephony.ims.ImsCallSession,int)>($i3, $r28, 3);

     label10:
        goto label14;

     label11:
        virtualinvoke r34.<com.android.ims.ImsCall: void terminate(int)>(501);

        $r24 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r23 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i2 = virtualinvoke $r23.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r25 = virtualinvoke r34.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getSession()>();

        virtualinvoke $r24.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCommand(int,android.telephony.ims.ImsCallSession,int)>($i2, $r25, 4);

     label12:
        goto label14;

     label13:
        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        if $r17 == null goto label14;

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        if r32 != $r18 goto label14;

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        $r19 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        virtualinvoke $r20.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean update(com.android.ims.ImsCall,com.android.internal.telephony.Call$State)>(null, $r19);

        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        virtualinvoke $r21.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean onDisconnect()>();

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>($r22);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = null;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeMessages(int)>(20);

     label14:
        $r35 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r35.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPreciseCallStateChanged()>();

        return;

     label15:
        $r29 := @caughtexception;

        $r30 = new com.android.internal.telephony.CallStateException;

        $r31 = virtualinvoke $r29.<com.android.ims.ImsException: java.lang.String getMessage()>();

        specialinvoke $r30.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r31);

        throw $r30;

     label16:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsPhoneCall ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not belong to ImsPhoneCallTracker ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = new com.android.internal.telephony.CallStateException;

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label17:
        $r5 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r5.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no connections");

        throw $r5;

        catch com.android.ims.ImsException from label06 to label07 with label15;
        catch com.android.ims.ImsException from label08 to label09 with label15;
        catch com.android.ims.ImsException from label09 to label10 with label15;
        catch com.android.ims.ImsException from label11 to label12 with label15;
        catch com.android.ims.ImsException from label13 to label14 with label15;
    }

    public void hangup(com.android.internal.telephony.imsphone.ImsPhoneConnection) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0, $r3;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        java.lang.StringBuilder $r4;
        com.android.internal.telephony.CallStateException $r9;
        java.lang.String $r10;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r11;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("hangup connection");

        $r3 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker getOwner()>();

        if $r3 != r0 goto label1;

        $r11 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall getCall()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r11);

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsPhoneConnection ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not belong to ImsPhoneCallTracker ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = new com.android.internal.telephony.CallStateException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public void holdActiveCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState r1, $r5, $r6, $r7, $r8, $r12, $r20;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r9, $r10, $r13, $r14, $r18, $r22, $r23;
        com.android.internal.telephony.Call$State $r3, $r4, $r11;
        boolean $z0;
        com.android.internal.telephony.imsphone.ImsPhone $r15;
        com.android.internal.telephony.metrics.TelephonyMetrics $r16;
        int $i0;
        android.telephony.ims.ImsCallSession $r17;
        com.android.ims.ImsCall $r19, r26;
        com.android.ims.ImsException $r21;
        com.android.internal.telephony.CallStateException $r24;
        java.lang.String $r25;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r3 != $r4 goto label8;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        $r5 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_SINGLE_CALL_HOLD>;

        if $r6 == $r5 goto label7;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        $r7 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState SWAPPING_ACTIVE_AND_HELD>;

        if $r8 != $r7 goto label1;

        goto label7;

     label1:
        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r26 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke $r11.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z0 == 0 goto label2;

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r19 = virtualinvoke $r18.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mCallExpectedToResume> = $r19;

        $r20 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState SWAPPING_ACTIVE_AND_HELD>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState> = $r20;

        goto label3;

     label2:
        $r12 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_SINGLE_CALL_HOLD>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState> = $r12;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logHoldSwapState(java.lang.String)>("holdActiveCall");

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r14.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r13);

     label4:
        virtualinvoke r26.<com.android.ims.ImsCall: void hold()>();

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r15.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r17 = virtualinvoke r26.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getSession()>();

        virtualinvoke $r16.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCommand(int,android.telephony.ims.ImsCallSession,int)>($i0, $r17, 5);

     label5:
        goto label8;

     label6:
        $r21 := @caughtexception;

        $r23 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r23.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r22);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState> = r1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logHoldSwapState(java.lang.String)>("holdActiveCall - fail");

        $r24 = new com.android.internal.telephony.CallStateException;

        $r25 = virtualinvoke $r21.<com.android.ims.ImsException: java.lang.String getMessage()>();

        specialinvoke $r24.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label7:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logi(java.lang.String)>("Ignoring hold request while already holding or swapping");

        return;

     label8:
        return;

        catch com.android.ims.ImsException from label4 to label5 with label6;
    }

    public void holdActiveCallForWaitingCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState r1, $r5;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r4, $r6, $r7, $r11, $r15, $r16;
        com.android.internal.telephony.Call$State $r3, $r12, $r13;
        boolean $z0, z1;
        com.android.internal.telephony.imsphone.ImsPhone $r8;
        com.android.internal.telephony.metrics.TelephonyMetrics $r9;
        int $i0;
        android.telephony.ims.ImsCallSession $r10;
        com.android.ims.ImsException $r14;
        com.android.internal.telephony.CallStateException $r17;
        java.lang.String $r18;
        com.android.ims.ImsCall r19;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z0 != 0 goto label1;

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r12 = virtualinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r13 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        if $r12 != $r13 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if z1 == 0 goto label6;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r19 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        $r5 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState HOLDING_TO_ANSWER_INCOMING>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState> = $r5;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r6);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logHoldSwapState(java.lang.String)>("holdActiveCallForWaitingCall");

     label3:
        virtualinvoke r19.<com.android.ims.ImsCall: void hold()>();

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r10 = virtualinvoke r19.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getSession()>();

        virtualinvoke $r9.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCommand(int,android.telephony.ims.ImsCallSession,int)>($i0, $r10, 5);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r16.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r15);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState> = r1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logHoldSwapState(java.lang.String)>("holdActiveCallForWaitingCall - fail");

        $r17 = new com.android.internal.telephony.CallStateException;

        $r18 = virtualinvoke $r14.<com.android.ims.ImsException: java.lang.String getMessage()>();

        specialinvoke $r17.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label6:
        return;

        catch com.android.ims.ImsException from label3 to label4 with label5;
    }

    public void injectTestConferenceState(android.telephony.ims.ImsConferenceState)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r4;
        android.telephony.ims.ImsConferenceState r5;
        java.util.Iterator r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r5 := @parameter0: android.telephony.ims.ImsConferenceState;

        r1 = staticinvoke <com.android.ims.ImsCall: java.util.List parseConferenceState(android.telephony.ims.ImsConferenceState)>(r5);

        $r2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList getConnections()>();

        r6 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r3;

        virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void updateConferenceParticipants(java.util.List)>(r1);

        goto label1;

     label2:
        return;
    }

    public boolean isCarrierDowngradeOfVtCallSupported()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportDowngradeVtToAudio>;

        return $z0;
    }

    public boolean isConferenceEventPackageEnabled()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsConferenceEventPackageEnabled>;

        return $z0;
    }

    public boolean isImsCapabilityAvailable(int, int) throws com.android.ims.ImsException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0, i1;
        com.android.ims.ImsManager r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.ims.ImsManager: boolean queryMmTelCapabilityStatus(int,int)>(i0, i1);

        return $z0;

     label1:
        return 0;
    }

    boolean isImsServiceReady()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsManager r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.ims.ImsManager: boolean isServiceReady()>();

        return $z0;
    }

    public boolean isInEmergencyCall()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsInEmergencyCall>;

        return $z0;
    }

    public boolean isUtEnabled()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities mMmTelCapabilities>;

        $z0 = virtualinvoke $r1.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: boolean isCapable(int)>(4);

        return $z0;
    }

    public boolean isViLteDataMetered()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsViLteDataMetered>;

        return $z0;
    }

    public boolean isVideoCallEnabled()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities mMmTelCapabilities>;

        $z0 = virtualinvoke $r1.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: boolean isCapable(int)>(2);

        return $z0;
    }

    public boolean isVolteEnabled()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isImsCapabilityInCacheAvailable(int,int)>(1, 0);

        return $z0;
    }

    public boolean isVowifiEnabled()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isImsCapabilityInCacheAvailable(int,int)>(1, 1);

        return $z0;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r3;
        com.android.internal.telephony.imsphone.ImsPhone $r5;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", $r9);

        return;
    }

    void logHoldSwapState(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, r9, $r11;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState $r3;
        int[] $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r10;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        r9 = "???";

        $r4 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$9: int[] $SwitchMap$com$android$internal$telephony$imsphone$ImsPhoneCallTracker$HoldSwapState>;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        $i0 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        goto label9;

     label2:
        r9 = "HOLDING_TO_DIAL_OUTGOING";

        goto label9;

     label3:
        r9 = "PENDING_RESUME_FOREGROUND_AFTER_FAILURE";

        goto label9;

     label4:
        r9 = "HOLDING_TO_ANSWER_INCOMING";

        goto label9;

     label5:
        r9 = "SWAPPING_ACTIVE_AND_HELD";

        goto label9;

     label6:
        r9 = "PENDING_SINGLE_CALL_UNHOLD";

        goto label9;

     label7:
        r9 = "PENDING_SINGLE_CALL_HOLD";

        goto label9;

     label8:
        r9 = "INACTIVE";

     label9:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("holdSwapState set to ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logi(java.lang.String)>($r11);

        return;
    }

    void logState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r5, $r9, $r13, $r17;
        java.lang.String $r20;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean VERBOSE_STATE_LOGGING>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current IMS PhoneCall State:\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Foreground: ");

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Background: ");

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Ringing: ");

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Handover: ");

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r20 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", $r20);

        return;
    }

    protected void loge(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r3;
        com.android.internal.telephony.imsphone.ImsPhone $r5;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", $r9);

        return;
    }

    void logi(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r3;
        com.android.internal.telephony.imsphone.ImsPhone $r5;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", $r9);

        return;
    }

    public int maybeRemapReasonCode(android.telephony.ims.ImsReasonInfo)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.telephony.ims.ImsReasonInfo r1;
        java.lang.StringBuilder $r3, $r17, $r28;
        int $i0, $i1, $i2, i3, i4, i5;
        java.lang.String $r8, $r24, $r35, r36, r37;
        android.util.Pair $r9, $r11;
        java.lang.Integer $r10, $r16, $r27;
        java.util.Map $r12, $r13, $r14, $r25;
        boolean $z0, $z1, $z2;
        java.lang.Object $r15, $r26;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.telephony.ims.ImsReasonInfo;

        i3 = virtualinvoke r1.<android.telephony.ims.ImsReasonInfo: int getCode()>();

        r36 = virtualinvoke r1.<android.telephony.ims.ImsReasonInfo: java.lang.String getExtraMessage()>();

        if r36 != null goto label1;

        r37 = "";

        goto label2;

     label1:
        r37 = virtualinvoke r36.<java.lang.String: java.lang.String toLowerCase()>();

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maybeRemapReasonCode : fromCode = ");

        $i0 = virtualinvoke r1.<android.telephony.ims.ImsReasonInfo: int getCode()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; message = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r8);

        $r9 = new android.util.Pair;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        specialinvoke $r9.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r10, r37);

        $r11 = new android.util.Pair;

        specialinvoke $r11.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(null, r37);

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mImsReasonCodeMap>;

        $z0 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>($r9);

        if $z0 == 0 goto label3;

        $r25 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mImsReasonCodeMap>;

        $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r27 = (java.lang.Integer) $r26;

        i4 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maybeRemapReasonCode : fromCode = ");

        $i2 = virtualinvoke r1.<android.telephony.ims.ImsReasonInfo: int getCode()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; message = ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; toCode = ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r35 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r35);

        return i4;

     label3:
        $z1 = virtualinvoke r37.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mImsReasonCodeMap>;

        $z2 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r11);

        if $z2 == 0 goto label4;

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.Map mImsReasonCodeMap>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r16 = (java.lang.Integer) $r15;

        i5 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maybeRemapReasonCode : fromCode(wildcard) = ");

        $i1 = virtualinvoke r1.<android.telephony.ims.ImsReasonInfo: int getCode()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; message = ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; toCode = ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r24 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r24);

        return i5;

     label4:
        return i3;
    }

    public void notifySrvccState(com.android.internal.telephony.Call$SrvccState)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.Call$SrvccState r1, $r7;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r8, $r9, $r10;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.Call$SrvccState;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifySrvccState state=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r6);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.Call$SrvccState mSrvccState> = r1;

        $r7 = <com.android.internal.telephony.Call$SrvccState: com.android.internal.telephony.Call$SrvccState COMPLETED>;

        if r1 != $r7 goto label1;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void resetState()>();

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void transferHandoverConnections(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r8);

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void transferHandoverConnections(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r9);

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void transferHandoverConnections(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r10);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

     label1:
        return;
    }

    public void onCallHoldReceived(com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2;
        com.android.internal.telephony.Call$State $r2, $r3;
        com.android.internal.telephony.imsphone.ImsPhone $r4, $r6, $r11, $r13;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r5;
        android.content.Context $r7;
        android.content.res.Resources $r8;
        com.android.internal.telephony.gsm.SuppServiceNotification $r9;
        com.android.internal.telephony.metrics.TelephonyMetrics $r12;
        android.telephony.ims.ImsCallSession $r14;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.ims.ImsCall;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("onCallHoldReceived");

        r5 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>(r1);

        if r5 == null goto label3;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mOnHoldToneStarted>;

        if $z0 != 0 goto label2;

        $z3 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isLocalTone(com.android.ims.ImsCall)>(r1);

        if $z3 != 0 goto label1;

        $z4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAlwaysPlayRemoteHoldTone>;

        if $z4 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r5.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r2 != $r3 goto label2;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhone: void startOnHoldTone(com.android.internal.telephony.Connection)>(r5);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mOnHoldToneStarted> = 1;

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r5);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mOnHoldToneId> = $i1;

     label2:
        virtualinvoke r5.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onConnectionEvent(java.lang.String,android.os.Bundle)>("android.telecom.event.CALL_REMOTELY_HELD", null);

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $z5 = virtualinvoke $r8.<android.content.res.Resources: boolean getBoolean(int)>(17891575);

        if $z5 == 0 goto label3;

        $z1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportPauseVideo>;

        if $z1 == 0 goto label3;

        $i0 = virtualinvoke r5.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getVideoState()>();

        $z2 = staticinvoke <android.telecom.VideoProfile: boolean isVideo(int)>($i0);

        if $z2 == 0 goto label3;

        virtualinvoke r5.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void changeToPausedState()>();

     label3:
        $r9 = new com.android.internal.telephony.gsm.SuppServiceNotification;

        specialinvoke $r9.<com.android.internal.telephony.gsm.SuppServiceNotification: void <init>()>();

        $r9.<com.android.internal.telephony.gsm.SuppServiceNotification: int notificationType> = 1;

        $r9.<com.android.internal.telephony.gsm.SuppServiceNotification: int code> = 2;

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhone: void notifySuppSvcNotification(com.android.internal.telephony.gsm.SuppServiceNotification)>($r9);

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i2 = virtualinvoke $r13.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r14 = virtualinvoke r1.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getCallSession()>();

        virtualinvoke $r12.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCallHoldReceived(int,android.telephony.ims.ImsCallSession)>($i2, $r14);

        return;
    }

    public void pullExternalCall(java.lang.String, int, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0, i1;
        android.os.Bundle $r1;
        com.android.internal.telephony.imsphone.ImsPhone $r2;
        com.android.internal.telephony.CallStateException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, r8;
        com.android.internal.telephony.Connection r10;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("CallPull", 1);

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android.telephony.ImsExternalCallTracker.extra.EXTERNAL_CALL_ID", i1);

     label1:
        r10 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int,android.os.Bundle)>(r8, i0, $r1);

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: void notifyUnknownConnection(com.android.internal.telephony.Connection)>(r10);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pullExternalCall failed - ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r7);

     label4:
        return;

        catch com.android.internal.telephony.CallStateException from label1 to label2 with label3;
    }

    public void registerForVoiceCallEnded(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        return;
    }

    public void registerForVoiceCallStarted(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        return;
    }

    public void registerPhoneStateListener(com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneStateListener)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneStateListener r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneStateListener;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.List mPhoneStateListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void rejectCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.LocalLog $r1;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r5;
        com.android.internal.telephony.Call$State $r3;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("rejectCall");

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.LocalLog mOperationLocalLog>;

        virtualinvoke $r1.<com.android.internal.telephony.LocalLog: void log(java.lang.String)>("rejected incoming call");

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r5);

        return;

     label1:
        $r4 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r4.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("phone not ringing");

        throw $r4;
    }

    public void sendCallStartFailedDisconnect(com.android.ims.ImsCall, android.telephony.ims.ImsReasonInfo)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        android.telephony.ims.ImsReasonInfo r2;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r3;
        int i0, $i1;
        com.android.internal.telephony.Call$State $r4, r7;
        com.android.internal.telephony.imsphone.ImsPhone $r5;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.ims.ImsCall;

        r2 := @parameter1: android.telephony.ims.ImsReasonInfo;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = null;

        r3 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>(r1);

        if r3 == null goto label1;

        r7 = virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Call$State getState()>();

        goto label2;

     label1:
        r7 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

     label2:
        i0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int getDisconnectCauseFromReasonInfo(android.telephony.ims.ImsReasonInfo,com.android.internal.telephony.Call$State)>(r2, r7);

        if r3 == null goto label3;

        $r6 = virtualinvoke r2.<android.telephony.ims.ImsReasonInfo: java.lang.String getExtraMessage()>();

        virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onRemoteDisconnect(java.lang.String)>($r6);

     label3:
        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void processCallStateChange(com.android.ims.ImsCall,com.android.internal.telephony.Call$State,int)>(r1, $r4, i0);

        if r3 == null goto label4;

        $i1 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int getPreciseDisconnectCauseFromReasonInfo(android.telephony.ims.ImsReasonInfo)>(r2);

        virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPreciseDisconnectCause(int)>($i1);

     label4:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhone: void notifyImsReason(android.telephony.ims.ImsReasonInfo)>(r2);

        return;
    }

    public void sendDtmf(char, android.os.Message)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        char c0;
        android.os.Message r1;
        com.android.ims.ImsCall r2;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        c0 := @parameter0: char;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("sendDtmf");

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r2 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.ims.ImsCall: void sendDtmf(char,android.os.Message)>(c0, r1);

     label1:
        return;
    }

    public void sendUSSD(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Message r1, $r10;
        android.telephony.ims.ImsCallProfile r2;
        com.android.ims.ImsManager r3, $r5, $r6;
        com.android.ims.ImsCall $r4, $r8, $r15;
        java.lang.String[] $r7;
        java.lang.String $r12, $r21, r23;
        com.android.internal.telephony.imsphone.ImsPhone $r13, $r22;
        com.android.ims.ImsException $r14, $r17;
        java.lang.StringBuilder $r18, r25;
        com.android.ims.ImsCall$Listener r24;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r23 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("sendUSSD");

     label1:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession>;

        if $r4 == null goto label3;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Message mPendingUssd> = null;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession>;

        virtualinvoke $r15.<com.android.ims.ImsCall: void sendUssd(java.lang.String)>(r23);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r1, null, null);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

     label2:
        return;

     label3:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if $r5 != null goto label5;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r14 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsException getImsManagerIsNullException()>();

        virtualinvoke $r13.<com.android.internal.telephony.imsphone.ImsPhone: void sendErrorResponse(android.os.Message,java.lang.Throwable)>(r1, $r14);

     label4:
        return;

     label5:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        r2 = virtualinvoke $r6.<com.android.ims.ImsManager: android.telephony.ims.ImsCallProfile createCallProfile(int,int)>(1, 2);

        virtualinvoke r2.<android.telephony.ims.ImsCallProfile: void setCallExtraInt(java.lang.String,int)>("dialstring", 2);

        r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        r24 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsUssdListener>;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = r23;

        $r8 = virtualinvoke r3.<com.android.ims.ImsManager: com.android.ims.ImsCall makeCall(android.telephony.ims.ImsCallProfile,java.lang.String[],com.android.ims.ImsCall$Listener)>(r2, $r7, r24);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession> = $r8;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Message mPendingUssd> = r1;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pending ussd updated, ");

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Message mPendingUssd>;

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r12);

     label6:
        goto label8;

     label7:
        $r17 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendUSSD : ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r21);

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r22.<com.android.internal.telephony.imsphone.ImsPhone: void sendErrorResponse(android.os.Message,java.lang.Throwable)>(r1, $r17);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void retryGetImsService()>();

     label8:
        return;

        catch com.android.ims.ImsException from label1 to label2 with label7;
        catch com.android.ims.ImsException from label3 to label4 with label7;
        catch com.android.ims.ImsException from label5 to label6 with label7;
    }

    public void setAlwaysPlayRemoteHoldTone(boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAlwaysPlayRemoteHoldTone> = z0;

        return;
    }

    public void setConferenceEventPackageEnabled(boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter0: boolean;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setConferenceEventPackageEnabled isEnabled=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r5);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsConferenceEventPackageEnabled> = z0;

        return;
    }

    public void setDataEnabled(boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsDataEnabled> = z0;

        return;
    }

    public void setMute(boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mDesiredMute> = z0;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: void setMute(boolean)>(z0);

        return;
    }

    public void setPhoneNumberUtilsProxy(com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneNumberUtilsProxy mPhoneNumberUtilsProxy> = r1;

        return;
    }

    public void setRetryTimeout(com.android.ims.FeatureConnector$RetryTimeout)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.FeatureConnector$RetryTimeout r1;
        com.android.ims.FeatureConnector $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.ims.FeatureConnector$RetryTimeout;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.FeatureConnector mImsManagerConnector>;

        $r2.<com.android.ims.FeatureConnector: com.android.ims.FeatureConnector$RetryTimeout mRetryTimeout> = r1;

        return;
    }

    public void setSharedPreferenceProxy(com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$SharedPreferenceProxy mSharedPreferenceProxy> = r1;

        return;
    }

    public void setSupportCepOnPeer(boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportCepOnPeer> = z0;

        return;
    }

    public void setTtyMode(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        com.android.ims.ImsException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        com.android.ims.ImsManager r7;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter0: int;

        r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if r7 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", "ImsManager is null when setting TTY mode");

        return;

     label1:
        virtualinvoke r7.<com.android.ims.ImsManager: void setTtyMode(int)>(i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setTtyMode : ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r6);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void retryGetImsService()>();

     label4:
        return;

        catch com.android.ims.ImsException from label1 to label2 with label3;
    }

    public void setUiTTYMode(int, android.os.Message)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.imsphone.ImsPhone $r3, $r5, $r12;
        android.content.Context $r4;
        com.android.ims.ImsException $r6, $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r11;
        com.android.ims.ImsManager r13;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if r13 != null goto label1;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r6 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsException getImsManagerIsNullException()>();

        virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhone: void sendErrorResponse(android.os.Message,java.lang.Throwable)>(r1, $r6);

        return;

     label1:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        virtualinvoke r13.<com.android.ims.ImsManager: void setUiTTYMode(android.content.Context,int,android.os.Message)>($r4, i0, r1);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUITTYMode : ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r11);

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhone: void sendErrorResponse(android.os.Message,java.lang.Throwable)>(r1, $r7);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void retryGetImsService()>();

     label4:
        return;

        catch com.android.ims.ImsException from label1 to label2 with label3;
    }

    public com.android.internal.telephony.Connection startConference(java.lang.String[], com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs r1;
        int i0, i1;
        boolean z0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r7;
        com.android.internal.telephony.imsphone.ImsPhone $r8, $r10;
        android.telecom.Connection$RttTextStream $r9, $r12;
        android.os.Bundle $r11;
        java.lang.Throwable $r13;
        java.lang.String[] r14;
        java.lang.Object r16;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r14 := @parameter0: java.lang.String[];

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs;

        i0 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: int clirMode>;

        i1 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: int videoState>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dial clirMode=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r6);

        z0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean prepareForDialing(com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs)>(r1);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mClirMode> = i0;

        r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.Object mSyncHold>;

        entermonitor r16;

     label1:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs mLastDialArgs> = r1;

        r2 = new com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        specialinvoke r2.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void <init>(com.android.internal.telephony.Phone,java.lang.String[],com.android.internal.telephony.imsphone.ImsPhoneCallTracker,com.android.internal.telephony.imsphone.ImsPhoneCall,boolean)>($r8, r14, r0, $r7, 0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = r2;

        virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setVideoState(int)>(i1);

        $r9 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: android.telecom.Connection$RttTextStream rttTextStream>;

        if $r9 == null goto label2;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("startConference: setting RTT stream on mPendingMO");

        $r12 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: android.telecom.Connection$RttTextStream rttTextStream>;

        virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setCurrentRttTextStream(android.telecom.Connection$RttTextStream)>($r12);

     label2:
        exitmonitor r16;

     label3:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void addConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r2);

        if z0 != 0 goto label4;

        $r11 = r1.<com.android.internal.telephony.imsphone.ImsPhone$ImsDialArgs: android.os.Bundle intentExtras>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection,int,int,android.os.Bundle)>(r2, i0, i1, $r11);

     label4:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r10.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPreciseCallStateChanged()>();

        return r2;

     label5:
        $r13 := @caughtexception;

     label6:
        exitmonitor r16;

     label7:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void startDtmf(char)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        char c0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        c0 := @parameter0: char;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("startDtmf");

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.ims.ImsCall: void startDtmf(char)>(c0);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>("startDtmf : no foreground call");

     label2:
        return;
    }

    public void stopDtmf()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("stopDtmf");

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.ims.ImsCall: void stopDtmf()>();

        goto label2;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>("stopDtmf : no foreground call");

     label2:
        return;
    }

    public void unholdHeldCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState r1, $r3, $r4, $r5, $r6, $r7;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r8, $r9, $r14, $r15;
        com.android.internal.telephony.imsphone.ImsPhone $r10;
        com.android.internal.telephony.metrics.TelephonyMetrics $r11;
        int $i0;
        android.telephony.ims.ImsCallSession $r12;
        com.android.ims.ImsException $r13;
        com.android.internal.telephony.CallStateException $r16;
        java.lang.String $r17;
        com.android.ims.ImsCall r18;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        r18 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        $r3 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_SINGLE_CALL_UNHOLD>;

        if $r4 == $r3 goto label6;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        $r5 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState SWAPPING_ACTIVE_AND_HELD>;

        if $r6 != $r5 goto label1;

        goto label6;

     label1:
        if r18 == null goto label5;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mCallExpectedToResume> = r18;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState>;

        $r7 = <com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState PENDING_SINGLE_CALL_UNHOLD>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState> = $r7;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r8);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logHoldSwapState(java.lang.String)>("unholdCurrentCall");

     label2:
        virtualinvoke r18.<com.android.ims.ImsCall: void resume()>();

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i0 = virtualinvoke $r10.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r12 = virtualinvoke r18.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getSession()>();

        virtualinvoke $r11.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeOnImsCommand(int,android.telephony.ims.ImsCallSession,int)>($i0, $r12, 6);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r15.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r14);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$HoldSwapState mHoldSwitchingState> = r1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logHoldSwapState(java.lang.String)>("unholdCurrentCall - fail");

        $r16 = new com.android.internal.telephony.CallStateException;

        $r17 = virtualinvoke $r13.<com.android.ims.ImsException: java.lang.String getMessage()>();

        specialinvoke $r16.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label5:
        return;

     label6:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void logi(java.lang.String)>("Ignoring unhold request while already unholding or swapping");

        return;

        catch com.android.ims.ImsException from label2 to label3 with label4;
    }

    public void unregisterForVoiceCallEnded(android.os.Handler)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallEndedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForVoiceCallStarted(android.os.Handler)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.RegistrantList mVoiceCallStartedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterPhoneStateListener(com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneStateListener)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneStateListener r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker$PhoneStateListener;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.List mPhoneStateListeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void updateCarrierConfigCache(android.os.PersistableBundle)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String[] r1, r3;
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.String r2, $r4, $r5, $r6, $r7, $r11, $r21, r24, r25, r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.Integer $r8, r23;
        java.lang.Throwable $r17;
        java.lang.StringBuilder $r18, r26, r28;
        android.os.PersistableBundle r22;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r22 := @parameter0: android.os.PersistableBundle;

        $z0 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("allow_emergency_video_calls_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowEmergencyVideoCalls> = $z0;

        $z1 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("treat_downgraded_video_calls_as_video_calls_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mTreatDowngradedVideoCallsAsVideoCalls> = $z1;

        $z2 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("drop_video_call_when_answering_audio_call_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mDropVideoCallWhenAnsweringAudioCall> = $z2;

        $z3 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("allow_add_call_during_video_call");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowAddCallDuringVideoCall> = $z3;

        $z4 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("allow_hold_video_call_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAllowHoldingVideoCall> = $z4;

        $z5 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("notify_vt_handover_to_wifi_failure_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyVtHandoverToWifiFail> = $z5;

        $z6 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("support_downgrade_vt_to_audio_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportDowngradeVtToAudio> = $z6;

        $z7 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("notify_handover_video_from_wifi_to_lte_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyHandoverVideoFromWifiToLTE> = $z7;

        $z8 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("notify_handover_video_from_lte_to_wifi_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mNotifyHandoverVideoFromLTEToWifi> = $z8;

        $z9 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("ignore_data_enabled_changed_for_video_calls");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIgnoreDataEnabledChangedForVideoCalls> = $z9;

        $z10 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("vilte_data_is_metered_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsViLteDataMetered> = $z10;

        $z11 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("support_pause_ims_video_calls_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportPauseVideo> = $z11;

        $z12 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("always_play_remote_hold_tone_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAlwaysPlayRemoteHoldTone> = $z12;

        $z13 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("auto_retry_failed_wifi_emergency_call");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mAutoRetryFailedWifiEmergencyCall> = $z13;

        $z14 = virtualinvoke r22.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("support_ims_conference_event_package_on_peer_bool");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mSupportCepOnPeer> = $z14;

        r1 = virtualinvoke r22.<android.os.PersistableBundle: java.lang.String[] getStringArray(java.lang.String)>("ims_reasoninfo_mapping_string_array");

        if r1 == null goto label14;

        $i2 = lengthof r1;

        if $i2 <= 0 goto label14;

        i0 = lengthof r1;

        i5 = 0;

     label01:
        if i5 >= i0 goto label15;

        r2 = r1[i5];

        $r4 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>("|");

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        $i3 = lengthof r3;

        if $i3 == 3 goto label02;

        goto label13;

     label02:
        $r5 = r3[0];

        $z15 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z15 == 0 goto label04;

     label03:
        r23 = null;

        goto label05;

     label04:
        $r6 = r3[0];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

     label05:
        r24 = r3[1];

        r25 = r24;

        if r24 != null goto label06;

        r25 = "";

     label06:
        $r7 = r3[2];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void addReasonCodeRemapping(java.lang.Integer,java.lang.String,java.lang.Integer)>(r23, r25, $r8);

     label07:
        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded ImsReasonInfo mapping : fromCode = ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r11 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r11 != null goto label09;

     label08:
        r27 = "any";

        goto label10;

     label09:
        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; message = ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; toCode = ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        r27 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>(r27);

     label11:
        goto label13;

     label12:
        $r17 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid ImsReasonInfo mapping found: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r21);

     label13:
        i5 = i5 + 1;

        goto label01;

     label14:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("No carrier ImsReasonInfo mappings defined.");

     label15:
        return;

        catch java.lang.NumberFormatException from label02 to label03 with label12;
        catch java.lang.NumberFormatException from label04 to label05 with label12;
        catch java.lang.NumberFormatException from label06 to label07 with label12;
        catch java.lang.NumberFormatException from label07 to label08 with label12;
        catch java.lang.NumberFormatException from label09 to label10 with label12;
        catch java.lang.NumberFormatException from label10 to label11 with label12;
    }

    public void updateVtDataUsage(com.android.ims.ImsCall, long)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0, $z1;
        int $i0, $i1, $i4, $i5, $i8, $i9, i14, i15;
        java.util.HashMap $r1, $r3, $r32;
        java.lang.Integer $r2, $r4, $r33;
        java.lang.Long $r5, $r35;
        java.lang.StringBuilder $r7;
        java.lang.String $r12, $r31;
        com.android.internal.telephony.imsphone.ImsPhone $r13, $r25, $r28;
        android.telephony.ServiceState $r14;
        android.net.NetworkStats $r15, $r16, $r19, $r20, r38;
        android.net.NetworkStats$Entry $r17, $r22;
        long $l2, $l3, $l6, $l7, l10, l11, l12, l13;
        java.util.concurrent.atomic.AtomicInteger $r21, $r23, $r29;
        android.content.Context $r26, $r30;
        java.lang.Object $r27, $r34;
        com.android.ims.ImsCall r36;
        android.telecom.TelecomManager r40;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r36 := @parameter0: com.android.ims.ImsCall;

        l10 := @parameter1: long;

        l11 = 0L;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.HashMap mVtDataUsageMap>;

        $i0 = r36.<com.android.ims.ImsCall: int uniqueId>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z1 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        $r32 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.HashMap mVtDataUsageMap>;

        $i9 = r36.<com.android.ims.ImsCall: int uniqueId>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r34 = virtualinvoke $r32.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r33);

        $r35 = (java.lang.Long) $r34;

        l11 = virtualinvoke $r35.<java.lang.Long: long longValue()>();

     label1:
        l12 = l10 - l11;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.HashMap mVtDataUsageMap>;

        $i1 = r36.<com.android.ims.ImsCall: int uniqueId>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l10);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateVtDataUsage: call=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", delta=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l12);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r12);

        l13 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ServiceState getServiceState()>();

        z0 = virtualinvoke $r14.<android.telephony.ServiceState: boolean getDataRoaming()>();

        $r15 = new android.net.NetworkStats;

        specialinvoke $r15.<android.net.NetworkStats: void <init>(long,int)>(l13, 1);

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageSnapshot>;

        r38 = virtualinvoke $r15.<android.net.NetworkStats: android.net.NetworkStats add(android.net.NetworkStats)>($r16);

        $r17 = new android.net.NetworkStats$Entry;

        $l3 = l12 / 2L;

        $l2 = l12 / 2L;

        i14 = (int) z0;

        specialinvoke $r17.<android.net.NetworkStats$Entry: void <init>(java.lang.String,int,int,int,int,int,int,long,long,long,long,long)>("vt_data0", -1, 1, 0, 1, i14, 1, $l3, 0L, $l2, 0L, 0L);

        virtualinvoke r38.<android.net.NetworkStats: android.net.NetworkStats combineValues(android.net.NetworkStats$Entry)>($r17);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageSnapshot> = r38;

        $r19 = new android.net.NetworkStats;

        specialinvoke $r19.<android.net.NetworkStats: void <init>(long,int)>(l13, 1);

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageUidSnapshot>;

        virtualinvoke $r19.<android.net.NetworkStats: void combineAllValues(android.net.NetworkStats)>($r20);

        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.atomic.AtomicInteger mDefaultDialerUid>;

        $i4 = virtualinvoke $r21.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i4 != -1 goto label2;

        $r25 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r26 = virtualinvoke $r25.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r27 = virtualinvoke $r26.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telecom");

        r40 = (android.telecom.TelecomManager) $r27;

        $r29 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.atomic.AtomicInteger mDefaultDialerUid>;

        $r28 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r30 = virtualinvoke $r28.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r31 = virtualinvoke r40.<android.telecom.TelecomManager: java.lang.String getDefaultDialerPackage()>();

        $i8 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int getPackageUid(android.content.Context,java.lang.String)>($r30, $r31);

        virtualinvoke $r29.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i8);

     label2:
        $r22 = new android.net.NetworkStats$Entry;

        $r23 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.concurrent.atomic.AtomicInteger mDefaultDialerUid>;

        $i5 = virtualinvoke $r23.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $l7 = l12 / 2L;

        $l6 = l12 / 2L;

        i15 = (int) z0;

        specialinvoke $r22.<android.net.NetworkStats$Entry: void <init>(java.lang.String,int,int,int,int,int,int,long,long,long,long,long)>("vt_data0", $i5, 1, 0, 1, i15, 1, $l7, 0L, $l6, 0L, 0L);

        virtualinvoke $r19.<android.net.NetworkStats: android.net.NetworkStats combineValues(android.net.NetworkStats$Entry)>($r22);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.net.NetworkStats mVtDataUsageUidSnapshot> = $r19;

        return;
    }
}
