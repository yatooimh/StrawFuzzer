public class com.android.internal.telephony.imsphone.ImsPhoneConnection extends com.android.internal.telephony.Connection implements com.android.ims.internal.ImsVideoCallProviderWrapper$ImsVideoProviderWrapperCallback
{
    private static final boolean DBG;
    private static final int EVENT_DTMF_DELAY_DONE;
    private static final int EVENT_DTMF_DONE;
    private static final int EVENT_NEXT_POST_DIAL;
    private static final int EVENT_PAUSE_DONE;
    private static final int EVENT_WAKE_LOCK_TIMEOUT;
    private static final java.lang.String LOG_TAG;
    private static final int PAUSE_DELAY_MILLIS;
    private static final int WAKE_LOCK_TIMEOUT_MILLIS;
    private long mConferenceConnectTime;
    private long mDisconnectTime;
    private boolean mDisconnected;
    private int mDtmfToneDelay;
    private android.os.Bundle mExtras;
    private android.os.Handler mHandler;
    private final android.os.Messenger mHandlerMessenger;
    private com.android.ims.ImsCall mImsCall;
    private com.android.ims.internal.ImsVideoCallProviderWrapper mImsVideoCallProviderWrapper;
    private boolean mIsEmergency;
    private boolean mIsLocalVideoCapable;
    private boolean mIsMergeInProcess;
    private boolean mIsRttEnabledForCall;
    private com.android.internal.telephony.metrics.TelephonyMetrics mMetrics;
    private com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner;
    private com.android.internal.telephony.imsphone.ImsPhoneCall mParent;
    private android.os.PowerManager$WakeLock mPartialWakeLock;
    private int mPreciseDisconnectCause;
    private com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler;
    private android.telecom.Connection$RttTextStream mRttTextStream;
    private boolean mShouldIgnoreVideoStateChanges;
    private com.android.internal.telephony.UUSInfo mUusInfo;
    private java.lang.String mVendorCause;

    public void <init>(com.android.internal.telephony.Phone, com.android.ims.ImsCall, com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneCall, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Phone r1;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r2, $r8;
        com.android.internal.telephony.imsphone.ImsPhoneCall r3;
        boolean z0, $z1, $z3, $z5, $z6;
        android.os.Bundle $r4;
        com.android.internal.telephony.metrics.TelephonyMetrics $r5;
        android.content.Context $r6, $r12;
        com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler $r7;
        android.os.Looper $r9;
        android.os.Messenger $r10;
        android.os.Handler $r11;
        android.content.res.Resources $r13;
        android.telephony.ims.ImsCallProfile $r14, $r15, $r17, $r19, $r20, $r21;
        java.lang.String $r16, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.android.ims.ImsCall r22;
        long $l6;
        com.android.internal.telephony.Call$State r23;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        r22 := @parameter1: com.android.ims.ImsCall;

        r2 := @parameter2: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r3 := @parameter3: com.android.internal.telephony.imsphone.ImsPhoneCall;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>(int)>(5);

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Bundle mExtras> = $r4;

        $r5 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics> = $r5;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConferenceConnectTime> = 0L;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mDtmfToneDelay> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsEmergency> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mShouldIgnoreVideoStateChanges> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mPreciseDisconnectCause> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsRttEnabledForCall> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsMergeInProcess> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsLocalVideoCapable> = 1;

        $r6 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void createWakeLock(android.content.Context)>($r6);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner> = r2;

        $r7 = new com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler: void <init>(com.android.internal.telephony.imsphone.ImsPhoneConnection,android.os.Looper)>(r0, $r9);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler> = $r7;

        $r10 = new android.os.Messenger;

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        specialinvoke $r10.<android.os.Messenger: void <init>(android.os.Handler)>($r11);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Messenger mHandlerMessenger> = $r10;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall> = r22;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isMultiparty()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsAdhocConference> = $z1;

        if r22 == null goto label1;

        $r14 = virtualinvoke r22.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        if $r14 == null goto label1;

        $r15 = virtualinvoke r22.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        $r16 = virtualinvoke $r15.<android.telephony.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String)>("oi");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mAddress> = $r16;

        $r17 = virtualinvoke r22.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        $r18 = virtualinvoke $r17.<android.telephony.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String)>("cna");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mCnapName> = $r18;

        $r19 = virtualinvoke r22.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        $i0 = virtualinvoke $r19.<android.telephony.ims.ImsCallProfile: int getCallExtraInt(java.lang.String)>("oir");

        $i1 = staticinvoke <android.telephony.ims.ImsCallProfile: int OIRToPresentation(int)>($i0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNumberPresentation> = $i1;

        $r20 = virtualinvoke r22.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        $i2 = virtualinvoke $r20.<android.telephony.ims.ImsCallProfile: int getCallExtraInt(java.lang.String)>("cnap");

        $i3 = staticinvoke <android.telephony.ims.ImsCallProfile: int OIRToPresentation(int)>($i2);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCnapNamePresentation> = $i3;

        $r21 = virtualinvoke r22.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        $i4 = virtualinvoke $r21.<android.telephony.ims.ImsCallProfile: int getCallerNumberVerificationStatus()>();

        $i5 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneConnection: int toTelecomVerificationStatus(int)>($i4);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setNumberVerificationStatus(int)>($i5);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean updateMediaCapabilities(com.android.ims.ImsCall)>(r22);

        goto label2;

     label1:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNumberPresentation> = 3;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCnapNamePresentation> = 3;

     label2:
        $z5 = z0 ^ 1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsIncoming> = $z5;

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mCreateTime> = $l6;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.UUSInfo mUusInfo> = null;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean updateExtras(com.android.ims.ImsCall)>(r22);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent> = r3;

        $z6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsIncoming>;

        if $z6 == 0 goto label3;

        r23 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State INCOMING>;

        goto label4;

     label3:
        r23 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

     label4:
        virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: void attach(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, r23);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void fetchDtmfToneDelay(com.android.internal.telephony.Phone)>(r1);

        $r12 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.res.Resources getResources()>();

        $z3 = virtualinvoke $r13.<android.content.res.Resources: boolean getBoolean(int)>(17891582);

        if $z3 == 0 goto label5;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setAudioModeIsVoip(boolean)>(1);

     label5:
        return;
    }

    public void <init>(com.android.internal.telephony.Phone, java.lang.String, com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneCall, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Phone r1;
        java.lang.String r2, $r13, $r14;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r3, $r9, $r18;
        com.android.internal.telephony.imsphone.ImsPhoneCall r4;
        boolean z0, $z1;
        android.os.Bundle $r5;
        com.android.internal.telephony.metrics.TelephonyMetrics $r6;
        android.content.Context $r7, $r16;
        com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler $r8;
        android.os.Looper $r10;
        android.os.Messenger $r11;
        android.os.Handler $r12;
        long $l0;
        com.android.internal.telephony.Call$State $r15;
        android.content.res.Resources $r17;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r4 := @parameter3: com.android.internal.telephony.imsphone.ImsPhoneCall;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>(int)>(5);

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Bundle mExtras> = $r5;

        $r6 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics> = $r6;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConferenceConnectTime> = 0L;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mDtmfToneDelay> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsEmergency> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mShouldIgnoreVideoStateChanges> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mPreciseDisconnectCause> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsRttEnabledForCall> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsMergeInProcess> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsLocalVideoCapable> = 1;

        $r7 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void createWakeLock(android.content.Context)>($r7);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner> = r3;

        $r8 = new com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler: void <init>(com.android.internal.telephony.imsphone.ImsPhoneConnection,android.os.Looper)>(r0, $r10);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler> = $r8;

        $r11 = new android.os.Messenger;

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        specialinvoke $r11.<android.os.Messenger: void <init>(android.os.Handler)>($r12);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Messenger mHandlerMessenger> = $r11;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mDialString> = r2;

        $r13 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r2);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mAddress> = $r13;

        $r14 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>(r2);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString> = $r14;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsIncoming> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mCnapName> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCnapNamePresentation> = 1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNumberPresentation> = 1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mCreateTime> = $l0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent> = r4;

        $r15 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        virtualinvoke r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r15);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsEmergency> = z0;

        if z0 == 0 goto label1;

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setEmergencyCallInfo(com.android.internal.telephony.CallTracker)>($r18);

     label1:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void fetchDtmfToneDelay(com.android.internal.telephony.Phone)>(r1);

        $r16 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r17 = virtualinvoke $r16.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r17.<android.content.res.Resources: boolean getBoolean(int)>(17891582);

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setAudioModeIsVoip(boolean)>(1);

     label2:
        return;
    }

    public void <init>(com.android.internal.telephony.Phone, java.lang.String[], com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneCall, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Phone r1;
        java.lang.String[] r2;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r3, $r9;
        com.android.internal.telephony.imsphone.ImsPhoneCall r4;
        boolean z0, $z1;
        android.os.Bundle $r5;
        com.android.internal.telephony.metrics.TelephonyMetrics $r6;
        android.content.Context $r7, $r14;
        com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler $r8;
        android.os.Looper $r10;
        android.os.Messenger $r11;
        android.os.Handler $r12;
        long $l0;
        com.android.internal.telephony.Call$State $r13;
        android.content.res.Resources $r15;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r4 := @parameter3: com.android.internal.telephony.imsphone.ImsPhoneCall;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>(int)>(5);

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Bundle mExtras> = $r5;

        $r6 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: com.android.internal.telephony.metrics.TelephonyMetrics getInstance()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics> = $r6;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConferenceConnectTime> = 0L;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mDtmfToneDelay> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsEmergency> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mShouldIgnoreVideoStateChanges> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mPreciseDisconnectCause> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsRttEnabledForCall> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsMergeInProcess> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsLocalVideoCapable> = 1;

        $r7 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void createWakeLock(android.content.Context)>($r7);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner> = r3;

        $r8 = new com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler: void <init>(com.android.internal.telephony.imsphone.ImsPhoneConnection,android.os.Looper)>(r0, $r10);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler> = $r8;

        $r11 = new android.os.Messenger;

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        specialinvoke $r11.<android.os.Messenger: void <init>(android.os.Handler)>($r12);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Messenger mHandlerMessenger> = $r11;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mAddress> = "tel:conf-factory";

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mDialString> = "tel:conf-factory";

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String[] mParticipantsToDial> = r2;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsAdhocConference> = 1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsIncoming> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mCnapName> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCnapNamePresentation> = 1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNumberPresentation> = 1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mCreateTime> = $l0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent> = r4;

        $r13 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        virtualinvoke r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r13);

        $r14 = virtualinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r15.<android.content.res.Resources: boolean getBoolean(int)>(17891582);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setAudioModeIsVoip(boolean)>(1);

     label1:
        return;
    }

    static void access$000(com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void processNextPostDialChar()>();

        return;
    }

    static android.os.Handler access$100(com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        return $r1;
    }

    static int access$200(com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int $i0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mDtmfToneDelay>;

        return $i0;
    }

    private void acquireWakeLock()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", "acquireWakeLock");

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        return;
    }

    private int applyLocalCallCapabilities(android.telephony.ims.ImsCallProfile, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.telephony.ims.ImsCallProfile r1;
        int i0, i3, i4;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.telephony.ims.ImsCallProfile;

        i3 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("applyLocalCallCapabilities - localProfile = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r6);

        i4 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneConnection: int removeCapability(int,int)>(i3, 4);

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsLocalVideoCapable>;

        if $z0 != 0 goto label1;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneConnection", "applyLocalCallCapabilities - disabling video (overidden)");

        return i4;

     label1:
        i0 = r1.<android.telephony.ims.ImsCallProfile: int mCallType>;

        if i0 == 3 goto label2;

        if i0 == 4 goto label2;

        goto label3;

     label2:
        i4 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneConnection: int addCapability(int,int)>(i4, 4);

     label3:
        return i4;
    }

    private static int applyRemoteCallCapabilities(android.telephony.ims.ImsCallProfile, int)
    {
        android.telephony.ims.ImsCallProfile r0;
        int i0, i2, i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @parameter0: android.telephony.ims.ImsCallProfile;

        i2 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("applyRemoteCallCapabilities - remoteProfile = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r5);

        i3 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneConnection: int removeCapability(int,int)>(i2, 8);

        i0 = r0.<android.telephony.ims.ImsCallProfile: int mCallType>;

        if i0 == 3 goto label1;

        if i0 == 4 goto label1;

        goto label2;

     label1:
        i3 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneConnection: int addCapability(int,int)>(i3, 8);

     label2:
        return i3;
    }

    private static boolean areBundlesEqual(android.os.Bundle, android.os.Bundle)
    {
        android.os.Bundle r0, r1;
        java.util.Iterator r2;
        java.lang.String r3;
        int $i0, $i1;
        java.util.Set $r4;
        boolean $z0, $z1, z2;
        java.lang.Object $r5, $r6, $r7;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: android.os.Bundle;

        z2 = 1;

        if r0 == null goto label6;

        if r1 != null goto label1;

        goto label6;

     label1:
        $i0 = virtualinvoke r0.<android.os.Bundle: int size()>();

        $i1 = virtualinvoke r1.<android.os.Bundle: int size()>();

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $r4 = virtualinvoke r0.<android.os.Bundle: java.util.Set keySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r5;

        if r3 == null goto label4;

        $r6 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r3);

        $r7 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r3);

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        goto label3;

     label5:
        return 1;

     label6:
        if r0 != r1 goto label7;

        goto label8;

     label7:
        z2 = 0;

     label8:
        return z2;
    }

    private void createRttTextHandler()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsRttTextHandler $r2;
        android.os.Looper $r3;
        com.android.internal.telephony.imsphone._$$Lambda$ImsPhoneConnection$gXYXXIQcibrbO2gQqP7d18avaBI $r4;
        android.telecom.Connection$RttTextStream $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r2 = new com.android.internal.telephony.imsphone.ImsRttTextHandler;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r4 = new com.android.internal.telephony.imsphone._$$Lambda$ImsPhoneConnection$gXYXXIQcibrbO2gQqP7d18avaBI;

        specialinvoke $r4.<com.android.internal.telephony.imsphone._$$Lambda$ImsPhoneConnection$gXYXXIQcibrbO2gQqP7d18avaBI: void <init>(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r0);

        specialinvoke $r2.<com.android.internal.telephony.imsphone.ImsRttTextHandler: void <init>(android.os.Looper,com.android.internal.telephony.imsphone.ImsRttTextHandler$NetworkWriter)>($r3, $r4);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler> = $r2;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.telecom.Connection$RttTextStream mRttTextStream>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsRttTextHandler: void initialize(android.telecom.Connection$RttTextStream)>($r5);

        return;
    }

    private void createWakeLock(android.content.Context)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.os.PowerManager $r3;
        android.os.PowerManager$WakeLock $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r3 = (android.os.PowerManager) $r2;

        $r4 = virtualinvoke $r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ImsPhoneConnection");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.PowerManager$WakeLock mPartialWakeLock> = $r4;

        return;
    }

    static boolean equalsBaseDialString(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z1 = 1;

        if r0 != null goto label2;

        if r1 != null goto label3;

     label1:
        goto label4;

     label2:
        if r1 == null goto label3;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label3;

        goto label1;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    static boolean equalsHandlesNulls(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        z0 = 1;

        goto label3;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return z0;
    }

    private void fetchDtmfToneDelay(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.telephony.CarrierConfigManager $r3;
        int $i0, $i1;
        com.android.internal.telephony.Phone r4;
        android.os.PersistableBundle r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r4 := @parameter0: com.android.internal.telephony.Phone;

        $r1 = virtualinvoke r4.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        $r3 = (android.telephony.CarrierConfigManager) $r2;

        $i0 = virtualinvoke r4.<com.android.internal.telephony.Phone: int getSubId()>();

        r5 = virtualinvoke $r3.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>($i0);

        if r5 == null goto label1;

        $i1 = virtualinvoke r5.<android.os.PersistableBundle: int getInt(java.lang.String)>("ims_dtmf_tone_delay_int");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mDtmfToneDelay> = $i1;

     label1:
        return;
    }

    private int getAudioQualityFromCallProfile(android.telephony.ims.ImsCallProfile, android.telephony.ims.ImsCallProfile)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.telephony.ims.ImsCallProfile r1, r2;
        android.telephony.ims.ImsStreamMediaProfile $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, i4, $i5, $i6;
        byte b3;
        boolean z1, z2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.telephony.ims.ImsCallProfile;

        r2 := @parameter1: android.telephony.ims.ImsCallProfile;

        b3 = 1;

        if r1 == null goto label9;

        if r2 == null goto label9;

        $r3 = r1.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        if $r3 != null goto label1;

        goto label9;

     label1:
        $r4 = r1.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        i4 = $r4.<android.telephony.ims.ImsStreamMediaProfile: int mAudioQuality>;

        if i4 == 18 goto label3;

        $r6 = r1.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $i1 = $r6.<android.telephony.ims.ImsStreamMediaProfile: int mAudioQuality>;

        if $i1 == 19 goto label3;

        $r7 = r1.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $i2 = $r7.<android.telephony.ims.ImsStreamMediaProfile: int mAudioQuality>;

        if $i2 != 20 goto label2;

        goto label3;

     label2:
        z1 = 0;

        goto label4;

     label3:
        z1 = 1;

     label4:
        $r8 = r1.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $i5 = $r8.<android.telephony.ims.ImsStreamMediaProfile: int mAudioQuality>;

        if $i5 == 2 goto label5;

        $r5 = r1.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $i0 = $r5.<android.telephony.ims.ImsStreamMediaProfile: int mAudioQuality>;

        if $i0 == 6 goto label5;

        if z1 == 0 goto label6;

     label5:
        $i6 = virtualinvoke r2.<android.telephony.ims.ImsCallProfile: int getRestrictCause()>();

        if $i6 != 0 goto label6;

        z2 = 1;

        goto label7;

     label6:
        z2 = 0;

     label7:
        if z2 == 0 goto label8;

        b3 = 2;

     label8:
        return b3;

     label9:
        return 1;
    }

    private void processNextPostDialChar()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        char c0, c6;
        com.android.internal.telephony.Connection$PostDialState r1, $r3, $r4, $r6, $r8;
        android.os.AsyncResult r2;
        java.lang.String $r5, $r7, $r15, r16;
        int $i1, $i2, $i3, i5;
        boolean $z0;
        android.os.Handler $r9;
        android.os.Message $r10, r21;
        java.lang.StringBuilder $r11;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r18;
        com.android.internal.telephony.imsphone.ImsPhone $r19;
        com.android.internal.telephony.Registrant r20;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        if $r4 != $r3 goto label1;

        return;

     label1:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        if $r5 == null goto label3;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar>;

        if $i1 > $i2 goto label2;

        goto label3;

     label2:
        $r8 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r8);

        r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        i5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar>;

        $i3 = i5 + 1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar> = $i3;

        c0 = virtualinvoke r16.<java.lang.String: char charAt(int)>(i5);

        c6 = c0;

        $z0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean processPostDialChar(char)>(c0);

        if $z0 != 0 goto label4;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        $r10 = virtualinvoke $r9.<android.os.Handler: android.os.Message obtainMessage(int)>(3);

        virtualinvoke $r10.<android.os.Message: void sendToTarget()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processNextPostDialChar: c=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isn\'t valid!");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r15);

        return;

     label3:
        $r6 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState COMPLETE>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r6);

        c6 = 0;

     label4:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void notifyPostDialListenersNextChar(char)>(c6);

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r19 = $r18.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        r20 = virtualinvoke $r19.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Registrant getPostDialHandler()>();

        if r20 == null goto label5;

        r21 = virtualinvoke r20.<com.android.internal.telephony.Registrant: android.os.Message messageForRegistrant()>();

        if r21 == null goto label5;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        r2 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>(r21);

        r2.<android.os.AsyncResult: java.lang.Object result> = r0;

        r2.<android.os.AsyncResult: java.lang.Object userObj> = r1;

        r21.<android.os.Message: int arg1> = c6;

        virtualinvoke r21.<android.os.Message: void sendToTarget()>();

     label5:
        return;
    }

    private boolean processPostDialChar(char)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        char c0;
        boolean $z0;
        com.android.internal.telephony.Connection$PostDialState $r1, $r2;
        android.os.Message $r3, r7;
        android.os.Handler $r4, r8;
        android.os.Messenger $r5;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>(c0);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        r7 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Messenger mHandlerMessenger>;

        r7.<android.os.Message: android.os.Messenger replyTo> = $r5;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void sendDtmf(char,android.os.Message)>(c0, r7);

        goto label4;

     label1:
        if c0 != 44 goto label2;

        r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        $r3 = virtualinvoke r8.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke r8.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r3, 3000L);

        goto label4;

     label2:
        if c0 != 59 goto label3;

        $r2 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WAIT>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r2);

        goto label4;

     label3:
        if c0 != 78 goto label5;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WILD>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r1);

     label4:
        return 1;

     label5:
        return 0;
    }

    private void setPostDialState(com.android.internal.telephony.Connection$PostDialState)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Connection$PostDialState r1, $r3, $r4, $r5, $r6, $r7, $r9;
        android.os.Message r2;
        android.os.Handler $r8, $r10, $r11;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: com.android.internal.telephony.Connection$PostDialState;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        if $r4 == $r3 goto label1;

        $r9 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        if r1 != $r9 goto label1;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void acquireWakeLock()>();

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        r2 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        virtualinvoke $r11.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 60000L);

        goto label2;

     label1:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        if $r6 != $r5 goto label2;

        $r7 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        if r1 == $r7 goto label2;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.os.Handler: void removeMessages(int)>(4);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void releaseWakeLock()>();

        goto label2;

     label2:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = r1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void notifyPostDialListeners()>();

        return;
    }

    public static int toTelecomVerificationStatus(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return 0;

     label1:
        return 2;

     label2:
        return 1;
    }

    private void updateEmergencyCallFromExtras(android.os.Bundle)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.os.Bundle r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.os.Bundle;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("e_call");

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setIsNetworkIdentifiedEmergencyCall(boolean)>(1);

     label1:
        return;
    }

    private void updateImsCallRatFromExtras(android.os.Bundle)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean $z0, $z1, $z2;
        int $i0, i1;
        android.os.Bundle r1;
        com.android.ims.ImsCall r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.os.Bundle;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.telephony.ims.extra.CALL_NETWORK_TYPE");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("CallRadioTech");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("callRadioTech");

        if $z2 == 0 goto label3;

     label1:
        r2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        i1 = 0;

        if r2 == null goto label2;

        i1 = virtualinvoke r2.<com.android.ims.ImsCall: int getNetworkType()>();

     label2:
        $i0 = staticinvoke <android.telephony.ServiceState: int networkTypeToRilRadioTechnology(int)>(i1);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setCallRadioTech(int)>($i0);

     label3:
        return;
    }

    private void updateVideoState(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int i0;
        com.android.ims.internal.ImsVideoCallProviderWrapper r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.internal.ImsVideoCallProviderWrapper mImsVideoCallProviderWrapper>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.ims.internal.ImsVideoCallProviderWrapper: void onVideoStateChanged(int)>(i0);

     label1:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setVideoState(int)>(i0);

        return;
    }

    public void cancelPostDial()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r1);

        return;
    }

    public void changeParent(com.android.internal.telephony.imsphone.ImsPhoneCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent> = r1;

        return;
    }

    public void changeToPausedState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getVideoState()>();

        i0 = $i1 | 4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsPhoneConnection: changeToPausedState - setting paused bit; newVideoState=");

        $r4 = staticinvoke <android.telecom.VideoProfile: java.lang.String videoStateToString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r6);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void updateVideoState(int)>(i0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mShouldIgnoreVideoStateChanges> = 1;

        return;
    }

    public void changeToUnPausedState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getVideoState()>();

        i0 = $i1 & -5;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsPhoneConnection: changeToUnPausedState - unsetting paused bit; newVideoState=");

        $r4 = staticinvoke <android.telecom.VideoProfile: java.lang.String videoStateToString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r6);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void updateVideoState(int)>(i0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mShouldIgnoreVideoStateChanges> = 0;

        return;
    }

    public void consultativeTransfer(com.android.internal.telephony.Connection) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0, $r2;
        com.android.ims.ImsCall $r1, $r3, $r4;
        com.android.ims.ImsException $r5;
        com.android.internal.telephony.CallStateException $r6, r8;
        com.android.internal.telephony.Connection r7;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r7 := @parameter0: com.android.internal.telephony.Connection;

     label1:
        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        if $r1 == null goto label3;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        $r2 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) r7;

        $r4 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        virtualinvoke $r3.<com.android.ims.ImsCall: void consultativeTransfer(com.android.ims.ImsCall)>($r4);

     label2:
        return;

     label3:
        r8 = new com.android.internal.telephony.CallStateException;

        specialinvoke r8.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no valid ims call to transfer");

        throw r8;

     label4:
        $r5 := @caughtexception;

        $r6 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r6.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot transfer call");

        throw $r6;

        catch com.android.ims.ImsException from label1 to label2 with label4;
        catch com.android.ims.ImsException from label3 to label4 with label4;
    }

    public void deflect(java.lang.String) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1;
        com.android.internal.telephony.Call$State $r2;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r3, $r7, r9;
        com.android.ims.ImsCall $r4, $r5;
        com.android.ims.ImsException $r6;
        java.lang.String r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r8 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z0 == 0 goto label5;

     label1:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        if $r4 == null goto label3;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        virtualinvoke $r5.<com.android.ims.ImsCall: void deflect(java.lang.String)>(r8);

     label2:
        return;

     label3:
        r9 = new com.android.internal.telephony.CallStateException;

        specialinvoke r9.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no valid ims call to deflect");

        throw r9;

     label4:
        $r6 := @caughtexception;

        $r7 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r7.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot deflect call");

        throw $r7;

     label5:
        $r3 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r3.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("phone not ringing");

        throw $r3;

        catch com.android.ims.ImsException from label1 to label2 with label4;
        catch com.android.ims.ImsException from label3 to label4 with label4;
    }

    public void dispose()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void releaseWakeLock()>();

        return;
    }

    public volatile com.android.internal.telephony.Call getCall()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall getCall()>();

        return $r1;
    }

    public com.android.internal.telephony.imsphone.ImsPhoneCall getCall()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        return $r1;
    }

    public long getConferenceConnectTime()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $l0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConferenceConnectTime>;

        return $l0;
    }

    public int getDisconnectCause()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.StringBuilder $r2;
        int $i0, $i2;
        java.lang.String $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getDisconnectCause: cause=");

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r5);

        $i2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause>;

        return $i2;
    }

    public long getDisconnectTime()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $l0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mDisconnectTime>;

        return $l0;
    }

    public com.android.internal.telephony.emergency.EmergencyNumberTracker getEmergencyNumberTracker()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.emergency.EmergencyNumberTracker $r1;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r2;
        com.android.internal.telephony.imsphone.ImsPhone r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone getPhone()>();

        if r3 == null goto label1;

        $r1 = virtualinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.emergency.EmergencyNumberTracker getEmergencyNumberTracker()>();

        return $r1;

     label1:
        return null;
    }

    public long getHoldDurationMillis()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Call$State $r1, $r2;
        long $l0, $l1, $l2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Call$State getState()>();

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r1 == $r2 goto label1;

        return 0L;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mHoldingStartTime>;

        $l2 = $l0 - $l1;

        return $l2;
    }

    public long getHoldingStartTime()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $l0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mHoldingStartTime>;

        return $l0;
    }

    public com.android.ims.ImsCall getImsCall()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.Throwable $r1;
        com.android.ims.ImsCall r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        entermonitor r0;

     label1:
        r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getNumberPresentation()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNumberPresentation>;

        return $i0;
    }

    public com.android.internal.telephony.Connection getOrigConnection()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        return null;
    }

    public java.lang.String getOrigDialString()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mDialString>;

        return $r1;
    }

    public com.android.internal.telephony.imsphone.ImsPhoneCallTracker getOwner()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        return $r1;
    }

    public int getPreciseDisconnectCause()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mPreciseDisconnectCause>;

        return $i0;
    }

    public com.android.internal.telephony.Call$State getState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean $z0;
        com.android.internal.telephony.Call$State $r1, $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mDisconnected>;

        if $z0 == 0 goto label1;

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        return $r2;

     label1:
        $r1 = specialinvoke r0.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>();

        return $r1;
    }

    public com.android.internal.telephony.UUSInfo getUUSInfo()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.UUSInfo $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.UUSInfo mUusInfo>;

        return $r1;
    }

    public java.lang.String getVendorDisconnectCause()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mVendorCause>;

        return $r1;
    }

    public void handleMergeComplete()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsMergeInProcess> = 0;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onConnectionEvent(java.lang.String,android.os.Bundle)>("android.telecom.event.MERGE_COMPLETE", null);

        return;
    }

    public void handleMergeStart()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsMergeInProcess> = 1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onConnectionEvent(java.lang.String,android.os.Bundle)>("android.telecom.event.MERGE_START", null);

        return;
    }

    public void hangup() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r1;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mDisconnected>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r0);

        return;

     label1:
        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("disconnected");

        throw $r1;
    }

    public boolean hasRttTextStream()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.telecom.Connection$RttTextStream $r1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.telecom.Connection$RttTextStream mRttTextStream>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isConferenceHost()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.ims.ImsCall $r2, $r3;
        java.lang.Throwable $r4;
        boolean z0, z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        z0 = virtualinvoke $r3.<com.android.ims.ImsCall: boolean isConferenceHost()>();

     label2:
        if z0 == 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r0;

        return z1;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    protected boolean isEmergency()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsEmergency>;

        return $z0;
    }

    public boolean isIncomingCallAutoRejected()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause>;

        if $i0 != 81 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isMemberOfPeerConference()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isConferenceHost()>();

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public boolean isMultiparty()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.ims.ImsCall $r2, $r3;
        java.lang.Throwable $r4;
        boolean z0, z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        z0 = virtualinvoke $r3.<com.android.ims.ImsCall: boolean isMultiparty()>();

     label2:
        if z0 == 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r0;

        return z1;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public boolean isRttEnabledForCall()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsRttEnabledForCall>;

        return $z0;
    }

    public void lambda$createRttTextHandler$0$ImsPhoneConnection(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.String r1;
        com.android.ims.ImsCall r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.ims.ImsCall: void sendRttMessage(java.lang.String)>(r1);

     label1:
        return;
    }

    void onConnectedInOrOut()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        long $l0, $l1, $l2;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConnectTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConnectTimeReal> = $l1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mDuration> = 0L;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onConnectedInOrOut: connectTime=");

        $l2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConnectTime>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r5);

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsIncoming>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void processNextPostDialChar()>();

     label1:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void releaseWakeLock()>();

        return;
    }

    public boolean onDisconnect()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean $z0, z1;
        long $l0, $l1, $l2, $l3;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r1;
        com.android.internal.telephony.imsphone.ImsPhone $r2;
        int $i4;
        com.android.internal.telephony.imsphone.ImsRttTextHandler $r3, $r8;
        com.android.ims.ImsCall $r4, $r7;
        com.android.ims.internal.ImsVideoCallProviderWrapper $r5, $r6;
        java.lang.Throwable $r9;
        com.android.internal.telephony.imsphone.ImsPhoneCall r10;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        z1 = 0;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mDisconnected>;

        if $z0 != 0 goto label11;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mDisconnectTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConnectTimeReal>;

        $l3 = $l1 - $l2;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mDuration> = $l3;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mDisconnected> = 1;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r2 = $r1.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: void notifyDisconnect(com.android.internal.telephony.Connection)>(r0);

        $i4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause>;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void notifyDisconnect(int)>($i4);

        r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        if r10 == null goto label01;

        z1 = virtualinvoke r10.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean connectionDisconnected(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r0);

        goto label02;

     label01:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", "onDisconnect: no parent");

        z1 = 0;

     label02:
        entermonitor r0;

     label03:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler>;

        if $r3 == null goto label04;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler>;

        virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsRttTextHandler: void tearDown()>();

     label04:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        if $r4 == null goto label05;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        virtualinvoke $r7.<com.android.ims.ImsCall: void close()>();

     label05:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall> = null;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.internal.ImsVideoCallProviderWrapper mImsVideoCallProviderWrapper>;

        if $r5 == null goto label06;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.internal.ImsVideoCallProviderWrapper mImsVideoCallProviderWrapper>;

        virtualinvoke $r6.<com.android.ims.internal.ImsVideoCallProviderWrapper: void tearDown()>();

     label06:
        exitmonitor r0;

     label07:
        goto label11;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r9;

     label11:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void releaseWakeLock()>();

        return z1;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean onDisconnect(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int i0, $i2;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDisconnect: cause=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r5);

        $i2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause>;

        if $i2 != 3 goto label1;

        if i0 != 16 goto label2;

     label1:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause> = i0;

     label2:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean onDisconnect()>();

        return $z0;
    }

    public void onDisconnectConferenceParticipant(android.net.Uri)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.net.Uri r1;
        java.lang.String[] $r2;
        java.lang.String $r3, $r8;
        com.android.ims.ImsException $r4;
        java.lang.StringBuilder $r5;
        com.android.ims.ImsCall r9;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.net.Uri;

        r9 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        if r9 != null goto label1;

        return;

     label1:
        $r2 = newarray (java.lang.String)[1];

        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        $r2[0] = $r3;

        virtualinvoke r9.<com.android.ims.ImsCall: void removeParticipants(java.lang.String[])>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDisconnectConferenceParticipant: no session in place. Failed to disconnect endpoint = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r8);

     label4:
        return;

        catch com.android.ims.ImsException from label1 to label2 with label3;
    }

    void onHangupLocal()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause> = 3;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mVendorCause> = null;

        return;
    }

    public void onReceiveSessionModifyResponse(int, android.telecom.VideoProfile, android.telecom.VideoProfile)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.telecom.VideoProfile r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i9, i10, i11;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r9, $r12, $r14;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i9 := @parameter0: int;

        r1 := @parameter1: android.telecom.VideoProfile;

        r2 := @parameter2: android.telecom.VideoProfile;

        if i9 != 1 goto label2;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mShouldIgnoreVideoStateChanges>;

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getVideoState()>();

        i1 = virtualinvoke r2.<android.telecom.VideoProfile: int getVideoState()>();

        $i2 = i0 ^ i1;

        i10 = $i2 & 3;

        if i10 != 0 goto label1;

        return;

     label1:
        $i3 = i10 & i0;

        $i5 = i0 & $i3;

        $i4 = i10 & i1;

        i11 = $i5 | $i4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onReceiveSessionModifyResponse : received ");

        $i6 = virtualinvoke r1.<android.telecom.VideoProfile: int getVideoState()>();

        $r6 = staticinvoke <android.telecom.VideoProfile: java.lang.String videoStateToString(int)>($i6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $i7 = virtualinvoke r2.<android.telecom.VideoProfile: int getVideoState()>();

        $r9 = staticinvoke <android.telecom.VideoProfile: java.lang.String videoStateToString(int)>($i7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while paused ; sending new videoState = ");

        $r12 = staticinvoke <android.telecom.VideoProfile: java.lang.String videoStateToString(int)>(i11);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r14);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setVideoState(int)>(i11);

     label2:
        return;
    }

    void onRemoteDisconnect(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mVendorCause> = r1;

        return;
    }

    public void onRttAudioIndicatorChanged(android.telephony.ims.ImsStreamMediaProfile)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.telephony.ims.ImsStreamMediaProfile r1;
        android.os.Bundle $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.telephony.ims.ImsStreamMediaProfile;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        $z0 = virtualinvoke r1.<android.telephony.ims.ImsStreamMediaProfile: boolean isReceivingRttAudio()>();

        virtualinvoke $r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.telecom.extra.IS_RTT_AUDIO_PRESENT", $z0);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onConnectionEvent(java.lang.String,android.os.Bundle)>("android.telecom.event.RTT_AUDIO_INDICATION_CHANGED", $r3);

        return;
    }

    public void onRttMessageReceived(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsRttTextHandler $r1, $r2;
        android.telecom.Connection$RttTextStream $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r5 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler>;

        if $r1 != null goto label4;

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneConnection", "onRttMessageReceived: RTT text handler not available. Attempting to create one.");

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.telecom.Connection$RttTextStream mRttTextStream>;

        if $r3 != null goto label3;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsPhoneConnection", "onRttMessageReceived: Unable to process incoming message. No textstream available");

        exitmonitor r0;

     label2:
        return;

     label3:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void createRttTextHandler()>();

     label4:
        exitmonitor r0;

     label5:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsRttTextHandler: void sendToInCall(java.lang.String)>(r5);

        return;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void onStartedHolding()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mHoldingStartTime> = $l0;

        return;
    }

    public void pauseVideo(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int i0, $i1;
        com.android.ims.internal.ImsVideoCallProviderWrapper r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.internal.ImsVideoCallProviderWrapper mImsVideoCallProviderWrapper>;

        if r1 != null goto label1;

        return;

     label1:
        $i1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getVideoState()>();

        virtualinvoke r1.<com.android.ims.internal.ImsVideoCallProviderWrapper: void pauseVideo(int,int)>($i1, i0);

        return;
    }

    public void proceedAfterWaitChar()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r2, $r3, $r4, $r7;
        java.lang.StringBuilder $r5;
        java.lang.String $r9;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r2 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WAIT>;

        if $r3 == $r2 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsPhoneConnection.proceedAfterWaitChar(): Expected getPostDialState() to be WAIT but was ");

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r9);

        return;

     label1:
        $r4 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r4);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void processNextPostDialChar()>();

        return;
    }

    public void proceedAfterWildChar(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1, $r2, $r3, $r16;
        java.lang.StringBuilder $r4, $r9, $r14;
        int $i0;
        java.lang.String $r5, $r6, $r8, $r11, $r13, $r18, r19;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r19 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WILD>;

        if $r2 == $r1 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsPhoneConnection.proceedAfterWaitChar(): Expected getPostDialState() to be WILD but was ");

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r18);

        return;

     label1:
        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r19);

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString> = $r8;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar> = 0;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proceedAfterWildChar: new postDialString is ");

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r13);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void processNextPostDialChar()>();

        return;
    }

    void releaseWakeLock()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.os.PowerManager$WakeLock r1, $r3, $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        if r1 == null goto label7;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        $z0 = virtualinvoke $r3.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label2;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", "releaseWakeLock");

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        exitmonitor r1;

     label3:
        goto label7;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void resumeVideo(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int i0, $i1;
        com.android.ims.internal.ImsVideoCallProviderWrapper r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.internal.ImsVideoCallProviderWrapper mImsVideoCallProviderWrapper>;

        if r1 != null goto label1;

        return;

     label1:
        $i1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getVideoState()>();

        virtualinvoke r1.<com.android.ims.internal.ImsVideoCallProviderWrapper: void resumeVideo(int,int)>($i1, i0);

        return;
    }

    public void sendRttModifyResponse(android.telecom.Connection$RttTextStream)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.telecom.Connection$RttTextStream r1;
        com.android.ims.ImsCall r2;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.telecom.Connection$RttTextStream;

        if r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        if r2 == null goto label4;

        virtualinvoke r2.<com.android.ims.ImsCall: void sendRttModifyResponse(boolean)>(z0);

        if z0 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setCurrentRttTextStream(android.telecom.Connection$RttTextStream)>(r1);

        goto label4;

     label3:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsPhoneConnection", "sendRttModifyResponse: foreground call has no connections");

     label4:
        return;
    }

    public void separate() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.CallStateException $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("not supported");

        throw $r1;
    }

    public void setConferenceConnectTime(long)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        long l0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        l0 := @parameter0: long;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConferenceConnectTime> = l0;

        return;
    }

    public void setCurrentRttTextStream(android.telecom.Connection$RttTextStream)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsRttTextHandler $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        android.telecom.Connection$RttTextStream r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r3 := @parameter0: android.telecom.Connection$RttTextStream;

        entermonitor r0;

     label1:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.telecom.Connection$RttTextStream mRttTextStream> = r3;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler>;

        if $r1 != null goto label2;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsRttEnabledForCall>;

        if $z0 == 0 goto label2;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneConnection", "setCurrentRttTextStream: Creating a text handler");

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void createRttTextHandler()>();

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setDisconnectCause(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDisconnectCause: cause=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r5);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause> = i0;

        return;
    }

    public void setImsCall(com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.Throwable $r1;
        com.android.ims.ImsCall r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r2 := @parameter0: com.android.ims.ImsCall;

        entermonitor r0;

     label1:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall> = r2;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setLocalVideoCapable(boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        com.android.ims.ImsCall $r7;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsLocalVideoCapable> = z0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setLocalVideoCapable: mIsLocalVideoCapable = ");

        $z1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsLocalVideoCapable>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; updating local video availability.");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r6);

        $r7 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean updateMediaCapabilities(com.android.ims.ImsCall)>($r7);

        return;
    }

    public void setPreciseDisconnectCause(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i0 := @parameter0: int;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mPreciseDisconnectCause> = i0;

        return;
    }

    public void setVideoProvider(android.telecom.Connection$VideoProvider)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.telecom.Connection$VideoProvider r1;
        boolean $z0;
        com.android.ims.internal.ImsVideoCallProviderWrapper $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.telecom.Connection$VideoProvider;

        specialinvoke r0.<com.android.internal.telephony.Connection: void setVideoProvider(android.telecom.Connection$VideoProvider)>(r1);

        $z0 = r1 instanceof com.android.ims.internal.ImsVideoCallProviderWrapper;

        if $z0 == 0 goto label1;

        $r2 = (com.android.ims.internal.ImsVideoCallProviderWrapper) r1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.internal.ImsVideoCallProviderWrapper mImsVideoCallProviderWrapper> = $r2;

     label1:
        return;
    }

    public void startRtt(android.telecom.Connection$RttTextStream)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.telecom.Connection$RttTextStream r1;
        com.android.ims.ImsCall $r2, $r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.telecom.Connection$RttTextStream;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        virtualinvoke $r3.<com.android.ims.ImsCall: void sendRttModifyRequest(boolean)>(1);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setCurrentRttTextStream(android.telecom.Connection$RttTextStream)>(r1);

     label1:
        return;
    }

    public void startRttTextProcessing()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.telecom.Connection$RttTextStream $r2;
        com.android.internal.telephony.imsphone.ImsRttTextHandler $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.telecom.Connection$RttTextStream mRttTextStream>;

        if $r2 != null goto label3;

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneConnection", "startRttTextProcessing: no RTT text stream. Ignoring.");

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler>;

        if $r3 == null goto label5;

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneConnection", "startRttTextProcessing: RTT text handler already exists");

        exitmonitor r0;

     label4:
        return;

     label5:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void createRttTextHandler()>();

        exitmonitor r0;

     label6:
        return;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void stopRtt()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.ims.ImsCall $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        virtualinvoke $r1.<com.android.ims.ImsCall: void sendRttModifyRequest(boolean)>(0);

        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r6, $r9, $r10, $r19, r22;
        boolean $z0;
        com.android.ims.ImsCall $r15, $r16;
        java.lang.Throwable $r21;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ImsPhoneConnection objId: ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" telecomCallID: ");

        $r6 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getTelecomCallId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" address: ");

        $r9 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        $r10 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsPhoneConnection", $r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isAdhocConf: ");

        $z0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isAdhocConference()>();

        if $z0 == 0 goto label01;

        r22 = "Y";

        goto label02;

     label01:
        r22 = "N";

     label02:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ImsCall: ");

        entermonitor r0;

     label03:
        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        if $r15 != null goto label05;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null");

     label04:
        goto label06;

     label05:
        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

     label06:
        exitmonitor r0;

     label07:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;

     label08:
        $r21 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r21;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void transfer(java.lang.String, boolean) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean z0;
        com.android.ims.ImsCall $r1, $r2;
        com.android.ims.ImsException $r3;
        com.android.internal.telephony.CallStateException $r4, r6;
        java.lang.String r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r5 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

     label1:
        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        if $r1 == null goto label3;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        virtualinvoke $r2.<com.android.ims.ImsCall: void transfer(java.lang.String,boolean)>(r5, z0);

     label2:
        return;

     label3:
        r6 = new com.android.internal.telephony.CallStateException;

        specialinvoke r6.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no valid ims call to transfer");

        throw r6;

     label4:
        $r3 := @caughtexception;

        $r4 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r4.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot transfer call");

        throw $r4;

        catch com.android.ims.ImsException from label1 to label2 with label4;
        catch com.android.ims.ImsException from label3 to label4 with label4;
    }

    public boolean update(com.android.ims.ImsCall, com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.Call$State r2, $r3, $r5, $r12, r13, $r15;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, z7, $z8;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r4, $r6, $r9, $r10, $r11, $r14, r16, $r17;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r7, $r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: com.android.ims.ImsCall;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        r13 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        z7 = 0;

        if r2 != r13 goto label5;

        $z4 = virtualinvoke r1.<com.android.ims.ImsCall: boolean isPendingHold()>();

        if $z4 == 0 goto label1;

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneConnection", "update : state is ACTIVE, but call is pending hold, skipping");

        return 0;

     label1:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z5 = virtualinvoke $r5.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z5 != 0 goto label2;

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        $r12 = virtualinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z6 = virtualinvoke $r12.<com.android.internal.telephony.Call$State: boolean isDialing()>();

        if $z6 == 0 goto label3;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onConnectedInOrOut()>();

     label3:
        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        $r15 = virtualinvoke $r14.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z8 = virtualinvoke $r15.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z8 != 0 goto label4;

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r9 = $r8.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        if $r10 != $r9 goto label6;

     label4:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCall: void detach(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r0);

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        r16 = $r7.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent> = r16;

        virtualinvoke r16.<com.android.internal.telephony.imsphone.ImsPhoneCall: void attach(com.android.internal.telephony.Connection)>(r0);

        goto label6;

     label5:
        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if r2 != $r3 goto label6;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onStartedHolding()>();

     label6:
        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        z0 = virtualinvoke $r17.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean update(com.android.internal.telephony.imsphone.ImsPhoneConnection,com.android.ims.ImsCall,com.android.internal.telephony.Call$State)>(r0, r1, r2);

        z1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean updateAddressDisplay(com.android.ims.ImsCall)>(r1);

        z2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean updateMediaCapabilities(com.android.ims.ImsCall)>(r1);

        z3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean updateExtras(com.android.ims.ImsCall)>(r1);

        if z0 != 0 goto label7;

        if z1 != 0 goto label7;

        if z2 != 0 goto label7;

        if z3 == 0 goto label8;

     label7:
        z7 = 1;

     label8:
        return z7;
    }

    public boolean updateAddressDisplay(com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.String r1, $r4, $r7, $r10, $r16, $r17, $r18, $r19, r22;
        int i0, i1, $i2, $i3, $i5, $i6;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, z8;
        java.lang.StringBuilder $r2;
        com.android.ims.ImsCall r20;
        android.telephony.ims.ImsCallProfile r21;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r20 := @parameter0: com.android.ims.ImsCall;

        if r20 != null goto label1;

        return 0;

     label1:
        r21 = virtualinvoke r20.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        z8 = 0;

        if r21 == null goto label6;

        z8 = 0;

        $z2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isIncoming()>();

        if $z2 == 0 goto label6;

        r1 = virtualinvoke r21.<android.telephony.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String)>("oi");

        r22 = virtualinvoke r21.<android.telephony.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String)>("cna");

        $i2 = virtualinvoke r21.<android.telephony.ims.ImsCallProfile: int getCallExtraInt(java.lang.String)>("oir");

        i0 = staticinvoke <android.telephony.ims.ImsCallProfile: int OIRToPresentation(int)>($i2);

        $i3 = virtualinvoke r21.<android.telephony.ims.ImsCallProfile: int getCallExtraInt(java.lang.String)>("cnap");

        i1 = staticinvoke <android.telephony.ims.ImsCallProfile: int OIRToPresentation(int)>($i3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAddressDisplay: callId = ");

        $r4 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getTelecomCallId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" address = ");

        $r7 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsPhoneConnection", r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name = ");

        $r10 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsPhoneConnection", r22);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nump = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" namep = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r16);

        z8 = 0;

        $z3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsMergeInProcess>;

        if $z3 != 0 goto label6;

        z8 = 0;

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mAddress>;

        $z4 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean equalsBaseDialString(java.lang.String,java.lang.String)>($r17, r1);

        if $z4 != 0 goto label2;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mAddress> = r1;

        z8 = 1;

     label2:
        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r22);

        if $z5 == 0 goto label3;

        $r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mCnapName>;

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r19);

        if $z7 != 0 goto label4;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mCnapName> = "";

        z8 = 1;

        goto label4;

     label3:
        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mCnapName>;

        $z6 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z6 != 0 goto label4;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mCnapName> = r22;

        z8 = 1;

     label4:
        $i6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNumberPresentation>;

        if $i6 == i0 goto label5;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNumberPresentation> = i0;

        z8 = 1;

     label5:
        $i5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCnapNamePresentation>;

        if $i5 == i1 goto label6;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCnapNamePresentation> = i1;

        z8 = 1;

     label6:
        return z8;
    }

    boolean updateExtras(com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean z0, $z1;
        android.os.Bundle $r1, $r2, $r3, $r4, r7;
        com.android.ims.ImsCall r5;
        android.telephony.ims.ImsCallProfile r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r5 := @parameter0: com.android.ims.ImsCall;

        if r5 != null goto label1;

        return 0;

     label1:
        r6 = virtualinvoke r5.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

        if r6 == null goto label2;

        r7 = r6.<android.telephony.ims.ImsCallProfile: android.os.Bundle mCallExtras>;

        goto label3;

     label2:
        r7 = null;

     label3:
        if r7 != null goto label4;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", "Call profile extras are null.");

     label4:
        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Bundle mExtras>;

        $z1 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean areBundlesEqual(android.os.Bundle,android.os.Bundle)>(r7, $r1);

        z0 = $z1 ^ 1;

        if z0 == 0 goto label5;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void updateImsCallRatFromExtras(android.os.Bundle)>(r7);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void updateEmergencyCallFromExtras(android.os.Bundle)>(r7);

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Bundle mExtras>;

        virtualinvoke $r2.<android.os.Bundle: void clear()>();

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Bundle mExtras>;

        virtualinvoke $r3.<android.os.Bundle: void putAll(android.os.Bundle)>(r7);

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Bundle mExtras>;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setConnectionExtras(android.os.Bundle)>($r4);

     label5:
        return z0;
    }

    public boolean updateMediaCapabilities(com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.StringBuilder r1, r37, r38, r41;
        java.lang.String $r4, $r7, $r24, $r29;
        int $i2, $i3, $i4, $i5, $i6, $i7, i12, i13, i14, i15, i16, i17, i18, $i19;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r8, $r12, $r16, $r30, $r39;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z11, $z12, z13, z14, $z15, z16, z17;
        com.android.ims.internal.ImsVideoCallProviderWrapper $r9, $r19;
        android.telephony.ims.ImsStreamMediaProfile $r10, $r11, $r20, $r36;
        com.android.internal.telephony.imsphone.ImsPhone $r13, $r17, $r31;
        com.android.internal.telephony.metrics.TelephonyMetrics $r14;
        android.telephony.ims.ImsCallSession $r15;
        com.android.internal.telephony.metrics.VoiceCallSessionStats $r18, $r32;
        com.android.internal.telephony.imsphone.ImsRttTextHandler $r21, $r25, $r26;
        com.android.ims.ImsException $r33;
        com.android.ims.ImsCall r34;
        android.telephony.ims.ImsCallProfile r35, r40, r42;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r34 := @parameter0: com.android.ims.ImsCall;

        if r34 != null goto label001;

        return 0;

     label001:
        z9 = 0;

        z10 = 0;

        z11 = 0;

     label002:
        r35 = virtualinvoke r34.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getCallProfile()>();

     label003:
        if r35 == null goto label076;

        z11 = 0;

     label004:
        i12 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getVideoState()>();

     label005:
        z11 = 0;

     label006:
        i13 = staticinvoke <android.telephony.ims.ImsCallProfile: int getVideoStateFromImsCallProfile(android.telephony.ims.ImsCallProfile)>(r35);

     label007:
        if i12 == i13 goto label028;

        z11 = 0;

     label008:
        $z5 = staticinvoke <android.telecom.VideoProfile: boolean isPaused(int)>(i12);

        if $z5 == 0 goto label013;

     label009:
        z11 = 0;

     label010:
        $z8 = staticinvoke <android.telecom.VideoProfile: boolean isPaused(int)>(i13);

        if $z8 != 0 goto label013;

     label011:
        z11 = 0;

     label012:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mShouldIgnoreVideoStateChanges> = 0;

     label013:
        z11 = 0;

     label014:
        $z12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mShouldIgnoreVideoStateChanges>;

        if $z12 != 0 goto label018;

     label015:
        z11 = 0;

     label016:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void updateVideoState(int)>(i13);

     label017:
        z13 = 1;

        goto label021;

     label018:
        z11 = 0;

     label019:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", "updateMediaCapabilities - ignoring video state change due to paused state.");

     label020:
        z13 = 0;

     label021:
        z9 = z13;

        z11 = z13;

     label022:
        $z6 = staticinvoke <android.telecom.VideoProfile: boolean isPaused(int)>(i12);

        if $z6 != 0 goto label028;

     label023:
        z9 = z13;

        z11 = z13;

     label024:
        $z7 = staticinvoke <android.telecom.VideoProfile: boolean isPaused(int)>(i13);

        if $z7 == 0 goto label028;

     label025:
        z11 = z13;

     label026:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mShouldIgnoreVideoStateChanges> = 1;

     label027:
        z9 = z13;

     label028:
        z10 = z9;

        z11 = z9;

     label029:
        $r36 = r35.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        if $r36 == null goto label076;

     label030:
        z11 = z9;

     label031:
        $r20 = r35.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        z14 = virtualinvoke $r20.<android.telephony.ims.ImsStreamMediaProfile: boolean isRttCall()>();

     label032:
        z11 = z9;

     label033:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsRttEnabledForCall> = z14;

     label034:
        if z14 == 0 goto label053;

        z11 = z9;

     label035:
        $r26 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler>;

        if $r26 != null goto label053;

     label036:
        z11 = z9;

     label037:
        r37 = new java.lang.StringBuilder;

     label038:
        z11 = z9;

     label039:
        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

     label040:
        z11 = z9;

     label041:
        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateMediaCapabilities -- turning RTT on, profile=");

     label042:
        z11 = z9;

     label043:
        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

     label044:
        z11 = z9;

     label045:
        $r29 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r29);

     label046:
        z11 = z9;

     label047:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void startRttTextProcessing()>();

     label048:
        z11 = z9;

     label049:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onRttInitiated()>();

     label050:
        z11 = 1;

        z10 = 1;

     label051:
        $r30 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r31 = virtualinvoke $r30.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone getPhone()>();

        $r32 = virtualinvoke $r31.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        virtualinvoke $r32.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onRttStarted(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r0);

     label052:
        goto label076;

     label053:
        z10 = z9;

        z11 = z9;

     label054:
        $z4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsRttEnabledForCall>;

        if $z4 != 0 goto label076;

     label055:
        z10 = z9;

        z11 = z9;

     label056:
        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler>;

        if $r21 == null goto label076;

     label057:
        z11 = z9;

     label058:
        r38 = new java.lang.StringBuilder;

     label059:
        z11 = z9;

     label060:
        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

     label061:
        z11 = z9;

     label062:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateMediaCapabilities -- turning RTT off, profile=");

     label063:
        z11 = z9;

     label064:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

     label065:
        z11 = z9;

     label066:
        $r24 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r24);

     label067:
        z11 = z9;

     label068:
        $r25 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler>;

        virtualinvoke $r25.<com.android.internal.telephony.imsphone.ImsRttTextHandler: void tearDown()>();

     label069:
        z11 = z9;

     label070:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsRttTextHandler mRttTextHandler> = null;

     label071:
        z11 = z9;

     label072:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.telecom.Connection$RttTextStream mRttTextStream> = null;

     label073:
        z11 = z9;

     label074:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onRttTerminated()>();

     label075:
        z10 = 1;

     label076:
        z11 = z10;

     label077:
        i14 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getConnectionCapabilities()>();

     label078:
        z11 = z10;

     label079:
        $r39 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $z15 = virtualinvoke $r39.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isCarrierDowngradeOfVtCallSupported()>();

        if $z15 == 0 goto label083;

     label080:
        z11 = z10;

     label081:
        i15 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneConnection: int addCapability(int,int)>(i14, 3);

     label082:
        goto label085;

     label083:
        z11 = z10;

     label084:
        i15 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneConnection: int removeCapability(int,int)>(i14, 3);

     label085:
        z11 = z10;

     label086:
        r40 = virtualinvoke r34.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getLocalCallProfile()>();

     label087:
        z11 = z10;

     label088:
        r41 = new java.lang.StringBuilder;

     label089:
        z11 = z10;

     label090:
        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

     label091:
        z11 = z10;

     label092:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update localCallProfile=");

     label093:
        z11 = z10;

     label094:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

     label095:
        z11 = z10;

     label096:
        $r4 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r4);

     label097:
        i16 = i15;

        if r40 == null goto label099;

        z11 = z10;

     label098:
        i16 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int applyLocalCallCapabilities(android.telephony.ims.ImsCallProfile,int)>(r40, i15);

     label099:
        z11 = z10;

     label100:
        r42 = virtualinvoke r34.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile getRemoteCallProfile()>();

     label101:
        z11 = z10;

     label102:
        r1 = new java.lang.StringBuilder;

     label103:
        z11 = z10;

     label104:
        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

     label105:
        z11 = z10;

     label106:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update remoteCallProfile=");

     label107:
        z11 = z10;

     label108:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

     label109:
        z11 = z10;

     label110:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r7);

     label111:
        i17 = i16;

        if r42 == null goto label113;

        z11 = z10;

     label112:
        i17 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneConnection: int applyRemoteCallCapabilities(android.telephony.ims.ImsCallProfile,int)>(r42, i16);

     label113:
        z16 = z10;

        z11 = z10;

     label114:
        $i2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getConnectionCapabilities()>();

        if $i2 == i17 goto label118;

     label115:
        z11 = z10;

     label116:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setConnectionCapabilities(int)>(i17);

     label117:
        z16 = 1;

     label118:
        z11 = z16;

     label119:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $z2 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean isViLteDataMetered()>();

        if $z2 != 0 goto label123;

     label120:
        z11 = z16;

     label121:
        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneConnection", "data is not metered");

     label122:
        goto label127;

     label123:
        z11 = z16;

     label124:
        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.internal.ImsVideoCallProviderWrapper mImsVideoCallProviderWrapper>;

        if $r9 == null goto label127;

     label125:
        z11 = z16;

     label126:
        $r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.internal.ImsVideoCallProviderWrapper mImsVideoCallProviderWrapper>;

        $z3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean hasCapabilities(int)>(4);

        virtualinvoke $r19.<com.android.ims.internal.ImsVideoCallProviderWrapper: void setIsVideoEnabled(boolean)>($z3);

     label127:
        if r40 == null goto label135;

        z11 = z16;

     label128:
        $r10 = r40.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $i4 = $r10.<android.telephony.ims.ImsStreamMediaProfile: int mAudioQuality>;

        $i3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mAudioCodec>;

        if $i4 == $i3 goto label135;

     label129:
        z11 = z16;

     label130:
        $r11 = r40.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $i5 = $r11.<android.telephony.ims.ImsStreamMediaProfile: int mAudioQuality>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mAudioCodec> = $i5;

     label131:
        z11 = z16;

     label132:
        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.metrics.TelephonyMetrics mMetrics>;

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r13 = $r12.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $i6 = virtualinvoke $r13.<com.android.internal.telephony.imsphone.ImsPhone: int getPhoneId()>();

        $r15 = virtualinvoke r34.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getCallSession()>();

        virtualinvoke $r14.<com.android.internal.telephony.metrics.TelephonyMetrics: void writeAudioCodecIms(int,android.telephony.ims.ImsCallSession)>($i6, $r15);

     label133:
        z11 = z16;

     label134:
        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r17 = virtualinvoke $r16.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone getPhone()>();

        $r18 = virtualinvoke $r17.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.metrics.VoiceCallSessionStats getVoiceCallSessionStats()>();

        $i7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mAudioCodec>;

        virtualinvoke $r18.<com.android.internal.telephony.metrics.VoiceCallSessionStats: void onAudioCodecChanged(com.android.internal.telephony.Connection,int)>(r0, $i7);

     label135:
        z11 = z16;

     label136:
        i18 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getAudioQualityFromCallProfile(android.telephony.ims.ImsCallProfile,android.telephony.ims.ImsCallProfile)>(r40, r42);

     label137:
        z17 = z16;

        z11 = z16;

     label138:
        $i19 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getAudioQuality()>();

        if $i19 == i18 goto label142;

     label139:
        z11 = z16;

     label140:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setAudioQuality(int)>(i18);

     label141:
        z17 = 1;

     label142:
        z11 = z17;

        goto label144;

     label143:
        $r33 := @caughtexception;

     label144:
        return z11;

        catch com.android.ims.ImsException from label002 to label003 with label143;
        catch com.android.ims.ImsException from label004 to label005 with label143;
        catch com.android.ims.ImsException from label006 to label007 with label143;
        catch com.android.ims.ImsException from label008 to label009 with label143;
        catch com.android.ims.ImsException from label010 to label011 with label143;
        catch com.android.ims.ImsException from label012 to label013 with label143;
        catch com.android.ims.ImsException from label014 to label015 with label143;
        catch com.android.ims.ImsException from label016 to label017 with label143;
        catch com.android.ims.ImsException from label019 to label020 with label143;
        catch com.android.ims.ImsException from label022 to label023 with label143;
        catch com.android.ims.ImsException from label024 to label025 with label143;
        catch com.android.ims.ImsException from label026 to label027 with label143;
        catch com.android.ims.ImsException from label029 to label030 with label143;
        catch com.android.ims.ImsException from label031 to label032 with label143;
        catch com.android.ims.ImsException from label033 to label034 with label143;
        catch com.android.ims.ImsException from label035 to label036 with label143;
        catch com.android.ims.ImsException from label037 to label038 with label143;
        catch com.android.ims.ImsException from label039 to label040 with label143;
        catch com.android.ims.ImsException from label041 to label042 with label143;
        catch com.android.ims.ImsException from label043 to label044 with label143;
        catch com.android.ims.ImsException from label045 to label046 with label143;
        catch com.android.ims.ImsException from label047 to label048 with label143;
        catch com.android.ims.ImsException from label049 to label050 with label143;
        catch com.android.ims.ImsException from label051 to label052 with label143;
        catch com.android.ims.ImsException from label054 to label055 with label143;
        catch com.android.ims.ImsException from label056 to label057 with label143;
        catch com.android.ims.ImsException from label058 to label059 with label143;
        catch com.android.ims.ImsException from label060 to label061 with label143;
        catch com.android.ims.ImsException from label062 to label063 with label143;
        catch com.android.ims.ImsException from label064 to label065 with label143;
        catch com.android.ims.ImsException from label066 to label067 with label143;
        catch com.android.ims.ImsException from label068 to label069 with label143;
        catch com.android.ims.ImsException from label070 to label071 with label143;
        catch com.android.ims.ImsException from label072 to label073 with label143;
        catch com.android.ims.ImsException from label074 to label075 with label143;
        catch com.android.ims.ImsException from label077 to label078 with label143;
        catch com.android.ims.ImsException from label079 to label080 with label143;
        catch com.android.ims.ImsException from label081 to label082 with label143;
        catch com.android.ims.ImsException from label084 to label085 with label143;
        catch com.android.ims.ImsException from label086 to label087 with label143;
        catch com.android.ims.ImsException from label088 to label089 with label143;
        catch com.android.ims.ImsException from label090 to label091 with label143;
        catch com.android.ims.ImsException from label092 to label093 with label143;
        catch com.android.ims.ImsException from label094 to label095 with label143;
        catch com.android.ims.ImsException from label096 to label097 with label143;
        catch com.android.ims.ImsException from label098 to label099 with label143;
        catch com.android.ims.ImsException from label100 to label101 with label143;
        catch com.android.ims.ImsException from label102 to label103 with label143;
        catch com.android.ims.ImsException from label104 to label105 with label143;
        catch com.android.ims.ImsException from label106 to label107 with label143;
        catch com.android.ims.ImsException from label108 to label109 with label143;
        catch com.android.ims.ImsException from label110 to label111 with label143;
        catch com.android.ims.ImsException from label112 to label113 with label143;
        catch com.android.ims.ImsException from label114 to label115 with label143;
        catch com.android.ims.ImsException from label116 to label117 with label143;
        catch com.android.ims.ImsException from label119 to label120 with label143;
        catch com.android.ims.ImsException from label121 to label122 with label143;
        catch com.android.ims.ImsException from label124 to label125 with label143;
        catch com.android.ims.ImsException from label126 to label127 with label143;
        catch com.android.ims.ImsException from label128 to label129 with label143;
        catch com.android.ims.ImsException from label130 to label131 with label143;
        catch com.android.ims.ImsException from label132 to label133 with label143;
        catch com.android.ims.ImsException from label134 to label135 with label143;
        catch com.android.ims.ImsException from label136 to label137 with label143;
        catch com.android.ims.ImsException from label138 to label139 with label143;
        catch com.android.ims.ImsException from label140 to label141 with label143;
    }

    public boolean wasVideoPausedFromSource(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int i0;
        com.android.ims.internal.ImsVideoCallProviderWrapper r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.internal.ImsVideoCallProviderWrapper mImsVideoCallProviderWrapper>;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.ims.internal.ImsVideoCallProviderWrapper: boolean wasVideoPausedFromSource(int)>(i0);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int WAKE_LOCK_TIMEOUT_MILLIS> = 60000;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int PAUSE_DELAY_MILLIS> = 3000;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String LOG_TAG> = "ImsPhoneConnection";

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int EVENT_WAKE_LOCK_TIMEOUT> = 4;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int EVENT_PAUSE_DONE> = 2;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int EVENT_NEXT_POST_DIAL> = 3;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int EVENT_DTMF_DONE> = 1;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int EVENT_DTMF_DELAY_DONE> = 5;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean DBG> = 1;

        return;
    }
}
