public final class com.android.internal.telephony.imsphone.ImsPhoneMmiCode extends android.os.Handler implements com.android.internal.telephony.MmiCode
{
    private static final java.lang.String ACTION_ACTIVATE;
    private static final java.lang.String ACTION_DEACTIVATE;
    private static final java.lang.String ACTION_ERASURE;
    private static final java.lang.String ACTION_INTERROGATE;
    private static final java.lang.String ACTION_REGISTER;
    private static final char END_OF_USSD_COMMAND;
    private static final int EVENT_GET_CLIR_COMPLETE;
    private static final int EVENT_QUERY_CF_COMPLETE;
    private static final int EVENT_QUERY_COMPLETE;
    private static final int EVENT_QUERY_ICB_COMPLETE;
    private static final int EVENT_SET_CFF_COMPLETE;
    private static final int EVENT_SET_COMPLETE;
    private static final int EVENT_SUPP_SVC_QUERY_COMPLETE;
    private static final int EVENT_USSD_CANCEL_COMPLETE;
    private static final int EVENT_USSD_COMPLETE;
    static final java.lang.String IcbAnonymousMmi;
    static final java.lang.String IcbDnMmi;
    static final java.lang.String LOG_TAG;
    private static final int MATCH_GROUP_ACTION;
    private static final int MATCH_GROUP_DIALING_NUMBER;
    private static final int MATCH_GROUP_POUND_STRING;
    private static final int MATCH_GROUP_PWD_CONFIRM;
    private static final int MATCH_GROUP_SERVICE_CODE;
    private static final int MATCH_GROUP_SIA;
    private static final int MATCH_GROUP_SIB;
    private static final int MATCH_GROUP_SIC;
    private static final int MAX_LENGTH_SHORT_CODE;
    private static final int NUM_PRESENTATION_ALLOWED;
    private static final int NUM_PRESENTATION_RESTRICTED;
    private static final java.lang.String SC_BAIC;
    private static final java.lang.String SC_BAICa;
    private static final java.lang.String SC_BAICr;
    private static final java.lang.String SC_BAOC;
    private static final java.lang.String SC_BAOIC;
    private static final java.lang.String SC_BAOICxH;
    private static final java.lang.String SC_BA_ALL;
    private static final java.lang.String SC_BA_MO;
    private static final java.lang.String SC_BA_MT;
    private static final java.lang.String SC_BS_MT;
    private static final java.lang.String SC_CFB;
    private static final java.lang.String SC_CFNR;
    private static final java.lang.String SC_CFNRy;
    private static final java.lang.String SC_CFU;
    private static final java.lang.String SC_CFUT;
    private static final java.lang.String SC_CF_All;
    private static final java.lang.String SC_CF_All_Conditional;
    private static final java.lang.String SC_CLIP;
    private static final java.lang.String SC_CLIR;
    private static final java.lang.String SC_CNAP;
    private static final java.lang.String SC_COLP;
    private static final java.lang.String SC_COLR;
    private static final java.lang.String SC_PIN;
    private static final java.lang.String SC_PIN2;
    private static final java.lang.String SC_PUK;
    private static final java.lang.String SC_PUK2;
    private static final java.lang.String SC_PWD;
    private static final java.lang.String SC_WAIT;
    public static final java.lang.String UT_BUNDLE_KEY_CLIR;
    public static final java.lang.String UT_BUNDLE_KEY_SSINFO;
    private static java.util.regex.Pattern sPatternSuppService;
    private static java.lang.String[] sTwoDigitNumberPattern;
    private java.lang.String mAction;
    private android.os.ResultReceiver mCallbackReceiver;
    private android.content.Context mContext;
    private java.lang.String mDialingNumber;
    private com.android.internal.telephony.uicc.IccRecords mIccRecords;
    private boolean mIsCallFwdReg;
    private boolean mIsNetworkInitiatedUSSD;
    private boolean mIsPendingUSSD;
    private boolean mIsSsInfo;
    private boolean mIsUssdRequest;
    private java.lang.CharSequence mMessage;
    private com.android.internal.telephony.imsphone.ImsPhone mPhone;
    private java.lang.String mPoundString;
    private java.lang.String mPwd;
    private java.lang.String mSc;
    private java.lang.String mSia;
    private java.lang.String mSib;
    private java.lang.String mSic;
    private com.android.internal.telephony.MmiCode$State mState;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String UT_BUNDLE_KEY_SSINFO> = "imsSsInfo";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String UT_BUNDLE_KEY_CLIR> = "queryClir";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_WAIT> = "43";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_PWD> = "03";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_PUK2> = "052";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_PUK> = "05";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_PIN2> = "042";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_PIN> = "04";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_COLR> = "77";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_COLP> = "76";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_CNAP> = "300";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_CLIR> = "31";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_CLIP> = "30";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_CF_All_Conditional> = "004";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_CF_All> = "002";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_CFUT> = "22";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_CFU> = "21";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_CFNRy> = "61";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_CFNR> = "62";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_CFB> = "67";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_BS_MT> = "156";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_BA_MT> = "353";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_BA_MO> = "333";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_BA_ALL> = "330";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_BAOICxH> = "332";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_BAOIC> = "331";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_BAOC> = "33";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_BAICr> = "351";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_BAICa> = "157";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String SC_BAIC> = "35";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int NUM_PRESENTATION_RESTRICTED> = 1;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int NUM_PRESENTATION_ALLOWED> = 0;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int MAX_LENGTH_SHORT_CODE> = 2;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int MATCH_GROUP_SIC> = 9;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int MATCH_GROUP_SIB> = 7;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int MATCH_GROUP_SIA> = 5;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int MATCH_GROUP_SERVICE_CODE> = 3;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int MATCH_GROUP_PWD_CONFIRM> = 11;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int MATCH_GROUP_POUND_STRING> = 1;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int MATCH_GROUP_DIALING_NUMBER> = 12;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int MATCH_GROUP_ACTION> = 2;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String LOG_TAG> = "ImsPhoneMmiCode";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String IcbDnMmi> = "Specific Incoming Call Barring";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String IcbAnonymousMmi> = "Anonymous Incoming Call Barring";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int EVENT_USSD_COMPLETE> = 2;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int EVENT_USSD_CANCEL_COMPLETE> = 5;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int EVENT_SUPP_SVC_QUERY_COMPLETE> = 7;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int EVENT_SET_COMPLETE> = 0;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int EVENT_SET_CFF_COMPLETE> = 4;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int EVENT_QUERY_ICB_COMPLETE> = 10;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int EVENT_QUERY_COMPLETE> = 3;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int EVENT_QUERY_CF_COMPLETE> = 1;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int EVENT_GET_CLIR_COMPLETE> = 6;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: char END_OF_USSD_COMMAND> = 35;

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String ACTION_REGISTER> = "**";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String ACTION_INTERROGATE> = "*#";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String ACTION_ERASURE> = "##";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String ACTION_DEACTIVATE> = "#";

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String ACTION_ACTIVATE> = "*";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("((\\*|#|\\*#|\\*\\*|##)(\\d{2,3})(\\*([^*#]*)(\\*([^*#]*)(\\*([^*#]*)(\\*([^*#]*))?)?)?)?#)(.*)");

        <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.util.regex.Pattern sPatternSuppService> = $r0;

        return;
    }

    public void <init>(com.android.internal.telephony.imsphone.ImsPhone)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        com.android.internal.telephony.imsphone.ImsPhone r1, $r6;
        android.os.Handler $r2;
        android.os.Looper $r3;
        com.android.internal.telephony.MmiCode$State $r4;
        android.content.Context $r5;
        com.android.internal.telephony.Phone $r7;
        com.android.internal.telephony.uicc.IccRecords $r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhone;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhone: android.os.Handler getHandler()>();

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        $r4 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State PENDING>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r4;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsSsInfo> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone> = r1;

        $r5 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext> = $r5;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r7 = $r6.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone mDefaultPhone>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.Phone: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.uicc.IccRecords mIccRecords> = $r8;

        return;
    }

    private static java.lang.String convertCdmaMmiCodesTo3gppMmiCodes(java.lang.String)
    {
        java.lang.String r0, r1, $r3, $r4, r13, r15, r16;
        java.util.regex.Pattern $r2;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5, $r9;
        java.util.regex.Matcher r14;

        r13 := @parameter0: java.lang.String;

        $r2 = <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.util.regex.Pattern sPatternCdmaMmiCodeWhileRoaming>;

        r14 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r13);

        r15 = r13;

        $z0 = virtualinvoke r14.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r14.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r0 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r3);

        r1 = virtualinvoke r14.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r4 = virtualinvoke r14.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        r16 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r4);

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("67");

        if $z1 == 0 goto label1;

        if r16 == null goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#31#");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        r15 = r13;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("82");

        if $z2 == 0 goto label2;

        r15 = r13;

        if r16 == null goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*31#");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        r15 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r15;
    }

    private java.lang.CharSequence createQueryCallWaitingResultMessage(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0, $i1, $i2, i3;
        java.lang.StringBuilder $r2;
        android.content.Context $r3;
        java.lang.CharSequence $r4, $r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.CharSequence getText(int)>(17041222);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r4);

        i3 = 1;

     label1:
        if i3 > 128 goto label3;

        $i1 = i3 & i0;

        if $i1 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $i2 = i3 & i0;

        $r6 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence serviceClassToCFString(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r6);

     label2:
        i3 = i3 << 1;

        goto label1;

     label3:
        return $r2;
    }

    private java.lang.String getActionStringFromReqType(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        i0 := @parameter0: int;

        if i0 == 0 goto label5;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        return null;

     label1:
        return "##";

     label2:
        return "**";

     label3:
        return "*#";

     label4:
        return "#";

     label5:
        return "*";
    }

    private java.lang.CharSequence getErrorMessage(android.os.AsyncResult)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        android.content.Context $r1;
        android.os.AsyncResult r2;
        java.lang.CharSequence r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r2 := @parameter0: android.os.AsyncResult;

        r3 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getMmiErrorMessage(android.os.AsyncResult)>(r2);

        if r3 == null goto label1;

        goto label2;

     label1:
        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        r3 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

     label2:
        return r3;
    }

    private java.lang.CharSequence getImsErrorMessage(android.os.AsyncResult)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        android.os.AsyncResult r1;
        com.android.ims.ImsException r2;
        java.lang.CharSequence r3, $r6;
        java.lang.Throwable $r4;
        java.lang.String $r5, $r7;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 := @parameter0: android.os.AsyncResult;

        $r4 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        r2 = (com.android.ims.ImsException) $r4;

        r3 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getMmiErrorMessage(android.os.AsyncResult)>(r1);

        if r3 == null goto label1;

        return r3;

     label1:
        $r5 = virtualinvoke r2.<com.android.ims.ImsException: java.lang.String getMessage()>();

        if $r5 == null goto label2;

        $r7 = virtualinvoke r2.<com.android.ims.ImsException: java.lang.String getMessage()>();

        return $r7;

     label2:
        $r6 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getErrorMessage(android.os.AsyncResult)>(r1);

        return $r6;
    }

    private java.lang.CharSequence getMmiErrorMessage(android.os.AsyncResult)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0;
        java.lang.Throwable $r1, $r2, $r3, $r24;
        boolean $z0, $z1;
        com.android.internal.telephony.CommandException$Error $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        android.content.Context $r14, $r16, $r18, $r20, $r22, $r26, $r28, $r30, $r32, $r34;
        java.lang.CharSequence $r15, $r17, $r19, $r21, $r23, $r27, $r29, $r31, $r33, $r35;
        com.android.ims.ImsException $r25;
        android.os.AsyncResult r36;
        com.android.internal.telephony.CommandException r37;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r36 := @parameter0: android.os.AsyncResult;

        $r1 = r36.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z0 = $r1 instanceof com.android.ims.ImsException;

        if $z0 == 0 goto label07;

        $r24 = r36.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r25 = (com.android.ims.ImsException) $r24;

        i0 = virtualinvoke $r25.<com.android.ims.ImsException: int getCode()>();

        if i0 == 241 goto label06;

        tableswitch(i0)
        {
            case 822: goto label05;
            case 823: goto label04;
            case 824: goto label03;
            case 825: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        $r28 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r29 = virtualinvoke $r28.<android.content.Context: java.lang.CharSequence getText(int)>(17041318);

        return $r29;

     label03:
        $r30 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r31 = virtualinvoke $r30.<android.content.Context: java.lang.CharSequence getText(int)>(17041319);

        return $r31;

     label04:
        $r32 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r33 = virtualinvoke $r32.<android.content.Context: java.lang.CharSequence getText(int)>(17041320);

        return $r33;

     label05:
        $r34 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r35 = virtualinvoke $r34.<android.content.Context: java.lang.CharSequence getText(int)>(17041317);

        return $r35;

     label06:
        $r26 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r27 = virtualinvoke $r26.<android.content.Context: java.lang.CharSequence getText(int)>(17040640);

        return $r27;

     label07:
        $r2 = r36.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z1 = $r2 instanceof com.android.internal.telephony.CommandException;

        if $z1 == 0 goto label12;

        $r3 = r36.<android.os.AsyncResult: java.lang.Throwable exception>;

        r37 = (com.android.internal.telephony.CommandException) $r3;

        $r4 = virtualinvoke r37.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $r5 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error FDN_CHECK_FAILURE>;

        if $r4 != $r5 goto label08;

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r23 = virtualinvoke $r22.<android.content.Context: java.lang.CharSequence getText(int)>(17040640);

        return $r23;

     label08:
        $r6 = virtualinvoke r37.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $r7 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error SS_MODIFIED_TO_DIAL>;

        if $r6 != $r7 goto label09;

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r21 = virtualinvoke $r20.<android.content.Context: java.lang.CharSequence getText(int)>(17041317);

        return $r21;

     label09:
        $r8 = virtualinvoke r37.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $r9 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error SS_MODIFIED_TO_USSD>;

        if $r8 != $r9 goto label10;

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r19 = virtualinvoke $r18.<android.content.Context: java.lang.CharSequence getText(int)>(17041320);

        return $r19;

     label10:
        $r10 = virtualinvoke r37.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $r11 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error SS_MODIFIED_TO_SS>;

        if $r10 != $r11 goto label11;

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r17 = virtualinvoke $r16.<android.content.Context: java.lang.CharSequence getText(int)>(17041319);

        return $r17;

     label11:
        $r12 = virtualinvoke r37.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $r13 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error SS_MODIFIED_TO_DIAL_VIDEO>;

        if $r12 != $r13 goto label12;

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: java.lang.CharSequence getText(int)>(17041318);

        return $r15;

     label12:
        return null;
    }

    private java.lang.CharSequence getScString()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.content.Context $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25;
        java.lang.CharSequence $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if r1 == null goto label10;

        $z0 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isServiceCodeCallBarring(java.lang.String)>(r1);

        if $z0 == 0 goto label01;

        $r25 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r26 = virtualinvoke $r25.<android.content.Context: java.lang.CharSequence getText(int)>(17039400);

        return $r26;

     label01:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z1 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isServiceCodeCallForwarding(java.lang.String)>($r2);

        if $z1 == 0 goto label02;

        $r23 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r24 = virtualinvoke $r23.<android.content.Context: java.lang.CharSequence getText(int)>(17039406);

        return $r24;

     label02:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("03");

        if $z2 == 0 goto label03;

        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r22 = virtualinvoke $r21.<android.content.Context: java.lang.CharSequence getText(int)>(17039531);

        return $r22;

     label03:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("43");

        if $z3 == 0 goto label04;

        $r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r20 = virtualinvoke $r19.<android.content.Context: java.lang.CharSequence getText(int)>(17039414);

        return $r20;

     label04:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("30");

        if $z4 == 0 goto label05;

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r18 = virtualinvoke $r17.<android.content.Context: java.lang.CharSequence getText(int)>(17039407);

        return $r18;

     label05:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("31");

        if $z5 == 0 goto label06;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.CharSequence getText(int)>(17039408);

        return $r16;

     label06:
        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("76");

        if $z6 == 0 goto label07;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.CharSequence getText(int)>(17039412);

        return $r14;

     label07:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("77");

        if $z7 == 0 goto label08;

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.CharSequence getText(int)>(17039413);

        return $r12;

     label08:
        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z8 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("156");

        if $z8 == 0 goto label09;

        return "Specific Incoming Call Barring";

     label09:
        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z9 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("157");

        if $z9 == 0 goto label10;

        return "Anonymous Incoming Call Barring";

     label10:
        return "";
    }

    private java.lang.String getScStringFromScType(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label23;
            case 1: goto label22;
            case 2: goto label21;
            case 3: goto label20;
            case 4: goto label19;
            case 5: goto label18;
            case 6: goto label01;
            case 7: goto label17;
            case 8: goto label16;
            case 9: goto label15;
            case 10: goto label14;
            case 11: goto label13;
            case 12: goto label12;
            case 13: goto label11;
            case 14: goto label10;
            case 15: goto label09;
            case 16: goto label08;
            case 17: goto label07;
            case 18: goto label06;
            case 19: goto label05;
            case 20: goto label04;
            case 21: goto label03;
            case 22: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "157";

     label03:
        return "156";

     label04:
        return "353";

     label05:
        return "333";

     label06:
        return "330";

     label07:
        return "351";

     label08:
        return "35";

     label09:
        return "332";

     label10:
        return "331";

     label11:
        return "33";

     label12:
        return "43";

     label13:
        return "300";

     label14:
        return "77";

     label15:
        return "76";

     label16:
        return "31";

     label17:
        return "30";

     label18:
        return "004";

     label19:
        return "002";

     label20:
        return "62";

     label21:
        return "61";

     label22:
        return "67";

     label23:
        return "21";
    }

    private static boolean isEmptyOrNull(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: java.lang.CharSequence;

        if r0 == null goto label2;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    static boolean isPinPukCommand(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("04");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("042");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("05");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("052");

        if $z3 == 0 goto label2;

     label1:
        z4 = 1;

        goto label3;

     label2:
        z4 = 0;

     label3:
        return z4;
    }

    static boolean isScMatchesSuppServType(java.lang.String)
    {
        java.util.regex.Pattern $r0;
        boolean $z1, $z2, $z3, z4;
        java.lang.String $r1, r2, r4;
        java.util.regex.Matcher r3;

        r2 := @parameter0: java.lang.String;

        $r0 = <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.util.regex.Pattern sPatternSuppService>;

        r3 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);

        z4 = 0;

        $z1 = virtualinvoke r3.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label2;

        $r1 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        r4 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r1);

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("22");

        if $z2 == 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("156");

        if $z3 == 0 goto label2;

        z4 = 1;

     label2:
        return z4;
    }

    private boolean isServiceClassVoiceVideoOrNone(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0;
        boolean z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        i0 := @parameter0: int;

        z1 = 1;

        if i0 == 0 goto label2;

        z1 = 1;

        if i0 == 1 goto label2;

        if i0 != 80 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    static boolean isServiceCodeCallBarring(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, i1;
        boolean $z0;
        android.content.res.Resources r2;
        java.lang.String[] r3;

        r0 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        if r0 == null goto label3;

        r3 = virtualinvoke r2.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17235998);

        if r3 == null goto label3;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r1 = r3[i1];

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    static boolean isServiceCodeCallForwarding(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("21");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("67");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("61");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("62");

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("002");

        if $z4 != 0 goto label1;

        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("004");

        if $z5 == 0 goto label2;

     label1:
        z6 = 1;

        goto label3;

     label2:
        z6 = 0;

     label3:
        return z6;
    }

    private static boolean isShortCode(java.lang.String, com.android.internal.telephony.imsphone.ImsPhone)
    {
        java.lang.String r0;
        com.android.internal.telephony.imsphone.ImsPhone r1;
        int $i0;
        android.content.Context $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhone;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,java.lang.String)>($r2, r0);

        if $z0 == 0 goto label3;

        return 0;

     label3:
        $z1 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isShortCodeUSSD(java.lang.String,com.android.internal.telephony.imsphone.ImsPhone)>(r0, r1);

        return $z1;
    }

    private static boolean isShortCodeUSSD(java.lang.String, com.android.internal.telephony.imsphone.ImsPhone)
    {
        java.lang.String r0;
        com.android.internal.telephony.imsphone.ImsPhone r1;
        int $i0, $i1;
        boolean $z0;
        char $c2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhone;

        if r0 == null goto label3;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 > 2 goto label3;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhone: boolean isInCall()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 2 goto label2;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c2 == 49 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static boolean isSuppServiceCodes(java.lang.String, com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.Phone r0, $r3;
        java.lang.String $r1, r4, r5, r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        android.telephony.ServiceState $r2;
        java.util.regex.Pattern $r6;
        java.util.regex.Matcher r7;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: com.android.internal.telephony.Phone;

        r5 = r4;

        if r0 == null goto label01;

        r5 = r4;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $z13 = virtualinvoke $r2.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z13 == 0 goto label01;

        r5 = r4;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.Phone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $z14 = virtualinvoke $r3.<com.android.internal.telephony.Phone: boolean supportsConversionOfCdmaCallerIdMmiCodesWhileRoaming()>();

        if $z14 == 0 goto label01;

        r5 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String convertCdmaMmiCodesTo3gppMmiCodes(java.lang.String)>(r4);

     label01:
        $r6 = <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.util.regex.Pattern sPatternSuppService>;

        r7 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5);

        $z15 = virtualinvoke r7.<java.util.regex.Matcher: boolean matches()>();

        if $z15 == 0 goto label14;

        $r1 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        r8 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r1);

        $z0 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isServiceCodeCallForwarding(java.lang.String)>(r8);

        if $z0 == 0 goto label02;

        return 1;

     label02:
        $z1 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isServiceCodeCallBarring(java.lang.String)>(r8);

        if $z1 == 0 goto label03;

        return 1;

     label03:
        if r8 == null goto label04;

        $z12 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("22");

        if $z12 == 0 goto label04;

        return 1;

     label04:
        if r8 == null goto label05;

        $z11 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("30");

        if $z11 == 0 goto label05;

        return 1;

     label05:
        if r8 == null goto label06;

        $z10 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("31");

        if $z10 == 0 goto label06;

        return 1;

     label06:
        if r8 == null goto label07;

        $z9 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("76");

        if $z9 == 0 goto label07;

        return 1;

     label07:
        if r8 == null goto label08;

        $z8 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("77");

        if $z8 == 0 goto label08;

        return 1;

     label08:
        if r8 == null goto label09;

        $z7 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("300");

        if $z7 == 0 goto label09;

        return 1;

     label09:
        if r8 == null goto label10;

        $z6 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("156");

        if $z6 == 0 goto label10;

        return 1;

     label10:
        if r8 == null goto label11;

        $z5 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("157");

        if $z5 == 0 goto label11;

        return 1;

     label11:
        if r8 == null goto label12;

        $z4 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("03");

        if $z4 == 0 goto label12;

        return 1;

     label12:
        if r8 == null goto label13;

        $z3 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("43");

        if $z3 == 0 goto label13;

        return 1;

     label13:
        $z2 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isPinPukCommand(java.lang.String)>(r8);

        if $z2 == 0 goto label14;

        return 1;

     label14:
        return 0;
    }

    private java.lang.CharSequence makeCFQueryResultMessage(com.android.internal.telephony.CallForwardInfo, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        com.android.internal.telephony.CallForwardInfo r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.CharSequence r2, r14, $r18;
        java.lang.String r3, r4, $r6, $r10, $r15;
        android.content.Context $r5, $r9, $r11, $r12, $r13;
        com.android.internal.telephony.uicc.IccRecords $r7;
        com.android.internal.telephony.imsphone.ImsPhone $r8;
        boolean $z0, z1, z2;
        java.lang.String[] $r16;
        java.lang.Object[] $r17;
        java.lang.CharSequence[] r19;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 := @parameter0: com.android.internal.telephony.CallForwardInfo;

        i0 := @parameter1: int;

        i6 = r1.<com.android.internal.telephony.CallForwardInfo: int reason>;

        z1 = 0;

        if i6 != 2 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        $i1 = r1.<com.android.internal.telephony.CallForwardInfo: int status>;

        if $i1 != 1 goto label4;

        if z2 == 0 goto label3;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        r14 = virtualinvoke $r13.<android.content.Context: java.lang.CharSequence getText(int)>(17039798);

        goto label7;

     label3:
        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        r14 = virtualinvoke $r12.<android.content.Context: java.lang.CharSequence getText(int)>(17039797);

        goto label7;

     label4:
        $i2 = r1.<com.android.internal.telephony.CallForwardInfo: int status>;

        if $i2 != 0 goto label5;

        $r10 = r1.<com.android.internal.telephony.CallForwardInfo: java.lang.String number>;

        $z0 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isEmptyOrNull(java.lang.CharSequence)>($r10);

        if $z0 == 0 goto label5;

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        r14 = virtualinvoke $r11.<android.content.Context: java.lang.CharSequence getText(int)>(17039799);

        goto label7;

     label5:
        if z2 == 0 goto label6;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        r14 = virtualinvoke $r9.<android.content.Context: java.lang.CharSequence getText(int)>(17039801);

        goto label7;

     label6:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        r14 = virtualinvoke $r5.<android.content.Context: java.lang.CharSequence getText(int)>(17039800);

     label7:
        $i7 = r1.<com.android.internal.telephony.CallForwardInfo: int serviceClass>;

        $i8 = $i7 & i0;

        r2 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence serviceClassToCFString(int)>($i8);

        $r15 = r1.<com.android.internal.telephony.CallForwardInfo: java.lang.String number>;

        $i9 = r1.<com.android.internal.telephony.CallForwardInfo: int toa>;

        r3 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>($r15, $i9);

        $i10 = r1.<com.android.internal.telephony.CallForwardInfo: int timeSeconds>;

        r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i10);

        $i11 = r1.<com.android.internal.telephony.CallForwardInfo: int reason>;

        if $i11 != 0 goto label9;

        $i3 = r1.<com.android.internal.telephony.CallForwardInfo: int serviceClass>;

        $i4 = $i3 & i0;

        if $i4 != 1 goto label9;

        $i5 = r1.<com.android.internal.telephony.CallForwardInfo: int status>;

        if $i5 != 1 goto label8;

        z1 = 1;

     label8:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        $r6 = r1.<com.android.internal.telephony.CallForwardInfo: java.lang.String number>;

        virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhone: void setVoiceCallForwardingFlag(com.android.internal.telephony.uicc.IccRecords,int,boolean,java.lang.String)>($r7, 1, z1, $r6);

     label9:
        $r16 = newarray (java.lang.String)[3];

        $r16[0] = "{0}";

        $r16[1] = "{1}";

        $r16[2] = "{2}";

        $r17 = newarray (java.lang.CharSequence)[3];

        $r17[0] = r2;

        $r17[1] = r3;

        $r17[2] = r4;

        r19 = (java.lang.CharSequence[]) $r17;

        $r18 = staticinvoke <android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])>(r14, $r16, r19);

        return $r18;
    }

    private static java.lang.String makeEmptyNull(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        return r0;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneMmiCode newFromDialString(java.lang.String, com.android.internal.telephony.imsphone.ImsPhone)
    {
        java.lang.String r0;
        com.android.internal.telephony.imsphone.ImsPhone r1;
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhone;

        $r2 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhoneMmiCode newFromDialString(java.lang.String,com.android.internal.telephony.imsphone.ImsPhone,android.os.ResultReceiver)>(r0, r1, null);

        return $r2;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneMmiCode newFromDialString(java.lang.String, com.android.internal.telephony.imsphone.ImsPhone, android.os.ResultReceiver)
    {
        com.android.internal.telephony.imsphone.ImsPhone r0;
        android.os.ResultReceiver r1;
        java.lang.String r2, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, r26, r27;
        com.android.internal.telephony.Phone $r3, $r25;
        android.telephony.ServiceState $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.content.Context $r5;
        int $i0;
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode $r6, $r7, $r8, $r24, r31;
        java.util.regex.Pattern $r28;
        java.util.regex.Matcher r29;

        r26 := @parameter0: java.lang.String;

        r0 := @parameter1: com.android.internal.telephony.imsphone.ImsPhone;

        r1 := @parameter2: android.os.ResultReceiver;

        r27 = r26;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        $z0 = virtualinvoke $r4.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z0 == 0 goto label1;

        r27 = r26;

        $r25 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $z6 = virtualinvoke $r25.<com.android.internal.telephony.Phone: boolean supportsConversionOfCdmaCallerIdMmiCodesWhileRoaming()>();

        if $z6 == 0 goto label1;

        r27 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String convertCdmaMmiCodesTo3gppMmiCodes(java.lang.String)>(r26);

     label1:
        $r28 = <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.util.regex.Pattern sPatternSuppService>;

        r29 = virtualinvoke $r28.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r27);

        $z7 = virtualinvoke r29.<java.util.regex.Matcher: boolean matches()>();

        if $z7 == 0 goto label2;

        $r8 = new com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        specialinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void <init>(com.android.internal.telephony.imsphone.ImsPhone)>(r0);

        $r9 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r10 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r9);

        $r8.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString> = $r10;

        $r11 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r12 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r11);

        $r8.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mAction> = $r12;

        $r13 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r14 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r13);

        $r8.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc> = $r14;

        $r15 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        $r16 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r15);

        $r8.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSia> = $r16;

        $r17 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(7);

        $r18 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r17);

        $r8.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSib> = $r18;

        $r19 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(9);

        $r20 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r19);

        $r8.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSic> = $r20;

        $r21 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(11);

        $r22 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r21);

        $r8.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPwd> = $r22;

        $r23 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(12);

        r2 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String makeEmptyNull(java.lang.String)>($r23);

        $r8.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mDialingNumber> = r2;

        $r8.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.ResultReceiver mCallbackReceiver> = r1;

        r31 = $r8;

        if r2 == null goto label5;

        r31 = $r8;

        $z4 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("#");

        if $z4 == 0 goto label5;

        r31 = $r8;

        $z5 = virtualinvoke r27.<java.lang.String: boolean endsWith(java.lang.String)>("#");

        if $z5 == 0 goto label5;

        $r24 = new com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        specialinvoke $r24.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void <init>(com.android.internal.telephony.imsphone.ImsPhone)>(r0);

        r31 = $r24;

        $r24.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString> = r27;

        goto label5;

     label2:
        $z1 = virtualinvoke r27.<java.lang.String: boolean endsWith(java.lang.String)>("#");

        if $z1 == 0 goto label3;

        $r7 = new com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        specialinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void <init>(com.android.internal.telephony.imsphone.ImsPhone)>(r0);

        r31 = $r7;

        $r7.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString> = r27;

        goto label5;

     label3:
        $r5 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $i0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhone: int getSubId()>();

        $z2 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: boolean isTwoDigitShortCode(android.content.Context,int,java.lang.String)>($r5, $i0, r27);

        if $z2 == 0 goto label4;

        r31 = null;

        goto label5;

     label4:
        r31 = null;

        $z3 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isShortCode(java.lang.String,com.android.internal.telephony.imsphone.ImsPhone)>(r27, r0);

        if $z3 == 0 goto label5;

        $r6 = new com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        specialinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void <init>(com.android.internal.telephony.imsphone.ImsPhone)>(r0);

        r31 = $r6;

        $r6.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mDialingNumber> = r27;

     label5:
        return r31;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneMmiCode newFromUssdUserInput(java.lang.String, com.android.internal.telephony.imsphone.ImsPhone)
    {
        java.lang.String r0;
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode $r1;
        com.android.internal.telephony.MmiCode$State $r2;
        com.android.internal.telephony.imsphone.ImsPhone r3;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: com.android.internal.telephony.imsphone.ImsPhone;

        $r1 = new com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        specialinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void <init>(com.android.internal.telephony.imsphone.ImsPhone)>(r3);

        $r1.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = r0;

        $r2 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State PENDING>;

        $r1.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r2;

        $r1.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsPendingUSSD> = 1;

        return $r1;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneMmiCode newNetworkInitiatedUssd(java.lang.String, boolean, com.android.internal.telephony.imsphone.ImsPhone)
    {
        java.lang.String r0;
        boolean z0;
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode $r1;
        com.android.internal.telephony.MmiCode$State $r2, $r3;
        com.android.internal.telephony.imsphone.ImsPhone r4;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r4 := @parameter2: com.android.internal.telephony.imsphone.ImsPhone;

        $r1 = new com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        specialinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void <init>(com.android.internal.telephony.imsphone.ImsPhone)>(r4);

        $r1.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = r0;

        $r1.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsUssdRequest> = z0;

        $r1.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsNetworkInitiatedUSSD> = 1;

        if z0 == 0 goto label1;

        $r1.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsPendingUSSD> = 1;

        $r3 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State PENDING>;

        $r1.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r3;

        goto label2;

     label1:
        $r2 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        $r1.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r2;

     label2:
        return $r1;
    }

    private void onIcbQueryComplete(android.os.AsyncResult)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0, $i2, $i3, $i4, i5;
        android.telephony.ims.ImsSsInfo r2;
        java.lang.StringBuilder $r3, $r7, $r23;
        java.lang.String $r6, $r16, $r25, $r30;
        java.lang.CharSequence $r8, $r13, $r18, $r21, $r34, $r36;
        java.lang.Throwable $r10, $r33;
        java.lang.Object $r11, $r15, $r39;
        android.content.Context $r12, $r17, $r20;
        com.android.internal.telephony.MmiCode$State $r32, $r47;
        boolean $z0;
        java.lang.ClassCastException $r38;
        android.telephony.ims.ImsSsInfo[] $r40;
        android.os.AsyncResult r41;
        java.util.List r43, r44;
        com.android.internal.telephony.imsphone.ImsPhone $r48;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r41 := @parameter0: android.os.AsyncResult;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onIcbQueryComplete mmi=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r6);

        $r7 = new java.lang.StringBuilder;

        $r8 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getScString()>();

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r10 = r41.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r10 == null goto label02;

        $r32 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r32;

        $r33 = r41.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z0 = $r33 instanceof com.android.ims.ImsException;

        if $z0 == 0 goto label01;

        $r36 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getImsErrorMessage(android.os.AsyncResult)>(r41);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r36);

        goto label13;

     label01:
        $r34 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getErrorMessage(android.os.AsyncResult)>(r41);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r34);

        goto label13;

     label02:
        $r11 = r41.<android.os.AsyncResult: java.lang.Object result>;

        r43 = (java.util.List) $r11;

     label03:
        r44 = r43;

        goto label05;

     label04:
        $r38 := @caughtexception;

        $r39 = r41.<android.os.AsyncResult: java.lang.Object result>;

        $r40 = (android.telephony.ims.ImsSsInfo[]) $r39;

        r44 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r40);

     label05:
        if r44 == null goto label11;

        $i2 = interfaceinvoke r44.<java.util.List: int size()>();

        if $i2 != 0 goto label06;

        goto label11;

     label06:
        i5 = 0;

        i0 = interfaceinvoke r44.<java.util.List: int size()>();

     label07:
        if i5 >= i0 goto label12;

        $r15 = interfaceinvoke r44.<java.util.List: java.lang.Object get(int)>(i5);

        r2 = (android.telephony.ims.ImsSsInfo) $r15;

        $r16 = virtualinvoke r2.<android.telephony.ims.ImsSsInfo: java.lang.String getIncomingCommunicationBarringNumber()>();

        if $r16 == null goto label08;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Num: ");

        $r25 = virtualinvoke r2.<android.telephony.ims.ImsSsInfo: java.lang.String getIncomingCommunicationBarringNumber()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status: ");

        $i4 = virtualinvoke r2.<android.telephony.ims.ImsSsInfo: int getStatus()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r30 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        goto label10;

     label08:
        $i3 = virtualinvoke r2.<android.telephony.ims.ImsSsInfo: int getStatus()>();

        if $i3 != 1 goto label09;

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r21 = virtualinvoke $r20.<android.content.Context: java.lang.CharSequence getText(int)>(17041221);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r21);

        goto label10;

     label09:
        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r18 = virtualinvoke $r17.<android.content.Context: java.lang.CharSequence getText(int)>(17041220);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r18);

     label10:
        i5 = i5 + 1;

        goto label07;

     label11:
        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: java.lang.CharSequence getText(int)>(17041220);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r13);

     label12:
        $r47 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r47;

     label13:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = $r7;

        $r48 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r48.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

        return;

        catch java.lang.ClassCastException from label02 to label03 with label04;
    }

    private void onQueryCfComplete(android.os.AsyncResult)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0, $i2, $i3, $i4, i5, i6;
        java.lang.StringBuilder $r3, $r31;
        java.lang.CharSequence $r4, $r9, $r19, $r24, $r26;
        java.lang.Throwable $r6, $r23;
        java.lang.Object $r7;
        android.content.Context $r8;
        com.android.internal.telephony.uicc.IccRecords $r11;
        com.android.internal.telephony.imsphone.ImsPhone $r12, $r34;
        android.text.SpannableStringBuilder $r15;
        com.android.internal.telephony.CallForwardInfo $r17, $r18;
        com.android.internal.telephony.MmiCode$State $r22, $r30;
        boolean $z0;
        android.os.AsyncResult r28;
        com.android.internal.telephony.CallForwardInfo[] r29;
        java.lang.String $r33;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r28 := @parameter0: android.os.AsyncResult;

        $r3 = new java.lang.StringBuilder;

        $r4 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getScString()>();

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = r28.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r6 == null goto label02;

        $r22 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r22;

        $r23 = r28.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z0 = $r23 instanceof com.android.ims.ImsException;

        if $z0 == 0 goto label01;

        $r26 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getImsErrorMessage(android.os.AsyncResult)>(r28);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r26);

        goto label11;

     label01:
        $r24 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getErrorMessage(android.os.AsyncResult)>(r28);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r24);

        goto label11;

     label02:
        $r7 = r28.<android.os.AsyncResult: java.lang.Object result>;

        r29 = (com.android.internal.telephony.CallForwardInfo[]) $r7;

        if r29 == null goto label09;

        $i2 = lengthof r29;

        if $i2 != 0 goto label03;

        goto label09;

     label03:
        $r15 = new android.text.SpannableStringBuilder;

        specialinvoke $r15.<android.text.SpannableStringBuilder: void <init>()>();

        i5 = 1;

     label04:
        if i5 > 128 goto label08;

        i6 = 0;

        i0 = lengthof r29;

     label05:
        if i6 >= i0 goto label07;

        $r17 = r29[i6];

        $i3 = $r17.<com.android.internal.telephony.CallForwardInfo: int serviceClass>;

        $i4 = $i3 & i5;

        if $i4 == 0 goto label06;

        $r18 = r29[i6];

        $r19 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence makeCFQueryResultMessage(com.android.internal.telephony.CallForwardInfo,int)>($r18, i5);

        virtualinvoke $r15.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r19);

        virtualinvoke $r15.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\n");

     label06:
        i6 = i6 + 1;

        goto label05;

     label07:
        i5 = i5 << 1;

        goto label04;

     label08:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r15);

        goto label10;

     label09:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.CharSequence getText(int)>(17041220);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r9);

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhone: void setVoiceCallForwardingFlag(com.android.internal.telephony.uicc.IccRecords,int,boolean,java.lang.String)>($r11, 1, 0, null);

     label10:
        $r30 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r30;

     label11:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = $r3;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onQueryCfComplete: mmi=");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r33);

        $r34 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r34.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

        return;
    }

    private void onQueryClirComplete(android.os.AsyncResult)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.StringBuilder $r3, $r9, $r66;
        java.lang.CharSequence $r4, $r16, $r22, $r26, $r30, $r34, $r38, $r42, $r46, $r50, $r54, $r58, $r62;
        com.android.internal.telephony.MmiCode$State $r6, $r18, $r24, $r28, $r32, $r36, $r40, $r44, $r48, $r52, $r56, $r60;
        java.lang.Throwable $r7, $r61;
        java.lang.Object $r8;
        int $i0, $i1, i4, i5, i6;
        java.lang.String $r14, $r68;
        android.content.Context $r15, $r21, $r25, $r29, $r33, $r37, $r41, $r45, $r49, $r53, $r57;
        boolean $z0;
        android.os.AsyncResult r64;
        android.telephony.ims.ImsSsInfo r65;
        com.android.internal.telephony.imsphone.ImsPhone $r69;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r64 := @parameter0: android.os.AsyncResult;

        $r3 = new java.lang.StringBuilder;

        $r4 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getScString()>();

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r6;

        $r7 = r64.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r7 == null goto label01;

        $r61 = r64.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z0 = $r61 instanceof com.android.ims.ImsException;

        if $z0 == 0 goto label12;

        $r62 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getImsErrorMessage(android.os.AsyncResult)>(r64);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r62);

        goto label12;

     label01:
        $r8 = r64.<android.os.AsyncResult: java.lang.Object result>;

        r65 = (android.telephony.ims.ImsSsInfo) $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onQueryClirComplete: CLIR param n=");

        $i0 = virtualinvoke r65.<android.telephony.ims.ImsSsInfo: int getClirOutgoingState()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" m=");

        $i1 = virtualinvoke r65.<android.telephony.ims.ImsSsInfo: int getClirInterrogationStatus()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r14);

        i4 = virtualinvoke r65.<android.telephony.ims.ImsSsInfo: int getClirInterrogationStatus()>();

        if i4 == 0 goto label11;

        if i4 == 1 goto label10;

        if i4 == 3 goto label06;

        if i4 == 4 goto label02;

        $r57 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r58 = virtualinvoke $r57.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r58);

        $r60 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r60;

        goto label12;

     label02:
        i5 = virtualinvoke r65.<android.telephony.ims.ImsSsInfo: int getClirOutgoingState()>();

        if i5 == 0 goto label05;

        if i5 == 1 goto label04;

        if i5 == 2 goto label03;

        $r53 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r54 = virtualinvoke $r53.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r54);

        $r56 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r56;

        goto label12;

     label03:
        $r49 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r50 = virtualinvoke $r49.<android.content.Context: java.lang.CharSequence getText(int)>(17039401);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r50);

        $r52 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r52;

        goto label12;

     label04:
        $r45 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r46 = virtualinvoke $r45.<android.content.Context: java.lang.CharSequence getText(int)>(17039402);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r46);

        $r48 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r48;

        goto label12;

     label05:
        $r41 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r42 = virtualinvoke $r41.<android.content.Context: java.lang.CharSequence getText(int)>(17039401);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r42);

        $r44 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r44;

        goto label12;

     label06:
        i6 = virtualinvoke r65.<android.telephony.ims.ImsSsInfo: int getClirOutgoingState()>();

        if i6 == 0 goto label09;

        if i6 == 1 goto label08;

        if i6 == 2 goto label07;

        $r37 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r38 = virtualinvoke $r37.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r38);

        $r40 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r40;

        goto label12;

     label07:
        $r33 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r34 = virtualinvoke $r33.<android.content.Context: java.lang.CharSequence getText(int)>(17039403);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r34);

        $r36 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r36;

        goto label12;

     label08:
        $r29 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r30 = virtualinvoke $r29.<android.content.Context: java.lang.CharSequence getText(int)>(17039404);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r30);

        $r32 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r32;

        goto label12;

     label09:
        $r25 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r26 = virtualinvoke $r25.<android.content.Context: java.lang.CharSequence getText(int)>(17039404);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r26);

        $r28 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r28;

        goto label12;

     label10:
        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r22 = virtualinvoke $r21.<android.content.Context: java.lang.CharSequence getText(int)>(17039405);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r22);

        $r24 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r24;

        goto label12;

     label11:
        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.CharSequence getText(int)>(17041224);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r16);

        $r18 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r18;

     label12:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = $r3;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onQueryClirComplete mmi=");

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r68);

        $r69 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r69.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

        return;
    }

    private void onQueryComplete(android.os.AsyncResult)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.StringBuilder $r2, $r35;
        java.lang.CharSequence $r3, $r9, $r15, $r18, $r21, $r25, $r29, $r31;
        com.android.internal.telephony.MmiCode$State $r5, $r20, $r23, $r27;
        java.lang.Throwable $r6, $r28;
        java.lang.Object $r7;
        int $i0, $i2, $i3, $i4;
        android.content.Context $r8, $r14, $r17, $r24;
        java.lang.String $r13, $r37;
        boolean $z0, $z1;
        android.os.AsyncResult r33;
        int[] r34;
        com.android.internal.telephony.imsphone.ImsPhone $r38;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r33 := @parameter0: android.os.AsyncResult;

        $r2 = new java.lang.StringBuilder;

        $r3 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getScString()>();

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r5;

        $r6 = r33.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r6 == null goto label2;

        $r28 = r33.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z1 = $r28 instanceof com.android.ims.ImsException;

        if $z1 == 0 goto label1;

        $r31 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getImsErrorMessage(android.os.AsyncResult)>(r33);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r31);

        goto label7;

     label1:
        $r29 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getErrorMessage(android.os.AsyncResult)>(r33);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r29);

        goto label7;

     label2:
        $r7 = r33.<android.os.AsyncResult: java.lang.Object result>;

        r34 = (int[]) $r7;

        $i0 = lengthof r34;

        if $i0 == 0 goto label6;

        $i2 = r34[0];

        if $i2 != 0 goto label3;

        $r24 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r25 = virtualinvoke $r24.<android.content.Context: java.lang.CharSequence getText(int)>(17041220);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r25);

        $r27 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r27;

        goto label7;

     label3:
        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("43");

        if $z0 == 0 goto label4;

        $i4 = r34[1];

        $r21 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence createQueryCallWaitingResultMessage(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r21);

        $r23 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r23;

        goto label7;

     label4:
        $i3 = r34[0];

        if $i3 != 1 goto label5;

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r18 = virtualinvoke $r17.<android.content.Context: java.lang.CharSequence getText(int)>(17041221);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r18);

        $r20 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r20;

        goto label7;

     label5:
        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r15);

        goto label7;

     label6:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r9);

     label7:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = $r2;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onQueryComplete mmi=");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r37);

        $r38 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r38.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

        return;
    }

    private void onSetComplete(android.os.Message, android.os.AsyncResult)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        com.android.internal.telephony.CommandException r1;
        java.lang.StringBuilder $r2, $r57;
        java.lang.CharSequence $r3, $r8, $r14, $r18, $r22, $r28, $r33, $r38, $r45, $r51, r56;
        java.lang.Throwable $r5, $r36, $r37, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.android.internal.telephony.MmiCode$State $r6, $r12, $r16, $r20, $r26, $r35;
        android.content.Context $r7, $r13, $r17, $r21, $r27, $r32, $r44, $r50;
        java.lang.String $r24, $r30, $r43, $r47, $r59;
        com.android.internal.telephony.imsphone.ImsPhone $r25, $r31, $r60;
        com.android.internal.telephony.CommandException$Error $r41, $r42;
        android.os.Message r53;
        android.os.AsyncResult r54;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r53 := @parameter0: android.os.Message;

        r54 := @parameter1: android.os.AsyncResult;

        $r2 = new java.lang.StringBuilder;

        $r3 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getScString()>();

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = r54.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r5 == null goto label06;

        $r35 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r35;

        $r36 = r54.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z7 = $r36 instanceof com.android.internal.telephony.CommandException;

        if $z7 == 0 goto label04;

        $r40 = r54.<android.os.AsyncResult: java.lang.Throwable exception>;

        r1 = (com.android.internal.telephony.CommandException) $r40;

        $r41 = virtualinvoke r1.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $r42 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error PASSWORD_INCORRECT>;

        if $r41 != $r42 goto label01;

        $r50 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r51 = virtualinvoke $r50.<android.content.Context: java.lang.CharSequence getText(int)>(17040737);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r51);

        goto label05;

     label01:
        r56 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getMmiErrorMessage(android.os.AsyncResult)>(r54);

        if r56 == null goto label02;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r56);

        goto label05;

     label02:
        $r43 = virtualinvoke r1.<com.android.internal.telephony.CommandException: java.lang.String getMessage()>();

        if $r43 == null goto label03;

        $r47 = virtualinvoke r1.<com.android.internal.telephony.CommandException: java.lang.String getMessage()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        goto label05;

     label03:
        $r44 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r45 = virtualinvoke $r44.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r45);

        goto label05;

     label04:
        $r37 = r54.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z8 = $r37 instanceof com.android.ims.ImsException;

        if $z8 == 0 goto label05;

        $r38 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getImsErrorMessage(android.os.AsyncResult)>(r54);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r38);

        goto label13;

     label05:
        goto label13;

     label06:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        if $z0 == 0 goto label09;

        $r26 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r26;

        $z5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsCallFwdReg>;

        if $z5 == 0 goto label07;

        $r32 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r33 = virtualinvoke $r32.<android.content.Context: java.lang.CharSequence getText(int)>(17041225);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r33);

        goto label08;

     label07:
        $r27 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r28 = virtualinvoke $r27.<android.content.Context: java.lang.CharSequence getText(int)>(17041221);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r28);

     label08:
        $r30 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z6 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("31");

        if $z6 == 0 goto label13;

        $r31 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r31.<com.android.internal.telephony.imsphone.ImsPhone: void saveClirSetting(int)>(1);

        goto label13;

     label09:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

        if $z1 == 0 goto label10;

        $r20 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r20;

        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r22 = virtualinvoke $r21.<android.content.Context: java.lang.CharSequence getText(int)>(17041220);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r22);

        $r24 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z4 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("31");

        if $z4 == 0 goto label13;

        $r25 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r25.<com.android.internal.telephony.imsphone.ImsPhone: void saveClirSetting(int)>(2);

        goto label13;

     label10:
        $z2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isRegister()>();

        if $z2 == 0 goto label11;

        $r16 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r16;

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r18 = virtualinvoke $r17.<android.content.Context: java.lang.CharSequence getText(int)>(17041225);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r18);

        goto label13;

     label11:
        $z3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isErasure()>();

        if $z3 == 0 goto label12;

        $r12 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r12;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.CharSequence getText(int)>(17041223);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r14);

        goto label13;

     label12:
        $r6 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r6;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r8);

     label13:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = $r2;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSetComplete: mmi=");

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r59);

        $r60 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r60.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

        return;
    }

    private void onSuppSvcQueryComplete(android.os.AsyncResult)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        android.telephony.ims.ImsSsInfo r2;
        java.lang.StringBuilder $r3, $r25, $r51;
        java.lang.CharSequence $r4, $r12, $r18, $r23, $r30, $r33, $r37, $r41, $r45, $r47;
        com.android.internal.telephony.MmiCode$State $r6, $r14, $r20, $r35, $r39, $r43;
        java.lang.Throwable $r7, $r44;
        java.lang.Object $r8, $r9, $r21;
        boolean $z0, $z1;
        int[] $r10;
        int $i1, $i4, $i6, $i7, $i8;
        android.content.Context $r11, $r17, $r22, $r29, $r32, $r36, $r40;
        java.lang.String $r28, $r53;
        android.os.AsyncResult r49;
        com.android.internal.telephony.imsphone.ImsPhone $r54;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r49 := @parameter0: android.os.AsyncResult;

        $r3 = new java.lang.StringBuilder;

        $r4 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getScString()>();

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r6;

        $r7 = r49.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r7 == null goto label02;

        $r44 = r49.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z1 = $r44 instanceof com.android.ims.ImsException;

        if $z1 == 0 goto label01;

        $r47 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getImsErrorMessage(android.os.AsyncResult)>(r49);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r47);

        goto label10;

     label01:
        $r45 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getErrorMessage(android.os.AsyncResult)>(r49);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r45);

        goto label10;

     label02:
        $r8 = r49.<android.os.AsyncResult: java.lang.Object result>;

        $z0 = $r8 instanceof android.telephony.ims.ImsSsInfo;

        if $z0 == 0 goto label08;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "onSuppSvcQueryComplete: Received CLIP/COLP/COLR Response.");

        $r21 = r49.<android.os.AsyncResult: java.lang.Object result>;

        r2 = (android.telephony.ims.ImsSsInfo) $r21;

        if r2 == null goto label06;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSuppSvcQueryComplete: ImsSsInfo mStatus = ");

        $i4 = virtualinvoke r2.<android.telephony.ims.ImsSsInfo: int getStatus()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r28);

        $i6 = virtualinvoke r2.<android.telephony.ims.ImsSsInfo: int getProvisionStatus()>();

        if $i6 != 0 goto label03;

        $r40 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r41 = virtualinvoke $r40.<android.content.Context: java.lang.CharSequence getText(int)>(17041224);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r41);

        $r43 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r43;

        goto label07;

     label03:
        $i7 = virtualinvoke r2.<android.telephony.ims.ImsSsInfo: int getStatus()>();

        if $i7 != 0 goto label04;

        $r36 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r37 = virtualinvoke $r36.<android.content.Context: java.lang.CharSequence getText(int)>(17041220);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r37);

        $r39 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r39;

        goto label07;

     label04:
        $i8 = virtualinvoke r2.<android.telephony.ims.ImsSsInfo: int getStatus()>();

        if $i8 != 1 goto label05;

        $r32 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r33 = virtualinvoke $r32.<android.content.Context: java.lang.CharSequence getText(int)>(17041221);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r33);

        $r35 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r35;

        goto label07;

     label05:
        $r29 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r30 = virtualinvoke $r29.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r30);

        goto label07;

     label06:
        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r23 = virtualinvoke $r22.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r23);

     label07:
        goto label10;

     label08:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "onSuppSvcQueryComplete: Received Call Barring Response.");

        $r9 = r49.<android.os.AsyncResult: java.lang.Object result>;

        $r10 = (int[]) $r9;

        $i1 = $r10[0];

        if $i1 != 1 goto label09;

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r18 = virtualinvoke $r17.<android.content.Context: java.lang.CharSequence getText(int)>(17041221);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r18);

        $r20 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r20;

        goto label10;

     label09:
        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.CharSequence getText(int)>(17041220);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r12);

        $r14 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r14;

     label10:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = $r3;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSuppSvcQueryComplete mmi=");

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r53);

        $r54 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r54.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

        return;
    }

    private void processIcbMmiCodeForUpdate()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1;
        int i0;
        com.android.internal.telephony.imsphone.ImsPhone $r2;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r3;
        com.android.ims.ImsUtInterface $r4;
        android.os.Message $r5;
        com.android.ims.ImsException $r6;
        java.lang.String[] r7;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSia>;

        r7 = null;

        if r1 == null goto label1;

        r7 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\$");

     label1:
        i0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int callBarAction(java.lang.String)>(r1);

     label2:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r3 = $r2.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r5 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(0, r0);

        interfaceinvoke $r4.<com.android.ims.ImsUtInterface: void updateCallBarring(int,int,android.os.Message,java.lang.String[])>(10, i0, $r5, r7);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processIcbMmiCodeForUpdate:Could not get UT handle for updating ICB.");

     label5:
        return;

        catch com.android.ims.ImsException from label2 to label3 with label4;
    }

    static java.lang.String scToBarringFacility(java.lang.String)
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label9;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("33");

        if $z0 == 0 goto label1;

        return "AO";

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("331");

        if $z1 == 0 goto label2;

        return "OI";

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("332");

        if $z2 == 0 goto label3;

        return "OX";

     label3:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("35");

        if $z3 == 0 goto label4;

        return "AI";

     label4:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("351");

        if $z4 == 0 goto label5;

        return "IR";

     label5:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("330");

        if $z5 == 0 goto label6;

        return "AB";

     label6:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("333");

        if $z6 == 0 goto label7;

        return "AG";

     label7:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("353");

        if $z7 == 0 goto label8;

        return "AC";

     label8:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("invalid call barring sc");

        throw $r2;

     label9:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("invalid call barring sc");

        throw $r1;
    }

    private static int scToCallForwardReason(java.lang.String)
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label7;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("002");

        if $z0 == 0 goto label1;

        return 4;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("21");

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("67");

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("62");

        if $z3 == 0 goto label4;

        return 3;

     label4:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("61");

        if $z4 == 0 goto label5;

        return 2;

     label5:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("004");

        if $z5 == 0 goto label6;

        return 5;

     label6:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("invalid call forward sc");

        throw $r2;

     label7:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("invalid call forward sc");

        throw $r1;
    }

    private java.lang.CharSequence serviceClassToCFString(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0;
        android.content.Context $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        java.lang.CharSequence $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        i0 := @parameter0: int;

        if i0 == 1 goto label8;

        if i0 == 2 goto label7;

        if i0 == 4 goto label6;

        if i0 == 8 goto label5;

        if i0 == 16 goto label4;

        if i0 == 32 goto label3;

        if i0 == 64 goto label2;

        if i0 == 128 goto label1;

        return null;

     label1:
        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.CharSequence getText(int)>(17041216);

        return $r16;

     label2:
        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.CharSequence getText(int)>(17041217);

        return $r14;

     label3:
        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.CharSequence getText(int)>(17041213);

        return $r12;

     label4:
        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.CharSequence getText(int)>(17041214);

        return $r10;

     label5:
        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.CharSequence getText(int)>(17041218);

        return $r8;

     label6:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.CharSequence getText(int)>(17041215);

        return $r6;

     label7:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.CharSequence getText(int)>(17041212);

        return $r4;

     label8:
        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(17041219);

        return $r2;
    }

    private static int siToServiceClass(java.lang.String)
    {
        java.lang.String r0, $r6;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r5;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label18;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label01;

        goto label18;

     label01:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r0, 10);

        if i0 == 16 goto label17;

        if i0 == 99 goto label16;

        tableswitch(i0)
        {
            case 10: goto label15;
            case 11: goto label14;
            case 12: goto label13;
            case 13: goto label12;
            default: goto label02;
        };

     label02:
        tableswitch(i0)
        {
            case 19: goto label11;
            case 20: goto label10;
            case 21: goto label09;
            case 22: goto label08;
            default: goto label03;
        };

     label03:
        tableswitch(i0)
        {
            case 24: goto label07;
            case 25: goto label06;
            case 26: goto label05;
            default: goto label04;
        };

     label04:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported MMI service code ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label05:
        return 17;

     label06:
        return 32;

     label07:
        return 16;

     label08:
        return 80;

     label09:
        return 160;

     label10:
        return 48;

     label11:
        return 5;

     label12:
        return 4;

     label13:
        return 12;

     label14:
        return 1;

     label15:
        return 13;

     label16:
        return 64;

     label17:
        return 8;

     label18:
        return 0;
    }

    private static int siToTime(java.lang.String)
    {
        java.lang.String r0;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r0, 10);

        return $i1;

     label2:
        return 0;
    }

    public int callBarAction(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.RuntimeException $r2, $r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isRegister()>();

        if $z2 == 0 goto label4;

        $z4 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isEmptyOrNull(java.lang.CharSequence)>(r1);

        if $z4 != 0 goto label3;

        return 3;

     label3:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("invalid action");

        throw $r3;

     label4:
        $z3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isErasure()>();

        if $z3 == 0 goto label5;

        return 4;

     label5:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("invalid action");

        throw $r2;
    }

    public void cancel()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        com.android.internal.telephony.MmiCode$State $r1, $r2, $r3, $r4, $r5;
        boolean $z0;
        com.android.internal.telephony.imsphone.ImsPhone $r6, $r7;
        android.os.Message $r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState>;

        $r1 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        if $r2 == $r1 goto label4;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState>;

        $r3 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        if $r4 != $r3 goto label1;

        goto label4;

     label1:
        $r5 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State CANCELLED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r5;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsPendingUSSD>;

        if $z0 == 0 goto label2;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r8 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(5, r0);

        virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhone: void cancelUSSD(android.os.Message)>($r8);

        goto label3;

     label2:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

     label3:
        return;

     label4:
        return;
    }

    int getCLIRMode()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("31");

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        if $z1 == 0 goto label1;

        return 2;

     label1:
        $z2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.String getDialString()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString>;

        return $r1;
    }

    java.lang.String getDialingNumber()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mDialingNumber>;

        return $r1;
    }

    public java.lang.CharSequence getMessage()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage>;

        return $r1;
    }

    public com.android.internal.telephony.Phone getPhone()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        com.android.internal.telephony.imsphone.ImsPhone $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        return $r1;
    }

    public com.android.internal.telephony.MmiCode$State getState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        com.android.internal.telephony.MmiCode$State $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState>;

        return $r1;
    }

    public android.os.ResultReceiver getUssdCallbackReceiver()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        android.os.ResultReceiver $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.ResultReceiver mCallbackReceiver>;

        return $r1;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0, $i1, $i2;
        android.os.AsyncResult r1, $r4, $r6, $r8, $r15, $r22, $r24, r26;
        com.android.internal.telephony.uicc.IccRecords r2;
        java.lang.Object $r3, $r5, $r7, $r10, $r14, $r16, $r21, $r23;
        com.android.internal.telephony.imsphone.ImsPhone $r9, $r13, $r20;
        java.lang.Throwable $r11, $r17;
        java.lang.String $r12;
        com.android.internal.telephony.MmiCode$State $r18;
        java.lang.CharSequence $r19;
        android.os.Message r25;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r25 := @parameter0: android.os.Message;

        i0 = r25.<android.os.Message: int what>;

        if i0 == 10 goto label13;

        tableswitch(i0)
        {
            case 0: goto label12;
            case 1: goto label11;
            case 2: goto label10;
            case 3: goto label09;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label03;
            case 7: goto label02;
            default: goto label01;
        };

     label01:
        goto label14;

     label02:
        $r5 = r25.<android.os.Message: java.lang.Object obj>;

        $r6 = (android.os.AsyncResult) $r5;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onSuppSvcQueryComplete(android.os.AsyncResult)>($r6);

        goto label14;

     label03:
        $r7 = r25.<android.os.Message: java.lang.Object obj>;

        $r8 = (android.os.AsyncResult) $r7;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onQueryClirComplete(android.os.AsyncResult)>($r8);

        goto label14;

     label04:
        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

        goto label14;

     label05:
        $r10 = r25.<android.os.Message: java.lang.Object obj>;

        r1 = (android.os.AsyncResult) $r10;

        $r11 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r11 != null goto label08;

        $i1 = r25.<android.os.Message: int arg1>;

        if $i1 != 1 goto label08;

        $i2 = r25.<android.os.Message: int arg2>;

        if $i2 != 1 goto label06;

        z0 = 1;

        goto label07;

     label06:
        z0 = 0;

     label07:
        r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if r2 == null goto label08;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mDialingNumber>;

        virtualinvoke $r13.<com.android.internal.telephony.imsphone.ImsPhone: void setVoiceCallForwardingFlag(com.android.internal.telephony.uicc.IccRecords,int,boolean,java.lang.String)>(r2, 1, z0, $r12);

     label08:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onSetComplete(android.os.Message,android.os.AsyncResult)>(r25, r1);

        goto label14;

     label09:
        $r14 = r25.<android.os.Message: java.lang.Object obj>;

        $r15 = (android.os.AsyncResult) $r14;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onQueryComplete(android.os.AsyncResult)>($r15);

        goto label14;

     label10:
        $r16 = r25.<android.os.Message: java.lang.Object obj>;

        r26 = (android.os.AsyncResult) $r16;

        $r17 = r26.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r17 == null goto label14;

        $r18 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r18;

        $r19 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence getErrorMessage(android.os.AsyncResult)>(r26);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = $r19;

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r20.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

        goto label14;

     label11:
        $r21 = r25.<android.os.Message: java.lang.Object obj>;

        $r22 = (android.os.AsyncResult) $r21;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onQueryCfComplete(android.os.AsyncResult)>($r22);

        goto label14;

     label12:
        $r23 = r25.<android.os.Message: java.lang.Object obj>;

        $r24 = (android.os.AsyncResult) $r23;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onSetComplete(android.os.Message,android.os.AsyncResult)>(r25, $r24);

        goto label14;

     label13:
        $r3 = r25.<android.os.Message: java.lang.Object obj>;

        $r4 = (android.os.AsyncResult) $r3;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onIcbQueryComplete(android.os.AsyncResult)>($r4);

     label14:
        return;
    }

    boolean isActivate()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mAction>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isCancelable()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsPendingUSSD>;

        return $z0;
    }

    boolean isDeactivate()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mAction>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("#");

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isErasure()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mAction>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("##");

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isInterrogate()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mAction>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("*#");

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isMMI()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String $r1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isNetworkInitiatedUssd()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsNetworkInitiatedUSSD>;

        return $z0;
    }

    public boolean isPendingUSSD()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsPendingUSSD>;

        return $z0;
    }

    public boolean isPinPukCommand()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z0 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isPinPukCommand(java.lang.String)>($r1);

        return $z0;
    }

    boolean isRegister()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mAction>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("**");

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isShortCode()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1, $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString>;

        if $r2 != null goto label1;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mDialingNumber>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 > 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isSsInfo()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsSsInfo>;

        return $z0;
    }

    boolean isSupportedOverImsPhone()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r11, r12, r13, r14, r15, r16, r17, r18, r19, $r20;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isShortCode()>();

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z1 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isServiceCodeCallForwarding(java.lang.String)>($r2);

        if $z1 != 0 goto label11;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z2 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isServiceCodeCallBarring(java.lang.String)>($r3);

        if $z2 != 0 goto label11;

        r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if r12 == null goto label02;

        $z13 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("43");

        if $z13 != 0 goto label11;

     label02:
        r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if r13 == null goto label03;

        $z12 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("31");

        if $z12 != 0 goto label11;

     label03:
        r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if r14 == null goto label04;

        $z11 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("30");

        if $z11 != 0 goto label11;

     label04:
        r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if r15 == null goto label05;

        $z10 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("77");

        if $z10 != 0 goto label11;

     label05:
        r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if r16 == null goto label06;

        $z9 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("76");

        if $z9 != 0 goto label11;

     label06:
        r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if r17 == null goto label07;

        $z8 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("156");

        if $z8 != 0 goto label11;

     label07:
        r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if r18 == null goto label08;

        $z7 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("157");

        if $z7 == 0 goto label08;

        goto label11;

     label08:
        $z3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isPinPukCommand()>();

        if $z3 != 0 goto label10;

        r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if r19 == null goto label09;

        $z4 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("03");

        if $z4 != 0 goto label10;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z5 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("30");

        if $z5 != 0 goto label10;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z6 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("31");

        if $z6 == 0 goto label09;

        goto label10;

     label09:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString>;

        if $r4 == null goto label15;

        return 1;

     label10:
        return 0;

     label11:
        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSib>;

        i0 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int siToServiceClass(java.lang.String)>($r20);

     label12:
        if i0 == 0 goto label13;

        if i0 == 1 goto label13;

        if i0 == 80 goto label13;

        return 0;

     label13:
        return 1;

     label14:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid service class ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r11);

     label15:
        return 0;

        catch java.lang.RuntimeException from label11 to label12 with label14;
    }

    boolean isTemporaryModeCLIR()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("31");

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mDialingNumber>;

        if $r2 == null goto label2;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

        if $z2 == 0 goto label2;

     label1:
        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    public boolean isUssdRequest()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsUssdRequest>;

        return $z0;
    }

    void onUssdFinished(java.lang.String, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        boolean z0, $z1;
        com.android.internal.telephony.MmiCode$State $r2, $r3, $r9;
        java.lang.StringBuilder $r4, $r12;
        java.lang.String $r7, $r16, r17;
        com.android.internal.telephony.imsphone.ImsPhone $r8;
        android.content.Context $r10;
        java.lang.CharSequence $r11, $r14;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r17 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState>;

        $r2 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State PENDING>;

        if $r3 != $r2 goto label4;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r17);

        if $z1 == 0 goto label1;

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.CharSequence getText(int)>(17040637);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onUssdFinished: no message; using: ");

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r16);

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onUssdFinished: message: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r7);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = r17;

     label2:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsUssdRequest> = z0;

        if z0 != 0 goto label3;

        $r9 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State COMPLETE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r9;

     label3:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

     label4:
        return;
    }

    void onUssdFinishedError()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        com.android.internal.telephony.MmiCode$State $r2, $r3, $r4;
        android.content.Context $r5;
        java.lang.CharSequence $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r10;
        com.android.internal.telephony.imsphone.ImsPhone $r11;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState>;

        $r2 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State PENDING>;

        if $r3 != $r2 goto label1;

        $r4 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r4;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onUssdFinishedError: mmi=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r10);

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

     label1:
        return;
    }

    void parseSsData(android.telephony.ims.ImsSsData)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i10, $i12, $i14, $i16, $i17;
        java.lang.String $r1, $r2, $r5, $r8, $r12, $r34, $r47;
        java.lang.StringBuilder $r3, $r31, $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        com.android.internal.telephony.imsphone.ImsPhone $r15, $r23;
        android.os.AsyncResult $r16, $r18, $r20, $r22, $r27, $r42, $r49;
        int[] $r17, $r21;
        java.util.List $r19, $r28, r40, $r43, $r50;
        com.android.internal.telephony.CallForwardInfo[] $r24;
        android.telephony.ims.ImsCallForwardInfo[] $r25, r41;
        java.lang.Object[] $r26;
        java.lang.Object $r29, $r44;
        android.telephony.ims.ImsSsInfo $r30;
        com.android.ims.ImsException $r35, r37;
        android.telephony.ims.ImsSsData r36;
        com.android.internal.telephony.uicc.IccRecords $r48;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r36 := @parameter0: android.telephony.ims.ImsSsData;

        $i1 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int getResult()>();

        if $i1 == 0 goto label01;

        $r35 = new com.android.ims.ImsException;

        $i16 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int getResult()>();

        specialinvoke $r35.<com.android.ims.ImsException: void <init>(java.lang.String,int)>(null, $i16);

        r37 = $r35;

        goto label02;

     label01:
        r37 = null;

     label02:
        $i2 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int getServiceType()>();

        $r1 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String getScStringFromScType(int)>($i2);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc> = $r1;

        $i3 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int getRequestType()>();

        $r2 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String getActionStringFromReqType(int)>($i3);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mAction> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parseSsData msc = ");

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", action = ");

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mAction>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ex = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r37);

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r12);

        i0 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int getRequestType()>();

        z9 = 0;

        if i0 == 0 goto label11;

        if i0 == 1 goto label11;

        if i0 == 2 goto label03;

        if i0 == 3 goto label11;

        if i0 == 4 goto label11;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invaid requestType in SSData : ");

        $i14 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int getRequestType()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r34);

        goto label16;

     label03:
        $z2 = virtualinvoke r36.<android.telephony.ims.ImsSsData: boolean isTypeClir()>();

        if $z2 == 0 goto label04;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "CLIR INTERROGATION");

        $r27 = new android.os.AsyncResult;

        $r28 = virtualinvoke r36.<android.telephony.ims.ImsSsData: java.util.List getSuppServiceInfo()>();

        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(0);

        $r30 = (android.telephony.ims.ImsSsInfo) $r29;

        specialinvoke $r27.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r30, r37);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onQueryClirComplete(android.os.AsyncResult)>($r27);

        goto label16;

     label04:
        $z3 = virtualinvoke r36.<android.telephony.ims.ImsSsData: boolean isTypeCF()>();

        if $z3 == 0 goto label06;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "CALL FORWARD INTERROGATION");

        r40 = virtualinvoke r36.<android.telephony.ims.ImsSsData: java.util.List getCallForwardInfo()>();

        r41 = null;

        if r40 == null goto label05;

        $i12 = interfaceinvoke r40.<java.util.List: int size()>();

        $r25 = newarray (android.telephony.ims.ImsCallForwardInfo)[$i12];

        $r26 = interfaceinvoke r40.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r25);

        r41 = (android.telephony.ims.ImsCallForwardInfo[]) $r26;

     label05:
        $r22 = new android.os.AsyncResult;

        $r23 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r24 = virtualinvoke $r23.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.CallForwardInfo[] handleCfQueryResult(android.telephony.ims.ImsCallForwardInfo[])>(r41);

        specialinvoke $r22.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r24, r37);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onQueryCfComplete(android.os.AsyncResult)>($r22);

        goto label16;

     label06:
        $z4 = virtualinvoke r36.<android.telephony.ims.ImsSsData: boolean isTypeBarring()>();

        if $z4 == 0 goto label07;

        $r20 = new android.os.AsyncResult;

        $r21 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int[] getSuppServiceInfoCompat()>();

        specialinvoke $r20.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r21, r37);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onSuppSvcQueryComplete(android.os.AsyncResult)>($r20);

        goto label16;

     label07:
        $z5 = virtualinvoke r36.<android.telephony.ims.ImsSsData: boolean isTypeColr()>();

        if $z5 != 0 goto label10;

        $z6 = virtualinvoke r36.<android.telephony.ims.ImsSsData: boolean isTypeClip()>();

        if $z6 != 0 goto label10;

        $z7 = virtualinvoke r36.<android.telephony.ims.ImsSsData: boolean isTypeColp()>();

        if $z7 == 0 goto label08;

        goto label10;

     label08:
        $z8 = virtualinvoke r36.<android.telephony.ims.ImsSsData: boolean isTypeIcb()>();

        if $z8 == 0 goto label09;

        $r18 = new android.os.AsyncResult;

        $r19 = virtualinvoke r36.<android.telephony.ims.ImsSsData: java.util.List getSuppServiceInfo()>();

        specialinvoke $r18.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r19, r37);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onIcbQueryComplete(android.os.AsyncResult)>($r18);

        goto label16;

     label09:
        $r16 = new android.os.AsyncResult;

        $r17 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int[] getSuppServiceInfoCompat()>();

        specialinvoke $r16.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r17, r37);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onQueryComplete(android.os.AsyncResult)>($r16);

        goto label16;

     label10:
        $r42 = new android.os.AsyncResult;

        $r43 = virtualinvoke r36.<android.telephony.ims.ImsSsData: java.util.List getSuppServiceInfo()>();

        $r44 = interfaceinvoke $r43.<java.util.List: java.lang.Object get(int)>(0);

        specialinvoke $r42.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r44, r37);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onSuppSvcQueryComplete(android.os.AsyncResult)>($r42);

        goto label16;

     label11:
        $i17 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int getResult()>();

        if $i17 != 0 goto label15;

        $z0 = virtualinvoke r36.<android.telephony.ims.ImsSsData: boolean isTypeUnConditional()>();

        if $z0 == 0 goto label15;

        $i5 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int getRequestType()>();

        if $i5 == 0 goto label12;

        $i10 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int getRequestType()>();

        if $i10 != 3 goto label13;

     label12:
        $i6 = virtualinvoke r36.<android.telephony.ims.ImsSsData: int getServiceClass()>();

        $z1 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isServiceClassVoiceVideoOrNone(int)>($i6);

        if $z1 == 0 goto label13;

        z9 = 1;

        goto label13;

     label13:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setCallForwardingFlag cffEnabled: ");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z9);

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r47);

        $r48 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r48 == null goto label14;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "setVoiceCallForwardingFlag done from SS Info.");

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r15.<com.android.internal.telephony.imsphone.ImsPhone: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>(1, z9, null);

        goto label15;

     label14:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "setCallForwardingFlag aborted. sim records is null.");

     label15:
        $r49 = new android.os.AsyncResult;

        $r50 = virtualinvoke r36.<android.telephony.ims.ImsSsData: java.util.List getCallForwardInfo()>();

        specialinvoke $r49.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r50, r37);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onSetComplete(android.os.Message,android.os.AsyncResult)>(null, $r49);

     label16:
        return;
    }

    public void processCode() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        int i0, i1, i2, $i7, i28, i30;
        java.lang.String $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r19, $r20, $r23, $r29, $r30, $r33, $r35, $r36, $r39, $r40, $r41, $r42, $r47, $r52, $r57, $r70, $r79, $r88, $r105, $r106, $r111, $r112, $r113, $r131, r137, r141, r142;
        android.content.Context $r16, $r126;
        android.content.res.Resources $r17;
        com.android.internal.telephony.imsphone.ImsPhone $r24, $r43, $r45, $r48, $r53, $r58, $r62, $r66, $r71, $r75, $r80, $r84, $r89, $r93, $r95, $r99, $r101, $r107, $r109, $r114, $r132, $r138, $r159;
        com.android.internal.telephony.Phone $r25, $r94, $r100;
        com.android.internal.telephony.ServiceStateTracker $r26;
        android.telephony.ServiceState $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43, z44;
        android.os.Message $r44, $r46, $r51, $r56, $r61, $r65, $r69, $r74, $r78, $r83, $r87, $r92, $r98, $r104, $r108, $r110, $r115, $r139, $r162;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r49, $r54, $r59, $r63, $r67, $r72, $r76, $r81, $r85, $r90, $r96, $r102, $r160;
        com.android.ims.ImsUtInterface $r50, $r55, $r60, $r64, $r68, $r73, $r77, $r82, $r86, $r91, $r97, $r103, $r161;
        com.android.ims.ImsException $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r133, $r134, $r135, $r136;
        java.lang.RuntimeException $r124, r140, r143, r147, r149, r152, r157, r164, r170;
        com.android.internal.telephony.MmiCode$State $r125;
        java.lang.CharSequence $r127;
        java.lang.StringBuilder $r128, r165, r166, r168, r171;
        byte b25, b26, b27, b29;
        com.android.internal.telephony.CallStateException r167, r169, r172;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

     label001:
        z30 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isShortCode()>();

     label002:
        if z30 != 0 goto label149;

     label003:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        z31 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isServiceCodeCallForwarding(java.lang.String)>($r6);

     label004:
        b25 = 1;

        if z31 == 0 goto label028;

     label005:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: is CF");

        r137 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSia>;

        $r111 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        i0 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int scToCallForwardReason(java.lang.String)>($r111);

        $r112 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSib>;

        i1 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int siToServiceClass(java.lang.String)>($r112);

        $r113 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSic>;

        i2 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int siToTime(java.lang.String)>($r113);

        $z24 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isInterrogate()>();

        if $z24 == 0 goto label007;

        $r114 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r115 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(1, r0);

        virtualinvoke $r114.<com.android.internal.telephony.imsphone.ImsPhone: void getCallForwardingOption(int,int,android.os.Message)>(i0, i1, $r115);

     label006:
        goto label026;

     label007:
        $z25 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        if $z25 == 0 goto label014;

        $z29 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isEmptyOrNull(java.lang.CharSequence)>(r137);

        if $z29 == 0 goto label011;

     label008:
        b26 = 1;

     label009:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsCallFwdReg> = 0;

     label010:
        goto label020;

     label011:
        b26 = 3;

     label012:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsCallFwdReg> = 1;

     label013:
        goto label020;

     label014:
        $z26 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

        if $z26 == 0 goto label016;

     label015:
        b26 = 0;

        goto label020;

     label016:
        $z27 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isRegister()>();

        if $z27 == 0 goto label018;

     label017:
        b26 = 3;

        goto label020;

     label018:
        $z28 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isErasure()>();

        if $z28 == 0 goto label027;

     label019:
        b26 = 4;

     label020:
        if i0 == 0 goto label022;

        if i0 != 4 goto label021;

        goto label022;

     label021:
        b27 = 0;

        goto label023;

     label022:
        b27 = 1;

     label023:
        if b26 == 1 goto label025;

        if b26 != 3 goto label024;

        goto label025;

     label024:
        b25 = 0;

        goto label025;

     label025:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: is CF setCallForward");

        $r138 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r139 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(4, b27, b25, r0);

        virtualinvoke $r138.<com.android.internal.telephony.imsphone.ImsPhone: void setCallForwardingOption(int,int,java.lang.String,int,int,android.os.Message)>(b26, i0, r137, i1, i2, $r139);

     label026:
        goto label145;

     label027:
        r140 = new java.lang.RuntimeException;

        specialinvoke r140.<java.lang.RuntimeException: void <init>(java.lang.String)>("invalid action");

        throw r140;

     label028:
        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        z32 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isServiceCodeCallBarring(java.lang.String)>($r7);

     label029:
        if z32 == 0 goto label037;

     label030:
        r141 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSia>;

        $r105 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        r142 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String scToBarringFacility(java.lang.String)>($r105);

        $r106 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSib>;

        i28 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int siToServiceClass(java.lang.String)>($r106);

        $z20 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isInterrogate()>();

        if $z20 == 0 goto label032;

        $r109 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r110 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(7, r0);

        virtualinvoke $r109.<com.android.internal.telephony.imsphone.ImsPhone: void getCallBarring(java.lang.String,android.os.Message,int)>(r142, $r110, i28);

     label031:
        goto label036;

     label032:
        $z21 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        if $z21 != 0 goto label035;

        $z23 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

        if $z23 == 0 goto label034;

     label033:
        goto label035;

     label034:
        r143 = new java.lang.RuntimeException;

        specialinvoke r143.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid or Unsupported MMI Code");

        throw r143;

     label035:
        $r107 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $z22 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        $r108 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(0, r0);

        virtualinvoke $r107.<com.android.internal.telephony.imsphone.ImsPhone: void setCallBarring(java.lang.String,boolean,java.lang.String,android.os.Message,int)>(r142, $z22, r141, $r108, i28);

     label036:
        goto label145;

     label037:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if $r8 == null goto label061;

        $r88 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z18 = virtualinvoke $r88.<java.lang.String: boolean equals(java.lang.Object)>("31");

        if $z18 == 0 goto label061;

        z33 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

     label038:
        if z33 == 0 goto label046;

     label039:
        $r99 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r100 = virtualinvoke $r99.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        z34 = virtualinvoke $r100.<com.android.internal.telephony.Phone: boolean isClirActivationAndDeactivationPrevented()>();

     label040:
        if z34 != 0 goto label046;

     label041:
        $r101 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r102 = $r101.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r103 = virtualinvoke $r102.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r104 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(0, r0);

        interfaceinvoke $r103.<com.android.ims.ImsUtInterface: void updateCLIR(int,android.os.Message)>(1, $r104);

     label042:
        goto label145;

     label043:
        $r135 := @caughtexception;

     label044:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for updateCLIR.");

     label045:
        goto label145;

     label046:
        $z19 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

        if $z19 == 0 goto label053;

        $r93 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r94 = virtualinvoke $r93.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        z35 = virtualinvoke $r94.<com.android.internal.telephony.Phone: boolean isClirActivationAndDeactivationPrevented()>();

     label047:
        if z35 != 0 goto label053;

     label048:
        $r95 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r96 = $r95.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r97 = virtualinvoke $r96.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r98 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(0, r0);

        interfaceinvoke $r97.<com.android.ims.ImsUtInterface: void updateCLIR(int,android.os.Message)>(2, $r98);

     label049:
        goto label145;

     label050:
        $r121 := @caughtexception;

     label051:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for updateCLIR.");

     label052:
        goto label145;

     label053:
        z36 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isInterrogate()>();

     label054:
        if z36 == 0 goto label060;

     label055:
        $r89 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r90 = $r89.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r91 = virtualinvoke $r90.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r92 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(6, r0);

        interfaceinvoke $r91.<com.android.ims.ImsUtInterface: void queryCLIR(android.os.Message)>($r92);

     label056:
        goto label145;

     label057:
        $r134 := @caughtexception;

     label058:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for queryCLIR.");

     label059:
        goto label145;

     label060:
        r147 = new java.lang.RuntimeException;

        specialinvoke r147.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid or Unsupported MMI Code");

        throw r147;

     label061:
        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if $r9 == null goto label076;

        $r79 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z14 = virtualinvoke $r79.<java.lang.String: boolean equals(java.lang.Object)>("30");

        if $z14 == 0 goto label076;

        z37 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isInterrogate()>();

     label062:
        if z37 == 0 goto label068;

     label063:
        $r84 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r85 = $r84.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r86 = virtualinvoke $r85.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r87 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(7, r0);

        interfaceinvoke $r86.<com.android.ims.ImsUtInterface: void queryCLIP(android.os.Message)>($r87);

     label064:
        goto label145;

     label065:
        $r120 := @caughtexception;

     label066:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for queryCLIP.");

     label067:
        goto label145;

     label068:
        $z15 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        if $z15 != 0 goto label071;

        $z17 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

        if $z17 == 0 goto label070;

     label069:
        goto label071;

     label070:
        r149 = new java.lang.RuntimeException;

        specialinvoke r149.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid or Unsupported MMI Code");

        throw r149;

     label071:
        $r80 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r81 = $r80.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r82 = virtualinvoke $r81.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $z16 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        $r83 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(0, r0);

        interfaceinvoke $r82.<com.android.ims.ImsUtInterface: void updateCLIP(boolean,android.os.Message)>($z16, $r83);

     label072:
        goto label145;

     label073:
        $r118 := @caughtexception;

     label074:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for updateCLIP.");

     label075:
        goto label145;

     label076:
        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if $r10 == null goto label091;

        $r70 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z10 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>("76");

        if $z10 == 0 goto label091;

        z38 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isInterrogate()>();

     label077:
        if z38 == 0 goto label083;

     label078:
        $r75 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r76 = $r75.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r77 = virtualinvoke $r76.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r78 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(7, r0);

        interfaceinvoke $r77.<com.android.ims.ImsUtInterface: void queryCOLP(android.os.Message)>($r78);

     label079:
        goto label145;

     label080:
        $r123 := @caughtexception;

     label081:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for queryCOLP.");

     label082:
        goto label145;

     label083:
        $z11 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        if $z11 != 0 goto label086;

        $z13 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

        if $z13 == 0 goto label085;

     label084:
        goto label086;

     label085:
        r152 = new java.lang.RuntimeException;

        specialinvoke r152.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid or Unsupported MMI Code");

        throw r152;

     label086:
        $r71 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r72 = $r71.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r73 = virtualinvoke $r72.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $z12 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        $r74 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(0, r0);

        interfaceinvoke $r73.<com.android.ims.ImsUtInterface: void updateCOLP(boolean,android.os.Message)>($z12, $r74);

     label087:
        goto label145;

     label088:
        $r122 := @caughtexception;

     label089:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for updateCOLP.");

     label090:
        goto label145;

     label091:
        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if $r11 == null goto label113;

        $r57 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z9 = virtualinvoke $r57.<java.lang.String: boolean equals(java.lang.Object)>("77");

        if $z9 == 0 goto label113;

        z39 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

     label092:
        if z39 == 0 goto label098;

     label093:
        $r66 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r67 = $r66.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r68 = virtualinvoke $r67.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r69 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(0, r0);

        interfaceinvoke $r68.<com.android.ims.ImsUtInterface: void updateCOLR(int,android.os.Message)>(1, $r69);

     label094:
        goto label145;

     label095:
        $r117 := @caughtexception;

     label096:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for updateCOLR.");

     label097:
        goto label145;

     label098:
        z40 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

     label099:
        if z40 == 0 goto label105;

     label100:
        $r62 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r63 = $r62.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r64 = virtualinvoke $r63.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r65 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(0, r0);

        interfaceinvoke $r64.<com.android.ims.ImsUtInterface: void updateCOLR(int,android.os.Message)>(0, $r65);

     label101:
        goto label145;

     label102:
        $r116 := @caughtexception;

     label103:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for updateCOLR.");

     label104:
        goto label145;

     label105:
        z41 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isInterrogate()>();

     label106:
        if z41 == 0 goto label112;

     label107:
        $r58 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r59 = $r58.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r60 = virtualinvoke $r59.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r61 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(7, r0);

        interfaceinvoke $r60.<com.android.ims.ImsUtInterface: void queryCOLR(android.os.Message)>($r61);

     label108:
        goto label145;

     label109:
        $r136 := @caughtexception;

     label110:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for queryCOLR.");

     label111:
        goto label145;

     label112:
        r157 = new java.lang.RuntimeException;

        specialinvoke r157.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid or Unsupported MMI Code");

        throw r157;

     label113:
        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if $r12 == null goto label122;

        $r52 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        z42 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>("156");

     label114:
        if z42 == 0 goto label122;

     label115:
        $z8 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isInterrogate()>();

        if $z8 == 0 goto label117;

        $r53 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r54 = $r53.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r55 = virtualinvoke $r54.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r56 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(10, r0);

        interfaceinvoke $r55.<com.android.ims.ImsUtInterface: void queryCallBarring(int,android.os.Message)>(10, $r56);

     label116:
        goto label118;

     label117:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void processIcbMmiCodeForUpdate()>();

     label118:
        goto label145;

     label119:
        $r119 := @caughtexception;

     label120:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for ICB.");

     label121:
        goto label145;

     label122:
        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if $r13 == null goto label135;

        $r47 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        z43 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>("157");

     label123:
        if z43 == 0 goto label135;

        b29 = 0;

     label124:
        $z5 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isInterrogate()>();

        if $z5 == 0 goto label126;

        $r48 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r49 = $r48.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r50 = virtualinvoke $r49.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r51 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(10, r0);

        interfaceinvoke $r50.<com.android.ims.ImsUtInterface: void queryCallBarring(int,android.os.Message)>(6, $r51);

     label125:
        goto label131;

     label126:
        $z6 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        if $z6 == 0 goto label128;

     label127:
        b29 = 1;

        goto label130;

     label128:
        $z7 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

        if $z7 == 0 goto label130;

     label129:
        b29 = 0;

     label130:
        $r159 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r160 = $r159.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mCT>;

        $r161 = virtualinvoke $r160.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsUtInterface getUtInterface()>();

        $r162 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(0, r0);

        interfaceinvoke $r161.<com.android.ims.ImsUtInterface: void updateCallBarring(int,int,android.os.Message,java.lang.String[])>(6, b29, $r162, null);

     label131:
        goto label134;

     label132:
        $r133 := @caughtexception;

     label133:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: Could not get UT handle for ICBa.");

     label134:
        goto label145;

     label135:
        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if $r14 == null goto label142;

        $r41 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        $z0 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>("43");

        if $z0 == 0 goto label142;

        $r42 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSia>;

        i30 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneMmiCode: int siToServiceClass(java.lang.String)>($r42);

        $z1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        if $z1 != 0 goto label140;

        $z3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isDeactivate()>();

        if $z3 == 0 goto label137;

     label136:
        goto label140;

     label137:
        $z4 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isInterrogate()>();

        if $z4 == 0 goto label139;

        $r45 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r46 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(3, r0);

        virtualinvoke $r45.<com.android.internal.telephony.imsphone.ImsPhone: void getCallWaiting(android.os.Message)>($r46);

     label138:
        goto label141;

     label139:
        r164 = new java.lang.RuntimeException;

        specialinvoke r164.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid or Unsupported MMI Code");

        throw r164;

     label140:
        $r43 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $z2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean isActivate()>();

        $r44 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(0, r0);

        virtualinvoke $r43.<com.android.internal.telephony.imsphone.ImsPhone: void setCallWaiting(boolean,int,android.os.Message)>($z2, i30, $r44);

     label141:
        goto label145;

     label142:
        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString>;

        if $r15 == null goto label148;

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r17 = virtualinvoke $r16.<android.content.Context: android.content.res.Resources getResources()>();

        z44 = virtualinvoke $r17.<android.content.res.Resources: boolean getBoolean(int)>(17891359);

     label143:
        if z44 == 0 goto label147;

     label144:
        $r24 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r25 = virtualinvoke $r24.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Phone getDefaultPhone()>();

        $r26 = virtualinvoke $r25.<com.android.internal.telephony.Phone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        $r27 = $r26.<com.android.internal.telephony.ServiceStateTracker: android.telephony.ServiceState mSS>;

        $i7 = virtualinvoke $r27.<android.telephony.ServiceState: int getState()>();

        if $i7 == 0 goto label146;

        r165 = new java.lang.StringBuilder;

        specialinvoke r165.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processCode: CS is out of service, sending ussd string \'");

        $r35 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString>;

        $r36 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsPhoneMmiCode", $r35);

        virtualinvoke r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        virtualinvoke r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' over IMS pipe.");

        $r39 = virtualinvoke r165.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r39);

        $r40 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString>;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void sendUssd(java.lang.String)>($r40);

     label145:
        goto label151;

     label146:
        r166 = new java.lang.StringBuilder;

        specialinvoke r166.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processCode: Sending ussd string \'");

        $r29 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString>;

        $r30 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsPhoneMmiCode", $r29);

        virtualinvoke r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' over CS pipe (allowed over ims).");

        $r33 = virtualinvoke r166.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r33);

        r167 = new com.android.internal.telephony.CallStateException;

        specialinvoke r167.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cs_fallback");

        throw r167;

     label147:
        r168 = new java.lang.StringBuilder;

        specialinvoke r168.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processCode: Sending ussd string \'");

        $r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString>;

        $r20 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsPhoneMmiCode", $r19);

        virtualinvoke r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' over CS pipe.");

        $r23 = virtualinvoke r168.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r23);

        r169 = new com.android.internal.telephony.CallStateException;

        specialinvoke r169.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cs_fallback");

        throw r169;

     label148:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: invalid or unsupported MMI");

        r170 = new java.lang.RuntimeException;

        specialinvoke r170.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid or Unsupported MMI Code");

        throw r170;

     label149:
        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", "processCode: isShortCode");

        r171 = new java.lang.StringBuilder;

        specialinvoke r171.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processCode: Sending short code \'");

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mDialingNumber>;

        virtualinvoke r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' over CS pipe.");

        $r5 = virtualinvoke r171.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r5);

        r172 = new com.android.internal.telephony.CallStateException;

        specialinvoke r172.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cs_fallback");

        throw r172;

     label150:
        $r124 := @caughtexception;

        $r125 = <com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State FAILED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State mState> = $r125;

        $r126 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.content.Context mContext>;

        $r127 = virtualinvoke $r126.<android.content.Context: java.lang.CharSequence getText(int)>(17040638);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence mMessage> = $r127;

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processCode: RuntimeException = ");

        virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r124);

        $r131 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneMmiCode", $r131);

        $r132 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r132.<com.android.internal.telephony.imsphone.ImsPhone: void onMMIDone(com.android.internal.telephony.imsphone.ImsPhoneMmiCode)>(r0);

     label151:
        return;

        catch java.lang.RuntimeException from label001 to label002 with label150;
        catch java.lang.RuntimeException from label003 to label004 with label150;
        catch java.lang.RuntimeException from label005 to label006 with label150;
        catch java.lang.RuntimeException from label007 to label008 with label150;
        catch java.lang.RuntimeException from label009 to label010 with label150;
        catch java.lang.RuntimeException from label012 to label013 with label150;
        catch java.lang.RuntimeException from label014 to label015 with label150;
        catch java.lang.RuntimeException from label016 to label017 with label150;
        catch java.lang.RuntimeException from label018 to label019 with label150;
        catch java.lang.RuntimeException from label025 to label026 with label150;
        catch java.lang.RuntimeException from label027 to label028 with label150;
        catch java.lang.RuntimeException from label028 to label029 with label150;
        catch java.lang.RuntimeException from label030 to label031 with label150;
        catch java.lang.RuntimeException from label032 to label033 with label150;
        catch java.lang.RuntimeException from label034 to label035 with label150;
        catch java.lang.RuntimeException from label035 to label036 with label150;
        catch java.lang.RuntimeException from label037 to label038 with label150;
        catch java.lang.RuntimeException from label039 to label040 with label150;
        catch com.android.ims.ImsException from label041 to label042 with label043;
        catch java.lang.RuntimeException from label041 to label042 with label150;
        catch java.lang.RuntimeException from label044 to label045 with label150;
        catch java.lang.RuntimeException from label046 to label047 with label150;
        catch com.android.ims.ImsException from label048 to label049 with label050;
        catch java.lang.RuntimeException from label048 to label049 with label150;
        catch java.lang.RuntimeException from label051 to label052 with label150;
        catch java.lang.RuntimeException from label053 to label054 with label150;
        catch com.android.ims.ImsException from label055 to label056 with label057;
        catch java.lang.RuntimeException from label055 to label056 with label150;
        catch java.lang.RuntimeException from label058 to label059 with label150;
        catch java.lang.RuntimeException from label060 to label061 with label150;
        catch java.lang.RuntimeException from label061 to label062 with label150;
        catch com.android.ims.ImsException from label063 to label064 with label065;
        catch java.lang.RuntimeException from label063 to label064 with label150;
        catch java.lang.RuntimeException from label066 to label067 with label150;
        catch java.lang.RuntimeException from label068 to label069 with label150;
        catch java.lang.RuntimeException from label070 to label071 with label150;
        catch com.android.ims.ImsException from label071 to label072 with label073;
        catch java.lang.RuntimeException from label071 to label072 with label150;
        catch java.lang.RuntimeException from label074 to label075 with label150;
        catch java.lang.RuntimeException from label076 to label077 with label150;
        catch com.android.ims.ImsException from label078 to label079 with label080;
        catch java.lang.RuntimeException from label078 to label079 with label150;
        catch java.lang.RuntimeException from label081 to label082 with label150;
        catch java.lang.RuntimeException from label083 to label084 with label150;
        catch java.lang.RuntimeException from label085 to label086 with label150;
        catch com.android.ims.ImsException from label086 to label087 with label088;
        catch java.lang.RuntimeException from label086 to label087 with label150;
        catch java.lang.RuntimeException from label089 to label090 with label150;
        catch java.lang.RuntimeException from label091 to label092 with label150;
        catch com.android.ims.ImsException from label093 to label094 with label095;
        catch java.lang.RuntimeException from label093 to label094 with label150;
        catch java.lang.RuntimeException from label096 to label097 with label150;
        catch java.lang.RuntimeException from label098 to label099 with label150;
        catch com.android.ims.ImsException from label100 to label101 with label102;
        catch java.lang.RuntimeException from label100 to label101 with label150;
        catch java.lang.RuntimeException from label103 to label104 with label150;
        catch java.lang.RuntimeException from label105 to label106 with label150;
        catch com.android.ims.ImsException from label107 to label108 with label109;
        catch java.lang.RuntimeException from label107 to label108 with label150;
        catch java.lang.RuntimeException from label110 to label111 with label150;
        catch java.lang.RuntimeException from label112 to label113 with label150;
        catch java.lang.RuntimeException from label113 to label114 with label150;
        catch com.android.ims.ImsException from label115 to label116 with label119;
        catch java.lang.RuntimeException from label115 to label116 with label150;
        catch com.android.ims.ImsException from label117 to label118 with label119;
        catch java.lang.RuntimeException from label117 to label118 with label150;
        catch java.lang.RuntimeException from label120 to label121 with label150;
        catch java.lang.RuntimeException from label122 to label123 with label150;
        catch com.android.ims.ImsException from label124 to label125 with label132;
        catch java.lang.RuntimeException from label124 to label125 with label150;
        catch com.android.ims.ImsException from label126 to label127 with label132;
        catch java.lang.RuntimeException from label126 to label127 with label150;
        catch com.android.ims.ImsException from label128 to label129 with label132;
        catch java.lang.RuntimeException from label128 to label129 with label150;
        catch com.android.ims.ImsException from label130 to label131 with label132;
        catch java.lang.RuntimeException from label130 to label131 with label150;
        catch java.lang.RuntimeException from label133 to label134 with label150;
        catch java.lang.RuntimeException from label135 to label136 with label150;
        catch java.lang.RuntimeException from label137 to label138 with label150;
        catch java.lang.RuntimeException from label139 to label140 with label150;
        catch java.lang.RuntimeException from label140 to label141 with label150;
        catch java.lang.RuntimeException from label142 to label143 with label150;
        catch java.lang.RuntimeException from label144 to label145 with label150;
        catch java.lang.RuntimeException from label146 to label147 with label150;
        catch java.lang.RuntimeException from label147 to label148 with label150;
        catch java.lang.RuntimeException from label148 to label149 with label150;
        catch java.lang.RuntimeException from label149 to label150 with label150;
    }

    public void processImsSsData(android.os.AsyncResult) throws com.android.ims.ImsException
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.Object $r1;
        android.telephony.ims.ImsSsData $r2;
        java.lang.RuntimeException $r3;
        com.android.ims.ImsException $r4;
        android.os.AsyncResult r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r5 := @parameter0: android.os.AsyncResult;

     label1:
        $r1 = r5.<android.os.AsyncResult: java.lang.Object result>;

        $r2 = (android.telephony.ims.ImsSsData) $r1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void parseSsData(android.telephony.ims.ImsSsData)>($r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new com.android.ims.ImsException;

        specialinvoke $r4.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Exception in parsing SS Data", 0);

        throw $r4;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    void sendUssd(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.String r1;
        com.android.internal.telephony.imsphone.ImsPhone $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsPendingUSSD> = 1;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.Message obtainMessage(int,java.lang.Object)>(2, r0);

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: void sendUSSD(java.lang.String,android.os.Message)>(r1, $r3);

        return;
    }

    public void setIsSsInfo(boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: boolean mIsSsInfo> = z0;

        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.imsphone.ImsPhoneMmiCode r0;
        java.lang.StringBuilder $r2, $r3, $r21, $r28, $r35, $r42, $r48, $r54, $r60, $r66;
        com.android.internal.telephony.MmiCode$State $r5;
        java.lang.String $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r19, $r23, $r24, $r26, $r30, $r31, $r33, $r37, $r38, $r40, $r44, $r46, $r50, $r52, $r56, $r58, $r62, $r64, $r68, $r70;
        android.os.ResultReceiver $r17;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneMmiCode;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("ImsPhoneMmiCode {");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("State=");

        $r5 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: com.android.internal.telephony.MmiCode$State getState()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mAction>;

        if $r9 == null goto label1;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" action=");

        $r68 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mAction>;

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

     label1:
        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        if $r10 == null goto label2;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sc=");

        $r62 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSc>;

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

     label2:
        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSia>;

        if $r11 == null goto label3;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sia=");

        $r56 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSia>;

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

     label3:
        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSib>;

        if $r12 == null goto label4;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sib=");

        $r50 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSib>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

     label4:
        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSic>;

        if $r13 == null goto label5;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sic=");

        $r44 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mSic>;

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

     label5:
        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString>;

        if $r14 == null goto label6;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" poundString=");

        $r37 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPoundString>;

        $r38 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsPhoneMmiCode", $r37);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

     label6:
        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mDialingNumber>;

        if $r15 == null goto label7;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dialingNumber=");

        $r30 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mDialingNumber>;

        $r31 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsPhoneMmiCode", $r30);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

     label7:
        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPwd>;

        if $r16 == null goto label8;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pwd=");

        $r23 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.String mPwd>;

        $r24 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsPhoneMmiCode", $r23);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

     label8:
        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: android.os.ResultReceiver mCallbackReceiver>;

        if $r17 == null goto label9;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasReceiver");

     label9:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r19 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;
    }
}
