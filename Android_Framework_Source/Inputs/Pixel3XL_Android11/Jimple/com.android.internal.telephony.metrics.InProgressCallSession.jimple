public class com.android.internal.telephony.metrics.InProgressCallSession extends java.lang.Object
{
    private static final int MAX_EVENTS;
    public final java.util.Deque events;
    private boolean mEventsDropped;
    private long mLastElapsedTimeMs;
    private int mLastKnownPhoneState;
    public final int phoneId;
    public final long startElapsedTimeMs;
    public final int startSystemTimeMin;

    public void <init>(int)
    {
        com.android.internal.telephony.metrics.InProgressCallSession r0;
        int i0, $i3;
        long l1, $l2;
        java.util.ArrayDeque $r1;

        r0 := @this: com.android.internal.telephony.metrics.InProgressCallSession;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.metrics.InProgressCallSession: boolean mEventsDropped> = 0;

        r0.<com.android.internal.telephony.metrics.InProgressCallSession: int phoneId> = i0;

        $r1 = new java.util.ArrayDeque;

        specialinvoke $r1.<java.util.ArrayDeque: void <init>()>();

        r0.<com.android.internal.telephony.metrics.InProgressCallSession: java.util.Deque events> = $r1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i3 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: int roundSessionStart(long)>($l2);

        r0.<com.android.internal.telephony.metrics.InProgressCallSession: int startSystemTimeMin> = $i3;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.metrics.InProgressCallSession: long startElapsedTimeMs> = l1;

        r0.<com.android.internal.telephony.metrics.InProgressCallSession: long mLastElapsedTimeMs> = l1;

        return;
    }

    public void addEvent(long, com.android.internal.telephony.metrics.CallSessionEventBuilder)
    {
        com.android.internal.telephony.metrics.InProgressCallSession r0;
        long l0, $l2;
        java.util.Deque $r1, $r3, $r5;
        int $i1, $i3;
        com.android.internal.telephony.nano.TelephonyProto$TelephonyCallSession$Event $r4;
        java.lang.Throwable $r7;
        com.android.internal.telephony.metrics.CallSessionEventBuilder r8;

        r0 := @this: com.android.internal.telephony.metrics.InProgressCallSession;

        l0 := @parameter0: long;

        r8 := @parameter1: com.android.internal.telephony.metrics.CallSessionEventBuilder;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.internal.telephony.metrics.InProgressCallSession: java.util.Deque events>;

        $i1 = interfaceinvoke $r1.<java.util.Deque: int size()>();

        if $i1 < 300 goto label2;

        $r5 = r0.<com.android.internal.telephony.metrics.InProgressCallSession: java.util.Deque events>;

        interfaceinvoke $r5.<java.util.Deque: java.lang.Object removeFirst()>();

        r0.<com.android.internal.telephony.metrics.InProgressCallSession: boolean mEventsDropped> = 1;

     label2:
        $l2 = r0.<com.android.internal.telephony.metrics.InProgressCallSession: long mLastElapsedTimeMs>;

        $i3 = staticinvoke <com.android.internal.telephony.metrics.TelephonyMetrics: int toPrivacyFuzzedTimeInterval(long,long)>($l2, l0);

        virtualinvoke r8.<com.android.internal.telephony.metrics.CallSessionEventBuilder: com.android.internal.telephony.metrics.CallSessionEventBuilder setDelay(int)>($i3);

        $r3 = r0.<com.android.internal.telephony.metrics.InProgressCallSession: java.util.Deque events>;

        $r4 = virtualinvoke r8.<com.android.internal.telephony.metrics.CallSessionEventBuilder: com.android.internal.telephony.nano.TelephonyProto$TelephonyCallSession$Event build()>();

        interfaceinvoke $r3.<java.util.Deque: boolean add(java.lang.Object)>($r4);

        r0.<com.android.internal.telephony.metrics.InProgressCallSession: long mLastElapsedTimeMs> = l0;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void addEvent(com.android.internal.telephony.metrics.CallSessionEventBuilder)
    {
        com.android.internal.telephony.metrics.InProgressCallSession r0;
        com.android.internal.telephony.metrics.CallSessionEventBuilder r1;
        long $l0;

        r0 := @this: com.android.internal.telephony.metrics.InProgressCallSession;

        r1 := @parameter0: com.android.internal.telephony.metrics.CallSessionEventBuilder;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.telephony.metrics.InProgressCallSession: void addEvent(long,com.android.internal.telephony.metrics.CallSessionEventBuilder)>($l0, r1);

        return;
    }

    public boolean containsCsCalls()
    {
        com.android.internal.telephony.metrics.InProgressCallSession r0;
        java.util.Iterator r1;
        java.util.Deque $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.internal.telephony.nano.TelephonyProto$TelephonyCallSession$Event $r4;
        int $i0;

        r0 := @this: com.android.internal.telephony.metrics.InProgressCallSession;

        $r2 = r0.<com.android.internal.telephony.metrics.InProgressCallSession: java.util.Deque events>;

        r1 = interfaceinvoke $r2.<java.util.Deque: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.internal.telephony.nano.TelephonyProto$TelephonyCallSession$Event) $r3;

        $i0 = $r4.<com.android.internal.telephony.nano.TelephonyProto$TelephonyCallSession$Event: int type>;

        if $i0 != 10 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean isEventsDropped()
    {
        com.android.internal.telephony.metrics.InProgressCallSession r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.metrics.InProgressCallSession;

        $z0 = r0.<com.android.internal.telephony.metrics.InProgressCallSession: boolean mEventsDropped>;

        return $z0;
    }

    public boolean isPhoneIdle()
    {
        com.android.internal.telephony.metrics.InProgressCallSession r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.metrics.InProgressCallSession;

        i0 = r0.<com.android.internal.telephony.metrics.InProgressCallSession: int mLastKnownPhoneState>;

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void setLastKnownPhoneState(int)
    {
        com.android.internal.telephony.metrics.InProgressCallSession r0;
        int i0;

        r0 := @this: com.android.internal.telephony.metrics.InProgressCallSession;

        i0 := @parameter0: int;

        r0.<com.android.internal.telephony.metrics.InProgressCallSession: int mLastKnownPhoneState> = i0;

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.metrics.InProgressCallSession: int MAX_EVENTS> = 300;

        return;
    }
}
