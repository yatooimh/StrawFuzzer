public final class com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String WAKELOCK_TAG;

    private void <init>()
    {
        com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory r0;

        r0 := @this: com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.internal.telephony.nitz.NitzStateMachineImpl$NitzSignalInputFilterPredicate create(android.content.Context, com.android.internal.telephony.NitzStateMachine$DeviceState)
    {
        android.content.Context r0;
        com.android.internal.telephony.NitzStateMachine$DeviceState r1;
        com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$NitzSignalInputFilterPredicateImpl $r4;
        com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate[] $r5;
        com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate $r6, $r7, $r8, $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.internal.telephony.NitzStateMachine$DeviceState;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = new com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$NitzSignalInputFilterPredicateImpl;

        $r5 = newarray (com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate)[4];

        $r6 = staticinvoke <com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory: com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate createIgnoreNitzPropertyCheck(com.android.internal.telephony.NitzStateMachine$DeviceState)>(r1);

        $r5[0] = $r6;

        $r7 = staticinvoke <com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory: com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate createBogusElapsedRealtimeCheck(android.content.Context,com.android.internal.telephony.NitzStateMachine$DeviceState)>(r0, r1);

        $r5[1] = $r7;

        $r8 = staticinvoke <com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory: com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate createNoOldSignalCheck()>();

        $r5[2] = $r8;

        $r9 = staticinvoke <com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory: com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate createRateLimitCheck(com.android.internal.telephony.NitzStateMachine$DeviceState)>(r1);

        $r5[3] = $r9;

        specialinvoke $r4.<com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$NitzSignalInputFilterPredicateImpl: void <init>(com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate[])>($r5);

        return $r4;
    }

    public static com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate createBogusElapsedRealtimeCheck(android.content.Context, com.android.internal.telephony.NitzStateMachine$DeviceState)
    {
        com.android.internal.telephony.NitzStateMachine$DeviceState r0;
        java.lang.Object $r1;
        com.android.internal.telephony.nitz._$$Lambda$NitzSignalInputFilterPredicateFactory$eQwdSbGGPW5gOaen35FK3CmMXB0 $r2;
        android.os.PowerManager$WakeLock $r3;
        android.content.Context r4;
        android.os.PowerManager r5;

        r4 := @parameter0: android.content.Context;

        r0 := @parameter1: com.android.internal.telephony.NitzStateMachine$DeviceState;

        $r1 = virtualinvoke r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r5 = (android.os.PowerManager) $r1;

        $r2 = new com.android.internal.telephony.nitz._$$Lambda$NitzSignalInputFilterPredicateFactory$eQwdSbGGPW5gOaen35FK3CmMXB0;

        $r3 = virtualinvoke r5.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "NitzSignalInputFilterPredicateFactory");

        specialinvoke $r2.<com.android.internal.telephony.nitz._$$Lambda$NitzSignalInputFilterPredicateFactory$eQwdSbGGPW5gOaen35FK3CmMXB0: void <init>(android.os.PowerManager$WakeLock,com.android.internal.telephony.NitzStateMachine$DeviceState)>($r3, r0);

        return $r2;
    }

    public static com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate createIgnoreNitzPropertyCheck(com.android.internal.telephony.NitzStateMachine$DeviceState)
    {
        com.android.internal.telephony.NitzStateMachine$DeviceState r0;
        com.android.internal.telephony.nitz._$$Lambda$NitzSignalInputFilterPredicateFactory$SEM6gadWeK0Ac4tpEWR6g6T13do $r1;

        r0 := @parameter0: com.android.internal.telephony.NitzStateMachine$DeviceState;

        $r1 = new com.android.internal.telephony.nitz._$$Lambda$NitzSignalInputFilterPredicateFactory$SEM6gadWeK0Ac4tpEWR6g6T13do;

        specialinvoke $r1.<com.android.internal.telephony.nitz._$$Lambda$NitzSignalInputFilterPredicateFactory$SEM6gadWeK0Ac4tpEWR6g6T13do: void <init>(com.android.internal.telephony.NitzStateMachine$DeviceState)>(r0);

        return $r1;
    }

    public static com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate createNoOldSignalCheck()
    {
        com.android.internal.telephony.nitz.'-$$Lambda$NitzSignalInputFilterPredicateFactory$S23LuH4ZPqoezmTLAMDHEiryspA' $r0;
        com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate r1;

        $r0 = <com.android.internal.telephony.nitz._$$Lambda$NitzSignalInputFilterPredicateFactory$S23LuH4ZPqoezmTLAMDHEiryspA: com.android.internal.telephony.nitz.'-$$Lambda$NitzSignalInputFilterPredicateFactory$S23LuH4ZPqoezmTLAMDHEiryspA' INSTANCE>;

        r1 = (com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate) $r0;

        return r1;
    }

    public static com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$TrivalentPredicate createRateLimitCheck(com.android.internal.telephony.NitzStateMachine$DeviceState)
    {
        com.android.internal.telephony.NitzStateMachine$DeviceState r0;
        com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$1 $r1;

        r0 := @parameter0: com.android.internal.telephony.NitzStateMachine$DeviceState;

        $r1 = new com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$1;

        specialinvoke $r1.<com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory$1: void <init>(com.android.internal.telephony.NitzStateMachine$DeviceState)>(r0);

        return $r1;
    }

    static java.lang.Boolean lambda$createBogusElapsedRealtimeCheck$1(android.os.PowerManager$WakeLock, com.android.internal.telephony.NitzStateMachine$DeviceState, android.os.TimestampedValue, android.os.TimestampedValue)
    {
        android.os.PowerManager$WakeLock r0;
        android.os.TimestampedValue r1, r2;
        long l0, l4, l5;
        byte $b1, $b3;
        java.lang.String $r8;
        java.lang.Boolean $r9;
        java.lang.Throwable $r10;
        com.android.internal.telephony.NitzStateMachine$DeviceState r11;
        java.lang.StringBuilder r12;

        r0 := @parameter0: android.os.PowerManager$WakeLock;

        r11 := @parameter1: com.android.internal.telephony.NitzStateMachine$DeviceState;

        r1 := @parameter2: android.os.TimestampedValue;

        r2 := @parameter3: android.os.TimestampedValue;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

     label1:
        virtualinvoke r0.<android.os.PowerManager$WakeLock: void acquire()>();

        l0 = interfaceinvoke r11.<com.android.internal.telephony.NitzStateMachine$DeviceState: long elapsedRealtime()>();

        l4 = virtualinvoke r2.<android.os.TimestampedValue: long getReferenceTimeMillis()>();

     label2:
        l5 = l0 - l4;

        $b1 = l5 cmp 0L;

        if $b1 < 0 goto label4;

        $b3 = l5 cmp 2147483647L;

        if $b3 <= 0 goto label3;

        goto label4;

     label3:
        virtualinvoke r0.<android.os.PowerManager$WakeLock: void release()>();

        return null;

     label4:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mustProcessNitzSignal: Not processing NITZ signal because unexpected elapsedRealtime=");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nitzSignal=");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("NewNitzStateMachineImpl", $r8);

     label5:
        virtualinvoke r0.<android.os.PowerManager$WakeLock: void release()>();

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r9;

     label6:
        $r10 := @caughtexception;

        virtualinvoke r0.<android.os.PowerManager$WakeLock: void release()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    static java.lang.Boolean lambda$createIgnoreNitzPropertyCheck$0(com.android.internal.telephony.NitzStateMachine$DeviceState, android.os.TimestampedValue, android.os.TimestampedValue)
    {
        com.android.internal.telephony.NitzStateMachine$DeviceState r0;
        android.os.TimestampedValue r1, r2;
        boolean $z0;
        java.lang.Boolean $r3;

        r0 := @parameter0: com.android.internal.telephony.NitzStateMachine$DeviceState;

        r1 := @parameter1: android.os.TimestampedValue;

        r2 := @parameter2: android.os.TimestampedValue;

        $z0 = interfaceinvoke r0.<com.android.internal.telephony.NitzStateMachine$DeviceState: boolean getIgnoreNitz()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("NewNitzStateMachineImpl", "mustProcessNitzSignal: Not processing NITZ signal because gsm.ignore-nitz is set");

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r3;

     label1:
        return null;
    }

    static java.lang.Boolean lambda$createNoOldSignalCheck$2(android.os.TimestampedValue, android.os.TimestampedValue)
    {
        android.os.TimestampedValue r0, r1;
        java.lang.Boolean r2;

        r1 := @parameter0: android.os.TimestampedValue;

        r0 := @parameter1: android.os.TimestampedValue;

        if r1 != null goto label1;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory: java.lang.String WAKELOCK_TAG> = "NitzSignalInputFilterPredicateFactory";

        <com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory: java.lang.String LOG_TAG> = "NewNitzStateMachineImpl";

        <com.android.internal.telephony.nitz.NitzSignalInputFilterPredicateFactory: boolean DBG> = 1;

        return;
    }
}
