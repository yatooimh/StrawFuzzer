public class com.android.internal.telephony.nitz.TimeZoneSuggesterImpl extends java.lang.Object implements com.android.internal.telephony.nitz.NitzStateMachineImpl$TimeZoneSuggester
{
    private static final java.lang.String LOG_TAG;
    private final com.android.internal.telephony.NitzStateMachine$DeviceState mDeviceState;
    private final com.android.internal.telephony.nitz.TimeZoneLookupHelper mTimeZoneLookupHelper;

    public void <init>(com.android.internal.telephony.NitzStateMachine$DeviceState, com.android.internal.telephony.nitz.TimeZoneLookupHelper)
    {
        com.android.internal.telephony.nitz.TimeZoneSuggesterImpl r0;
        com.android.internal.telephony.NitzStateMachine$DeviceState r1, $r4;
        com.android.internal.telephony.nitz.TimeZoneLookupHelper r2, $r6;

        r0 := @this: com.android.internal.telephony.nitz.TimeZoneSuggesterImpl;

        r1 := @parameter0: com.android.internal.telephony.NitzStateMachine$DeviceState;

        r2 := @parameter1: com.android.internal.telephony.nitz.TimeZoneLookupHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = (com.android.internal.telephony.NitzStateMachine$DeviceState) r1;

        r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: com.android.internal.telephony.NitzStateMachine$DeviceState mDeviceState> = $r4;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r6 = (com.android.internal.telephony.nitz.TimeZoneLookupHelper) r2;

        r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: com.android.internal.telephony.nitz.TimeZoneLookupHelper mTimeZoneLookupHelper> = $r6;

        return;
    }

    private boolean countryUsesUtc(java.lang.String, com.android.internal.telephony.NitzData)
    {
        com.android.internal.telephony.nitz.TimeZoneSuggesterImpl r0;
        java.lang.String r1;
        com.android.internal.telephony.NitzData r2;
        com.android.internal.telephony.nitz.TimeZoneLookupHelper $r3;
        long $l0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.nitz.TimeZoneSuggesterImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.NitzData;

        $r3 = r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: com.android.internal.telephony.nitz.TimeZoneLookupHelper mTimeZoneLookupHelper>;

        $l0 = virtualinvoke r2.<com.android.internal.telephony.NitzData: long getCurrentTimeInMillis()>();

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.nitz.TimeZoneLookupHelper: boolean countryUsesUtc(java.lang.String,long)>(r1, $l0);

        return $z0;
    }

    private android.app.timezonedetector.TelephonyTimeZoneSuggestion findTimeZoneForTestNetwork(int, android.os.TimestampedValue)
    {
        com.android.internal.telephony.nitz.TimeZoneSuggesterImpl r0;
        java.lang.Object $r3;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder $r5;
        java.lang.StringBuilder $r6, $r17;
        java.lang.String $r9, $r13, $r20;
        com.android.internal.telephony.nitz.TimeZoneLookupHelper $r11;
        android.icu.util.TimeZone $r12;
        boolean $z0;
        int i0;
        android.os.TimestampedValue r23;
        com.android.internal.telephony.NitzData r24, r25;
        android.timezone.CountryTimeZones$OffsetResult r27;
        byte b1;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion $r29;

        r0 := @this: com.android.internal.telephony.nitz.TimeZoneSuggesterImpl;

        i0 := @parameter0: int;

        r23 := @parameter1: android.os.TimestampedValue;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r23);

        $r3 = virtualinvoke r23.<android.os.TimestampedValue: java.lang.Object getValue()>();

        r24 = (com.android.internal.telephony.NitzData) $r3;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r24);

        r25 = (com.android.internal.telephony.NitzData) r24;

        $r5 = new android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder;

        specialinvoke $r5.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: void <init>(int)>(i0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("findTimeZoneForTestNetwork: nitzSignal=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>($r9);

        $r11 = r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: com.android.internal.telephony.nitz.TimeZoneLookupHelper mTimeZoneLookupHelper>;

        r27 = virtualinvoke $r11.<com.android.internal.telephony.nitz.TimeZoneLookupHelper: android.timezone.CountryTimeZones$OffsetResult lookupByNitz(com.android.internal.telephony.NitzData)>(r25);

        if r27 != null goto label1;

        virtualinvoke $r5.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>("findTimeZoneForTestNetwork: No zone found");

        goto label4;

     label1:
        $r12 = virtualinvoke r27.<android.timezone.CountryTimeZones$OffsetResult: android.icu.util.TimeZone getTimeZone()>();

        $r13 = virtualinvoke $r12.<android.icu.util.TimeZone: java.lang.String getID()>();

        virtualinvoke $r5.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setZoneId(java.lang.String)>($r13);

        virtualinvoke $r5.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setMatchType(int)>(5);

        $z0 = virtualinvoke r27.<android.timezone.CountryTimeZones$OffsetResult: boolean isOnlyMatch()>();

        if $z0 == 0 goto label2;

        b1 = 1;

        goto label3;

     label2:
        b1 = 2;

     label3:
        virtualinvoke $r5.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setQuality(int)>(b1);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("findTimeZoneForTestNetwork: lookupResult=");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>($r20);

     label4:
        $r29 = virtualinvoke $r5.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion build()>();

        return $r29;
    }

    private android.app.timezonedetector.TelephonyTimeZoneSuggestion findTimeZoneFromCountryAndNitz(int, java.lang.String, android.os.TimestampedValue)
    {
        com.android.internal.telephony.nitz.TimeZoneSuggesterImpl r0;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder $r4;
        java.lang.StringBuilder $r5, $r20, $r26, $r39;
        java.lang.String $r10, $r16, $r23, $r29, $r35, $r42, r47;
        java.lang.Object $r12;
        boolean $z0, $z1;
        com.android.internal.telephony.nitz.TimeZoneLookupHelper $r14, $r15;
        long $l0;
        int $i1, $i2, i3;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion $r25, $r31, $r33, $r44, $r46;
        android.icu.util.TimeZone $r34;
        android.os.TimestampedValue r48;
        com.android.internal.telephony.NitzData r50, r51;
        android.timezone.CountryTimeZones$OffsetResult r52;
        byte b4;
        com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult r54;

        r0 := @this: com.android.internal.telephony.nitz.TimeZoneSuggesterImpl;

        i3 := @parameter0: int;

        r47 := @parameter1: java.lang.String;

        r48 := @parameter2: android.os.TimestampedValue;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r47);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r48);

        $r4 = new android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder;

        specialinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: void <init>(int)>(i3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("findTimeZoneFromCountryAndNitz: countryIsoCode=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nitzSignal=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>($r10);

        $r12 = virtualinvoke r48.<android.os.TimestampedValue: java.lang.Object getValue()>();

        r50 = (com.android.internal.telephony.NitzData) $r12;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r50);

        r51 = (com.android.internal.telephony.NitzData) r50;

        $z0 = specialinvoke r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: boolean isNitzSignalOffsetInfoBogus(java.lang.String,com.android.internal.telephony.NitzData)>(r47, r51);

        if $z0 == 0 goto label1;

        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>("findTimeZoneFromCountryAndNitz: NITZ signal looks bogus");

        $r46 = virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion build()>();

        return $r46;

     label1:
        $r14 = r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: com.android.internal.telephony.nitz.TimeZoneLookupHelper mTimeZoneLookupHelper>;

        r52 = virtualinvoke $r14.<com.android.internal.telephony.nitz.TimeZoneLookupHelper: android.timezone.CountryTimeZones$OffsetResult lookupByNitzCountry(com.android.internal.telephony.NitzData,java.lang.String)>(r51, r47);

        b4 = 2;

        if r52 == null goto label3;

        $r34 = virtualinvoke r52.<android.timezone.CountryTimeZones$OffsetResult: android.icu.util.TimeZone getTimeZone()>();

        $r35 = virtualinvoke $r34.<android.icu.util.TimeZone: java.lang.String getID()>();

        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setZoneId(java.lang.String)>($r35);

        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setMatchType(int)>(3);

        $z1 = virtualinvoke r52.<android.timezone.CountryTimeZones$OffsetResult: boolean isOnlyMatch()>();

        if $z1 == 0 goto label2;

        b4 = 1;

        goto label2;

     label2:
        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setQuality(int)>(b4);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("findTimeZoneFromCountryAndNitz: lookupResult=");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r52);

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>($r42);

        $r44 = virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion build()>();

        return $r44;

     label3:
        $r15 = r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: com.android.internal.telephony.nitz.TimeZoneLookupHelper mTimeZoneLookupHelper>;

        $l0 = virtualinvoke r51.<com.android.internal.telephony.NitzData: long getCurrentTimeInMillis()>();

        r54 = virtualinvoke $r15.<com.android.internal.telephony.nitz.TimeZoneLookupHelper: com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult lookupByCountry(java.lang.String,long)>(r47, $l0);

        if r54 != null goto label4;

        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>("findTimeZoneFromCountryAndNitz: lookupByCountry() country not recognized");

        $r33 = virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion build()>();

        return $r33;

     label4:
        $i1 = r54.<com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult: int quality>;

        if $i1 == 1 goto label6;

        $i2 = r54.<com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult: int quality>;

        if $i2 != 2 goto label5;

        goto label6;

     label5:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("findTimeZoneFromCountryAndNitz: country-only suggestion quality not high enough. countryResult=");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r54);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>($r29);

        $r31 = virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion build()>();

        return $r31;

     label6:
        $r16 = r54.<com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult: java.lang.String zoneId>;

        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setZoneId(java.lang.String)>($r16);

        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setMatchType(int)>(2);

        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setQuality(int)>(1);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("findTimeZoneFromCountryAndNitz: high quality country-only suggestion: countryResult=");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r54);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>($r23);

        $r25 = virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion build()>();

        return $r25;
    }

    private android.app.timezonedetector.TelephonyTimeZoneSuggestion findTimeZoneFromNetworkCountryCode(int, java.lang.String, long)
    {
        com.android.internal.telephony.nitz.TimeZoneSuggesterImpl r0;
        long l0;
        boolean $z0;
        java.lang.IllegalArgumentException $r2, $r28;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder $r3;
        java.lang.StringBuilder $r4, $r21, $r35;
        java.lang.String $r9, $r14, $r29, r30, $r37;
        com.android.internal.telephony.nitz.TimeZoneLookupHelper $r11;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion $r13;
        int $i1, $i2, $i3, $i4, i5;
        com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult r33;
        byte b6;

        r0 := @this: com.android.internal.telephony.nitz.TimeZoneSuggesterImpl;

        i5 := @parameter0: int;

        r30 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r30);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r30);

        if $z0 != 0 goto label8;

        $r3 = new android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder;

        specialinvoke $r3.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: void <init>(int)>(i5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("findTimeZoneFromNetworkCountryCode: whenMillis=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", countryIsoCode=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>($r9);

        $r11 = r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: com.android.internal.telephony.nitz.TimeZoneLookupHelper mTimeZoneLookupHelper>;

        r33 = virtualinvoke $r11.<com.android.internal.telephony.nitz.TimeZoneLookupHelper: com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult lookupByCountry(java.lang.String,long)>(r30, l0);

        if r33 == null goto label6;

        $r14 = r33.<com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult: java.lang.String zoneId>;

        virtualinvoke $r3.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setZoneId(java.lang.String)>($r14);

        virtualinvoke $r3.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setMatchType(int)>(2);

        $i1 = r33.<com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult: int quality>;

        if $i1 == 1 goto label4;

        $i2 = r33.<com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult: int quality>;

        if $i2 != 2 goto label1;

        goto label4;

     label1:
        $i3 = r33.<com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult: int quality>;

        if $i3 != 3 goto label2;

        b6 = 2;

        goto label5;

     label2:
        $i4 = r33.<com.android.internal.telephony.nitz.TimeZoneLookupHelper$CountryResult: int quality>;

        if $i4 != 4 goto label3;

        b6 = 3;

        goto label5;

     label3:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lookupResult.quality not recognized: countryIsoCode=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", whenMillis=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lookupResult=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        $r28 = new java.lang.IllegalArgumentException;

        $r29 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label4:
        b6 = 1;

     label5:
        virtualinvoke $r3.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setQuality(int)>(b6);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("findTimeZoneFromNetworkCountryCode: lookupResult=");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>($r37);

        goto label7;

     label6:
        virtualinvoke $r3.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>("findTimeZoneFromNetworkCountryCode: Country not recognized?");

     label7:
        $r13 = virtualinvoke $r3.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion build()>();

        return $r13;

     label8:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("countryIsoCode must not be empty");

        throw $r2;
    }

    private boolean isNitzSignalOffsetInfoBogus(java.lang.String, com.android.internal.telephony.NitzData)
    {
        com.android.internal.telephony.nitz.TimeZoneSuggesterImpl r0;
        java.lang.String r1;
        com.android.internal.telephony.NitzData r2;
        int $i0;
        boolean $z1, z2, z3, z4;

        r0 := @this: com.android.internal.telephony.nitz.TimeZoneSuggesterImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.NitzData;

        z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if z2 == 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r2.<com.android.internal.telephony.NitzData: int getLocalOffsetMillis()>();

        if $i0 != 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        z4 = 0;

        if z3 == 0 goto label4;

        z4 = 0;

        $z1 = specialinvoke r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: boolean countryUsesUtc(java.lang.String,com.android.internal.telephony.NitzData)>(r1, r2);

        if $z1 != 0 goto label4;

        z4 = 1;

     label4:
        return z4;
    }

    public android.app.timezonedetector.TelephonyTimeZoneSuggestion getTimeZoneSuggestion(int, java.lang.String, android.os.TimestampedValue)
    {
        com.android.internal.telephony.nitz.TimeZoneSuggesterImpl r0;
        int i0;
        com.android.internal.telephony.NitzData r1;
        boolean $z0, $z1;
        com.android.internal.telephony.NitzStateMachine$DeviceState $r2;
        long $l1;
        java.lang.String $r3, $r7, $r10, $r14, r15, r24;
        java.lang.Object $r4;
        java.util.TimeZone $r5, $r6;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder $r8, $r9, $r11, r18, r19;
        java.lang.RuntimeException $r12;
        java.lang.StringBuilder $r13, r20, r22;
        android.os.TimestampedValue r16;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r17, r25;

        r0 := @this: com.android.internal.telephony.nitz.TimeZoneSuggesterImpl;

        i0 := @parameter0: int;

        r15 := @parameter1: java.lang.String;

        r16 := @parameter2: android.os.TimestampedValue;

        r17 = null;

        if r16 == null goto label06;

     label01:
        $r4 = virtualinvoke r16.<android.os.TimestampedValue: java.lang.Object getValue()>();

        r1 = (com.android.internal.telephony.NitzData) $r4;

     label02:
        r17 = null;

     label03:
        $r5 = virtualinvoke r1.<com.android.internal.telephony.NitzData: java.util.TimeZone getEmulatorHostTimeZone()>();

        if $r5 == null goto label06;

        r18 = new android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder;

        specialinvoke r18.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: void <init>(int)>(i0);

        $r6 = virtualinvoke r1.<com.android.internal.telephony.NitzData: java.util.TimeZone getEmulatorHostTimeZone()>();

        $r7 = virtualinvoke $r6.<java.util.TimeZone: java.lang.String getID()>();

        $r8 = virtualinvoke r18.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setZoneId(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setMatchType(int)>(4);

        r19 = virtualinvoke $r9.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setQuality(int)>(1);

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Emulator time zone override: ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r19.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>($r10);

        r17 = virtualinvoke $r11.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion build()>();

     label04:
        goto label06;

     label05:
        $r12 := @caughtexception;

        goto label22;

     label06:
        if r17 == null goto label07;

        goto label20;

     label07:
        if r15 != null goto label12;

        if r16 != null goto label10;

     label08:
        r17 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion: android.app.timezonedetector.TelephonyTimeZoneSuggestion createEmptySuggestion(int,java.lang.String)>(i0, "getTimeZoneSuggestion: nitzSignal=null, countryIsoCode=null");

     label09:
        goto label20;

     label10:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getTimeZoneSuggestion: nitzSignal=");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", countryIsoCode=null");

        $r3 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion: android.app.timezonedetector.TelephonyTimeZoneSuggestion createEmptySuggestion(int,java.lang.String)>(i0, $r3);

     label11:
        goto label20;

     label12:
        if r16 != null goto label17;

     label13:
        $z1 = virtualinvoke r15.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label15;

        r17 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion: android.app.timezonedetector.TelephonyTimeZoneSuggestion createEmptySuggestion(int,java.lang.String)>(i0, "getTimeZoneSuggestion: nitzSignal=null, countryIsoCode=\"\"");

     label14:
        goto label20;

     label15:
        $r2 = r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: com.android.internal.telephony.NitzStateMachine$DeviceState mDeviceState>;

        $l1 = interfaceinvoke $r2.<com.android.internal.telephony.NitzStateMachine$DeviceState: long currentTimeMillis()>();

        r17 = specialinvoke r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: android.app.timezonedetector.TelephonyTimeZoneSuggestion findTimeZoneFromNetworkCountryCode(int,java.lang.String,long)>(i0, r15, $l1);

     label16:
        goto label20;

     label17:
        $z0 = virtualinvoke r15.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label19;

        r17 = specialinvoke r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: android.app.timezonedetector.TelephonyTimeZoneSuggestion findTimeZoneForTestNetwork(int,android.os.TimestampedValue)>(i0, r16);

     label18:
        goto label20;

     label19:
        r17 = specialinvoke r0.<com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: android.app.timezonedetector.TelephonyTimeZoneSuggestion findTimeZoneFromCountryAndNitz(int,java.lang.String,android.os.TimestampedValue)>(i0, r15, r16);

     label20:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r17);

     label21:
        return r17;

     label22:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getTimeZoneSuggestion: Error during lookup:  countryIsoCode=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nitzSignal=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", e=");

        $r14 = virtualinvoke $r12.<java.lang.RuntimeException: java.lang.String getMessage()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r24 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r25 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion: android.app.timezonedetector.TelephonyTimeZoneSuggestion createEmptySuggestion(int,java.lang.String)>(i0, r24);

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NewNitzStateMachineImpl", r24, $r12);

        return r25;

        catch java.lang.RuntimeException from label01 to label02 with label05;
        catch java.lang.RuntimeException from label03 to label04 with label05;
        catch java.lang.RuntimeException from label08 to label09 with label05;
        catch java.lang.RuntimeException from label10 to label11 with label05;
        catch java.lang.RuntimeException from label13 to label14 with label05;
        catch java.lang.RuntimeException from label15 to label16 with label05;
        catch java.lang.RuntimeException from label17 to label18 with label05;
        catch java.lang.RuntimeException from label19 to label20 with label05;
        catch java.lang.RuntimeException from label20 to label21 with label05;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.nitz.TimeZoneSuggesterImpl: java.lang.String LOG_TAG> = "NewNitzStateMachineImpl";

        return;
    }
}
