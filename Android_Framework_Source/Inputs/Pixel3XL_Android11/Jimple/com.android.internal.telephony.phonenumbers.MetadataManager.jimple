final class com.android.internal.telephony.phonenumbers.MetadataManager extends java.lang.Object
{
    private static final java.lang.String ALTERNATE_FORMATS_FILE_PREFIX;
    static final com.android.internal.telephony.phonenumbers.MetadataLoader DEFAULT_METADATA_LOADER;
    static final java.lang.String MULTI_FILE_PHONE_NUMBER_METADATA_FILE_PREFIX;
    private static final java.lang.String SHORT_NUMBER_METADATA_FILE_PREFIX;
    static final java.lang.String SINGLE_FILE_PHONE_NUMBER_METADATA_FILE_NAME;
    private static final java.util.Set alternateFormatsCountryCodes;
    private static final java.util.concurrent.ConcurrentHashMap alternateFormatsMap;
    private static final java.util.logging.Logger logger;
    private static final java.util.concurrent.ConcurrentHashMap shortNumberMetadataMap;
    private static final java.util.Set shortNumberMetadataRegionCodes;

    static void <clinit>()
    {
        com.android.internal.telephony.phonenumbers.MetadataManager$1 $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        java.util.logging.Logger $r3;
        java.util.concurrent.ConcurrentHashMap $r4, $r5;
        java.util.Set $r6, $r7;

        <com.android.internal.telephony.phonenumbers.MetadataManager: java.lang.String SINGLE_FILE_PHONE_NUMBER_METADATA_FILE_NAME> = "/com/android/internal/telephony/phonenumbers/data/SingleFilePhoneNumberMetadataProto";

        <com.android.internal.telephony.phonenumbers.MetadataManager: java.lang.String SHORT_NUMBER_METADATA_FILE_PREFIX> = "/com/android/internal/telephony/phonenumbers/data/ShortNumberMetadataProto";

        <com.android.internal.telephony.phonenumbers.MetadataManager: java.lang.String MULTI_FILE_PHONE_NUMBER_METADATA_FILE_PREFIX> = "/com/android/internal/telephony/phonenumbers/data/PhoneNumberMetadataProto";

        <com.android.internal.telephony.phonenumbers.MetadataManager: java.lang.String ALTERNATE_FORMATS_FILE_PREFIX> = "/com/android/internal/telephony/phonenumbers/data/PhoneNumberAlternateFormatsProto";

        $r0 = new com.android.internal.telephony.phonenumbers.MetadataManager$1;

        specialinvoke $r0.<com.android.internal.telephony.phonenumbers.MetadataManager$1: void <init>()>();

        <com.android.internal.telephony.phonenumbers.MetadataManager: com.android.internal.telephony.phonenumbers.MetadataLoader DEFAULT_METADATA_LOADER> = $r0;

        $r1 = class "Lcom/android/internal/telephony/phonenumbers/MetadataManager;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.logging.Logger logger> = $r3;

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.concurrent.ConcurrentHashMap alternateFormatsMap> = $r4;

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.concurrent.ConcurrentHashMap shortNumberMetadataMap> = $r5;

        $r6 = staticinvoke <com.android.internal.telephony.phonenumbers.AlternateFormatsCountryCodeSet: java.util.Set getCountryCodeSet()>();

        <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.Set alternateFormatsCountryCodes> = $r6;

        $r7 = staticinvoke <com.android.internal.telephony.phonenumbers.ShortNumbersRegionCodeSet: java.util.Set getRegionCodeSet()>();

        <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.Set shortNumberMetadataRegionCodes> = $r7;

        return;
    }

    private void <init>()
    {
        com.android.internal.telephony.phonenumbers.MetadataManager r0;

        r0 := @this: com.android.internal.telephony.phonenumbers.MetadataManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.util.List access$000(java.lang.String, com.android.internal.telephony.phonenumbers.MetadataLoader)
    {
        java.lang.String r0;
        com.android.internal.telephony.phonenumbers.MetadataLoader r1;
        java.util.List $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.telephony.phonenumbers.MetadataLoader;

        $r2 = staticinvoke <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.List getMetadataFromSingleFileName(java.lang.String,com.android.internal.telephony.phonenumbers.MetadataLoader)>(r0, r1);

        return $r2;
    }

    static com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata getAlternateFormatsForCountry(int)
    {
        int i0;
        java.util.Set $r0;
        java.lang.Integer $r1, $r2;
        boolean $z0;
        com.android.internal.telephony.phonenumbers.MetadataLoader $r3;
        java.util.concurrent.ConcurrentHashMap $r4;
        com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata $r5;

        i0 := @parameter0: int;

        $r0 = <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.Set alternateFormatsCountryCodes>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.concurrent.ConcurrentHashMap alternateFormatsMap>;

        $r3 = <com.android.internal.telephony.phonenumbers.MetadataManager: com.android.internal.telephony.phonenumbers.MetadataLoader DEFAULT_METADATA_LOADER>;

        $r5 = staticinvoke <com.android.internal.telephony.phonenumbers.MetadataManager: com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata getMetadataFromMultiFilePrefix(java.lang.Object,java.util.concurrent.ConcurrentHashMap,java.lang.String,com.android.internal.telephony.phonenumbers.MetadataLoader)>($r2, $r4, "/com/android/internal/telephony/phonenumbers/data/PhoneNumberAlternateFormatsProto", $r3);

        return $r5;
    }

    static com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata getMetadataFromMultiFilePrefix(java.lang.Object, java.util.concurrent.ConcurrentHashMap, java.lang.String, com.android.internal.telephony.phonenumbers.MetadataLoader)
    {
        java.util.concurrent.ConcurrentHashMap r0;
        java.util.List r1;
        java.util.logging.Level r2;
        java.lang.Object $r3, $r8, $r9, r14;
        java.lang.StringBuilder $r4, $r10;
        int $i0;
        java.lang.String $r13, r15, r19;
        com.android.internal.telephony.phonenumbers.MetadataLoader r16;
        com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata r17, r22, r23;
        java.util.logging.Logger r20;

        r14 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.util.concurrent.ConcurrentHashMap;

        r15 := @parameter2: java.lang.String;

        r16 := @parameter3: com.android.internal.telephony.phonenumbers.MetadataLoader;

        $r3 = virtualinvoke r0.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r14);

        r17 = (com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata) $r3;

        if r17 == null goto label1;

        return r17;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        r19 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = staticinvoke <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.List getMetadataFromSingleFileName(java.lang.String,com.android.internal.telephony.phonenumbers.MetadataLoader)>(r19, r16);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 <= 1 goto label2;

        r20 = <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.logging.Logger logger>;

        r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("more than one metadata in file ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r20.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>(r2, $r13);

     label2:
        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r22 = (com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata) $r8;

        $r9 = virtualinvoke r0.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r14, r22);

        r23 = (com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata) $r9;

        if r23 == null goto label3;

        goto label4;

     label3:
        r23 = r22;

     label4:
        return r23;
    }

    private static java.util.List getMetadataFromSingleFileName(java.lang.String, com.android.internal.telephony.phonenumbers.MetadataLoader)
    {
        java.lang.String r0, $r5, $r11;
        java.lang.StringBuilder $r1, $r7;
        java.lang.IllegalStateException $r4, $r10;
        com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadataCollection $r6;
        int $i0;
        com.android.internal.telephony.phonenumbers.MetadataLoader r12;
        java.io.InputStream r13;
        java.util.List r14;

        r0 := @parameter0: java.lang.String;

        r12 := @parameter1: com.android.internal.telephony.phonenumbers.MetadataLoader;

        r13 = interfaceinvoke r12.<com.android.internal.telephony.phonenumbers.MetadataLoader: java.io.InputStream loadMetadata(java.lang.String)>(r0);

        if r13 == null goto label2;

        $r6 = staticinvoke <com.android.internal.telephony.phonenumbers.MetadataManager: com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadataCollection loadMetadataAndCloseInput(java.io.InputStream)>(r13);

        r14 = virtualinvoke $r6.<com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadataCollection: java.util.List getMetadataList()>();

        $i0 = interfaceinvoke r14.<java.util.List: int size()>();

        if $i0 == 0 goto label1;

        return r14;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("empty metadata: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("missing metadata: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    static com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata getShortNumberMetadataForRegion(java.lang.String)
    {
        java.lang.String r0;
        java.util.Set $r1;
        boolean $z0;
        com.android.internal.telephony.phonenumbers.MetadataLoader $r2;
        java.util.concurrent.ConcurrentHashMap $r3;
        com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata $r4;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.Set shortNumberMetadataRegionCodes>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.concurrent.ConcurrentHashMap shortNumberMetadataMap>;

        $r2 = <com.android.internal.telephony.phonenumbers.MetadataManager: com.android.internal.telephony.phonenumbers.MetadataLoader DEFAULT_METADATA_LOADER>;

        $r4 = staticinvoke <com.android.internal.telephony.phonenumbers.MetadataManager: com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata getMetadataFromMultiFilePrefix(java.lang.Object,java.util.concurrent.ConcurrentHashMap,java.lang.String,com.android.internal.telephony.phonenumbers.MetadataLoader)>(r0, $r3, "/com/android/internal/telephony/phonenumbers/data/ShortNumberMetadataProto", $r2);

        return $r4;
    }

    static com.android.internal.telephony.phonenumbers.MetadataManager$SingleFileMetadataMaps getSingleFileMetadataMaps(java.util.concurrent.atomic.AtomicReference, java.lang.String, com.android.internal.telephony.phonenumbers.MetadataLoader)
    {
        java.util.concurrent.atomic.AtomicReference r0;
        java.lang.String r1;
        com.android.internal.telephony.phonenumbers.MetadataLoader r2;
        com.android.internal.telephony.phonenumbers.MetadataManager$SingleFileMetadataMaps r3, $r5, $r7;
        java.lang.Object $r4, $r6;

        r0 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.telephony.phonenumbers.MetadataLoader;

        $r4 = virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r3 = (com.android.internal.telephony.phonenumbers.MetadataManager$SingleFileMetadataMaps) $r4;

        if r3 == null goto label1;

        return r3;

     label1:
        $r5 = staticinvoke <com.android.internal.telephony.phonenumbers.MetadataManager$SingleFileMetadataMaps: com.android.internal.telephony.phonenumbers.MetadataManager$SingleFileMetadataMaps load(java.lang.String,com.android.internal.telephony.phonenumbers.MetadataLoader)>(r1, r2);

        virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, $r5);

        $r6 = virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r7 = (com.android.internal.telephony.phonenumbers.MetadataManager$SingleFileMetadataMaps) $r6;

        return $r7;
    }

    static java.util.Set getSupportedShortNumberRegions()
    {
        java.util.Set $r0, $r1;

        $r0 = <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.Set shortNumberMetadataRegionCodes>;

        $r1 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r1;
    }

    private static com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadataCollection loadMetadataAndCloseInput(java.io.InputStream)
    {
        java.lang.Throwable $r0, $r1, $r4, $r5, $r8;
        java.util.logging.Level $r2, $r6;
        java.util.logging.Logger $r3, $r7;
        java.io.InputStream r9;
        java.io.ObjectInputStream r10, r11;
        com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadataCollection r13;
        java.lang.RuntimeException r16, r19;

        r9 := @parameter0: java.io.InputStream;

        r10 = null;

     label01:
        r11 = new java.io.ObjectInputStream;

     label02:
        r10 = null;

     label03:
        specialinvoke r11.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r9);

     label04:
        r10 = r11;

     label05:
        r13 = new com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadataCollection;

     label06:
        r10 = r11;

     label07:
        specialinvoke r13.<com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadataCollection: void <init>()>();

     label08:
        r10 = r11;

     label09:
        virtualinvoke r13.<com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadataCollection: void readExternal(java.io.ObjectInput)>(r11);

     label10:
        virtualinvoke r11.<java.io.ObjectInputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r1 := @caughtexception;

        $r3 = <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.logging.Logger logger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, "error closing input stream (ignored)", $r1);

     label13:
        return r13;

     label14:
        $r0 := @caughtexception;

        r10 = r11;

     label15:
        r16 = new java.lang.RuntimeException;

     label16:
        r10 = r11;

     label17:
        specialinvoke r16.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("cannot load/parse metadata", $r0);

     label18:
        r10 = r11;

     label19:
        throw r16;

     label20:
        $r4 := @caughtexception;

        goto label27;

     label21:
        $r8 := @caughtexception;

        r10 = null;

     label22:
        r19 = new java.lang.RuntimeException;

     label23:
        r10 = null;

     label24:
        specialinvoke r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("cannot load/parse metadata", $r8);

     label25:
        r10 = null;

     label26:
        throw r19;

     label27:
        if r10 == null goto label30;

     label28:
        virtualinvoke r10.<java.io.ObjectInputStream: void close()>();

     label29:
        goto label31;

     label30:
        virtualinvoke r9.<java.io.InputStream: void close()>();

     label31:
        goto label33;

     label32:
        $r5 := @caughtexception;

        $r7 = <com.android.internal.telephony.phonenumbers.MetadataManager: java.util.logging.Logger logger>;

        $r6 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r6, "error closing input stream (ignored)", $r5);

     label33:
        throw $r4;

        catch java.io.IOException from label01 to label02 with label21;
        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.io.IOException from label03 to label04 with label21;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch java.lang.Throwable from label22 to label23 with label20;
        catch java.lang.Throwable from label24 to label25 with label20;
        catch java.lang.Throwable from label26 to label27 with label20;
        catch java.io.IOException from label28 to label29 with label32;
        catch java.io.IOException from label30 to label31 with label32;
    }
}
