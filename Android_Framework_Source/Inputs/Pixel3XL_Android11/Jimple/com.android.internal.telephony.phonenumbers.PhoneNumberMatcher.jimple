final class com.android.internal.telephony.phonenumbers.PhoneNumberMatcher extends java.lang.Object implements java.util.Iterator
{
    private static final java.util.regex.Pattern[] INNER_MATCHES;
    private static final java.util.regex.Pattern LEAD_CLASS;
    private static final java.util.regex.Pattern MATCHING_BRACKETS;
    private static final java.util.regex.Pattern PATTERN;
    private static final java.util.regex.Pattern PUB_PAGES;
    private static final java.util.regex.Pattern SLASH_SEPARATED_DATES;
    private static final java.util.regex.Pattern TIME_STAMPS;
    private static final java.util.regex.Pattern TIME_STAMPS_SUFFIX;
    private com.android.internal.telephony.phonenumbers.PhoneNumberMatch lastMatch;
    private final com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency leniency;
    private long maxTries;
    private final com.android.internal.telephony.phonenumbers.PhoneNumberUtil phoneUtil;
    private final java.lang.String preferredRegion;
    private final com.android.internal.telephony.phonenumbers.internal.RegexCache regexCache;
    private int searchIndex;
    private com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State state;
    private final java.lang.CharSequence text;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r36, $r51, $r69;
        java.util.regex.Pattern[] $r4;
        java.lang.StringBuilder $r11, $r16, $r37, $r40, $r44, $r47, $r52;
        java.lang.String $r35, $r42, $r65, $r68, r71, r72, r74, r75, r76, r78, r80, r82, r84;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\d{1,5}-+\\d{1,5}\\s{0,4}\\(\\d{1,4}");

        <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern PUB_PAGES> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?:(?:[0-3]?\\d/[01]?\\d)|(?:[01]?\\d/[0-3]?\\d))/(?:[12]\\d)?\\d{2}");

        <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern SLASH_SEPARATED_DATES> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[12]\\d{3}[-/]?[01]\\d[-/]?[0-3]\\d +[0-2]\\d$");

        <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern TIME_STAMPS> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(":[0-5]\\d");

        <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern TIME_STAMPS_SUFFIX> = $r3;

        $r4 = newarray (java.util.regex.Pattern)[6];

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("/+(.*)");

        $r4[0] = $r5;

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\([^(]*)");

        $r4[1] = $r6;

        $r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?:\\p{Z}-|-\\p{Z})\\p{Z}*(.+)");

        $r4[2] = $r7;

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\u2012-\u2015\uff0d]\\p{Z}*(.+)");

        $r4[3] = $r8;

        $r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\.+\\p{Z}*([^.]+)");

        $r4[4] = $r9;

        $r10 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\p{Z}+(\\P{Z}+)");

        $r4[5] = $r10;

        <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern[] INNER_MATCHES> = $r4;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\\[\uff08\uff3b");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\\]\uff09\uff3d");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r71 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r72 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.String limit(int,int)>(0, 3);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?:[");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\\[\uff08\uff3b");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("])?(?:");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+[");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\\]\uff09\uff3d");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("])?");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+(?:[");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\\[\uff08\uff3b");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+[");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\\]\uff09\uff3d");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("])");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r72);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r35 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r35);

        <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern MATCHING_BRACKETS> = $r36;

        r74 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.String limit(int,int)>(0, 2);

        r75 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.String limit(int,int)>(0, 4);

        r76 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.String limit(int,int)>(0, 20);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[-x\u2010-\u2015\u2212\u30fc\uff0d-\uff0f \u00a0\u00ad\u200b\u2060\u3000()\uff08\uff09\uff3b\uff3d.\\[\\]/~\u2053\u223c\uff5e]");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r75);

        r78 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\p{Nd}");

        $r42 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.String limit(int,int)>(1, 20);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        r80 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\\[\uff08\uff3b");

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+\uff0b");

        r82 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r82);

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r84 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        $r51 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r84);

        <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern LEAD_CLASS> = $r51;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?:");

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r84);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r78);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?:");

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r78);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r76);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?:");

        $r65 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String EXTN_PATTERNS_FOR_MATCHING>;

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r68 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        $r69 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r68, 66);

        <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern PATTERN> = $r69;

        return;
    }

    void <init>(com.android.internal.telephony.phonenumbers.PhoneNumberUtil, java.lang.CharSequence, java.lang.String, com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency, long)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher r0;
        java.lang.CharSequence r1, r11;
        java.lang.String r2;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency r3;
        long l0;
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State $r4;
        byte $b1;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil r7;
        java.lang.Object r8;
        com.android.internal.telephony.phonenumbers.internal.RegexCache r9;
        java.lang.IllegalArgumentException r10;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher;

        r7 := @parameter0: com.android.internal.telephony.phonenumbers.PhoneNumberUtil;

        r1 := @parameter1: java.lang.CharSequence;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency;

        l0 := @parameter4: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State NOT_READY>;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State state> = $r4;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatch lastMatch> = null;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: int searchIndex> = 0;

        r9 = new com.android.internal.telephony.phonenumbers.internal.RegexCache;

        specialinvoke r9.<com.android.internal.telephony.phonenumbers.internal.RegexCache: void <init>(int)>(32);

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.internal.RegexCache regexCache> = r9;

        if r7 == null goto label4;

        if r3 == null goto label4;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label3;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberUtil phoneUtil> = r7;

        if r1 == null goto label1;

        r8 = r1;

        goto label2;

     label1:
        r8 = "";

     label2:
        r11 = (java.lang.CharSequence) r8;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.CharSequence text> = r11;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.String preferredRegion> = r2;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency leniency> = r3;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: long maxTries> = l0;

        return;

     label3:
        r10 = new java.lang.IllegalArgumentException;

        specialinvoke r10.<java.lang.IllegalArgumentException: void <init>()>();

        throw r10;

     label4:
        throw null;
    }

    static boolean allNumberGroupsAreExactlyPresent(com.android.internal.telephony.phonenumbers.PhoneNumberUtil, com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber, java.lang.StringBuilder, java.lang.String[])
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil r0;
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r1;
        java.lang.String[] r2, r12;
        boolean z0, $z1, $z2, $z3, z4;
        java.util.regex.Pattern $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.StringBuilder r11;

        r0 := @parameter0: com.android.internal.telephony.phonenumbers.PhoneNumberUtil;

        r1 := @parameter1: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber;

        r11 := @parameter2: java.lang.StringBuilder;

        r2 := @parameter3: java.lang.String[];

        $r3 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.util.regex.Pattern NON_DIGITS_PATTERN>;

        $r4 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r12 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>($r4);

        z0 = virtualinvoke r1.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: boolean hasExtension()>();

        z4 = 1;

        if z0 == 0 goto label1;

        $i3 = lengthof r12;

        i4 = $i3 - 2;

        goto label2;

     label1:
        $i0 = lengthof r12;

        i4 = $i0 - 1;

     label2:
        $i1 = lengthof r12;

        if $i1 == 1 goto label9;

        $r5 = r12[i4];

        $r6 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String getNationalSignificantNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber)>(r1);

        $z1 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>($r6);

        if $z1 == 0 goto label3;

        goto label9;

     label3:
        $i2 = lengthof r2;

        i5 = $i2 - 1;

     label4:
        if i5 <= 0 goto label6;

        if i4 < 0 goto label6;

        $r10 = r12[i4];

        $r9 = r2[i5];

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        i5 = i5 + -1;

        i4 = i4 + -1;

        goto label4;

     label6:
        if i4 < 0 goto label7;

        $r8 = r12[i4];

        $r7 = r2[0];

        $z2 = virtualinvoke $r8.<java.lang.String: boolean endsWith(java.lang.String)>($r7);

        if $z2 == 0 goto label7;

        goto label8;

     label7:
        z4 = 0;

     label8:
        return z4;

     label9:
        return 1;
    }

    static boolean allNumberGroupsRemainGrouped(com.android.internal.telephony.phonenumbers.PhoneNumberUtil, com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber, java.lang.StringBuilder, java.lang.String[])
    {
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r0;
        java.lang.StringBuilder r1;
        java.lang.String[] r2;
        java.lang.String r3, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, r15;
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource $r4, $r5;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, i12;
        char $c3;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil r14;

        r14 := @parameter0: com.android.internal.telephony.phonenumbers.PhoneNumberUtil;

        r0 := @parameter1: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber;

        r1 := @parameter2: java.lang.StringBuilder;

        r2 := @parameter3: java.lang.String[];

        i9 = 0;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource getCountryCodeSource()>();

        $r5 = <com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource FROM_DEFAULT_COUNTRY>;

        if $r4 == $r5 goto label1;

        $i6 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        $i7 = virtualinvoke r1.<java.lang.StringBuilder: int indexOf(java.lang.String)>(r3);

        $i8 = virtualinvoke r3.<java.lang.String: int length()>();

        i9 = $i7 + $i8;

     label1:
        i10 = 0;

     label2:
        $i11 = lengthof r2;

        if i10 >= $i11 goto label5;

        $r8 = r2[i10];

        i12 = virtualinvoke r1.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>($r8, i9);

        if i12 >= 0 goto label3;

        return 0;

     label3:
        $r9 = r2[i10];

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        i9 = i12 + $i0;

        if i10 != 0 goto label4;

        $i1 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if i9 >= $i1 goto label4;

        $i2 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        $r10 = virtualinvoke r14.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String getRegionCodeForCountryCode(int)>($i2);

        $r11 = virtualinvoke r14.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String getNddPrefixForRegion(java.lang.String,boolean)>($r10, 1);

        if $r11 == null goto label4;

        $c3 = virtualinvoke r1.<java.lang.StringBuilder: char charAt(int)>(i9);

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c3);

        if $z1 == 0 goto label4;

        r15 = virtualinvoke r14.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String getNationalSignificantNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber)>(r0);

        $r12 = r2[i10];

        $i4 = virtualinvoke $r12.<java.lang.String: int length()>();

        $i5 = i9 - $i4;

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String substring(int)>($i5);

        $z2 = virtualinvoke $r13.<java.lang.String: boolean startsWith(java.lang.String)>(r15);

        return $z2;

     label4:
        i10 = i10 + 1;

        goto label2;

     label5:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String substring(int)>(i9);

        $r7 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getExtension()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>($r7);

        return $z0;
    }

    static boolean containsMoreThanOneSlashInNationalNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber, java.lang.String)
    {
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r0;
        java.lang.String r1, $r4, $r5, $r6, $r7;
        int i0, i1, $i2, $i3, $i4;
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource $r2, $r3, $r8, $r9;
        boolean $z0, $z1, z2;

        r0 := @parameter0: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47);

        if i0 >= 0 goto label1;

        return 0;

     label1:
        $i2 = i0 + 1;

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(47, $i2);

        if i1 >= 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource getCountryCodeSource()>();

        $r3 = <com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource FROM_NUMBER_WITH_PLUS_SIGN>;

        if $r2 == $r3 goto label4;

        $r8 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource getCountryCodeSource()>();

        $r9 = <com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource FROM_NUMBER_WITHOUT_PLUS_SIGN>;

        if $r8 != $r9 goto label3;

        goto label4;

     label3:
        z2 = 0;

        goto label5;

     label4:
        z2 = 1;

     label5:
        if z2 == 0 goto label6;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r5 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String normalizeDigitsOnly(java.lang.CharSequence)>($r4);

        $i3 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label6;

        $i4 = i1 + 1;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i4);

        $z1 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        return $z1;

     label6:
        return 1;
    }

    static boolean containsOnlyValidXChars(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber, java.lang.String, com.android.internal.telephony.phonenumbers.PhoneNumberUtil)
    {
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r0;
        java.lang.String r1, $r3, $r6, $r7, $r8;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil r2;
        char c0, c6;
        int $i1, $i2, $i3, i4, i5, i7;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil$MatchType $r4, $r5;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.telephony.phonenumbers.PhoneNumberUtil;

        i4 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if i4 >= $i2 goto label6;

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        if c0 == 120 goto label2;

        i5 = i4;

        if c0 != 88 goto label5;

     label2:
        $i3 = i4 + 1;

        c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        if c6 == 120 goto label4;

        if c6 != 88 goto label3;

        goto label4;

     label3:
        i5 = i4;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i4);

        $r7 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String normalizeDigitsOnly(java.lang.CharSequence)>($r6);

        $r8 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getExtension()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label5;

        return 0;

     label4:
        i7 = i4 + 1;

        i5 = i7;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i7);

        $r4 = virtualinvoke r2.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber,java.lang.CharSequence)>(r0, $r3);

        $r5 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil$MatchType: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$MatchType NSN_MATCH>;

        if $r4 == $r5 goto label5;

        return 0;

     label5:
        i4 = i5 + 1;

        goto label1;

     label6:
        return 1;
    }

    private com.android.internal.telephony.phonenumbers.PhoneNumberMatch extractInnerMatch(java.lang.CharSequence, int)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher r0;
        java.lang.CharSequence r1, $r7, $r9, $r10;
        int i0, i1, $i4, $i5, $i8, i11;
        java.util.regex.Pattern[] r2;
        java.util.regex.Matcher r3;
        java.util.regex.Pattern $r4, $r5, $r8;
        boolean $z0, z1, z2;
        long $l2, $l6, $l7, $l9, $l10;
        byte $b3;
        java.lang.String $r6;
        com.android.internal.telephony.phonenumbers.PhoneNumberMatch r11, r12;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r2 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern[] INNER_MATCHES>;

        i1 = lengthof r2;

        i11 = 0;

     label1:
        if i11 >= i1 goto label7;

        $r4 = r2[i11];

        r3 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        z1 = 1;

     label2:
        $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label6;

        $l2 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: long maxTries>;

        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label6;

        z2 = z1;

        if z1 == 0 goto label4;

        $r8 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.util.regex.Pattern UNWANTED_END_CHAR_PATTERN>;

        $i8 = virtualinvoke r3.<java.util.regex.Matcher: int start()>();

        $r9 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i8);

        $r10 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.CharSequence trimAfterFirstMatch(java.util.regex.Pattern,java.lang.CharSequence)>($r8, $r9);

        r11 = specialinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatch parseAndVerify(java.lang.CharSequence,int)>($r10, i0);

        if r11 == null goto label3;

        return r11;

     label3:
        $l9 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: long maxTries>;

        $l10 = $l9 - 1L;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: long maxTries> = $l10;

        z2 = 0;

     label4:
        $r5 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.util.regex.Pattern UNWANTED_END_CHAR_PATTERN>;

        $r6 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r7 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.CharSequence trimAfterFirstMatch(java.util.regex.Pattern,java.lang.CharSequence)>($r5, $r6);

        $i4 = virtualinvoke r3.<java.util.regex.Matcher: int start(int)>(1);

        $i5 = $i4 + i0;

        r12 = specialinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatch parseAndVerify(java.lang.CharSequence,int)>($r7, $i5);

        if r12 == null goto label5;

        return r12;

     label5:
        $l6 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: long maxTries>;

        $l7 = $l6 - 1L;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: long maxTries> = $l7;

        z1 = z2;

        goto label2;

     label6:
        i11 = i11 + 1;

        goto label1;

     label7:
        return null;
    }

    private com.android.internal.telephony.phonenumbers.PhoneNumberMatch extractMatch(java.lang.CharSequence, int)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher r0;
        java.lang.CharSequence r1, $r7;
        int i0, $i1, $i2;
        java.util.regex.Pattern $r2, $r4, $r9;
        java.util.regex.Matcher $r3, $r5, $r10;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.phonenumbers.PhoneNumberMatch $r6, r12;
        java.lang.String $r8, r11;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r2 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern SLASH_SEPARATED_DATES>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern TIME_STAMPS>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z1 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label2;

        $r7 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.CharSequence text>;

        $r8 = interfaceinvoke $r7.<java.lang.CharSequence: java.lang.String toString()>();

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i2 = $i1 + i0;

        r11 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i2);

        $r9 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern TIME_STAMPS_SUFFIX>;

        $r10 = virtualinvoke $r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r11);

        $z2 = virtualinvoke $r10.<java.util.regex.Matcher: boolean lookingAt()>();

        if $z2 == 0 goto label2;

        return null;

     label2:
        r12 = specialinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatch parseAndVerify(java.lang.CharSequence,int)>(r1, i0);

        if r12 == null goto label3;

        return r12;

     label3:
        $r6 = specialinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatch extractInnerMatch(java.lang.CharSequence,int)>(r1, i0);

        return $r6;
    }

    private com.android.internal.telephony.phonenumbers.PhoneNumberMatch find(int)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher r0;
        java.util.regex.Matcher r1;
        com.android.internal.telephony.phonenumbers.PhoneNumberMatch r2;
        java.lang.CharSequence $r3, $r5, r7, r8;
        java.util.regex.Pattern $r4, $r6;
        long $l0, $l4, $l5;
        byte $b1;
        boolean $z0;
        int $i2, $i3, i6, i7;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher;

        i6 := @parameter0: int;

        $r4 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern PATTERN>;

        $r3 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.CharSequence text>;

        r1 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

     label1:
        $l0 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: long maxTries>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label3;

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find(int)>(i6);

        if $z0 == 0 goto label3;

        i7 = virtualinvoke r1.<java.util.regex.Matcher: int start()>();

        $r5 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.CharSequence text>;

        $i2 = virtualinvoke r1.<java.util.regex.Matcher: int end()>();

        r7 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i7, $i2);

        $r6 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.util.regex.Pattern SECOND_NUMBER_START_PATTERN>;

        r8 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.CharSequence trimAfterFirstMatch(java.util.regex.Pattern,java.lang.CharSequence)>($r6, r7);

        r2 = specialinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatch extractMatch(java.lang.CharSequence,int)>(r8, i7);

        if r2 == null goto label2;

        return r2;

     label2:
        $i3 = interfaceinvoke r8.<java.lang.CharSequence: int length()>();

        i6 = i7 + $i3;

        $l4 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: long maxTries>;

        $l5 = $l4 - 1L;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: long maxTries> = $l5;

        goto label1;

     label3:
        return null;
    }

    private static java.lang.String[] getNationalNumberGroups(com.android.internal.telephony.phonenumbers.PhoneNumberUtil, com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber)
    {
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r0;
        int i0, $i1, $i2, i3;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberFormat $r1;
        java.lang.String $r2, r5;
        java.lang.String[] $r3;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil r4;

        r4 := @parameter0: com.android.internal.telephony.phonenumbers.PhoneNumberUtil;

        r0 := @parameter1: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber;

        $r1 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberFormat RFC3966>;

        r5 = virtualinvoke r4.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String format(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber,com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)>(r0, $r1);

        i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(59);

        i3 = i0;

        if i0 >= 0 goto label1;

        i3 = virtualinvoke r5.<java.lang.String: int length()>();

     label1:
        $i1 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(45);

        $i2 = $i1 + 1;

        $r2 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>($i2, i3);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        return $r3;
    }

    private static java.lang.String[] getNationalNumberGroups(com.android.internal.telephony.phonenumbers.PhoneNumberUtil, com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber, com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil r0;
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r1;
        com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat r2;
        java.lang.String $r3, $r5;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberFormat $r4;
        java.lang.String[] $r6;

        r0 := @parameter0: com.android.internal.telephony.phonenumbers.PhoneNumberUtil;

        r1 := @parameter1: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber;

        r2 := @parameter2: com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String getNationalSignificantNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber)>(r1);

        $r4 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberFormat RFC3966>;

        $r5 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String formatNsnUsingPattern(java.lang.String,com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat,com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)>($r3, r2, $r4);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        return $r6;
    }

    private static boolean isInvalidPunctuationSymbol(char)
    {
        char c0;
        int $i1;
        boolean z0;

        c0 := @parameter0: char;

        if c0 == 37 goto label2;

        $i1 = staticinvoke <java.lang.Character: int getType(char)>(c0);

        if $i1 != 26 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    static boolean isLatinLetter(char)
    {
        char c0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.lang.Character$UnicodeBlock r0, $r1, $r2, $r3, $r4, $r5, $r6;
        int $i1;

        c0 := @parameter0: char;

        z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c0);

        z7 = 0;

        if z0 != 0 goto label1;

        $i1 = staticinvoke <java.lang.Character: int getType(char)>(c0);

        if $i1 == 6 goto label1;

        return 0;

     label1:
        r0 = staticinvoke <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock of(char)>(c0);

        $r1 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock BASIC_LATIN>;

        $z1 = virtualinvoke r0.<java.lang.Character$UnicodeBlock: boolean equals(java.lang.Object)>($r1);

        if $z1 != 0 goto label2;

        $r2 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock LATIN_1_SUPPLEMENT>;

        $z2 = virtualinvoke r0.<java.lang.Character$UnicodeBlock: boolean equals(java.lang.Object)>($r2);

        if $z2 != 0 goto label2;

        $r3 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock LATIN_EXTENDED_A>;

        $z3 = virtualinvoke r0.<java.lang.Character$UnicodeBlock: boolean equals(java.lang.Object)>($r3);

        if $z3 != 0 goto label2;

        $r4 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock LATIN_EXTENDED_ADDITIONAL>;

        $z4 = virtualinvoke r0.<java.lang.Character$UnicodeBlock: boolean equals(java.lang.Object)>($r4);

        if $z4 != 0 goto label2;

        $r5 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock LATIN_EXTENDED_B>;

        $z5 = virtualinvoke r0.<java.lang.Character$UnicodeBlock: boolean equals(java.lang.Object)>($r5);

        if $z5 != 0 goto label2;

        $r6 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock COMBINING_DIACRITICAL_MARKS>;

        $z6 = virtualinvoke r0.<java.lang.Character$UnicodeBlock: boolean equals(java.lang.Object)>($r6);

        if $z6 == 0 goto label3;

     label2:
        z7 = 1;

     label3:
        return z7;
    }

    static boolean isNationalPrefixPresentIfRequired(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber, com.android.internal.telephony.phonenumbers.PhoneNumberUtil)
    {
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r0;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil r1;
        com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata r2;
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource $r3, $r4;
        int $i0, $i1;
        java.lang.String $r5, $r7, $r8, $r10, $r11, r12;
        java.util.List $r6;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r9;
        com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat r13;

        r0 := @parameter0: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber;

        r1 := @parameter1: com.android.internal.telephony.phonenumbers.PhoneNumberUtil;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource getCountryCodeSource()>();

        $r4 = <com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource FROM_DEFAULT_COUNTRY>;

        if $r3 == $r4 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        $r5 = virtualinvoke r1.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String getRegionCodeForCountryCode(int)>($i0);

        r2 = virtualinvoke r1.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String)>($r5);

        if r2 != null goto label2;

        return 1;

     label2:
        r12 = virtualinvoke r1.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String getNationalSignificantNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber)>(r0);

        $r6 = virtualinvoke r2.<com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata: java.util.List numberFormats()>();

        r13 = virtualinvoke r1.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat chooseFormattingPatternForNumber(java.util.List,java.lang.String)>($r6, r12);

        if r13 == null goto label5;

        $r7 = virtualinvoke r13.<com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getNationalPrefixFormattingRule()>();

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 <= 0 goto label5;

        $z0 = virtualinvoke r13.<com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat: boolean getNationalPrefixOptionalWhenFormatting()>();

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $r8 = virtualinvoke r13.<com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getNationalPrefixFormattingRule()>();

        $z1 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberUtil: boolean formattingRuleHasFirstGroupOnly(java.lang.String)>($r8);

        if $z1 == 0 goto label4;

        return 1;

     label4:
        $r9 = new java.lang.StringBuilder;

        $r10 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getRawInput()>();

        $r11 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String normalizeDigitsOnly(java.lang.CharSequence)>($r10);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $z2 = virtualinvoke r1.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: boolean maybeStripNationalPrefixAndCarrierCode(java.lang.StringBuilder,com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder)>($r9, r2, null);

        return $z2;

     label5:
        return 1;
    }

    private static java.lang.String limit(int, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r7;
        java.lang.IllegalArgumentException $r8;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i1 <= 0 goto label1;

        if i1 < i0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;
    }

    private com.android.internal.telephony.phonenumbers.PhoneNumberMatch parseAndVerify(java.lang.CharSequence, int)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher r0;
        int i0, i1, $i2, $i3, $i5, $i6;
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r1;
        java.util.regex.Pattern $r2, $r4, $r14;
        java.util.regex.Matcher $r3, $r5, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency $r6, $r7, $r22;
        com.android.internal.telephony.phonenumbers.PhoneNumberMatch $r11;
        java.lang.String $r12, $r21;
        java.lang.CharSequence $r13, $r16, r18, $r19;
        com.android.internal.telephony.phonenumbers.NumberParseException $r17;
        char c4, c7;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil $r20, $r23;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher;

        r18 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

     label01:
        $r2 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern MATCHING_BRACKETS>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r18);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label12;

        $r4 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern PUB_PAGES>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r18);

        $z1 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label03;

     label02:
        goto label12;

     label03:
        $r7 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency leniency>;

        $r6 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency VALID>;

        $i2 = virtualinvoke $r7.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency: int compareTo(java.lang.Enum)>($r6);

        if $i2 < 0 goto label09;

     label04:
        if i0 <= 0 goto label07;

     label05:
        $r14 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.util.regex.Pattern LEAD_CLASS>;

        $r15 = virtualinvoke $r14.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r18);

        $z4 = virtualinvoke $r15.<java.util.regex.Matcher: boolean lookingAt()>();

        if $z4 != 0 goto label07;

        $r16 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.CharSequence text>;

        $i3 = i0 - 1;

        c4 = interfaceinvoke $r16.<java.lang.CharSequence: char charAt(int)>($i3);

        $z5 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: boolean isInvalidPunctuationSymbol(char)>(c4);

        if $z5 != 0 goto label06;

        $z6 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: boolean isLatinLetter(char)>(c4);

        if $z6 == 0 goto label07;

     label06:
        return null;

     label07:
        $i5 = interfaceinvoke r18.<java.lang.CharSequence: int length()>();

        i1 = $i5 + i0;

        $r19 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.CharSequence text>;

        $i6 = interfaceinvoke $r19.<java.lang.CharSequence: int length()>();

        if i1 >= $i6 goto label09;

        $r13 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.CharSequence text>;

        c7 = interfaceinvoke $r13.<java.lang.CharSequence: char charAt(int)>(i1);

        $z2 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: boolean isInvalidPunctuationSymbol(char)>(c7);

        if $z2 != 0 goto label08;

        $z3 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: boolean isLatinLetter(char)>(c7);

        if $z3 == 0 goto label09;

     label08:
        return null;

     label09:
        $r20 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberUtil phoneUtil>;

        $r21 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.String preferredRegion>;

        r1 = virtualinvoke $r20.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber parseAndKeepRawInput(java.lang.CharSequence,java.lang.String)>(r18, $r21);

        $r22 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency leniency>;

        $r23 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberUtil phoneUtil>;

        $z7 = virtualinvoke $r22.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil$Leniency: boolean verify(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber,java.lang.CharSequence,com.android.internal.telephony.phonenumbers.PhoneNumberUtil,com.android.internal.telephony.phonenumbers.PhoneNumberMatcher)>(r1, r18, $r23, r0);

        if $z7 == 0 goto label11;

        virtualinvoke r1.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber clearCountryCodeSource()>();

        virtualinvoke r1.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber clearRawInput()>();

        virtualinvoke r1.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber clearPreferredDomesticCarrierCode()>();

        $r11 = new com.android.internal.telephony.phonenumbers.PhoneNumberMatch;

        $r12 = interfaceinvoke r18.<java.lang.CharSequence: java.lang.String toString()>();

        specialinvoke $r11.<com.android.internal.telephony.phonenumbers.PhoneNumberMatch: void <init>(int,java.lang.String,com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber)>(i0, $r12, r1);

     label10:
        return $r11;

     label11:
        goto label14;

     label12:
        return null;

     label13:
        $r17 := @caughtexception;

     label14:
        return null;

        catch com.android.internal.telephony.phonenumbers.NumberParseException from label01 to label02 with label13;
        catch com.android.internal.telephony.phonenumbers.NumberParseException from label03 to label04 with label13;
        catch com.android.internal.telephony.phonenumbers.NumberParseException from label05 to label06 with label13;
        catch com.android.internal.telephony.phonenumbers.NumberParseException from label07 to label08 with label13;
        catch com.android.internal.telephony.phonenumbers.NumberParseException from label09 to label10 with label13;
    }

    private static java.lang.CharSequence trimAfterFirstMatch(java.util.regex.Pattern, java.lang.CharSequence)
    {
        java.lang.CharSequence r0, r3;
        java.util.regex.Matcher r1;
        boolean $z0;
        int $i0;
        java.util.regex.Pattern r2;

        r2 := @parameter0: java.util.regex.Pattern;

        r0 := @parameter1: java.lang.CharSequence;

        r1 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        r3 = r0;

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.util.regex.Matcher: int start()>();

        r3 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

     label1:
        return r3;
    }

    boolean checkNumberGroupingIsValid(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber, java.lang.CharSequence, com.android.internal.telephony.phonenumbers.PhoneNumberUtil, com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$NumberGroupingChecker)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher r0;
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r1;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil r2;
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$NumberGroupingChecker r3;
        java.lang.StringBuilder r4;
        com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat r5;
        java.lang.String[] $r6, $r9;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        java.util.List $r7;
        java.lang.Object $r8;
        com.android.internal.telephony.phonenumbers.internal.RegexCache $r10;
        java.lang.String $r11, r16;
        java.util.regex.Pattern $r12;
        java.util.regex.Matcher $r13;
        java.lang.CharSequence r14;
        com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata r15;
        java.util.Iterator r17;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher;

        r1 := @parameter0: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber;

        r14 := @parameter1: java.lang.CharSequence;

        r2 := @parameter2: com.android.internal.telephony.phonenumbers.PhoneNumberUtil;

        r3 := @parameter3: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$NumberGroupingChecker;

        r4 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.StringBuilder normalizeDigits(java.lang.CharSequence,boolean)>(r14, 1);

        $r6 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.String[] getNationalNumberGroups(com.android.internal.telephony.phonenumbers.PhoneNumberUtil,com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber)>(r2, r1);

        $z0 = interfaceinvoke r3.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$NumberGroupingChecker: boolean checkGroups(com.android.internal.telephony.phonenumbers.PhoneNumberUtil,com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber,java.lang.StringBuilder,java.lang.String[])>(r2, r1, r4, $r6);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r1.<com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        r15 = staticinvoke <com.android.internal.telephony.phonenumbers.MetadataManager: com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata getAlternateFormatsForCountry(int)>($i0);

        r16 = virtualinvoke r2.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String getNationalSignificantNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber)>(r1);

        if r15 == null goto label5;

        $r7 = virtualinvoke r15.<com.android.internal.telephony.phonenumbers.Phonemetadata$PhoneMetadata: java.util.List numberFormats()>();

        r17 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r8 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat) $r8;

        $i1 = virtualinvoke r5.<com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat: int leadingDigitsPatternSize()>();

        if $i1 <= 0 goto label3;

        $r10 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.internal.RegexCache regexCache>;

        $r11 = virtualinvoke r5.<com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getLeadingDigitsPattern(int)>(0);

        $r12 = virtualinvoke $r10.<com.android.internal.telephony.phonenumbers.internal.RegexCache: java.util.regex.Pattern getPatternForRegex(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r16);

        $z2 = virtualinvoke $r13.<java.util.regex.Matcher: boolean lookingAt()>();

        if $z2 != 0 goto label3;

        goto label2;

     label3:
        $r9 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: java.lang.String[] getNationalNumberGroups(com.android.internal.telephony.phonenumbers.PhoneNumberUtil,com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber,com.android.internal.telephony.phonenumbers.Phonemetadata$NumberFormat)>(r2, r1, r5);

        $z1 = interfaceinvoke r3.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$NumberGroupingChecker: boolean checkGroups(com.android.internal.telephony.phonenumbers.PhoneNumberUtil,com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber,java.lang.StringBuilder,java.lang.String[])>(r2, r1, r4, $r9);

        if $z1 == 0 goto label4;

        return 1;

     label4:
        goto label2;

     label5:
        return 0;
    }

    public boolean hasNext()
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher r0;
        com.android.internal.telephony.phonenumbers.PhoneNumberMatch r1;
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher;

        $r3 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State state>;

        $r2 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State NOT_READY>;

        if $r3 != $r2 goto label2;

        $i0 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: int searchIndex>;

        r1 = specialinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatch find(int)>($i0);

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatch lastMatch> = r1;

        if r1 != null goto label1;

        $r5 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State DONE>;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State state> = $r5;

        goto label2;

     label1:
        $i1 = virtualinvoke r1.<com.android.internal.telephony.phonenumbers.PhoneNumberMatch: int end()>();

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: int searchIndex> = $i1;

        $r4 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State READY>;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State state> = $r4;

     label2:
        $r6 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State state>;

        $r7 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State READY>;

        if $r6 != $r7 goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;
    }

    public com.android.internal.telephony.phonenumbers.PhoneNumberMatch next()
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher r0;
        com.android.internal.telephony.phonenumbers.PhoneNumberMatch r1;
        boolean $z0;
        java.util.NoSuchElementException $r2;
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State $r3;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: boolean hasNext()>();

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatch lastMatch>;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatch lastMatch> = null;

        $r3 = <com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State NOT_READY>;

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher$State state> = $r3;

        return r1;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;
    }

    public volatile java.lang.Object next()
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher r0;
        com.android.internal.telephony.phonenumbers.PhoneNumberMatch $r1;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberMatcher: com.android.internal.telephony.phonenumbers.PhoneNumberMatch next()>();

        return $r1;
    }

    public void remove()
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberMatcher r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberMatcher;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
}
