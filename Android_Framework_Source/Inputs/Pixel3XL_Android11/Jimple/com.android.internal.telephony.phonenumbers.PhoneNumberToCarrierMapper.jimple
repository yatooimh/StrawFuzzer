public class com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper extends java.lang.Object
{
    private static final java.lang.String MAPPING_DATA_DIRECTORY;
    private static com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper instance;
    private final com.android.internal.telephony.phonenumbers.PhoneNumberUtil phoneUtil;
    private com.android.internal.telephony.phonenumbers.prefixmapper.PrefixFileReader prefixFileReader;

    static void <clinit>()
    {
        <com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: java.lang.String MAPPING_DATA_DIRECTORY> = "/com/android/internal/telephony/phonenumbers/carrier/data/";

        <com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper instance> = null;

        return;
    }

    void <init>(java.lang.String)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper r0;
        java.lang.String r1;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil $r2;
        com.android.internal.telephony.phonenumbers.prefixmapper.PrefixFileReader $r3;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: com.android.internal.telephony.phonenumbers.prefixmapper.PrefixFileReader prefixFileReader> = null;

        $r2 = staticinvoke <com.android.internal.telephony.phonenumbers.PhoneNumberUtil: com.android.internal.telephony.phonenumbers.PhoneNumberUtil getInstance()>();

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: com.android.internal.telephony.phonenumbers.PhoneNumberUtil phoneUtil> = $r2;

        $r3 = new com.android.internal.telephony.phonenumbers.prefixmapper.PrefixFileReader;

        specialinvoke $r3.<com.android.internal.telephony.phonenumbers.prefixmapper.PrefixFileReader: void <init>(java.lang.String)>(r1);

        r0.<com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: com.android.internal.telephony.phonenumbers.prefixmapper.PrefixFileReader prefixFileReader> = $r3;

        return;
    }

    public static com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper getInstance()
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper $r0, r2, r3;
        java.lang.Throwable $r1;

        entermonitor class "Lcom/android/internal/telephony/phonenumbers/PhoneNumberToCarrierMapper;";

     label1:
        $r0 = <com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper instance>;

        if $r0 != null goto label2;

        r2 = new com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper;

        specialinvoke r2.<com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: void <init>(java.lang.String)>("/com/android/internal/telephony/phonenumbers/carrier/data/");

        <com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper instance> = r2;

     label2:
        r3 = <com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper instance>;

     label3:
        exitmonitor class "Lcom/android/internal/telephony/phonenumbers/PhoneNumberToCarrierMapper;";

        return r3;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/android/internal/telephony/phonenumbers/PhoneNumberToCarrierMapper;";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private boolean isMobile(com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper r0;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType r1, $r2, $r3, $r4;
        boolean z0;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper;

        r1 := @parameter0: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType;

        $r2 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType MOBILE>;

        if r1 == $r2 goto label2;

        $r3 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType FIXED_LINE_OR_MOBILE>;

        if r1 == $r3 goto label2;

        $r4 = <com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType PAGER>;

        if r1 != $r4 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public java.lang.String getNameForNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber, java.util.Locale)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper r0;
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r1;
        java.util.Locale r2;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil $r3;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType $r4;
        boolean $z0;
        java.lang.String $r5;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper;

        r1 := @parameter0: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber;

        r2 := @parameter1: java.util.Locale;

        $r3 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: com.android.internal.telephony.phonenumbers.PhoneNumberUtil phoneUtil>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType getNumberType(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber)>(r1);

        $z0 = specialinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: boolean isMobile(com.android.internal.telephony.phonenumbers.PhoneNumberUtil$PhoneNumberType)>($r4);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: java.lang.String getNameForValidNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale)>(r1, r2);

        return $r5;

     label1:
        return "";
    }

    public java.lang.String getNameForValidNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber, java.util.Locale)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper r0;
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r1;
        java.lang.String r2, $r4, r6;
        com.android.internal.telephony.phonenumbers.prefixmapper.PrefixFileReader $r3;
        java.util.Locale r5;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper;

        r1 := @parameter0: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber;

        r5 := @parameter1: java.util.Locale;

        r2 = virtualinvoke r5.<java.util.Locale: java.lang.String getLanguage()>();

        r6 = virtualinvoke r5.<java.util.Locale: java.lang.String getCountry()>();

        $r3 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: com.android.internal.telephony.phonenumbers.prefixmapper.PrefixFileReader prefixFileReader>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.phonenumbers.prefixmapper.PrefixFileReader: java.lang.String getDescriptionForNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, "", r6);

        return $r4;
    }

    public java.lang.String getSafeDisplayName(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber, java.util.Locale)
    {
        com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper r0;
        com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber r1;
        java.util.Locale r2;
        com.android.internal.telephony.phonenumbers.PhoneNumberUtil r3;
        java.lang.String $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper;

        r1 := @parameter0: com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber;

        r2 := @parameter1: java.util.Locale;

        r3 = r0.<com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: com.android.internal.telephony.phonenumbers.PhoneNumberUtil phoneUtil>;

        $r4 = virtualinvoke r3.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: java.lang.String getRegionCodeForNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber)>(r1);

        $z0 = virtualinvoke r3.<com.android.internal.telephony.phonenumbers.PhoneNumberUtil: boolean isMobileNumberPortableRegion(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r5 = virtualinvoke r0.<com.android.internal.telephony.phonenumbers.PhoneNumberToCarrierMapper: java.lang.String getNameForNumber(com.android.internal.telephony.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale)>(r1, r2);

        return $r5;
    }
}
