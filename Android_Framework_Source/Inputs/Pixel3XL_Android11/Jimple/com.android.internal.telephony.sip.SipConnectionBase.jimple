abstract class com.android.internal.telephony.sip.SipConnectionBase extends com.android.internal.telephony.Connection
{
    private static final boolean DBG;
    private static final java.lang.String LOG_TAG;
    private static final boolean VDBG;
    private long mConnectTime;
    private long mConnectTimeReal;
    private long mCreateTime;
    private long mDisconnectTime;
    private long mDuration;
    private long mHoldingStartTime;

    void <init>(java.lang.String)
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        java.lang.String r1, $r5, $r7, $r8;
        java.lang.StringBuilder $r3;
        long $l0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>(int)>(3);

        r0.<com.android.internal.telephony.sip.SipConnectionBase: long mDuration> = -1L;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SipConnectionBase: ctor dialString=");

        $r5 = staticinvoke <com.android.internal.telephony.sip.SipPhone: java.lang.String hidePii(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipConnectionBase: void log(java.lang.String)>($r7);

        $r8 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>(r1);

        r0.<com.android.internal.telephony.sip.SipConnectionBase: java.lang.String mPostDialString> = $r8;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.sip.SipConnectionBase: long mCreateTime> = $l0;

        return;
    }

    private void log(java.lang.String)
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SipConnBase", r1);

        return;
    }

    public void cancelPostDial()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        specialinvoke r0.<com.android.internal.telephony.sip.SipConnectionBase: void log(java.lang.String)>("cancelPostDial: ignore");

        return;
    }

    public long getConnectTime()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        $l0 = r0.<com.android.internal.telephony.sip.SipConnectionBase: long mConnectTime>;

        return $l0;
    }

    public long getConnectTimeReal()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        $l0 = r0.<com.android.internal.telephony.sip.SipConnectionBase: long mConnectTimeReal>;

        return $l0;
    }

    public long getCreateTime()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        $l0 = r0.<com.android.internal.telephony.sip.SipConnectionBase: long mCreateTime>;

        return $l0;
    }

    public long getDisconnectTime()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        $l0 = r0.<com.android.internal.telephony.sip.SipConnectionBase: long mDisconnectTime>;

        return $l0;
    }

    public long getDurationMillis()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        long $l0, $l2, $l4, $l5, l6;
        byte $b1, $b3;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        $l0 = r0.<com.android.internal.telephony.sip.SipConnectionBase: long mConnectTimeReal>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        l6 = 0L;

        goto label3;

     label1:
        $l2 = r0.<com.android.internal.telephony.sip.SipConnectionBase: long mDuration>;

        $b3 = $l2 cmp 0L;

        if $b3 >= 0 goto label2;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l5 = r0.<com.android.internal.telephony.sip.SipConnectionBase: long mConnectTimeReal>;

        l6 = $l4 - $l5;

        goto label3;

     label2:
        l6 = r0.<com.android.internal.telephony.sip.SipConnectionBase: long mDuration>;

     label3:
        return l6;
    }

    public long getHoldDurationMillis()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        com.android.internal.telephony.Call$State $r1, $r2;
        long $l0, $l1, l2;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.Call$State getState()>();

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r1 == $r2 goto label1;

        l2 = 0L;

        goto label2;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = r0.<com.android.internal.telephony.sip.SipConnectionBase: long mHoldingStartTime>;

        l2 = $l0 - $l1;

     label2:
        return l2;
    }

    public long getHoldingStartTime()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        $l0 = r0.<com.android.internal.telephony.sip.SipConnectionBase: long mHoldingStartTime>;

        return $l0;
    }

    public int getNumberPresentation()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        return 1;
    }

    public com.android.internal.telephony.Connection getOrigConnection()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        return null;
    }

    protected abstract com.android.internal.telephony.Phone getPhone();

    public int getPreciseDisconnectCause()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        return 0;
    }

    public com.android.internal.telephony.UUSInfo getUUSInfo()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        return null;
    }

    public java.lang.String getVendorDisconnectCause()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        return null;
    }

    public boolean isMultiparty()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        return 0;
    }

    public void proceedAfterWaitChar()
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        specialinvoke r0.<com.android.internal.telephony.sip.SipConnectionBase: void log(java.lang.String)>("proceedAfterWaitChar: ignore");

        return;
    }

    public void proceedAfterWildChar(java.lang.String)
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.internal.telephony.sip.SipConnectionBase: void log(java.lang.String)>("proceedAfterWildChar: ignore");

        return;
    }

    void setDisconnectCause(int)
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDisconnectCause: prev=");

        $i1 = r0.<com.android.internal.telephony.sip.SipConnectionBase: int mCause>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipConnectionBase: void log(java.lang.String)>($r7);

        r0.<com.android.internal.telephony.sip.SipConnectionBase: int mCause> = i0;

        return;
    }

    protected void setState(com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.sip.SipConnectionBase r0;
        com.android.internal.telephony.Call$State r1;
        int i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        int[] $r7;
        long $l2, $l4, $l5, $l6, $l7, $l8;
        byte $b3;

        r0 := @this: com.android.internal.telephony.sip.SipConnectionBase;

        r1 := @parameter0: com.android.internal.telephony.Call$State;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setState: state=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipConnectionBase: void log(java.lang.String)>($r6);

        $r7 = <com.android.internal.telephony.sip.SipConnectionBase$1: int[] $SwitchMap$com$android$internal$telephony$Call$State>;

        $i1 = virtualinvoke r1.<com.android.internal.telephony.Call$State: int ordinal()>();

        i0 = $r7[$i1];

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        goto label4;

     label1:
        $l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.sip.SipConnectionBase: long mHoldingStartTime> = $l8;

        goto label4;

     label2:
        $l6 = virtualinvoke r0.<com.android.internal.telephony.sip.SipConnectionBase: long getDurationMillis()>();

        r0.<com.android.internal.telephony.sip.SipConnectionBase: long mDuration> = $l6;

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.sip.SipConnectionBase: long mDisconnectTime> = $l7;

        goto label4;

     label3:
        $l2 = r0.<com.android.internal.telephony.sip.SipConnectionBase: long mConnectTime>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label4;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.sip.SipConnectionBase: long mConnectTimeReal> = $l4;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.sip.SipConnectionBase: long mConnectTime> = $l5;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.sip.SipConnectionBase: boolean VDBG> = 0;

        <com.android.internal.telephony.sip.SipConnectionBase: java.lang.String LOG_TAG> = "SipConnBase";

        <com.android.internal.telephony.sip.SipConnectionBase: boolean DBG> = 1;

        return;
    }
}
