public abstract class com.android.internal.telephony.uicc.IccRecords extends android.os.Handler implements com.android.internal.telephony.uicc.IccConstants
{
    public static final int CALL_FORWARDING_STATUS_DISABLED;
    public static final int CALL_FORWARDING_STATUS_ENABLED;
    public static final int CALL_FORWARDING_STATUS_UNKNOWN;
    public static final int CARRIER_NAME_DISPLAY_CONDITION_BITMASK_PLMN;
    public static final int CARRIER_NAME_DISPLAY_CONDITION_BITMASK_SPN;
    protected static final boolean DBG;
    public static final int DEFAULT_CARRIER_NAME_DISPLAY_CONDITION;
    public static final int DEFAULT_VOICE_MESSAGE_COUNT;
    private static final int EVENT_AKA_AUTHENTICATE_DONE;
    protected static final int EVENT_APP_DETECTED;
    protected static final int EVENT_APP_LOCKED;
    protected static final int EVENT_APP_NETWORK_LOCKED;
    protected static final int EVENT_APP_READY;
    public static final int EVENT_CFI;
    public static final int EVENT_GET_ICC_RECORD_DONE;
    protected static final int EVENT_GET_SMS_RECORD_SIZE_DONE;
    public static final int EVENT_MWI;
    public static final int EVENT_REFRESH;
    public static final int EVENT_SPN;
    protected static final int HANDLER_ACTION_BASE;
    protected static final int HANDLER_ACTION_NONE;
    protected static final int HANDLER_ACTION_SEND_RESPONSE;
    private static final long ICC_SIM_CHALLENGE_TIMEOUT_MILLIS;
    public static final int INVALID_CARRIER_NAME_DISPLAY_CONDITION_BITMASK;
    protected static final int LOCKED_RECORDS_REQ_REASON_LOCKED;
    protected static final int LOCKED_RECORDS_REQ_REASON_NETWORK_LOCKED;
    protected static final int LOCKED_RECORDS_REQ_REASON_NONE;
    private static final java.lang.String[] MCCMNC_CODES_HAVING_3DIGITS_MNC;
    protected static final int SYSTEM_EVENT_BASE;
    protected static final int UNINITIALIZED;
    protected static final int UNKNOWN;
    public static final int UNKNOWN_VOICE_MESSAGE_COUNT;
    protected static final boolean VDBG;
    protected static java.util.concurrent.atomic.AtomicInteger sNextRequestId;
    protected com.android.internal.telephony.uicc.AdnRecordCache mAdnCache;
    protected int mCarrierNameDisplayCondition;
    com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride;
    protected com.android.internal.telephony.CommandsInterface mCi;
    protected android.content.Context mContext;
    protected java.util.concurrent.atomic.AtomicBoolean mDestroyed;
    protected java.lang.String[] mEhplmns;
    protected com.android.internal.telephony.uicc.IccFileHandler mFh;
    protected java.lang.String[] mFplmns;
    protected java.lang.String mFullIccId;
    protected java.lang.String mGid1;
    protected java.lang.String mGid2;
    protected com.android.internal.telephony.uicc.PlmnActRecord[] mHplmnActRecords;
    public java.lang.String mIccId;
    protected java.lang.String mImsi;
    protected com.android.internal.telephony.RegistrantList mImsiReadyRegistrants;
    protected boolean mIsVoiceMailFixed;
    protected java.util.concurrent.atomic.AtomicBoolean mLoaded;
    protected com.android.internal.telephony.RegistrantList mLockedRecordsLoadedRegistrants;
    protected int mLockedRecordsReqReason;
    protected int mMailboxIndex;
    protected int mMncLength;
    protected java.lang.String mMsisdn;
    protected java.lang.String mMsisdnTag;
    protected com.android.internal.telephony.RegistrantList mNetworkLockedRecordsLoadedRegistrants;
    protected com.android.internal.telephony.RegistrantList mNetworkSelectionModeAutomaticRegistrants;
    protected java.lang.String mNewMsisdn;
    protected java.lang.String mNewMsisdnTag;
    protected com.android.internal.telephony.RegistrantList mNewSmsRegistrants;
    protected java.lang.String mNewVoiceMailNum;
    protected java.lang.String mNewVoiceMailTag;
    protected com.android.internal.telephony.uicc.PlmnActRecord[] mOplmnActRecords;
    protected com.android.internal.telephony.uicc.UiccCardApplication mParentApp;
    protected final java.util.HashMap mPendingTransactions;
    protected com.android.internal.telephony.uicc.PlmnActRecord[] mPlmnActRecords;
    protected java.lang.String mPnnHomeName;
    protected java.lang.String mPrefLang;
    protected com.android.internal.telephony.RegistrantList mRecordsEventsRegistrants;
    protected com.android.internal.telephony.RegistrantList mRecordsLoadedRegistrants;
    protected com.android.internal.telephony.RegistrantList mRecordsOverrideRegistrants;
    protected boolean mRecordsRequested;
    protected int mRecordsToLoad;
    protected int mSmsCountOnIcc;
    protected java.lang.String[] mSpdi;
    private java.lang.String mSpn;
    protected com.android.internal.telephony.RegistrantList mSpnUpdatedRegistrants;
    protected android.telephony.TelephonyManager mTelephonyManager;
    protected java.lang.String mVoiceMailNum;
    protected java.lang.String mVoiceMailTag;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        <com.android.internal.telephony.uicc.IccRecords: boolean VDBG> = 0;

        <com.android.internal.telephony.uicc.IccRecords: int UNKNOWN_VOICE_MESSAGE_COUNT> = -1;

        <com.android.internal.telephony.uicc.IccRecords: int UNKNOWN> = 0;

        <com.android.internal.telephony.uicc.IccRecords: int UNINITIALIZED> = -1;

        <com.android.internal.telephony.uicc.IccRecords: int SYSTEM_EVENT_BASE> = 256;

        <com.android.internal.telephony.uicc.IccRecords: int LOCKED_RECORDS_REQ_REASON_NONE> = 0;

        <com.android.internal.telephony.uicc.IccRecords: int LOCKED_RECORDS_REQ_REASON_NETWORK_LOCKED> = 2;

        <com.android.internal.telephony.uicc.IccRecords: int LOCKED_RECORDS_REQ_REASON_LOCKED> = 1;

        <com.android.internal.telephony.uicc.IccRecords: int INVALID_CARRIER_NAME_DISPLAY_CONDITION_BITMASK> = -1;

        <com.android.internal.telephony.uicc.IccRecords: long ICC_SIM_CHALLENGE_TIMEOUT_MILLIS> = 2500L;

        <com.android.internal.telephony.uicc.IccRecords: int HANDLER_ACTION_SEND_RESPONSE> = 1238273;

        <com.android.internal.telephony.uicc.IccRecords: int HANDLER_ACTION_NONE> = 1238272;

        <com.android.internal.telephony.uicc.IccRecords: int HANDLER_ACTION_BASE> = 1238272;

        <com.android.internal.telephony.uicc.IccRecords: int EVENT_SPN> = 2;

        <com.android.internal.telephony.uicc.IccRecords: int EVENT_REFRESH> = 31;

        <com.android.internal.telephony.uicc.IccRecords: int EVENT_MWI> = 0;

        <com.android.internal.telephony.uicc.IccRecords: int EVENT_GET_SMS_RECORD_SIZE_DONE> = 28;

        <com.android.internal.telephony.uicc.IccRecords: int EVENT_GET_ICC_RECORD_DONE> = 100;

        <com.android.internal.telephony.uicc.IccRecords: int EVENT_CFI> = 1;

        <com.android.internal.telephony.uicc.IccRecords: int EVENT_APP_READY> = 257;

        <com.android.internal.telephony.uicc.IccRecords: int EVENT_APP_NETWORK_LOCKED> = 259;

        <com.android.internal.telephony.uicc.IccRecords: int EVENT_APP_LOCKED> = 258;

        <com.android.internal.telephony.uicc.IccRecords: int EVENT_APP_DETECTED> = 260;

        <com.android.internal.telephony.uicc.IccRecords: int EVENT_AKA_AUTHENTICATE_DONE> = 90;

        <com.android.internal.telephony.uicc.IccRecords: int DEFAULT_VOICE_MESSAGE_COUNT> = -2;

        <com.android.internal.telephony.uicc.IccRecords: int DEFAULT_CARRIER_NAME_DISPLAY_CONDITION> = 0;

        <com.android.internal.telephony.uicc.IccRecords: boolean DBG> = 1;

        <com.android.internal.telephony.uicc.IccRecords: int CARRIER_NAME_DISPLAY_CONDITION_BITMASK_SPN> = 2;

        <com.android.internal.telephony.uicc.IccRecords: int CARRIER_NAME_DISPLAY_CONDITION_BITMASK_PLMN> = 1;

        <com.android.internal.telephony.uicc.IccRecords: int CALL_FORWARDING_STATUS_UNKNOWN> = -1;

        <com.android.internal.telephony.uicc.IccRecords: int CALL_FORWARDING_STATUS_ENABLED> = 1;

        <com.android.internal.telephony.uicc.IccRecords: int CALL_FORWARDING_STATUS_DISABLED> = 0;

        $r0 = newarray (java.lang.String)[152];

        $r0[0] = "302370";

        $r0[1] = "302720";

        $r0[2] = "310260";

        $r0[3] = "405025";

        $r0[4] = "405026";

        $r0[5] = "405027";

        $r0[6] = "405028";

        $r0[7] = "405029";

        $r0[8] = "405030";

        $r0[9] = "405031";

        $r0[10] = "405032";

        $r0[11] = "405033";

        $r0[12] = "405034";

        $r0[13] = "405035";

        $r0[14] = "405036";

        $r0[15] = "405037";

        $r0[16] = "405038";

        $r0[17] = "405039";

        $r0[18] = "405040";

        $r0[19] = "405041";

        $r0[20] = "405042";

        $r0[21] = "405043";

        $r0[22] = "405044";

        $r0[23] = "405045";

        $r0[24] = "405046";

        $r0[25] = "405047";

        $r0[26] = "405750";

        $r0[27] = "405751";

        $r0[28] = "405752";

        $r0[29] = "405753";

        $r0[30] = "405754";

        $r0[31] = "405755";

        $r0[32] = "405756";

        $r0[33] = "405799";

        $r0[34] = "405800";

        $r0[35] = "405801";

        $r0[36] = "405802";

        $r0[37] = "405803";

        $r0[38] = "405804";

        $r0[39] = "405805";

        $r0[40] = "405806";

        $r0[41] = "405807";

        $r0[42] = "405808";

        $r0[43] = "405809";

        $r0[44] = "405810";

        $r0[45] = "405811";

        $r0[46] = "405812";

        $r0[47] = "405813";

        $r0[48] = "405814";

        $r0[49] = "405815";

        $r0[50] = "405816";

        $r0[51] = "405817";

        $r0[52] = "405818";

        $r0[53] = "405819";

        $r0[54] = "405820";

        $r0[55] = "405821";

        $r0[56] = "405822";

        $r0[57] = "405823";

        $r0[58] = "405824";

        $r0[59] = "405825";

        $r0[60] = "405826";

        $r0[61] = "405827";

        $r0[62] = "405828";

        $r0[63] = "405829";

        $r0[64] = "405830";

        $r0[65] = "405831";

        $r0[66] = "405832";

        $r0[67] = "405833";

        $r0[68] = "405834";

        $r0[69] = "405835";

        $r0[70] = "405836";

        $r0[71] = "405837";

        $r0[72] = "405838";

        $r0[73] = "405839";

        $r0[74] = "405840";

        $r0[75] = "405841";

        $r0[76] = "405842";

        $r0[77] = "405843";

        $r0[78] = "405844";

        $r0[79] = "405845";

        $r0[80] = "405846";

        $r0[81] = "405847";

        $r0[82] = "405848";

        $r0[83] = "405849";

        $r0[84] = "405850";

        $r0[85] = "405851";

        $r0[86] = "405852";

        $r0[87] = "405853";

        $r0[88] = "405854";

        $r0[89] = "405855";

        $r0[90] = "405856";

        $r0[91] = "405857";

        $r0[92] = "405858";

        $r0[93] = "405859";

        $r0[94] = "405860";

        $r0[95] = "405861";

        $r0[96] = "405862";

        $r0[97] = "405863";

        $r0[98] = "405864";

        $r0[99] = "405865";

        $r0[100] = "405866";

        $r0[101] = "405867";

        $r0[102] = "405868";

        $r0[103] = "405869";

        $r0[104] = "405870";

        $r0[105] = "405871";

        $r0[106] = "405872";

        $r0[107] = "405873";

        $r0[108] = "405874";

        $r0[109] = "405875";

        $r0[110] = "405876";

        $r0[111] = "405877";

        $r0[112] = "405878";

        $r0[113] = "405879";

        $r0[114] = "405880";

        $r0[115] = "405881";

        $r0[116] = "405882";

        $r0[117] = "405883";

        $r0[118] = "405884";

        $r0[119] = "405885";

        $r0[120] = "405886";

        $r0[121] = "405908";

        $r0[122] = "405909";

        $r0[123] = "405910";

        $r0[124] = "405911";

        $r0[125] = "405912";

        $r0[126] = "405913";

        $r0[127] = "405914";

        $r0[128] = "405915";

        $r0[129] = "405916";

        $r0[130] = "405917";

        $r0[131] = "405918";

        $r0[132] = "405919";

        $r0[133] = "405920";

        $r0[134] = "405921";

        $r0[135] = "405922";

        $r0[136] = "405923";

        $r0[137] = "405924";

        $r0[138] = "405925";

        $r0[139] = "405926";

        $r0[140] = "405927";

        $r0[141] = "405928";

        $r0[142] = "405929";

        $r0[143] = "405930";

        $r0[144] = "405931";

        $r0[145] = "405932";

        $r0[146] = "502142";

        $r0[147] = "502143";

        $r0[148] = "502145";

        $r0[149] = "502146";

        $r0[150] = "502147";

        $r0[151] = "502148";

        <com.android.internal.telephony.uicc.IccRecords: java.lang.String[] MCCMNC_CODES_HAVING_3DIGITS_MNC> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        <com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicInteger sNextRequestId> = $r1;

        return;
    }

    public void <init>(com.android.internal.telephony.uicc.UiccCardApplication, android.content.Context, com.android.internal.telephony.CommandsInterface)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        com.android.internal.telephony.uicc.UiccCardApplication r1, $r22, $r23, $r24, $r25;
        android.content.Context r2, $r17;
        com.android.internal.telephony.CommandsInterface r3, $r21;
        java.util.concurrent.atomic.AtomicBoolean $r4, $r5;
        com.android.internal.telephony.RegistrantList $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.util.HashMap $r15;
        com.android.internal.telephony.uicc.IccFileHandler $r16;
        java.lang.Object $r18;
        android.telephony.TelephonyManager $r19;
        com.android.internal.telephony.uicc.CarrierTestOverride $r20;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: com.android.internal.telephony.uicc.UiccCardApplication;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: com.android.internal.telephony.CommandsInterface;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        $r4 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mDestroyed> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mLoaded> = $r5;

        $r6 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r6.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsLoadedRegistrants> = $r6;

        $r7 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r7.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mLockedRecordsLoadedRegistrants> = $r7;

        $r8 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r8.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkLockedRecordsLoadedRegistrants> = $r8;

        $r9 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r9.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mImsiReadyRegistrants> = $r9;

        $r10 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r10.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsEventsRegistrants> = $r10;

        $r11 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r11.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNewSmsRegistrants> = $r11;

        $r12 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r12.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkSelectionModeAutomaticRegistrants> = $r12;

        $r13 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r13.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mSpnUpdatedRegistrants> = $r13;

        $r14 = new com.android.internal.telephony.RegistrantList;

        specialinvoke $r14.<com.android.internal.telephony.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsOverrideRegistrants> = $r14;

        r0.<com.android.internal.telephony.uicc.IccRecords: boolean mRecordsRequested> = 0;

        r0.<com.android.internal.telephony.uicc.IccRecords: int mLockedRecordsReqReason> = 0;

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mMsisdn> = null;

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mMsisdnTag> = null;

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mNewMsisdn> = null;

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mNewMsisdnTag> = null;

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mVoiceMailNum> = null;

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mVoiceMailTag> = null;

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mNewVoiceMailNum> = null;

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mNewVoiceMailTag> = null;

        r0.<com.android.internal.telephony.uicc.IccRecords: boolean mIsVoiceMailFixed> = 0;

        r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength> = -1;

        r0.<com.android.internal.telephony.uicc.IccRecords: int mMailboxIndex> = 0;

        r0.<com.android.internal.telephony.uicc.IccRecords: int mSmsCountOnIcc> = 0;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: java.util.HashMap mPendingTransactions> = $r15;

        r0.<com.android.internal.telephony.uicc.IccRecords: android.content.Context mContext> = r2;

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.CommandsInterface mCi> = r3;

        $r16 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccFileHandler getIccFileHandler()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.IccFileHandler mFh> = $r16;

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp> = r1;

        $r17 = r0.<com.android.internal.telephony.uicc.IccRecords: android.content.Context mContext>;

        $r18 = virtualinvoke $r17.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r19 = (android.telephony.TelephonyManager) $r18;

        r0.<com.android.internal.telephony.uicc.IccRecords: android.telephony.TelephonyManager mTelephonyManager> = $r19;

        $r20 = new com.android.internal.telephony.uicc.CarrierTestOverride;

        specialinvoke $r20.<com.android.internal.telephony.uicc.CarrierTestOverride: void <init>()>();

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride> = $r20;

        $r21 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r21.<com.android.internal.telephony.CommandsInterface: void registerForIccRefresh(android.os.Handler,int,java.lang.Object)>(r0, 31, null);

        $r22 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r22.<com.android.internal.telephony.uicc.UiccCardApplication: void registerForReady(android.os.Handler,int,java.lang.Object)>(r0, 257, null);

        $r23 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r23.<com.android.internal.telephony.uicc.UiccCardApplication: void registerForDetected(android.os.Handler,int,java.lang.Object)>(r0, 260, null);

        $r24 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r24.<com.android.internal.telephony.uicc.UiccCardApplication: void registerForLocked(android.os.Handler,int,java.lang.Object)>(r0, 258, null);

        $r25 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r25.<com.android.internal.telephony.uicc.UiccCardApplication: void registerForNetworkLocked(android.os.Handler,int,java.lang.Object)>(r0, 259, null);

        return;
    }

    public static int convertSpnDisplayConditionToBitmask(int)
    {
        int i0, $i1, $i2;
        byte b3, b4;

        i0 := @parameter0: int;

        b3 = 0;

        $i1 = i0 & 1;

        if $i1 != 1 goto label1;

        b3 = 0 | 1;

     label1:
        b4 = b3;

        $i2 = i0 & 2;

        if $i2 != 0 goto label2;

        b4 = b3 | 2;

     label2:
        return b4;
    }

    protected static java.lang.String findBestLanguage(byte[], java.lang.String[]) throws java.io.UnsupportedEncodingException
    {
        byte[] r0;
        java.lang.String[] r1;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String[];

        if r0 == null goto label7;

        if r1 != null goto label1;

        goto label7;

     label1:
        i4 = 0;

     label2:
        $i1 = i4 + 1;

        $i0 = lengthof r0;

        if $i1 >= $i0 goto label6;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, i4, 2, "ISO-8859-1");

        i5 = 0;

     label3:
        $i2 = lengthof r1;

        if i5 >= $i2 goto label5;

        $r4 = r1[i5];

        if $r4 == null goto label4;

        $r5 = r1[i5];

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i3 < 2 goto label4;

        $r6 = r1[i5];

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label4;

        return $r3;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        i4 = i4 + 2;

        goto label2;

     label6:
        return null;

     label7:
        return null;
    }

    public void dispose()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        com.android.internal.telephony.uicc.AdnRecordCache r1;
        java.util.concurrent.atomic.AtomicBoolean $r2, $r8;
        com.android.internal.telephony.CommandsInterface $r3;
        com.android.internal.telephony.uicc.UiccCardApplication $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mDestroyed>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void unregisterForIccRefresh(android.os.Handler)>(r0);

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r4.<com.android.internal.telephony.uicc.UiccCardApplication: void unregisterForReady(android.os.Handler)>(r0);

        $r5 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r5.<com.android.internal.telephony.uicc.UiccCardApplication: void unregisterForDetected(android.os.Handler)>(r0);

        $r6 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r6.<com.android.internal.telephony.uicc.UiccCardApplication: void unregisterForLocked(android.os.Handler)>(r0);

        $r7 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r7.<com.android.internal.telephony.uicc.UiccCardApplication: void unregisterForNetworkLocked(android.os.Handler)>(r0);

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp> = null;

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.IccFileHandler mFh> = null;

        r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.CommandsInterface mCi> = null;

        r0.<com.android.internal.telephony.uicc.IccRecords: android.content.Context mContext> = null;

        r1 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.telephony.uicc.AdnRecordCache: void reset()>();

     label1:
        $r8 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mLoaded>;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r6, $r11, $r16, $r21, $r26, $r32, $r38, $r44, $r50, $r56, $r62, $r68, $r72, $r76, $r80, $r86, $r90, $r96, $r101, $r107, $r112, $r118, $r123, $r127, $r133, $r137, $r141, $r147, $r153, $r159, $r167, $r177, $r187, $r197, $r207, $r217, $r227;
        java.lang.String $r5, $r10, $r15, $r20, $r25, $r30, $r36, $r42, $r48, $r54, $r60, $r66, $r71, $r75, $r79, $r84, $r85, $r89, $r92, $r93, $r95, $r98, $r100, $r103, $r104, $r106, $r109, $r111, $r114, $r115, $r117, $r120, $r122, $r126, $r129, $r131, $r136, $r140, $r143, $r145, $r150, $r152, $r156, $r158, $r160, $r161, $r163, $r164, $r165, $r176, $r186, $r196, $r206, $r216, $r226, $r236, r262, r273;
        java.util.concurrent.atomic.AtomicBoolean $r8;
        com.android.internal.telephony.CommandsInterface $r13;
        com.android.internal.telephony.uicc.IccFileHandler $r18;
        com.android.internal.telephony.uicc.UiccCardApplication $r23;
        com.android.internal.telephony.RegistrantList $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64, $r67, $r171, $r181, $r191, $r201, $r211, $r221, $r231;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.telephony.uicc.AdnRecordCache $r82;
        com.android.internal.telephony.uicc.CarrierTestOverride $r132, $r146, $r149, $r155;
        java.lang.Object $r172, $r182, $r192, $r202, $r212, $r222, $r232;
        com.android.internal.telephony.Registrant $r173, $r183, $r193, $r203, $r213, $r223, $r233;
        android.os.Handler $r174, $r184, $r194, $r204, $r214, $r224, $r234;
        java.io.FileDescriptor r237;
        java.lang.String[] r238;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r237 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r238 := @parameter2: java.lang.String[];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IccRecords: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDestroyed=");

        $r8 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mDestroyed>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCi=");

        $r13 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.CommandsInterface mCi>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFh=");

        $r18 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mParentApp=");

        $r23 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" recordsLoadedRegistrants: size=");

        $r28 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsLoadedRegistrants>;

        $i0 = virtualinvoke $r28.<com.android.internal.telephony.RegistrantList: int size()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        i18 = 0;

     label01:
        $r31 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsLoadedRegistrants>;

        $i1 = virtualinvoke $r31.<com.android.internal.telephony.RegistrantList: int size()>();

        if i18 >= $i1 goto label02;

        $r227 = new java.lang.StringBuilder;

        specialinvoke $r227.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  recordsLoadedRegistrants[");

        virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r231 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsLoadedRegistrants>;

        $r232 = virtualinvoke $r231.<com.android.internal.telephony.RegistrantList: java.lang.Object get(int)>(i18);

        $r233 = (com.android.internal.telephony.Registrant) $r232;

        $r234 = virtualinvoke $r233.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r234);

        $r236 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r236);

        i18 = i18 + 1;

        goto label01;

     label02:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLockedRecordsLoadedRegistrants: size=");

        $r34 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mLockedRecordsLoadedRegistrants>;

        $i2 = virtualinvoke $r34.<com.android.internal.telephony.RegistrantList: int size()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r36);

        i19 = 0;

     label03:
        $r37 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mLockedRecordsLoadedRegistrants>;

        $i3 = virtualinvoke $r37.<com.android.internal.telephony.RegistrantList: int size()>();

        if i19 >= $i3 goto label04;

        $r217 = new java.lang.StringBuilder;

        specialinvoke $r217.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLockedRecordsLoadedRegistrants[");

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r221 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mLockedRecordsLoadedRegistrants>;

        $r222 = virtualinvoke $r221.<com.android.internal.telephony.RegistrantList: java.lang.Object get(int)>(i19);

        $r223 = (com.android.internal.telephony.Registrant) $r222;

        $r224 = virtualinvoke $r223.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r224);

        $r226 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r226);

        i19 = i19 + 1;

        goto label03;

     label04:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNetworkLockedRecordsLoadedRegistrants: size=");

        $r40 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkLockedRecordsLoadedRegistrants>;

        $i4 = virtualinvoke $r40.<com.android.internal.telephony.RegistrantList: int size()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r42);

        i20 = 0;

     label05:
        $r43 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkLockedRecordsLoadedRegistrants>;

        $i5 = virtualinvoke $r43.<com.android.internal.telephony.RegistrantList: int size()>();

        if i20 >= $i5 goto label06;

        $r207 = new java.lang.StringBuilder;

        specialinvoke $r207.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLockedRecordsLoadedRegistrants[");

        virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r211 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkLockedRecordsLoadedRegistrants>;

        $r212 = virtualinvoke $r211.<com.android.internal.telephony.RegistrantList: java.lang.Object get(int)>(i20);

        $r213 = (com.android.internal.telephony.Registrant) $r212;

        $r214 = virtualinvoke $r213.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r214);

        $r216 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r216);

        i20 = i20 + 1;

        goto label05;

     label06:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mImsiReadyRegistrants: size=");

        $r46 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mImsiReadyRegistrants>;

        $i6 = virtualinvoke $r46.<com.android.internal.telephony.RegistrantList: int size()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r48 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r48);

        i21 = 0;

     label07:
        $r49 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mImsiReadyRegistrants>;

        $i7 = virtualinvoke $r49.<com.android.internal.telephony.RegistrantList: int size()>();

        if i21 >= $i7 goto label08;

        $r197 = new java.lang.StringBuilder;

        specialinvoke $r197.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mImsiReadyRegistrants[");

        virtualinvoke $r197.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        virtualinvoke $r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r201 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mImsiReadyRegistrants>;

        $r202 = virtualinvoke $r201.<com.android.internal.telephony.RegistrantList: java.lang.Object get(int)>(i21);

        $r203 = (com.android.internal.telephony.Registrant) $r202;

        $r204 = virtualinvoke $r203.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        virtualinvoke $r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r204);

        $r206 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r206);

        i21 = i21 + 1;

        goto label07;

     label08:
        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRecordsEventsRegistrants: size=");

        $r52 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsEventsRegistrants>;

        $i8 = virtualinvoke $r52.<com.android.internal.telephony.RegistrantList: int size()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r54 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r54);

        i22 = 0;

     label09:
        $r55 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsEventsRegistrants>;

        $i9 = virtualinvoke $r55.<com.android.internal.telephony.RegistrantList: int size()>();

        if i22 >= $i9 goto label10;

        $r187 = new java.lang.StringBuilder;

        specialinvoke $r187.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mRecordsEventsRegistrants[");

        virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r191 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsEventsRegistrants>;

        $r192 = virtualinvoke $r191.<com.android.internal.telephony.RegistrantList: java.lang.Object get(int)>(i22);

        $r193 = (com.android.internal.telephony.Registrant) $r192;

        $r194 = virtualinvoke $r193.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r194);

        $r196 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r196);

        i22 = i22 + 1;

        goto label09;

     label10:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewSmsRegistrants: size=");

        $r58 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNewSmsRegistrants>;

        $i10 = virtualinvoke $r58.<com.android.internal.telephony.RegistrantList: int size()>();

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r60 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r60);

        i23 = 0;

     label11:
        $r61 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNewSmsRegistrants>;

        $i11 = virtualinvoke $r61.<com.android.internal.telephony.RegistrantList: int size()>();

        if i23 >= $i11 goto label12;

        $r177 = new java.lang.StringBuilder;

        specialinvoke $r177.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mNewSmsRegistrants[");

        virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);

        virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r181 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNewSmsRegistrants>;

        $r182 = virtualinvoke $r181.<com.android.internal.telephony.RegistrantList: java.lang.Object get(int)>(i23);

        $r183 = (com.android.internal.telephony.Registrant) $r182;

        $r184 = virtualinvoke $r183.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r184);

        $r186 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r186);

        i23 = i23 + 1;

        goto label11;

     label12:
        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNetworkSelectionModeAutomaticRegistrants: size=");

        $r64 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkSelectionModeAutomaticRegistrants>;

        $i12 = virtualinvoke $r64.<com.android.internal.telephony.RegistrantList: int size()>();

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r66 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r66);

        i24 = 0;

     label13:
        $r67 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkSelectionModeAutomaticRegistrants>;

        $i13 = virtualinvoke $r67.<com.android.internal.telephony.RegistrantList: int size()>();

        if i24 >= $i13 goto label14;

        $r167 = new java.lang.StringBuilder;

        specialinvoke $r167.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mNetworkSelectionModeAutomaticRegistrants[");

        virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r171 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkSelectionModeAutomaticRegistrants>;

        $r172 = virtualinvoke $r171.<com.android.internal.telephony.RegistrantList: java.lang.Object get(int)>(i24);

        $r173 = (com.android.internal.telephony.Registrant) $r172;

        $r174 = virtualinvoke $r173.<com.android.internal.telephony.Registrant: android.os.Handler getHandler()>();

        virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r174);

        $r176 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r176);

        i24 = i24 + 1;

        goto label13;

     label14:
        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRecordsRequested=");

        $z0 = r0.<com.android.internal.telephony.uicc.IccRecords: boolean mRecordsRequested>;

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r71);

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLockedRecordsReqReason=");

        $i14 = r0.<com.android.internal.telephony.uicc.IccRecords: int mLockedRecordsReqReason>;

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r75 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r75);

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRecordsToLoad=");

        $i15 = r0.<com.android.internal.telephony.uicc.IccRecords: int mRecordsToLoad>;

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r79 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r79);

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRdnCache=");

        $r82 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r82);

        $r84 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r84);

        $r85 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mFullIccId>;

        r262 = staticinvoke <android.telephony.SubscriptionInfo: java.lang.String givePrintableIccid(java.lang.String)>($r85);

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" iccid=");

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r262);

        $r89 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r89);

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMsisdn=");

        $r92 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mMsisdn>;

        $r93 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)>(0, $r92);

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r95 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r95);

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMsisdnTag=");

        $r98 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mMsisdnTag>;

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r100 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r100);

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVoiceMailNum=");

        $r103 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mVoiceMailNum>;

        $r104 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)>(0, $r103);

        virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r106 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r106);

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVoiceMailTag=");

        $r109 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mVoiceMailTag>;

        virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r111 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r111);

        $r112 = new java.lang.StringBuilder;

        specialinvoke $r112.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewVoiceMailNum=");

        $r114 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mNewVoiceMailNum>;

        $r115 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)>(0, $r114);

        virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);

        $r117 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r117);

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewVoiceMailTag=");

        $r120 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mNewVoiceMailTag>;

        virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120);

        $r122 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r122);

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsVoiceMailFixed=");

        $z1 = r0.<com.android.internal.telephony.uicc.IccRecords: boolean mIsVoiceMailFixed>;

        virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r126 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r126);

        $r127 = new java.lang.StringBuilder;

        specialinvoke $r127.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mImsi=");

        $r129 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        if $r129 == null goto label15;

        $r159 = new java.lang.StringBuilder;

        specialinvoke $r159.<java.lang.StringBuilder: void <init>()>();

        $r160 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        $r161 = virtualinvoke $r160.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r161);

        $r163 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        $r164 = virtualinvoke $r163.<java.lang.String: java.lang.String substring(int)>(6);

        $r165 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)>(0, $r164);

        virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r165);

        r273 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label16;

     label15:
        r273 = "null";

     label16:
        virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r273);

        $r131 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r131);

        $r132 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $z2 = virtualinvoke $r132.<com.android.internal.telephony.uicc.CarrierTestOverride: boolean isInTestMode()>();

        if $z2 == 0 goto label17;

        $r153 = new java.lang.StringBuilder;

        specialinvoke $r153.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFakeImsi=");

        $r155 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $r156 = virtualinvoke $r155.<com.android.internal.telephony.uicc.CarrierTestOverride: java.lang.String getFakeIMSI()>();

        virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r156);

        $r158 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r158);

     label17:
        $r133 = new java.lang.StringBuilder;

        specialinvoke $r133.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMncLength=");

        $i16 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r136 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r136);

        $r137 = new java.lang.StringBuilder;

        specialinvoke $r137.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMailboxIndex=");

        $i17 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMailboxIndex>;

        virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r140 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r140);

        $r141 = new java.lang.StringBuilder;

        specialinvoke $r141.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSpn=");

        $r143 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mSpn>;

        virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r143);

        $r145 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r145);

        $r146 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $z3 = virtualinvoke $r146.<com.android.internal.telephony.uicc.CarrierTestOverride: boolean isInTestMode()>();

        if $z3 == 0 goto label18;

        $r147 = new java.lang.StringBuilder;

        specialinvoke $r147.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFakeSpn=");

        $r149 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $r150 = virtualinvoke $r149.<com.android.internal.telephony.uicc.CarrierTestOverride: java.lang.String getFakeSpn()>();

        virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r150);

        $r152 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r152);

     label18:
        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

        return;
    }

    public com.android.internal.telephony.uicc.AdnRecordCache getAdnCache()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        com.android.internal.telephony.uicc.AdnRecordCache $r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        return $r1;
    }

    public int getCarrierNameDisplayCondition()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $i0 = r0.<com.android.internal.telephony.uicc.IccRecords: int mCarrierNameDisplayCondition>;

        return $i0;
    }

    public java.lang.String[] getEhplmns()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String[] $r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String[] mEhplmns>;

        return $r1;
    }

    public java.lang.String getFullIccId()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mFullIccId>;

        return $r1;
    }

    public java.lang.String getGid1()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String r1, $r3;
        com.android.internal.telephony.uicc.CarrierTestOverride $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.uicc.CarrierTestOverride: boolean isInTestMode()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        r1 = virtualinvoke $r4.<com.android.internal.telephony.uicc.CarrierTestOverride: java.lang.String getFakeGid1()>();

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mGid1>;

        return $r3;
    }

    public java.lang.String getGid2()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String r1, $r3;
        com.android.internal.telephony.uicc.CarrierTestOverride $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.uicc.CarrierTestOverride: boolean isInTestMode()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        r1 = virtualinvoke $r4.<com.android.internal.telephony.uicc.CarrierTestOverride: java.lang.String getFakeGid2()>();

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mGid2>;

        return $r3;
    }

    public java.lang.String[] getHomePlmns()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String r1;
        java.lang.String[] r2, $r4, $r7, r8, r9, r10;
        boolean $z0, $z1;
        java.lang.Object[] $r3, $r6;
        java.lang.String[][] $r5;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getOperatorNumeric()>();

        r8 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String[] getEhplmns()>();

        r2 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String[] getServiceProviderDisplayInformation()>();

        r9 = r8;

        $z0 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r8);

        if $z0 == 0 goto label1;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = r1;

        r9 = $r7;

     label1:
        r10 = r9;

        $z1 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r2);

        if $z1 != 0 goto label2;

        $r5 = newarray (java.lang.String[])[2];

        $r5[0] = r9;

        $r5[1] = r2;

        $r6 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: java.lang.Object[] concatElements(java.lang.Class,java.lang.Object[][])>(class "Ljava/lang/String;", $r5);

        r10 = (java.lang.String[]) $r6;

     label2:
        $r3 = staticinvoke <com.android.internal.telephony.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object)>(class "Ljava/lang/String;", r10, r1);

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    public java.lang.String getIMSI()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String r1, $r3;
        com.android.internal.telephony.uicc.CarrierTestOverride $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.uicc.CarrierTestOverride: boolean isInTestMode()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        r1 = virtualinvoke $r4.<com.android.internal.telephony.uicc.CarrierTestOverride: java.lang.String getFakeIMSI()>();

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        return $r3;
    }

    public java.lang.String getIccId()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String r1, $r3;
        com.android.internal.telephony.uicc.CarrierTestOverride $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.uicc.CarrierTestOverride: boolean isInTestMode()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        r1 = virtualinvoke $r4.<com.android.internal.telephony.uicc.CarrierTestOverride: java.lang.String getFakeIccid()>();

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mIccId>;

        return $r3;
    }

    public java.lang.String getIccSimChallengeResponse(int, java.lang.String)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        com.android.internal.telephony.CommandsInterface r1;
        com.android.internal.telephony.uicc.UiccCardApplication r2;
        long l1, l2, $l3, $l4, $l6, $l7, $l9, $l10;
        com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse $r4;
        java.lang.String $r5, $r10, $r14, r21, r24;
        android.os.Message $r6;
        byte $b5, $b8, $b11;
        com.android.internal.telephony.uicc.IccIoResult $r7, $r8, $r11, $r15, $r17;
        byte[] $r9, $r12;
        java.lang.Throwable $r13, $r16, $r18, $r19, $r20, $r22;
        java.lang.StringBuilder r23;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        i0 := @parameter0: int;

        r21 := @parameter1: java.lang.String;

        r1 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.CommandsInterface mCi>;

        r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        if r1 == null goto label22;

        if r2 != null goto label01;

        goto label22;

     label01:
        $r4 = new com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse;

        specialinvoke $r4.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: void <init>(com.android.internal.telephony.uicc.IccRecords$1)>(null);

        entermonitor $r4;

     label02:
        $r5 = virtualinvoke r2.<com.android.internal.telephony.uicc.UiccCardApplication: java.lang.String getAid()>();

        $r6 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(90, 0, 0, $r4);

        interfaceinvoke r1.<com.android.internal.telephony.CommandsInterface: void requestIccSimAuthentication(int,java.lang.String,java.lang.String,android.os.Message)>(i0, r21, $r5, $r6);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label03:
        $l3 = l1 + 2500L;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = $l3 - $l4;

     label04:
        $b5 = l2 cmp 0L;

        if $b5 <= 0 goto label06;

     label05:
        virtualinvoke $r4.<java.lang.Object: void wait(long)>(l2);

     label06:
        goto label09;

     label07:
        $r19 := @caughtexception;

     label08:
        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("IccRecords", "getIccSimChallengeResponse: InterruptedException.");

     label09:
        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l7 = $l6 - l1;

        $b8 = $l7 cmp 2500L;

        if $b8 >= 0 goto label10;

        $r17 = $r4.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: com.android.internal.telephony.uicc.IccIoResult authRsp>;

        if $r17 != null goto label10;

        $r18 = $r4.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: java.lang.Throwable exception>;

        if $r18 == null goto label03;

     label10:
        $l9 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l10 = $l9 - l1;

        $b11 = $l10 cmp 2500L;

        if $b11 < 0 goto label12;

        $r15 = $r4.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: com.android.internal.telephony.uicc.IccIoResult authRsp>;

        if $r15 != null goto label12;

        $r16 = $r4.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: java.lang.Throwable exception>;

        if $r16 != null goto label12;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>("getIccSimChallengeResponse timeout!");

        exitmonitor $r4;

     label11:
        return null;

     label12:
        $r22 = $r4.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: java.lang.Throwable exception>;

        if $r22 == null goto label14;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getIccSimChallengeResponse exception: ");

        $r13 = $r4.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: java.lang.Throwable exception>;

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r14 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>($r14);

        exitmonitor $r4;

     label13:
        return null;

     label14:
        $r7 = $r4.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: com.android.internal.telephony.uicc.IccIoResult authRsp>;

        if $r7 != null goto label16;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>("getIccSimChallengeResponse: No authentication response");

        exitmonitor $r4;

     label15:
        return null;

     label16:
        exitmonitor $r4;

     label17:
        r24 = null;

        $r8 = $r4.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: com.android.internal.telephony.uicc.IccIoResult authRsp>;

        $r9 = $r8.<com.android.internal.telephony.uicc.IccIoResult: byte[] payload>;

        if $r9 == null goto label18;

        $r10 = new java.lang.String;

        $r11 = $r4.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: com.android.internal.telephony.uicc.IccIoResult authRsp>;

        $r12 = $r11.<com.android.internal.telephony.uicc.IccIoResult: byte[] payload>;

        specialinvoke $r10.<java.lang.String: void <init>(byte[])>($r12);

        r24 = $r10;

     label18:
        return r24;

     label19:
        $r20 := @caughtexception;

     label20:
        exitmonitor $r4;

     label21:
        throw $r20;

     label22:
        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>("getIccSimChallengeResponse: Fail, ci or parentApp is null");

        return null;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.InterruptedException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public com.android.internal.telephony.uicc.IsimRecords getIsimRecords()
    {
        com.android.internal.telephony.uicc.IccRecords r0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        return null;
    }

    protected boolean getLockedRecordsLoaded()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        i0 = r0.<com.android.internal.telephony.uicc.IccRecords: int mRecordsToLoad>;

        z0 = 1;

        if i0 != 0 goto label1;

        $i1 = r0.<com.android.internal.telephony.uicc.IccRecords: int mLockedRecordsReqReason>;

        if $i1 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String getMsisdnAlphaTag()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mMsisdnTag>;

        return $r1;
    }

    public java.lang.String getMsisdnNumber()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mMsisdn>;

        return $r1;
    }

    public java.lang.String getNAI()
    {
        com.android.internal.telephony.uicc.IccRecords r0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        return null;
    }

    protected boolean getNetworkLockedRecordsLoaded()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $i0 = r0.<com.android.internal.telephony.uicc.IccRecords: int mRecordsToLoad>;

        if $i0 != 0 goto label1;

        $i1 = r0.<com.android.internal.telephony.uicc.IccRecords: int mLockedRecordsReqReason>;

        if $i1 != 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String getOperatorNumeric()
    {
        com.android.internal.telephony.uicc.IccRecords r0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        return null;
    }

    public java.lang.String[] getPlmnsFromHplmnActRecord()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String[] r1;
        int $i0, $i1, i2;
        com.android.internal.telephony.uicc.PlmnActRecord $r2;
        java.lang.String $r3;
        com.android.internal.telephony.uicc.PlmnActRecord[] r4, r5;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.PlmnActRecord[] mHplmnActRecords>;

        if r4 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r4;

        r1 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label2:
        r5 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.PlmnActRecord[] mHplmnActRecords>;

        $i1 = lengthof r5;

        if i2 >= $i1 goto label3;

        $r2 = r5[i2];

        $r3 = $r2.<com.android.internal.telephony.uicc.PlmnActRecord: java.lang.String plmn>;

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r1;
    }

    public java.lang.String getPnnHomeName()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String r1, $r3;
        com.android.internal.telephony.uicc.CarrierTestOverride $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.uicc.CarrierTestOverride: boolean isInTestMode()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        r1 = virtualinvoke $r4.<com.android.internal.telephony.uicc.CarrierTestOverride: java.lang.String getFakePnnHomeName()>();

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mPnnHomeName>;

        return $r3;
    }

    public boolean getRecordsLoaded()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int $i0;
        boolean $z0, z1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $i0 = r0.<com.android.internal.telephony.uicc.IccRecords: int mRecordsToLoad>;

        if $i0 != 0 goto label1;

        $z0 = r0.<com.android.internal.telephony.uicc.IccRecords: boolean mRecordsRequested>;

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public java.lang.String[] getServiceProviderDisplayInformation()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String[] $r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String[] mSpdi>;

        return $r1;
    }

    public java.lang.String getServiceProviderName()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String r1, $r3;
        com.android.internal.telephony.uicc.CarrierTestOverride $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.uicc.CarrierTestOverride: boolean isInTestMode()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        r1 = virtualinvoke $r4.<com.android.internal.telephony.uicc.CarrierTestOverride: java.lang.String getFakeSpn()>();

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mSpn>;

        return $r3;
    }

    public java.lang.String getServiceProviderNameWithBrandOverride()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        com.android.internal.telephony.uicc.UiccProfile $r1, $r3;
        com.android.internal.telephony.uicc.UiccCardApplication $r2, r4;
        boolean $z0;
        java.lang.String r5, $r6;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        if r4 == null goto label1;

        $r1 = virtualinvoke r4.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.UiccProfile getUiccProfile()>();

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.UiccProfile getUiccProfile()>();

        r5 = virtualinvoke $r3.<com.android.internal.telephony.uicc.UiccProfile: java.lang.String getOperatorBrandOverride()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 != 0 goto label1;

        return r5;

     label1:
        $r6 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mSpn>;

        return $r6;
    }

    public java.lang.String getSimLanguage()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mPrefLang>;

        return $r1;
    }

    public int getSmsCapacityOnIcc()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r5;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSmsCapacityOnIcc: ");

        $i0 = r0.<com.android.internal.telephony.uicc.IccRecords: int mSmsCountOnIcc>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>($r5);

        $i1 = r0.<com.android.internal.telephony.uicc.IccRecords: int mSmsCountOnIcc>;

        return $i1;
    }

    public com.android.internal.telephony.uicc.UsimServiceTable getUsimServiceTable()
    {
        com.android.internal.telephony.uicc.IccRecords r0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        return null;
    }

    public int getVoiceCallForwardingFlag()
    {
        com.android.internal.telephony.uicc.IccRecords r0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        return -1;
    }

    public java.lang.String getVoiceMailAlphaTag()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mVoiceMailTag>;

        return $r1;
    }

    public java.lang.String getVoiceMailNumber()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mVoiceMailNum>;

        return $r1;
    }

    public abstract int getVoiceMessageCount();

    protected abstract void handleFileUpdate(int);

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r1, $r3, $r16, $r23, $r25, $r26, $r28, $r29, $r36, $r37;
        java.lang.Throwable $r2, $r13, $r17, $r20, $r27, $r31, $r33, $r42, $r44, $r51, $r52, $r57;
        java.lang.String $r10, $r15, $r22, $r35, $r38, $r41, $r46, $r50, $r56, $r60, $r62;
        java.lang.StringBuilder $r11, $r18, r66, r67, r70, r73, r76, r83, r86;
        com.android.internal.telephony.uicc.IccRefreshResponse $r24;
        com.android.internal.telephony.uicc.IccIoResult $r30;
        java.lang.RuntimeException $r47;
        java.lang.ClassCastException $r53;
        java.lang.ArrayIndexOutOfBoundsException $r58;
        android.os.Message r63;
        android.os.AsyncResult r64, r71, r78, r80;
        com.android.internal.telephony.uicc.IccRecords$IccRecordLoaded r65;
        com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse r72;
        java.lang.NullPointerException r74;
        int[] r82;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r63 := @parameter0: android.os.Message;

        i0 = r63.<android.os.Message: int what>;

        if i0 == 28 goto label32;

        if i0 == 31 goto label30;

        if i0 == 90 goto label16;

        if i0 == 100 goto label06;

        tableswitch(i0)
        {
            case 257: goto label05;
            case 258: goto label04;
            case 259: goto label03;
            case 260: goto label02;
            default: goto label01;
        };

     label01:
        specialinvoke r0.<android.os.Handler: void handleMessage(android.os.Message)>(r63);

        goto label40;

     label02:
        r0.<com.android.internal.telephony.uicc.IccRecords: int mLockedRecordsReqReason> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void onDetected()>();

        goto label40;

     label03:
        r0.<com.android.internal.telephony.uicc.IccRecords: int mLockedRecordsReqReason> = 2;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void onLocked()>();

        goto label40;

     label04:
        r0.<com.android.internal.telephony.uicc.IccRecords: int mLockedRecordsReqReason> = 1;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void onLocked()>();

        goto label40;

     label05:
        r0.<com.android.internal.telephony.uicc.IccRecords: int mLockedRecordsReqReason> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void onReady()>();

        goto label40;

     label06:
        $r36 = r63.<android.os.Message: java.lang.Object obj>;

        r64 = (android.os.AsyncResult) $r36;

        $r37 = r64.<android.os.AsyncResult: java.lang.Object userObj>;

        r65 = (com.android.internal.telephony.uicc.IccRecords$IccRecordLoaded) $r37;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        $r38 = interfaceinvoke r65.<com.android.internal.telephony.uicc.IccRecords$IccRecordLoaded: java.lang.String getEfName()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LOADED");

        $r41 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>($r41);

        $r42 = r64.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r42 == null goto label08;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Record Load Exception: ");

        $r44 = r64.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);

        $r46 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>($r46);

     label07:
        goto label09;

     label08:
        interfaceinvoke r65.<com.android.internal.telephony.uicc.IccRecords$IccRecordLoaded: void onRecordLoaded(android.os.AsyncResult)>(r64);

     label09:
        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void onRecordLoaded()>();

        goto label14;

     label10:
        $r52 := @caughtexception;

        goto label15;

     label11:
        $r47 := @caughtexception;

     label12:
        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception parsing SIM record: ");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r50 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>($r50);

     label13:
        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void onRecordLoaded()>();

     label14:
        goto label40;

     label15:
        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void onRecordLoaded()>();

        throw $r52;

     label16:
        $r25 = r63.<android.os.Message: java.lang.Object obj>;

        r71 = (android.os.AsyncResult) $r25;

        $r26 = r71.<android.os.AsyncResult: java.lang.Object userObj>;

        r72 = (com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse) $r26;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>("EVENT_AKA_AUTHENTICATE_DONE");

        entermonitor r72;

     label17:
        $r27 = r71.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r27 == null goto label19;

        $r31 = r71.<android.os.AsyncResult: java.lang.Throwable exception>;

        r72.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: java.lang.Throwable exception> = $r31;

        r73 = new java.lang.StringBuilder;

        specialinvoke r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception ICC SIM AKA: ");

        $r33 = r71.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>($r35);

     label18:
        goto label25;

     label19:
        $r28 = r71.<android.os.AsyncResult: java.lang.Object result>;

        if $r28 != null goto label21;

        r74 = new java.lang.NullPointerException;

        specialinvoke r74.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null SIM authentication response");

        r72.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: java.lang.Throwable exception> = r74;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>("EVENT_AKA_AUTHENTICATE_DONE: null response");

     label20:
        goto label25;

     label21:
        $r29 = r71.<android.os.AsyncResult: java.lang.Object result>;

        $r30 = (com.android.internal.telephony.uicc.IccIoResult) $r29;

        r72.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: com.android.internal.telephony.uicc.IccIoResult authRsp> = $r30;

     label22:
        goto label25;

     label23:
        $r53 := @caughtexception;

     label24:
        r72.<com.android.internal.telephony.uicc.IccRecords$AuthAsyncResponse: java.lang.Throwable exception> = $r53;

        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse ICC SIM AKA contents: ");

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        $r56 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>($r56);

     label25:
        virtualinvoke r72.<java.lang.Object: void notifyAll()>();

        exitmonitor r72;

     label26:
        goto label40;

     label27:
        $r57 := @caughtexception;

     label28:
        exitmonitor r72;

     label29:
        throw $r57;

     label30:
        $r16 = r63.<android.os.Message: java.lang.Object obj>;

        r78 = (android.os.AsyncResult) $r16;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>("Card REFRESH occurred: ");

        $r17 = r78.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r17 != null goto label31;

        $r23 = r78.<android.os.AsyncResult: java.lang.Object result>;

        $r24 = (com.android.internal.telephony.uicc.IccRefreshResponse) $r23;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void handleRefresh(com.android.internal.telephony.uicc.IccRefreshResponse)>($r24);

        goto label40;

     label31:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Icc refresh Exception: ");

        $r20 = r78.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>($r22);

        goto label40;

     label32:
        $r1 = r63.<android.os.Message: java.lang.Object obj>;

        r80 = (android.os.AsyncResult) $r1;

        $r2 = r80.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r2 == null goto label33;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void onRecordLoaded()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in EVENT_GET_SMS_RECORD_SIZE_DONE ");

        $r13 = r80.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>($r15);

        goto label40;

     label33:
        $r3 = r80.<android.os.AsyncResult: java.lang.Object result>;

        r82 = (int[]) $r3;

     label34:
        $i1 = r82[2];

        r0.<com.android.internal.telephony.uicc.IccRecords: int mSmsCountOnIcc> = $i1;

        r83 = new java.lang.StringBuilder;

        specialinvoke r83.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_GET_SMS_RECORD_SIZE_DONE Size ");

        $i2 = r82[0];

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total ");

        $i3 = r82[1];

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" record ");

        $i4 = r82[2];

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r10 = virtualinvoke r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>($r10);

     label35:
        goto label39;

     label36:
        $r51 := @caughtexception;

        goto label41;

     label37:
        $r58 := @caughtexception;

     label38:
        r0.<com.android.internal.telephony.uicc.IccRecords: int mSmsCountOnIcc> = -1;

        r86 = new java.lang.StringBuilder;

        specialinvoke r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ArrayIndexOutOfBoundsException in EVENT_GET_SMS_RECORD_SIZE_DONE: ");

        $r60 = virtualinvoke $r58.<java.lang.ArrayIndexOutOfBoundsException: java.lang.String toString()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>($r62);

     label39:
        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void onRecordLoaded()>();

     label40:
        return;

     label41:
        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void onRecordLoaded()>();

        throw $r51;

        catch java.lang.RuntimeException from label06 to label07 with label11;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.RuntimeException from label08 to label09 with label11;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.ClassCastException from label21 to label22 with label23;
        catch java.lang.Throwable from label21 to label22 with label27;
        catch java.lang.Throwable from label24 to label25 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.ArrayIndexOutOfBoundsException from label34 to label35 with label37;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.lang.Throwable from label38 to label39 with label36;
    }

    protected void handleRefresh(com.android.internal.telephony.uicc.IccRefreshResponse)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        com.android.internal.telephony.uicc.IccRefreshResponse r1;
        java.lang.String $r2, $r4, $r5;
        boolean $z0, $z1;
        int $i0, $i1;
        com.android.internal.telephony.uicc.UiccCardApplication $r3;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: com.android.internal.telephony.uicc.IccRefreshResponse;

        if r1 != null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>("handleRefresh received without input");

        return;

     label1:
        $r2 = r1.<com.android.internal.telephony.uicc.IccRefreshResponse: java.lang.String aid>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label2;

        $r4 = r1.<com.android.internal.telephony.uicc.IccRefreshResponse: java.lang.String aid>;

        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        $r5 = virtualinvoke $r3.<com.android.internal.telephony.uicc.UiccCardApplication: java.lang.String getAid()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label2;

        return;

     label2:
        $i0 = r1.<com.android.internal.telephony.uicc.IccRefreshResponse: int refreshResult>;

        if $i0 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>("handleRefresh with unknown operation");

        goto label4;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>("handleRefresh with SIM_FILE_UPDATED");

        $i1 = r1.<com.android.internal.telephony.uicc.IccRefreshResponse: int efId>;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void handleFileUpdate(int)>($i1);

     label4:
        return;
    }

    public boolean isCspPlmnEnabled()
    {
        com.android.internal.telephony.uicc.IccRecords r0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        return 0;
    }

    public boolean isLoaded()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mLoaded>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    public boolean isProvisioned()
    {
        com.android.internal.telephony.uicc.IccRecords r0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        return 1;
    }

    protected abstract void log(java.lang.String);

    protected abstract void loge(java.lang.String);

    protected abstract void onAllRecordsLoaded();

    protected void onDetected()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r0.<com.android.internal.telephony.uicc.IccRecords: boolean mRecordsRequested> = 0;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mLoaded>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return;
    }

    protected void onLocked()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r0.<com.android.internal.telephony.uicc.IccRecords: boolean mRecordsRequested> = 0;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mLoaded>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return;
    }

    protected abstract void onReady();

    protected abstract void onRecordLoaded();

    public abstract void onRefresh(boolean, int[]);

    public void registerForImsiReady(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        java.lang.Object r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        com.android.internal.telephony.Registrant $r3;
        com.android.internal.telephony.RegistrantList $r4;
        java.lang.String $r5;
        android.os.AsyncResult $r6;
        android.os.Handler r7;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r7 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mDestroyed>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r7, i0, r1);

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mImsiReadyRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r3);

        $r5 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getIMSI()>();

        if $r5 == null goto label2;

        $r6 = new android.os.AsyncResult;

        specialinvoke $r6.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<com.android.internal.telephony.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r6);

     label2:
        return;
    }

    public void registerForLockedRecordsLoaded(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        java.lang.Object r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0, $z1;
        com.android.internal.telephony.Registrant $r3;
        com.android.internal.telephony.RegistrantList $r4;
        android.os.AsyncResult $r5;
        android.os.Handler r6;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r6 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mDestroyed>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r6, i0, r1);

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mLockedRecordsLoadedRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r3);

        $z1 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: boolean getLockedRecordsLoaded()>();

        if $z1 == 0 goto label2;

        $r5 = new android.os.AsyncResult;

        specialinvoke $r5.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<com.android.internal.telephony.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r5);

     label2:
        return;
    }

    public void registerForNetworkLockedRecordsLoaded(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        java.lang.Object r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0, $z1;
        com.android.internal.telephony.Registrant $r3;
        com.android.internal.telephony.RegistrantList $r4;
        android.os.AsyncResult $r5;
        android.os.Handler r6;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r6 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mDestroyed>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r6, i0, r1);

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkLockedRecordsLoadedRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r3);

        $z1 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: boolean getNetworkLockedRecordsLoaded()>();

        if $z1 == 0 goto label2;

        $r5 = new android.os.AsyncResult;

        specialinvoke $r5.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<com.android.internal.telephony.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r5);

     label2:
        return;
    }

    public void registerForNetworkSelectionModeAutomatic(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkSelectionModeAutomaticRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        return;
    }

    public void registerForNewSms(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        android.os.Handler r4;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r4 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r4, i0, r1);

        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNewSmsRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        return;
    }

    public void registerForRecordsEvents(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        java.lang.Object r1;
        com.android.internal.telephony.Registrant $r2;
        com.android.internal.telephony.RegistrantList $r3;
        java.lang.Integer $r4, $r5;
        android.os.Handler r6;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r6 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new com.android.internal.telephony.Registrant;

        specialinvoke $r2.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r6, i0, r1);

        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsEventsRegistrants>;

        virtualinvoke $r3.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyResult(java.lang.Object)>($r4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r2.<com.android.internal.telephony.Registrant: void notifyResult(java.lang.Object)>($r5);

        return;
    }

    public void registerForRecordsLoaded(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        java.lang.Object r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0, $z1;
        com.android.internal.telephony.Registrant $r3;
        com.android.internal.telephony.RegistrantList $r4;
        android.os.AsyncResult $r5;
        android.os.Handler r6;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r6 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mDestroyed>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r6, i0, r1);

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsLoadedRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r3);

        $z1 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: boolean getRecordsLoaded()>();

        if $z1 == 0 goto label2;

        $r5 = new android.os.AsyncResult;

        specialinvoke $r5.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<com.android.internal.telephony.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r5);

     label2:
        return;
    }

    public void registerForRecordsOverride(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        java.lang.Object r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0, $z1;
        com.android.internal.telephony.Registrant $r3;
        com.android.internal.telephony.RegistrantList $r4;
        android.os.AsyncResult $r5;
        android.os.Handler r6;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r6 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mDestroyed>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r6, i0, r1);

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsOverrideRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r3);

        $z1 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: boolean getRecordsLoaded()>();

        if $z1 == 0 goto label2;

        $r5 = new android.os.AsyncResult;

        specialinvoke $r5.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<com.android.internal.telephony.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r5);

     label2:
        return;
    }

    public void registerForSpnUpdate(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        java.lang.Object r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0, $z1;
        com.android.internal.telephony.Registrant $r3;
        com.android.internal.telephony.RegistrantList $r4;
        java.lang.String $r5;
        android.os.AsyncResult $r6;
        android.os.Handler r7;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r7 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mDestroyed>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new com.android.internal.telephony.Registrant;

        specialinvoke $r3.<com.android.internal.telephony.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r7, i0, r1);

        $r4 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mSpnUpdatedRegistrants>;

        virtualinvoke $r4.<com.android.internal.telephony.RegistrantList: void add(com.android.internal.telephony.Registrant)>($r3);

        $r5 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mSpn>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 != 0 goto label2;

        $r6 = new android.os.AsyncResult;

        specialinvoke $r6.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<com.android.internal.telephony.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r6);

     label2:
        return;
    }

    public android.util.Pair retrievePendingTransaction(java.lang.Integer)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.util.HashMap r1, $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        java.lang.Integer r5;
        android.util.Pair r6;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r5 := @parameter0: java.lang.Integer;

        r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.HashMap mPendingTransactions>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.HashMap mPendingTransactions>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r5);

        r6 = (android.util.Pair) $r3;

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setCarrierTestOverride(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7;
        com.android.internal.telephony.uicc.CarrierTestOverride $r8;
        com.android.internal.telephony.uicc.UiccCardApplication $r9, $r11;
        android.telephony.TelephonyManager $r10, $r12;
        int $i0, $i1;
        com.android.internal.telephony.RegistrantList $r13;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        $r8 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        virtualinvoke $r8.<com.android.internal.telephony.uicc.CarrierTestOverride: void override(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5, r6, r7);

        $r10 = r0.<com.android.internal.telephony.uicc.IccRecords: android.telephony.TelephonyManager mTelephonyManager>;

        $r9 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        $i0 = virtualinvoke $r9.<com.android.internal.telephony.uicc.UiccCardApplication: int getPhoneId()>();

        virtualinvoke $r10.<android.telephony.TelephonyManager: void setSimOperatorNameForPhone(int,java.lang.String)>($i0, r7);

        $r12 = r0.<com.android.internal.telephony.uicc.IccRecords: android.telephony.TelephonyManager mTelephonyManager>;

        $r11 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        $i1 = virtualinvoke $r11.<com.android.internal.telephony.uicc.UiccCardApplication: int getPhoneId()>();

        virtualinvoke $r12.<android.telephony.TelephonyManager: void setSimOperatorNumericForPhone(int,java.lang.String)>($i1, r1);

        $r13 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsOverrideRegistrants>;

        virtualinvoke $r13.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        return;
    }

    public void setImsi(java.lang.String)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String r1, $r2, $r7, $r8, $r10, $r11, $r12, $r14, $r17, $r19, $r20, r21, r22, r23, $r27, r28;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r5, $r15, $r25;
        com.android.internal.telephony.RegistrantList $r30;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r21 := @parameter0: java.lang.String;

        r1 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String stripTrailingFs(java.lang.String)>(r21);

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi> = r1;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, r21);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>("Invalid IMSI padding digits received.");

     label1:
        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 == 0 goto label2;

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi> = null;

     label2:
        r22 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        if r22 == null goto label3;

        $z2 = virtualinvoke r22.<java.lang.String: boolean matches(java.lang.String)>("[0-9]+");

        if $z2 != 0 goto label3;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>("Invalid non-numeric IMSI digits received.");

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi> = null;

     label3:
        r23 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        if r23 == null goto label5;

        $i1 = virtualinvoke r23.<java.lang.String: int length()>();

        if $i1 < 6 goto label4;

        $r20 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        $i2 = virtualinvoke $r20.<java.lang.String: int length()>();

        if $i2 <= 15 goto label5;

     label4:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid IMSI ");

        $r17 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>($r19);

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi> = null;

     label5:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMSI: mMncLength=");

        $i3 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>($r27);

        r28 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        if r28 == null goto label6;

        $i0 = virtualinvoke r28.<java.lang.String: int length()>();

        if $i0 < 6 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMSI: ");

        $r7 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(6);

        $r12 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)>(0, $r11);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>($r14);

     label6:
        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void updateOperatorPlmn()>();

        $r30 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mImsiReadyRegistrants>;

        virtualinvoke $r30.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

        return;
    }

    public void setMsisdnNumber(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String r1, r2;
        android.os.Message r3;
        android.os.AsyncResult $r4;
        com.android.internal.telephony.uicc.IccIoResult $r5;
        byte[] $r6;
        com.android.internal.telephony.uicc.IccException $r7;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>("setMsisdn() should not be invoked on base IccRecords");

        $r4 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>(r3);

        $r5 = new com.android.internal.telephony.uicc.IccIoResult;

        $r6 = (byte[]) null;

        specialinvoke $r5.<com.android.internal.telephony.uicc.IccIoResult: void <init>(int,int,byte[])>(106, 130, $r6);

        $r7 = virtualinvoke $r5.<com.android.internal.telephony.uicc.IccIoResult: com.android.internal.telephony.uicc.IccException getException()>();

        $r4.<android.os.AsyncResult: java.lang.Throwable exception> = $r7;

        virtualinvoke r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    protected void setServiceProviderName(java.lang.String)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String $r1, r3, r4;
        boolean $z0;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mSpn>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r1, r3);

        if $z0 != 0 goto label3;

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mSpn> = r4;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mSpnUpdatedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void notifyRegistrants()>();

     label3:
        return;
    }

    protected void setSimLanguage(byte[], byte[])
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        byte[] r1, r20;
        java.lang.String[] r2;
        android.content.Context $r3;
        android.content.res.AssetManager $r4;
        java.lang.String $r5, $r6, $r7, $r11, $r13, $r17, $r19;
        java.lang.Throwable $r8, $r14;
        java.lang.StringBuilder $r9, $r15;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: byte[];

        r20 := @parameter1: byte[];

        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.AssetManager getAssets()>();

        r2 = virtualinvoke $r4.<android.content.res.AssetManager: java.lang.String[] getLocales()>();

     label1:
        $r5 = staticinvoke <com.android.internal.telephony.uicc.IccRecords: java.lang.String findBestLanguage(byte[],java.lang.String[])>(r1, r2);

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mPrefLang> = $r5;

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse EF-LI: ");

        $r17 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>($r19);

     label4:
        $r6 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mPrefLang>;

        if $r6 != null goto label8;

     label5:
        $r7 = staticinvoke <com.android.internal.telephony.uicc.IccRecords: java.lang.String findBestLanguage(byte[],java.lang.String[])>(r20, r2);

        r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mPrefLang> = $r7;

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse EF-PL: ");

        $r11 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>($r13);

     label8:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label7;
    }

    public void setVoiceCallForwardingFlag(int, boolean, java.lang.String)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        boolean z0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        return;
    }

    public abstract void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message);

    public abstract void setVoiceMessageWaiting(int, int);

    public int storePendingTransaction(android.os.Message)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        android.os.Message r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: android.os.Message;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: int storePendingTransaction(android.os.Message,java.lang.Object)>(r1, null);

        return $i0;
    }

    public int storePendingTransaction(android.os.Message, java.lang.Object)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        int i0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        android.util.Pair $r2;
        java.util.HashMap $r3, r10;
        java.lang.Integer $r4;
        java.lang.Throwable $r6;
        android.os.Message r7;
        java.lang.Object r8;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r7 := @parameter0: android.os.Message;

        r8 := @parameter1: java.lang.Object;

        $r1 = <com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicInteger sNextRequestId>;

        i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r2 = new android.util.Pair;

        specialinvoke $r2.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r7, r8);

        r10 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.HashMap mPendingTransactions>;

        entermonitor r10;

     label1:
        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.HashMap mPendingTransactions>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r2);

        exitmonitor r10;

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r10;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String $r3, $r34, $r37, $r38, $r41, $r44, $r45, $r48, $r53, $r62, $r66, $r70, $r75, $r78, $r79, $r81, $r82, $r83, $r88, r90, r92, r94, r96, r98;
        java.lang.StringBuilder $r4, $r67, $r72, $r77, $r85;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        android.content.Context $r9;
        com.android.internal.telephony.CommandsInterface $r12;
        com.android.internal.telephony.uicc.IccFileHandler $r15;
        com.android.internal.telephony.uicc.UiccCardApplication $r18;
        int $i0, $i1, $i2, $i3;
        com.android.internal.telephony.uicc.AdnRecordCache $r23;
        com.android.internal.telephony.uicc.CarrierTestOverride $r31, $r55, $r64, $r69, $r74, $r87;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        $r3 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mFullIccId>;

        r90 = staticinvoke <android.telephony.SubscriptionInfo: java.lang.String givePrintableIccid(java.lang.String)>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDestroyed=");

        $r6 = r0.<com.android.internal.telephony.uicc.IccRecords: java.util.concurrent.atomic.AtomicBoolean mDestroyed>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mContext=");

        $r9 = r0.<com.android.internal.telephony.uicc.IccRecords: android.content.Context mContext>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCi=");

        $r12 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.CommandsInterface mCi>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFh=");

        $r15 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mParentApp=");

        $r18 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" recordsToLoad=");

        $i0 = r0.<com.android.internal.telephony.uicc.IccRecords: int mRecordsToLoad>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" adnCache=");

        $r23 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" recordsRequested=");

        $z1 = r0.<com.android.internal.telephony.uicc.IccRecords: boolean mRecordsRequested>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lockedRecordsReqReason=");

        $i1 = r0.<com.android.internal.telephony.uicc.IccRecords: int mLockedRecordsReqReason>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" iccid=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r90);

        $r31 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        z0 = virtualinvoke $r31.<com.android.internal.telephony.uicc.CarrierTestOverride: boolean isInTestMode()>();

        if z0 == 0 goto label1;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mFakeIccid=");

        $r87 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $r88 = virtualinvoke $r87.<com.android.internal.telephony.uicc.CarrierTestOverride: java.lang.String getFakeIccid()>();

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        r92 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        r92 = "";

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r92);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msisdnTag=");

        $r34 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mMsisdnTag>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" voiceMailNum=");

        $r37 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mVoiceMailNum>;

        $r38 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)>(0, $r37);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" voiceMailTag=");

        $r41 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mVoiceMailTag>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" voiceMailNum=");

        $r44 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mNewVoiceMailNum>;

        $r45 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)>(0, $r44);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" newVoiceMailTag=");

        $r48 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mNewVoiceMailTag>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isVoiceMailFixed=");

        $z2 = r0.<com.android.internal.telephony.uicc.IccRecords: boolean mIsVoiceMailFixed>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mImsi=");

        $r53 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        if $r53 == null goto label3;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r78 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        $r79 = virtualinvoke $r78.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r81 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mImsi>;

        $r82 = virtualinvoke $r81.<java.lang.String: java.lang.String substring(int)>(6);

        $r83 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(boolean,java.lang.Object)>(0, $r82);

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        r94 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        r94 = "null";

     label4:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r94);

        $r55 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $z3 = virtualinvoke $r55.<com.android.internal.telephony.uicc.CarrierTestOverride: boolean isInTestMode()>();

        if $z3 == 0 goto label5;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFakeImsi=");

        $r74 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $r75 = virtualinvoke $r74.<com.android.internal.telephony.uicc.CarrierTestOverride: java.lang.String getFakeIMSI()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        r96 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label5:
        r96 = "";

     label6:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r96);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mncLength=");

        $i2 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mailboxIndex=");

        $i3 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMailboxIndex>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spn=");

        $r62 = r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String mSpn>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $z4 = virtualinvoke $r64.<com.android.internal.telephony.uicc.CarrierTestOverride: boolean isInTestMode()>();

        if $z4 == 0 goto label7;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFakeSpn=");

        $r69 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.CarrierTestOverride mCarrierTestOverride>;

        $r70 = virtualinvoke $r69.<com.android.internal.telephony.uicc.CarrierTestOverride: java.lang.String getFakeSpn()>();

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        r98 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label8;

     label7:
        r98 = "";

     label8:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r98);

        $r66 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r66;
    }

    public void unregisterForImsiReady(android.os.Handler)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mImsiReadyRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForLockedRecordsLoaded(android.os.Handler)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mLockedRecordsLoadedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNetworkLockedRecordsLoaded(android.os.Handler)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkLockedRecordsLoadedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNetworkSelectionModeAutomatic(android.os.Handler)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNetworkSelectionModeAutomaticRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNewSms(android.os.Handler)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mNewSmsRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForRecordsEvents(android.os.Handler)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsEventsRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForRecordsLoaded(android.os.Handler)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsLoadedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForRecordsOverride(android.os.Handler)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mRecordsOverrideRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSpnUpdate(android.os.Handler)
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        android.os.Handler r1;
        com.android.internal.telephony.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.RegistrantList mSpnUpdatedRegistrants>;

        virtualinvoke $r2.<com.android.internal.telephony.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    protected void updateOperatorPlmn()
    {
        com.android.internal.telephony.uicc.IccRecords r0;
        java.lang.String r1, r2, $r5, $r7, $r9, $r10, $r13, $r14, $r18, $r23;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, i17;
        java.lang.StringBuilder $r3, $r15, $r20, r26;
        android.content.Context $r8;
        boolean $z0;
        java.lang.Throwable $r19;
        java.lang.String[] r24;

        r0 := @this: com.android.internal.telephony.uicc.IccRecords;

        r1 = virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getIMSI()>();

        if r1 == null goto label9;

        i14 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        if i14 == 0 goto label1;

        if i14 != 2 goto label4;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 < 6 goto label4;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        r24 = <com.android.internal.telephony.uicc.IccRecords: java.lang.String[] MCCMNC_CODES_HAVING_3DIGITS_MNC>;

        i0 = lengthof r24;

        i15 = 0;

     label2:
        if i15 >= i0 goto label4;

        $r14 = r24[i15];

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength> = 3;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMSI: setting1 mMncLength=");

        $i12 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>($r18);

        goto label4;

     label3:
        i15 = i15 + 1;

        goto label2;

     label4:
        $i16 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        if $i16 != 0 goto label8;

     label5:
        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $i10 = staticinvoke <com.android.internal.telephony.MccTable: int smallestDigitsMccForMnc(int)>($i9);

        r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength> = $i10;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting2 mMncLength=");

        $i11 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r13 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>($r13);

     label6:
        goto label8;

     label7:
        $r19 := @caughtexception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupt IMSI! setting3 mMncLength=");

        $i13 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void loge(java.lang.String)>($r23);

     label8:
        i17 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        if i17 == 0 goto label9;

        if i17 == -1 goto label9;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        $i4 = $i3 + 3;

        if $i2 < $i4 goto label9;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update mccmnc=");

        $i5 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        $i6 = $i5 + 3;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void log(java.lang.String)>($r7);

        $r8 = r0.<com.android.internal.telephony.uicc.IccRecords: android.content.Context mContext>;

        $i7 = r0.<com.android.internal.telephony.uicc.IccRecords: int mMncLength>;

        $i8 = $i7 + 3;

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i8);

        staticinvoke <com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String)>($r8, $r9);

     label9:
        return;

        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }
}
