public class com.android.internal.telephony.uicc.IccUtils extends java.lang.Object
{
    static final int FPLMN_BYTE_SIZE;
    private static final char[] HEX_CHARS;
    static final java.lang.String LOG_TAG;

    static void <clinit>()
    {
        char[] $r0;

        <com.android.internal.telephony.uicc.IccUtils: java.lang.String LOG_TAG> = "IccUtils";

        <com.android.internal.telephony.uicc.IccUtils: int FPLMN_BYTE_SIZE> = 3;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        <com.android.internal.telephony.uicc.IccUtils: char[] HEX_CHARS> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.internal.telephony.uicc.IccUtils r0;

        r0 := @this: com.android.internal.telephony.uicc.IccUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String adnStringFieldToString(byte[], int, int)
    {
        byte[] r0;
        java.lang.String $r1, $r2, $r4, $r5, $r8, r11, r12, r16, r17;
        java.lang.StringBuilder $r3;
        byte $b2, $b4, $b5, $b6, $b9, $b11, $b14, $b17, $b21, $b23, $b26, $b29;
        int $i3, $i7, $i10, $i12, $i13, $i16, $i19, $i20, $i22, $i24, $i25, $i28, $i30, $i31, $i32, $i33, i36, i37, i38, i39, i41, i43, i45, i46, i47;
        char $c8, $c34, c42;
        short $s15, $s18, $s27, s40, s44;
        android.content.res.Resources$NotFoundException $r9;
        java.lang.Throwable $r10;
        boolean z1;
        android.content.res.Resources r15;

        r0 := @parameter0: byte[];

        i36 := @parameter1: int;

        i37 := @parameter2: int;

        if i37 != 0 goto label01;

        return "";

     label01:
        if i37 < 1 goto label08;

        $b29 = r0[i36];

        if $b29 != -128 goto label08;

        $i30 = i37 - 1;

        i38 = $i30 / 2;

        r11 = null;

     label02:
        r12 = new java.lang.String;

        $i32 = i36 + 1;

        $i31 = i38 * 2;

        specialinvoke r12.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, $i32, $i31, "utf-16be");

     label03:
        r11 = r12;

        goto label05;

     label04:
        $r10 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IccUtils", "implausible UnsupportedEncodingException", $r10);

     label05:
        if r11 == null goto label08;

        i39 = virtualinvoke r11.<java.lang.String: int length()>();

     label06:
        if i39 <= 0 goto label07;

        $i33 = i39 - 1;

        $c34 = virtualinvoke r11.<java.lang.String: char charAt(int)>($i33);

        if $c34 != 65535 goto label07;

        i39 = i39 + -1;

        goto label06;

     label07:
        $r8 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int,int)>(0, i39);

        return $r8;

     label08:
        if i37 < 3 goto label10;

        $b21 = r0[i36];

        if $b21 != -127 goto label10;

        $i22 = i36 + 1;

        $b23 = r0[$i22];

        s40 = $b23 & 255;

        i41 = s40;

        $i24 = i37 - 3;

        if s40 <= $i24 goto label09;

        i41 = i37 - 3;

     label09:
        $i25 = i36 + 2;

        $b26 = r0[$i25];

        $s27 = $b26 & 255;

        $i28 = $s27 << 7;

        c42 = (char) $i28;

        i43 = i36 + 3;

        z1 = 1;

        goto label12;

     label10:
        z1 = 0;

        c42 = 0;

        i41 = 0;

        i43 = i36;

        if i37 < 4 goto label12;

        z1 = 0;

        c42 = 0;

        i41 = 0;

        i43 = i36;

        $b9 = r0[i36];

        if $b9 != -126 goto label12;

        $i10 = i36 + 1;

        $b11 = r0[$i10];

        s44 = $b11 & 255;

        i41 = s44;

        $i12 = i37 - 4;

        if s44 <= $i12 goto label11;

        i41 = i37 - 4;

     label11:
        $i13 = i36 + 2;

        $b14 = r0[$i13];

        $s15 = $b14 & 255;

        $i19 = $s15 << 8;

        $i16 = i36 + 3;

        $b17 = r0[$i16];

        $s18 = $b17 & 255;

        $i20 = $i19 | $s18;

        c42 = (char) $i20;

        i43 = i36 + 4;

        z1 = 1;

     label12:
        if z1 == 0 goto label18;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label13:
        if i41 <= 0 goto label17;

        i45 = i41;

        i46 = i43;

        $b2 = r0[i43];

        if $b2 >= 0 goto label14;

        $b5 = r0[i43];

        $b6 = $b5 & 127;

        $i7 = $b6 + c42;

        $c8 = (char) $i7;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        i46 = i43 + 1;

        i45 = i41 - 1;

     label14:
        i47 = 0;

     label15:
        if i47 >= i45 goto label16;

        $i3 = i46 + i47;

        $b4 = r0[$i3];

        if $b4 < 0 goto label16;

        i47 = i47 + 1;

        goto label15;

     label16:
        $r5 = staticinvoke <com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int)>(r0, i46, i47);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        i43 = i46 + i47;

        i41 = i45 - i47;

        goto label13;

     label17:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label18:
        r15 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r16 = "";

     label19:
        r17 = virtualinvoke r15.<android.content.res.Resources: java.lang.String getString(int)>(17040272);

     label20:
        r16 = r17;

        goto label22;

     label21:
        $r9 := @caughtexception;

     label22:
        $r1 = virtualinvoke r16.<java.lang.String: java.lang.String trim()>();

        $r2 = staticinvoke <com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int,java.lang.String)>(r0, i43, i37, $r1);

        return $r2;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label04;
        catch android.content.res.Resources$NotFoundException from label19 to label20 with label21;
    }

    public static java.lang.String bcdPlmnToString(byte[], int)
    {
        int i0, $i1, $i2, $i3, $i5, $i9, $i10, $i12, $i14, $i17, $i18, $i20, $i22;
        java.lang.String r0, r3;
        byte[] $r1, r2;
        byte $b4, $b6, $b7, $b8, $b11, $b13, $b15, $b16, $b19, $b21, $b23, $b24, $b25, $b28;
        short $s26, $s27;
        boolean $z0;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i2 = i0 + 3;

        $i1 = lengthof r2;

        if $i2 <= $i1 goto label1;

        return null;

     label1:
        $r1 = newarray (byte)[3];

        $i3 = i0 + 0;

        $b4 = r2[$i3];

        $i9 = $b4 << 4;

        $i5 = i0 + 0;

        $b6 = r2[$i5];

        $b7 = $b6 >> 4;

        $b8 = $b7 & 15;

        $i10 = $i9 | $b8;

        $b11 = (byte) $i10;

        $r1[0] = $b11;

        $i12 = i0 + 1;

        $b13 = r2[$i12];

        $i17 = $b13 << 4;

        $i14 = i0 + 2;

        $b15 = r2[$i14];

        $b16 = $b15 & 15;

        $i18 = $i17 | $b16;

        $b19 = (byte) $i18;

        $r1[1] = $b19;

        $i20 = i0 + 2;

        $b21 = r2[$i20];

        $s26 = $b21 & 240;

        $i22 = i0 + 1;

        $b23 = r2[$i22];

        $b24 = $b23 >> 4;

        $b25 = $b24 & 15;

        $s27 = $s26 | $b25;

        $b28 = (byte) $s27;

        $r1[2] = $b28;

        r0 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r1);

        r3 = r0;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("F");

        if $z0 == 0 goto label2;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("F", "");

     label2:
        return r3;
    }

    public static void bcdToBytes(java.lang.String, byte[])
    {
        java.lang.String r0;
        byte[] r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        staticinvoke <com.android.internal.telephony.uicc.IccUtils: void bcdToBytes(java.lang.String,byte[],int)>(r0, r1, 0);

        return;
    }

    public static void bcdToBytes(java.lang.String, byte[], int)
    {
        java.lang.String r0, r5;
        byte[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i13, i16, i17, $i18;
        char $c8, $c11;
        byte $b9, $b12, $b14, $b15;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        i16 := @parameter2: int;

        r5 = r0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 % 2;

        if $i2 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $i3 = lengthof r1;

        $i4 = $i3 - i16;

        $i5 = $i4 * 2;

        $i6 = virtualinvoke r5.<java.lang.String: int length()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

        i17 = 0;

     label2:
        $i18 = i17 + 1;

        if $i18 >= i0 goto label3;

        $i7 = i17 + 1;

        $c8 = virtualinvoke r5.<java.lang.String: char charAt(int)>($i7);

        $b9 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte charToByte(char)>($c8);

        $i10 = $b9 << 4;

        $c11 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i17);

        $b12 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte charToByte(char)>($c11);

        $i13 = $i10 | $b12;

        $b14 = (byte) $i13;

        $b15 = (byte) $b14;

        r1[i16] = $b15;

        i17 = i17 + 2;

        i16 = i16 + 1;

        goto label2;

     label3:
        return;
    }

    public static byte[] bcdToBytes(java.lang.String)
    {
        java.lang.String r0;
        byte[] r1;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 + 1;

        $i2 = $i1 / 2;

        r1 = newarray (byte)[$i2];

        staticinvoke <com.android.internal.telephony.uicc.IccUtils: void bcdToBytes(java.lang.String,byte[])>(r0, r1);

        return r1;
    }

    public static java.lang.String bcdToString(byte[])
    {
        byte[] r0;
        int $i0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bcdToString(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static java.lang.String bcdToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2, $i3, $i5, $i9, i11;
        java.lang.StringBuilder $r2;
        byte $b4, $b7, $b8, b12, b13;
        char $c6, $c10;
        java.lang.String $r5;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        $i2 = i1 * 2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);

        i11 = i0;

     label1:
        $i3 = i0 + i1;

        if i11 >= $i3 goto label6;

        $b4 = r0[i11];

        b12 = $b4 & 15;

        if b12 <= 9 goto label2;

        goto label6;

     label2:
        $i5 = b12 + 48;

        $c6 = (char) $i5;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $b7 = r0[i11];

        $b8 = $b7 >> 4;

        b13 = $b8 & 15;

        if b13 != 15 goto label3;

        goto label5;

     label3:
        if b13 <= 9 goto label4;

        goto label6;

     label4:
        $i9 = b13 + 48;

        $c10 = (char) $i9;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c10);

     label5:
        i11 = i11 + 1;

        goto label1;

     label6:
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String bchToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2, $i3, i9;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        byte $b4, $b6, $b7, b10, b11;
        char[] $r4, $r6;
        char $c5, $c8;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        $i2 = i1 * 2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);

        i9 = i0;

     label1:
        $i3 = i0 + i1;

        if i9 >= $i3 goto label2;

        b10 = r0[i9];

        $r4 = <com.android.internal.telephony.uicc.IccUtils: char[] HEX_CHARS>;

        $b4 = b10 & 15;

        $c5 = $r4[$b4];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        b11 = r0[i9];

        $r6 = <com.android.internal.telephony.uicc.IccUtils: char[] HEX_CHARS>;

        $b6 = b11 >> 4;

        $b7 = $b6 & 15;

        $c8 = $r6[$b7];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        i9 = i9 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static int bitToRGB(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        return -1;

     label1:
        return -16777216;
    }

    private static int byteNumForInt(int, boolean)
    {
        int i0;
        boolean z0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if i0 < 0 goto label7;

        if z0 == 0 goto label3;

        if i0 > 127 goto label1;

        return 1;

     label1:
        if i0 > 32767 goto label2;

        return 2;

     label2:
        if i0 > 8388607 goto label6;

        return 3;

     label3:
        if i0 > 255 goto label4;

        return 1;

     label4:
        if i0 > 65535 goto label5;

        return 2;

     label5:
        if i0 > 16777215 goto label6;

        return 3;

     label6:
        return 4;

     label7:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value must be 0 or positive: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static int byteNumForSignedInt(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int byteNumForInt(int,boolean)>(i0, 1);

        return $i1;
    }

    public static int byteNumForUnsignedInt(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int byteNumForInt(int,boolean)>(i0, 0);

        return $i1;
    }

    public static java.lang.String byteToHex(byte)
    {
        byte b0, $b4;
        char[] r0, $r2;
        java.lang.String $r1;
        short $s1, $s2;
        char $c3, $c5;

        b0 := @parameter0: byte;

        r0 = <com.android.internal.telephony.uicc.IccUtils: char[] HEX_CHARS>;

        $r1 = new java.lang.String;

        $r2 = newarray (char)[2];

        $s1 = b0 & 255;

        $s2 = $s1 >>> 4;

        $c3 = r0[$s2];

        $r2[0] = $c3;

        $b4 = b0 & 15;

        $c5 = r0[$b4];

        $r2[1] = $c5;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        return $r1;
    }

    public static java.lang.String bytesToHexString(byte[])
    {
        byte[] r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, i8;
        java.lang.String $r3;
        byte $b3, $b4, $b6, b9, b10;
        char[] $r4, $r6;
        char $c5, $c7;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuilder;

        $i0 = lengthof r0;

        $i1 = $i0 * 2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i1);

        i8 = 0;

     label2:
        $i2 = lengthof r0;

        if i8 >= $i2 goto label3;

        b9 = r0[i8];

        $r4 = <com.android.internal.telephony.uicc.IccUtils: char[] HEX_CHARS>;

        $b3 = b9 >> 4;

        $b4 = $b3 & 15;

        $c5 = $r4[$b4];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        b10 = r0[i8];

        $r6 = <com.android.internal.telephony.uicc.IccUtils: char[] HEX_CHARS>;

        $b6 = b10 & 15;

        $c7 = $r6[$b6];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        i8 = i8 + 1;

        goto label2;

     label3:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static int bytesToInt(byte[], int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i7, i8, i9, $i10;
        java.lang.StringBuilder $r1, $r12, $r19;
        java.lang.IllegalArgumentException $r4, $r15;
        java.lang.String $r5, $r16, $r21;
        byte $b5;
        short $s6;
        byte[] r17;
        java.lang.IndexOutOfBoundsException $r20;

        r17 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 > 4 goto label5;

        if i0 < 0 goto label4;

        if i1 < 0 goto label4;

        $i3 = i0 + i1;

        $i2 = lengthof r17;

        if $i3 > $i2 goto label4;

        i8 = 0;

        i9 = 0;

     label1:
        if i9 >= i1 goto label2;

        $i7 = i8 << 8;

        $i4 = i0 + i9;

        $b5 = r17[$i4];

        $s6 = $b5 & 255;

        i8 = $i7 | $s6;

        i9 = i9 + 1;

        goto label1;

     label2:
        if i8 < 0 goto label3;

        return i8;

     label3:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src cannot be parsed as a positive integer: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label4:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Out of the bounds: src=[");

        $i10 = lengthof r17;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], offset=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", length=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = new java.lang.IndexOutOfBoundsException;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("length must be <= 4 (only 32-bit integer supported): ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static long bytesToRawLong(byte[], int, int)
    {
        int i0, i1, $i2, $i3, $i4, i10, $i11;
        java.lang.StringBuilder $r1, $r13;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, $r15;
        byte $b5;
        short $s6;
        long $l7, $l8, l9;
        byte[] r12;
        java.lang.IndexOutOfBoundsException $r14;

        r12 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 > 8 goto label4;

        if i0 < 0 goto label3;

        if i1 < 0 goto label3;

        $i3 = i0 + i1;

        $i2 = lengthof r12;

        if $i3 > $i2 goto label3;

        l9 = 0L;

        i10 = 0;

     label1:
        if i10 >= i1 goto label2;

        $l8 = l9 << 8;

        $i4 = i0 + i10;

        $b5 = r12[$i4];

        $s6 = $b5 & 255;

        $l7 = (long) $s6;

        l9 = $l8 | $l7;

        i10 = i10 + 1;

        goto label1;

     label2:
        return l9;

     label3:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Out of the bounds: src=[");

        $i11 = lengthof r12;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], offset=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", length=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = new java.lang.IndexOutOfBoundsException;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("length must be <= 8 (only 64-bit long supported): ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static int cdmaBcdByteToInt(byte)
    {
        byte b0, $b2, $b3, $b4, $b5;
        short $s1;
        int i6, i7;

        b0 := @parameter0: byte;

        i6 = 0;

        $s1 = b0 & 240;

        if $s1 > 144 goto label1;

        $b4 = b0 >> 4;

        $b5 = $b4 & 15;

        i6 = $b5 * 10;

     label1:
        i7 = i6;

        $b2 = b0 & 15;

        if $b2 > 9 goto label2;

        $b3 = b0 & 15;

        i7 = i6 + $b3;

     label2:
        return i7;
    }

    public static java.lang.String cdmaBcdToString(byte[], int, int)
    {
        byte[] r0;
        int i0, $i2, $i6, i8, i9, i12;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        byte $b1, $b4, $b5, b10, b11, b13, b14;
        char $c3, $c7;

        r0 := @parameter0: byte[];

        i8 := @parameter1: int;

        i0 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(i0);

        i9 = 0;

     label1:
        if i9 >= i0 goto label5;

        $b1 = r0[i8];

        b10 = $b1 & 15;

        b11 = b10;

        if b10 <= 9 goto label2;

        b11 = 0;

     label2:
        $i2 = b11 + 48;

        $c3 = (char) $i2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        i12 = i9 + 1;

        if i12 != i0 goto label3;

        goto label5;

     label3:
        $b4 = r0[i8];

        $b5 = $b4 >> 4;

        b13 = $b5 & 15;

        b14 = b13;

        if b13 <= 9 goto label4;

        b14 = 0;

     label4:
        $i6 = b14 + 48;

        $c7 = (char) $i6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        i9 = i12 + 1;

        i8 = i8 + 1;

        goto label1;

     label5:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static byte charToByte(char)
    {
        char c0;
        int $i1, $i3, $i5;
        byte $b2, $b4, $b6;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 > 57 goto label1;

        $i5 = c0 - 48;

        $b6 = (byte) $i5;

        return $b6;

     label1:
        if c0 < 65 goto label2;

        if c0 > 70 goto label2;

        $i3 = c0 - 55;

        $b4 = (byte) $i3;

        return $b4;

     label2:
        if c0 < 97 goto label3;

        if c0 > 102 goto label3;

        $i1 = c0 - 87;

        $b2 = (byte) $i1;

        return $b2;

     label3:
        return 0;
    }

    public static byte countTrailingZeros(byte)
    {
        short s0, $s1, $s2, $s3;
        int $i4, $i5, $i6;
        byte b7, b8, b9, b10, b11;

        b7 := @parameter0: byte;

        if b7 != 0 goto label1;

        return 8;

     label1:
        s0 = b7 & 255;

        b8 = 7;

        $s1 = s0 & 15;

        if $s1 == 0 goto label2;

        $i6 = 7 - 4;

        b8 = (byte) $i6;

     label2:
        b9 = b8;

        $s2 = s0 & 51;

        if $s2 == 0 goto label3;

        $i5 = b8 - 2;

        b9 = (byte) $i5;

     label3:
        b10 = b9;

        $s3 = s0 & 85;

        if $s3 == 0 goto label4;

        $i4 = b9 - 1;

        b11 = (byte) $i4;

        b10 = b11;

     label4:
        return b10;
    }

    public static byte[] encodeFplmns(java.util.List, int)
    {
        int i0, i2, i3;
        byte[] r0;
        java.util.Iterator r1;
        boolean $z0;
        byte $b1;
        java.lang.Object $r2;
        java.util.List r3;
        java.lang.String r4;

        r3 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r0 = newarray (byte)[i0];

        i2 = 0;

        r1 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        i3 = i2;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r2;

        if i2 < i0 goto label2;

        i3 = i2;

        goto label3;

     label2:
        staticinvoke <com.android.internal.telephony.uicc.IccUtils: void stringToBcdPlmn(java.lang.String,byte[],int)>(r4, r0, i2);

        i2 = i2 + 3;

        goto label1;

     label3:
        if i3 >= i0 goto label4;

        $b1 = (byte) -1;

        r0[i3] = $b1;

        i3 = i3 + 1;

        goto label3;

     label4:
        return r0;
    }

    private static int[] getCLUT(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i3, $i5, $i7, $i8, $i11, $i12, $i13, $i14, i15, i16, i17;
        int[] r1;
        byte b2, $b9, b18;
        short $s4, $s6, $s10;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = newarray (int)[i1];

        i15 = i0;

        i16 = 0;

     label2:
        i17 = i15 + 1;

        b2 = r0[i15];

        i3 = i17 + 1;

        b18 = r0[i17];

        i15 = i3 + 1;

        $s4 = b2 & 255;

        $i5 = $s4 << 16;

        $i8 = $i5 | -16777216;

        $s6 = b18 & 255;

        $i7 = $s6 << 8;

        $i11 = $i8 | $i7;

        $b9 = r0[i3];

        $s10 = $b9 & 255;

        $i12 = $i11 | $s10;

        r1[i16] = $i12;

        $i13 = i1 * 3;

        $i14 = $i13 + i0;

        if i15 < $i14 goto label3;

        return r1;

     label3:
        i16 = i16 + 1;

        goto label2;
    }

    public static java.lang.String getDecimalSubstring(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0, i2;
        char $c1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        return $r1;
    }

    public static int gsmBcdByteToInt(byte)
    {
        byte b0, $b2, $b3, $b5, b6;
        short $s1;
        int $i4, i7;

        b0 := @parameter0: byte;

        b6 = 0;

        $s1 = b0 & 240;

        if $s1 > 144 goto label1;

        $b5 = b0 >> 4;

        b6 = $b5 & 15;

     label1:
        i7 = b6;

        $b2 = b0 & 15;

        if $b2 > 9 goto label2;

        $b3 = b0 & 15;

        $i4 = $b3 * 10;

        i7 = b6 + $i4;

     label2:
        return i7;
    }

    public static int hexCharToInt(char)
    {
        char c0;
        java.lang.StringBuilder $r1;
        java.lang.RuntimeException $r5;
        java.lang.String $r6;
        int $i1, $i2, $i3, $i4, $i5;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 > 57 goto label1;

        $i5 = c0 - 48;

        return $i5;

     label1:
        if c0 < 65 goto label2;

        if c0 > 70 goto label2;

        $i3 = c0 - 65;

        $i4 = $i3 + 10;

        return $i4;

     label2:
        if c0 < 97 goto label3;

        if c0 > 102 goto label3;

        $i1 = c0 - 97;

        $i2 = $i1 + 10;

        return $i2;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid hex char \'");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public static byte[] hexStringToBytes(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, i12;
        byte[] r1;
        char $c3, $c7;
        byte $b10, $b11;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = i0 / 2;

        r1 = newarray (byte)[$i1];

        i12 = 0;

     label2:
        if i12 >= i0 goto label3;

        $i2 = i12 / 2;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12);

        $i4 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int hexCharToInt(char)>($c3);

        $i6 = $i4 << 4;

        $i5 = i12 + 1;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        $i8 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int hexCharToInt(char)>($c7);

        $i9 = $i6 | $i8;

        $b10 = (byte) $i9;

        $b11 = (byte) $b10;

        r1[$i2] = $b11;

        i12 = i12 + 2;

        goto label2;

     label3:
        return r1;
    }

    private static int intToBytes(int, byte[], int, boolean)
    {
        int i0, i1, $i2, $i3, $i4, $i7, i8, i9;
        boolean z0;
        java.lang.StringBuilder $r0;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.String $r4;
        byte $b5, $b6;
        byte[] r5;

        i8 := @parameter0: int;

        r5 := @parameter1: byte[];

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int byteNumForInt(int,boolean)>(i8, z0);

        if i0 < 0 goto label3;

        $i3 = i0 + i1;

        $i2 = lengthof r5;

        if $i3 > $i2 goto label3;

        i9 = i1 - 1;

     label1:
        if i9 < 0 goto label2;

        $i7 = i0 + i9;

        $i4 = i8 & 255;

        $b5 = (byte) $i4;

        $b6 = (byte) $b5;

        r5[$i7] = $b6;

        i9 = i9 + -1;

        i8 = i8 >>> 8;

        goto label1;

     label2:
        return i1;

     label3:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not enough space to write. Required bytes: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    private static int[] mapTo2OrderBitColor(byte[], int, int, int[], int)
    {
        byte[] r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i10, i12, i14, i15;
        int[] r1, r2, $r3;
        byte b3, $b8;
        short $s9, s13;

        r0 := @parameter0: byte[];

        i12 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: int[];

        i1 := @parameter4: int;

        $i4 = 8 % i1;

        if $i4 == 0 goto label01;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccUtils", "not event number of color");

        $r3 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int[] mapToNon2OrderBitColor(byte[],int,int,int[],int)>(r0, i12, i0, r1, i1);

        return $r3;

     label01:
        s13 = 1;

        if i1 == 1 goto label05;

        if i1 == 2 goto label04;

        if i1 == 4 goto label03;

        if i1 == 8 goto label02;

        goto label06;

     label02:
        s13 = 255;

        goto label06;

     label03:
        s13 = 15;

        goto label06;

     label04:
        s13 = 3;

        goto label06;

     label05:
        s13 = 1;

     label06:
        r2 = newarray (int)[i0];

        i14 = 0;

        i2 = 8 / i1;

     label07:
        if i14 >= i0 goto label10;

        b3 = r0[i12];

        i15 = 0;

     label08:
        if i15 >= i2 goto label09;

        $i5 = i2 - i15;

        $i6 = $i5 - 1;

        $i7 = $i6 * i1;

        $b8 = b3 >> $i7;

        $s9 = $b8 & s13;

        $i10 = r1[$s9];

        r2[i14] = $i10;

        i15 = i15 + 1;

        i14 = i14 + 1;

        goto label08;

     label09:
        i12 = i12 + 1;

        goto label07;

     label10:
        return r2;
    }

    private static int[] mapToNon2OrderBitColor(byte[], int, int, int[], int)
    {
        byte[] r0;
        int i0, i1, i2, $i3;
        int[] r1, $r2, $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: int[];

        i2 := @parameter4: int;

        $i3 = 8 % i2;

        if $i3 != 0 goto label1;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccUtils", "not odd number of color");

        $r3 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int[] mapTo2OrderBitColor(byte[],int,int,int[],int)>(r0, i0, i1, r1, i2);

        return $r3;

     label1:
        $r2 = newarray (int)[i1];

        return $r2;
    }

    public static java.lang.String networkNameToString(byte[], int, int)
    {
        byte[] r0;
        int i0, $i6, $i9, $i10, $i11, $i12, $i13, $i14, i16;
        byte b1, $b2, $b4, $b5, $b7, $b8, b17;
        short $s3;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @parameter0: byte[];

        i16 := @parameter1: int;

        i0 := @parameter2: int;

        $b2 = r0[i16];

        $s3 = $b2 & 128;

        if $s3 != 128 goto label7;

        if i0 >= 1 goto label1;

        goto label7;

     label1:
        $b4 = r0[i16];

        $b5 = $b4 >>> 4;

        b1 = $b5 & 7;

        if b1 == 0 goto label5;

        if b1 == 1 goto label2;

        r2 = "";

        goto label6;

     label2:
        r2 = new java.lang.String;

        $i14 = i16 + 1;

        $i13 = i0 - 1;

        specialinvoke r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, $i14, $i13, "utf-16");

     label3:
        goto label6;

     label4:
        $r1 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IccUtils", "implausible UnsupportedEncodingException", $r1);

        r2 = "";

        goto label6;

     label5:
        $i12 = i16 + 1;

        $i6 = i0 - 1;

        $i9 = $i6 * 8;

        $b7 = r0[i16];

        $b8 = $b7 & 7;

        $i10 = $i9 - $b8;

        $i11 = $i10 / 7;

        r2 = staticinvoke <com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int)>(r0, $i12, $i11);

     label6:
        b17 = r0[i16];

        return r2;

     label7:
        return "";

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static android.graphics.Bitmap parseToBnW(byte[], int)
    {
        byte[] r0;
        short s0, s1;
        int i2, $i6, $i9, i10, i11, i12, i13, i14, i16;
        int[] r1;
        byte $b3, $b4, $b7, $b8, b15;
        android.graphics.Bitmap$Config $r2;
        android.graphics.Bitmap $r3;

        r0 := @parameter0: byte[];

        i10 := @parameter1: int;

        i11 = 0 + 1;

        $b3 = r0[0];

        s0 = $b3 & 255;

        i12 = i11 + 1;

        $b4 = r0[i11];

        s1 = $b4 & 255;

        i2 = s0 * s1;

        r1 = newarray (int)[i2];

        i13 = 0;

        i14 = 7;

        b15 = 0;

     label1:
        if i13 >= i2 goto label3;

        i16 = i12;

        $i6 = i13 % 8;

        if $i6 != 0 goto label2;

        b15 = r0[i12];

        i14 = 7;

        i16 = i12 + 1;

     label2:
        $b7 = b15 >> i14;

        $b8 = $b7 & 1;

        $i9 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int bitToRGB(int)>($b8);

        r1[i13] = $i9;

        i13 = i13 + 1;

        i14 = i14 + -1;

        i12 = i16;

        goto label1;

     label3:
        if i13 == i2 goto label4;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccUtils", "parse end and size error");

     label4:
        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r1, s0, s1, $r2);

        return $r3;
    }

    public static android.graphics.Bitmap parseToRGB(byte[], int, boolean)
    {
        boolean z0;
        short s0, $s6, $s8, s17, s19, s21;
        byte b1, $b2, $b3, $b4, $b5, $b7;
        int[] r0, r4;
        int $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i18, i20, i22, i23, i24;
        android.graphics.Bitmap$Config $r1;
        android.graphics.Bitmap $r2;
        byte[] r3;

        r3 := @parameter0: byte[];

        i15 := @parameter1: int;

        z0 := @parameter2: boolean;

        i16 = 0 + 1;

        $b2 = r3[0];

        s17 = $b2 & 255;

        i18 = i16 + 1;

        $b3 = r3[i16];

        s19 = $b3 & 255;

        i20 = i18 + 1;

        $b4 = r3[i18];

        s21 = $b4 & 255;

        i22 = i20 + 1;

        $b5 = r3[i20];

        s0 = $b5 & 255;

        i23 = i22 + 1;

        b1 = r3[i22];

        i24 = i23 + 1;

        $s6 = b1 & 255;

        $i9 = $s6 << 8;

        $b7 = r3[i23];

        $s8 = $b7 & 255;

        $i10 = $i9 | $s8;

        r0 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int[] getCLUT(byte[],int,int)>(r3, $i10, s0);

        if 1 != z0 goto label1;

        $i14 = s0 - 1;

        r0[$i14] = 0;

     label1:
        $i11 = 8 % s21;

        if $i11 != 0 goto label2;

        $i13 = s17 * s19;

        r4 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int[] mapTo2OrderBitColor(byte[],int,int,int[],int)>(r3, i24, $i13, r0, s21);

        goto label3;

     label2:
        $i12 = s17 * s19;

        r4 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int[] mapToNon2OrderBitColor(byte[],int,int,int[],int)>(r3, i24, $i12, r0, s21);

     label3:
        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r4, s17, s19, $r1);

        return $r2;
    }

    public static int signedIntToBytes(int, byte[], int)
    {
        int i0, i1, $i2;
        byte[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        i1 := @parameter2: int;

        $i2 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int intToBytes(int,byte[],int,boolean)>(i0, r0, i1, 1);

        return $i2;
    }

    public static byte[] signedIntToBytes(int)
    {
        int i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;
        byte[] r5;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int byteNumForSignedInt(int)>(i0);

        r5 = newarray (byte)[$i1];

        staticinvoke <com.android.internal.telephony.uicc.IccUtils: int signedIntToBytes(int,byte[],int)>(i0, r5, 0);

        return r5;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value must be 0 or positive: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    public static void stringToBcdPlmn(java.lang.String, byte[], int)
    {
        java.lang.String r0;
        byte[] r1;
        int i0, $i1, $i4, $i7, $i10, $i12, $i15, $i18, $i21, $i24;
        char $c2, $c5, $c13, $c19, $c22, c27, c28;
        byte $b3, $b6, $b8, $b9, $b11, $b14, $b16, $b17, $b20, $b23, $b25, $b26;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 <= 5 goto label1;

        c27 = virtualinvoke r0.<java.lang.String: char charAt(int)>(5);

        c28 = c27;

        goto label2;

     label1:
        c28 = 70;

     label2:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $b3 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte charToByte(char)>($c2);

        $i4 = $b3 << 4;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $b6 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte charToByte(char)>($c5);

        $i7 = $i4 | $b6;

        $b8 = (byte) $i7;

        $b9 = (byte) $b8;

        r1[i0] = $b9;

        $i10 = i0 + 1;

        $b11 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte charToByte(char)>(c28);

        $i12 = $b11 << 4;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $b14 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte charToByte(char)>($c13);

        $i15 = $i12 | $b14;

        $b16 = (byte) $i15;

        $b17 = (byte) $b16;

        r1[$i10] = $b17;

        $i18 = i0 + 2;

        $c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(4);

        $b20 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte charToByte(char)>($c19);

        $i21 = $b20 << 4;

        $c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $b23 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte charToByte(char)>($c22);

        $i24 = $i21 | $b23;

        $b25 = (byte) $i24;

        $b26 = (byte) $b25;

        r1[$i18] = $b26;

        return;
    }

    public static java.lang.String stripTrailingFs(java.lang.String)
    {
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1 = null;

        goto label2;

     label1:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(?i)f*$", "");

     label2:
        return r1;
    }

    public static int unsignedIntToBytes(int, byte[], int)
    {
        int i0, i1, $i2;
        byte[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        i1 := @parameter2: int;

        $i2 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int intToBytes(int,byte[],int,boolean)>(i0, r0, i1, 0);

        return $i2;
    }

    public static byte[] unsignedIntToBytes(int)
    {
        int i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;
        byte[] r5;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int byteNumForUnsignedInt(int)>(i0);

        r5 = newarray (byte)[$i1];

        staticinvoke <com.android.internal.telephony.uicc.IccUtils: int unsignedIntToBytes(int,byte[],int)>(i0, r5, 0);

        return r5;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value must be 0 or positive: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }
}
