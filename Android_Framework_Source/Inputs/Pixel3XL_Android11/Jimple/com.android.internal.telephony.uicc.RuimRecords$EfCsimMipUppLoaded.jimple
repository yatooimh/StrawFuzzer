class com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded extends java.lang.Object implements com.android.internal.telephony.uicc.IccRecords$IccRecordLoaded
{
    final com.android.internal.telephony.uicc.RuimRecords this$0;

    private void <init>(com.android.internal.telephony.uicc.RuimRecords)
    {
        com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded r0;
        com.android.internal.telephony.uicc.RuimRecords r1;

        r0 := @this: com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded;

        r1 := @parameter0: com.android.internal.telephony.uicc.RuimRecords;

        r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: com.android.internal.telephony.uicc.RuimRecords this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.internal.telephony.uicc.RuimRecords, com.android.internal.telephony.uicc.RuimRecords$1)
    {
        com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded r0;
        com.android.internal.telephony.uicc.RuimRecords r1;
        com.android.internal.telephony.uicc.RuimRecords$1 r2;

        r0 := @this: com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded;

        r1 := @parameter0: com.android.internal.telephony.uicc.RuimRecords;

        r2 := @parameter1: com.android.internal.telephony.uicc.RuimRecords$1;

        specialinvoke r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: void <init>(com.android.internal.telephony.uicc.RuimRecords)>(r1);

        return;
    }

    boolean checkLengthLegal(int, int)
    {
        com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded r0;
        int i0, i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= i1 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSIM MIPUPP format error, length = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected length at least =");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RuimRecords", $r7);

        return 0;

     label1:
        return 1;
    }

    public java.lang.String getEfName()
    {
        com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded r0;

        r0 := @this: com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded;

        return "EF_CSIM_MIPUPP";
    }

    public void onRecordLoaded(android.os.AsyncResult)
    {
        com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33;
        com.android.internal.telephony.uicc.RuimRecords r1, $r6;
        java.lang.Object $r2;
        com.android.internal.telephony.BitwiseInputStream $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.String $r7, $r9, r15;
        char $c14, $c15;
        java.lang.Exception $r10;
        android.os.AsyncResult r11;
        byte[] r12;
        char[] r14;
        java.lang.StringBuilder r16;

        r0 := @this: com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded;

        r11 := @parameter0: android.os.AsyncResult;

        $r2 = r11.<android.os.AsyncResult: java.lang.Object result>;

        r12 = (byte[]) $r2;

        $i1 = lengthof r12;

        if $i1 >= 1 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RuimRecords", "MIPUPP read error");

        return;

     label01:
        $r3 = new com.android.internal.telephony.BitwiseInputStream;

        specialinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: void <init>(byte[])>(r12);

     label02:
        $i2 = virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: int read(int)>(8);

        i18 = $i2 << 3;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: boolean checkLengthLegal(int,int)>(i18, 1);

        if $z0 != 0 goto label04;

     label03:
        return;

     label04:
        i19 = virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: int read(int)>(1);

     label05:
        i20 = i18 - 1;

        i21 = i20;

        if i19 != 1 goto label10;

     label06:
        $z10 = virtualinvoke r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: boolean checkLengthLegal(int,int)>(i20, 11);

        if $z10 != 0 goto label08;

     label07:
        return;

     label08:
        virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: void skip(int)>(11);

     label09:
        i21 = i20 - 11;

     label10:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: boolean checkLengthLegal(int,int)>(i21, 4);

        if $z1 != 0 goto label12;

     label11:
        return;

     label12:
        i0 = virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: int read(int)>(4);

     label13:
        i22 = i21 + -4;

        i23 = 0;

     label14:
        if i23 >= i0 goto label49;

     label15:
        $z2 = virtualinvoke r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: boolean checkLengthLegal(int,int)>(i22, 4);

        if $z2 != 0 goto label17;

     label16:
        return;

     label17:
        i24 = virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: int read(int)>(4);

     label18:
        i25 = i22 + -4;

     label19:
        $z3 = virtualinvoke r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: boolean checkLengthLegal(int,int)>(i25, 8);

        if $z3 != 0 goto label21;

     label20:
        return;

     label21:
        i26 = virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: int read(int)>(8);

     label22:
        i27 = i25 + -8;

        if i24 != 0 goto label32;

     label23:
        $i10 = i26 << 3;

        $z8 = virtualinvoke r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: boolean checkLengthLegal(int,int)>(i27, $i10);

        if $z8 != 0 goto label25;

     label24:
        return;

     label25:
        r14 = newarray (char)[i26];

     label26:
        i28 = 0;

     label27:
        if i28 >= i26 goto label30;

     label28:
        $i12 = virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: int read(int)>(8);

        $i13 = $i12 & 255;

        $c14 = (char) $i13;

        $c15 = (char) $c14;

        r14[i28] = $c15;

     label29:
        i28 = i28 + 1;

        goto label27;

     label30:
        r1 = r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: com.android.internal.telephony.uicc.RuimRecords this$0>;

        r15 = new java.lang.String;

        specialinvoke r15.<java.lang.String: void <init>(char[])>(r14);

        staticinvoke <com.android.internal.telephony.uicc.RuimRecords: java.lang.String access$902(com.android.internal.telephony.uicc.RuimRecords,java.lang.String)>(r1, r15);

        $z9 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("RuimRecords", 2);

        if $z9 == 0 goto label31;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MIPUPP Nai = ");

        $r6 = r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: com.android.internal.telephony.uicc.RuimRecords this$0>;

        $r7 = staticinvoke <com.android.internal.telephony.uicc.RuimRecords: java.lang.String access$900(com.android.internal.telephony.uicc.RuimRecords)>($r6);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("RuimRecords", $r9);

     label31:
        return;

     label32:
        $i3 = i26 << 3;

        $i4 = $i3 + 102;

        $z4 = virtualinvoke r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: boolean checkLengthLegal(int,int)>(i27, $i4);

        if $z4 != 0 goto label34;

     label33:
        return;

     label34:
        $i5 = i26 << 3;

        $i6 = $i5 + 101;

        virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: void skip(int)>($i6);

        i29 = virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: int read(int)>(1);

     label35:
        $i7 = i26 << 3;

        $i8 = $i7 + 102;

        i30 = i27 - $i8;

        i31 = i30;

        if i29 != 1 goto label40;

     label36:
        $z7 = virtualinvoke r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: boolean checkLengthLegal(int,int)>(i30, 32);

        if $z7 != 0 goto label38;

     label37:
        return;

     label38:
        virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: void skip(int)>(32);

     label39:
        i31 = i30 - 32;

     label40:
        $z5 = virtualinvoke r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: boolean checkLengthLegal(int,int)>(i31, 5);

        if $z5 != 0 goto label42;

     label41:
        return;

     label42:
        virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: void skip(int)>(4);

        i32 = virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: int read(int)>(1);

     label43:
        $i9 = i31 - 4;

        i33 = $i9 - 1;

        i22 = i33;

        if i32 != 1 goto label48;

     label44:
        $z6 = virtualinvoke r0.<com.android.internal.telephony.uicc.RuimRecords$EfCsimMipUppLoaded: boolean checkLengthLegal(int,int)>(i33, 32);

        if $z6 != 0 goto label46;

     label45:
        return;

     label46:
        virtualinvoke $r3.<com.android.internal.telephony.BitwiseInputStream: void skip(int)>(32);

     label47:
        i22 = i33 - 32;

     label48:
        i23 = i23 + 1;

        goto label14;

     label49:
        return;

     label50:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RuimRecords", "MIPUPP read Exception error!");

        return;

        catch java.lang.Exception from label02 to label03 with label50;
        catch java.lang.Exception from label04 to label05 with label50;
        catch java.lang.Exception from label06 to label07 with label50;
        catch java.lang.Exception from label08 to label09 with label50;
        catch java.lang.Exception from label10 to label11 with label50;
        catch java.lang.Exception from label12 to label13 with label50;
        catch java.lang.Exception from label15 to label16 with label50;
        catch java.lang.Exception from label17 to label18 with label50;
        catch java.lang.Exception from label19 to label20 with label50;
        catch java.lang.Exception from label21 to label22 with label50;
        catch java.lang.Exception from label23 to label24 with label50;
        catch java.lang.Exception from label25 to label26 with label50;
        catch java.lang.Exception from label28 to label29 with label50;
        catch java.lang.Exception from label30 to label31 with label50;
        catch java.lang.Exception from label32 to label33 with label50;
        catch java.lang.Exception from label34 to label35 with label50;
        catch java.lang.Exception from label36 to label37 with label50;
        catch java.lang.Exception from label38 to label39 with label50;
        catch java.lang.Exception from label40 to label41 with label50;
        catch java.lang.Exception from label42 to label43 with label50;
        catch java.lang.Exception from label44 to label45 with label50;
        catch java.lang.Exception from label46 to label47 with label50;
    }
}
