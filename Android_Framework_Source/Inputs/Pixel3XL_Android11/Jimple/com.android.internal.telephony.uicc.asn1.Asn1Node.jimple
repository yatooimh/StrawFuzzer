public final class com.android.internal.telephony.uicc.asn1.Asn1Node extends java.lang.Object
{
    private static final java.util.List EMPTY_NODE_LIST;
    private static final byte[] FALSE_BYTES;
    private static final int INT_BYTES;
    private static final byte[] TRUE_BYTES;
    private final java.util.List mChildren;
    private final boolean mConstructed;
    private byte[] mDataBytes;
    private int mDataLength;
    private int mDataOffset;
    private int mEncodedLength;
    private final int mTag;

    static void <clinit>()
    {
        java.util.List $r0;
        byte[] $r1, $r2;

        <com.android.internal.telephony.uicc.asn1.Asn1Node: int INT_BYTES> = 4;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        <com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List EMPTY_NODE_LIST> = $r0;

        $r1 = newarray (byte)[1];

        $r1[0] = -1;

        <com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] TRUE_BYTES> = $r1;

        $r2 = newarray (byte)[1];

        $r2[0] = 0;

        <com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] FALSE_BYTES> = $r2;

        return;
    }

    private void <init>(int, java.util.List)
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0, $r3;
        java.util.List r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        java.lang.Object $r2;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        i11 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag> = i11;

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed> = 1;

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List mChildren> = r1;

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength> = 0;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i12 = 0;

     label1:
        if i12 >= i0 goto label2;

        $i8 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i12);

        $r3 = (com.android.internal.telephony.uicc.asn1.Asn1Node) $r2;

        $i9 = $r3.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mEncodedLength>;

        $i10 = $i8 + $i9;

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength> = $i10;

        i12 = i12 + 1;

        goto label1;

     label2:
        $i1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        $i2 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int byteNumForUnsignedInt(int)>($i1);

        $i3 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        $i4 = staticinvoke <com.android.internal.telephony.uicc.asn1.Asn1Node: int calculateEncodedBytesNumForLength(int)>($i3);

        $i6 = $i2 + $i4;

        $i5 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        $i7 = $i6 + $i5;

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mEncodedLength> = $i7;

        return;
    }

    void <init>(int, java.util.List, com.android.internal.telephony.uicc.asn1.Asn1Node$1)
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        int i0;
        java.util.List r1;
        com.android.internal.telephony.uicc.asn1.Asn1Node$1 r2;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: com.android.internal.telephony.uicc.asn1.Asn1Node$1;

        specialinvoke r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: void <init>(int,java.util.List)>(i0, r1);

        return;
    }

    void <init>(int, byte[], int, int)
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0;
        byte[] r2;
        java.lang.Object r3;
        java.util.ArrayList r4;
        java.util.List r5;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        i0 := @parameter0: int;

        r2 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag> = i0;

        z0 = staticinvoke <com.android.internal.telephony.uicc.asn1.Asn1Node: boolean isConstructedTag(int)>(i0);

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed> = z0;

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes> = r2;

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset> = i1;

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength> = i2;

        if z0 == 0 goto label1;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r3 = r4;

        goto label2;

     label1:
        r3 = <com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List EMPTY_NODE_LIST>;

     label2:
        r5 = (java.util.List) r3;

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List mChildren> = r5;

        $i3 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        $i4 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int byteNumForUnsignedInt(int)>($i3);

        $i5 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        $i6 = staticinvoke <com.android.internal.telephony.uicc.asn1.Asn1Node: int calculateEncodedBytesNumForLength(int)>($i5);

        $i8 = $i4 + $i6;

        $i7 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        $i9 = $i8 + $i7;

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mEncodedLength> = $i9;

        return;
    }

    static boolean access$000(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.internal.telephony.uicc.asn1.Asn1Node: boolean isConstructedTag(int)>(i0);

        return $z0;
    }

    static byte[] access$100()
    {
        byte[] $r0;

        $r0 = <com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] TRUE_BYTES>;

        return $r0;
    }

    static byte[] access$200()
    {
        byte[] $r0;

        $r0 = <com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] FALSE_BYTES>;

        return $r0;
    }

    private static int calculateEncodedBytesNumForLength(int)
    {
        int i0, $i1, i2;

        i0 := @parameter0: int;

        i2 = 1;

        if i0 <= 127 goto label1;

        $i1 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int byteNumForUnsignedInt(int)>(i0);

        i2 = 1 + $i1;

     label1:
        return i2;
    }

    private static boolean isConstructedTag(int)
    {
        int i0;
        byte[] r0;
        byte $b1, $b2;
        boolean z0;

        i0 := @parameter0: int;

        r0 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte[] unsignedIntToBytes(int)>(i0);

        z0 = 0;

        $b1 = r0[0];

        $b2 = $b1 & 32;

        if $b2 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public static com.android.internal.telephony.uicc.asn1.Asn1Node$Builder newBuilder(int)
    {
        int i0;
        com.android.internal.telephony.uicc.asn1.Asn1Node$Builder $r0;

        i0 := @parameter0: int;

        $r0 = new com.android.internal.telephony.uicc.asn1.Asn1Node$Builder;

        specialinvoke $r0.<com.android.internal.telephony.uicc.asn1.Asn1Node$Builder: void <init>(int,com.android.internal.telephony.uicc.asn1.Asn1Node$1)>(i0, null);

        return $r0;
    }

    private int write(byte[], int)
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0, $r7;
        byte[] r1, r2, $r3;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, i11, i12, i13, i14, i15, i16, i17, i18, i19;
        byte $b3, $b4, $b9, $b10;
        boolean $z0;
        java.util.List $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        r1 := @parameter0: byte[];

        i11 := @parameter1: int;

        $i0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        $i1 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int unsignedIntToBytes(int,byte[],int)>($i0, r1, i11);

        i12 = i11 + $i1;

        i13 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        if i13 > 127 goto label1;

        i14 = i12 + 1;

        $b9 = (byte) i13;

        $b10 = (byte) $b9;

        r1[i12] = $b10;

        goto label2;

     label1:
        i15 = i12 + 1;

        i16 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int unsignedIntToBytes(int,byte[],int)>(i13, r1, i15);

        $i5 = i15 - 1;

        $i2 = i16 | 128;

        $b3 = (byte) $i2;

        $b4 = (byte) $b3;

        r1[$i5] = $b4;

        i14 = i15 + i16;

     label2:
        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        if $z0 == 0 goto label5;

        $r3 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        if $r3 != null goto label5;

        $r4 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List mChildren>;

        i17 = interfaceinvoke $r4.<java.util.List: int size()>();

        i18 = 0;

     label3:
        if i18 >= i17 goto label4;

        $r5 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List mChildren>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i18);

        $r7 = (com.android.internal.telephony.uicc.asn1.Asn1Node) $r6;

        i14 = specialinvoke $r7.<com.android.internal.telephony.uicc.asn1.Asn1Node: int write(byte[],int)>(r1, i14);

        i18 = i18 + 1;

        goto label3;

     label4:
        i19 = i14;

        goto label6;

     label5:
        r2 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        i19 = i14;

        if r2 == null goto label6;

        $i7 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset>;

        $i6 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i7, r1, i14, $i6);

        $i8 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        i19 = i14 + $i8;

        goto label6;

     label6:
        return i19;
    }

    public int asBits() throws com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.lang.Throwable $r3;
        byte[] r5;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        if $z0 != 0 goto label7;

        r5 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        if r5 == null goto label6;

     label1:
        $i1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset>;

        $i4 = $i1 + 1;

        $i2 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        $i3 = $i2 - 1;

        i8 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int bytesToInt(byte[],int,int)>(r5, $i4, $i3);

     label2:
        $i5 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        i9 = $i5 - 1;

     label3:
        if i9 >= 4 goto label4;

        i8 = i8 << 8;

        i9 = i9 + 1;

        goto label3;

     label4:
        $i6 = staticinvoke <java.lang.Integer: int reverse(int)>(i8);

        return $i6;

     label5:
        $r3 := @caughtexception;

        $r4 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i7 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        specialinvoke $r4.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String,java.lang.Throwable)>($i7, "Cannot parse data bytes.", $r3);

        throw $r4;

     label6:
        $r2 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        specialinvoke $r2.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String)>($i0, "Data bytes cannot be null.");

        throw $r2;

     label7:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get value of a constructed node.");

        throw $r1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label5;
    }

    public boolean asBoolean() throws com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r1;
        com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException $r2, $r6, $r8, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, i10, i11, i12;
        java.lang.StringBuilder $r3, $r10;
        java.lang.String $r7, $r15;
        java.lang.ArrayIndexOutOfBoundsException $r9;
        byte $b6, $b7, $b9;
        byte[] $r12, r18;
        java.lang.Boolean $r16, $r17;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        if $z0 != 0 goto label6;

        r18 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        if r18 == null goto label5;

        $i1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        if $i1 != 1 goto label4;

        i10 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset>;

        if i10 < 0 goto label3;

        $i5 = lengthof r18;

        if i10 >= $i5 goto label3;

        $b6 = r18[i10];

        if $b6 != -1 goto label1;

        $r17 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z2 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label1:
        $b7 = r18[i10];

        if $b7 != 0 goto label2;

        $r16 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $z1 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label2:
        i11 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse data bytes as boolean: ");

        $r12 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        $i8 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset>;

        $b9 = $r12[$i8];

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b9);

        $r14 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String)>(i11, $r15);

        throw $r14;

     label3:
        $r8 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i4 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        $r9 = new java.lang.ArrayIndexOutOfBoundsException;

        $i3 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset>;

        specialinvoke $r9.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>($i3);

        specialinvoke $r8.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String,java.lang.Throwable)>($i4, "Cannot parse data bytes.", $r9);

        throw $r8;

     label4:
        i12 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse data bytes as boolean: length=");

        $i2 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String)>(i12, $r7);

        throw $r6;

     label5:
        $r2 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        specialinvoke $r2.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String)>($i0, "Data bytes cannot be null.");

        throw $r2;

     label6:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get value of a constructed node.");

        throw $r1;
    }

    public byte[] asBytes() throws com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        byte[] r1, r6;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException $r3, $r5;
        java.lang.IndexOutOfBoundsException $r4;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        if $z0 != 0 goto label5;

        r1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        if r1 == null goto label4;

        i0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        r6 = newarray (byte)[i0];

     label1:
        $i2 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i2, r6, 0, i0);

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i3 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        specialinvoke $r5.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String,java.lang.Throwable)>($i3, "Cannot parse data bytes.", $r4);

        throw $r5;

     label4:
        $r3 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        specialinvoke $r3.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String)>($i1, "Data bytes cannot be null.");

        throw $r3;

     label5:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get value of a constructed node.");

        throw $r2;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public int asInteger() throws com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException $r2, $r4;
        java.lang.Throwable $r3;
        byte[] r5;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        if $z0 != 0 goto label5;

        r5 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        if r5 == null goto label4;

     label1:
        $i3 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset>;

        $i2 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        i0 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int bytesToInt(byte[],int,int)>(r5, $i3, $i2);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i4 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        specialinvoke $r4.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String,java.lang.Throwable)>($i4, "Cannot parse data bytes.", $r3);

        throw $r4;

     label4:
        $r2 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        specialinvoke $r2.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String)>($i1, "Data bytes cannot be null.");

        throw $r2;

     label5:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get value of a constructed node.");

        throw $r1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public long asRawLong() throws com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        long l0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException $r2, $r4;
        int $i1, $i2, $i3, $i4;
        java.lang.Throwable $r3;
        byte[] r5;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        if $z0 != 0 goto label5;

        r5 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        if r5 == null goto label4;

     label1:
        $i3 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset>;

        $i2 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        l0 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: long bytesToRawLong(byte[],int,int)>(r5, $i3, $i2);

     label2:
        return l0;

     label3:
        $r3 := @caughtexception;

        $r4 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i4 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        specialinvoke $r4.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String,java.lang.Throwable)>($i4, "Cannot parse data bytes.", $r3);

        throw $r4;

     label4:
        $r2 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        specialinvoke $r2.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String)>($i1, "Data bytes cannot be null.");

        throw $r2;

     label5:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get value of a constructed node.");

        throw $r1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public java.lang.String asString() throws com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        byte[] $r2, $r6;
        com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException $r3, $r8;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4;
        java.nio.charset.Charset $r5;
        java.lang.IndexOutOfBoundsException $r7;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        if $z0 != 0 goto label5;

        $r2 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        if $r2 == null goto label4;

     label1:
        $r4 = new java.lang.String;

        $r6 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        $i2 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset>;

        $i1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r6, $i2, $i1, $r5);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        $r8 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i3 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        specialinvoke $r8.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String,java.lang.Throwable)>($i3, "Cannot parse data bytes.", $r7);

        throw $r8;

     label4:
        $r3 = new com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException;

        $i0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        specialinvoke $r3.<com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException: void <init>(int,java.lang.String)>($i0, "Data bytes cannot be null.");

        throw $r3;

     label5:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get value of a constructed node.");

        throw $r1;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public transient com.android.internal.telephony.uicc.asn1.Asn1Node getChild(int, int[]) throws com.android.internal.telephony.uicc.asn1.TagNotFoundException, com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0, r6, r7;
        int[] r1;
        java.util.List r2;
        int i0, $i1, $i2, i3, i4, i5, i6;
        boolean $z0;
        com.android.internal.telephony.uicc.asn1.TagNotFoundException $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        i3 := @parameter0: int;

        r1 := @parameter1: int[];

        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        if $z0 == 0 goto label8;

        r6 = r0;

        i4 = i3;

        i5 = 0;

     label1:
        r7 = r6;

        if r6 == null goto label6;

        r2 = virtualinvoke r6.<com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List getChildren()>();

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i6 = 0;

     label2:
        r6 = null;

        if i6 >= i0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6);

        r6 = (com.android.internal.telephony.uicc.asn1.Asn1Node) $r5;

        $i2 = virtualinvoke r6.<com.android.internal.telephony.uicc.asn1.Asn1Node: int getTag()>();

        if $i2 != i4 goto label3;

        goto label4;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        $i1 = lengthof r1;

        if i5 < $i1 goto label5;

        r7 = r6;

        goto label6;

     label5:
        i4 = r1[i5];

        i5 = i5 + 1;

        goto label1;

     label6:
        if r7 == null goto label7;

        return r7;

     label7:
        $r4 = new com.android.internal.telephony.uicc.asn1.TagNotFoundException;

        specialinvoke $r4.<com.android.internal.telephony.uicc.asn1.TagNotFoundException: void <init>(int)>(i4);

        throw $r4;

     label8:
        $r3 = new com.android.internal.telephony.uicc.asn1.TagNotFoundException;

        specialinvoke $r3.<com.android.internal.telephony.uicc.asn1.TagNotFoundException: void <init>(int)>(i3);

        throw $r3;
    }

    public java.util.List getChildren() throws com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0, $r4;
        boolean $z0, $z1;
        java.util.List $r1, $r3, $r5;
        com.android.internal.telephony.uicc.asn1.Asn1Decoder $r2;
        int $i0, $i1;
        byte[] r6;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        if $z0 != 0 goto label1;

        $r5 = <com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List EMPTY_NODE_LIST>;

        return $r5;

     label1:
        r6 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        if r6 == null goto label4;

        $r2 = new com.android.internal.telephony.uicc.asn1.Asn1Decoder;

        $i1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset>;

        $i0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        specialinvoke $r2.<com.android.internal.telephony.uicc.asn1.Asn1Decoder: void <init>(byte[],int,int)>(r6, $i1, $i0);

     label2:
        $z1 = virtualinvoke $r2.<com.android.internal.telephony.uicc.asn1.Asn1Decoder: boolean hasNextNode()>();

        if $z1 == 0 goto label3;

        $r3 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List mChildren>;

        $r4 = virtualinvoke $r2.<com.android.internal.telephony.uicc.asn1.Asn1Decoder: com.android.internal.telephony.uicc.asn1.Asn1Node nextNode()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label2;

     label3:
        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes> = null;

        r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataOffset> = 0;

     label4:
        $r1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List mChildren>;

        return $r1;
    }

    public java.util.List getChildren(int) throws com.android.internal.telephony.uicc.asn1.TagNotFoundException, com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0, r2;
        int i0, i1, $i2, i3;
        java.util.List r1, $r5, $r6, r9, r10, r11;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4, r7;
        java.util.ArrayList r8;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        if $z0 != 0 goto label1;

        $r6 = <com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List EMPTY_NODE_LIST>;

        return $r6;

     label1:
        r1 = virtualinvoke r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List getChildren()>();

        $z1 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r5 = <com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List EMPTY_NODE_LIST>;

        return $r5;

     label2:
        r8 = new java.util.ArrayList;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        r7 = r8;

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = 0;

     label3:
        if i3 >= i1 goto label5;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r2 = (com.android.internal.telephony.uicc.asn1.Asn1Node) $r4;

        $i2 = virtualinvoke r2.<com.android.internal.telephony.uicc.asn1.Asn1Node: int getTag()>();

        if $i2 != i0 goto label4;

        r9 = (java.util.List) r8;

        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r2);

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        r10 = (java.util.List) r8;

        $z2 = interfaceinvoke r10.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label6;

        r7 = <com.android.internal.telephony.uicc.asn1.Asn1Node: java.util.List EMPTY_NODE_LIST>;

        goto label6;

     label6:
        r11 = (java.util.List) r7;

        return r11;
    }

    public int getDataLength()
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $i0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        return $i0;
    }

    public int getEncodedLength()
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $i0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mEncodedLength>;

        return $i0;
    }

    public java.lang.String getHeadAsHex()
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        int i0, $i1, $i2, $i3, $i5;
        byte[] $r1, r17;
        java.lang.StringBuilder $r2, $r6, $r10;
        byte $b4, $b6;
        java.lang.String $r4, $r8, $r12, r14, r16, r19;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $i1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        $r1 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte[] unsignedIntToBytes(int)>($i1);

        r14 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r1);

        i0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        if i0 > 127 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $i5 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mDataLength>;

        $b6 = (byte) $i5;

        $r12 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String byteToHex(byte)>($b6);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        r17 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte[] unsignedIntToBytes(int)>(i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $i2 = lengthof r17;

        $i3 = $i2 | 128;

        $b4 = (byte) $i3;

        $r4 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String byteToHex(byte)>($b4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r19 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r8 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r17);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r16 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r16;
    }

    public int getTag()
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $i0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mTag>;

        return $i0;
    }

    public transient boolean hasChild(int, int[]) throws com.android.internal.telephony.uicc.asn1.InvalidAsn1DataException
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        int i0;
        com.android.internal.telephony.uicc.asn1.TagNotFoundException $r2;
        int[] r3;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        i0 := @parameter0: int;

        r3 := @parameter1: int[];

     label1:
        virtualinvoke r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: com.android.internal.telephony.uicc.asn1.Asn1Node getChild(int,int[])>(i0, r3);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch com.android.internal.telephony.uicc.asn1.TagNotFoundException from label1 to label2 with label3;
    }

    public boolean hasValue()
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        boolean $z0, z1;
        byte[] $r1;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] mDataBytes>;

        if $r1 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isConstructed()
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $z0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: boolean mConstructed>;

        return $z0;
    }

    public byte[] toBytes()
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $i0 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mEncodedLength>;

        r1 = newarray (byte)[$i0];

        specialinvoke r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int write(byte[],int)>(r1, 0);

        return r1;
    }

    public java.lang.String toHex()
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        byte[] $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: byte[] toBytes()>();

        $r2 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r1);

        return $r2;
    }

    public void writeToBytes(byte[], int)
    {
        com.android.internal.telephony.uicc.asn1.Asn1Node r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r1;
        java.lang.IndexOutOfBoundsException $r4;
        java.lang.String $r5;
        byte[] r6;

        r0 := @this: com.android.internal.telephony.uicc.asn1.Asn1Node;

        r6 := @parameter0: byte[];

        i0 := @parameter1: int;

        if i0 < 0 goto label1;

        $i2 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mEncodedLength>;

        $i4 = $i2 + i0;

        $i3 = lengthof r6;

        if $i4 > $i3 goto label1;

        specialinvoke r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int write(byte[],int)>(r6, i0);

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not enough space to write. Required bytes: ");

        $i1 = r0.<com.android.internal.telephony.uicc.asn1.Asn1Node: int mEncodedLength>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = new java.lang.IndexOutOfBoundsException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }
}
