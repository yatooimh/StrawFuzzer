public class com.android.internal.telephony.uicc.euicc.apdu.ApduSender extends java.lang.Object
{
    private static final int INS_GET_MORE_RESPONSE;
    private static final java.lang.String LOG_TAG;
    private static final int STATUS_NO_ERROR;
    private static final int SW1_MORE_RESPONSE;
    private static final int SW1_NO_ERROR;
    private static final int WAIT_TIME_MS;
    private final java.lang.String mAid;
    private final java.lang.Object mChannelLock;
    private boolean mChannelOpened;
    private final com.android.internal.telephony.uicc.euicc.apdu.CloseLogicalChannelInvocation mCloseChannel;
    private final com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation mOpenChannel;
    private final boolean mSupportExtendedApdu;
    private final com.android.internal.telephony.uicc.euicc.apdu.TransmitApduLogicalChannelInvocation mTransmitApdu;

    public void <init>(com.android.internal.telephony.CommandsInterface, java.lang.String, boolean)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        com.android.internal.telephony.CommandsInterface r1;
        java.lang.String r2;
        boolean z0;
        java.lang.Object $r3;
        com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation $r4;
        com.android.internal.telephony.uicc.euicc.apdu.CloseLogicalChannelInvocation $r5;
        com.android.internal.telephony.uicc.euicc.apdu.TransmitApduLogicalChannelInvocation $r6;

        r0 := @this: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        r1 := @parameter0: com.android.internal.telephony.CommandsInterface;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: java.lang.Object mChannelLock> = $r3;

        r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: java.lang.String mAid> = r2;

        r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: boolean mSupportExtendedApdu> = z0;

        $r4 = new com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation;

        specialinvoke $r4.<com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation: void <init>(com.android.internal.telephony.CommandsInterface)>(r1);

        r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation mOpenChannel> = $r4;

        $r5 = new com.android.internal.telephony.uicc.euicc.apdu.CloseLogicalChannelInvocation;

        specialinvoke $r5.<com.android.internal.telephony.uicc.euicc.apdu.CloseLogicalChannelInvocation: void <init>(com.android.internal.telephony.CommandsInterface)>(r1);

        r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: com.android.internal.telephony.uicc.euicc.apdu.CloseLogicalChannelInvocation mCloseChannel> = $r5;

        $r6 = new com.android.internal.telephony.uicc.euicc.apdu.TransmitApduLogicalChannelInvocation;

        specialinvoke $r6.<com.android.internal.telephony.uicc.euicc.apdu.TransmitApduLogicalChannelInvocation: void <init>(com.android.internal.telephony.CommandsInterface)>(r1);

        r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: com.android.internal.telephony.uicc.euicc.apdu.TransmitApduLogicalChannelInvocation mTransmitApdu> = $r6;

        return;
    }

    static java.lang.Object access$000(com.android.internal.telephony.uicc.euicc.apdu.ApduSender)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        $r1 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: java.lang.Object mChannelLock>;

        return $r1;
    }

    static boolean access$102(com.android.internal.telephony.uicc.euicc.apdu.ApduSender, boolean)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: boolean mChannelOpened> = z0;

        return z0;
    }

    static java.lang.String access$200(com.android.internal.telephony.uicc.euicc.apdu.ApduSender)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        $r1 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: java.lang.String mAid>;

        return $r1;
    }

    static boolean access$300(com.android.internal.telephony.uicc.euicc.apdu.ApduSender)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        $z0 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: boolean mSupportExtendedApdu>;

        return $z0;
    }

    static void access$400(com.android.internal.telephony.uicc.euicc.apdu.ApduSender, int, byte[], java.lang.Throwable, com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback, android.os.Handler)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        int i0;
        byte[] r1;
        java.lang.Throwable r2;
        com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback r3;
        android.os.Handler r4;

        r0 := @parameter0: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        i0 := @parameter1: int;

        r1 := @parameter2: byte[];

        r2 := @parameter3: java.lang.Throwable;

        r3 := @parameter4: com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback;

        r4 := @parameter5: android.os.Handler;

        specialinvoke r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: void closeAndReturn(int,byte[],java.lang.Throwable,com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback,android.os.Handler)>(i0, r1, r2, r3, r4);

        return;
    }

    static void access$500(com.android.internal.telephony.uicc.euicc.apdu.ApduSender, java.util.List, int, com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback, android.os.Handler)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        java.util.List r1;
        int i0;
        com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback r2;
        android.os.Handler r3;

        r0 := @parameter0: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r2 := @parameter3: com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback;

        r3 := @parameter4: android.os.Handler;

        specialinvoke r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: void sendCommand(java.util.List,int,com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback,android.os.Handler)>(r1, i0, r2, r3);

        return;
    }

    static void access$600(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.telephony.uicc.euicc.apdu.ApduSender: void logv(java.lang.String)>(r0);

        return;
    }

    static void access$700(com.android.internal.telephony.uicc.euicc.apdu.ApduSender, int, com.android.internal.telephony.uicc.IccIoResult, java.io.ByteArrayOutputStream, com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback, android.os.Handler)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        int i0;
        com.android.internal.telephony.uicc.IccIoResult r1;
        java.io.ByteArrayOutputStream r2;
        com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback r3;
        android.os.Handler r4;

        r0 := @parameter0: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.telephony.uicc.IccIoResult;

        r2 := @parameter3: java.io.ByteArrayOutputStream;

        r3 := @parameter4: com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback;

        r4 := @parameter5: android.os.Handler;

        specialinvoke r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: void getCompleteResponse(int,com.android.internal.telephony.uicc.IccIoResult,java.io.ByteArrayOutputStream,com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback,android.os.Handler)>(i0, r1, r2, r3, r4);

        return;
    }

    private void closeAndReturn(int, byte[], java.lang.Throwable, com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback, android.os.Handler)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        int i0;
        byte[] r1;
        java.lang.Throwable r2;
        com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback r3;
        android.os.Handler r4;
        com.android.internal.telephony.uicc.euicc.apdu.CloseLogicalChannelInvocation $r5;
        java.lang.Integer $r6;
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender$4 $r7;

        r0 := @this: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r2 := @parameter2: java.lang.Throwable;

        r3 := @parameter3: com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback;

        r4 := @parameter4: android.os.Handler;

        $r5 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: com.android.internal.telephony.uicc.euicc.apdu.CloseLogicalChannelInvocation mCloseChannel>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = new com.android.internal.telephony.uicc.euicc.apdu.ApduSender$4;

        specialinvoke $r7.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender$4: void <init>(com.android.internal.telephony.uicc.euicc.apdu.ApduSender,java.lang.Throwable,com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback,byte[])>(r0, r2, r3, r1);

        virtualinvoke $r5.<com.android.internal.telephony.uicc.euicc.apdu.CloseLogicalChannelInvocation: void invoke(java.lang.Object,com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback,android.os.Handler)>($r6, $r7, r4);

        return;
    }

    private void getCompleteResponse(int, com.android.internal.telephony.uicc.IccIoResult, java.io.ByteArrayOutputStream, com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback, android.os.Handler)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        int i0, $i1, $i2;
        com.android.internal.telephony.uicc.IccIoResult r1;
        com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback r2;
        android.os.Handler r3;
        byte[] $r5, $r9, $r10;
        com.android.internal.telephony.uicc.euicc.apdu.ApduCommand $r6;
        com.android.internal.telephony.uicc.euicc.apdu.TransmitApduLogicalChannelInvocation $r7;
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender$3 $r8;
        java.io.ByteArrayOutputStream $r11, r13;
        java.lang.Throwable $r12;

        r0 := @this: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.telephony.uicc.IccIoResult;

        r13 := @parameter2: java.io.ByteArrayOutputStream;

        r2 := @parameter3: com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback;

        r3 := @parameter4: android.os.Handler;

        if r13 != null goto label1;

        $r11 = new java.io.ByteArrayOutputStream;

        specialinvoke $r11.<java.io.ByteArrayOutputStream: void <init>()>();

        r13 = $r11;

        goto label1;

     label1:
        $r5 = r1.<com.android.internal.telephony.uicc.IccIoResult: byte[] payload>;

        if $r5 == null goto label5;

     label2:
        $r10 = r1.<com.android.internal.telephony.uicc.IccIoResult: byte[] payload>;

        virtualinvoke r13.<java.io.ByteArrayOutputStream: void write(byte[])>($r10);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

     label5:
        $i2 = r1.<com.android.internal.telephony.uicc.IccIoResult: int sw1>;

        if $i2 == 97 goto label6;

        $r9 = virtualinvoke r13.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r1.<com.android.internal.telephony.uicc.IccIoResult: byte[] payload> = $r9;

        virtualinvoke r2.<com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback: void onResult(java.lang.Object)>(r1);

        return;

     label6:
        $r7 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: com.android.internal.telephony.uicc.euicc.apdu.TransmitApduLogicalChannelInvocation mTransmitApdu>;

        $r6 = new com.android.internal.telephony.uicc.euicc.apdu.ApduCommand;

        $i1 = r1.<com.android.internal.telephony.uicc.IccIoResult: int sw2>;

        specialinvoke $r6.<com.android.internal.telephony.uicc.euicc.apdu.ApduCommand: void <init>(int,int,int,int,int,int,java.lang.String)>(i0, 0, 192, 0, 0, $i1, "");

        $r8 = new com.android.internal.telephony.uicc.euicc.apdu.ApduSender$3;

        specialinvoke $r8.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender$3: void <init>(com.android.internal.telephony.uicc.euicc.apdu.ApduSender,int,java.io.ByteArrayOutputStream,com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback,android.os.Handler)>(r0, i0, r13, r2, r3);

        virtualinvoke $r7.<com.android.internal.telephony.uicc.euicc.apdu.TransmitApduLogicalChannelInvocation: void invoke(java.lang.Object,com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback,android.os.Handler)>($r6, $r8, r3);

        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private static void logd(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ApduSender", r0);

        return;
    }

    private static void logv(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("ApduSender", r0);

        return;
    }

    private void sendCommand(java.util.List, int, com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback, android.os.Handler)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        java.util.List r1;
        int i0;
        com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback r2;
        android.os.Handler r3;
        com.android.internal.telephony.uicc.euicc.apdu.ApduCommand r4;
        java.lang.Object $r5;
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender$2 $r6;
        com.android.internal.telephony.uicc.euicc.apdu.TransmitApduLogicalChannelInvocation $r7;

        r0 := @this: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback;

        r3 := @parameter3: android.os.Handler;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (com.android.internal.telephony.uicc.euicc.apdu.ApduCommand) $r5;

        $r7 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: com.android.internal.telephony.uicc.euicc.apdu.TransmitApduLogicalChannelInvocation mTransmitApdu>;

        $r6 = new com.android.internal.telephony.uicc.euicc.apdu.ApduSender$2;

        specialinvoke $r6.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender$2: void <init>(com.android.internal.telephony.uicc.euicc.apdu.ApduSender,com.android.internal.telephony.uicc.euicc.apdu.ApduCommand,com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback,android.os.Handler,int,java.util.List)>(r0, r4, r2, r3, i0, r1);

        virtualinvoke $r7.<com.android.internal.telephony.uicc.euicc.apdu.TransmitApduLogicalChannelInvocation: void invoke(java.lang.Object,com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback,android.os.Handler)>(r4, $r6, r3);

        return;
    }

    public void send(com.android.internal.telephony.uicc.euicc.apdu.RequestProvider, com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback, android.os.Handler)
    {
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender r0;
        com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback r1;
        android.os.Handler r2;
        java.lang.Object r3, $r10;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.uicc.euicc.apdu.ApduSender$1 $r5;
        com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation $r6;
        java.lang.String $r7;
        android.os.Looper $r8, $r9;
        java.lang.Throwable $r11, $r12;
        com.android.internal.telephony.uicc.euicc.apdu.RequestProvider r13;
        com.android.internal.telephony.uicc.euicc.apdu.ApduException r14, r15;

        r0 := @this: com.android.internal.telephony.uicc.euicc.apdu.ApduSender;

        r13 := @parameter0: com.android.internal.telephony.uicc.euicc.apdu.RequestProvider;

        r1 := @parameter1: com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback;

        r2 := @parameter2: android.os.Handler;

        r3 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: java.lang.Object mChannelLock>;

        entermonitor r3;

     label01:
        $z0 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: boolean mChannelOpened>;

        if $z0 == 0 goto label09;

        $r8 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r9 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label07;

        staticinvoke <com.android.internal.telephony.uicc.euicc.apdu.ApduSender: void logd(java.lang.String)>("Logical channel has already been opened. Wait.");

     label02:
        $r10 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: java.lang.Object mChannelLock>;

        virtualinvoke $r10.<java.lang.Object: void wait(long)>(2000L);

     label03:
        goto label05;

     label04:
        $r12 := @caughtexception;

     label05:
        $z2 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: boolean mChannelOpened>;

        if $z2 == 0 goto label09;

        r14 = new com.android.internal.telephony.uicc.euicc.apdu.ApduException;

        specialinvoke r14.<com.android.internal.telephony.uicc.euicc.apdu.ApduException: void <init>(java.lang.String)>("The logical channel is still in use.");

        staticinvoke <com.android.internal.telephony.uicc.euicc.async.AsyncResultHelper: void throwException(java.lang.Throwable,com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback,android.os.Handler)>(r14, r1, r2);

        exitmonitor r3;

     label06:
        return;

     label07:
        r15 = new com.android.internal.telephony.uicc.euicc.apdu.ApduException;

        specialinvoke r15.<com.android.internal.telephony.uicc.euicc.apdu.ApduException: void <init>(java.lang.String)>("The logical channel is in use.");

        staticinvoke <com.android.internal.telephony.uicc.euicc.async.AsyncResultHelper: void throwException(java.lang.Throwable,com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback,android.os.Handler)>(r15, r1, r2);

        exitmonitor r3;

     label08:
        return;

     label09:
        r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: boolean mChannelOpened> = 1;

        exitmonitor r3;

     label10:
        $r6 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation mOpenChannel>;

        $r7 = r0.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender: java.lang.String mAid>;

        $r5 = new com.android.internal.telephony.uicc.euicc.apdu.ApduSender$1;

        specialinvoke $r5.<com.android.internal.telephony.uicc.euicc.apdu.ApduSender$1: void <init>(com.android.internal.telephony.uicc.euicc.apdu.ApduSender,com.android.internal.telephony.uicc.euicc.apdu.ApduSenderResultCallback,com.android.internal.telephony.uicc.euicc.apdu.RequestProvider,android.os.Handler)>(r0, r1, r13, r2);

        virtualinvoke $r6.<com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation: void invoke(java.lang.Object,com.android.internal.telephony.uicc.euicc.async.AsyncResultCallback,android.os.Handler)>($r7, $r5, r2);

        return;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r3;

     label13:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.uicc.euicc.apdu.ApduSender: int WAIT_TIME_MS> = 2000;

        <com.android.internal.telephony.uicc.euicc.apdu.ApduSender: int SW1_NO_ERROR> = 145;

        <com.android.internal.telephony.uicc.euicc.apdu.ApduSender: int SW1_MORE_RESPONSE> = 97;

        <com.android.internal.telephony.uicc.euicc.apdu.ApduSender: int STATUS_NO_ERROR> = 36864;

        <com.android.internal.telephony.uicc.euicc.apdu.ApduSender: java.lang.String LOG_TAG> = "ApduSender";

        <com.android.internal.telephony.uicc.euicc.apdu.ApduSender: int INS_GET_MORE_RESPONSE> = 192;

        return;
    }
}
