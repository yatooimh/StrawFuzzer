class com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation extends com.android.internal.telephony.uicc.euicc.async.AsyncMessageInvocation
{
    private static final java.lang.String LOG_TAG;
    private final com.android.internal.telephony.CommandsInterface mCi;

    void <init>(com.android.internal.telephony.CommandsInterface)
    {
        com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation r0;
        com.android.internal.telephony.CommandsInterface r1;

        r0 := @this: com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation;

        r1 := @parameter0: com.android.internal.telephony.CommandsInterface;

        specialinvoke r0.<com.android.internal.telephony.uicc.euicc.async.AsyncMessageInvocation: void <init>()>();

        r0.<com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation: com.android.internal.telephony.CommandsInterface mCi> = r1;

        return;
    }

    protected android.telephony.IccOpenLogicalChannelResponse parseResult(android.os.AsyncResult)
    {
        com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation r0;
        int[] r1;
        java.lang.Throwable $r2, $r4, $r5, $r8, $r12;
        java.lang.Object $r3, $r13, $r14;
        boolean $z0;
        com.android.internal.telephony.CommandException $r9;
        com.android.internal.telephony.CommandException$Error $r10, $r11, r20;
        int $i3, $i4, $i5, $i6, $i7, $i10, i11, i12;
        android.telephony.IccOpenLogicalChannelResponse $r15, r19, $r21;
        byte $b8, $b9, b14;
        android.os.AsyncResult r16;
        byte[] r17, r18;
        java.lang.StringBuilder $r22;
        java.lang.String $r24;

        r0 := @this: com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation;

        r16 := @parameter0: android.os.AsyncResult;

        $r2 = r16.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r2 != null goto label3;

        $r13 = r16.<android.os.AsyncResult: java.lang.Object result>;

        if $r13 == null goto label3;

        $r14 = r16.<android.os.AsyncResult: java.lang.Object result>;

        r1 = (int[]) $r14;

        i11 = r1[0];

        r17 = null;

        $i3 = lengthof r1;

        if $i3 <= 1 goto label2;

        $i4 = lengthof r1;

        $i5 = $i4 - 1;

        r18 = newarray (byte)[$i5];

        i12 = 1;

     label1:
        r17 = r18;

        $i6 = lengthof r1;

        if i12 >= $i6 goto label2;

        $i10 = i12 - 1;

        $i7 = r1[i12];

        $b8 = (byte) $i7;

        $b9 = (byte) $b8;

        r18[$i10] = $b9;

        i12 = i12 + 1;

        goto label1;

     label2:
        $r15 = new android.telephony.IccOpenLogicalChannelResponse;

        specialinvoke $r15.<android.telephony.IccOpenLogicalChannelResponse: void <init>(int,int,byte[])>(i11, 1, r17);

        r19 = $r15;

        goto label8;

     label3:
        $r3 = r16.<android.os.AsyncResult: java.lang.Object result>;

        if $r3 != null goto label4;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("OpenChan", "Empty response");

     label4:
        $r4 = r16.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r4 == null goto label5;

        $r12 = r16.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenChan", "Exception", $r12);

     label5:
        b14 = 4;

        $r5 = r16.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z0 = $r5 instanceof com.android.internal.telephony.CommandException;

        if $z0 == 0 goto label7;

        $r8 = r16.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r9 = (com.android.internal.telephony.CommandException) $r8;

        r20 = virtualinvoke $r9.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $r10 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error MISSING_RESOURCE>;

        if r20 != $r10 goto label6;

        b14 = 2;

        goto label7;

     label6:
        b14 = 4;

        $r11 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error NO_SUCH_ELEMENT>;

        if r20 != $r11 goto label7;

        b14 = 3;

     label7:
        $r21 = new android.telephony.IccOpenLogicalChannelResponse;

        specialinvoke $r21.<android.telephony.IccOpenLogicalChannelResponse: void <init>(int,int,byte[])>(-1, b14, null);

        r19 = $r21;

     label8:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response: ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("OpenChan", $r24);

        return r19;
    }

    protected volatile java.lang.Object parseResult(android.os.AsyncResult) throws java.lang.Throwable
    {
        com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation r0;
        android.os.AsyncResult r1;
        android.telephony.IccOpenLogicalChannelResponse $r2;

        r0 := @this: com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation;

        r1 := @parameter0: android.os.AsyncResult;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation: android.telephony.IccOpenLogicalChannelResponse parseResult(android.os.AsyncResult)>(r1);

        return $r2;
    }

    protected volatile void sendRequestMessage(java.lang.Object, android.os.Message)
    {
        com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation r0;
        java.lang.Object r1;
        android.os.Message r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.os.Message;

        $r3 = (java.lang.String) r1;

        virtualinvoke r0.<com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation: void sendRequestMessage(java.lang.String,android.os.Message)>($r3, r2);

        return;
    }

    protected void sendRequestMessage(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation r0;
        java.lang.String r1;
        android.os.Message r2;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void iccOpenLogicalChannel(java.lang.String,int,android.os.Message)>(r1, 0, r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.uicc.euicc.apdu.OpenLogicalChannelInvocation: java.lang.String LOG_TAG> = "OpenChan";

        return;
    }
}
