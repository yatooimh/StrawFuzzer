public class com.android.internal.telephony.vendor.VendorServiceStateTracker extends com.android.internal.telephony.ServiceStateTracker
{
    private static final java.lang.String ACTION_MANAGED_ROAMING_IND;
    private static final boolean DBG;
    private static final java.lang.String LOG_TAG;
    private static final boolean VDBG;

    public void <init>(com.android.internal.telephony.GsmCdmaPhone, com.android.internal.telephony.CommandsInterface)
    {
        com.android.internal.telephony.vendor.VendorServiceStateTracker r0;
        com.android.internal.telephony.GsmCdmaPhone r1;
        com.android.internal.telephony.CommandsInterface r2;

        r0 := @this: com.android.internal.telephony.vendor.VendorServiceStateTracker;

        r1 := @parameter0: com.android.internal.telephony.GsmCdmaPhone;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void <init>(com.android.internal.telephony.GsmCdmaPhone,com.android.internal.telephony.CommandsInterface)>(r1, r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.vendor.VendorServiceStateTracker r0;
        android.os.Message r1;
        int $i0, $i1;
        com.android.internal.telephony.GsmCdmaPhone $r2;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.vendor.VendorServiceStateTracker;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        if $i0 != 1 goto label2;

        $r2 = r0.<com.android.internal.telephony.vendor.VendorServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r3 = $r2.<com.android.internal.telephony.GsmCdmaPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $i1 = interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: int getRadioState()>();

        if $i1 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.vendor.VendorServiceStateTracker: void setPowerStateToDesired()>();

        virtualinvoke r0.<com.android.internal.telephony.vendor.VendorServiceStateTracker: void log(java.lang.String)>("Trigger as manual polling");

        virtualinvoke r0.<com.android.internal.telephony.vendor.VendorServiceStateTracker: void pollState()>();

        goto label3;

     label1:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void handleMessage(android.os.Message)>(r1);

        goto label3;

     label2:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void handleMessage(android.os.Message)>(r1);

     label3:
        return;
    }

    protected void handlePollStateResultMessage(int, android.os.AsyncResult)
    {
        com.android.internal.telephony.vendor.VendorServiceStateTracker r0;
        int i0, $i1, $i2, $i3, $i4;
        com.android.internal.telephony.GsmCdmaPhone $r2, $r6, $r10, $r12;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r15;
        java.lang.String $r8, $r18;
        android.content.Context $r13;
        android.content.ActivityNotFoundException $r14;
        android.os.AsyncResult r19;
        android.telephony.NetworkRegistrationInfo r20;
        android.content.Intent r22;

        r0 := @this: com.android.internal.telephony.vendor.VendorServiceStateTracker;

        i0 := @parameter0: int;

        r19 := @parameter1: android.os.AsyncResult;

        if i0 == 4 goto label1;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void handlePollStateResultMessage(int,android.os.AsyncResult)>(i0, r19);

        goto label5;

     label1:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void handlePollStateResultMessage(int,android.os.AsyncResult)>(i0, r19);

        $r2 = r0.<com.android.internal.telephony.vendor.VendorServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.GsmCdmaPhone: boolean isPhoneTypeGsm()>();

        if $z0 == 0 goto label5;

        $r3 = r19.<android.os.AsyncResult: java.lang.Object result>;

        r20 = (android.telephony.NetworkRegistrationInfo) $r3;

        $i1 = virtualinvoke r20.<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>();

        if $i1 != 3 goto label5;

        $i2 = virtualinvoke r20.<android.telephony.NetworkRegistrationInfo: int getRejectCause()>();

        if $i2 != 10 goto label5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Posting Managed roaming intent sub = ");

        $r6 = r0.<com.android.internal.telephony.vendor.VendorServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i3 = virtualinvoke $r6.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.vendor.VendorServiceStateTracker: void log(java.lang.String)>($r8);

     label2:
        r22 = new android.content.Intent;

        specialinvoke r22.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ACTION_MANAGED_ROAMING_IND");

        virtualinvoke r22.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r10 = r0.<com.android.internal.telephony.vendor.VendorServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $i4 = virtualinvoke $r10.<com.android.internal.telephony.GsmCdmaPhone: int getSubId()>();

        virtualinvoke r22.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("subscription", $i4);

        $r12 = r0.<com.android.internal.telephony.vendor.VendorServiceStateTracker: com.android.internal.telephony.GsmCdmaPhone mPhone>;

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.GsmCdmaPhone: android.content.Context getContext()>();

        virtualinvoke $r13.<android.content.Context: void startActivity(android.content.Intent)>(r22);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to start activity: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.vendor.VendorServiceStateTracker: void loge(java.lang.String)>($r18);

     label5:
        return;

        catch android.content.ActivityNotFoundException from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.vendor.VendorServiceStateTracker: boolean VDBG> = 0;

        <com.android.internal.telephony.vendor.VendorServiceStateTracker: java.lang.String LOG_TAG> = "VendorServiceStateTracker";

        <com.android.internal.telephony.vendor.VendorServiceStateTracker: boolean DBG> = 1;

        <com.android.internal.telephony.vendor.VendorServiceStateTracker: java.lang.String ACTION_MANAGED_ROAMING_IND> = "android.intent.action.ACTION_MANAGED_ROAMING_IND";

        return;
    }
}
