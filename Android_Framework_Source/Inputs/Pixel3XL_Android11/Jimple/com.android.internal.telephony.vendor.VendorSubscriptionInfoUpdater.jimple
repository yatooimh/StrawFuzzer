public class com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater extends com.android.internal.telephony.SubscriptionInfoUpdater
{
    private static final java.lang.String ICCID_STRING_FOR_NO_SIM;
    private static final java.lang.String LOG_TAG;
    private static final int SUPPORTED_MODEM_COUNT;
    private static android.content.Context sContext;
    protected static com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater sInstance;
    protected boolean[] mIsRecordUpdateRequired;

    static void <clinit>()
    {
        android.telephony.TelephonyManager $r0;
        int $i0;

        <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: java.lang.String LOG_TAG> = "VendorSubscriptionInfoUpdater";

        <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: java.lang.String ICCID_STRING_FOR_NO_SIM> = "";

        <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: android.content.Context sContext> = null;

        <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater sInstance> = null;

        $r0 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i0 = virtualinvoke $r0.<android.telephony.TelephonyManager: int getSupportedModemCount()>();

        <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: int SUPPORTED_MODEM_COUNT> = $i0;

        return;
    }

    protected void <init>(android.os.Looper, android.content.Context, com.android.internal.telephony.CommandsInterface[])
    {
        com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater r0;
        android.os.Looper r1;
        android.content.Context r2;
        com.android.internal.telephony.CommandsInterface[] r3;
        int $i0, $i1, i2;
        boolean[] $r4, $r5;

        r0 := @this: com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: com.android.internal.telephony.CommandsInterface[];

        specialinvoke r0.<com.android.internal.telephony.SubscriptionInfoUpdater: void <init>(android.os.Looper,android.content.Context,com.android.internal.telephony.CommandsInterface[])>(r1, r2, r3);

        <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: android.content.Context sContext> = r2;

        $i0 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: int SUPPORTED_MODEM_COUNT>;

        $r4 = newarray (boolean)[$i0];

        r0.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: boolean[] mIsRecordUpdateRequired> = $r4;

        i2 = 0;

     label1:
        $i1 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: int SUPPORTED_MODEM_COUNT>;

        if i2 >= $i1 goto label2;

        $r5 = r0.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: boolean[] mIsRecordUpdateRequired>;

        $r5[i2] = 1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater getInstance()
    {
        com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater $r0, $r1;

        $r0 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater sInstance>;

        if $r0 != null goto label1;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("VendorSubscriptionInfoUpdater", "getInstance null");

     label1:
        $r1 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater sInstance>;

        return $r1;
    }

    static com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater init(android.os.Looper, android.content.Context, com.android.internal.telephony.CommandsInterface[])
    {
        android.content.Context r0;
        com.android.internal.telephony.CommandsInterface[] r1;
        com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater r2, $r3, $r5, r11;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        android.os.Looper r9;
        java.lang.StringBuilder r10;

        r9 := @parameter0: android.os.Looper;

        r0 := @parameter1: android.content.Context;

        r1 := @parameter2: com.android.internal.telephony.CommandsInterface[];

        entermonitor class "Lcom/android/internal/telephony/vendor/VendorSubscriptionInfoUpdater;";

     label1:
        $r3 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater sInstance>;

        if $r3 != null goto label3;

        r2 = new com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater;

        specialinvoke r2.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: void <init>(android.os.Looper,android.content.Context,com.android.internal.telephony.CommandsInterface[])>(r9, r0, r1);

        <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater sInstance> = r2;

     label2:
        goto label4;

     label3:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init() called multiple times!  sInstance = ");

        $r5 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater sInstance>;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("VendorSubscriptionInfoUpdater", $r7);

     label4:
        r11 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater sInstance>;

        exitmonitor class "Lcom/android/internal/telephony/vendor/VendorSubscriptionInfoUpdater;";

     label5:
        return r11;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor class "Lcom/android/internal/telephony/vendor/VendorSubscriptionInfoUpdater;";

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    static void lambda$handleSimReady$0(boolean)
    {
        boolean z0;
        com.android.internal.telephony.SubscriptionController $r0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r0 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        virtualinvoke $r0.<com.android.internal.telephony.SubscriptionController: void notifySubscriptionInfoChanged()>();

     label1:
        return;
    }

    protected void handleSimLoaded(int)
    {
        com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater r0;
        int i0;
        java.lang.String[] $r2, $r6;
        java.lang.String $r3, $r7, $r10;
        boolean[] $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater;

        i0 := @parameter0: int;

        $r2 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: java.lang.String[] sIccId>;

        $r3 = $r2[i0];

        if $r3 == null goto label1;

        $r6 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: java.lang.String[] sIccId>;

        $r7 = $r6[i0];

        if $r7 == "" goto label1;

        $r8 = r0.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: boolean[] mIsRecordUpdateRequired>;

        $r8[i0] = 0;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleSimLoaded: phoneId: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("VendorSubscriptionInfoUpdater", $r10);

        specialinvoke r0.<com.android.internal.telephony.SubscriptionInfoUpdater: void handleSimLoaded(int)>(i0);

        return;
    }

    protected void handleSimReady(int)
    {
        com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater r0;
        int i0, $i2, $i5;
        java.lang.String $r6, $r8, $r9, $r11, $r15, $r20, r26;
        java.lang.String[] $r7, $r10, $r14, $r21;
        java.lang.Integer $r12;
        com.android.internal.telephony.vendor.'-$$Lambda$VendorSubscriptionInfoUpdater$IeFMAGA3pnfgSew5l5ogcPLQJ9I' $r13;
        boolean $z1;
        com.android.internal.telephony.uicc.UiccController $r24;
        com.android.internal.telephony.uicc.UiccSlot r25;
        java.util.ArrayList r27;
        java.lang.StringBuilder r28, r29;
        com.android.internal.telephony.SubscriptionInfoUpdater$UpdateEmbeddedSubsCallback r30;

        r0 := @this: com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater;

        i0 := @parameter0: int;

        r27 = new java.util.ArrayList;

        specialinvoke r27.<java.util.ArrayList: void <init>()>();

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleSimReady: phoneId: ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("VendorSubscriptionInfoUpdater", $r6);

        $r7 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: java.lang.String[] sIccId>;

        $r8 = $r7[i0];

        if $r8 == null goto label1;

        $r14 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: java.lang.String[] sIccId>;

        $r15 = $r14[i0];

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label1;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SIM");

        $i5 = i0 + 1;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hot plug in");

        $r20 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("VendorSubscriptionInfoUpdater", $r20);

        $r21 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: java.lang.String[] sIccId>;

        $r21[i0] = null;

     label1:
        $r24 = staticinvoke <com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance()>();

        r25 = virtualinvoke $r24.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccSlot getUiccSlotForPhone(int)>(i0);

        if r25 != null goto label2;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("VendorSubscriptionInfoUpdater", "handleSimReady: uiccSlot null");

        return;

     label2:
        r26 = virtualinvoke r25.<com.android.internal.telephony.uicc.UiccSlot: java.lang.String getIccId()>();

        $r9 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String stripTrailingFs(java.lang.String)>(r26);

        if $r9 != null goto label3;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("VendorSubscriptionInfoUpdater", "handleSimReady: IccID null");

        return;

     label3:
        $r10 = <com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: java.lang.String[] sIccId>;

        $r11 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String stripTrailingFs(java.lang.String)>(r26);

        $r10[i0] = $r11;

        virtualinvoke r0.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: void updateSubscriptionInfoByIccId(int,boolean)>(i0, 1);

        $i2 = virtualinvoke r0.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: int getCardIdFromPhoneId(int)>(i0);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r27.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = <com.android.internal.telephony.vendor._$$Lambda$VendorSubscriptionInfoUpdater$IeFMAGA3pnfgSew5l5ogcPLQJ9I: com.android.internal.telephony.vendor.'-$$Lambda$VendorSubscriptionInfoUpdater$IeFMAGA3pnfgSew5l5ogcPLQJ9I' INSTANCE>;

        r30 = (com.android.internal.telephony.SubscriptionInfoUpdater$UpdateEmbeddedSubsCallback) $r13;

        virtualinvoke r0.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: void updateEmbeddedSubscriptions(java.util.List,com.android.internal.telephony.SubscriptionInfoUpdater$UpdateEmbeddedSubsCallback)>(r27, r30);

        virtualinvoke r0.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: void broadcastSimStateChanged(int,java.lang.String,java.lang.String)>(i0, "READY", null);

        virtualinvoke r0.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: void broadcastSimCardStateChanged(int,int)>(i0, 11);

        virtualinvoke r0.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: void broadcastSimApplicationStateChanged(int,int)>(i0, 6);

        return;
    }

    protected void updateSubscriptionInfoByIccId(int, boolean)
    {
        com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater r0;
        int i0;
        boolean z0, $z1;
        boolean[] $r1, $r5;
        java.lang.String $r4;
        java.lang.Throwable $r6;
        java.lang.StringBuilder r7;

        r0 := @this: com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: boolean[] mIsRecordUpdateRequired>;

        $z1 = $r1[i0];

        if $z1 != 1 goto label3;

        specialinvoke r0.<com.android.internal.telephony.SubscriptionInfoUpdater: void updateSubscriptionInfoByIccId(int,boolean)>(i0, z0);

     label2:
        goto label4;

     label3:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring subscription update event ");

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("VendorSubscriptionInfoUpdater", $r4);

        $r5 = r0.<com.android.internal.telephony.vendor.VendorSubscriptionInfoUpdater: boolean[] mIsRecordUpdateRequired>;

        $r5[i0] = 1;

     label4:
        exitmonitor r0;

        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
