public class com.android.internal.util.ArrayUtils extends java.lang.Object
{
    private static final int CACHE_SIZE;
    public static final java.io.File[] EMPTY_FILE;
    private static java.lang.Object[] sCache;

    static void <clinit>()
    {
        java.lang.Object[] $r0;
        java.io.File[] $r1;

        <com.android.internal.util.ArrayUtils: int CACHE_SIZE> = 73;

        $r0 = newarray (java.lang.Object)[73];

        <com.android.internal.util.ArrayUtils: java.lang.Object[] sCache> = $r0;

        $r1 = newarray (java.io.File)[0];

        <com.android.internal.util.ArrayUtils: java.io.File[] EMPTY_FILE> = $r1;

        return;
    }

    private void <init>()
    {
        com.android.internal.util.ArrayUtils r0;

        r0 := @this: com.android.internal.util.ArrayUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.util.ArraySet add(android.util.ArraySet, java.lang.Object)
    {
        android.util.ArraySet r0, $r2, r3;
        java.lang.Object r1;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: java.lang.Object;

        r3 = r0;

        if r0 != null goto label1;

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        r3 = $r2;

     label1:
        virtualinvoke r3.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        return r3;
    }

    public static java.util.ArrayList add(java.util.ArrayList, int, java.lang.Object)
    {
        java.util.ArrayList r0, $r2, r3;
        int i0;
        java.lang.Object r1;

        r0 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r3 = r0;

        if r0 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r3 = $r2;

     label1:
        virtualinvoke r3.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r1);

        return r3;
    }

    public static java.util.ArrayList add(java.util.ArrayList, java.lang.Object)
    {
        java.util.ArrayList r0, $r2, r3;
        java.lang.Object r1;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.lang.Object;

        r3 = r0;

        if r0 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r3 = $r2;

     label1:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return r3;
    }

    public static java.lang.Object[] appendElement(java.lang.Class, java.lang.Object[], java.lang.Object)
    {
        java.lang.Class r0;
        java.lang.Object[] r1, $r3;
        java.lang.Object r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object[];

        r2 := @parameter2: java.lang.Object;

        $r3 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object,boolean)>(r0, r1, r2, 0);

        return $r3;
    }

    public static java.lang.Object[] appendElement(java.lang.Class, java.lang.Object[], java.lang.Object, boolean)
    {
        java.lang.Object[] r0, r5;
        java.lang.Object r1, $r2, $r3;
        boolean z0, $z1;
        int $i0, i1;
        java.lang.Class r4;

        r4 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object[];

        r1 := @parameter2: java.lang.Object;

        z0 := @parameter3: boolean;

        if r0 == null goto label2;

        if z0 != 0 goto label1;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r0, r1);

        if $z1 == 0 goto label1;

        return r0;

     label1:
        i1 = lengthof r0;

        $i0 = i1 + 1;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r4, $i0);

        r5 = (java.lang.Object[]) $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r5, 0, i1);

        goto label3;

     label2:
        i1 = 0;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r4, 1);

        r5 = (java.lang.Object[]) $r2;

     label3:
        r5[i1] = r1;

        return r5;
    }

    public static int[] appendInt(int[], int)
    {
        int[] r0, $r1;
        int i0;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int,boolean)>(r0, i0, 0);

        return $r1;
    }

    public static int[] appendInt(int[], int, boolean)
    {
        int[] r0, r1, $r2;
        int i0, i1, $i2, $i3, i4;
        boolean z0;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if r0 != null goto label1;

        $r2 = newarray (int)[1];

        $r2[0] = i0;

        return $r2;

     label1:
        i1 = lengthof r0;

        if z0 != 0 goto label4;

        i4 = 0;

     label2:
        if i4 >= i1 goto label4;

        $i3 = r0[i4];

        if $i3 != i0 goto label3;

        return r0;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        $i2 = i1 + 1;

        r1 = newarray (int)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i1);

        r1[i1] = i0;

        return r1;
    }

    public static long[] appendLong(long[], long)
    {
        long[] r0, $r1;
        long l0;

        r0 := @parameter0: long[];

        l0 := @parameter1: long;

        $r1 = staticinvoke <com.android.internal.util.ArrayUtils: long[] appendLong(long[],long,boolean)>(r0, l0, 0);

        return $r1;
    }

    public static long[] appendLong(long[], long, boolean)
    {
        long[] r0, r1, $r2;
        long l0, $l3;
        boolean z0;
        int i1, $i2, i5;
        byte $b4;

        r0 := @parameter0: long[];

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        if r0 != null goto label1;

        $r2 = newarray (long)[1];

        $r2[0] = l0;

        return $r2;

     label1:
        i1 = lengthof r0;

        if z0 != 0 goto label4;

        i5 = 0;

     label2:
        if i5 >= i1 goto label4;

        $l3 = r0[i5];

        $b4 = $l3 cmp l0;

        if $b4 != 0 goto label3;

        return r0;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        $i2 = i1 + 1;

        r1 = newarray (long)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i1);

        r1[i1] = l0;

        return r1;
    }

    public static void checkBounds(int, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.ArrayIndexOutOfBoundsException $r6;
        java.lang.String $r7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 < 0 goto label1;

        if i0 <= i1 goto label1;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("length=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; index=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = new java.lang.ArrayIndexOutOfBoundsException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public static android.util.ArraySet cloneOrNull(android.util.ArraySet)
    {
        android.util.ArraySet $r0, r1, r2;

        r1 := @parameter0: android.util.ArraySet;

        if r1 == null goto label1;

        $r0 = new android.util.ArraySet;

        specialinvoke $r0.<android.util.ArraySet: void <init>(android.util.ArraySet)>(r1);

        r2 = $r0;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public static long[] cloneOrNull(long[])
    {
        java.lang.Object $r0;
        long[] r1, r2;

        r1 := @parameter0: long[];

        if r1 == null goto label1;

        $r0 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        r2 = (long[]) $r0;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public static java.lang.Object[] cloneOrNull(java.lang.Object[])
    {
        java.lang.Object $r0;
        java.lang.Object[] r1, r2;

        r1 := @parameter0: java.lang.Object[];

        if r1 == null goto label1;

        $r0 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        r2 = (java.lang.Object[]) $r0;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public static transient java.lang.Object[] concatElements(java.lang.Class, java.lang.Object[][])
    {
        java.lang.Object[][] r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11;
        java.lang.Object[] $r1, $r3, r5, r6, r7;
        java.lang.Object $r2;
        java.lang.Class r4;

        r4 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object[][];

        if r0 == null goto label11;

        $i1 = lengthof r0;

        if $i1 != 0 goto label01;

        goto label11;

     label01:
        i6 = 0;

        i7 = lengthof r0;

        i8 = 0;

     label02:
        if i8 >= i7 goto label05;

        r5 = r0[i8];

        if r5 != null goto label03;

        goto label04;

     label03:
        $i5 = lengthof r5;

        i6 = i6 + $i5;

     label04:
        i8 = i8 + 1;

        goto label02;

     label05:
        if i6 != 0 goto label06;

        $r3 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] createEmptyArray(java.lang.Class)>(r4);

        return $r3;

     label06:
        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r4, i6);

        r6 = (java.lang.Object[]) $r2;

        i9 = 0;

        i0 = lengthof r0;

        i10 = 0;

     label07:
        if i10 >= i0 goto label10;

        r7 = r0[i10];

        i11 = i9;

        if r7 == null goto label09;

        $i2 = lengthof r7;

        if $i2 != 0 goto label08;

        i11 = i9;

        goto label09;

     label08:
        $i3 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r6, i9, $i3);

        $i4 = lengthof r7;

        i11 = i9 + $i4;

     label09:
        i10 = i10 + 1;

        i9 = i11;

        goto label07;

     label10:
        return r6;

     label11:
        $r1 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] createEmptyArray(java.lang.Class)>(r4);

        return $r1;
    }

    public static boolean contains(java.util.Collection, java.lang.Object)
    {
        java.util.Collection r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        z0 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean contains(char[], char)
    {
        char[] r0;
        char c0, $c2;
        int i1, i3;

        r0 := @parameter0: char[];

        c0 := @parameter1: char;

        if r0 != null goto label1;

        return 0;

     label1:
        i1 = lengthof r0;

        i3 = 0;

     label2:
        if i3 >= i1 goto label4;

        $c2 = r0[i3];

        if $c2 != c0 goto label3;

        return 1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static boolean contains(int[], int)
    {
        int[] r0;
        int i0, i1, $i2, i3;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return 0;

     label1:
        i1 = lengthof r0;

        i3 = 0;

     label2:
        if i3 >= i1 goto label4;

        $i2 = r0[i3];

        if $i2 != i0 goto label3;

        return 1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static boolean contains(long[], long)
    {
        long[] r0;
        long l0, $l2;
        int i1, i4;
        byte $b3;

        r0 := @parameter0: long[];

        l0 := @parameter1: long;

        if r0 != null goto label1;

        return 0;

     label1:
        i1 = lengthof r0;

        i4 = 0;

     label2:
        if i4 >= i1 goto label4;

        $l2 = r0[i4];

        $b3 = $l2 cmp l0;

        if $b3 != 0 goto label3;

        return 1;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static boolean contains(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0;
        java.lang.Object r1;
        int $i0;
        boolean z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int indexOf(java.lang.Object[],java.lang.Object)>(r0, r1);

        if $i0 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean containsAll(char[], char[])
    {
        char[] r0, r1;
        int i0, i2;
        char $c1;
        boolean $z0;

        r0 := @parameter0: char[];

        r1 := @parameter1: char[];

        if r1 != null goto label1;

        return 1;

     label1:
        i0 = lengthof r1;

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $c1 = r1[i2];

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(char[],char)>(r0, $c1);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static boolean containsAll(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        int i0, i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        if r1 != null goto label1;

        return 1;

     label1:
        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r2 = r1[i1];

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r0, $r2);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static boolean containsAny(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        int i0, i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r2 = r1[i1];

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r0, $r2);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static int[] convertToIntArray(java.util.List)
    {
        java.util.List r0;
        int[] r1;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        r1 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i3 >= $i1 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        $r3 = (java.lang.Integer) $r2;

        $i2 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        r1[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static long[] convertToLongArray(int[])
    {
        int[] r0;
        long[] r1;
        int $i0, $i1, $i2, i4;
        long $l3;

        r0 := @parameter0: int[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (long)[$i0];

        i4 = 0;

     label2:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label3;

        $i2 = r0[i4];

        $l3 = (long) $i2;

        r1[i4] = $l3;

        i4 = i4 + 1;

        goto label2;

     label3:
        return r1;
    }

    private static java.lang.Object[] createEmptyArray(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Object $r1;
        java.lang.Object[] $r2, $r3, $r5;
        java.lang.String[] $r4;

        r0 := @parameter0: java.lang.Class;

        if r0 != class "Ljava/lang/String;" goto label1;

        $r4 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        $r5 = (java.lang.Object[]) $r4;

        return $r5;

     label1:
        if r0 != class "Ljava/lang/Object;" goto label2;

        $r3 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        return $r3;

     label2:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r0, 0);

        $r2 = (java.lang.Object[]) $r1;

        return $r2;
    }

    public static java.lang.String deepToString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28;
        java.lang.Class $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0;
        java.lang.Object[] $r11;
        short[] $r13;
        long[] $r15;
        int[] $r17;
        float[] $r19;
        double[] $r21;
        char[] $r23;
        byte[] $r25;
        boolean[] $r27;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label9;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label9;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 != class "[Z" goto label1;

        $r27 = (boolean[]) r0;

        $r28 = staticinvoke <java.util.Arrays: java.lang.String toString(boolean[])>($r27);

        return $r28;

     label1:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r4 != class "[B" goto label2;

        $r25 = (byte[]) r0;

        $r26 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r25);

        return $r26;

     label2:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r5 != class "[C" goto label3;

        $r23 = (char[]) r0;

        $r24 = staticinvoke <java.util.Arrays: java.lang.String toString(char[])>($r23);

        return $r24;

     label3:
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r6 != class "[D" goto label4;

        $r21 = (double[]) r0;

        $r22 = staticinvoke <java.util.Arrays: java.lang.String toString(double[])>($r21);

        return $r22;

     label4:
        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r7 != class "[F" goto label5;

        $r19 = (float[]) r0;

        $r20 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r19);

        return $r20;

     label5:
        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r8 != class "[I" goto label6;

        $r17 = (int[]) r0;

        $r18 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r17);

        return $r18;

     label6:
        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r9 != class "[J" goto label7;

        $r15 = (long[]) r0;

        $r16 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>($r15);

        return $r16;

     label7:
        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r10 != class "[S" goto label8;

        $r13 = (short[]) r0;

        $r14 = staticinvoke <java.util.Arrays: java.lang.String toString(short[])>($r13);

        return $r14;

     label8:
        $r11 = (java.lang.Object[]) r0;

        $r12 = staticinvoke <java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>($r11);

        return $r12;

     label9:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        return $r1;
    }

    public static int[] defeatNullable(int[])
    {
        int[] r0;

        r0 := @parameter0: int[];

        if r0 == null goto label1;

        goto label2;

     label1:
        r0 = <libcore.util.EmptyArray: int[] INT>;

     label2:
        return r0;
    }

    public static java.io.File[] defeatNullable(java.io.File[])
    {
        java.io.File[] r0;

        r0 := @parameter0: java.io.File[];

        if r0 == null goto label1;

        goto label2;

     label1:
        r0 = <com.android.internal.util.ArrayUtils: java.io.File[] EMPTY_FILE>;

     label2:
        return r0;
    }

    public static java.lang.String[] defeatNullable(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        if r0 == null goto label1;

        goto label2;

     label1:
        r0 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

     label2:
        return r0;
    }

    public static java.lang.Object[] emptyArray(java.lang.Class)
    {
        java.lang.Class r0, $r4, $r5;
        int i0, $i1, $i2;
        java.lang.Object r1, r7;
        java.lang.Object[] $r2, $r3, $r6, $r8;

        r0 := @parameter0: java.lang.Class;

        if r0 != class "Ljava/lang/Object;" goto label1;

        $r6 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        return $r6;

     label1:
        $i1 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i2 = $i1 & 2147483647;

        i0 = $i2 % 73;

        $r2 = <com.android.internal.util.ArrayUtils: java.lang.Object[] sCache>;

        r1 = $r2[i0];

        if r1 == null goto label2;

        r7 = r1;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Class getComponentType()>();

        if $r5 == r0 goto label3;

     label2:
        r7 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r0, 0);

        $r3 = <com.android.internal.util.ArrayUtils: java.lang.Object[] sCache>;

        $r3[i0] = r7;

     label3:
        $r8 = (java.lang.Object[]) r7;

        return $r8;
    }

    public static java.lang.Object[] emptyIfNull(java.lang.Object[], java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Object[] r1;

        r1 := @parameter0: java.lang.Object[];

        r0 := @parameter1: java.lang.Class;

        if r1 == null goto label1;

        goto label2;

     label1:
        r1 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>(r0);

     label2:
        return r1;
    }

    public static boolean equals(byte[], byte[], int)
    {
        byte[] r0, r1;
        int i0, $i1, $i2, i5;
        java.lang.IllegalArgumentException $r2;
        byte $b3, $b4;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        if i0 < 0 goto label7;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label6;

        if r1 == null goto label6;

        $i1 = lengthof r0;

        if $i1 < i0 goto label6;

        $i2 = lengthof r1;

        if $i2 >= i0 goto label2;

        goto label6;

     label2:
        i5 = 0;

     label3:
        if i5 >= i0 goto label5;

        $b4 = r0[i5];

        $b3 = r1[i5];

        if $b4 == $b3 goto label4;

        return 0;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        return 1;

     label6:
        return 0;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;
    }

    public static java.lang.Object[] filter(java.lang.Object[], java.util.function.IntFunction, java.util.function.Predicate)
    {
        java.lang.Object[] r0, r7;
        java.util.function.Predicate r1;
        int i0, $i1, i2, i3, i4, i5, i6, i7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2, $r3, $r4, $r5;
        java.util.function.IntFunction r6;

        r0 := @parameter0: java.lang.Object[];

        r6 := @parameter1: java.util.function.IntFunction;

        r1 := @parameter2: java.util.function.Predicate;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r0);

        if $z0 == 0 goto label01;

        return r0;

     label01:
        i2 = 0;

        i0 = staticinvoke <com.android.internal.util.ArrayUtils: int size(java.lang.Object[])>(r0);

        i3 = 0;

     label02:
        if i3 >= i0 goto label04;

        i4 = i2;

        $r5 = r0[i3];

        $z2 = interfaceinvoke r1.<java.util.function.Predicate: boolean test(java.lang.Object)>($r5);

        if $z2 == 0 goto label03;

        i4 = i2 + 1;

     label03:
        i3 = i3 + 1;

        i2 = i4;

        goto label02;

     label04:
        if i2 != 0 goto label05;

        return r0;

     label05:
        $i1 = lengthof r0;

        if i2 != $i1 goto label06;

        return r0;

     label06:
        if i2 != 0 goto label07;

        return null;

     label07:
        $r2 = interfaceinvoke r6.<java.util.function.IntFunction: java.lang.Object apply(int)>(i2);

        r7 = (java.lang.Object[]) $r2;

        i5 = 0;

        i6 = 0;

     label08:
        if i6 >= i0 goto label10;

        i7 = i5;

        $r3 = r0[i6];

        $z1 = interfaceinvoke r1.<java.util.function.Predicate: boolean test(java.lang.Object)>($r3);

        if $z1 == 0 goto label09;

        $r4 = r0[i6];

        r7[i5] = $r4;

        i7 = i5 + 1;

     label09:
        i6 = i6 + 1;

        i5 = i7;

        goto label08;

     label10:
        return r7;
    }

    public static java.lang.Object[] filterNotNull(java.lang.Object[], java.util.function.IntFunction)
    {
        java.lang.Object[] r0, r6;
        int i0, $i1, i2, i3, i4, i5, i6, i7;
        java.lang.Object $r1, $r2, $r3, $r4;
        java.util.function.IntFunction r5;

        r0 := @parameter0: java.lang.Object[];

        r5 := @parameter1: java.util.function.IntFunction;

        i2 = 0;

        i0 = staticinvoke <com.android.internal.util.ArrayUtils: int size(java.lang.Object[])>(r0);

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        i4 = i2;

        $r4 = r0[i3];

        if $r4 != null goto label2;

        i4 = i2 + 1;

     label2:
        i3 = i3 + 1;

        i2 = i4;

        goto label1;

     label3:
        if i2 != 0 goto label4;

        return r0;

     label4:
        $i1 = i0 - i2;

        $r1 = interfaceinvoke r5.<java.util.function.IntFunction: java.lang.Object apply(int)>($i1);

        r6 = (java.lang.Object[]) $r1;

        i5 = 0;

        i6 = 0;

     label5:
        if i6 >= i0 goto label7;

        i7 = i5;

        $r2 = r0[i6];

        if $r2 == null goto label6;

        $r3 = r0[i6];

        r6[i5] = $r3;

        i7 = i5 + 1;

     label6:
        i6 = i6 + 1;

        i5 = i7;

        goto label5;

     label7:
        return r6;
    }

    public static java.lang.Object find(java.lang.Object[], java.util.function.Predicate)
    {
        java.lang.Object[] r0;
        java.util.function.Predicate r1;
        int i0, i1;
        java.lang.Object r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.util.function.Predicate;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        i0 = lengthof r0;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r2 = r0[i1];

        $z1 = interfaceinvoke r1.<java.util.function.Predicate: boolean test(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

        return r2;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    public static java.lang.Object firstOrNull(java.lang.Object[])
    {
        int $i0;
        java.lang.Object[] r0;
        java.lang.Object r1;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        r1 = r0[0];

        goto label2;

     label1:
        r1 = null;

     label2:
        return r1;
    }

    public static int indexOf(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0;
        java.lang.Object r1, $r2;
        int $i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        return -1;

     label1:
        i1 = 0;

     label2:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        $r2 = r0[i1];

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label3;

        return i1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return -1;
    }

    public static boolean isEmpty(java.util.Collection)
    {
        java.util.Collection r0;
        boolean $z0, z1;

        r0 := @parameter0: java.util.Collection;

        if r0 == null goto label2;

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public static boolean isEmpty(java.util.Map)
    {
        java.util.Map r0;
        boolean $z0, z1;

        r0 := @parameter0: java.util.Map;

        if r0 == null goto label2;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public static boolean isEmpty(byte[])
    {
        byte[] r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: byte[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static boolean isEmpty(int[])
    {
        int[] r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: int[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static boolean isEmpty(long[])
    {
        long[] r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: long[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static boolean isEmpty(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: java.lang.Object[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static boolean isEmpty(boolean[])
    {
        boolean[] r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: boolean[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static java.lang.Object[] newUnpaddedArray(java.lang.Class, int)
    {
        java.lang.Class r0;
        int i0;
        dalvik.system.VMRuntime $r1;
        java.lang.Object $r2;
        java.lang.Object[] $r3;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $r1 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r2 = virtualinvoke $r1.<dalvik.system.VMRuntime: java.lang.Object newUnpaddedArray(java.lang.Class,int)>(r0, i0);

        $r3 = (java.lang.Object[]) $r2;

        return $r3;
    }

    public static boolean[] newUnpaddedBooleanArray(int)
    {
        int i0;
        dalvik.system.VMRuntime $r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        boolean[] $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r1 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r2 = virtualinvoke $r0.<dalvik.system.VMRuntime: java.lang.Object newUnpaddedArray(java.lang.Class,int)>($r1, i0);

        $r3 = (boolean[]) $r2;

        return $r3;
    }

    public static byte[] newUnpaddedByteArray(int)
    {
        int i0;
        dalvik.system.VMRuntime $r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        byte[] $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r1 = <java.lang.Byte: java.lang.Class TYPE>;

        $r2 = virtualinvoke $r0.<dalvik.system.VMRuntime: java.lang.Object newUnpaddedArray(java.lang.Class,int)>($r1, i0);

        $r3 = (byte[]) $r2;

        return $r3;
    }

    public static char[] newUnpaddedCharArray(int)
    {
        int i0;
        dalvik.system.VMRuntime $r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        char[] $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r1 = <java.lang.Character: java.lang.Class TYPE>;

        $r2 = virtualinvoke $r0.<dalvik.system.VMRuntime: java.lang.Object newUnpaddedArray(java.lang.Class,int)>($r1, i0);

        $r3 = (char[]) $r2;

        return $r3;
    }

    public static float[] newUnpaddedFloatArray(int)
    {
        int i0;
        dalvik.system.VMRuntime $r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        float[] $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r1 = <java.lang.Float: java.lang.Class TYPE>;

        $r2 = virtualinvoke $r0.<dalvik.system.VMRuntime: java.lang.Object newUnpaddedArray(java.lang.Class,int)>($r1, i0);

        $r3 = (float[]) $r2;

        return $r3;
    }

    public static int[] newUnpaddedIntArray(int)
    {
        int i0;
        dalvik.system.VMRuntime $r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        int[] $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2 = virtualinvoke $r0.<dalvik.system.VMRuntime: java.lang.Object newUnpaddedArray(java.lang.Class,int)>($r1, i0);

        $r3 = (int[]) $r2;

        return $r3;
    }

    public static long[] newUnpaddedLongArray(int)
    {
        int i0;
        dalvik.system.VMRuntime $r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        long[] $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r1 = <java.lang.Long: java.lang.Class TYPE>;

        $r2 = virtualinvoke $r0.<dalvik.system.VMRuntime: java.lang.Object newUnpaddedArray(java.lang.Class,int)>($r1, i0);

        $r3 = (long[]) $r2;

        return $r3;
    }

    public static java.lang.Object[] newUnpaddedObjectArray(int)
    {
        int i0;
        dalvik.system.VMRuntime $r0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;

        i0 := @parameter0: int;

        $r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r1 = virtualinvoke $r0.<dalvik.system.VMRuntime: java.lang.Object newUnpaddedArray(java.lang.Class,int)>(class "Ljava/lang/Object;", i0);

        $r2 = (java.lang.Object[]) $r1;

        return $r2;
    }

    public static boolean referenceEquals(java.util.ArrayList, java.util.ArrayList)
    {
        java.util.ArrayList r0, r1;
        int i0, i1, i2;
        boolean $z0, z1, z2;
        java.lang.Object $r2, $r3;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.util.ArrayList;

        if r0 != r1 goto label1;

        return 1;

     label1:
        i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if r0 == null goto label7;

        if r1 == null goto label7;

        if i0 == i1 goto label2;

        goto label7;

     label2:
        z1 = 0;

        i2 = 0;

     label3:
        if i2 >= i0 goto label6;

        if z1 != 0 goto label6;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        if $r2 == $r3 goto label4;

        z2 = 1;

        goto label5;

     label4:
        z2 = 0;

     label5:
        z1 = z1 | z2;

        i2 = i2 + 1;

        goto label3;

     label6:
        $z0 = z1 ^ 1;

        return $z0;

     label7:
        return 0;
    }

    public static android.util.ArraySet remove(android.util.ArraySet, java.lang.Object)
    {
        android.util.ArraySet r0;
        java.lang.Object r1;
        boolean $z1;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        virtualinvoke r0.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $z1 = virtualinvoke r0.<android.util.ArraySet: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        return null;

     label2:
        return r0;
    }

    public static java.util.ArrayList remove(java.util.ArrayList, java.lang.Object)
    {
        java.util.ArrayList r0;
        java.lang.Object r1;
        boolean $z1;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        virtualinvoke r0.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $z1 = virtualinvoke r0.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        return null;

     label2:
        return r0;
    }

    public static java.lang.Object[] removeElement(java.lang.Class, java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0, r5;
        java.lang.Object r1, $r2, $r3;
        int i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1;
        java.lang.Class r4;

        r4 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object[];

        r1 := @parameter2: java.lang.Object;

        if r0 == null goto label5;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r0, r1);

        if $z0 != 0 goto label1;

        return r0;

     label1:
        i0 = lengthof r0;

        i5 = 0;

     label2:
        if i5 >= i0 goto label5;

        $r2 = r0[i5];

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z1 == 0 goto label4;

        if i0 != 1 goto label3;

        return null;

     label3:
        $i1 = i0 - 1;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r4, $i1);

        r5 = (java.lang.Object[]) $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r5, 0, i5);

        $i4 = i5 + 1;

        $i2 = i0 - i5;

        $i3 = $i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i4, r5, i5, $i3);

        return r5;

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        return r0;
    }

    public static int[] removeInt(int[], int)
    {
        int[] r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        i1 = lengthof r0;

        i8 = 0;

     label2:
        if i8 >= i1 goto label6;

        $i2 = r0[i8];

        if $i2 != i0 goto label5;

        $i3 = i1 - 1;

        r1 = newarray (int)[$i3];

        if i8 <= 0 goto label3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i8);

     label3:
        $i4 = i1 - 1;

        if i8 >= $i4 goto label4;

        $i7 = i8 + 1;

        $i5 = i1 - i8;

        $i6 = $i5 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i7, r1, i8, $i6);

     label4:
        return r1;

     label5:
        i8 = i8 + 1;

        goto label2;

     label6:
        return r0;
    }

    public static long[] removeLong(long[], long)
    {
        long[] r0, r1;
        long l0, $l2;
        int i1, $i4, $i5, $i6, $i7, $i8, i9;
        byte $b3;

        r0 := @parameter0: long[];

        l0 := @parameter1: long;

        if r0 != null goto label1;

        return null;

     label1:
        i1 = lengthof r0;

        i9 = 0;

     label2:
        if i9 >= i1 goto label6;

        $l2 = r0[i9];

        $b3 = $l2 cmp l0;

        if $b3 != 0 goto label5;

        $i4 = i1 - 1;

        r1 = newarray (long)[$i4];

        if i9 <= 0 goto label3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i9);

     label3:
        $i5 = i1 - 1;

        if i9 >= $i5 goto label4;

        $i8 = i9 + 1;

        $i6 = i1 - i9;

        $i7 = $i6 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i8, r1, i9, $i7);

     label4:
        return r1;

     label5:
        i9 = i9 + 1;

        goto label2;

     label6:
        return r0;
    }

    public static java.lang.String[] removeString(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r1, r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = lengthof r0;

        i6 = 0;

     label2:
        if i6 >= i0 goto label6;

        $r1 = r0[i6];

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r1, r2);

        if $z0 == 0 goto label5;

        $i1 = i0 - 1;

        r3 = newarray (java.lang.String)[$i1];

        if i6 <= 0 goto label3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r3, 0, i6);

     label3:
        $i2 = i0 - 1;

        if i6 >= $i2 goto label4;

        $i5 = i6 + 1;

        $i3 = i0 - i6;

        $i4 = $i3 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i5, r3, i6, $i4);

     label4:
        return r3;

     label5:
        i6 = i6 + 1;

        goto label2;

     label6:
        return r0;
    }

    public static int size(java.util.Collection)
    {
        java.util.Collection r0;
        int i0;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

     label2:
        return i0;
    }

    public static int size(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int i0;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        i0 = lengthof r0;

     label2:
        return i0;
    }

    public static boolean startsWith(byte[], byte[])
    {
        byte[] r0, r1;
        int $i0, $i1, $i2, i5;
        byte $b3, $b4;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        if r0 == null goto label6;

        if r1 != null goto label1;

        goto label6;

     label1:
        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 >= $i0 goto label2;

        return 0;

     label2:
        i5 = 0;

     label3:
        $i2 = lengthof r1;

        if i5 >= $i2 goto label5;

        $b4 = r0[i5];

        $b3 = r1[i5];

        if $b4 == $b3 goto label4;

        return 0;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        return 1;

     label6:
        return 0;
    }

    public static long total(long[])
    {
        long[] r0;
        int i0, i4;
        long $l1, l2, l3;

        r0 := @parameter0: long[];

        l2 = 0L;

        l3 = 0L;

        if r0 == null goto label2;

        i0 = lengthof r0;

        i4 = 0;

     label1:
        l3 = l2;

        if i4 >= i0 goto label2;

        $l1 = r0[i4];

        l2 = l2 + $l1;

        i4 = i4 + 1;

        goto label1;

     label2:
        return l3;
    }

    public static java.lang.Object[] trimToSize(java.lang.Object[], int)
    {
        java.lang.Object[] r0, $r1;
        int i0, $i1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        if r0 == null goto label3;

        if i0 != 0 goto label1;

        goto label3;

     label1:
        $i1 = lengthof r0;

        if $i1 != i0 goto label2;

        return r0;

     label2:
        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r0, i0);

        return $r1;

     label3:
        return null;
    }

    public static int unstableRemoveIf(java.util.ArrayList, java.util.function.Predicate)
    {
        java.util.ArrayList r0;
        java.util.function.Predicate r1;
        int i0, $i1, i2, i3, i4, i5, i6;
        java.lang.Object $r3, $r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.util.function.Predicate;

        if r0 != null goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i2 = 0;

        i3 = i0 - 1;

     label2:
        i4 = i2;

        if i2 > i3 goto label7;

     label3:
        i5 = i3;

        if i2 >= i0 goto label4;

        i5 = i3;

        $r4 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $z1 = interfaceinvoke r1.<java.util.function.Predicate: boolean test(java.lang.Object)>($r4);

        if $z1 != 0 goto label4;

        i2 = i2 + 1;

        goto label3;

     label4:
        if i5 <= i2 goto label5;

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $z0 = interfaceinvoke r1.<java.util.function.Predicate: boolean test(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        i5 = i5 + -1;

        goto label4;

     label5:
        if i2 < i5 goto label6;

        i4 = i2;

        goto label7;

     label6:
        staticinvoke <java.util.Collections: void swap(java.util.List,int,int)>(r0, i2, i5);

        i2 = i2 + 1;

        i3 = i5 - 1;

        goto label2;

     label7:
        i6 = i0 - 1;

     label8:
        if i6 < i4 goto label9;

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object remove(int)>(i6);

        i6 = i6 + -1;

        goto label8;

     label9:
        $i1 = i0 - i4;

        return $i1;
    }
}
