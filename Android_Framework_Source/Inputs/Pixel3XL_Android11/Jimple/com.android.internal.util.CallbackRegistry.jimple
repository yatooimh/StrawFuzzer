public class com.android.internal.util.CallbackRegistry extends java.lang.Object implements java.lang.Cloneable
{
    private static final java.lang.String TAG;
    private java.util.List mCallbacks;
    private long mFirst64Removed;
    private int mNotificationLevel;
    private final com.android.internal.util.CallbackRegistry$NotifierCallback mNotifier;
    private long[] mRemainderRemoved;

    public void <init>(com.android.internal.util.CallbackRegistry$NotifierCallback)
    {
        com.android.internal.util.CallbackRegistry r0;
        com.android.internal.util.CallbackRegistry$NotifierCallback r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        r1 := @parameter0: com.android.internal.util.CallbackRegistry$NotifierCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks> = $r2;

        r0.<com.android.internal.util.CallbackRegistry: long mFirst64Removed> = 0L;

        r0.<com.android.internal.util.CallbackRegistry: com.android.internal.util.CallbackRegistry$NotifierCallback mNotifier> = r1;

        return;
    }

    private boolean isRemovedLocked(int)
    {
        com.android.internal.util.CallbackRegistry r0;
        int i0, i1, $i2, $i3, $i4;
        long[] r1;
        long $l5, $l6, $l7, $l9, $l10, $l11;
        byte $b8, $b12;
        boolean z1, z2;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        i0 := @parameter0: int;

        z1 = 1;

        if i0 >= 64 goto label3;

        $l10 = r0.<com.android.internal.util.CallbackRegistry: long mFirst64Removed>;

        $l9 = 1L << i0;

        $l11 = $l10 & $l9;

        $b12 = $l11 cmp 0L;

        if $b12 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        r1 = r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved>;

        if r1 != null goto label4;

        return 0;

     label4:
        $i2 = i0 / 64;

        i1 = $i2 - 1;

        $i3 = lengthof r1;

        if i1 < $i3 goto label5;

        return 0;

     label5:
        $l6 = r1[i1];

        $i4 = i0 % 64;

        $l5 = 1L << $i4;

        $l7 = $l6 & $l5;

        $b8 = $l7 cmp 0L;

        if $b8 == 0 goto label6;

        z2 = 1;

        goto label7;

     label6:
        z2 = 0;

     label7:
        return z2;
    }

    private void notifyCallbacksLocked(java.lang.Object, int, java.lang.Object, int, int, long)
    {
        com.android.internal.util.CallbackRegistry r0;
        java.lang.Object r1, r2, $r5;
        int i0, i1, i5;
        long l2, $l3, l6;
        byte $b4;
        java.util.List $r3;
        com.android.internal.util.CallbackRegistry$NotifierCallback $r4;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        i5 := @parameter3: int;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        l6 = 1L;

     label1:
        if i5 >= i1 goto label3;

        $l3 = l2 & l6;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label2;

        $r4 = r0.<com.android.internal.util.CallbackRegistry: com.android.internal.util.CallbackRegistry$NotifierCallback mNotifier>;

        $r3 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i5);

        virtualinvoke $r4.<com.android.internal.util.CallbackRegistry$NotifierCallback: void onNotifyCallback(java.lang.Object,java.lang.Object,int,java.lang.Object)>($r5, r1, i0, r2);

     label2:
        l6 = l6 << 1;

        i5 = i5 + 1;

        goto label1;

     label3:
        return;
    }

    private void notifyFirst64Locked(java.lang.Object, int, java.lang.Object)
    {
        com.android.internal.util.CallbackRegistry r0;
        java.lang.Object r1, r2;
        int i0, $i1, $i2;
        java.util.List $r3;
        long $l3;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(64, $i1);

        $l3 = r0.<com.android.internal.util.CallbackRegistry: long mFirst64Removed>;

        specialinvoke r0.<com.android.internal.util.CallbackRegistry: void notifyCallbacksLocked(java.lang.Object,int,java.lang.Object,int,int,long)>(r1, i0, r2, 0, $i2, $l3);

        return;
    }

    private void notifyRecurseLocked(java.lang.Object, int, java.lang.Object)
    {
        com.android.internal.util.CallbackRegistry r0;
        java.lang.Object r1, r2;
        int i0, i1, $i2, $i3, $i4, i5;
        long[] r3;
        java.util.List $r4;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        r3 = r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved>;

        if r3 != null goto label1;

        i5 = -1;

        goto label2;

     label1:
        $i2 = lengthof r3;

        i5 = $i2 - 1;

     label2:
        specialinvoke r0.<com.android.internal.util.CallbackRegistry: void notifyRemainderLocked(java.lang.Object,int,java.lang.Object,int)>(r1, i0, r2, i5);

        $i3 = i5 + 2;

        $i4 = $i3 * 64;

        specialinvoke r0.<com.android.internal.util.CallbackRegistry: void notifyCallbacksLocked(java.lang.Object,int,java.lang.Object,int,int,long)>(r1, i0, r2, $i4, i1, 0L);

        return;
    }

    private void notifyRemainderLocked(java.lang.Object, int, java.lang.Object, int)
    {
        com.android.internal.util.CallbackRegistry r0;
        java.lang.Object r1, r2;
        int i0, i1, i3, i4, $i5, $i6, $i7, $i8;
        long l2;
        long[] $r3;
        java.util.List $r4;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        i1 := @parameter3: int;

        if i1 >= 0 goto label1;

        specialinvoke r0.<com.android.internal.util.CallbackRegistry: void notifyFirst64Locked(java.lang.Object,int,java.lang.Object)>(r1, i0, r2);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved>;

        l2 = $r3[i1];

        $i5 = i1 + 1;

        i3 = $i5 * 64;

        $r4 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        $i6 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i7 = i3 + 64;

        i4 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i7);

        $i8 = i1 - 1;

        specialinvoke r0.<com.android.internal.util.CallbackRegistry: void notifyRemainderLocked(java.lang.Object,int,java.lang.Object,int)>(r1, i0, r2, $i8);

        specialinvoke r0.<com.android.internal.util.CallbackRegistry: void notifyCallbacksLocked(java.lang.Object,int,java.lang.Object,int,int,long)>(r1, i0, r2, i3, i4, l2);

     label2:
        return;
    }

    private void removeRemovedCallbacks(int, long)
    {
        com.android.internal.util.CallbackRegistry r0;
        int i0, $i2, i6;
        long l1, $l3, l5;
        byte $b4;
        java.util.List $r1;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l5 = -9223372036854775808L;

        $i2 = i0 + 64;

        i6 = $i2 - 1;

     label1:
        if i6 < i0 goto label3;

        $l3 = l1 & l5;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label2;

        $r1 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i6);

     label2:
        l5 = l5 >>> 1;

        i6 = i6 + -1;

        goto label1;

     label3:
        return;
    }

    private void setRemovalBitLocked(int)
    {
        com.android.internal.util.CallbackRegistry r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i13;
        long[] r1, $r4, r5, r6, r7;
        java.util.List $r2, $r3;
        long $l9, $l10, $l11, $l12, $l14, $l15;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        i0 := @parameter0: int;

        if i0 >= 64 goto label1;

        $l10 = r0.<com.android.internal.util.CallbackRegistry: long mFirst64Removed>;

        $l9 = 1L << i0;

        $l11 = $l10 | $l9;

        r0.<com.android.internal.util.CallbackRegistry: long mFirst64Removed> = $l11;

        goto label4;

     label1:
        $i2 = i0 / 64;

        i1 = $i2 - 1;

        r5 = r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved>;

        if r5 != null goto label2;

        $r3 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        $i7 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i8 = $i7 / 64;

        $r4 = newarray (long)[$i8];

        r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved> = $r4;

        goto label3;

     label2:
        $i3 = lengthof r5;

        if $i3 >= i1 goto label3;

        $r2 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        $i4 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i5 = $i4 / 64;

        r1 = newarray (long)[$i5];

        r6 = r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved>;

        $i6 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r1, 0, $i6);

        r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved> = r1;

     label3:
        r7 = r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved>;

        $l12 = r7[i1];

        $i13 = i0 % 64;

        $l14 = 1L << $i13;

        $l15 = $l12 | $l14;

        r7[i1] = $l15;

     label4:
        return;
    }

    public void add(java.lang.Object)
    {
        com.android.internal.util.CallbackRegistry r0;
        int i0;
        java.util.List $r1, $r2;
        boolean $z1;
        java.lang.Throwable $r3;
        java.lang.Object r4;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        r4 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        i0 = interfaceinvoke $r1.<java.util.List: int lastIndexOf(java.lang.Object)>(r4);

     label2:
        if i0 < 0 goto label4;

     label3:
        $z1 = specialinvoke r0.<com.android.internal.util.CallbackRegistry: boolean isRemovedLocked(int)>(i0);

        if $z1 == 0 goto label5;

     label4:
        $r2 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label5:
        exitmonitor r0;

        return;

     label6:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void clear()
    {
        com.android.internal.util.CallbackRegistry r0;
        int $i0, $i1, i2;
        java.util.List $r2, $r3, $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        entermonitor r0;

     label1:
        $i0 = r0.<com.android.internal.util.CallbackRegistry: int mNotificationLevel>;

        if $i0 != 0 goto label3;

        $r4 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

     label2:
        goto label7;

     label3:
        $r2 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $r3 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label4:
        if i2 < 0 goto label7;

     label5:
        specialinvoke r0.<com.android.internal.util.CallbackRegistry: void setRemovalBitLocked(int)>(i2);

     label6:
        i2 = i2 + -1;

        goto label4;

     label7:
        exitmonitor r0;

        return;

     label8:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public com.android.internal.util.CallbackRegistry clone()
    {
        com.android.internal.util.CallbackRegistry r0, r9, r10;
        int i0, i1;
        java.lang.Object $r2, $r6;
        java.util.List $r3, $r4, $r5;
        boolean $z0;
        java.lang.Throwable $r7, $r8;
        java.util.ArrayList r13;
        java.lang.CloneNotSupportedException r14;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        entermonitor r0;

        r9 = null;

     label01:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r10 = (com.android.internal.util.CallbackRegistry) $r2;

     label02:
        r9 = r10;

     label03:
        r10.<com.android.internal.util.CallbackRegistry: long mFirst64Removed> = 0L;

     label04:
        r9 = r10;

     label05:
        r10.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved> = null;

     label06:
        r9 = r10;

     label07:
        r10.<com.android.internal.util.CallbackRegistry: int mNotificationLevel> = 0;

     label08:
        r9 = r10;

     label09:
        r13 = new java.util.ArrayList;

     label10:
        r9 = r10;

     label11:
        specialinvoke r13.<java.util.ArrayList: void <init>()>();

     label12:
        r9 = r10;

     label13:
        r10.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks> = r13;

     label14:
        r9 = r10;

     label15:
        $r3 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label16:
        i1 = 0;

     label17:
        if i1 >= i0 goto label22;

        r9 = r10;

     label18:
        $z0 = specialinvoke r0.<com.android.internal.util.CallbackRegistry: boolean isRemovedLocked(int)>(i1);

        if $z0 != 0 goto label21;

     label19:
        r9 = r10;

     label20:
        $r5 = r10.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        $r4 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

     label21:
        i1 = i1 + 1;

        goto label17;

     label22:
        r9 = r10;

        goto label26;

     label23:
        $r7 := @caughtexception;

        goto label27;

     label24:
        $r8 := @caughtexception;

     label25:
        r14 = (java.lang.CloneNotSupportedException) $r8;

        virtualinvoke r14.<java.lang.CloneNotSupportedException: void printStackTrace()>();

     label26:
        exitmonitor r0;

        return r9;

     label27:
        exitmonitor r0;

        throw $r7;

        catch java.lang.CloneNotSupportedException from label01 to label02 with label24;
        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.CloneNotSupportedException from label03 to label04 with label24;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.CloneNotSupportedException from label05 to label06 with label24;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.CloneNotSupportedException from label07 to label08 with label24;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.CloneNotSupportedException from label09 to label10 with label24;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.CloneNotSupportedException from label11 to label12 with label24;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.CloneNotSupportedException from label13 to label14 with label24;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.CloneNotSupportedException from label15 to label16 with label24;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.CloneNotSupportedException from label18 to label19 with label24;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.CloneNotSupportedException from label20 to label21 with label24;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label25 to label26 with label23;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.android.internal.util.CallbackRegistry r0, $r1;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        $r1 = virtualinvoke r0.<com.android.internal.util.CallbackRegistry: com.android.internal.util.CallbackRegistry clone()>();

        return $r1;
    }

    public java.util.ArrayList copyListeners()
    {
        com.android.internal.util.CallbackRegistry r0;
        int i0, $i1, i2;
        java.util.List $r1, $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        java.util.ArrayList r6;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        entermonitor r0;

     label1:
        r6 = new java.util.ArrayList;

        $r1 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $r2 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label2:
        i2 = 0;

     label3:
        if i2 >= i0 goto label6;

     label4:
        $z0 = specialinvoke r0.<com.android.internal.util.CallbackRegistry: boolean isRemovedLocked(int)>(i2);

        if $z0 != 0 goto label5;

        $r3 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i2);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        exitmonitor r0;

        return r6;

     label7:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public boolean isEmpty()
    {
        com.android.internal.util.CallbackRegistry r0;
        int i0, i1, i2;
        java.util.List $r2, $r3;
        java.lang.Throwable $r4;
        boolean z0, z1;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        entermonitor r0;

     label01:
        $r2 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

     label02:
        if z0 == 0 goto label03;

        exitmonitor r0;

        return 1;

     label03:
        i1 = r0.<com.android.internal.util.CallbackRegistry: int mNotificationLevel>;

     label04:
        if i1 != 0 goto label05;

        exitmonitor r0;

        return 0;

     label05:
        $r3 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label06:
        i2 = 0;

     label07:
        if i2 >= i0 goto label11;

     label08:
        z1 = specialinvoke r0.<com.android.internal.util.CallbackRegistry: boolean isRemovedLocked(int)>(i2);

     label09:
        if z1 != 0 goto label10;

        exitmonitor r0;

        return 0;

     label10:
        i2 = i2 + 1;

        goto label07;

     label11:
        exitmonitor r0;

        return 1;

     label12:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public void notifyCallbacks(java.lang.Object, int, java.lang.Object)
    {
        com.android.internal.util.CallbackRegistry r0;
        java.lang.Object r1, r7;
        long l0, $l4, $l6;
        int $i1, $i2, $i3, $i7, $i9, $i10, i11, i12, i13;
        long[] $r2, $r3, $r4, $r5;
        byte $b5, $b8;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        r7 := @parameter0: java.lang.Object;

        i11 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        entermonitor r0;

     label01:
        $i1 = r0.<com.android.internal.util.CallbackRegistry: int mNotificationLevel>;

        $i2 = $i1 + 1;

        r0.<com.android.internal.util.CallbackRegistry: int mNotificationLevel> = $i2;

        specialinvoke r0.<com.android.internal.util.CallbackRegistry: void notifyRecurseLocked(java.lang.Object,int,java.lang.Object)>(r7, i11, r1);

        $i3 = r0.<com.android.internal.util.CallbackRegistry: int mNotificationLevel>;

        i12 = $i3 - 1;

        r0.<com.android.internal.util.CallbackRegistry: int mNotificationLevel> = i12;

     label02:
        if i12 != 0 goto label10;

     label03:
        $r2 = r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved>;

        if $r2 == null goto label09;

        $r3 = r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved>;

        $i7 = lengthof $r3;

        i13 = $i7 - 1;

     label04:
        if i13 < 0 goto label09;

     label05:
        $r4 = r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved>;

        l0 = $r4[i13];

     label06:
        $b8 = l0 cmp 0L;

        if $b8 == 0 goto label08;

     label07:
        $i9 = i13 + 1;

        $i10 = $i9 * 64;

        specialinvoke r0.<com.android.internal.util.CallbackRegistry: void removeRemovedCallbacks(int,long)>($i10, l0);

        $r5 = r0.<com.android.internal.util.CallbackRegistry: long[] mRemainderRemoved>;

        $r5[i13] = 0L;

     label08:
        i13 = i13 + -1;

        goto label04;

     label09:
        $l4 = r0.<com.android.internal.util.CallbackRegistry: long mFirst64Removed>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label10;

        $l6 = r0.<com.android.internal.util.CallbackRegistry: long mFirst64Removed>;

        specialinvoke r0.<com.android.internal.util.CallbackRegistry: void removeRemovedCallbacks(int,long)>(0, $l6);

        r0.<com.android.internal.util.CallbackRegistry: long mFirst64Removed> = 0L;

     label10:
        exitmonitor r0;

        return;

     label11:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void remove(java.lang.Object)
    {
        com.android.internal.util.CallbackRegistry r0;
        int i0, $i1;
        java.util.List $r1, $r2;
        java.lang.Throwable $r3;
        java.lang.Object r4;

        r0 := @this: com.android.internal.util.CallbackRegistry;

        r4 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        $i1 = r0.<com.android.internal.util.CallbackRegistry: int mNotificationLevel>;

        if $i1 != 0 goto label3;

        $r2 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r4);

     label2:
        goto label6;

     label3:
        $r1 = r0.<com.android.internal.util.CallbackRegistry: java.util.List mCallbacks>;

        i0 = interfaceinvoke $r1.<java.util.List: int lastIndexOf(java.lang.Object)>(r4);

     label4:
        if i0 < 0 goto label6;

     label5:
        specialinvoke r0.<com.android.internal.util.CallbackRegistry: void setRemovalBitLocked(int)>(i0);

     label6:
        exitmonitor r0;

        return;

     label7:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static void <clinit>()
    {
        <com.android.internal.util.CallbackRegistry: java.lang.String TAG> = "CallbackRegistry";

        return;
    }
}
