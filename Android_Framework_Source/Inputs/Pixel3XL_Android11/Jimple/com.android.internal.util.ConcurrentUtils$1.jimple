class com.android.internal.util.ConcurrentUtils$1 extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    private final java.util.concurrent.atomic.AtomicInteger threadNum;
    final int val$linuxThreadPriority;
    final java.lang.String val$poolName;

    void <init>(java.lang.String, int)
    {
        com.android.internal.util.ConcurrentUtils$1 r0;
        java.lang.String r1;
        int i0;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: com.android.internal.util.ConcurrentUtils$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r0.<com.android.internal.util.ConcurrentUtils$1: java.lang.String val$poolName> = r1;

        r0.<com.android.internal.util.ConcurrentUtils$1: int val$linuxThreadPriority> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.android.internal.util.ConcurrentUtils$1: java.util.concurrent.atomic.AtomicInteger threadNum> = $r2;

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        com.android.internal.util.ConcurrentUtils$1 r0;
        java.lang.Runnable r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r9;
        java.util.concurrent.atomic.AtomicInteger $r6;
        int $i0;
        com.android.internal.util.ConcurrentUtils$1$1 $r8;

        r0 := @this: com.android.internal.util.ConcurrentUtils$1;

        r1 := @parameter0: java.lang.Runnable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.android.internal.util.ConcurrentUtils$1: java.lang.String val$poolName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r0.<com.android.internal.util.ConcurrentUtils$1: java.util.concurrent.atomic.AtomicInteger threadNum>;

        $i0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = new com.android.internal.util.ConcurrentUtils$1$1;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.android.internal.util.ConcurrentUtils$1$1: void <init>(com.android.internal.util.ConcurrentUtils$1,java.lang.String,java.lang.Runnable)>(r0, $r9, r1);

        return $r8;
    }
}
