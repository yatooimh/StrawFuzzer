public final class com.android.internal.util.DumpUtils extends java.lang.Object
{
    public static final android.content.ComponentName[] CRITICAL_SECTION_COMPONENTS;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        android.content.ComponentName[] $r0;
        android.content.ComponentName $r1;

        <com.android.internal.util.DumpUtils: java.lang.String TAG> = "DumpUtils";

        <com.android.internal.util.DumpUtils: boolean DEBUG> = 0;

        $r0 = newarray (android.content.ComponentName)[1];

        $r1 = new android.content.ComponentName;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.systemui", "com.android.systemui.SystemUIService");

        $r0[0] = $r1;

        <com.android.internal.util.DumpUtils: android.content.ComponentName[] CRITICAL_SECTION_COMPONENTS> = $r0;

        return;
    }

    private void <init>()
    {
        com.android.internal.util.DumpUtils r0;

        r0 := @this: com.android.internal.util.DumpUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean checkDumpAndUsageStatsPermission(android.content.Context, java.lang.String, java.io.PrintWriter)
    {
        android.content.Context r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        boolean $z0, $z1, z2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.PrintWriter;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>(r0, r1, r2);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>(r0, r1, r2);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public static boolean checkDumpPermission(android.content.Context, java.lang.String, java.io.PrintWriter)
    {
        java.lang.String r0, $r10;
        java.io.PrintWriter r1;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2;
        android.content.Context r11;

        r11 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.io.PrintWriter;

        $i0 = virtualinvoke r11.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to missing android.permission.DUMP permission");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.DumpUtils: void logMessage(java.io.PrintWriter,java.lang.String)>(r1, $r10);

        return 0;

     label1:
        return 1;
    }

    public static boolean checkUsageStatsPermission(android.content.Context, java.lang.String, java.io.PrintWriter)
    {
        java.lang.String r0, $r13, $r14, $r23;
        java.io.PrintWriter r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8;
        android.app.AppOpsManager r2;
        java.lang.Object $r3;
        android.content.pm.PackageManager $r4;
        java.lang.StringBuilder $r5, $r15;
        android.content.Context r24;
        java.lang.String[] r26;

        r24 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.io.PrintWriter;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 0 goto label6;

        if i0 == 1000 goto label6;

        if i0 == 1067 goto label6;

        if i0 == 2000 goto label6;

        $i3 = virtualinvoke r24.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.PACKAGE_USAGE_STATS");

        if $i3 == 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from from pid=");

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to missing android.permission.PACKAGE_USAGE_STATS permission");

        $r23 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.DumpUtils: void logMessage(java.io.PrintWriter,java.lang.String)>(r1, $r23);

        return 0;

     label1:
        $r3 = virtualinvoke r24.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        r2 = (android.app.AppOpsManager) $r3;

        $r4 = virtualinvoke r24.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r26 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        if r26 == null goto label5;

        i1 = lengthof r26;

        i8 = 0;

     label2:
        if i8 >= i1 goto label5;

        $r14 = r26[i8];

        i2 = virtualinvoke r2.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>(43, i0, $r14);

        if i2 == 0 goto label4;

        if i2 == 3 goto label3;

        i8 = i8 + 1;

        goto label2;

     label3:
        return 1;

     label4:
        return 1;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to android:get_usage_stats app-op not allowed");

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.DumpUtils: void logMessage(java.io.PrintWriter,java.lang.String)>(r1, $r13);

        return 0;

     label6:
        return 1;
    }

    public static void dumpAsync(android.os.Handler, com.android.internal.util.DumpUtils$Dump, java.io.PrintWriter, java.lang.String, long)
    {
        android.os.Handler r0;
        com.android.internal.util.DumpUtils$Dump r1;
        java.io.PrintWriter r2;
        java.lang.String r3, $r7;
        long l0;
        java.io.StringWriter $r5;
        com.android.internal.util.DumpUtils$1 $r6;
        boolean $z0;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: com.android.internal.util.DumpUtils$Dump;

        r2 := @parameter2: java.io.PrintWriter;

        r3 := @parameter3: java.lang.String;

        l0 := @parameter4: long;

        $r5 = new java.io.StringWriter;

        specialinvoke $r5.<java.io.StringWriter: void <init>()>();

        $r6 = new com.android.internal.util.DumpUtils$1;

        specialinvoke $r6.<com.android.internal.util.DumpUtils$1: void <init>(java.io.StringWriter,com.android.internal.util.DumpUtils$Dump,java.lang.String)>($r5, r1, r3);

        $z0 = virtualinvoke r0.<android.os.Handler: boolean runWithScissors(java.lang.Runnable,long)>($r6, l0);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke $r5.<java.io.StringWriter: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        goto label2;

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("... timed out");

     label2:
        return;
    }

    public static java.util.function.Predicate filterRecord(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r4, $r5, $r6;
        android.content.ComponentName r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0;
        com.android.internal.util.'-$$Lambda$TCbPpgWlKJUHZgFKCczglAvxLfw' $r9;
        com.android.internal.util.'-$$Lambda$grRTg3idX3yJe9Zyx-tmLBiD1DM' $r10;
        com.android.internal.util.'-$$Lambda$JwOUSWW2-Jzu15y4Kn4JuPh8tWM' $r11;
        com.android.internal.util.'-$$Lambda$kVylv1rl9MOSbHFZoVyK5dl1kfY' $r12;
        com.android.internal.util.'-$$Lambda$eRa1rlfDk6Og2yFeXGHqUGPzRF0' $r13;
        com.android.internal.util.'-$$Lambda$DumpUtils$D1OlZP6xIpu72ypnJd0fzx0wd6I' $r14;
        com.android.internal.util._$$Lambda$DumpUtils$X8irOs5hfloCKy89_l1HRA1QeG0 r15;
        com.android.internal.util._$$Lambda$DumpUtils$vCLO_0ezRxkpSERUWCFrJ0ph5jg r16;
        java.util.function.Predicate r17, r18, r19, r20, r21, r22;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        $r14 = <com.android.internal.util._$$Lambda$DumpUtils$D1OlZP6xIpu72ypnJd0fzx0wd6I: com.android.internal.util.'-$$Lambda$DumpUtils$D1OlZP6xIpu72ypnJd0fzx0wd6I' INSTANCE>;

        r17 = (java.util.function.Predicate) $r14;

        return r17;

     label1:
        $r2 = "all";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        $r13 = <com.android.internal.util._$$Lambda$eRa1rlfDk6Og2yFeXGHqUGPzRF0: com.android.internal.util.'-$$Lambda$eRa1rlfDk6Og2yFeXGHqUGPzRF0' INSTANCE>;

        r18 = (java.util.function.Predicate) $r13;

        return r18;

     label2:
        $r3 = "all-platform";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        $r12 = <com.android.internal.util._$$Lambda$kVylv1rl9MOSbHFZoVyK5dl1kfY: com.android.internal.util.'-$$Lambda$kVylv1rl9MOSbHFZoVyK5dl1kfY' INSTANCE>;

        r19 = (java.util.function.Predicate) $r12;

        return r19;

     label3:
        $r4 = "all-non-platform";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label4;

        $r11 = <com.android.internal.util._$$Lambda$JwOUSWW2_Jzu15y4Kn4JuPh8tWM: com.android.internal.util.'-$$Lambda$JwOUSWW2-Jzu15y4Kn4JuPh8tWM' INSTANCE>;

        r20 = (java.util.function.Predicate) $r11;

        return r20;

     label4:
        $r5 = "all-platform-critical";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label5;

        $r10 = <com.android.internal.util._$$Lambda$grRTg3idX3yJe9Zyx_tmLBiD1DM: com.android.internal.util.'-$$Lambda$grRTg3idX3yJe9Zyx-tmLBiD1DM' INSTANCE>;

        r21 = (java.util.function.Predicate) $r10;

        return r21;

     label5:
        $r6 = "all-platform-non-critical";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label6;

        $r9 = <com.android.internal.util._$$Lambda$TCbPpgWlKJUHZgFKCczglAvxLfw: com.android.internal.util.'-$$Lambda$TCbPpgWlKJUHZgFKCczglAvxLfw' INSTANCE>;

        r22 = (java.util.function.Predicate) $r9;

        return r22;

     label6:
        r1 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r0);

        if r1 == null goto label7;

        r15 = new com.android.internal.util._$$Lambda$DumpUtils$X8irOs5hfloCKy89_l1HRA1QeG0;

        specialinvoke r15.<com.android.internal.util._$$Lambda$DumpUtils$X8irOs5hfloCKy89_l1HRA1QeG0: void <init>(android.content.ComponentName)>(r1);

        return r15;

     label7:
        r16 = new com.android.internal.util._$$Lambda$DumpUtils$vCLO_0ezRxkpSERUWCFrJ0ph5jg;

        $i0 = staticinvoke <com.android.internal.util.ParseUtils: int parseIntWithBase(java.lang.String,int,int)>(r0, 16, -1);

        specialinvoke r16.<com.android.internal.util._$$Lambda$DumpUtils$vCLO_0ezRxkpSERUWCFrJ0ph5jg: void <init>(int,java.lang.String)>($i0, r0);

        return r16;
    }

    private static boolean isCriticalPackage(android.content.ComponentName)
    {
        android.content.ComponentName r0, $r2;
        android.content.ComponentName[] r1;
        int $i0, i1;
        boolean $z0;

        r0 := @parameter0: android.content.ComponentName;

        if r0 != null goto label1;

        return 0;

     label1:
        i1 = 0;

     label2:
        r1 = <com.android.internal.util.DumpUtils: android.content.ComponentName[] CRITICAL_SECTION_COMPONENTS>;

        $i0 = lengthof r1;

        if i1 >= $i0 goto label4;

        $r2 = r1[i1];

        $z0 = virtualinvoke r0.<android.content.ComponentName: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static boolean isNonPlatformPackage(android.content.ComponentName$WithComponentName)
    {
        android.content.ComponentName$WithComponentName r0;
        android.content.ComponentName $r1;
        boolean $z0, z1;

        r0 := @parameter0: android.content.ComponentName$WithComponentName;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<android.content.ComponentName$WithComponentName: android.content.ComponentName getComponentName()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean isPlatformPackage(android.content.ComponentName)>($r1);

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static boolean isNonPlatformPackage(android.content.ComponentName)
    {
        android.content.ComponentName r0;
        java.lang.String $r1;
        boolean $z0, z1;

        r0 := @parameter0: android.content.ComponentName;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean isNonPlatformPackage(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static boolean isNonPlatformPackage(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean isPlatformPackage(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static boolean isPlatformCriticalPackage(android.content.ComponentName$WithComponentName)
    {
        android.content.ComponentName$WithComponentName r0;
        android.content.ComponentName $r1, $r2;
        boolean $z0, $z1, z2;

        r0 := @parameter0: android.content.ComponentName$WithComponentName;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<android.content.ComponentName$WithComponentName: android.content.ComponentName getComponentName()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean isPlatformPackage(android.content.ComponentName)>($r1);

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r0.<android.content.ComponentName$WithComponentName: android.content.ComponentName getComponentName()>();

        $z1 = staticinvoke <com.android.internal.util.DumpUtils: boolean isCriticalPackage(android.content.ComponentName)>($r2);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public static boolean isPlatformNonCriticalPackage(android.content.ComponentName$WithComponentName)
    {
        android.content.ComponentName$WithComponentName r0;
        android.content.ComponentName $r1, $r2;
        boolean $z0, $z1, z2;

        r0 := @parameter0: android.content.ComponentName$WithComponentName;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<android.content.ComponentName$WithComponentName: android.content.ComponentName getComponentName()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean isPlatformPackage(android.content.ComponentName)>($r1);

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r0.<android.content.ComponentName$WithComponentName: android.content.ComponentName getComponentName()>();

        $z1 = staticinvoke <com.android.internal.util.DumpUtils: boolean isCriticalPackage(android.content.ComponentName)>($r2);

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public static boolean isPlatformPackage(android.content.ComponentName$WithComponentName)
    {
        android.content.ComponentName$WithComponentName r0;
        android.content.ComponentName $r1;
        boolean $z0, z1;

        r0 := @parameter0: android.content.ComponentName$WithComponentName;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<android.content.ComponentName$WithComponentName: android.content.ComponentName getComponentName()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean isPlatformPackage(android.content.ComponentName)>($r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static boolean isPlatformPackage(android.content.ComponentName)
    {
        android.content.ComponentName r0;
        java.lang.String $r1;
        boolean $z0, z1;

        r0 := @parameter0: android.content.ComponentName;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean isPlatformPackage(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static boolean isPlatformPackage(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("android.");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("com.android.");

        if $z2 == 0 goto label2;

     label1:
        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    static boolean lambda$filterRecord$0(android.content.ComponentName$WithComponentName)
    {
        android.content.ComponentName$WithComponentName r0;

        r0 := @parameter0: android.content.ComponentName$WithComponentName;

        return 0;
    }

    static boolean lambda$filterRecord$1(android.content.ComponentName, android.content.ComponentName$WithComponentName)
    {
        android.content.ComponentName r0, $r2;
        android.content.ComponentName$WithComponentName r1;
        boolean $z0, z1;

        r0 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.content.ComponentName$WithComponentName;

        if r1 == null goto label1;

        $r2 = interfaceinvoke r1.<android.content.ComponentName$WithComponentName: android.content.ComponentName getComponentName()>();

        $z0 = virtualinvoke r0.<android.content.ComponentName: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    static boolean lambda$filterRecord$2(int, java.lang.String, android.content.ComponentName$WithComponentName)
    {
        int i0, $i1;
        java.lang.String r0, $r3, $r4, $r5;
        android.content.ComponentName$WithComponentName r1;
        android.content.ComponentName r2;
        boolean $z0, z1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: android.content.ComponentName$WithComponentName;

        r2 = interfaceinvoke r1.<android.content.ComponentName$WithComponentName: android.content.ComponentName getComponentName()>();

        if i0 == -1 goto label1;

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        if $i1 == i0 goto label2;

     label1:
        $r3 = virtualinvoke r2.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

        if $z0 == 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    private static void logMessage(java.io.PrintWriter, java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.String r1;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r1);

        return;
    }
}
