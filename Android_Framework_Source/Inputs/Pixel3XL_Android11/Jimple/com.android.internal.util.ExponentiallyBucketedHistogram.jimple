public class com.android.internal.util.ExponentiallyBucketedHistogram extends java.lang.Object
{
    private final int[] mData;

    public void <init>(int)
    {
        com.android.internal.util.ExponentiallyBucketedHistogram r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: com.android.internal.util.ExponentiallyBucketedHistogram;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = staticinvoke <com.android.internal.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>(i0, 1, 31, "numBuckets");

        $r1 = newarray (int)[$i1];

        r0.<com.android.internal.util.ExponentiallyBucketedHistogram: int[] mData> = $r1;

        return;
    }

    public void add(int)
    {
        com.android.internal.util.ExponentiallyBucketedHistogram r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        int[] r1, r2;

        r0 := @this: com.android.internal.util.ExponentiallyBucketedHistogram;

        i8 := @parameter0: int;

        if i8 > 0 goto label1;

        r1 = r0.<com.android.internal.util.ExponentiallyBucketedHistogram: int[] mData>;

        $i6 = r1[0];

        $i7 = $i6 + 1;

        r1[0] = $i7;

        goto label2;

     label1:
        r2 = r0.<com.android.internal.util.ExponentiallyBucketedHistogram: int[] mData>;

        $i0 = lengthof r2;

        $i1 = $i0 - 1;

        $i2 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(i8);

        $i3 = 32 - $i2;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

        $i4 = r2[i9];

        $i5 = $i4 + 1;

        r2[i9] = $i5;

     label2:
        return;
    }

    public void log(java.lang.String, java.lang.CharSequence)
    {
        com.android.internal.util.ExponentiallyBucketedHistogram r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2;
        int[] $r4, $r7, $r11;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.CharSequence r16;

        r0 := @this: com.android.internal.util.ExponentiallyBucketedHistogram;

        r1 := @parameter0: java.lang.String;

        r16 := @parameter1: java.lang.CharSequence;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>(r16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        i8 = 0;

     label1:
        $r4 = r0.<com.android.internal.util.ExponentiallyBucketedHistogram: int[] mData>;

        $i0 = lengthof $r4;

        if i8 >= $i0 goto label5;

        if i8 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r7 = r0.<com.android.internal.util.ExponentiallyBucketedHistogram: int[] mData>;

        $i2 = lengthof $r7;

        $i3 = $i2 - 1;

        if i8 >= $i3 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $i7 = 1 << i8;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        goto label4;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">=");

        $i4 = i8 - 1;

        $i5 = 1 << $i4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = r0.<com.android.internal.util.ExponentiallyBucketedHistogram: int[] mData>;

        $i6 = $r11[i8];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        i8 = i8 + 1;

        goto label1;

     label5:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r1, $r6);

        return;
    }

    public void reset()
    {
        com.android.internal.util.ExponentiallyBucketedHistogram r0;
        int[] $r1;

        r0 := @this: com.android.internal.util.ExponentiallyBucketedHistogram;

        $r1 = r0.<com.android.internal.util.ExponentiallyBucketedHistogram: int[] mData>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r1, 0);

        return;
    }
}
