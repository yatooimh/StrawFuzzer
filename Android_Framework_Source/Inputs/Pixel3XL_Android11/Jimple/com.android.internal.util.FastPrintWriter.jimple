public class com.android.internal.util.FastPrintWriter extends java.io.PrintWriter
{
    private final boolean mAutoFlush;
    private final int mBufferLen;
    private final java.nio.ByteBuffer mBytes;
    private java.nio.charset.CharsetEncoder mCharset;
    private boolean mIoError;
    private final java.io.OutputStream mOutputStream;
    private int mPos;
    private final android.util.Printer mPrinter;
    private final java.lang.String mSeparator;
    private final char[] mText;
    private final java.io.Writer mWriter;

    public void <init>(android.util.Printer)
    {
        com.android.internal.util.FastPrintWriter r0;
        android.util.Printer r1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: android.util.Printer;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void <init>(android.util.Printer,int)>(r1, 512);

        return;
    }

    public void <init>(android.util.Printer, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        android.util.Printer r1;
        int i0;
        com.android.internal.util.FastPrintWriter$DummyWriter $r2;
        java.lang.NullPointerException $r3;
        char[] $r4;
        java.lang.String $r5;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: android.util.Printer;

        i0 := @parameter1: int;

        $r2 = new com.android.internal.util.FastPrintWriter$DummyWriter;

        specialinvoke $r2.<com.android.internal.util.FastPrintWriter$DummyWriter: void <init>(com.android.internal.util.FastPrintWriter$1)>(null);

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, 1);

        if r1 == null goto label1;

        r0.<com.android.internal.util.FastPrintWriter: int mBufferLen> = i0;

        $r4 = newarray (char)[i0];

        r0.<com.android.internal.util.FastPrintWriter: char[] mText> = $r4;

        r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes> = null;

        r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream> = null;

        r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter> = null;

        r0.<com.android.internal.util.FastPrintWriter: android.util.Printer mPrinter> = r1;

        r0.<com.android.internal.util.FastPrintWriter: boolean mAutoFlush> = 1;

        $r5 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator> = $r5;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void initDefaultEncoder()>();

        return;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("pr is null");

        throw $r3;
    }

    public void <init>(java.io.OutputStream)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.OutputStream r1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream,boolean,int)>(r1, 0, 8192);

        return;
    }

    public void <init>(java.io.OutputStream, boolean)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.OutputStream r1;
        boolean z0;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream,boolean,int)>(r1, z0, 8192);

        return;
    }

    public void <init>(java.io.OutputStream, boolean, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.OutputStream r1;
        boolean z0;
        int i0;
        com.android.internal.util.FastPrintWriter$DummyWriter $r2;
        java.lang.NullPointerException $r3;
        char[] $r4;
        java.nio.ByteBuffer $r5;
        java.lang.String $r6;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r2 = new com.android.internal.util.FastPrintWriter$DummyWriter;

        specialinvoke $r2.<com.android.internal.util.FastPrintWriter$DummyWriter: void <init>(com.android.internal.util.FastPrintWriter$1)>(null);

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, z0);

        if r1 == null goto label1;

        r0.<com.android.internal.util.FastPrintWriter: int mBufferLen> = i0;

        $r4 = newarray (char)[i0];

        r0.<com.android.internal.util.FastPrintWriter: char[] mText> = $r4;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0);

        r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes> = $r5;

        r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream> = r1;

        r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter> = null;

        r0.<com.android.internal.util.FastPrintWriter: android.util.Printer mPrinter> = null;

        r0.<com.android.internal.util.FastPrintWriter: boolean mAutoFlush> = z0;

        $r6 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator> = $r6;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void initDefaultEncoder()>();

        return;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("out is null");

        throw $r3;
    }

    public void <init>(java.io.Writer)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.Writer r1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>(r1, 0, 8192);

        return;
    }

    public void <init>(java.io.Writer, boolean)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.Writer r1;
        boolean z0;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.Writer;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>(r1, z0, 8192);

        return;
    }

    public void <init>(java.io.Writer, boolean, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.Writer r1;
        boolean z0;
        int i0;
        com.android.internal.util.FastPrintWriter$DummyWriter $r2;
        java.lang.NullPointerException $r3;
        char[] $r4;
        java.lang.String $r5;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.Writer;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r2 = new com.android.internal.util.FastPrintWriter$DummyWriter;

        specialinvoke $r2.<com.android.internal.util.FastPrintWriter$DummyWriter: void <init>(com.android.internal.util.FastPrintWriter$1)>(null);

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, z0);

        if r1 == null goto label1;

        r0.<com.android.internal.util.FastPrintWriter: int mBufferLen> = i0;

        $r4 = newarray (char)[i0];

        r0.<com.android.internal.util.FastPrintWriter: char[] mText> = $r4;

        r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes> = null;

        r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream> = null;

        r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter> = r1;

        r0.<com.android.internal.util.FastPrintWriter: android.util.Printer mPrinter> = null;

        r0.<com.android.internal.util.FastPrintWriter: boolean mAutoFlush> = z0;

        $r5 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator> = $r5;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void initDefaultEncoder()>();

        return;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("wr is null");

        throw $r3;
    }

    private void appendLocked(char) throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        char c0, $c4;
        int i1, $i2, $i3, $i5, i6;
        char[] $r1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        c0 := @parameter0: char;

        i1 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        i6 = i1;

        $i2 = r0.<com.android.internal.util.FastPrintWriter: int mBufferLen>;

        $i3 = $i2 - 1;

        if i1 < $i3 goto label1;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

        i6 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

     label1:
        $r1 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        $c4 = (char) c0;

        $r1[i6] = $c4;

        $i5 = i6 + 1;

        r0.<com.android.internal.util.FastPrintWriter: int mPos> = $i5;

        return;
    }

    private void appendLocked(java.lang.String, int, int) throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10;
        char[] $r2;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        i0 = r0.<com.android.internal.util.FastPrintWriter: int mBufferLen>;

        if i5 <= i0 goto label5;

        i6 = i4 + i5;

     label1:
        if i4 >= i6 goto label4;

        i7 = i4 + i0;

        if i7 >= i6 goto label2;

        i8 = i0;

        goto label3;

     label2:
        i8 = i6 - i4;

     label3:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(java.lang.String,int,int)>(r1, i4, i8);

        i4 = i7;

        goto label1;

     label4:
        return;

     label5:
        i9 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        i10 = i9;

        $i1 = i9 + i5;

        if $i1 <= i0 goto label6;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

        i10 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

     label6:
        $i2 = i4 + i5;

        $r2 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i4, $i2, $r2, i10);

        $i3 = i10 + i5;

        r0.<com.android.internal.util.FastPrintWriter: int mPos> = $i3;

        return;
    }

    private void appendLocked(char[], int, int) throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        char[] r1, $r2;
        int i0, $i1, $i2, i3, i4, i5, i6, i7, i8, i9;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: char[];

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i0 = r0.<com.android.internal.util.FastPrintWriter: int mBufferLen>;

        if i4 <= i0 goto label5;

        i5 = i3 + i4;

     label1:
        if i3 >= i5 goto label4;

        i6 = i3 + i0;

        if i6 >= i5 goto label2;

        i7 = i0;

        goto label3;

     label2:
        i7 = i5 - i3;

     label3:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(char[],int,int)>(r1, i3, i7);

        i3 = i6;

        goto label1;

     label4:
        return;

     label5:
        i8 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        i9 = i8;

        $i1 = i8 + i4;

        if $i1 <= i0 goto label6;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

        i9 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

     label6:
        $r2 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, $r2, i9, i4);

        $i2 = i9 + i4;

        r0.<com.android.internal.util.FastPrintWriter: int mPos> = $i2;

        return;
    }

    private void flushBytesLocked() throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0;
        boolean $z0;
        java.nio.ByteBuffer $r1, $r2, $r4, $r7;
        java.io.OutputStream $r5;
        byte[] $r6;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        $z0 = r0.<com.android.internal.util.FastPrintWriter: boolean mIoError>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        if i0 <= 0 goto label1;

        $r2 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r5 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        $r4 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        $r6 = virtualinvoke $r4.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r6, 0, i0);

        $r7 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

     label1:
        return;
    }

    private void flushLocked() throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        java.nio.CharBuffer r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i12, i14, i15;
        java.io.OutputStream $r2, $r14;
        java.lang.String $r3, $r4, $r16, r21;
        char[] $r5, $r8, $r9, $r11;
        android.util.Printer $r6, $r7;
        char $c11, c16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.Writer $r10, r20;
        java.nio.ByteBuffer $r12, $r17;
        java.nio.charset.CharsetEncoder $r13, $r18;
        java.io.IOException $r15;
        java.nio.charset.CoderResult r19;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        i12 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        if i12 <= 0 goto label11;

        $r2 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        if $r2 == null goto label05;

        $r11 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        r1 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>($r11, 0, i12);

        $r13 = r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset>;

        $r12 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        r19 = virtualinvoke $r13.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>(r1, $r12, 1);

     label01:
        $z1 = r0.<com.android.internal.util.FastPrintWriter: boolean mIoError>;

        if $z1 != 0 goto label03;

        $z3 = virtualinvoke r19.<java.nio.charset.CoderResult: boolean isError()>();

        if $z3 != 0 goto label02;

        $z4 = virtualinvoke r19.<java.nio.charset.CoderResult: boolean isOverflow()>();

        if $z4 == 0 goto label03;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushBytesLocked()>();

        $r18 = r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset>;

        $r17 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        r19 = virtualinvoke $r18.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>(r1, $r17, 1);

        goto label01;

     label02:
        $r15 = new java.io.IOException;

        $r16 = virtualinvoke r19.<java.nio.charset.CoderResult: java.lang.String toString()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label03:
        $z2 = r0.<com.android.internal.util.FastPrintWriter: boolean mIoError>;

        if $z2 != 0 goto label04;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushBytesLocked()>();

        $r14 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        virtualinvoke $r14.<java.io.OutputStream: void flush()>();

     label04:
        goto label10;

     label05:
        r20 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        if r20 == null goto label06;

        $z0 = r0.<com.android.internal.util.FastPrintWriter: boolean mIoError>;

        if $z0 != 0 goto label10;

        $r9 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        virtualinvoke r20.<java.io.Writer: void write(char[],int,int)>($r9, 0, i12);

        $r10 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        virtualinvoke $r10.<java.io.Writer: void flush()>();

        goto label10;

     label06:
        $r3 = r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator>;

        i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        i1 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        i14 = 0;

        i15 = i1;

        if i0 >= i1 goto label07;

        i15 = i0;

        i14 = 0;

     label07:
        if i14 >= i15 goto label08;

        $r8 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        $i5 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        $i6 = $i5 - 1;

        $i7 = $i6 - i14;

        c16 = $r8[$i7];

        r21 = r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator>;

        $i8 = virtualinvoke r21.<java.lang.String: int length()>();

        $i9 = $i8 - 1;

        $i10 = $i9 - i14;

        $c11 = virtualinvoke r21.<java.lang.String: char charAt(int)>($i10);

        if c16 != $c11 goto label08;

        i14 = i14 + 1;

        goto label07;

     label08:
        $i2 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        if i14 < $i2 goto label09;

        $r7 = r0.<com.android.internal.util.FastPrintWriter: android.util.Printer mPrinter>;

        interfaceinvoke $r7.<android.util.Printer: void println(java.lang.String)>("");

        goto label10;

     label09:
        $r6 = r0.<com.android.internal.util.FastPrintWriter: android.util.Printer mPrinter>;

        $r4 = new java.lang.String;

        $r5 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        $i3 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        $i4 = $i3 - i14;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r5, 0, $i4);

        interfaceinvoke $r6.<android.util.Printer: void println(java.lang.String)>($r4);

     label10:
        r0.<com.android.internal.util.FastPrintWriter: int mPos> = 0;

     label11:
        return;
    }

    private final void initDefaultEncoder()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.nio.charset.CharsetEncoder r1, $r6;
        java.nio.charset.Charset $r2;
        java.nio.charset.CodingErrorAction $r3, $r5;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        r1 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset> = r1;

        $r3 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        virtualinvoke r1.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r3);

        $r6 = r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset>;

        $r5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        virtualinvoke $r6.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r5);

        return;
    }

    private final void initEncoder(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.String r1;
        java.nio.charset.Charset $r2;
        java.nio.charset.CodingErrorAction $r3, $r5;
        java.nio.charset.CharsetEncoder $r6, r10;
        java.lang.Exception $r8;
        java.io.UnsupportedEncodingException $r9;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);

        r10 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset> = r10;

     label2:
        $r3 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        virtualinvoke r10.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r3);

        $r6 = r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset>;

        $r5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        virtualinvoke $r6.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r5);

        return;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.io.UnsupportedEncodingException;

        specialinvoke $r9.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r1);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.io.PrintWriter append(java.lang.CharSequence, int, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0, i1, $i2;
        java.lang.CharSequence $r1, r2, r5;
        java.lang.Object r3;
        java.lang.String r4;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r2 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 = r2;

        if r2 != null goto label1;

        r3 = "null";

     label1:
        r5 = (java.lang.CharSequence) r3;

        $r1 = interfaceinvoke r5.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        r4 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void write(java.lang.String,int,int)>(r4, 0, $i2);

        return r0;
    }

    public volatile java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.CharSequence r1;
        int i0, i1;
        java.io.PrintWriter $r2;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.android.internal.util.FastPrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.CharSequence r1;
        int i0, i1;
        java.io.PrintWriter $r2;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.android.internal.util.FastPrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public boolean checkError()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void flush()>();

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.internal.util.FastPrintWriter: boolean mIoError>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void clearError()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        r0.<com.android.internal.util.FastPrintWriter: boolean mIoError> = 0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void close()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        java.io.OutputStream $r2, $r5;
        java.io.Writer $r3, $r4;
        java.lang.Throwable $r6, $r7;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

        $r2 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        if $r2 == null goto label03;

        $r5 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        virtualinvoke $r5.<java.io.OutputStream: void close()>();

     label02:
        goto label04;

     label03:
        $r3 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        if $r3 == null goto label04;

        $r4 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        virtualinvoke $r4.<java.io.Writer: void close()>();

     label04:
        goto label08;

     label05:
        $r6 := @caughtexception;

        goto label10;

     label06:
        $r7 := @caughtexception;

     label07:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FastPrintWriter", "Write failure", $r7);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        exitmonitor r1;

     label11:
        throw $r6;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.io.IOException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
    }

    public void flush()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        boolean $z0;
        java.io.OutputStream $r2, $r5;
        java.io.Writer $r3, $r4;
        java.lang.Throwable $r6, $r7;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

        $z0 = r0.<com.android.internal.util.FastPrintWriter: boolean mIoError>;

        if $z0 != 0 goto label04;

        $r2 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        if $r2 == null goto label03;

        $r5 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        virtualinvoke $r5.<java.io.OutputStream: void flush()>();

     label02:
        goto label04;

     label03:
        $r3 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        if $r3 == null goto label04;

        $r4 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        virtualinvoke $r4.<java.io.Writer: void flush()>();

     label04:
        goto label08;

     label05:
        $r7 := @caughtexception;

        goto label10;

     label06:
        $r6 := @caughtexception;

     label07:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FastPrintWriter", "Write failure", $r6);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        exitmonitor r1;

     label11:
        throw $r7;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.io.IOException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
    }

    public void print(char)
    {
        com.android.internal.util.FastPrintWriter r0;
        char c0;
        java.lang.Object r1;
        java.lang.Throwable $r2, $r3;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        c0 := @parameter0: char;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(char)>(c0);

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

        goto label8;

     label4:
        $r3 := @caughtexception;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FastPrintWriter", "Write failure", $r3);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label6:
        exitmonitor r1;

     label7:
        return;

     label8:
        exitmonitor r1;

     label9:
        throw $r2;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
        catch java.lang.Throwable from label8 to label9 with label3;
    }

    public void print(int)
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void print(java.lang.String)>("0");

        goto label2;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void print(int)>(i0);

     label2:
        return;
    }

    public void print(long)
    {
        com.android.internal.util.FastPrintWriter r0;
        long l0;
        byte $b1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void print(java.lang.String)>("0");

        goto label2;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void print(long)>(l0);

     label2:
        return;
    }

    public void print(java.lang.String)
    {
        com.android.internal.util.FastPrintWriter r0;
        int $i0;
        java.lang.Throwable $r1, $r2;
        java.lang.String r3, r4;
        java.lang.Object r5;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r3 := @parameter0: java.lang.String;

        r4 = r3;

        if r3 != null goto label01;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(null);

     label01:
        r5 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r5;

     label02:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(java.lang.String,int,int)>(r4, 0, $i0);

     label03:
        goto label07;

     label04:
        $r1 := @caughtexception;

        goto label09;

     label05:
        $r2 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FastPrintWriter", "Write failure", $r2);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label07:
        exitmonitor r5;

     label08:
        return;

     label09:
        exitmonitor r5;

     label10:
        throw $r1;

        catch java.io.IOException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
    }

    public void print(char[])
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r2, $r3;
        char[] r4;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r4 := @parameter0: char[];

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $i0 = lengthof r4;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(char[],int,int)>(r4, 0, $i0);

     label2:
        goto label6;

     label3:
        $r3 := @caughtexception;

        goto label8;

     label4:
        $r2 := @caughtexception;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FastPrintWriter", "Write failure", $r2);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label6:
        exitmonitor r1;

     label7:
        return;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
        catch java.lang.Throwable from label8 to label9 with label3;
    }

    public void println()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        java.lang.String $r2, $r3;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r4, $r5;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator>;

        $r2 = r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(java.lang.String,int,int)>($r3, 0, $i0);

        $z0 = r0.<com.android.internal.util.FastPrintWriter: boolean mAutoFlush>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

     label2:
        goto label6;

     label3:
        $r4 := @caughtexception;

        goto label8;

     label4:
        $r5 := @caughtexception;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FastPrintWriter", "Write failure", $r5);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label6:
        exitmonitor r1;

     label7:
        return;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
        catch java.lang.Throwable from label8 to label9 with label3;
    }

    public void println(char)
    {
        com.android.internal.util.FastPrintWriter r0;
        char c0;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        c0 := @parameter0: char;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void print(char)>(c0);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void println()>();

        return;
    }

    public void println(int)
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void println(java.lang.String)>("0");

        goto label2;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void println(int)>(i0);

     label2:
        return;
    }

    public void println(long)
    {
        com.android.internal.util.FastPrintWriter r0;
        long l0;
        byte $b1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void println(java.lang.String)>("0");

        goto label2;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void println(long)>(l0);

     label2:
        return;
    }

    public void println(char[])
    {
        com.android.internal.util.FastPrintWriter r0;
        char[] r1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: char[];

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void print(char[])>(r1);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void println()>();

        return;
    }

    protected void setError()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        r0.<com.android.internal.util.FastPrintWriter: boolean mIoError> = 1;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void write(int)
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0;
        java.lang.Object r1;
        char c1;
        java.lang.Throwable $r2, $r3;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

        c1 = (char) i0;

     label1:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(char)>(c1);

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

        goto label8;

     label4:
        $r3 := @caughtexception;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FastPrintWriter", "Write failure", $r3);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label6:
        exitmonitor r1;

     label7:
        return;

     label8:
        exitmonitor r1;

     label9:
        throw $r2;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
        catch java.lang.Throwable from label8 to label9 with label3;
    }

    public void write(java.lang.String)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r2, $r3;
        java.lang.String r4;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r4 := @parameter0: java.lang.String;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(java.lang.String,int,int)>(r4, 0, $i0);

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

        goto label8;

     label4:
        $r3 := @caughtexception;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FastPrintWriter", "Write failure", $r3);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label6:
        exitmonitor r1;

     label7:
        return;

     label8:
        exitmonitor r1;

     label9:
        throw $r2;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
        catch java.lang.Throwable from label8 to label9 with label3;
    }

    public void write(java.lang.String, int, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0, i1;
        java.lang.Object r1;
        java.lang.Throwable $r2, $r3;
        java.lang.String r4;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(java.lang.String,int,int)>(r4, i0, i1);

     label2:
        goto label6;

     label3:
        $r3 := @caughtexception;

        goto label8;

     label4:
        $r2 := @caughtexception;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FastPrintWriter", "Write failure", $r2);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label6:
        exitmonitor r1;

     label7:
        return;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
        catch java.lang.Throwable from label8 to label9 with label3;
    }

    public void write(char[], int, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0, i1;
        java.lang.Object r1;
        java.lang.Throwable $r2, $r3;
        char[] r4;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r4 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(char[],int,int)>(r4, i0, i1);

     label2:
        goto label6;

     label3:
        $r3 := @caughtexception;

        goto label8;

     label4:
        $r2 := @caughtexception;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FastPrintWriter", "Write failure", $r2);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label6:
        exitmonitor r1;

     label7:
        return;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
        catch java.lang.Throwable from label8 to label9 with label3;
    }
}
