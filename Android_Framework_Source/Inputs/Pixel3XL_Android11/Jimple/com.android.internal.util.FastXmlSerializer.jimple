public class com.android.internal.util.FastXmlSerializer extends java.lang.Object implements org.xmlpull.v1.XmlSerializer
{
    private static final int DEFAULT_BUFFER_LEN;
    private static final java.lang.String[] ESCAPE_TABLE;
    private static java.lang.String sSpace;
    private final int mBufferLen;
    private java.nio.ByteBuffer mBytes;
    private java.nio.charset.CharsetEncoder mCharset;
    private boolean mInTag;
    private boolean mIndent;
    private boolean mLineStart;
    private int mNesting;
    private java.io.OutputStream mOutputStream;
    private int mPos;
    private final char[] mText;
    private java.io.Writer mWriter;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.android.internal.util.FastXmlSerializer: int DEFAULT_BUFFER_LEN> = 32768;

        $r0 = newarray (java.lang.String)[64];

        $r0[0] = "&#0;";

        $r0[1] = "&#1;";

        $r0[2] = "&#2;";

        $r0[3] = "&#3;";

        $r0[4] = "&#4;";

        $r0[5] = "&#5;";

        $r0[6] = "&#6;";

        $r0[7] = "&#7;";

        $r0[8] = "&#8;";

        $r0[9] = "&#9;";

        $r0[10] = "&#10;";

        $r0[11] = "&#11;";

        $r0[12] = "&#12;";

        $r0[13] = "&#13;";

        $r0[14] = "&#14;";

        $r0[15] = "&#15;";

        $r0[16] = "&#16;";

        $r0[17] = "&#17;";

        $r0[18] = "&#18;";

        $r0[19] = "&#19;";

        $r0[20] = "&#20;";

        $r0[21] = "&#21;";

        $r0[22] = "&#22;";

        $r0[23] = "&#23;";

        $r0[24] = "&#24;";

        $r0[25] = "&#25;";

        $r0[26] = "&#26;";

        $r0[27] = "&#27;";

        $r0[28] = "&#28;";

        $r0[29] = "&#29;";

        $r0[30] = "&#30;";

        $r0[31] = "&#31;";

        $r0[32] = null;

        $r0[33] = null;

        $r0[34] = "&quot;";

        $r0[35] = null;

        $r0[36] = null;

        $r0[37] = null;

        $r0[38] = "&amp;";

        $r0[39] = null;

        $r0[40] = null;

        $r0[41] = null;

        $r0[42] = null;

        $r0[43] = null;

        $r0[44] = null;

        $r0[45] = null;

        $r0[46] = null;

        $r0[47] = null;

        $r0[48] = null;

        $r0[49] = null;

        $r0[50] = null;

        $r0[51] = null;

        $r0[52] = null;

        $r0[53] = null;

        $r0[54] = null;

        $r0[55] = null;

        $r0[56] = null;

        $r0[57] = null;

        $r0[58] = null;

        $r0[59] = null;

        $r0[60] = "&lt;";

        $r0[61] = null;

        $r0[62] = "&gt;";

        $r0[63] = null;

        <com.android.internal.util.FastXmlSerializer: java.lang.String[] ESCAPE_TABLE> = $r0;

        <com.android.internal.util.FastXmlSerializer: java.lang.String sSpace> = "                                                              ";

        return;
    }

    public void <init>()
    {
        com.android.internal.util.FastXmlSerializer r0;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void <init>(int)>(32768);

        return;
    }

    public void <init>(int)
    {
        com.android.internal.util.FastXmlSerializer r0;
        char[] $r1;
        java.nio.ByteBuffer $r2;
        int i0;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.util.FastXmlSerializer: boolean mIndent> = 0;

        r0.<com.android.internal.util.FastXmlSerializer: int mNesting> = 0;

        r0.<com.android.internal.util.FastXmlSerializer: boolean mLineStart> = 1;

        if i0 <= 0 goto label1;

        goto label2;

     label1:
        i0 = 32768;

     label2:
        r0.<com.android.internal.util.FastXmlSerializer: int mBufferLen> = i0;

        $r1 = newarray (char)[i0];

        r0.<com.android.internal.util.FastXmlSerializer: char[] mText> = $r1;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0);

        r0.<com.android.internal.util.FastXmlSerializer: java.nio.ByteBuffer mBytes> = $r2;

        return;
    }

    private void append(char) throws java.io.IOException
    {
        com.android.internal.util.FastXmlSerializer r0;
        char c0, $c4;
        int i1, $i2, $i3, $i5, i6;
        char[] $r1;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        c0 := @parameter0: char;

        i1 = r0.<com.android.internal.util.FastXmlSerializer: int mPos>;

        i6 = i1;

        $i2 = r0.<com.android.internal.util.FastXmlSerializer: int mBufferLen>;

        $i3 = $i2 - 1;

        if i1 < $i3 goto label1;

        virtualinvoke r0.<com.android.internal.util.FastXmlSerializer: void flush()>();

        i6 = r0.<com.android.internal.util.FastXmlSerializer: int mPos>;

     label1:
        $r1 = r0.<com.android.internal.util.FastXmlSerializer: char[] mText>;

        $c4 = (char) c0;

        $r1[i6] = $c4;

        $i5 = i6 + 1;

        r0.<com.android.internal.util.FastXmlSerializer: int mPos> = $i5;

        return;
    }

    private void append(java.lang.String) throws java.io.IOException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String,int,int)>(r1, 0, $i0);

        return;
    }

    private void append(java.lang.String, int, int) throws java.io.IOException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10;
        char[] $r2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        i0 = r0.<com.android.internal.util.FastXmlSerializer: int mBufferLen>;

        if i5 <= i0 goto label5;

        i6 = i4 + i5;

     label1:
        if i4 >= i6 goto label4;

        i7 = r0.<com.android.internal.util.FastXmlSerializer: int mBufferLen>;

        i8 = i4 + i7;

        if i8 >= i6 goto label2;

        goto label3;

     label2:
        i7 = i6 - i4;

     label3:
        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String,int,int)>(r1, i4, i7);

        i4 = i8;

        goto label1;

     label4:
        return;

     label5:
        i9 = r0.<com.android.internal.util.FastXmlSerializer: int mPos>;

        i10 = i9;

        $i1 = i9 + i5;

        if $i1 <= i0 goto label6;

        virtualinvoke r0.<com.android.internal.util.FastXmlSerializer: void flush()>();

        i10 = r0.<com.android.internal.util.FastXmlSerializer: int mPos>;

     label6:
        $i2 = i4 + i5;

        $r2 = r0.<com.android.internal.util.FastXmlSerializer: char[] mText>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i4, $i2, $r2, i10);

        $i3 = i10 + i5;

        r0.<com.android.internal.util.FastXmlSerializer: int mPos> = $i3;

        return;
    }

    private void append(char[], int, int) throws java.io.IOException
    {
        com.android.internal.util.FastXmlSerializer r0;
        char[] r1, $r2;
        int i0, $i1, $i2, i3, i4, i5, i6, i7, i8, i9;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: char[];

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i0 = r0.<com.android.internal.util.FastXmlSerializer: int mBufferLen>;

        if i4 <= i0 goto label5;

        i5 = i3 + i4;

     label1:
        if i3 >= i5 goto label4;

        i6 = r0.<com.android.internal.util.FastXmlSerializer: int mBufferLen>;

        i7 = i3 + i6;

        if i7 >= i5 goto label2;

        goto label3;

     label2:
        i6 = i5 - i3;

     label3:
        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(char[],int,int)>(r1, i3, i6);

        i3 = i7;

        goto label1;

     label4:
        return;

     label5:
        i8 = r0.<com.android.internal.util.FastXmlSerializer: int mPos>;

        i9 = i8;

        $i1 = i8 + i4;

        if $i1 <= i0 goto label6;

        virtualinvoke r0.<com.android.internal.util.FastXmlSerializer: void flush()>();

        i9 = r0.<com.android.internal.util.FastXmlSerializer: int mPos>;

     label6:
        $r2 = r0.<com.android.internal.util.FastXmlSerializer: char[] mText>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, $r2, i9, i4);

        $i2 = i9 + i4;

        r0.<com.android.internal.util.FastXmlSerializer: int mPos> = $i2;

        return;
    }

    private void appendIndent(int) throws java.io.IOException
    {
        com.android.internal.util.FastXmlSerializer r0;
        int i0, $i1, i2, i3;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        i2 := @parameter0: int;

        i0 = i2 * 4;

        i3 = i0;

        $r1 = <com.android.internal.util.FastXmlSerializer: java.lang.String sSpace>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 <= $i1 goto label1;

        $r3 = <com.android.internal.util.FastXmlSerializer: java.lang.String sSpace>;

        i3 = virtualinvoke $r3.<java.lang.String: int length()>();

     label1:
        $r2 = <com.android.internal.util.FastXmlSerializer: java.lang.String sSpace>;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String,int,int)>($r2, 0, i3);

        return;
    }

    private void escapeAndAppendString(java.lang.String) throws java.io.IOException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1, r3;
        int i0, $i3, $i4, $i5, i6, i7;
        char c1, c2;
        java.lang.String[] r2, $r4;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r4 = <com.android.internal.util.FastXmlSerializer: java.lang.String[] ESCAPE_TABLE>;

        $i3 = lengthof $r4;

        c1 = (char) $i3;

        r2 = <com.android.internal.util.FastXmlSerializer: java.lang.String[] ESCAPE_TABLE>;

        i6 = 0;

        i7 = 0;

     label1:
        if i7 >= i0 goto label6;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        if c2 < c1 goto label2;

        goto label5;

     label2:
        r3 = r2[c2];

        if r3 != null goto label3;

        goto label5;

     label3:
        if i6 >= i7 goto label4;

        $i5 = i7 - i6;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String,int,int)>(r1, i6, $i5);

     label4:
        i6 = i7 + 1;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(r3);

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        if i6 >= i7 goto label7;

        $i4 = i7 - i6;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String,int,int)>(r1, i6, $i4);

     label7:
        return;
    }

    private void escapeAndAppendString(char[], int, int) throws java.io.IOException
    {
        com.android.internal.util.FastXmlSerializer r0;
        char[] r1;
        int i0, i1, $i4, $i5, $i6, $i7, i8, i9;
        char c2, c3;
        java.lang.String[] r2, $r4;
        java.lang.String r3;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = <com.android.internal.util.FastXmlSerializer: java.lang.String[] ESCAPE_TABLE>;

        $i4 = lengthof $r4;

        c2 = (char) $i4;

        r2 = <com.android.internal.util.FastXmlSerializer: java.lang.String[] ESCAPE_TABLE>;

        i8 = i0;

        i9 = i0;

     label1:
        $i5 = i0 + i1;

        if i9 >= $i5 goto label6;

        c3 = r1[i9];

        if c3 < c2 goto label2;

        goto label5;

     label2:
        r3 = r2[c3];

        if r3 != null goto label3;

        goto label5;

     label3:
        if i8 >= i9 goto label4;

        $i7 = i9 - i8;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(char[],int,int)>(r1, i8, $i7);

     label4:
        i8 = i9 + 1;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(r3);

     label5:
        i9 = i9 + 1;

        goto label1;

     label6:
        if i8 >= i9 goto label7;

        $i6 = i9 - i8;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(char[],int,int)>(r1, i8, $i6);

     label7:
        return;
    }

    private void flushBytes() throws java.io.IOException
    {
        com.android.internal.util.FastXmlSerializer r0;
        int i0;
        java.nio.ByteBuffer $r1, $r2, $r4, $r7;
        java.io.OutputStream $r5;
        byte[] $r6;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        $r1 = r0.<com.android.internal.util.FastXmlSerializer: java.nio.ByteBuffer mBytes>;

        i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        if i0 <= 0 goto label1;

        $r2 = r0.<com.android.internal.util.FastXmlSerializer: java.nio.ByteBuffer mBytes>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r5 = r0.<com.android.internal.util.FastXmlSerializer: java.io.OutputStream mOutputStream>;

        $r4 = r0.<com.android.internal.util.FastXmlSerializer: java.nio.ByteBuffer mBytes>;

        $r6 = virtualinvoke $r4.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r6, 0, i0);

        $r7 = r0.<com.android.internal.util.FastXmlSerializer: java.nio.ByteBuffer mBytes>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

     label1:
        return;
    }

    public org.xmlpull.v1.XmlSerializer attribute(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(char)>(32);

        if r1 == null goto label1;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(char)>(58);

     label1:
        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(r2);

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>("=\"");

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void escapeAndAppendString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(char)>(34);

        r0.<com.android.internal.util.FastXmlSerializer: boolean mLineStart> = 0;

        return r0;
    }

    public void cdsect(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void comment(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void docdecl(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void endDocument() throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        virtualinvoke r0.<com.android.internal.util.FastXmlSerializer: void flush()>();

        return;
    }

    public org.xmlpull.v1.XmlSerializer endTag(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1, r2;
        int i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i1 = r0.<com.android.internal.util.FastXmlSerializer: int mNesting>;

        i0 = $i1 - 1;

        r0.<com.android.internal.util.FastXmlSerializer: int mNesting> = i0;

        $z0 = r0.<com.android.internal.util.FastXmlSerializer: boolean mInTag>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(" />\n");

        goto label4;

     label1:
        $z1 = r0.<com.android.internal.util.FastXmlSerializer: boolean mIndent>;

        if $z1 == 0 goto label2;

        $z2 = r0.<com.android.internal.util.FastXmlSerializer: boolean mLineStart>;

        if $z2 == 0 goto label2;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void appendIndent(int)>(i0);

     label2:
        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>("</");

        if r1 == null goto label3;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(char)>(58);

     label3:
        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(r2);

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(">\n");

     label4:
        r0.<com.android.internal.util.FastXmlSerializer: boolean mLineStart> = 1;

        r0.<com.android.internal.util.FastXmlSerializer: boolean mInTag> = 0;

        return r0;
    }

    public void entityRef(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void flush() throws java.io.IOException
    {
        com.android.internal.util.FastXmlSerializer r0;
        int i0;
        java.nio.CharBuffer r1;
        java.io.OutputStream $r2, $r11;
        char[] $r3, $r6;
        java.io.Writer $r4, $r5;
        java.nio.ByteBuffer $r7, $r12;
        java.nio.charset.CharsetEncoder $r8, $r13;
        boolean $z0, $z1;
        java.io.IOException $r9;
        java.lang.String $r10;
        java.nio.charset.CoderResult r14;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        i0 = r0.<com.android.internal.util.FastXmlSerializer: int mPos>;

        if i0 <= 0 goto label6;

        $r2 = r0.<com.android.internal.util.FastXmlSerializer: java.io.OutputStream mOutputStream>;

        if $r2 == null goto label4;

        $r6 = r0.<com.android.internal.util.FastXmlSerializer: char[] mText>;

        r1 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>($r6, 0, i0);

        $r8 = r0.<com.android.internal.util.FastXmlSerializer: java.nio.charset.CharsetEncoder mCharset>;

        $r7 = r0.<com.android.internal.util.FastXmlSerializer: java.nio.ByteBuffer mBytes>;

        r14 = virtualinvoke $r8.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>(r1, $r7, 1);

     label1:
        $z0 = virtualinvoke r14.<java.nio.charset.CoderResult: boolean isError()>();

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r14.<java.nio.charset.CoderResult: boolean isOverflow()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void flushBytes()>();

        $r13 = r0.<com.android.internal.util.FastXmlSerializer: java.nio.charset.CharsetEncoder mCharset>;

        $r12 = r0.<com.android.internal.util.FastXmlSerializer: java.nio.ByteBuffer mBytes>;

        r14 = virtualinvoke $r13.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>(r1, $r12, 1);

        goto label1;

     label2:
        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void flushBytes()>();

        $r11 = r0.<com.android.internal.util.FastXmlSerializer: java.io.OutputStream mOutputStream>;

        virtualinvoke $r11.<java.io.OutputStream: void flush()>();

        goto label5;

     label3:
        $r9 = new java.io.IOException;

        $r10 = virtualinvoke r14.<java.nio.charset.CoderResult: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        $r4 = r0.<com.android.internal.util.FastXmlSerializer: java.io.Writer mWriter>;

        $r3 = r0.<com.android.internal.util.FastXmlSerializer: char[] mText>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>($r3, 0, i0);

        $r5 = r0.<com.android.internal.util.FastXmlSerializer: java.io.Writer mWriter>;

        virtualinvoke $r5.<java.io.Writer: void flush()>();

     label5:
        r0.<com.android.internal.util.FastXmlSerializer: int mPos> = 0;

     label6:
        return;
    }

    public int getDepth()
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean getFeature(java.lang.String)
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public java.lang.String getName()
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public java.lang.String getNamespace()
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public java.lang.String getPrefix(java.lang.String, boolean) throws java.lang.IllegalArgumentException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        boolean z0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void ignorableWhitespace(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void processingInstruction(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void setFeature(java.lang.String, boolean) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        boolean z0, $z1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#indent-output");

        if $z1 == 0 goto label1;

        r0.<com.android.internal.util.FastXmlSerializer: boolean mIndent> = 1;

        return;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void setOutput(java.io.OutputStream, java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        java.nio.charset.Charset $r3;
        java.nio.charset.CharsetEncoder $r4, $r6, $r8;
        java.nio.charset.CodingErrorAction $r5, $r7;
        java.lang.Throwable $r9, $r11, $r13, $r15;
        java.io.UnsupportedEncodingException $r10, $r12, $r14, $r16;
        java.io.OutputStream r17;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r17 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.lang.String;

        if r17 == null goto label5;

     label1:
        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        $r5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        $r6 = virtualinvoke $r4.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r5);

        $r7 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        $r8 = virtualinvoke $r6.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r7);

        r0.<com.android.internal.util.FastXmlSerializer: java.nio.charset.CharsetEncoder mCharset> = $r8;

     label2:
        r0.<com.android.internal.util.FastXmlSerializer: java.io.OutputStream mOutputStream> = r17;

        return;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.io.UnsupportedEncodingException;

        specialinvoke $r10.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.io.UnsupportedEncodingException: java.lang.Throwable initCause(java.lang.Throwable)>($r9);

        $r12 = (java.io.UnsupportedEncodingException) $r11;

        throw $r12;

     label4:
        $r13 := @caughtexception;

        $r14 = new java.io.UnsupportedEncodingException;

        specialinvoke $r14.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.io.UnsupportedEncodingException: java.lang.Throwable initCause(java.lang.Throwable)>($r13);

        $r16 = (java.io.UnsupportedEncodingException) $r15;

        throw $r16;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

        catch java.nio.charset.IllegalCharsetNameException from label1 to label2 with label4;
        catch java.nio.charset.UnsupportedCharsetException from label1 to label2 with label3;
    }

    public void setOutput(java.io.Writer) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.io.Writer r1;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.io.Writer;

        r0.<com.android.internal.util.FastXmlSerializer: java.io.Writer mWriter> = r1;

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1, r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public void startDocument(java.lang.String, java.lang.Boolean) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.Boolean r1;
        java.lang.StringBuilder $r3;
        boolean $z0;
        java.lang.String $r7, r8, r9;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Boolean;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\'1.0\' encoding=\'utf-8\' standalone=\'");

        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        r9 = "yes";

        goto label2;

     label1:
        r9 = "no";

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ?>\n");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>($r7);

        r0.<com.android.internal.util.FastXmlSerializer: boolean mLineStart> = 1;

        return;
    }

    public org.xmlpull.v1.XmlSerializer startTag(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1, r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<com.android.internal.util.FastXmlSerializer: boolean mInTag>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(">\n");

     label1:
        $z1 = r0.<com.android.internal.util.FastXmlSerializer: boolean mIndent>;

        if $z1 == 0 goto label2;

        $i2 = r0.<com.android.internal.util.FastXmlSerializer: int mNesting>;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void appendIndent(int)>($i2);

     label2:
        $i0 = r0.<com.android.internal.util.FastXmlSerializer: int mNesting>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.util.FastXmlSerializer: int mNesting> = $i1;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(char)>(60);

        if r1 == null goto label3;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(char)>(58);

     label3:
        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(r2);

        r0.<com.android.internal.util.FastXmlSerializer: boolean mInTag> = 1;

        r0.<com.android.internal.util.FastXmlSerializer: boolean mLineStart> = 0;

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer text(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        java.lang.String r1;
        boolean $z1, z2, z3;
        int $i0, $i1, $i2;
        char $c3;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: java.lang.String;

        z2 = r0.<com.android.internal.util.FastXmlSerializer: boolean mInTag>;

        if z2 == 0 goto label1;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(">");

        r0.<com.android.internal.util.FastXmlSerializer: boolean mInTag> = 0;

     label1:
        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void escapeAndAppendString(java.lang.String)>(r1);

        $z1 = r0.<com.android.internal.util.FastXmlSerializer: boolean mIndent>;

        if $z1 == 0 goto label3;

        z3 = 0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        z3 = 0;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 10 goto label2;

        z3 = 1;

     label2:
        r0.<com.android.internal.util.FastXmlSerializer: boolean mLineStart> = z3;

     label3:
        return r0;
    }

    public org.xmlpull.v1.XmlSerializer text(char[], int, int) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.internal.util.FastXmlSerializer r0;
        char[] r1;
        int i0, i1, $i2, $i3;
        boolean z0, $z1, z2;
        char $c4;

        r0 := @this: com.android.internal.util.FastXmlSerializer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 = r0.<com.android.internal.util.FastXmlSerializer: boolean mInTag>;

        z2 = 0;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void append(java.lang.String)>(">");

        r0.<com.android.internal.util.FastXmlSerializer: boolean mInTag> = 0;

     label1:
        specialinvoke r0.<com.android.internal.util.FastXmlSerializer: void escapeAndAppendString(char[],int,int)>(r1, i0, i1);

        $z1 = r0.<com.android.internal.util.FastXmlSerializer: boolean mIndent>;

        if $z1 == 0 goto label3;

        $i2 = i0 + i1;

        $i3 = $i2 - 1;

        $c4 = r1[$i3];

        if $c4 != 10 goto label2;

        z2 = 1;

     label2:
        r0.<com.android.internal.util.FastXmlSerializer: boolean mLineStart> = z2;

     label3:
        return r0;
    }
}
