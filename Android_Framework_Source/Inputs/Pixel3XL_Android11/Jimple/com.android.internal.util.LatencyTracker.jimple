public class com.android.internal.util.LatencyTracker extends java.lang.Object
{
    public static final int ACTION_CHECK_CREDENTIAL;
    public static final int ACTION_CHECK_CREDENTIAL_UNLOCKED;
    public static final int ACTION_EXPAND_PANEL;
    public static final int ACTION_FACE_WAKE_AND_UNLOCK;
    public static final int ACTION_FINGERPRINT_WAKE_AND_UNLOCK;
    private static final java.lang.String ACTION_RELOAD_PROPERTY;
    public static final int ACTION_ROTATE_SCREEN;
    public static final int ACTION_TOGGLE_RECENTS;
    public static final int ACTION_TURN_ON_SCREEN;
    private static final java.lang.String[] NAMES;
    private static final java.lang.String TAG;
    private static com.android.internal.util.LatencyTracker sLatencyTracker;
    private boolean mEnabled;
    private final android.util.SparseLongArray mStartRtc;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.android.internal.util.LatencyTracker: java.lang.String TAG> = "LatencyTracker";

        <com.android.internal.util.LatencyTracker: int ACTION_TURN_ON_SCREEN> = 5;

        <com.android.internal.util.LatencyTracker: int ACTION_TOGGLE_RECENTS> = 1;

        <com.android.internal.util.LatencyTracker: int ACTION_ROTATE_SCREEN> = 6;

        <com.android.internal.util.LatencyTracker: java.lang.String ACTION_RELOAD_PROPERTY> = "com.android.systemui.RELOAD_LATENCY_TRACKER_PROPERTY";

        <com.android.internal.util.LatencyTracker: int ACTION_FINGERPRINT_WAKE_AND_UNLOCK> = 2;

        <com.android.internal.util.LatencyTracker: int ACTION_FACE_WAKE_AND_UNLOCK> = 6;

        <com.android.internal.util.LatencyTracker: int ACTION_EXPAND_PANEL> = 0;

        <com.android.internal.util.LatencyTracker: int ACTION_CHECK_CREDENTIAL_UNLOCKED> = 4;

        <com.android.internal.util.LatencyTracker: int ACTION_CHECK_CREDENTIAL> = 3;

        $r0 = newarray (java.lang.String)[8];

        $r0[0] = "expand panel";

        $r0[1] = "toggle recents";

        $r0[2] = "fingerprint wake-and-unlock";

        $r0[3] = "check credential";

        $r0[4] = "check credential unlocked";

        $r0[5] = "turn on screen";

        $r0[6] = "rotate the screen";

        $r0[7] = "face wake-and-unlock";

        <com.android.internal.util.LatencyTracker: java.lang.String[] NAMES> = $r0;

        return;
    }

    private void <init>(android.content.Context)
    {
        com.android.internal.util.LatencyTracker r0;
        android.content.Context r1;
        android.util.SparseLongArray $r2;
        com.android.internal.util.LatencyTracker$1 $r3;
        android.content.IntentFilter $r4;

        r0 := @this: com.android.internal.util.LatencyTracker;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.SparseLongArray;

        specialinvoke $r2.<android.util.SparseLongArray: void <init>()>();

        r0.<com.android.internal.util.LatencyTracker: android.util.SparseLongArray mStartRtc> = $r2;

        $r3 = new com.android.internal.util.LatencyTracker$1;

        specialinvoke $r3.<com.android.internal.util.LatencyTracker$1: void <init>(com.android.internal.util.LatencyTracker)>(r0);

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>(java.lang.String)>("com.android.systemui.RELOAD_LATENCY_TRACKER_PROPERTY");

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, $r4);

        specialinvoke r0.<com.android.internal.util.LatencyTracker: void reloadProperty()>();

        return;
    }

    static void access$000(com.android.internal.util.LatencyTracker)
    {
        com.android.internal.util.LatencyTracker r0;

        r0 := @parameter0: com.android.internal.util.LatencyTracker;

        specialinvoke r0.<com.android.internal.util.LatencyTracker: void reloadProperty()>();

        return;
    }

    public static com.android.internal.util.LatencyTracker getInstance(android.content.Context)
    {
        android.content.Context r0, $r4;
        com.android.internal.util.LatencyTracker $r1, $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = <com.android.internal.util.LatencyTracker: com.android.internal.util.LatencyTracker sLatencyTracker>;

        if $r1 != null goto label1;

        $r3 = new com.android.internal.util.LatencyTracker;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        specialinvoke $r3.<com.android.internal.util.LatencyTracker: void <init>(android.content.Context)>($r4);

        <com.android.internal.util.LatencyTracker: com.android.internal.util.LatencyTracker sLatencyTracker> = $r3;

     label1:
        $r2 = <com.android.internal.util.LatencyTracker: com.android.internal.util.LatencyTracker sLatencyTracker>;

        return $r2;
    }

    public static boolean isEnabled(android.content.Context)
    {
        android.content.Context r0;
        com.android.internal.util.LatencyTracker $r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.internal.util.LatencyTracker: com.android.internal.util.LatencyTracker getInstance(android.content.Context)>(r0);

        $z0 = virtualinvoke $r1.<com.android.internal.util.LatencyTracker: boolean isEnabled()>();

        return $z0;
    }

    public static void logAction(int, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8, $r9;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("action=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" latency=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("LatencyTracker", $r6);

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7[1] = $r9;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(36070, $r7);

        return;
    }

    private void reloadProperty()
    {
        com.android.internal.util.LatencyTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.util.LatencyTracker;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("debug.systemui.latency_tracking", 0);

        r0.<com.android.internal.util.LatencyTracker: boolean mEnabled> = $z0;

        return;
    }

    public boolean isEnabled()
    {
        com.android.internal.util.LatencyTracker r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.util.LatencyTracker;

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.internal.util.LatencyTracker: boolean mEnabled>;

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public void onActionEnd(int)
    {
        com.android.internal.util.LatencyTracker r0;
        int i0, $i5;
        long l1, l2, $l4;
        boolean $z0;
        android.util.SparseLongArray $r1, $r2;
        byte $b3;
        java.lang.String[] $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.util.LatencyTracker;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.util.LatencyTracker: boolean mEnabled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = r0.<com.android.internal.util.LatencyTracker: android.util.SparseLongArray mStartRtc>;

        l2 = virtualinvoke $r1.<android.util.SparseLongArray: long get(int,long)>(i0, -1L);

        $b3 = l2 cmp -1L;

        if $b3 != 0 goto label2;

        return;

     label2:
        $r2 = r0.<com.android.internal.util.LatencyTracker: android.util.SparseLongArray mStartRtc>;

        virtualinvoke $r2.<android.util.SparseLongArray: void delete(int)>(i0);

        $r3 = <com.android.internal.util.LatencyTracker: java.lang.String[] NAMES>;

        $r4 = $r3[i0];

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(4096L, $r4, 0);

        $l4 = l1 - l2;

        $i5 = (int) $l4;

        staticinvoke <com.android.internal.util.LatencyTracker: void logAction(int,int)>(i0, $i5);

        return;
    }

    public void onActionStart(int)
    {
        com.android.internal.util.LatencyTracker r0;
        int i0;
        boolean $z0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        android.util.SparseLongArray $r3;
        long $l1;

        r0 := @this: com.android.internal.util.LatencyTracker;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.util.LatencyTracker: boolean mEnabled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = <com.android.internal.util.LatencyTracker: java.lang.String[] NAMES>;

        $r2 = $r1[i0];

        staticinvoke <android.os.Trace: void asyncTraceBegin(long,java.lang.String,int)>(4096L, $r2, 0);

        $r3 = r0.<com.android.internal.util.LatencyTracker: android.util.SparseLongArray mStartRtc>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke $r3.<android.util.SparseLongArray: void put(int,long)>(i0, $l1);

        return;
    }
}
