public final class com.android.internal.util.MemInfoReader extends java.lang.Object
{
    final long[] mInfos;

    public void <init>()
    {
        com.android.internal.util.MemInfoReader r0;
        long[] $r1;

        r0 := @this: com.android.internal.util.MemInfoReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (long)[16];

        r0.<com.android.internal.util.MemInfoReader: long[] mInfos> = $r1;

        return;
    }

    public long getCachedSize()
    {
        com.android.internal.util.MemInfoReader r0;
        long $l0, $l1;

        r0 := @this: com.android.internal.util.MemInfoReader;

        $l0 = virtualinvoke r0.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l1 = $l0 * 1024L;

        return $l1;
    }

    public long getCachedSizeKb()
    {
        com.android.internal.util.MemInfoReader r0;
        long l0, $l2, $l3, $l4, $l5, $l6, $l7, l8;
        byte $b1;
        long[] r1, r2;

        r0 := @this: com.android.internal.util.MemInfoReader;

        r1 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        l0 = r1[15];

        l8 = l0;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        l8 = r1[6];

     label1:
        r2 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        $l2 = r2[2];

        $l4 = $l2 + l8;

        $l3 = r2[3];

        $l6 = $l4 + $l3;

        $l5 = r2[11];

        $l7 = $l6 - $l5;

        return $l7;
    }

    public long getFreeSize()
    {
        com.android.internal.util.MemInfoReader r0;
        long[] $r1;
        long $l0, $l1;

        r0 := @this: com.android.internal.util.MemInfoReader;

        $r1 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        $l0 = $r1[1];

        $l1 = $l0 * 1024L;

        return $l1;
    }

    public long getFreeSizeKb()
    {
        com.android.internal.util.MemInfoReader r0;
        long[] $r1;
        long $l0;

        r0 := @this: com.android.internal.util.MemInfoReader;

        $r1 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        $l0 = $r1[1];

        return $l0;
    }

    public long getKernelUsedSize()
    {
        com.android.internal.util.MemInfoReader r0;
        long $l0, $l1;

        r0 := @this: com.android.internal.util.MemInfoReader;

        $l0 = virtualinvoke r0.<com.android.internal.util.MemInfoReader: long getKernelUsedSizeKb()>();

        $l1 = $l0 * 1024L;

        return $l1;
    }

    public long getKernelUsedSizeKb()
    {
        com.android.internal.util.MemInfoReader r0;
        long[] r1, $r2;
        long l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, l8;
        boolean $z0;

        r0 := @this: com.android.internal.util.MemInfoReader;

        r1 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        $l2 = r1[4];

        $l1 = r1[7];

        $l4 = $l2 + $l1;

        $l3 = r1[12];

        $l6 = $l4 + $l3;

        $l5 = r1[13];

        l0 = $l6 + $l5;

        l8 = l0;

        $z0 = staticinvoke <android.os.Debug: boolean isVmapStack()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        $l7 = $r2[14];

        l8 = l0 + $l7;

     label1:
        return l8;
    }

    public long[] getRawInfo()
    {
        com.android.internal.util.MemInfoReader r0;
        long[] $r1;

        r0 := @this: com.android.internal.util.MemInfoReader;

        $r1 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        return $r1;
    }

    public long getSwapFreeSizeKb()
    {
        com.android.internal.util.MemInfoReader r0;
        long[] $r1;
        long $l0;

        r0 := @this: com.android.internal.util.MemInfoReader;

        $r1 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        $l0 = $r1[9];

        return $l0;
    }

    public long getSwapTotalSizeKb()
    {
        com.android.internal.util.MemInfoReader r0;
        long[] $r1;
        long $l0;

        r0 := @this: com.android.internal.util.MemInfoReader;

        $r1 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        $l0 = $r1[8];

        return $l0;
    }

    public long getTotalSize()
    {
        com.android.internal.util.MemInfoReader r0;
        long[] $r1;
        long $l0, $l1;

        r0 := @this: com.android.internal.util.MemInfoReader;

        $r1 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        $l0 = $r1[0];

        $l1 = $l0 * 1024L;

        return $l1;
    }

    public long getTotalSizeKb()
    {
        com.android.internal.util.MemInfoReader r0;
        long[] $r1;
        long $l0;

        r0 := @this: com.android.internal.util.MemInfoReader;

        $r1 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        $l0 = $r1[0];

        return $l0;
    }

    public long getZramTotalSizeKb()
    {
        com.android.internal.util.MemInfoReader r0;
        long[] $r1;
        long $l0;

        r0 := @this: com.android.internal.util.MemInfoReader;

        $r1 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        $l0 = $r1[10];

        return $l0;
    }

    public void readMemInfo()
    {
        com.android.internal.util.MemInfoReader r0;
        android.os.StrictMode$ThreadPolicy r1;
        long[] $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.internal.util.MemInfoReader;

        r1 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

     label1:
        $r3 = r0.<com.android.internal.util.MemInfoReader: long[] mInfos>;

        staticinvoke <android.os.Debug: void getMemInfo(long[])>($r3);

     label2:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
