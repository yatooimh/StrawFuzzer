public class com.android.internal.util.MessageUtils extends java.lang.Object
{
    private static final boolean DBG;
    public static final java.lang.String[] DEFAULT_PREFIXES;
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.String[] $r2;

        <com.android.internal.util.MessageUtils: boolean DBG> = 0;

        $r0 = class "Lcom/android/internal/util/MessageUtils;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.internal.util.MessageUtils: java.lang.String TAG> = $r1;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "CMD_";

        $r2[1] = "EVENT_";

        <com.android.internal.util.MessageUtils: java.lang.String[] DEFAULT_PREFIXES> = $r2;

        return;
    }

    public void <init>()
    {
        com.android.internal.util.MessageUtils r0;

        r0 := @this: com.android.internal.util.MessageUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.util.SparseArray findMessageNames(java.lang.Class[])
    {
        java.lang.Class[] r0;
        java.lang.String[] $r1;
        android.util.SparseArray $r2;

        r0 := @parameter0: java.lang.Class[];

        $r1 = <com.android.internal.util.MessageUtils: java.lang.String[] DEFAULT_PREFIXES>;

        $r2 = staticinvoke <com.android.internal.util.MessageUtils: android.util.SparseArray findMessageNames(java.lang.Class[],java.lang.String[])>(r0, $r1);

        return $r2;
    }

    public static android.util.SparseArray findMessageNames(java.lang.Class[], java.lang.String[])
    {
        java.lang.Class[] r0;
        java.lang.String[] r1;
        int i0, i1, i2, i3, i5, i6, i7, i8;
        com.android.internal.util.MessageUtils$DuplicateConstantError r3;
        android.util.SparseArray $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String $r5, $r12, r15, r18, r19, r23;
        java.lang.Object $r6;
        java.lang.Throwable $r7, $r8, $r13;
        java.lang.StringBuilder $r9;
        java.lang.Class r14;
        java.lang.reflect.Field[] r16;
        java.lang.reflect.Field r17;

        r0 := @parameter0: java.lang.Class[];

        r1 := @parameter1: java.lang.String[];

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        i0 = lengthof r0;

        i5 = 0;

     label01:
        if i5 >= i0 goto label22;

        r14 = r0[i5];

        r15 = virtualinvoke r14.<java.lang.Class: java.lang.String getName()>();

     label02:
        r16 = virtualinvoke r14.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

     label03:
        i1 = lengthof r16;

        i6 = 0;

     label04:
        if i6 >= i1 goto label21;

        r17 = r16[i6];

        i7 = virtualinvoke r17.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(i7);

        $z1 = $z0 ^ 1;

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>(i7);

        $z3 = $z2 ^ 1;

        $z4 = $z1 | $z3;

        if $z4 == 0 goto label05;

        goto label19;

     label05:
        r18 = virtualinvoke r17.<java.lang.reflect.Field: java.lang.String getName()>();

        i2 = lengthof r1;

        i8 = 0;

     label06:
        if i8 >= i2 goto label19;

        $r5 = r1[i8];

        $z5 = virtualinvoke r18.<java.lang.String: boolean startsWith(java.lang.String)>($r5);

        if $z5 != 0 goto label07;

        goto label18;

     label07:
        virtualinvoke r17.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label08:
        i3 = virtualinvoke r17.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

     label09:
        $r6 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r19 = (java.lang.String) $r6;

     label10:
        if r19 == null goto label14;

     label11:
        $z6 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z6 == 0 goto label13;

     label12:
        goto label14;

     label13:
        r3 = new com.android.internal.util.MessageUtils$DuplicateConstantError;

        specialinvoke r3.<com.android.internal.util.MessageUtils$DuplicateConstantError: void <init>(java.lang.String,java.lang.String,int)>(r18, r19, i3);

        throw r3;

     label14:
        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i3, r18);

     label15:
        goto label18;

     label16:
        $r7 := @caughtexception;

        goto label19;

     label17:
        $r13 := @caughtexception;

     label18:
        i8 = i8 + 1;

        goto label06;

     label19:
        i6 = i6 + 1;

        goto label04;

     label20:
        $r8 := @caughtexception;

        r23 = <com.android.internal.util.MessageUtils: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t list fields of class ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r23, $r12);

     label21:
        i5 = i5 + 1;

        goto label01;

     label22:
        return $r4;

        catch java.lang.SecurityException from label02 to label03 with label20;
        catch java.lang.SecurityException from label07 to label08 with label17;
        catch java.lang.IllegalAccessException from label07 to label08 with label17;
        catch java.lang.IllegalArgumentException from label08 to label09 with label16;
        catch java.lang.ExceptionInInitializerError from label08 to label09 with label16;
        catch java.lang.SecurityException from label08 to label09 with label17;
        catch java.lang.IllegalAccessException from label08 to label09 with label17;
        catch java.lang.SecurityException from label09 to label10 with label17;
        catch java.lang.IllegalAccessException from label09 to label10 with label17;
        catch java.lang.SecurityException from label11 to label12 with label17;
        catch java.lang.IllegalAccessException from label11 to label12 with label17;
        catch java.lang.SecurityException from label13 to label14 with label17;
        catch java.lang.IllegalAccessException from label13 to label14 with label17;
        catch java.lang.SecurityException from label14 to label15 with label17;
        catch java.lang.IllegalAccessException from label14 to label15 with label17;
    }
}
