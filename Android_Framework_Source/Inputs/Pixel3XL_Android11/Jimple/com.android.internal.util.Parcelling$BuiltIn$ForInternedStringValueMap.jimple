public class com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap extends java.lang.Object implements com.android.internal.util.Parcelling
{

    public void <init>()
    {
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap r0;

        r0 := @this: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile void parcel(java.lang.Object, android.os.Parcel, int)
    {
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap r0;
        java.lang.Object r1;
        android.os.Parcel r2;
        int i0;
        java.util.Map $r3;

        r0 := @this: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.os.Parcel;

        i0 := @parameter2: int;

        $r3 = (java.util.Map) r1;

        virtualinvoke r0.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap: void parcel(java.util.Map,android.os.Parcel,int)>($r3, r2, i0);

        return;
    }

    public void parcel(java.util.Map, android.os.Parcel, int)
    {
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap r0;
        java.util.Map r1;
        android.os.Parcel r2;
        int i0;

        r0 := @this: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: android.os.Parcel;

        i0 := @parameter2: int;

        virtualinvoke r2.<android.os.Parcel: void writeMap(java.util.Map)>(r1);

        return;
    }

    public volatile java.lang.Object unparcel(android.os.Parcel)
    {
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap r0;
        android.os.Parcel r1;
        java.util.Map $r2;

        r0 := @this: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap: java.util.Map unparcel(android.os.Parcel)>(r1);

        return $r2;
    }

    public java.util.Map unparcel(android.os.Parcel)
    {
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap r0;
        android.os.Parcel r1;
        android.util.ArrayMap $r3;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        int $i0, i1;
        java.lang.Object $r6;
        java.lang.String $r7, $r8;

        r0 := @this: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap;

        r1 := @parameter0: android.os.Parcel;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        $r4 = class "Ljava/lang/String;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r1.<android.os.Parcel: void readMap(java.util.Map,java.lang.ClassLoader)>($r3, $r5);

        i1 = 0;

     label1:
        $i0 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        if i1 >= $i0 goto label2;

        $r6 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r7 = (java.lang.String) $r6;

        $r8 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>($r7);

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object setValueAt(int,java.lang.Object)>(i1, $r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r3;
    }
}
