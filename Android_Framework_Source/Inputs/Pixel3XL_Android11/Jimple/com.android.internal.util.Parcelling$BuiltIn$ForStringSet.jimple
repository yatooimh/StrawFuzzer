public class com.android.internal.util.Parcelling$BuiltIn$ForStringSet extends java.lang.Object implements com.android.internal.util.Parcelling
{

    public void <init>()
    {
        com.android.internal.util.Parcelling$BuiltIn$ForStringSet r0;

        r0 := @this: com.android.internal.util.Parcelling$BuiltIn$ForStringSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile void parcel(java.lang.Object, android.os.Parcel, int)
    {
        com.android.internal.util.Parcelling$BuiltIn$ForStringSet r0;
        java.lang.Object r1;
        android.os.Parcel r2;
        int i0;
        java.util.Set $r3;

        r0 := @this: com.android.internal.util.Parcelling$BuiltIn$ForStringSet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.os.Parcel;

        i0 := @parameter2: int;

        $r3 = (java.util.Set) r1;

        virtualinvoke r0.<com.android.internal.util.Parcelling$BuiltIn$ForStringSet: void parcel(java.util.Set,android.os.Parcel,int)>($r3, r2, i0);

        return;
    }

    public void parcel(java.util.Set, android.os.Parcel, int)
    {
        com.android.internal.util.Parcelling$BuiltIn$ForStringSet r0;
        android.os.Parcel r1;
        int i0, $i1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.String $r3;
        java.util.Set r4;
        java.util.Iterator r5;

        r0 := @this: com.android.internal.util.Parcelling$BuiltIn$ForStringSet;

        r4 := @parameter0: java.util.Set;

        r1 := @parameter1: android.os.Parcel;

        i0 := @parameter2: int;

        if r4 != null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(-1);

        goto label3;

     label1:
        $i1 = interfaceinvoke r4.<java.util.Set: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r2;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        goto label2;

     label3:
        return;
    }

    public volatile java.lang.Object unparcel(android.os.Parcel)
    {
        com.android.internal.util.Parcelling$BuiltIn$ForStringSet r0;
        android.os.Parcel r1;
        java.util.Set $r2;

        r0 := @this: com.android.internal.util.Parcelling$BuiltIn$ForStringSet;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<com.android.internal.util.Parcelling$BuiltIn$ForStringSet: java.util.Set unparcel(android.os.Parcel)>(r1);

        return $r2;
    }

    public java.util.Set unparcel(android.os.Parcel)
    {
        com.android.internal.util.Parcelling$BuiltIn$ForStringSet r0;
        android.os.Parcel r1;
        int i0, i1;
        android.util.ArraySet $r3;
        java.lang.String $r4;
        java.util.Set $r5;

        r0 := @this: com.android.internal.util.Parcelling$BuiltIn$ForStringSet;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        $r5 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r5;

     label1:
        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r3;
    }
}
