public class com.android.internal.util.Parcelling$Cache extends java.lang.Object
{
    private static android.util.ArrayMap sCache;

    static void <clinit>()
    {
        android.util.ArrayMap $r0;

        $r0 = new android.util.ArrayMap;

        specialinvoke $r0.<android.util.ArrayMap: void <init>()>();

        <com.android.internal.util.Parcelling$Cache: android.util.ArrayMap sCache> = $r0;

        return;
    }

    private void <init>()
    {
        com.android.internal.util.Parcelling$Cache r0;

        r0 := @this: com.android.internal.util.Parcelling$Cache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.internal.util.Parcelling get(java.lang.Class)
    {
        java.lang.Class r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        com.android.internal.util.Parcelling $r3;

        r0 := @parameter0: java.lang.Class;

        $r1 = <com.android.internal.util.Parcelling$Cache: android.util.ArrayMap sCache>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (com.android.internal.util.Parcelling) $r2;

        return $r3;
    }

    public static com.android.internal.util.Parcelling getOrCreate(java.lang.Class)
    {
        com.android.internal.util.Parcelling r0, $r2, r6;
        java.lang.Object $r1;
        java.lang.Exception $r3;
        java.lang.RuntimeException $r4;
        java.lang.Class r5;

        r5 := @parameter0: java.lang.Class;

        r0 = staticinvoke <com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling get(java.lang.Class)>(r5);

        if r0 == null goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r5.<java.lang.Class: java.lang.Object newInstance()>();

        $r2 = (com.android.internal.util.Parcelling) $r1;

        r6 = staticinvoke <com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling put(com.android.internal.util.Parcelling)>($r2);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static com.android.internal.util.Parcelling put(com.android.internal.util.Parcelling)
    {
        com.android.internal.util.Parcelling r0;
        android.util.ArrayMap $r1;
        java.lang.Class $r2;

        r0 := @parameter0: com.android.internal.util.Parcelling;

        $r1 = <com.android.internal.util.Parcelling$Cache: android.util.ArrayMap sCache>;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r0);

        return r0;
    }
}
