public class com.android.internal.util.ProgressReporter extends java.lang.Object
{
    private static final int STATE_FINISHED;
    private static final int STATE_INIT;
    private static final int STATE_STARTED;
    private android.os.Bundle mExtras;
    private final int mId;
    private final android.os.RemoteCallbackList mListeners;
    private int mProgress;
    private int[] mSegmentRange;
    private int mState;

    public void <init>(int)
    {
        com.android.internal.util.ProgressReporter r0;
        int i0;
        android.os.RemoteCallbackList $r1;
        android.os.Bundle $r2;
        int[] $r3;

        r0 := @this: com.android.internal.util.ProgressReporter;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.os.RemoteCallbackList;

        specialinvoke $r1.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners> = $r1;

        r0.<com.android.internal.util.ProgressReporter: int mState> = 0;

        r0.<com.android.internal.util.ProgressReporter: int mProgress> = 0;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r0.<com.android.internal.util.ProgressReporter: android.os.Bundle mExtras> = $r2;

        $r3 = newarray (int)[2];

        $r3[0] = 0;

        $r3[1] = 100;

        r0.<com.android.internal.util.ProgressReporter: int[] mSegmentRange> = $r3;

        r0.<com.android.internal.util.ProgressReporter: int mId> = i0;

        return;
    }

    private void notifyFinished(int, android.os.Bundle)
    {
        com.android.internal.util.ProgressReporter r0;
        int i0, $i1, i2;
        android.os.Bundle r1;
        android.os.RemoteCallbackList $r3, $r4, $r5;
        android.os.IInterface $r6;
        android.os.IProgressListener $r7;
        android.os.RemoteException $r8;

        r0 := @this: com.android.internal.util.ProgressReporter;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r3 = r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners>;

        $i1 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label6;

     label2:
        $r5 = r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners>;

        $r6 = virtualinvoke $r5.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r7 = (android.os.IProgressListener) $r6;

        interfaceinvoke $r7.<android.os.IProgressListener: void onFinished(int,android.os.Bundle)>(i0, r1);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        i2 = i2 + -1;

        goto label1;

     label6:
        $r4 = r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners>;

        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void notifyProgress(int, int, android.os.Bundle)
    {
        com.android.internal.util.ProgressReporter r0;
        int i0, i1, $i2, i3;
        android.os.Bundle r1;
        android.os.RemoteCallbackList $r3, $r4, $r5;
        android.os.IInterface $r6;
        android.os.IProgressListener $r7;
        android.os.RemoteException $r8;

        r0 := @this: com.android.internal.util.ProgressReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        $r3 = r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners>;

        $i2 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i3 = $i2 - 1;

     label1:
        if i3 < 0 goto label6;

     label2:
        $r5 = r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners>;

        $r6 = virtualinvoke $r5.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i3);

        $r7 = (android.os.IProgressListener) $r6;

        interfaceinvoke $r7.<android.os.IProgressListener: void onProgress(int,int,android.os.Bundle)>(i0, i1, r1);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        i3 = i3 + -1;

        goto label1;

     label6:
        $r4 = r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners>;

        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void notifyStarted(int, android.os.Bundle)
    {
        com.android.internal.util.ProgressReporter r0;
        int i0, $i1, i2;
        android.os.Bundle r1;
        android.os.RemoteCallbackList $r3, $r4, $r5;
        android.os.IInterface $r6;
        android.os.IProgressListener $r7;
        android.os.RemoteException $r8;

        r0 := @this: com.android.internal.util.ProgressReporter;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r3 = r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners>;

        $i1 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label6;

     label2:
        $r5 = r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners>;

        $r6 = virtualinvoke $r5.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r7 = (android.os.IProgressListener) $r6;

        interfaceinvoke $r7.<android.os.IProgressListener: void onStarted(int,android.os.Bundle)>(i0, r1);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        i2 = i2 + -1;

        goto label1;

     label6:
        $r4 = r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners>;

        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void addListener(android.os.IProgressListener)
    {
        com.android.internal.util.ProgressReporter r0;
        int i0, $i1, $i2, $i3, $i4;
        android.os.RemoteCallbackList $r1;
        android.os.Bundle $r2;
        android.os.RemoteException $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IProgressListener r6;

        r0 := @this: com.android.internal.util.ProgressReporter;

        r6 := @parameter0: android.os.IProgressListener;

        if r6 != null goto label01;

        return;

     label01:
        entermonitor r0;

     label02:
        $r1 = r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r6);

        i0 = r0.<com.android.internal.util.ProgressReporter: int mState>;

     label03:
        if i0 == 1 goto label07;

        if i0 == 2 goto label04;

        goto label10;

     label04:
        $i4 = r0.<com.android.internal.util.ProgressReporter: int mId>;

        interfaceinvoke r6.<android.os.IProgressListener: void onFinished(int,android.os.Bundle)>($i4, null);

     label05:
        goto label10;

     label06:
        $r3 := @caughtexception;

        goto label10;

     label07:
        $i1 = r0.<com.android.internal.util.ProgressReporter: int mId>;

        interfaceinvoke r6.<android.os.IProgressListener: void onStarted(int,android.os.Bundle)>($i1, null);

        $i3 = r0.<com.android.internal.util.ProgressReporter: int mId>;

        $i2 = r0.<com.android.internal.util.ProgressReporter: int mProgress>;

        $r2 = r0.<com.android.internal.util.ProgressReporter: android.os.Bundle mExtras>;

        interfaceinvoke r6.<android.os.IProgressListener: void onProgress(int,int,android.os.Bundle)>($i3, $i2, $r2);

     label08:
        goto label10;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        return;

     label12:
        $r5 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r5;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void endSegment(int[])
    {
        com.android.internal.util.ProgressReporter r0;
        int[] $r1, $r2, r4;
        int $i0, $i1, $i2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.util.ProgressReporter;

        r4 := @parameter0: int[];

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.internal.util.ProgressReporter: int[] mSegmentRange>;

        $i1 = $r1[0];

        $r2 = r0.<com.android.internal.util.ProgressReporter: int[] mSegmentRange>;

        $i0 = $r2[1];

        $i2 = $i1 + $i0;

        r0.<com.android.internal.util.ProgressReporter: int mProgress> = $i2;

        r0.<com.android.internal.util.ProgressReporter: int[] mSegmentRange> = r4;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void finish()
    {
        com.android.internal.util.ProgressReporter r0;
        int $i0;
        android.os.RemoteCallbackList $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.util.ProgressReporter;

        entermonitor r0;

     label1:
        r0.<com.android.internal.util.ProgressReporter: int mState> = 2;

        $i0 = r0.<com.android.internal.util.ProgressReporter: int mId>;

        specialinvoke r0.<com.android.internal.util.ProgressReporter: void notifyFinished(int,android.os.Bundle)>($i0, null);

        $r2 = r0.<com.android.internal.util.ProgressReporter: android.os.RemoteCallbackList mListeners>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void kill()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int getProgress()
    {
        com.android.internal.util.ProgressReporter r0;
        int $i0;

        r0 := @this: com.android.internal.util.ProgressReporter;

        $i0 = r0.<com.android.internal.util.ProgressReporter: int mProgress>;

        return $i0;
    }

    int[] getSegmentRange()
    {
        com.android.internal.util.ProgressReporter r0;
        int[] $r1;

        r0 := @this: com.android.internal.util.ProgressReporter;

        $r1 = r0.<com.android.internal.util.ProgressReporter: int[] mSegmentRange>;

        return $r1;
    }

    public void setProgress(int)
    {
        com.android.internal.util.ProgressReporter r0;
        int i0;

        r0 := @this: com.android.internal.util.ProgressReporter;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.internal.util.ProgressReporter: void setProgress(int,int,java.lang.CharSequence)>(i0, 100, null);

        return;
    }

    public void setProgress(int, int)
    {
        com.android.internal.util.ProgressReporter r0;
        int i0, i1;

        r0 := @this: com.android.internal.util.ProgressReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.util.ProgressReporter: void setProgress(int,int,java.lang.CharSequence)>(i0, i1, null);

        return;
    }

    public void setProgress(int, int, java.lang.CharSequence)
    {
        com.android.internal.util.ProgressReporter r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] $r1, $r2, $r3;
        android.os.Bundle $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.CharSequence r7;
        java.lang.IllegalStateException r8;

        r0 := @this: com.android.internal.util.ProgressReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: java.lang.CharSequence;

        entermonitor r0;

     label1:
        $i2 = r0.<com.android.internal.util.ProgressReporter: int mState>;

        if $i2 != 1 goto label6;

        $r1 = r0.<com.android.internal.util.ProgressReporter: int[] mSegmentRange>;

        $i7 = $r1[0];

        $r2 = r0.<com.android.internal.util.ProgressReporter: int[] mSegmentRange>;

        $i3 = $r2[1];

        $i4 = $i3 * i0;

        $i6 = $i4 / i1;

        $r3 = r0.<com.android.internal.util.ProgressReporter: int[] mSegmentRange>;

        $i5 = $r3[1];

        $i8 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>($i6, 0, $i5);

        $i9 = $i7 + $i8;

        r0.<com.android.internal.util.ProgressReporter: int mProgress> = $i9;

     label2:
        if r7 == null goto label4;

     label3:
        $r5 = r0.<com.android.internal.util.ProgressReporter: android.os.Bundle mExtras>;

        virtualinvoke $r5.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("android.intent.extra.TITLE", r7);

     label4:
        $i11 = r0.<com.android.internal.util.ProgressReporter: int mId>;

        $i10 = r0.<com.android.internal.util.ProgressReporter: int mProgress>;

        $r4 = r0.<com.android.internal.util.ProgressReporter: android.os.Bundle mExtras>;

        specialinvoke r0.<com.android.internal.util.ProgressReporter: void notifyProgress(int,int,android.os.Bundle)>($i11, $i10, $r4);

        exitmonitor r0;

     label5:
        return;

     label6:
        r8 = new java.lang.IllegalStateException;

        specialinvoke r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be started to change progress");

        throw r8;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void setProgress(int, java.lang.CharSequence)
    {
        com.android.internal.util.ProgressReporter r0;
        int i0;
        java.lang.CharSequence r1;

        r0 := @this: com.android.internal.util.ProgressReporter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.android.internal.util.ProgressReporter: void setProgress(int,int,java.lang.CharSequence)>(i0, 100, r1);

        return;
    }

    public void start()
    {
        com.android.internal.util.ProgressReporter r0;
        int $i0, $i1, $i2;
        android.os.Bundle $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.util.ProgressReporter;

        entermonitor r0;

     label1:
        r0.<com.android.internal.util.ProgressReporter: int mState> = 1;

        $i0 = r0.<com.android.internal.util.ProgressReporter: int mId>;

        specialinvoke r0.<com.android.internal.util.ProgressReporter: void notifyStarted(int,android.os.Bundle)>($i0, null);

        $i2 = r0.<com.android.internal.util.ProgressReporter: int mId>;

        $i1 = r0.<com.android.internal.util.ProgressReporter: int mProgress>;

        $r2 = r0.<com.android.internal.util.ProgressReporter: android.os.Bundle mExtras>;

        specialinvoke r0.<com.android.internal.util.ProgressReporter: void notifyProgress(int,int,android.os.Bundle)>($i2, $i1, $r2);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int[] startSegment(int)
    {
        com.android.internal.util.ProgressReporter r0;
        int i0, $i1, $i2, $i3, $i4;
        int[] $r1, $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.util.ProgressReporter;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r4 = r0.<com.android.internal.util.ProgressReporter: int[] mSegmentRange>;

        $r1 = newarray (int)[2];

        $i1 = r0.<com.android.internal.util.ProgressReporter: int mProgress>;

        $r1[0] = $i1;

        $r2 = r0.<com.android.internal.util.ProgressReporter: int[] mSegmentRange>;

        $i2 = $r2[1];

        $i3 = $i2 * i0;

        $i4 = $i3 / 100;

        $r1[1] = $i4;

        r0.<com.android.internal.util.ProgressReporter: int[] mSegmentRange> = $r1;

        exitmonitor r0;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <com.android.internal.util.ProgressReporter: int STATE_STARTED> = 1;

        <com.android.internal.util.ProgressReporter: int STATE_INIT> = 0;

        <com.android.internal.util.ProgressReporter: int STATE_FINISHED> = 2;

        return;
    }
}
