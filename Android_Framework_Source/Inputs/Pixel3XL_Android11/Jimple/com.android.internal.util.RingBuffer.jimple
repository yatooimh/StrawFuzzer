public class com.android.internal.util.RingBuffer extends java.lang.Object
{
    private final java.lang.Object[] mBuffer;
    private long mCursor;

    public void <init>(java.lang.Class, int)
    {
        com.android.internal.util.RingBuffer r0;
        java.lang.Class r1;
        int i0;
        java.lang.Object $r2;
        java.lang.Object[] $r3;

        r0 := @this: com.android.internal.util.RingBuffer;

        r1 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.util.RingBuffer: long mCursor> = 0L;

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentPositive(int,java.lang.String)>(i0, "A RingBuffer cannot have 0 capacity");

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, i0);

        $r3 = (java.lang.Object[]) $r2;

        r0.<com.android.internal.util.RingBuffer: java.lang.Object[] mBuffer> = $r3;

        return;
    }

    private int indexOf(long)
    {
        com.android.internal.util.RingBuffer r0;
        long l0, $l2, $l3, $l4;
        java.lang.Object[] $r1;
        int $i1, $i5;

        r0 := @this: com.android.internal.util.RingBuffer;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.util.RingBuffer: java.lang.Object[] mBuffer>;

        $i1 = lengthof $r1;

        $l2 = (long) $i1;

        $l3 = l0 % $l2;

        $l4 = staticinvoke <java.lang.Math: long abs(long)>($l3);

        $i5 = (int) $l4;

        return $i5;
    }

    public void append(java.lang.Object)
    {
        com.android.internal.util.RingBuffer r0;
        java.lang.Object r1;
        java.lang.Object[] r2;
        long l0, $l1;
        int $i2;

        r0 := @this: com.android.internal.util.RingBuffer;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<com.android.internal.util.RingBuffer: java.lang.Object[] mBuffer>;

        l0 = r0.<com.android.internal.util.RingBuffer: long mCursor>;

        $l1 = 1L + l0;

        r0.<com.android.internal.util.RingBuffer: long mCursor> = $l1;

        $i2 = specialinvoke r0.<com.android.internal.util.RingBuffer: int indexOf(long)>(l0);

        r2[$i2] = r1;

        return;
    }

    public void clear()
    {
        com.android.internal.util.RingBuffer r0;
        int $i0, i1;
        java.lang.Object[] $r1;

        r0 := @this: com.android.internal.util.RingBuffer;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.util.RingBuffer: int size()>();

        if i1 >= $i0 goto label2;

        $r1 = r0.<com.android.internal.util.RingBuffer: java.lang.Object[] mBuffer>;

        $r1[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<com.android.internal.util.RingBuffer: long mCursor> = 0L;

        return;
    }

    protected java.lang.Object createNewItem()
    {
        com.android.internal.util.RingBuffer r0;
        java.lang.Object[] $r1;
        java.lang.Class $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.Object r5;

        r0 := @this: com.android.internal.util.RingBuffer;

     label1:
        $r1 = r0.<com.android.internal.util.RingBuffer: java.lang.Object[] mBuffer>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        r5 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label3;
    }

    public java.lang.Object getNextSlot()
    {
        com.android.internal.util.RingBuffer r0;
        long l0, $l2;
        int i1;
        java.lang.Object[] r1, $r3;
        java.lang.Object $r2, $r4, $r5;

        r0 := @this: com.android.internal.util.RingBuffer;

        l0 = r0.<com.android.internal.util.RingBuffer: long mCursor>;

        $l2 = 1L + l0;

        r0.<com.android.internal.util.RingBuffer: long mCursor> = $l2;

        i1 = specialinvoke r0.<com.android.internal.util.RingBuffer: int indexOf(long)>(l0);

        r1 = r0.<com.android.internal.util.RingBuffer: java.lang.Object[] mBuffer>;

        $r2 = r1[i1];

        if $r2 != null goto label1;

        $r5 = virtualinvoke r0.<com.android.internal.util.RingBuffer: java.lang.Object createNewItem()>();

        r1[i1] = $r5;

     label1:
        $r3 = r0.<com.android.internal.util.RingBuffer: java.lang.Object[] mBuffer>;

        $r4 = $r3[i1];

        return $r4;
    }

    public boolean isEmpty()
    {
        com.android.internal.util.RingBuffer r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.util.RingBuffer;

        $i0 = virtualinvoke r0.<com.android.internal.util.RingBuffer: int size()>();

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int size()
    {
        com.android.internal.util.RingBuffer r0;
        java.lang.Object[] $r1;
        int $i0, $i4;
        long $l1, $l2, $l3;

        r0 := @this: com.android.internal.util.RingBuffer;

        $r1 = r0.<com.android.internal.util.RingBuffer: java.lang.Object[] mBuffer>;

        $i0 = lengthof $r1;

        $l2 = (long) $i0;

        $l1 = r0.<com.android.internal.util.RingBuffer: long mCursor>;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>($l2, $l1);

        $i4 = (int) $l3;

        return $i4;
    }

    public java.lang.Object[] toArray()
    {
        com.android.internal.util.RingBuffer r0;
        java.lang.Object[] r1, $r2, $r3, $r5;
        int $i0, $i2, $i3, i5;
        java.lang.Class $r4;
        long $l1, l4;
        java.lang.Object $r6;

        r0 := @this: com.android.internal.util.RingBuffer;

        $r2 = r0.<com.android.internal.util.RingBuffer: java.lang.Object[] mBuffer>;

        $i0 = virtualinvoke r0.<com.android.internal.util.RingBuffer: int size()>();

        $r3 = r0.<com.android.internal.util.RingBuffer: java.lang.Object[] mBuffer>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>($r2, $i0, $r4);

        $l1 = r0.<com.android.internal.util.RingBuffer: long mCursor>;

        l4 = $l1 - 1L;

        $i2 = lengthof r1;

        i5 = $i2 - 1;

     label1:
        if i5 < 0 goto label2;

        $r5 = r0.<com.android.internal.util.RingBuffer: java.lang.Object[] mBuffer>;

        $i3 = specialinvoke r0.<com.android.internal.util.RingBuffer: int indexOf(long)>(l4);

        $r6 = $r5[$i3];

        r1[i5] = $r6;

        i5 = i5 + -1;

        l4 = l4 - 1L;

        goto label1;

     label2:
        return r1;
    }
}
