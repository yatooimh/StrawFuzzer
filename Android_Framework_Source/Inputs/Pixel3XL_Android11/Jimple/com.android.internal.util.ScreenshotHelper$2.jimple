class com.android.internal.util.ScreenshotHelper$2 extends java.lang.Object implements android.content.ServiceConnection
{
    final com.android.internal.util.ScreenshotHelper this$0;
    final java.util.function.Consumer val$completionConsumer;
    final android.os.Handler val$handler;
    final java.lang.Runnable val$mScreenshotTimeout;
    final android.os.Message val$msg;

    void <init>(com.android.internal.util.ScreenshotHelper, android.os.Message, java.util.function.Consumer, android.os.Handler, java.lang.Runnable)
    {
        com.android.internal.util.ScreenshotHelper$2 r0;
        com.android.internal.util.ScreenshotHelper r1;
        android.os.Message r2;
        java.util.function.Consumer r3;
        android.os.Handler r4;
        java.lang.Runnable r5;

        r0 := @this: com.android.internal.util.ScreenshotHelper$2;

        r1 := @parameter0: com.android.internal.util.ScreenshotHelper;

        r2 := @parameter1: android.os.Message;

        r3 := @parameter2: java.util.function.Consumer;

        r4 := @parameter3: android.os.Handler;

        r5 := @parameter4: java.lang.Runnable;

        r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0> = r1;

        r0.<com.android.internal.util.ScreenshotHelper$2: android.os.Message val$msg> = r2;

        r0.<com.android.internal.util.ScreenshotHelper$2: java.util.function.Consumer val$completionConsumer> = r3;

        r0.<com.android.internal.util.ScreenshotHelper$2: android.os.Handler val$handler> = r4;

        r0.<com.android.internal.util.ScreenshotHelper$2: java.lang.Runnable val$mScreenshotTimeout> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.internal.util.ScreenshotHelper$2 r0;
        com.android.internal.util.ScreenshotHelper $r2, $r3, $r5, $r7;
        android.content.ServiceConnection $r4;
        android.os.IBinder $r8, r18;
        android.os.Message $r9;
        java.lang.Throwable $r10;
        android.os.RemoteException $r11;
        java.lang.String $r14;
        java.util.function.Consumer $r15, $r16;
        android.content.ComponentName r17;
        java.lang.Object r19;
        android.os.Messenger r20;
        java.lang.StringBuilder r21;

        r0 := @this: com.android.internal.util.ScreenshotHelper$2;

        r17 := @parameter0: android.content.ComponentName;

        r18 := @parameter1: android.os.IBinder;

        $r2 = r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0>;

        r19 = staticinvoke <com.android.internal.util.ScreenshotHelper: java.lang.Object access$000(com.android.internal.util.ScreenshotHelper)>($r2);

        entermonitor r19;

     label01:
        $r3 = r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0>;

        $r4 = staticinvoke <com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection access$100(com.android.internal.util.ScreenshotHelper)>($r3);

        if $r4 == r0 goto label03;

        exitmonitor r19;

     label02:
        return;

     label03:
        $r5 = r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0>;

        staticinvoke <com.android.internal.util.ScreenshotHelper: android.os.IBinder access$302(com.android.internal.util.ScreenshotHelper,android.os.IBinder)>($r5, r18);

        r20 = new android.os.Messenger;

        $r7 = r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0>;

        $r8 = staticinvoke <com.android.internal.util.ScreenshotHelper: android.os.IBinder access$300(com.android.internal.util.ScreenshotHelper)>($r7);

        specialinvoke r20.<android.os.Messenger: void <init>(android.os.IBinder)>($r8);

     label04:
        $r9 = r0.<com.android.internal.util.ScreenshotHelper$2: android.os.Message val$msg>;

        virtualinvoke r20.<android.os.Messenger: void send(android.os.Message)>($r9);

     label05:
        goto label08;

     label06:
        $r11 := @caughtexception;

     label07:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t take screenshot: ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r14 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ScreenshotHelper", $r14);

        $r15 = r0.<com.android.internal.util.ScreenshotHelper$2: java.util.function.Consumer val$completionConsumer>;

        if $r15 == null goto label08;

        $r16 = r0.<com.android.internal.util.ScreenshotHelper$2: java.util.function.Consumer val$completionConsumer>;

        interfaceinvoke $r16.<java.util.function.Consumer: void accept(java.lang.Object)>(null);

     label08:
        exitmonitor r19;

     label09:
        return;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor r19;

     label12:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.internal.util.ScreenshotHelper$2 r0;
        com.android.internal.util.ScreenshotHelper $r2, $r3, $r5, $r7, $r9, $r11, $r17;
        android.content.ServiceConnection $r4, $r8;
        android.content.Context $r6;
        java.lang.Runnable $r13, $r15;
        android.os.Handler $r14, $r16;
        boolean $z0;
        java.lang.Throwable $r18;
        android.content.ComponentName r19;
        java.lang.Object r20;

        r0 := @this: com.android.internal.util.ScreenshotHelper$2;

        r19 := @parameter0: android.content.ComponentName;

        $r2 = r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0>;

        r20 = staticinvoke <com.android.internal.util.ScreenshotHelper: java.lang.Object access$000(com.android.internal.util.ScreenshotHelper)>($r2);

        entermonitor r20;

     label1:
        $r3 = r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0>;

        $r4 = staticinvoke <com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection access$100(com.android.internal.util.ScreenshotHelper)>($r3);

        if $r4 == null goto label2;

        $r5 = r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0>;

        $r6 = staticinvoke <com.android.internal.util.ScreenshotHelper: android.content.Context access$200(com.android.internal.util.ScreenshotHelper)>($r5);

        $r7 = r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0>;

        $r8 = staticinvoke <com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection access$100(com.android.internal.util.ScreenshotHelper)>($r7);

        virtualinvoke $r6.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r8);

        $r9 = r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0>;

        staticinvoke <com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection access$102(com.android.internal.util.ScreenshotHelper,android.content.ServiceConnection)>($r9, null);

        $r11 = r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0>;

        staticinvoke <com.android.internal.util.ScreenshotHelper: android.os.IBinder access$302(com.android.internal.util.ScreenshotHelper,android.os.IBinder)>($r11, null);

        $r14 = r0.<com.android.internal.util.ScreenshotHelper$2: android.os.Handler val$handler>;

        $r13 = r0.<com.android.internal.util.ScreenshotHelper$2: java.lang.Runnable val$mScreenshotTimeout>;

        $z0 = virtualinvoke $r14.<android.os.Handler: boolean hasCallbacks(java.lang.Runnable)>($r13);

        if $z0 == 0 goto label2;

        $r16 = r0.<com.android.internal.util.ScreenshotHelper$2: android.os.Handler val$handler>;

        $r15 = r0.<com.android.internal.util.ScreenshotHelper$2: java.lang.Runnable val$mScreenshotTimeout>;

        virtualinvoke $r16.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r15);

        $r17 = r0.<com.android.internal.util.ScreenshotHelper$2: com.android.internal.util.ScreenshotHelper this$0>;

        staticinvoke <com.android.internal.util.ScreenshotHelper: void access$400(com.android.internal.util.ScreenshotHelper)>($r17);

     label2:
        exitmonitor r20;

     label3:
        return;

     label4:
        $r18 := @caughtexception;

     label5:
        exitmonitor r20;

     label6:
        throw $r18;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
