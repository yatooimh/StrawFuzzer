public class com.android.internal.util.ScreenshotHelper extends java.lang.Object
{
    public static final int SCREENSHOT_MSG_PROCESS_COMPLETE;
    public static final int SCREENSHOT_MSG_URI;
    private static final java.lang.String TAG;
    private final int SCREENSHOT_TIMEOUT_MS;
    private final android.content.Context mContext;
    private android.content.ServiceConnection mScreenshotConnection;
    private final java.lang.Object mScreenshotLock;
    private android.os.IBinder mScreenshotService;

    public void <init>(android.content.Context)
    {
        com.android.internal.util.ScreenshotHelper r0;
        android.content.Context r1;
        java.lang.Object $r2;

        r0 := @this: com.android.internal.util.ScreenshotHelper;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.util.ScreenshotHelper: int SCREENSHOT_TIMEOUT_MS> = 10000;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.util.ScreenshotHelper: java.lang.Object mScreenshotLock> = $r2;

        r0.<com.android.internal.util.ScreenshotHelper: android.os.IBinder mScreenshotService> = null;

        r0.<com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection mScreenshotConnection> = null;

        r0.<com.android.internal.util.ScreenshotHelper: android.content.Context mContext> = r1;

        return;
    }

    static java.lang.Object access$000(com.android.internal.util.ScreenshotHelper)
    {
        com.android.internal.util.ScreenshotHelper r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.internal.util.ScreenshotHelper;

        $r1 = r0.<com.android.internal.util.ScreenshotHelper: java.lang.Object mScreenshotLock>;

        return $r1;
    }

    static android.content.ServiceConnection access$100(com.android.internal.util.ScreenshotHelper)
    {
        com.android.internal.util.ScreenshotHelper r0;
        android.content.ServiceConnection $r1;

        r0 := @parameter0: com.android.internal.util.ScreenshotHelper;

        $r1 = r0.<com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection mScreenshotConnection>;

        return $r1;
    }

    static android.content.ServiceConnection access$102(com.android.internal.util.ScreenshotHelper, android.content.ServiceConnection)
    {
        com.android.internal.util.ScreenshotHelper r0;
        android.content.ServiceConnection r1;

        r0 := @parameter0: com.android.internal.util.ScreenshotHelper;

        r1 := @parameter1: android.content.ServiceConnection;

        r0.<com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection mScreenshotConnection> = r1;

        return r1;
    }

    static android.content.Context access$200(com.android.internal.util.ScreenshotHelper)
    {
        com.android.internal.util.ScreenshotHelper r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.internal.util.ScreenshotHelper;

        $r1 = r0.<com.android.internal.util.ScreenshotHelper: android.content.Context mContext>;

        return $r1;
    }

    static android.os.IBinder access$300(com.android.internal.util.ScreenshotHelper)
    {
        com.android.internal.util.ScreenshotHelper r0;
        android.os.IBinder $r1;

        r0 := @parameter0: com.android.internal.util.ScreenshotHelper;

        $r1 = r0.<com.android.internal.util.ScreenshotHelper: android.os.IBinder mScreenshotService>;

        return $r1;
    }

    static android.os.IBinder access$302(com.android.internal.util.ScreenshotHelper, android.os.IBinder)
    {
        com.android.internal.util.ScreenshotHelper r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.internal.util.ScreenshotHelper;

        r1 := @parameter1: android.os.IBinder;

        r0.<com.android.internal.util.ScreenshotHelper: android.os.IBinder mScreenshotService> = r1;

        return r1;
    }

    static void access$400(com.android.internal.util.ScreenshotHelper)
    {
        com.android.internal.util.ScreenshotHelper r0;

        r0 := @parameter0: com.android.internal.util.ScreenshotHelper;

        specialinvoke r0.<com.android.internal.util.ScreenshotHelper: void notifyScreenshotError()>();

        return;
    }

    private void notifyScreenshotError()
    {
        com.android.internal.util.ScreenshotHelper r0;
        android.content.ComponentName r1;
        android.content.Context $r3, $r10;
        android.content.res.Resources $r4;
        java.lang.String $r5;
        android.content.Intent $r6;
        android.os.UserHandle $r9;

        r0 := @this: com.android.internal.util.ScreenshotHelper;

        $r3 = r0.<com.android.internal.util.ScreenshotHelper: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039943);

        r1 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r5);

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_PRESENT");

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r1);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent addFlags(int)>(335544320);

        $r10 = r0.<com.android.internal.util.ScreenshotHelper: android.content.Context mContext>;

        $r9 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        virtualinvoke $r10.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r6, $r9);

        return;
    }

    private void takeScreenshot(int, long, android.os.Handler, com.android.internal.util.ScreenshotHelper$ScreenshotRequest, java.util.function.Consumer)
    {
        com.android.internal.util.ScreenshotHelper r0;
        int i0;
        long l1;
        java.util.function.Consumer r1;
        java.lang.Object r2;
        com.android.internal.util._$$Lambda$ScreenshotHelper$r9rp933Jt_vm9lU4BZ_gj9VY0YE r3;
        android.os.Looper $r4;
        android.content.ServiceConnection $r5, r22;
        android.content.Context $r6, $r11;
        android.content.res.Resources $r7;
        java.lang.String $r8, $r18;
        android.os.UserHandle $r10;
        boolean $z0;
        android.os.IBinder $r12, $r13;
        java.lang.Throwable $r14;
        android.os.RemoteException $r15;
        android.os.Handler r19;
        com.android.internal.util.ScreenshotHelper$ScreenshotRequest r20;
        android.os.Message r21;
        com.android.internal.util.ScreenshotHelper$1 r23;
        android.os.Messenger r24, r25;
        java.lang.StringBuilder r27;
        android.content.ComponentName r28;
        android.content.Intent r29;
        com.android.internal.util.ScreenshotHelper$2 r30;

        r0 := @this: com.android.internal.util.ScreenshotHelper;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r19 := @parameter2: android.os.Handler;

        r20 := @parameter3: com.android.internal.util.ScreenshotHelper$ScreenshotRequest;

        r1 := @parameter4: java.util.function.Consumer;

        r2 = r0.<com.android.internal.util.ScreenshotHelper: java.lang.Object mScreenshotLock>;

        entermonitor r2;

     label01:
        r3 = new com.android.internal.util._$$Lambda$ScreenshotHelper$r9rp933Jt_vm9lU4BZ_gj9VY0YE;

        specialinvoke r3.<com.android.internal.util._$$Lambda$ScreenshotHelper$r9rp933Jt_vm9lU4BZ_gj9VY0YE: void <init>(com.android.internal.util.ScreenshotHelper,java.util.function.Consumer)>(r0, r1);

        r21 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>(null, i0, r20);

        r22 = r0.<com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection mScreenshotConnection>;

        r23 = new com.android.internal.util.ScreenshotHelper$1;

        $r4 = virtualinvoke r19.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r23.<com.android.internal.util.ScreenshotHelper$1: void <init>(com.android.internal.util.ScreenshotHelper,android.os.Looper,java.util.function.Consumer,android.os.Handler,java.lang.Runnable,android.content.ServiceConnection)>(r0, $r4, r1, r19, r3, r22);

        r24 = new android.os.Messenger;

        specialinvoke r24.<android.os.Messenger: void <init>(android.os.Handler)>(r23);

        r21.<android.os.Message: android.os.Messenger replyTo> = r24;

        $r5 = r0.<com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection mScreenshotConnection>;

        if $r5 == null goto label12;

        $r12 = r0.<com.android.internal.util.ScreenshotHelper: android.os.IBinder mScreenshotService>;

        if $r12 != null goto label03;

     label02:
        goto label12;

     label03:
        r25 = new android.os.Messenger;

        $r13 = r0.<com.android.internal.util.ScreenshotHelper: android.os.IBinder mScreenshotService>;

        specialinvoke r25.<android.os.Messenger: void <init>(android.os.IBinder)>($r13);

     label04:
        virtualinvoke r25.<android.os.Messenger: void send(android.os.Message)>(r21);

     label05:
        goto label10;

     label06:
        $r15 := @caughtexception;

     label07:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t take screenshot: ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r18 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ScreenshotHelper", $r18);

     label08:
        if r1 == null goto label10;

     label09:
        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>(null);

     label10:
        virtualinvoke r19.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r3, l1);

     label11:
        goto label13;

     label12:
        $r6 = r0.<com.android.internal.util.ScreenshotHelper: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getString(int)>(17039944);

        r28 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r8);

        r29 = new android.content.Intent;

        specialinvoke r29.<android.content.Intent: void <init>()>();

        virtualinvoke r29.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r28);

        r30 = new com.android.internal.util.ScreenshotHelper$2;

        specialinvoke r30.<com.android.internal.util.ScreenshotHelper$2: void <init>(com.android.internal.util.ScreenshotHelper,android.os.Message,java.util.function.Consumer,android.os.Handler,java.lang.Runnable)>(r0, r21, r1, r19, r3);

        $r11 = r0.<com.android.internal.util.ScreenshotHelper: android.content.Context mContext>;

        $r10 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        $z0 = virtualinvoke $r11.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r29, r30, 67108865, $r10);

        if $z0 == 0 goto label13;

        r0.<com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection mScreenshotConnection> = r30;

        virtualinvoke r19.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r3, l1);

     label13:
        exitmonitor r2;

     label14:
        return;

     label15:
        $r14 := @caughtexception;

     label16:
        exitmonitor r2;

     label17:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void lambda$takeScreenshot$0$ScreenshotHelper(java.util.function.Consumer)
    {
        com.android.internal.util.ScreenshotHelper r0;
        java.lang.Object r1;
        android.content.ServiceConnection $r2, $r3;
        android.content.Context $r4;
        java.lang.Throwable $r5;
        java.util.function.Consumer r6;

        r0 := @this: com.android.internal.util.ScreenshotHelper;

        r6 := @parameter0: java.util.function.Consumer;

        r1 = r0.<com.android.internal.util.ScreenshotHelper: java.lang.Object mScreenshotLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection mScreenshotConnection>;

        if $r2 == null goto label2;

        $r4 = r0.<com.android.internal.util.ScreenshotHelper: android.content.Context mContext>;

        $r3 = r0.<com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection mScreenshotConnection>;

        virtualinvoke $r4.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r3);

        r0.<com.android.internal.util.ScreenshotHelper: android.content.ServiceConnection mScreenshotConnection> = null;

        r0.<com.android.internal.util.ScreenshotHelper: android.os.IBinder mScreenshotService> = null;

        specialinvoke r0.<com.android.internal.util.ScreenshotHelper: void notifyScreenshotError()>();

     label2:
        exitmonitor r1;

     label3:
        if r6 == null goto label4;

        interfaceinvoke r6.<java.util.function.Consumer: void accept(java.lang.Object)>(null);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void provideScreenshot(android.os.Bundle, android.graphics.Rect, android.graphics.Insets, int, int, android.content.ComponentName, int, android.os.Handler, java.util.function.Consumer)
    {
        com.android.internal.util.ScreenshotHelper r0;
        android.os.Bundle r1;
        android.graphics.Rect r2;
        android.graphics.Insets r3;
        int i0, i1, i2;
        android.content.ComponentName r4;
        android.os.Handler r5;
        java.util.function.Consumer r6;
        com.android.internal.util.ScreenshotHelper$ScreenshotRequest $r7;

        r0 := @this: com.android.internal.util.ScreenshotHelper;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Insets;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: android.content.ComponentName;

        i2 := @parameter6: int;

        r5 := @parameter7: android.os.Handler;

        r6 := @parameter8: java.util.function.Consumer;

        $r7 = new com.android.internal.util.ScreenshotHelper$ScreenshotRequest;

        specialinvoke $r7.<com.android.internal.util.ScreenshotHelper$ScreenshotRequest: void <init>(int,android.os.Bundle,android.graphics.Rect,android.graphics.Insets,int,int,android.content.ComponentName)>(i2, r1, r2, r3, i0, i1, r4);

        specialinvoke r0.<com.android.internal.util.ScreenshotHelper: void takeScreenshot(int,long,android.os.Handler,com.android.internal.util.ScreenshotHelper$ScreenshotRequest,java.util.function.Consumer)>(3, 10000L, r5, $r7, r6);

        return;
    }

    public void takeScreenshot(int, boolean, boolean, int, android.os.Handler, java.util.function.Consumer)
    {
        com.android.internal.util.ScreenshotHelper r0;
        int i0, i1;
        boolean z0, z1;
        android.os.Handler r1;
        java.util.function.Consumer r2;
        com.android.internal.util.ScreenshotHelper$ScreenshotRequest $r3;

        r0 := @this: com.android.internal.util.ScreenshotHelper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i1 := @parameter3: int;

        r1 := @parameter4: android.os.Handler;

        r2 := @parameter5: java.util.function.Consumer;

        $r3 = new com.android.internal.util.ScreenshotHelper$ScreenshotRequest;

        specialinvoke $r3.<com.android.internal.util.ScreenshotHelper$ScreenshotRequest: void <init>(int,boolean,boolean)>(i1, z0, z1);

        specialinvoke r0.<com.android.internal.util.ScreenshotHelper: void takeScreenshot(int,long,android.os.Handler,com.android.internal.util.ScreenshotHelper$ScreenshotRequest,java.util.function.Consumer)>(i0, 10000L, r1, $r3, r2);

        return;
    }

    public void takeScreenshot(int, boolean, boolean, long, android.os.Handler, java.util.function.Consumer)
    {
        com.android.internal.util.ScreenshotHelper r0;
        int i0;
        boolean z0, z1;
        long l1;
        android.os.Handler r1;
        java.util.function.Consumer r2;
        com.android.internal.util.ScreenshotHelper$ScreenshotRequest $r3;

        r0 := @this: com.android.internal.util.ScreenshotHelper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        l1 := @parameter3: long;

        r1 := @parameter4: android.os.Handler;

        r2 := @parameter5: java.util.function.Consumer;

        $r3 = new com.android.internal.util.ScreenshotHelper$ScreenshotRequest;

        specialinvoke $r3.<com.android.internal.util.ScreenshotHelper$ScreenshotRequest: void <init>(int,boolean,boolean)>(5, z0, z1);

        specialinvoke r0.<com.android.internal.util.ScreenshotHelper: void takeScreenshot(int,long,android.os.Handler,com.android.internal.util.ScreenshotHelper$ScreenshotRequest,java.util.function.Consumer)>(i0, l1, r1, $r3, r2);

        return;
    }

    public void takeScreenshot(int, boolean, boolean, android.os.Handler, java.util.function.Consumer)
    {
        com.android.internal.util.ScreenshotHelper r0;
        int i0;
        boolean z0, z1;
        android.os.Handler r1;
        java.util.function.Consumer r2;

        r0 := @this: com.android.internal.util.ScreenshotHelper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: android.os.Handler;

        r2 := @parameter4: java.util.function.Consumer;

        virtualinvoke r0.<com.android.internal.util.ScreenshotHelper: void takeScreenshot(int,boolean,boolean,int,android.os.Handler,java.util.function.Consumer)>(i0, z0, z1, 10000, r1, r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.util.ScreenshotHelper: java.lang.String TAG> = "ScreenshotHelper";

        <com.android.internal.util.ScreenshotHelper: int SCREENSHOT_MSG_URI> = 1;

        <com.android.internal.util.ScreenshotHelper: int SCREENSHOT_MSG_PROCESS_COMPLETE> = 2;

        return;
    }
}
