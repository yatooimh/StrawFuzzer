public class com.android.internal.util.StatLogger extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final int SIZE;
    private final int[] mCallsPerSecond;
    private final int[] mCountStats;
    private final long[] mDurationPerSecond;
    private final long[] mDurationStats;
    private final java.lang.String[] mLabels;
    private final java.lang.Object mLock;
    private final int[] mMaxCallsPerSecond;
    private final long[] mMaxDurationPerSecond;
    private final long[] mMaxDurationStats;
    private long mNextTickTime;

    public void <init>(java.lang.String[])
    {
        com.android.internal.util.StatLogger r0;
        java.lang.String[] r1;
        int i0;
        java.lang.Object $r2;
        long $l1, $l2;
        int[] $r3, $r5, $r6;
        long[] $r4, $r7, $r8, $r9;

        r0 := @this: com.android.internal.util.StatLogger;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.util.StatLogger: java.lang.Object mLock> = $r2;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l1 + 1000L;

        r0.<com.android.internal.util.StatLogger: long mNextTickTime> = $l2;

        i0 = lengthof r1;

        r0.<com.android.internal.util.StatLogger: int SIZE> = i0;

        $r3 = newarray (int)[i0];

        r0.<com.android.internal.util.StatLogger: int[] mCountStats> = $r3;

        $r4 = newarray (long)[i0];

        r0.<com.android.internal.util.StatLogger: long[] mDurationStats> = $r4;

        $r5 = newarray (int)[i0];

        r0.<com.android.internal.util.StatLogger: int[] mCallsPerSecond> = $r5;

        $r6 = newarray (int)[i0];

        r0.<com.android.internal.util.StatLogger: int[] mMaxCallsPerSecond> = $r6;

        $r7 = newarray (long)[i0];

        r0.<com.android.internal.util.StatLogger: long[] mDurationPerSecond> = $r7;

        $r8 = newarray (long)[i0];

        r0.<com.android.internal.util.StatLogger: long[] mMaxDurationPerSecond> = $r8;

        $r9 = newarray (long)[i0];

        r0.<com.android.internal.util.StatLogger: long[] mMaxDurationStats> = $r9;

        r0.<com.android.internal.util.StatLogger: java.lang.String[] mLabels> = r1;

        return;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.internal.util.StatLogger r0;
        java.lang.Object r1;
        int i0, $i1, $i3, i6;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        java.lang.String r2, $r18;
        int[] $r5, $r12;
        long[] $r6, $r14, $r16;
        long $l2, $l4, $l5;
        java.lang.String[] $r7;
        java.lang.Object[] $r8;
        java.lang.Integer $r9, $r13;
        java.lang.Double $r10, $r11, $r15, $r17;
        java.lang.Throwable $r19;
        com.android.internal.util.IndentingPrintWriter r20;

        r0 := @this: com.android.internal.util.StatLogger;

        r20 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r1 = r0.<com.android.internal.util.StatLogger: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        virtualinvoke r20.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Stats:");

        virtualinvoke r20.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

     label02:
        i6 = 0;

     label03:
        $i1 = r0.<com.android.internal.util.StatLogger: int SIZE>;

        if i6 >= $i1 goto label08;

        $r5 = r0.<com.android.internal.util.StatLogger: int[] mCountStats>;

        i0 = $r5[i6];

        $r6 = r0.<com.android.internal.util.StatLogger: long[] mDurationStats>;

        $l2 = $r6[i6];

        $d1 = (double) $l2;

        d0 = $d1 / 1000.0;

        $r7 = r0.<com.android.internal.util.StatLogger: java.lang.String[] mLabels>;

        r2 = $r7[i6];

     label04:
        if i0 != 0 goto label05;

        d7 = 0.0;

        goto label06;

     label05:
        $d2 = (double) i0;

        d7 = d0 / $d2;

     label06:
        $r8 = newarray (java.lang.Object)[7];

        $r8[0] = r2;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[1] = $r9;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r8[2] = $r10;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d7);

        $r8[3] = $r11;

        $r12 = r0.<com.android.internal.util.StatLogger: int[] mMaxCallsPerSecond>;

        $i3 = $r12[i6];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r8[4] = $r13;

        $r14 = r0.<com.android.internal.util.StatLogger: long[] mMaxDurationPerSecond>;

        $l4 = $r14[i6];

        $d3 = (double) $l4;

        $d4 = $d3 / 1000.0;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $r8[5] = $r15;

        $r16 = r0.<com.android.internal.util.StatLogger: long[] mMaxDurationStats>;

        $l5 = $r16[i6];

        $d5 = (double) $l5;

        $d6 = $d5 / 1000.0;

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        $r8[6] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: count=%d, total=%.1fms, avg=%.3fms, max calls/s=%d max dur/s=%.1fms max time=%.1fms", $r8);

        virtualinvoke r20.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r18);

     label07:
        i6 = i6 + 1;

        goto label03;

     label08:
        virtualinvoke r20.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        exitmonitor r1;

     label09:
        return;

     label10:
        $r19 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.internal.util.StatLogger r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        com.android.internal.util.IndentingPrintWriter $r3, $r4;

        r0 := @this: com.android.internal.util.StatLogger;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r3 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r1, "  ");

        $r4 = virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter setIndent(java.lang.String)>(r2);

        virtualinvoke r0.<com.android.internal.util.StatLogger: void dump(com.android.internal.util.IndentingPrintWriter)>($r4);

        return;
    }

    public void dumpProto(android.util.proto.ProtoOutputStream, long)
    {
        com.android.internal.util.StatLogger r0;
        java.lang.Object r1;
        long l0, $l3, $l5, $l6, l7, l9;
        java.lang.String[] $r2, $r3;
        int $i1, $i2, $i4, i8;
        java.lang.String $r4;
        int[] $r5, $r7;
        long[] $r6, $r8, $r9;
        java.lang.Throwable $r10;
        android.util.proto.ProtoOutputStream r11;

        r0 := @this: com.android.internal.util.StatLogger;

        r11 := @parameter0: android.util.proto.ProtoOutputStream;

        l7 := @parameter1: long;

        r1 = r0.<com.android.internal.util.StatLogger: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        l0 = virtualinvoke r11.<android.util.proto.ProtoOutputStream: long start(long)>(l7);

     label2:
        i8 = 0;

     label3:
        $r2 = r0.<com.android.internal.util.StatLogger: java.lang.String[] mLabels>;

        $i1 = lengthof $r2;

        if i8 >= $i1 goto label5;

        l9 = virtualinvoke r11.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895809L);

        virtualinvoke r11.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, i8);

        $r3 = r0.<com.android.internal.util.StatLogger: java.lang.String[] mLabels>;

        $r4 = $r3[i8];

        virtualinvoke r11.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r4);

        $r5 = r0.<com.android.internal.util.StatLogger: int[] mCountStats>;

        $i2 = $r5[i8];

        virtualinvoke r11.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i2);

        $r6 = r0.<com.android.internal.util.StatLogger: long[] mDurationStats>;

        $l3 = $r6[i8];

        virtualinvoke r11.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529668L, $l3);

        $r7 = r0.<com.android.internal.util.StatLogger: int[] mMaxCallsPerSecond>;

        $i4 = $r7[i8];

        virtualinvoke r11.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464261L, $i4);

        $r8 = r0.<com.android.internal.util.StatLogger: long[] mMaxDurationPerSecond>;

        $l5 = $r8[i8];

        virtualinvoke r11.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529670L, $l5);

        $r9 = r0.<com.android.internal.util.StatLogger: long[] mMaxDurationStats>;

        $l6 = $r9[i8];

        virtualinvoke r11.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529671L, $l6);

        virtualinvoke r11.<android.util.proto.ProtoOutputStream: void end(long)>(l9);

     label4:
        i8 = i8 + 1;

        goto label3;

     label5:
        virtualinvoke r11.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r10 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public long getTime()
    {
        com.android.internal.util.StatLogger r0;
        long $l0, $l1;

        r0 := @this: com.android.internal.util.StatLogger;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        $l1 = $l0 / 1000L;

        return $l1;
    }

    public long logDurationStat(int, long)
    {
        com.android.internal.util.StatLogger r0;
        int i0, $i4, $i5, $i6, $i13, $i14, $i20, $i23, $i24;
        java.lang.Object r1;
        long l1, $l2, $l7, $l8, $l9, $l11, $l15, $l16, $l18, $l19, l21, l22, $l25, $l26;
        java.lang.String $r4;
        long[] $r5, $r8, $r9, $r11, $r12, $r13, $r16, r19, r21;
        byte $b10, $b12, $b17;
        int[] $r6, $r7, $r10, $r14, $r15, r18, r20;
        java.lang.Throwable $r17;
        java.lang.StringBuilder r22;

        r0 := @this: com.android.internal.util.StatLogger;

        i0 := @parameter0: int;

        l21 := @parameter1: long;

        r1 = r0.<com.android.internal.util.StatLogger: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $l2 = virtualinvoke r0.<com.android.internal.util.StatLogger: long getTime()>();

        l1 = $l2 - l21;

     label02:
        if i0 < 0 goto label17;

     label03:
        $i4 = r0.<com.android.internal.util.StatLogger: int SIZE>;

        if i0 >= $i4 goto label17;

        r18 = r0.<com.android.internal.util.StatLogger: int[] mCountStats>;

     label04:
        $i5 = r18[i0];

        $i6 = $i5 + 1;

        r18[i0] = $i6;

     label05:
        r19 = r0.<com.android.internal.util.StatLogger: long[] mDurationStats>;

     label06:
        $l7 = r19[i0];

        $l8 = $l7 + l1;

        r19[i0] = $l8;

     label07:
        $r5 = r0.<com.android.internal.util.StatLogger: long[] mMaxDurationStats>;

        $l9 = $r5[i0];

        $b10 = $l9 cmp l1;

        if $b10 >= 0 goto label08;

        $r16 = r0.<com.android.internal.util.StatLogger: long[] mMaxDurationStats>;

        $r16[i0] = l1;

     label08:
        l22 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l11 = r0.<com.android.internal.util.StatLogger: long mNextTickTime>;

        $b12 = l22 cmp $l11;

        if $b12 <= 0 goto label11;

        $r6 = r0.<com.android.internal.util.StatLogger: int[] mMaxCallsPerSecond>;

        $i14 = $r6[i0];

        $r7 = r0.<com.android.internal.util.StatLogger: int[] mCallsPerSecond>;

        $i13 = $r7[i0];

        if $i14 >= $i13 goto label09;

        $r15 = r0.<com.android.internal.util.StatLogger: int[] mMaxCallsPerSecond>;

        $r14 = r0.<com.android.internal.util.StatLogger: int[] mCallsPerSecond>;

        $i20 = $r14[i0];

        $r15[i0] = $i20;

     label09:
        $r8 = r0.<com.android.internal.util.StatLogger: long[] mMaxDurationPerSecond>;

        $l16 = $r8[i0];

        $r9 = r0.<com.android.internal.util.StatLogger: long[] mDurationPerSecond>;

        $l15 = $r9[i0];

        $b17 = $l16 cmp $l15;

        if $b17 >= 0 goto label10;

        $r13 = r0.<com.android.internal.util.StatLogger: long[] mMaxDurationPerSecond>;

        $r12 = r0.<com.android.internal.util.StatLogger: long[] mDurationPerSecond>;

        $l19 = $r12[i0];

        $r13[i0] = $l19;

     label10:
        $r10 = r0.<com.android.internal.util.StatLogger: int[] mCallsPerSecond>;

        $r10[i0] = 0;

        $r11 = r0.<com.android.internal.util.StatLogger: long[] mDurationPerSecond>;

        $r11[i0] = 0L;

        $l18 = 1000L + l22;

        r0.<com.android.internal.util.StatLogger: long mNextTickTime> = $l18;

     label11:
        r20 = r0.<com.android.internal.util.StatLogger: int[] mCallsPerSecond>;

     label12:
        $i23 = r20[i0];

        $i24 = $i23 + 1;

        r20[i0] = $i24;

     label13:
        r21 = r0.<com.android.internal.util.StatLogger: long[] mDurationPerSecond>;

     label14:
        $l25 = r21[i0];

        $l26 = $l25 + l1;

        r21[i0] = $l26;

     label15:
        exitmonitor r1;

     label16:
        return l1;

     label17:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid event ID: ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("StatLogger", $r4);

        exitmonitor r1;

     label18:
        return l1;

     label19:
        $r17 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public static void <clinit>()
    {
        <com.android.internal.util.StatLogger: java.lang.String TAG> = "StatLogger";

        return;
    }
}
