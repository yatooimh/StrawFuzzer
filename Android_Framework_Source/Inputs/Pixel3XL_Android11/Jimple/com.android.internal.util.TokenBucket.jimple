public class com.android.internal.util.TokenBucket extends java.lang.Object
{
    private int mAvailable;
    private final int mCapacity;
    private final int mFillDelta;
    private long mLastFill;

    public void <init>(int, int)
    {
        com.android.internal.util.TokenBucket r0;
        int i0, i1;

        r0 := @this: com.android.internal.util.TokenBucket;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.internal.util.TokenBucket: void <init>(int,int,int)>(i0, i1, i1);

        return;
    }

    public void <init>(int, int, int)
    {
        com.android.internal.util.TokenBucket r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        long $l8;

        r0 := @this: com.android.internal.util.TokenBucket;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i3 = staticinvoke <com.android.internal.util.Preconditions: int checkArgumentPositive(int,java.lang.String)>(i0, "deltaMs must be strictly positive");

        r0.<com.android.internal.util.TokenBucket: int mFillDelta> = $i3;

        $i4 = staticinvoke <com.android.internal.util.Preconditions: int checkArgumentPositive(int,java.lang.String)>(i1, "capacity must be strictly positive");

        r0.<com.android.internal.util.TokenBucket: int mCapacity> = $i4;

        $i5 = staticinvoke <com.android.internal.util.Preconditions: int checkArgumentNonnegative(int)>(i2);

        $i6 = r0.<com.android.internal.util.TokenBucket: int mCapacity>;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

        r0.<com.android.internal.util.TokenBucket: int mAvailable> = $i7;

        $l8 = specialinvoke r0.<com.android.internal.util.TokenBucket: long scaledTime()>();

        r0.<com.android.internal.util.TokenBucket: long mLastFill> = $l8;

        return;
    }

    private void fill()
    {
        com.android.internal.util.TokenBucket r0;
        long l0, $l2, $l3;
        int i1, $i4, $i5, $i6, $i7;

        r0 := @this: com.android.internal.util.TokenBucket;

        l0 = specialinvoke r0.<com.android.internal.util.TokenBucket: long scaledTime()>();

        $l2 = r0.<com.android.internal.util.TokenBucket: long mLastFill>;

        $l3 = l0 - $l2;

        i1 = (int) $l3;

        $i6 = r0.<com.android.internal.util.TokenBucket: int mCapacity>;

        $i4 = r0.<com.android.internal.util.TokenBucket: int mAvailable>;

        $i5 = $i4 + i1;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i5);

        r0.<com.android.internal.util.TokenBucket: int mAvailable> = $i7;

        r0.<com.android.internal.util.TokenBucket: long mLastFill> = l0;

        return;
    }

    private long scaledTime()
    {
        com.android.internal.util.TokenBucket r0;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: com.android.internal.util.TokenBucket;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $i1 = r0.<com.android.internal.util.TokenBucket: int mFillDelta>;

        $l2 = (long) $i1;

        $l3 = $l0 / $l2;

        return $l3;
    }

    public int available()
    {
        com.android.internal.util.TokenBucket r0;
        int $i0;

        r0 := @this: com.android.internal.util.TokenBucket;

        specialinvoke r0.<com.android.internal.util.TokenBucket: void fill()>();

        $i0 = r0.<com.android.internal.util.TokenBucket: int mAvailable>;

        return $i0;
    }

    public int capacity()
    {
        com.android.internal.util.TokenBucket r0;
        int $i0;

        r0 := @this: com.android.internal.util.TokenBucket;

        $i0 = r0.<com.android.internal.util.TokenBucket: int mCapacity>;

        return $i0;
    }

    public int get(int)
    {
        com.android.internal.util.TokenBucket r0;
        int i0, $i1, i2, i3;

        r0 := @this: com.android.internal.util.TokenBucket;

        i2 := @parameter0: int;

        specialinvoke r0.<com.android.internal.util.TokenBucket: void fill()>();

        if i2 > 0 goto label1;

        return 0;

     label1:
        i0 = r0.<com.android.internal.util.TokenBucket: int mAvailable>;

        if i2 <= i0 goto label2;

        i3 = r0.<com.android.internal.util.TokenBucket: int mAvailable>;

        r0.<com.android.internal.util.TokenBucket: int mAvailable> = 0;

        return i3;

     label2:
        $i1 = i0 - i2;

        r0.<com.android.internal.util.TokenBucket: int mAvailable> = $i1;

        return i2;
    }

    public boolean get()
    {
        com.android.internal.util.TokenBucket r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.util.TokenBucket;

        z0 = 1;

        $i0 = virtualinvoke r0.<com.android.internal.util.TokenBucket: int get(int)>(1);

        if $i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean has()
    {
        com.android.internal.util.TokenBucket r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.util.TokenBucket;

        specialinvoke r0.<com.android.internal.util.TokenBucket: void fill()>();

        $i0 = r0.<com.android.internal.util.TokenBucket: int mAvailable>;

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void reset(int)
    {
        com.android.internal.util.TokenBucket r0;
        int i0, $i2, $i3;
        long $l4;

        r0 := @this: com.android.internal.util.TokenBucket;

        i0 := @parameter0: int;

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentNonnegative(int)>(i0);

        $i2 = r0.<com.android.internal.util.TokenBucket: int mCapacity>;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i2);

        r0.<com.android.internal.util.TokenBucket: int mAvailable> = $i3;

        $l4 = specialinvoke r0.<com.android.internal.util.TokenBucket: long scaledTime()>();

        r0.<com.android.internal.util.TokenBucket: long mLastFill> = $l4;

        return;
    }
}
