class com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider extends java.lang.Object implements com.android.internal.util.TraceBuffer$ProtoProvider
{

    private void <init>()
    {
        com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider r0;

        r0 := @this: com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.internal.util.TraceBuffer$1)
    {
        com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider r0;
        com.android.internal.util.TraceBuffer$1 r1;

        r0 := @this: com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider;

        r1 := @parameter0: com.android.internal.util.TraceBuffer$1;

        specialinvoke r0.<com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider: void <init>()>();

        return;
    }

    public byte[] getBytes(android.util.proto.ProtoOutputStream)
    {
        com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider r0;
        android.util.proto.ProtoOutputStream r1;
        byte[] $r2;

        r0 := @this: com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        $r2 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: byte[] getBytes()>();

        return $r2;
    }

    public volatile byte[] getBytes(java.lang.Object)
    {
        com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider r0;
        java.lang.Object r1;
        android.util.proto.ProtoOutputStream $r2;
        byte[] $r3;

        r0 := @this: com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.util.proto.ProtoOutputStream) r1;

        $r3 = virtualinvoke r0.<com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider: byte[] getBytes(android.util.proto.ProtoOutputStream)>($r2);

        return $r3;
    }

    public int getItemSize(android.util.proto.ProtoOutputStream)
    {
        com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider r0;
        android.util.proto.ProtoOutputStream r1;
        int $i0;

        r0 := @this: com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        $i0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: int getRawSize()>();

        return $i0;
    }

    public volatile int getItemSize(java.lang.Object)
    {
        com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider r0;
        java.lang.Object r1;
        android.util.proto.ProtoOutputStream $r2;
        int $i0;

        r0 := @this: com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.util.proto.ProtoOutputStream) r1;

        $i0 = virtualinvoke r0.<com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider: int getItemSize(android.util.proto.ProtoOutputStream)>($r2);

        return $i0;
    }

    public void write(android.util.proto.ProtoOutputStream, java.util.Queue, java.io.OutputStream) throws java.io.IOException
    {
        com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider r0;
        java.util.Queue r1;
        java.io.OutputStream r2;
        byte[] $r3, $r6;
        boolean $z0;
        java.lang.Object $r4;
        android.util.proto.ProtoOutputStream $r5, r7;
        java.util.Iterator r8;

        r0 := @this: com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider;

        r7 := @parameter0: android.util.proto.ProtoOutputStream;

        r1 := @parameter1: java.util.Queue;

        r2 := @parameter2: java.io.OutputStream;

        $r3 = virtualinvoke r7.<android.util.proto.ProtoOutputStream: byte[] getBytes()>();

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r3);

        r8 = interfaceinvoke r1.<java.util.Queue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.util.proto.ProtoOutputStream) $r4;

        $r6 = virtualinvoke $r5.<android.util.proto.ProtoOutputStream: byte[] getBytes()>();

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r6);

        goto label1;

     label2:
        return;
    }

    public volatile void write(java.lang.Object, java.util.Queue, java.io.OutputStream) throws java.io.IOException
    {
        com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider r0;
        java.lang.Object r1;
        java.util.Queue r2;
        java.io.OutputStream r3;
        android.util.proto.ProtoOutputStream $r4;

        r0 := @this: com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Queue;

        r3 := @parameter2: java.io.OutputStream;

        $r4 = (android.util.proto.ProtoOutputStream) r1;

        virtualinvoke r0.<com.android.internal.util.TraceBuffer$ProtoOutputStreamProvider: void write(android.util.proto.ProtoOutputStream,java.util.Queue,java.io.OutputStream)>($r4, r2, r3);

        return;
    }
}
