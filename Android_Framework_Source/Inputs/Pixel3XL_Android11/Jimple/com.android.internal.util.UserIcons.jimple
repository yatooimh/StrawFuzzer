public class com.android.internal.util.UserIcons extends java.lang.Object
{
    private static final int[] USER_ICON_COLORS;

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[8];

        $r0[0] = 17171012;

        $r0[1] = 17171013;

        $r0[2] = 17171014;

        $r0[3] = 17171015;

        $r0[4] = 17171016;

        $r0[5] = 17171017;

        $r0[6] = 17171018;

        $r0[7] = 17171019;

        <com.android.internal.util.UserIcons: int[] USER_ICON_COLORS> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.internal.util.UserIcons r0;

        r0 := @this: com.android.internal.util.UserIcons;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Bitmap convertToBitmap(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        int i0, i1;
        android.graphics.Bitmap r1;
        android.graphics.Bitmap$Config $r3;
        android.graphics.Canvas $r4;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r3);

        $r4 = new android.graphics.Canvas;

        specialinvoke $r4.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r1);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i1);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r4);

        return r1;
    }

    public static android.graphics.drawable.Drawable getDefaultUserIcon(android.content.res.Resources, int, boolean)
    {
        android.content.res.Resources r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        boolean z0;
        android.graphics.drawable.Drawable $r1, r4;
        android.graphics.PorterDuff$Mode $r2;
        int[] r3;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        i6 = 17171021;

        goto label2;

     label1:
        i6 = 17171020;

     label2:
        if i0 == -10000 goto label3;

        r3 = <com.android.internal.util.UserIcons: int[] USER_ICON_COLORS>;

        $i4 = lengthof r3;

        $i5 = i0 % $i4;

        i6 = r3[$i5];

     label3:
        $r1 = virtualinvoke r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(17302298, null);

        r4 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $i1 = virtualinvoke r0.<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)>(i6, null);

        $r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i1, $r2);

        $i2 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

        return r4;
    }
}
