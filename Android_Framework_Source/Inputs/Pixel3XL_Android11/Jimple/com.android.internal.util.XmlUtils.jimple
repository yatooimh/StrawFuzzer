public class com.android.internal.util.XmlUtils extends java.lang.Object
{
    private static final java.lang.String STRING_ARRAY_SEPARATOR;

    public void <init>()
    {
        com.android.internal.util.XmlUtils r0;

        r0 := @this: com.android.internal.util.XmlUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void beginDocument(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r4, $r7, $r12;
        int i0;
        boolean $z0;
        java.lang.StringBuilder r13;
        org.xmlpull.v1.XmlPullParserException r14, r15;
        java.lang.Throwable r16, r17;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

     label1:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        if i0 != 2 goto label4;

        $r4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return;

     label3:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag: found ");

        $r7 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r14 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        r16 = (java.lang.Throwable) r14;

        throw r16;

     label4:
        r15 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        r17 = (java.lang.Throwable) r15;

        throw r17;
    }

    public static final boolean convertValueToBoolean(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence r0;
        boolean $z1, $z2, $z3, $z4, z5, z6;

        r0 := @parameter0: java.lang.CharSequence;

        z5 := @parameter1: boolean;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z1 == 0 goto label1;

        return z5;

     label1:
        $z2 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>("1");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>("true");

        if $z3 != 0 goto label2;

        z6 = 0;

        $z4 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>("TRUE");

        if $z4 == 0 goto label3;

     label2:
        z6 = 1;

     label3:
        return z6;
    }

    public static final int convertValueToInt(java.lang.CharSequence, int)
    {
        boolean $z0;
        char $c0, $c1, $c2, c10;
        int $i3, $i4, i5, i7, i8, i11, $i12, $i13;
        java.lang.CharSequence r0;
        java.lang.String r1, $r2;
        byte b6, b9;

        r0 := @parameter0: java.lang.CharSequence;

        i5 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return i5;

     label1:
        r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        b6 = 1;

        i7 = 0;

        i8 = virtualinvoke r1.<java.lang.String: int length()>();

        b9 = 10;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if 45 != $c0 goto label2;

        b6 = -1;

        i7 = 0 + 1;

     label2:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        if 48 != $c1 goto label7;

        $i3 = i8 - 1;

        if i7 != $i3 goto label3;

        return 0;

     label3:
        $i4 = i7 + 1;

        c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        if 120 == c10 goto label5;

        if 88 != c10 goto label4;

        goto label5;

     label4:
        i11 = i7 + 1;

        b9 = 8;

        goto label6;

     label5:
        i11 = i7 + 2;

        b9 = 16;

     label6:
        goto label8;

     label7:
        i11 = i7;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        if 35 != $c2 goto label8;

        i11 = i7 + 1;

        b9 = 16;

     label8:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i11);

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, b9);

        $i13 = $i12 * b6;

        return $i13;
    }

    public static final int convertValueToList(java.lang.CharSequence, java.lang.String[], int)
    {
        java.lang.CharSequence r0;
        java.lang.String[] r1;
        int i0, $i1, i2;
        boolean $z0, $z1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label3;

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label3;

        $r2 = r1[i2];

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return i0;
    }

    public static int convertValueToUnsignedInt(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return i0;

     label1:
        $i1 = staticinvoke <com.android.internal.util.XmlUtils: int parseUnsignedIntAttribute(java.lang.CharSequence)>(r0);

        return $i1;
    }

    public static final void nextElement(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        return;
    }

    public static boolean nextElementWithin(org.xmlpull.v1.XmlPullParser, int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

     label1:
        i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label4;

        if i1 != 3 goto label2;

        $i4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 != i0 goto label2;

        goto label4;

     label2:
        if i1 != 2 goto label3;

        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i3 = i0 + 1;

        if $i2 != $i3 goto label3;

        return 1;

     label3:
        goto label1;

     label4:
        return 0;
    }

    public static int parseUnsignedIntAttribute(java.lang.CharSequence)
    {
        int i0, $i3, $i4, i5, $i9;
        char $c1, $c2, c7;
        java.lang.CharSequence r0;
        java.lang.String r1, $r2;
        byte b6;
        long $l8;

        r0 := @parameter0: java.lang.CharSequence;

        r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        i5 = 0;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        b6 = 10;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if 48 != $c1 goto label4;

        $i3 = i0 - 1;

        if $i3 != 0 goto label1;

        return 0;

     label1:
        $i4 = 0 + 1;

        c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        if 120 == c7 goto label3;

        if 88 != c7 goto label2;

        goto label3;

     label2:
        i5 = 0 + 1;

        b6 = 8;

        goto label5;

     label3:
        i5 = 0 + 2;

        b6 = 16;

        goto label5;

     label4:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if 35 != $c2 goto label5;

        i5 = 0 + 1;

        b6 = 16;

        goto label5;

     label5:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i5);

        $l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r2, b6);

        $i9 = (int) $l8;

        return $i9;
    }

    public static android.graphics.Bitmap readBitmapAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        android.graphics.Bitmap $r1;
        org.xmlpull.v1.XmlPullParser r2;
        byte[] r3;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r3 = staticinvoke <com.android.internal.util.XmlUtils: byte[] readByteArrayAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, r0);

        if r3 == null goto label1;

        $i0 = lengthof r3;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>(r3, 0, $i0);

        return $r1;

     label1:
        return null;
    }

    public static boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2);

        return $z0;
    }

    public static boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, boolean)
    {
        java.lang.String r0, r2;
        boolean z0, $z1, $z2;
        org.xmlpull.v1.XmlPullParser r1;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label1;

        return z0;

     label1:
        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);

        return $z2;
    }

    public static byte[] readByteArrayAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        java.lang.String r0, r3;
        boolean $z0;
        byte[] $r1;
        org.xmlpull.v1.XmlPullParser r2;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r3, 0);

        return $r1;

     label1:
        return null;
    }

    public static float readFloatAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r9, r11;
        float f0;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        java.net.ProtocolException $r8;
        org.xmlpull.v1.XmlPullParser r10;

        r10 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r11 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

     label1:
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r11);

     label2:
        return f0;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as long");

        $r8 = new java.net.ProtocolException;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.net.ProtocolException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int readIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r9, r11;
        int i0;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        java.net.ProtocolException $r8;
        org.xmlpull.v1.XmlPullParser r10;

        r10 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r11 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r11);

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as int");

        $r8 = new java.net.ProtocolException;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.net.ProtocolException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int readIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        java.lang.String r0, r3;
        int i0, i1;
        boolean $z0;
        java.lang.Throwable $r1;
        org.xmlpull.v1.XmlPullParser r2;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label1;

        return i0;

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        return i1;

     label3:
        $r1 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static final java.util.ArrayList readListXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.nio.charset.Charset $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        java.lang.Object $r5;
        java.util.ArrayList $r6;

        r0 := @parameter0: java.io.InputStream;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, $r3);

        $r4 = newarray (java.lang.String)[1];

        $r5 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r1, $r4);

        $r6 = (java.util.ArrayList) $r5;

        return $r6;
    }

    public static long readLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r9, r11;
        long l0;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        java.net.ProtocolException $r8;
        org.xmlpull.v1.XmlPullParser r10;

        r10 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r11 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

     label1:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r11);

     label2:
        return l0;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as long");

        $r8 = new java.net.ProtocolException;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.net.ProtocolException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long readLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, long)
    {
        java.lang.String r0, r3;
        long l0, l1;
        boolean $z0;
        java.lang.Throwable $r1;
        org.xmlpull.v1.XmlPullParser r2;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label1;

        return l0;

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

     label2:
        return l1;

     label3:
        $r1 := @caughtexception;

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static final java.util.HashMap readMapXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.nio.charset.Charset $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        java.lang.Object $r5;
        java.util.HashMap $r6;

        r0 := @parameter0: java.io.InputStream;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, $r3);

        $r4 = newarray (java.lang.String)[1];

        $r5 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r1, $r4);

        $r6 = (java.util.HashMap) $r5;

        return $r6;
    }

    public static final java.util.HashSet readSetXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String[] $r2;
        java.lang.Object $r3;
        java.util.HashSet $r4;

        r0 := @parameter0: java.io.InputStream;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, null);

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r1, $r2);

        $r4 = (java.util.HashSet) $r3;

        return $r4;
    }

    public static java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        return $r2;
    }

    public static final android.util.ArrayMap readThisArrayMapXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[], com.android.internal.util.XmlUtils$ReadMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String r0, $r10, $r11, $r16, $r19, $r20;
        com.android.internal.util.XmlUtils$ReadMapCallback r1;
        java.lang.Object r3;
        boolean $z0;
        org.xmlpull.v1.XmlPullParser r22;
        java.lang.String[] r23;
        int i0;
        android.util.ArrayMap r26;
        java.lang.StringBuilder r27, r29;
        org.xmlpull.v1.XmlPullParserException r28, r30;
        java.lang.Throwable r31, r32;

        r22 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r23 := @parameter2: java.lang.String[];

        r1 := @parameter3: com.android.internal.util.XmlUtils$ReadMapCallback;

        r26 = new android.util.ArrayMap;

        specialinvoke r26.<android.util.ArrayMap: void <init>()>();

        i0 = interfaceinvoke r22.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label2;

        r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean)>(r22, r23, r1, 1);

        $r20 = r23[0];

        virtualinvoke r26.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r3);

        goto label4;

     label2:
        if i0 != 3 goto label4;

        $r11 = interfaceinvoke r22.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        return r26;

     label3:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r16 = interfaceinvoke r22.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        r28 = new org.xmlpull.v1.XmlPullParserException;

        $r19 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r19);

        r31 = (java.lang.Throwable) r28;

        throw r31;

     label4:
        i0 = interfaceinvoke r22.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 1 goto label5;

        goto label1;

     label5:
        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        r30 = new org.xmlpull.v1.XmlPullParserException;

        $r10 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r10);

        r32 = (java.lang.Throwable) r30;

        throw r32;
    }

    public static final boolean[] readThisBooleanArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String $r0, $r6, $r7, $r8, $r13, $r16, $r17, $r20, $r23, $r24, r34;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r25, $r27, r54, r55, r56, r57, r58, r59, r60;
        java.lang.NullPointerException $r29, $r31;
        org.xmlpull.v1.XmlPullParser r33;
        java.lang.String[] r35;
        int i1, i2, i3, i4;
        boolean[] r36;
        org.xmlpull.v1.XmlPullParserException r44, r45, r47, r49, r51, r52, r53;
        java.lang.StringBuilder r46, r48, r50;

        r33 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r34 := @parameter1: java.lang.String;

        r35 := @parameter2: java.lang.String[];

     label01:
        $r0 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label02:
        interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int next()>();

        r36 = newarray (boolean)[i1];

        i2 = 0;

        i3 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label03:
        if i3 != 2 goto label09;

        $r17 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 == 0 goto label08;

     label04:
        $r24 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $z3 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r24);

        r36[i2] = $z3;

     label05:
        i4 = i2;

        goto label12;

     label06:
        $r25 := @caughtexception;

        r44 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r44.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in value attribute in item");

        r54 = (java.lang.Throwable) r44;

        throw r54;

     label07:
        $r31 := @caughtexception;

        r45 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r45.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need value attribute in item");

        r55 = (java.lang.Throwable) r45;

        throw r55;

     label08:
        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected item tag at: ");

        $r20 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        r47 = new org.xmlpull.v1.XmlPullParserException;

        $r23 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r23);

        r56 = (java.lang.Throwable) r47;

        throw r56;

     label09:
        i4 = i2;

        if i3 != 3 goto label12;

        $r7 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r34);

        if $z0 == 0 goto label10;

        return r36;

     label10:
        $r8 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label11;

        i4 = i2 + 1;

        goto label12;

     label11:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r13 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r49 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r49.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r16);

        r57 = (java.lang.Throwable) r49;

        throw r57;

     label12:
        i3 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i3 == 1 goto label13;

        i2 = i4;

        goto label03;

     label13:
        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        r51 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r51.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        r58 = (java.lang.Throwable) r51;

        throw r58;

     label14:
        $r27 := @caughtexception;

        r52 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r52.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in string-array");

        r59 = (java.lang.Throwable) r52;

        throw r59;

     label15:
        $r29 := @caughtexception;

        r53 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r53.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in string-array");

        r60 = (java.lang.Throwable) r53;

        throw r60;

        catch java.lang.NullPointerException from label01 to label02 with label15;
        catch java.lang.NumberFormatException from label01 to label02 with label14;
        catch java.lang.NullPointerException from label04 to label05 with label07;
        catch java.lang.NumberFormatException from label04 to label05 with label06;
    }

    public static final byte[] readThisByteArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String r0, $r1, $r7, $r8, $r13, $r16, $r21, r30;
        int i0, $i1, $i2, i3;
        boolean $z0;
        java.lang.Throwable $r22, r44, r45, r46, r47, r48;
        java.lang.NullPointerException $r24;
        org.xmlpull.v1.XmlPullParser r26;
        java.lang.String[] r27;
        byte[] r28, r29;
        java.lang.StringBuilder r36, r38, r40;
        org.xmlpull.v1.XmlPullParserException r37, r39, r41, r42, r43;

        r26 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r27 := @parameter2: java.lang.String[];

     label01:
        $r1 = interfaceinvoke r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label02:
        r28 = newarray (byte)[0];

        i3 = interfaceinvoke r26.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label03:
        if i3 != 4 goto label05;

        r29 = r28;

        if i0 <= 0 goto label07;

        r30 = interfaceinvoke r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        if r30 == null goto label04;

        $i1 = virtualinvoke r30.<java.lang.String: int length()>();

        $i2 = i0 * 2;

        if $i1 != $i2 goto label04;

        r29 = staticinvoke <libcore.util.HexEncoding: byte[] decode(java.lang.String)>(r30);

        goto label07;

     label04:
        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value found in byte-array: ");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        r37 = new org.xmlpull.v1.XmlPullParserException;

        $r21 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r37.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r21);

        r44 = (java.lang.Throwable) r37;

        throw r44;

     label05:
        r29 = r28;

        if i3 != 3 goto label07;

        $r8 = interfaceinvoke r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label06;

        return r28;

     label06:
        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r13 = interfaceinvoke r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r39 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r39.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r16);

        r45 = (java.lang.Throwable) r39;

        throw r45;

     label07:
        i3 = interfaceinvoke r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i3 == 1 goto label08;

        r28 = r29;

        goto label03;

     label08:
        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        r41 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r41.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r7);

        r46 = (java.lang.Throwable) r41;

        throw r46;

     label09:
        $r22 := @caughtexception;

        r42 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r42.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in byte-array");

        r47 = (java.lang.Throwable) r42;

        throw r47;

     label10:
        $r24 := @caughtexception;

        r43 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r43.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in byte-array");

        r48 = (java.lang.Throwable) r43;

        throw r48;

        catch java.lang.NullPointerException from label01 to label02 with label10;
        catch java.lang.NumberFormatException from label01 to label02 with label09;
    }

    public static final double[] readThisDoubleArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String $r0, $r6, $r7, $r8, $r13, $r16, $r17, $r20, $r23, $r24, r34;
        boolean $z0, $z1, $z2;
        double $d0;
        java.lang.NullPointerException $r25, $r31;
        java.lang.Throwable $r27, $r29, r54, r55, r56, r57, r58, r59, r60;
        org.xmlpull.v1.XmlPullParser r33;
        java.lang.String[] r35;
        int i1, i2, i3, i4;
        double[] r36;
        org.xmlpull.v1.XmlPullParserException r44, r45, r47, r49, r51, r52, r53;
        java.lang.StringBuilder r46, r48, r50;

        r33 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r34 := @parameter1: java.lang.String;

        r35 := @parameter2: java.lang.String[];

     label01:
        $r0 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label02:
        interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int next()>();

        r36 = newarray (double)[i1];

        i2 = 0;

        i3 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label03:
        if i3 != 2 goto label09;

        $r17 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 == 0 goto label08;

     label04:
        $r24 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r24);

        r36[i2] = $d0;

     label05:
        i4 = i2;

        goto label12;

     label06:
        $r29 := @caughtexception;

        r44 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r44.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in value attribute in item");

        r54 = (java.lang.Throwable) r44;

        throw r54;

     label07:
        $r25 := @caughtexception;

        r45 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r45.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need value attribute in item");

        r55 = (java.lang.Throwable) r45;

        throw r55;

     label08:
        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected item tag at: ");

        $r20 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        r47 = new org.xmlpull.v1.XmlPullParserException;

        $r23 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r23);

        r56 = (java.lang.Throwable) r47;

        throw r56;

     label09:
        i4 = i2;

        if i3 != 3 goto label12;

        $r7 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r34);

        if $z0 == 0 goto label10;

        return r36;

     label10:
        $r8 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label11;

        i4 = i2 + 1;

        goto label12;

     label11:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r13 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r49 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r49.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r16);

        r57 = (java.lang.Throwable) r49;

        throw r57;

     label12:
        i3 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i3 == 1 goto label13;

        i2 = i4;

        goto label03;

     label13:
        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        r51 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r51.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        r58 = (java.lang.Throwable) r51;

        throw r58;

     label14:
        $r27 := @caughtexception;

        r52 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r52.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in double-array");

        r59 = (java.lang.Throwable) r52;

        throw r59;

     label15:
        $r31 := @caughtexception;

        r53 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r53.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in double-array");

        r60 = (java.lang.Throwable) r53;

        throw r60;

        catch java.lang.NullPointerException from label01 to label02 with label15;
        catch java.lang.NumberFormatException from label01 to label02 with label14;
        catch java.lang.NullPointerException from label04 to label05 with label07;
        catch java.lang.NumberFormatException from label04 to label05 with label06;
    }

    public static final int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String $r0, $r6, $r7, $r8, $r13, $r16, $r17, $r20, $r23, $r24, r34;
        boolean $z0, $z1, $z2;
        int $i1, i2, i3, i4, i5;
        java.lang.Throwable $r25, $r29, r54, r55, r56, r57, r58, r59, r60;
        java.lang.NullPointerException $r27, $r31;
        org.xmlpull.v1.XmlPullParser r33;
        java.lang.String[] r35;
        int[] r36;
        org.xmlpull.v1.XmlPullParserException r44, r45, r47, r49, r51, r52, r53;
        java.lang.StringBuilder r46, r48, r50;

        r33 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r34 := @parameter1: java.lang.String;

        r35 := @parameter2: java.lang.String[];

     label01:
        $r0 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label02:
        interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int next()>();

        r36 = newarray (int)[i2];

        i3 = 0;

        i4 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label03:
        if i4 != 2 goto label09;

        $r17 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 == 0 goto label08;

     label04:
        $r24 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r24);

        r36[i3] = $i1;

     label05:
        i5 = i3;

        goto label12;

     label06:
        $r25 := @caughtexception;

        r44 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r44.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in value attribute in item");

        r54 = (java.lang.Throwable) r44;

        throw r54;

     label07:
        $r27 := @caughtexception;

        r45 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r45.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need value attribute in item");

        r55 = (java.lang.Throwable) r45;

        throw r55;

     label08:
        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected item tag at: ");

        $r20 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        r47 = new org.xmlpull.v1.XmlPullParserException;

        $r23 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r23);

        r56 = (java.lang.Throwable) r47;

        throw r56;

     label09:
        i5 = i3;

        if i4 != 3 goto label12;

        $r7 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r34);

        if $z0 == 0 goto label10;

        return r36;

     label10:
        $r8 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label11;

        i5 = i3 + 1;

        goto label12;

     label11:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r13 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r49 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r49.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r16);

        r57 = (java.lang.Throwable) r49;

        throw r57;

     label12:
        i4 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i4 == 1 goto label13;

        i3 = i5;

        goto label03;

     label13:
        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        r51 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r51.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        r58 = (java.lang.Throwable) r51;

        throw r58;

     label14:
        $r29 := @caughtexception;

        r52 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r52.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in int-array");

        r59 = (java.lang.Throwable) r52;

        throw r59;

     label15:
        $r31 := @caughtexception;

        r53 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r53.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in int-array");

        r60 = (java.lang.Throwable) r53;

        throw r60;

        catch java.lang.NullPointerException from label01 to label02 with label15;
        catch java.lang.NumberFormatException from label01 to label02 with label14;
        catch java.lang.NullPointerException from label04 to label05 with label07;
        catch java.lang.NumberFormatException from label04 to label05 with label06;
    }

    public static final java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        java.lang.String[] r2;
        java.util.ArrayList $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean)>(r0, r1, r2, null, 0);

        return $r3;
    }

    private static final java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[], com.android.internal.util.XmlUtils$ReadMapCallback, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String r0, $r9, $r10, $r15, $r18;
        com.android.internal.util.XmlUtils$ReadMapCallback r1;
        boolean z0, $z1;
        java.lang.Object $r19;
        org.xmlpull.v1.XmlPullParser r20;
        java.lang.String[] r21;
        int i0;
        java.util.ArrayList r24;
        java.lang.StringBuilder r25, r27;
        org.xmlpull.v1.XmlPullParserException r26, r28;
        java.lang.Throwable r29, r30;

        r20 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r21 := @parameter2: java.lang.String[];

        r1 := @parameter3: com.android.internal.util.XmlUtils$ReadMapCallback;

        z0 := @parameter4: boolean;

        r24 = new java.util.ArrayList;

        specialinvoke r24.<java.util.ArrayList: void <init>()>();

        i0 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label2;

        $r19 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean)>(r20, r21, r1, z0);

        virtualinvoke r24.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        goto label4;

     label2:
        if i0 != 3 goto label4;

        $r10 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        return r24;

     label3:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r15 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r26 = new org.xmlpull.v1.XmlPullParserException;

        $r18 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r18);

        r29 = (java.lang.Throwable) r26;

        throw r29;

     label4:
        i0 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 1 goto label5;

        goto label1;

     label5:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        r28 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r9);

        r30 = (java.lang.Throwable) r28;

        throw r30;
    }

    public static final long[] readThisLongArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String $r0, $r6, $r7, $r8, $r13, $r16, $r17, $r20, $r23, $r24, r34;
        boolean $z0, $z1, $z2;
        long $l1;
        java.lang.Throwable $r25, $r27, r54, r55, r56, r57, r58, r59, r60;
        java.lang.NullPointerException $r29, $r31;
        org.xmlpull.v1.XmlPullParser r33;
        java.lang.String[] r35;
        int i2, i3, i4, i5;
        long[] r36;
        org.xmlpull.v1.XmlPullParserException r44, r45, r47, r49, r51, r52, r53;
        java.lang.StringBuilder r46, r48, r50;

        r33 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r34 := @parameter1: java.lang.String;

        r35 := @parameter2: java.lang.String[];

     label01:
        $r0 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label02:
        interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int next()>();

        r36 = newarray (long)[i2];

        i3 = 0;

        i4 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label03:
        if i4 != 2 goto label09;

        $r17 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 == 0 goto label08;

     label04:
        $r24 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r24);

        r36[i3] = $l1;

     label05:
        i5 = i3;

        goto label12;

     label06:
        $r25 := @caughtexception;

        r44 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r44.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in value attribute in item");

        r54 = (java.lang.Throwable) r44;

        throw r54;

     label07:
        $r31 := @caughtexception;

        r45 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r45.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need value attribute in item");

        r55 = (java.lang.Throwable) r45;

        throw r55;

     label08:
        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected item tag at: ");

        $r20 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        r47 = new org.xmlpull.v1.XmlPullParserException;

        $r23 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r23);

        r56 = (java.lang.Throwable) r47;

        throw r56;

     label09:
        i5 = i3;

        if i4 != 3 goto label12;

        $r7 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r34);

        if $z0 == 0 goto label10;

        return r36;

     label10:
        $r8 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label11;

        i5 = i3 + 1;

        goto label12;

     label11:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r13 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r49 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r49.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r16);

        r57 = (java.lang.Throwable) r49;

        throw r57;

     label12:
        i4 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i4 == 1 goto label13;

        i3 = i5;

        goto label03;

     label13:
        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        r51 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r51.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        r58 = (java.lang.Throwable) r51;

        throw r58;

     label14:
        $r27 := @caughtexception;

        r52 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r52.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in long-array");

        r59 = (java.lang.Throwable) r52;

        throw r59;

     label15:
        $r29 := @caughtexception;

        r53 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r53.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in long-array");

        r60 = (java.lang.Throwable) r53;

        throw r60;

        catch java.lang.NullPointerException from label01 to label02 with label15;
        catch java.lang.NumberFormatException from label01 to label02 with label14;
        catch java.lang.NullPointerException from label04 to label05 with label07;
        catch java.lang.NumberFormatException from label04 to label05 with label06;
    }

    public static final java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        java.lang.String[] r2;
        java.util.HashMap $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r0, r1, r2, null);

        return $r3;
    }

    public static final java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[], com.android.internal.util.XmlUtils$ReadMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String r0, $r10, $r11, $r16, $r19, $r20;
        com.android.internal.util.XmlUtils$ReadMapCallback r1;
        java.lang.Object r3;
        boolean $z0;
        org.xmlpull.v1.XmlPullParser r22;
        java.lang.String[] r23;
        int i0;
        java.util.HashMap r26;
        java.lang.StringBuilder r27, r29;
        org.xmlpull.v1.XmlPullParserException r28, r30;
        java.lang.Throwable r31, r32;

        r22 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r23 := @parameter2: java.lang.String[];

        r1 := @parameter3: com.android.internal.util.XmlUtils$ReadMapCallback;

        r26 = new java.util.HashMap;

        specialinvoke r26.<java.util.HashMap: void <init>()>();

        i0 = interfaceinvoke r22.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label2;

        r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean)>(r22, r23, r1, 0);

        $r20 = r23[0];

        virtualinvoke r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r3);

        goto label4;

     label2:
        if i0 != 3 goto label4;

        $r11 = interfaceinvoke r22.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        return r26;

     label3:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r16 = interfaceinvoke r22.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        r28 = new org.xmlpull.v1.XmlPullParserException;

        $r19 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r19);

        r31 = (java.lang.Throwable) r28;

        throw r31;

     label4:
        i0 = interfaceinvoke r22.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 1 goto label5;

        goto label1;

     label5:
        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        r30 = new org.xmlpull.v1.XmlPullParserException;

        $r10 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r10);

        r32 = (java.lang.Throwable) r30;

        throw r32;
    }

    private static final java.lang.Object readThisPrimitiveValueXml(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String r0, $r1, $r3, $r5, $r6, $r8, $r16, $r23;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Long $r7;
        int $i0;
        java.lang.Integer $r9;
        java.lang.Throwable $r10, r36, r37;
        java.lang.NullPointerException $r17;
        org.xmlpull.v1.XmlPullParser r24;
        java.lang.Boolean r25;
        java.lang.Float r30;
        java.lang.Double r31;
        java.lang.StringBuilder r32, r34;
        org.xmlpull.v1.XmlPullParserException r33, r35;

        r24 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

     label01:
        z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("int");

     label02:
        if z0 == 0 goto label04;

     label03:
        $r8 = interfaceinvoke r24.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r9;

     label04:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z1 == 0 goto label05;

        $r6 = interfaceinvoke r24.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r6);

        return $r7;

     label05:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z2 == 0 goto label06;

        r30 = new java.lang.Float;

        $r5 = interfaceinvoke r24.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        specialinvoke r30.<java.lang.Float: void <init>(java.lang.String)>($r5);

        return r30;

     label06:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z3 == 0 goto label07;

        r31 = new java.lang.Double;

        $r3 = interfaceinvoke r24.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        specialinvoke r31.<java.lang.Double: void <init>(java.lang.String)>($r3);

        return r31;

     label07:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z4 == 0 goto label09;

        $r1 = interfaceinvoke r24.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1);

     label08:
        return r25;

     label09:
        return null;

     label10:
        $r10 := @caughtexception;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a number in value attribute in <");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r33 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r33.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r16);

        r36 = (java.lang.Throwable) r33;

        throw r36;

     label11:
        $r17 := @caughtexception;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need value attribute in <");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r35 = new org.xmlpull.v1.XmlPullParserException;

        $r23 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r35.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r23);

        r37 = (java.lang.Throwable) r35;

        throw r37;

        catch java.lang.NullPointerException from label01 to label02 with label11;
        catch java.lang.NumberFormatException from label01 to label02 with label10;
        catch java.lang.NullPointerException from label03 to label04 with label11;
        catch java.lang.NumberFormatException from label03 to label04 with label10;
        catch java.lang.NullPointerException from label04 to label05 with label11;
        catch java.lang.NumberFormatException from label04 to label05 with label10;
        catch java.lang.NullPointerException from label05 to label06 with label11;
        catch java.lang.NumberFormatException from label05 to label06 with label10;
        catch java.lang.NullPointerException from label06 to label07 with label11;
        catch java.lang.NumberFormatException from label06 to label07 with label10;
        catch java.lang.NullPointerException from label07 to label08 with label11;
        catch java.lang.NumberFormatException from label07 to label08 with label10;
    }

    public static final java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        java.lang.String[] r2;
        java.util.HashSet $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean)>(r0, r1, r2, null, 0);

        return $r3;
    }

    private static final java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[], com.android.internal.util.XmlUtils$ReadMapCallback, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String r0, $r9, $r10, $r15, $r18;
        com.android.internal.util.XmlUtils$ReadMapCallback r1;
        boolean z0, $z1;
        java.lang.Object $r19;
        org.xmlpull.v1.XmlPullParser r20;
        java.lang.String[] r21;
        int i0;
        java.util.HashSet r24;
        java.lang.StringBuilder r25, r27;
        org.xmlpull.v1.XmlPullParserException r26, r28;
        java.lang.Throwable r29, r30;

        r20 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r21 := @parameter2: java.lang.String[];

        r1 := @parameter3: com.android.internal.util.XmlUtils$ReadMapCallback;

        z0 := @parameter4: boolean;

        r24 = new java.util.HashSet;

        specialinvoke r24.<java.util.HashSet: void <init>()>();

        i0 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label2;

        $r19 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean)>(r20, r21, r1, z0);

        virtualinvoke r24.<java.util.HashSet: boolean add(java.lang.Object)>($r19);

        goto label4;

     label2:
        if i0 != 3 goto label4;

        $r10 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        return r24;

     label3:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r15 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r26 = new org.xmlpull.v1.XmlPullParserException;

        $r18 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r18);

        r29 = (java.lang.Throwable) r26;

        throw r29;

     label4:
        i0 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 1 goto label5;

        goto label1;

     label5:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        r28 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r9);

        r30 = (java.lang.Throwable) r28;

        throw r30;
    }

    public static final java.lang.String[] readThisStringArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String $r0, $r6, $r7, $r8, $r13, $r16, $r17, $r20, $r23, $r24, r34;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r25, $r27, r54, r55, r56, r57, r58, r59, r60;
        java.lang.NullPointerException $r29, $r31;
        org.xmlpull.v1.XmlPullParser r33;
        java.lang.String[] r35, r36;
        int i1, i2, i3, i4;
        org.xmlpull.v1.XmlPullParserException r44, r45, r47, r49, r51, r52, r53;
        java.lang.StringBuilder r46, r48, r50;

        r33 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r34 := @parameter1: java.lang.String;

        r35 := @parameter2: java.lang.String[];

     label01:
        $r0 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label02:
        interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int next()>();

        r36 = newarray (java.lang.String)[i1];

        i2 = 0;

        i3 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label03:
        if i3 != 2 goto label09;

        $r17 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 == 0 goto label08;

     label04:
        $r24 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        r36[i2] = $r24;

     label05:
        i4 = i2;

        goto label12;

     label06:
        $r27 := @caughtexception;

        r44 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r44.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in value attribute in item");

        r54 = (java.lang.Throwable) r44;

        throw r54;

     label07:
        $r31 := @caughtexception;

        r45 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r45.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need value attribute in item");

        r55 = (java.lang.Throwable) r45;

        throw r55;

     label08:
        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected item tag at: ");

        $r20 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        r47 = new org.xmlpull.v1.XmlPullParserException;

        $r23 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r23);

        r56 = (java.lang.Throwable) r47;

        throw r56;

     label09:
        i4 = i2;

        if i3 != 3 goto label12;

        $r7 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r34);

        if $z0 == 0 goto label10;

        return r36;

     label10:
        $r8 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label11;

        i4 = i2 + 1;

        goto label12;

     label11:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r13 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r49 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r49.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r16);

        r57 = (java.lang.Throwable) r49;

        throw r57;

     label12:
        i3 = interfaceinvoke r33.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i3 == 1 goto label13;

        i2 = i4;

        goto label03;

     label13:
        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        r51 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r51.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        r58 = (java.lang.Throwable) r51;

        throw r58;

     label14:
        $r25 := @caughtexception;

        r52 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r52.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in string-array");

        r59 = (java.lang.Throwable) r52;

        throw r59;

     label15:
        $r29 := @caughtexception;

        r53 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r53.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in string-array");

        r60 = (java.lang.Throwable) r53;

        throw r60;

        catch java.lang.NullPointerException from label01 to label02 with label15;
        catch java.lang.NumberFormatException from label01 to label02 with label14;
        catch java.lang.NullPointerException from label04 to label05 with label07;
        catch java.lang.NumberFormatException from label04 to label05 with label06;
    }

    private static final java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser, java.lang.String[], com.android.internal.util.XmlUtils$ReadMapCallback, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.lang.String r0, r1, $r6, $r12, $r17, $r20, $r25, $r28, $r29, $r34, $r37, $r41, $r44, $r47, $r49, $r52, $r55, r60;
        org.xmlpull.v1.XmlPullParser r56;
        java.lang.String[] r57, r73;
        com.android.internal.util.XmlUtils$ReadMapCallback r58;
        java.lang.Object r59, r64, r75, r78;
        int i3, i4;
        byte[] r69;
        int[] r70;
        long[] r71;
        double[] r72;
        boolean[] r74;
        java.util.ArrayList r76;
        java.util.HashSet r77;
        java.lang.StringBuilder r80, r82, r83, r86, r88, r90, r92, r94;
        org.xmlpull.v1.XmlPullParserException r81, r84, r85, r87, r89, r91, r93, r95;
        java.lang.Throwable r96, r97, r98, r99, r100, r101, r102, r103;

        r56 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r57 := @parameter1: java.lang.String[];

        r58 := @parameter2: com.android.internal.util.XmlUtils$ReadMapCallback;

        z0 := @parameter3: boolean;

        r0 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r1 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("null");

        if $z1 == 0 goto label01;

        r59 = null;

        goto label09;

     label01:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("string");

        if $z2 == 0 goto label08;

        r60 = "";

     label02:
        i3 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i3 == 1 goto label07;

        if i3 != 3 goto label04;

        $r49 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z13 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>("string");

        if $z13 == 0 goto label03;

        r57[0] = r0;

        return r60;

     label03:
        r80 = new java.lang.StringBuilder;

        specialinvoke r80.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag in <string>: ");

        $r52 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        r81 = new org.xmlpull.v1.XmlPullParserException;

        $r55 = virtualinvoke r80.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r81.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r55);

        r96 = (java.lang.Throwable) r81;

        throw r96;

     label04:
        if i3 != 4 goto label05;

        r82 = new java.lang.StringBuilder;

        specialinvoke r82.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        $r47 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        r60 = virtualinvoke r82.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label05:
        if i3 == 2 goto label06;

        goto label02;

     label06:
        r83 = new java.lang.StringBuilder;

        specialinvoke r83.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag in <string>: ");

        $r41 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        r84 = new org.xmlpull.v1.XmlPullParserException;

        $r44 = virtualinvoke r83.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r84.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r44);

        r97 = (java.lang.Throwable) r84;

        throw r97;

     label07:
        r85 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r85.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Unexpected end of document in <string>");

        r98 = (java.lang.Throwable) r85;

        throw r98;

     label08:
        r64 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisPrimitiveValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r56, r1);

        if r64 == null goto label15;

        r59 = r64;

     label09:
        i4 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i4 == 1 goto label14;

        if i4 != 3 goto label11;

        $r29 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z12 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z12 == 0 goto label10;

        r57[0] = r0;

        return r59;

     label10:
        r86 = new java.lang.StringBuilder;

        specialinvoke r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag in <");

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r34 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        r87 = new org.xmlpull.v1.XmlPullParserException;

        $r37 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r87.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r37);

        r99 = (java.lang.Throwable) r87;

        throw r99;

     label11:
        if i4 == 4 goto label13;

        if i4 == 2 goto label12;

        goto label09;

     label12:
        r88 = new java.lang.StringBuilder;

        specialinvoke r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag in <");

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r25 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        r89 = new org.xmlpull.v1.XmlPullParserException;

        $r28 = virtualinvoke r88.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r89.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r28);

        r100 = (java.lang.Throwable) r89;

        throw r100;

     label13:
        r90 = new java.lang.StringBuilder;

        specialinvoke r90.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected text in <");

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r17 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        r91 = new org.xmlpull.v1.XmlPullParserException;

        $r20 = virtualinvoke r90.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r91.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r20);

        r101 = (java.lang.Throwable) r91;

        throw r101;

     label14:
        r92 = new java.lang.StringBuilder;

        specialinvoke r92.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end of document in <");

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r93 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = virtualinvoke r92.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r93.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        r102 = (java.lang.Throwable) r93;

        throw r102;

     label15:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("byte-array");

        if $z3 == 0 goto label16;

        r69 = staticinvoke <com.android.internal.util.XmlUtils: byte[] readThisByteArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r56, "byte-array", r57);

        r57[0] = r0;

        return r69;

     label16:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("int-array");

        if $z4 == 0 goto label17;

        r70 = staticinvoke <com.android.internal.util.XmlUtils: int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r56, "int-array", r57);

        r57[0] = r0;

        return r70;

     label17:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("long-array");

        if $z5 == 0 goto label18;

        r71 = staticinvoke <com.android.internal.util.XmlUtils: long[] readThisLongArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r56, "long-array", r57);

        r57[0] = r0;

        return r71;

     label18:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("double-array");

        if $z6 == 0 goto label19;

        r72 = staticinvoke <com.android.internal.util.XmlUtils: double[] readThisDoubleArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r56, "double-array", r57);

        r57[0] = r0;

        return r72;

     label19:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("string-array");

        if $z7 == 0 goto label20;

        r73 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String[] readThisStringArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r56, "string-array", r57);

        r57[0] = r0;

        return r73;

     label20:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("boolean-array");

        if $z8 == 0 goto label21;

        r74 = staticinvoke <com.android.internal.util.XmlUtils: boolean[] readThisBooleanArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r56, "boolean-array", r57);

        r57[0] = r0;

        return r74;

     label21:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("map");

        if $z9 == 0 goto label24;

        interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: int next()>();

        if z0 == 0 goto label22;

        r75 = staticinvoke <com.android.internal.util.XmlUtils: android.util.ArrayMap readThisArrayMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r56, "map", r57, r58);

        goto label23;

     label22:
        r75 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r56, "map", r57, r58);

     label23:
        r57[0] = r0;

        return r75;

     label24:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z10 == 0 goto label25;

        interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: int next()>();

        r76 = staticinvoke <com.android.internal.util.XmlUtils: java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean)>(r56, "list", r57, r58, z0);

        r57[0] = r0;

        return r76;

     label25:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z11 == 0 goto label26;

        interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: int next()>();

        r77 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean)>(r56, "set", r57, r58, z0);

        r57[0] = r0;

        return r77;

     label26:
        if r58 == null goto label27;

        r78 = interfaceinvoke r58.<com.android.internal.util.XmlUtils$ReadMapCallback: java.lang.Object readThisUnknownObjectXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r56, r1);

        r57[0] = r0;

        return r78;

     label27:
        r94 = new java.lang.StringBuilder;

        specialinvoke r94.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag: ");

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r95 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = virtualinvoke r94.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r95.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        r103 = (java.lang.Throwable) r95;

        throw r103;
    }

    public static android.net.Uri readUriAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        android.net.Uri r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        r3 = null;

        if r2 == null goto label1;

        r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

     label1:
        return r3;
    }

    public static final java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String $r3, $r6, $r9, $r12;
        java.lang.Object $r14;
        java.lang.String[] r15;
        int i0;
        org.xmlpull.v1.XmlPullParserException r18, r20, r22;
        java.lang.StringBuilder r19, r21;
        java.lang.Throwable r23, r24, r25;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r15 := @parameter1: java.lang.String[];

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label2;

        $r14 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean)>(r0, r15, null, 0);

        return $r14;

     label2:
        if i0 == 3 goto label5;

        if i0 == 4 goto label4;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 1 goto label3;

        goto label1;

     label3:
        r18 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r18.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Unexpected end of document");

        r23 = (java.lang.Throwable) r18;

        throw r23;

     label4:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected text: ");

        $r9 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r20 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        r24 = (java.lang.Throwable) r20;

        throw r24;

     label5:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag at: ");

        $r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        r22 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r22.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        r25 = (java.lang.Throwable) r22;

        throw r25;
    }

    public static void skipCurrentTag(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, $i2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label2;

        if i1 != 3 goto label1;

        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label2;

        goto label1;

     label2:
        return;
    }

    public static void writeBitmapAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, android.graphics.Bitmap) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1;
        android.graphics.Bitmap r2;
        java.io.ByteArrayOutputStream $r4;
        android.graphics.Bitmap$CompressFormat $r5;
        byte[] $r6;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.Bitmap;

        if r2 == null goto label1;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        $r5 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke r2.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r5, 90, $r4);

        $r6 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        staticinvoke <com.android.internal.util.XmlUtils: void writeByteArrayAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,byte[])>(r0, r1, $r6);

     label1:
        return;
    }

    public static final void writeBooleanArrayXml(boolean[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        boolean[] r0;
        java.lang.String r1, $r4, $r8;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: boolean[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "boolean-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r4);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $z0 = r0[i1];

        $r8 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "boolean-array");

        return;
    }

    public static void writeBooleanAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, boolean) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        boolean z0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r2);

        return;
    }

    public static void writeByteArrayAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, byte[]) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r3;
        byte[] r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        if r2 == null goto label1;

        $r3 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>(r2, 0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r3);

     label1:
        return;
    }

    public static final void writeByteArrayXml(byte[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        byte[] r0;
        java.lang.String r1, $r4, $r6, $r7;
        org.xmlpull.v1.XmlSerializer r2;
        int $i0;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "byte-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        $i0 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r4);

        $r6 = staticinvoke <libcore.util.HexEncoding: java.lang.String encodeToString(byte[])>(r0);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r7);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "byte-array");

        return;
    }

    public static final void writeDoubleArrayXml(double[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        double[] r0;
        java.lang.String r1, $r4, $r8;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1;
        double $d0;

        r0 := @parameter0: double[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "double-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r4);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $d0 = r0[i1];

        $r8 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "double-array");

        return;
    }

    public static void writeFloatAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, float) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        float f0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r2);

        return;
    }

    public static final void writeIntArrayXml(int[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        int[] r0;
        java.lang.String r1, $r4, $r8;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, $i1, i2;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "int-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r4);

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $i1 = r0[i2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        i2 = i2 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "int-array");

        return;
    }

    public static void writeIntAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, int) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        int i0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r2);

        return;
    }

    public static final void writeListXml(java.util.List, java.io.OutputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.List r0;
        java.io.OutputStream r1;
        org.xmlpull.v1.XmlSerializer r2;
        java.nio.charset.Charset $r3;
        java.lang.String $r4;
        java.lang.Boolean $r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.io.OutputStream;

        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, $r4);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r5);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer)>(r0, null, r2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    public static final void writeListXml(java.util.List, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.List r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "list");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r5, null, r2);

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "list");

        return;
    }

    public static final void writeLongArrayXml(long[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        long[] r0;
        java.lang.String r1, $r4, $r8;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i2;
        long $l1;

        r0 := @parameter0: long[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "long-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r4);

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $l1 = r0[i2];

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        i2 = i2 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "long-array");

        return;
    }

    public static void writeLongAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, long) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        long l0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r2);

        return;
    }

    public static final void writeMapXml(java.util.Map, java.io.OutputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Map r0;
        java.io.OutputStream r1;
        com.android.internal.util.FastXmlSerializer $r3;
        java.nio.charset.Charset $r4;
        java.lang.String $r5;
        java.lang.Boolean $r6;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.io.OutputStream;

        $r3 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, $r5);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer)>(r0, null, $r3);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    public static final void writeMapXml(java.util.Map, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Map r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer r2;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback)>(r0, r1, r2, null);

        return;
    }

    public static final void writeMapXml(java.util.Map, java.lang.String, org.xmlpull.v1.XmlSerializer, com.android.internal.util.XmlUtils$WriteMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Map r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer r2;
        com.android.internal.util.XmlUtils$WriteMapCallback r3;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        r3 := @parameter3: com.android.internal.util.XmlUtils$WriteMapCallback;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "map");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback)>(r0, r2, r3);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "map");

        return;
    }

    public static final void writeMapXml(java.util.Map, org.xmlpull.v1.XmlSerializer, com.android.internal.util.XmlUtils$WriteMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        com.android.internal.util.XmlUtils$WriteMapCallback r1;
        java.util.Iterator r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4, $r5, $r6;
        java.lang.String $r7;
        java.util.Map r8;
        java.util.Map$Entry r9;

        r8 := @parameter0: java.util.Map;

        r0 := @parameter1: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter2: com.android.internal.util.XmlUtils$WriteMapCallback;

        if r8 != null goto label1;

        return;

     label1:
        $r3 = interfaceinvoke r8.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback)>($r5, $r7, r0, r1);

        goto label2;

     label3:
        return;
    }

    public static final void writeSetXml(java.util.Set, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.lang.Object $r4;
        java.util.Set r8;
        java.util.Iterator r9;
        boolean $z0;

        r8 := @parameter0: java.util.Set;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r8 != null goto label1;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "set");

        if r0 == null goto label2;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r0);

     label2:
        r9 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r4, null, r1);

        goto label3;

     label4:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "set");

        return;
    }

    public static final void writeStringArrayXml(java.lang.String[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String[] r0;
        java.lang.String r1, $r4, $r8;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "string-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r4);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $r8 = r0[i1];

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "string-array");

        return;
    }

    public static void writeStringAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, java.lang.CharSequence) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r3;
        java.lang.CharSequence r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.CharSequence;

        if r2 == null goto label1;

        $r3 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.String toString()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r3);

     label1:
        return;
    }

    public static void writeUriAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, android.net.Uri) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r3;
        android.net.Uri r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<android.net.Uri: java.lang.String toString()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r3);

     label1:
        return;
    }

    public static final void writeValueXml(java.lang.Object, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.Object r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback)>(r0, r1, r2, null);

        return;
    }

    private static final void writeValueXml(java.lang.Object, java.lang.String, org.xmlpull.v1.XmlSerializer, com.android.internal.util.XmlUtils$WriteMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.Object r0;
        org.xmlpull.v1.XmlSerializer r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r5;
        java.lang.String $r6, $r8, $r22, $r27, r34, r36;
        java.util.Set $r12;
        java.util.List $r13;
        java.util.Map $r14;
        boolean[] $r15;
        java.lang.String[] $r16;
        double[] $r17;
        long[] $r18;
        int[] $r19;
        byte[] $r20;
        com.android.internal.util.XmlUtils$WriteMapCallback r35;

        r0 := @parameter0: java.lang.Object;

        r34 := @parameter1: java.lang.String;

        r1 := @parameter2: org.xmlpull.v1.XmlSerializer;

        r35 := @parameter3: com.android.internal.util.XmlUtils$WriteMapCallback;

        if r0 != null goto label02;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        if r34 == null goto label01;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r34);

     label01:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label02:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label04;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "string");

        if r34 == null goto label03;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r34);

     label03:
        $r27 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r27);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "string");

        return;

     label04:
        $z1 = r0 instanceof java.lang.Integer;

        if $z1 == 0 goto label05;

        r36 = "int";

        goto label09;

     label05:
        $z2 = r0 instanceof java.lang.Long;

        if $z2 == 0 goto label06;

        r36 = "long";

        goto label09;

     label06:
        $z3 = r0 instanceof java.lang.Float;

        if $z3 == 0 goto label07;

        r36 = "float";

        goto label09;

     label07:
        $z4 = r0 instanceof java.lang.Double;

        if $z4 == 0 goto label08;

        r36 = "double";

        goto label09;

     label08:
        $z5 = r0 instanceof java.lang.Boolean;

        if $z5 == 0 goto label11;

        r36 = "boolean";

     label09:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, r36);

        if r34 == null goto label10;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r34);

     label10:
        $r22 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r22);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, r36);

        return;

     label11:
        $z6 = r0 instanceof byte[];

        if $z6 == 0 goto label12;

        $r20 = (byte[]) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeByteArrayXml(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r20, r34, r1);

        return;

     label12:
        $z7 = r0 instanceof int[];

        if $z7 == 0 goto label13;

        $r19 = (int[]) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntArrayXml(int[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r19, r34, r1);

        return;

     label13:
        $z8 = r0 instanceof long[];

        if $z8 == 0 goto label14;

        $r18 = (long[]) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeLongArrayXml(long[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r18, r34, r1);

        return;

     label14:
        $z9 = r0 instanceof double[];

        if $z9 == 0 goto label15;

        $r17 = (double[]) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeDoubleArrayXml(double[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r17, r34, r1);

        return;

     label15:
        $z10 = r0 instanceof java.lang.String[];

        if $z10 == 0 goto label16;

        $r16 = (java.lang.String[]) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringArrayXml(java.lang.String[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r16, r34, r1);

        return;

     label16:
        $z11 = r0 instanceof boolean[];

        if $z11 == 0 goto label17;

        $r15 = (boolean[]) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeBooleanArrayXml(boolean[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r15, r34, r1);

        return;

     label17:
        $z12 = r0 instanceof java.util.Map;

        if $z12 == 0 goto label18;

        $r14 = (java.util.Map) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r14, r34, r1);

        return;

     label18:
        $z13 = r0 instanceof java.util.List;

        if $z13 == 0 goto label19;

        $r13 = (java.util.List) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r13, r34, r1);

        return;

     label19:
        $z14 = r0 instanceof java.util.Set;

        if $z14 == 0 goto label20;

        $r12 = (java.util.Set) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeSetXml(java.util.Set,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r12, r34, r1);

        return;

     label20:
        $z15 = r0 instanceof java.lang.CharSequence;

        if $z15 == 0 goto label22;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "string");

        if r34 == null goto label21;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r34);

     label21:
        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r8);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "string");

        return;

     label22:
        if r35 == null goto label23;

        interfaceinvoke r35.<com.android.internal.util.XmlUtils$WriteMapCallback: void writeUnknownObject(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>(r0, r34, r1);

        return;

     label23:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeValueXml: unable to write value ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public static void <clinit>()
    {
        <com.android.internal.util.XmlUtils: java.lang.String STRING_ARRAY_SEPARATOR> = ":";

        return;
    }
}
