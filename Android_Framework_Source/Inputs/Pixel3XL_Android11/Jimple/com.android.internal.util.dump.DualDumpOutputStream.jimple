public class com.android.internal.util.dump.DualDumpOutputStream extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private final java.util.LinkedList mDumpObjects;
    private final com.android.internal.util.IndentingPrintWriter mIpw;
    private final android.util.proto.ProtoOutputStream mProtoStream;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Lcom/android/internal/util/dump/DualDumpOutputStream;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.internal.util.dump.DualDumpOutputStream: java.lang.String LOG_TAG> = $r1;

        return;
    }

    public void <init>(android.util.proto.ProtoOutputStream)
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        android.util.proto.ProtoOutputStream r1;
        java.util.LinkedList $r2;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects> = $r2;

        r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream> = r1;

        r0.<com.android.internal.util.dump.DualDumpOutputStream: com.android.internal.util.IndentingPrintWriter mIpw> = null;

        return;
    }

    public void <init>(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.util.LinkedList $r3;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r4;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects> = $r3;

        r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream> = null;

        r0.<com.android.internal.util.dump.DualDumpOutputStream: com.android.internal.util.IndentingPrintWriter mIpw> = r1;

        $r4 = new com.android.internal.util.dump.DualDumpOutputStream$DumpObject;

        specialinvoke $r4.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void <init>(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$1)>(null, null);

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void end(long)
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        long l0, $l2;
        java.lang.String r1, $r11, $r16, $r18;
        java.util.LinkedList $r2, $r4, $r8;
        java.lang.Object $r3, $r9;
        int $i1;
        byte $b3;
        java.lang.StringBuilder $r6;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r10;
        java.lang.Thread $r14;
        java.lang.StackTraceElement[] $r15;
        android.util.proto.ProtoOutputStream r19;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        l0 := @parameter0: long;

        r19 = r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream>;

        if r19 == null goto label1;

        virtualinvoke r19.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        goto label3;

     label1:
        $r2 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object getLast()>();

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r3);

        $l2 = (long) $i1;

        $b3 = $l2 cmp l0;

        if $b3 == 0 goto label2;

        r1 = <com.android.internal.util.dump.DualDumpOutputStream: java.lang.String LOG_TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected token for ending ");

        $r8 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r9 = virtualinvoke $r8.<java.util.LinkedList: java.lang.Object getLast()>();

        $r10 = (com.android.internal.util.dump.DualDumpOutputStream$DumpObject) $r9;

        $r11 = $r10.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: java.lang.String name>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r15 = virtualinvoke $r14.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r16 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r15);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r1, $r18);

     label2:
        $r4 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        virtualinvoke $r4.<java.util.LinkedList: java.lang.Object removeLast()>();

     label3:
        return;
    }

    public void flush()
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        android.util.proto.ProtoOutputStream r1;
        java.util.LinkedList $r2, $r4, $r8, $r10;
        int $i0;
        com.android.internal.util.IndentingPrintWriter $r3, $r6;
        java.lang.Object $r5;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r7, $r9;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 = r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void flush()>();

        goto label3;

     label1:
        $r2 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i0 != 1 goto label2;

        $r4 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r7 = (com.android.internal.util.dump.DualDumpOutputStream$DumpObject) $r5;

        $r6 = r0.<com.android.internal.util.dump.DualDumpOutputStream: com.android.internal.util.IndentingPrintWriter mIpw>;

        virtualinvoke $r7.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void print(com.android.internal.util.IndentingPrintWriter,boolean)>($r6, 0);

        $r8 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        virtualinvoke $r8.<java.util.LinkedList: void clear()>();

        $r10 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r9 = new com.android.internal.util.dump.DualDumpOutputStream$DumpObject;

        specialinvoke $r9.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void <init>(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$1)>(null, null);

        virtualinvoke $r10.<java.util.LinkedList: boolean add(java.lang.Object)>($r9);

     label2:
        $r3 = r0.<com.android.internal.util.dump.DualDumpOutputStream: com.android.internal.util.IndentingPrintWriter mIpw>;

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void flush()>();

     label3:
        return;
    }

    public boolean isProto()
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        android.util.proto.ProtoOutputStream $r1;
        boolean z0;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        $r1 = r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public long start(java.lang.String, long)
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        java.lang.String r1;
        long l0, $l2, $l3;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r2, $r5;
        java.util.LinkedList $r3, $r6;
        java.lang.Object $r4;
        int $i1;
        android.util.proto.ProtoOutputStream r7;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r7 = r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream>;

        if r7 == null goto label1;

        $l3 = virtualinvoke r7.<android.util.proto.ProtoOutputStream: long start(long)>(l0);

        return $l3;

     label1:
        $r2 = new com.android.internal.util.dump.DualDumpOutputStream$DumpObject;

        specialinvoke $r2.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void <init>(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$1)>(r1, null);

        $r3 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object getLast()>();

        $r5 = (com.android.internal.util.dump.DualDumpOutputStream$DumpObject) $r4;

        virtualinvoke $r5.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void add(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$Dumpable)>(r1, $r2);

        $r6 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        virtualinvoke $r6.<java.util.LinkedList: void addLast(java.lang.Object)>($r2);

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r2);

        $l2 = (long) $i1;

        return $l2;
    }

    public void write(java.lang.String, long, double)
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        java.lang.String r1, $r7;
        long l0;
        double d0;
        android.util.proto.ProtoOutputStream r2;
        java.util.LinkedList $r3;
        java.lang.Object $r4;
        com.android.internal.util.dump.DualDumpOutputStream$DumpField $r5;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r6;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        d0 := @parameter2: double;

        r2 = r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.util.proto.ProtoOutputStream: void write(long,double)>(l0, d0);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object getLast()>();

        $r6 = (com.android.internal.util.dump.DualDumpOutputStream$DumpObject) $r4;

        $r5 = new com.android.internal.util.dump.DualDumpOutputStream$DumpField;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        specialinvoke $r5.<com.android.internal.util.dump.DualDumpOutputStream$DumpField: void <init>(java.lang.String,java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$1)>(r1, $r7, null);

        virtualinvoke $r6.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void add(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$Dumpable)>(r1, $r5);

     label2:
        return;
    }

    public void write(java.lang.String, long, float)
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        java.lang.String r1, $r7;
        long l0;
        float f0;
        android.util.proto.ProtoOutputStream r2;
        java.util.LinkedList $r3;
        java.lang.Object $r4;
        com.android.internal.util.dump.DualDumpOutputStream$DumpField $r5;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r6;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        r2 = r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.util.proto.ProtoOutputStream: void write(long,float)>(l0, f0);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object getLast()>();

        $r6 = (com.android.internal.util.dump.DualDumpOutputStream$DumpObject) $r4;

        $r5 = new com.android.internal.util.dump.DualDumpOutputStream$DumpField;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        specialinvoke $r5.<com.android.internal.util.dump.DualDumpOutputStream$DumpField: void <init>(java.lang.String,java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$1)>(r1, $r7, null);

        virtualinvoke $r6.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void add(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$Dumpable)>(r1, $r5);

     label2:
        return;
    }

    public void write(java.lang.String, long, int)
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        java.lang.String r1, $r7;
        long l0;
        int i1;
        android.util.proto.ProtoOutputStream r2;
        java.util.LinkedList $r3;
        java.lang.Object $r4;
        com.android.internal.util.dump.DualDumpOutputStream$DumpField $r5;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r6;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r2 = r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.util.proto.ProtoOutputStream: void write(long,int)>(l0, i1);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object getLast()>();

        $r6 = (com.android.internal.util.dump.DualDumpOutputStream$DumpObject) $r4;

        $r5 = new com.android.internal.util.dump.DualDumpOutputStream$DumpField;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1);

        specialinvoke $r5.<com.android.internal.util.dump.DualDumpOutputStream$DumpField: void <init>(java.lang.String,java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$1)>(r1, $r7, null);

        virtualinvoke $r6.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void add(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$Dumpable)>(r1, $r5);

     label2:
        return;
    }

    public void write(java.lang.String, long, long)
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        java.lang.String r1, $r7;
        long l0, l1;
        android.util.proto.ProtoOutputStream r2;
        java.util.LinkedList $r3;
        java.lang.Object $r4;
        com.android.internal.util.dump.DualDumpOutputStream$DumpField $r5;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r6;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 = r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.util.proto.ProtoOutputStream: void write(long,long)>(l0, l1);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object getLast()>();

        $r6 = (com.android.internal.util.dump.DualDumpOutputStream$DumpObject) $r4;

        $r5 = new com.android.internal.util.dump.DualDumpOutputStream$DumpField;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1);

        specialinvoke $r5.<com.android.internal.util.dump.DualDumpOutputStream$DumpField: void <init>(java.lang.String,java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$1)>(r1, $r7, null);

        virtualinvoke $r6.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void add(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$Dumpable)>(r1, $r5);

     label2:
        return;
    }

    public void write(java.lang.String, long, java.lang.String)
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        java.lang.String r1, r2, $r8;
        long l0;
        android.util.proto.ProtoOutputStream r3;
        java.util.LinkedList $r4;
        java.lang.Object $r5;
        com.android.internal.util.dump.DualDumpOutputStream$DumpField $r6;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r7;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 := @parameter2: java.lang.String;

        r3 = r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(l0, r2);

        goto label2;

     label1:
        $r4 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object getLast()>();

        $r7 = (com.android.internal.util.dump.DualDumpOutputStream$DumpObject) $r5;

        $r6 = new com.android.internal.util.dump.DualDumpOutputStream$DumpField;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r6.<com.android.internal.util.dump.DualDumpOutputStream$DumpField: void <init>(java.lang.String,java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$1)>(r1, $r8, null);

        virtualinvoke $r7.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void add(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$Dumpable)>(r1, $r6);

     label2:
        return;
    }

    public void write(java.lang.String, long, boolean)
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        java.lang.String r1, $r7;
        long l0;
        boolean z0;
        android.util.proto.ProtoOutputStream r2;
        java.util.LinkedList $r3;
        java.lang.Object $r4;
        com.android.internal.util.dump.DualDumpOutputStream$DumpField $r5;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r6;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        r2 = r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(l0, z0);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object getLast()>();

        $r6 = (com.android.internal.util.dump.DualDumpOutputStream$DumpObject) $r4;

        $r5 = new com.android.internal.util.dump.DualDumpOutputStream$DumpField;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0);

        specialinvoke $r5.<com.android.internal.util.dump.DualDumpOutputStream$DumpField: void <init>(java.lang.String,java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$1)>(r1, $r7, null);

        virtualinvoke $r6.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void add(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$Dumpable)>(r1, $r5);

     label2:
        return;
    }

    public void write(java.lang.String, long, byte[])
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        java.lang.String r1, $r8;
        long l0;
        byte[] r2;
        android.util.proto.ProtoOutputStream r3;
        java.util.LinkedList $r4;
        java.lang.Object $r5;
        com.android.internal.util.dump.DualDumpOutputStream$DumpField $r6;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r7;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 := @parameter2: byte[];

        r3 = r0.<com.android.internal.util.dump.DualDumpOutputStream: android.util.proto.ProtoOutputStream mProtoStream>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.util.proto.ProtoOutputStream: void write(long,byte[])>(l0, r2);

        goto label2;

     label1:
        $r4 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object getLast()>();

        $r7 = (com.android.internal.util.dump.DualDumpOutputStream$DumpObject) $r5;

        $r6 = new com.android.internal.util.dump.DualDumpOutputStream$DumpField;

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r2);

        specialinvoke $r6.<com.android.internal.util.dump.DualDumpOutputStream$DumpField: void <init>(java.lang.String,java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$1)>(r1, $r8, null);

        virtualinvoke $r7.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void add(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$Dumpable)>(r1, $r6);

     label2:
        return;
    }

    public void writeNested(java.lang.String, byte[])
    {
        com.android.internal.util.dump.DualDumpOutputStream r0;
        java.lang.String r1, $r7, $r10, $r11;
        byte[] r2;
        com.android.internal.util.IndentingPrintWriter $r3;
        java.util.LinkedList $r4;
        java.lang.Object $r5;
        com.android.internal.util.dump.DualDumpOutputStream$DumpField $r6;
        java.nio.charset.Charset $r8;
        com.android.internal.util.dump.DualDumpOutputStream$DumpObject $r9;

        r0 := @this: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r3 = r0.<com.android.internal.util.dump.DualDumpOutputStream: com.android.internal.util.IndentingPrintWriter mIpw>;

        if $r3 != null goto label1;

        $r11 = <com.android.internal.util.dump.DualDumpOutputStream: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r11, "writeNested does not work for proto logging");

        return;

     label1:
        $r4 = r0.<com.android.internal.util.dump.DualDumpOutputStream: java.util.LinkedList mDumpObjects>;

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object getLast()>();

        $r9 = (com.android.internal.util.dump.DualDumpOutputStream$DumpObject) $r5;

        $r6 = new com.android.internal.util.dump.DualDumpOutputStream$DumpField;

        $r7 = new java.lang.String;

        $r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r7.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r2, $r8);

        $r10 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r6.<com.android.internal.util.dump.DualDumpOutputStream$DumpField: void <init>(java.lang.String,java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$1)>(r1, $r10, null);

        virtualinvoke $r9.<com.android.internal.util.dump.DualDumpOutputStream$DumpObject: void add(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream$Dumpable)>(r1, $r6);

        return;
    }
}
