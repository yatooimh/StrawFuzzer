public class com.android.internal.view.ActionBarPolicy extends java.lang.Object
{
    private android.content.Context mContext;

    private void <init>(android.content.Context)
    {
        com.android.internal.view.ActionBarPolicy r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.view.ActionBarPolicy;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.view.ActionBarPolicy: android.content.Context mContext> = r1;

        return;
    }

    public static com.android.internal.view.ActionBarPolicy get(android.content.Context)
    {
        android.content.Context r0;
        com.android.internal.view.ActionBarPolicy $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = new com.android.internal.view.ActionBarPolicy;

        specialinvoke $r1.<com.android.internal.view.ActionBarPolicy: void <init>(android.content.Context)>(r0);

        return $r1;
    }

    public boolean enableHomeButtonByDefault()
    {
        com.android.internal.view.ActionBarPolicy r0;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.view.ActionBarPolicy;

        $r1 = r0.<com.android.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 14 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int getEmbeddedMenuWidthLimit()
    {
        com.android.internal.view.ActionBarPolicy r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        int $i0, $i1;

        r0 := @this: com.android.internal.view.ActionBarPolicy;

        $r1 = r0.<com.android.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r3.<android.util.DisplayMetrics: int widthPixels>;

        $i1 = $i0 / 2;

        return $i1;
    }

    public int getMaxActionButtons()
    {
        com.android.internal.view.ActionBarPolicy r0;
        android.content.res.Configuration r1;
        int i0, i1, $i2;
        android.content.Context $r2;
        android.content.res.Resources $r3;

        r0 := @this: com.android.internal.view.ActionBarPolicy;

        $r2 = r0.<com.android.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i0 = r1.<android.content.res.Configuration: int screenWidthDp>;

        i1 = r1.<android.content.res.Configuration: int screenHeightDp>;

        $i2 = r1.<android.content.res.Configuration: int smallestScreenWidthDp>;

        if $i2 > 600 goto label7;

        if i0 <= 960 goto label1;

        if i1 > 720 goto label7;

     label1:
        if i0 <= 720 goto label2;

        if i1 <= 960 goto label2;

        goto label7;

     label2:
        if i0 >= 500 goto label6;

        if i0 <= 640 goto label3;

        if i1 > 480 goto label6;

     label3:
        if i0 <= 480 goto label4;

        if i1 <= 640 goto label4;

        goto label6;

     label4:
        if i0 < 360 goto label5;

        return 3;

     label5:
        return 2;

     label6:
        return 4;

     label7:
        return 5;
    }

    public int getStackedTabMaxWidth()
    {
        com.android.internal.view.ActionBarPolicy r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0;

        r0 := @this: com.android.internal.view.ActionBarPolicy;

        $r1 = r0.<com.android.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104923);

        return $i0;
    }

    public int getTabContainerHeight()
    {
        com.android.internal.view.ActionBarPolicy r0;
        android.content.res.TypedArray r1;
        int i0, $i1, i2;
        android.content.res.Resources r2;
        int[] $r3;
        android.content.Context $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.internal.view.ActionBarPolicy;

        $r4 = r0.<com.android.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r3 = <com.android.internal.R$styleable: int[] ActionBar>;

        r1 = virtualinvoke $r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r3, 16843470, 0);

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getLayoutDimension(int,int)>(4, 0);

        $r5 = r0.<com.android.internal.view.ActionBarPolicy: android.content.Context mContext>;

        r2 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        i2 = i0;

        $z0 = virtualinvoke r0.<com.android.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r2.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104922);

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i1);

     label1:
        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return i2;
    }

    public boolean hasEmbeddedTabs()
    {
        com.android.internal.view.ActionBarPolicy r0;
        android.content.res.Configuration r1;
        int i0, i1, $i2, $i3;
        android.content.Context $r2, $r4, $r6;
        android.content.pm.ApplicationInfo $r3;
        android.content.res.Resources $r5, $r7;
        boolean $z0, z1;

        r0 := @this: com.android.internal.view.ActionBarPolicy;

        $r2 = r0.<com.android.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i2 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i2 < 16 goto label1;

        $r6 = r0.<com.android.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r7.<android.content.res.Resources: boolean getBoolean(int)>(17891335);

        return $z0;

     label1:
        $r4 = r0.<com.android.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i0 = r1.<android.content.res.Configuration: int screenWidthDp>;

        i1 = r1.<android.content.res.Configuration: int screenHeightDp>;

        $i3 = r1.<android.content.res.Configuration: int orientation>;

        if $i3 == 2 goto label3;

        if i0 >= 480 goto label3;

        if i0 < 640 goto label2;

        if i1 < 480 goto label2;

        goto label3;

     label2:
        z1 = 0;

        goto label4;

     label3:
        z1 = 1;

     label4:
        return z1;
    }

    public boolean showsOverflowMenuButton()
    {
        com.android.internal.view.ActionBarPolicy r0;

        r0 := @this: com.android.internal.view.ActionBarPolicy;

        return 1;
    }
}
