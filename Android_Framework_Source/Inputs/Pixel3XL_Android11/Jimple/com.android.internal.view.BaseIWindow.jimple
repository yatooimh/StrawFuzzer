public class com.android.internal.view.BaseIWindow extends android.view.IWindow$Stub
{
    public int mSeq;
    private android.view.IWindowSession mSession;

    public void <init>()
    {
        com.android.internal.view.BaseIWindow r0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        specialinvoke r0.<android.view.IWindow$Stub: void <init>()>();

        return;
    }

    public void closeSystemDialogs(java.lang.String)
    {
        com.android.internal.view.BaseIWindow r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void dispatchAppVisibility(boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        boolean z0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        z0 := @parameter0: boolean;

        return;
    }

    public void dispatchDragEvent(android.view.DragEvent)
    {
        com.android.internal.view.BaseIWindow r0;
        int $i0;
        android.view.IWindowSession $r1;
        android.os.RemoteException $r2;
        android.view.DragEvent r3;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r3 := @parameter0: android.view.DragEvent;

        $i0 = virtualinvoke r3.<android.view.DragEvent: int getAction()>();

        if $i0 != 3 goto label4;

     label1:
        $r1 = r0.<com.android.internal.view.BaseIWindow: android.view.IWindowSession mSession>;

        interfaceinvoke $r1.<android.view.IWindowSession: void reportDropResult(android.view.IWindow,boolean)>(r0, 0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchGetNewSurface()
    {
        com.android.internal.view.BaseIWindow r0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        return;
    }

    public void dispatchPointerCaptureChanged(boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        boolean z0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        z0 := @parameter0: boolean;

        return;
    }

    public void dispatchSystemUiVisibilityChanged(int, int, int, int)
    {
        com.android.internal.view.BaseIWindow r0;
        int i0, i1, i2, i3;

        r0 := @this: com.android.internal.view.BaseIWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<com.android.internal.view.BaseIWindow: int mSeq> = i0;

        return;
    }

    public void dispatchWallpaperCommand(java.lang.String, int, int, int, android.os.Bundle, boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        int i0, i1, i2;
        android.os.Bundle r1;
        boolean z0;
        android.view.IWindowSession $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;
        java.lang.String r5;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: android.os.Bundle;

        z0 := @parameter5: boolean;

        if z0 == 0 goto label4;

     label1:
        $r2 = r0.<com.android.internal.view.BaseIWindow: android.view.IWindowSession mSession>;

        $r3 = virtualinvoke r0.<com.android.internal.view.BaseIWindow: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.view.IWindowSession: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>($r3, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchWallpaperOffsets(float, float, float, float, float, boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        float f0, f1, f2, f3, f4;
        boolean z0;
        android.view.IWindowSession $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.internal.view.BaseIWindow;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        z0 := @parameter5: boolean;

        if z0 == 0 goto label4;

     label1:
        $r2 = r0.<com.android.internal.view.BaseIWindow: android.view.IWindowSession mSession>;

        $r3 = virtualinvoke r0.<com.android.internal.view.BaseIWindow: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.view.IWindowSession: void wallpaperOffsetsComplete(android.os.IBinder)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchWindowShown()
    {
        com.android.internal.view.BaseIWindow r0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        return;
    }

    public void executeCommand(java.lang.String, java.lang.String, android.os.ParcelFileDescriptor)
    {
        com.android.internal.view.BaseIWindow r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.String $r4, r6, r7;
        java.lang.Throwable $r5;
        java.lang.StringBuilder r8;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r1 := @parameter2: android.os.ParcelFileDescriptor;

        if r1 == null goto label4;

     label1:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported command ");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r4 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.os.ParcelFileDescriptor: void closeWithError(java.lang.String)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void hideInsets(int, boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void insetsChanged(android.view.InsetsState)
    {
        com.android.internal.view.BaseIWindow r0;
        android.view.InsetsState r1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: android.view.InsetsState;

        return;
    }

    public void insetsControlChanged(android.view.InsetsState, android.view.InsetsSourceControl[])
    {
        com.android.internal.view.BaseIWindow r0;
        android.view.InsetsState r1;
        android.view.InsetsSourceControl[] r2;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: android.view.InsetsState;

        r2 := @parameter1: android.view.InsetsSourceControl[];

        return;
    }

    public void locationInParentDisplayChanged(android.graphics.Point)
    {
        com.android.internal.view.BaseIWindow r0;
        android.graphics.Point r1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: android.graphics.Point;

        return;
    }

    public void moved(int, int)
    {
        com.android.internal.view.BaseIWindow r0;
        int i0, i1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void requestAppKeyboardShortcuts(com.android.internal.os.IResultReceiver, int)
    {
        com.android.internal.view.BaseIWindow r0;
        com.android.internal.os.IResultReceiver r1;
        int i0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: com.android.internal.os.IResultReceiver;

        i0 := @parameter1: int;

        return;
    }

    public void requestScrollCapture(android.view.IScrollCaptureController)
    {
        com.android.internal.view.BaseIWindow r0;
        android.os.RemoteException $r1;
        android.view.IScrollCaptureController r2;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r2 := @parameter0: android.view.IScrollCaptureController;

     label1:
        interfaceinvoke r2.<android.view.IScrollCaptureController: void onClientUnavailable()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void resized(android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, boolean, android.util.MergedConfiguration, android.graphics.Rect, boolean, boolean, int, android.view.DisplayCutout$ParcelableWrapper)
    {
        com.android.internal.view.BaseIWindow r0;
        android.graphics.Rect r1, r2, r3, r5, r9;
        boolean z0, z1, z2;
        android.util.MergedConfiguration r4;
        int i0;
        android.view.DisplayCutout$ParcelableWrapper r6;
        android.view.IWindowSession $r7;
        android.os.RemoteException $r8;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r9 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.graphics.Rect;

        z0 := @parameter4: boolean;

        r4 := @parameter5: android.util.MergedConfiguration;

        r5 := @parameter6: android.graphics.Rect;

        z1 := @parameter7: boolean;

        z2 := @parameter8: boolean;

        i0 := @parameter9: int;

        r6 := @parameter10: android.view.DisplayCutout$ParcelableWrapper;

        if z0 == 0 goto label4;

     label1:
        $r7 = r0.<com.android.internal.view.BaseIWindow: android.view.IWindowSession mSession>;

        interfaceinvoke $r7.<android.view.IWindowSession: void finishDrawing(android.view.IWindow,android.view.SurfaceControl$Transaction)>(r0, null);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setSession(android.view.IWindowSession)
    {
        com.android.internal.view.BaseIWindow r0;
        android.view.IWindowSession r1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: android.view.IWindowSession;

        r0.<com.android.internal.view.BaseIWindow: android.view.IWindowSession mSession> = r1;

        return;
    }

    public void showInsets(int, boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void updatePointerIcon(float, float)
    {
        com.android.internal.view.BaseIWindow r0;
        float f0, f1;
        android.hardware.input.InputManager $r1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r1.<android.hardware.input.InputManager: void setPointerIconType(int)>(1);

        return;
    }

    public void windowFocusChanged(boolean, boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        boolean z0, z1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        return;
    }
}
