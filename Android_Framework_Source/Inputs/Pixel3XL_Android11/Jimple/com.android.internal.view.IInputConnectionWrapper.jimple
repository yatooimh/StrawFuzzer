public abstract class com.android.internal.view.IInputConnectionWrapper extends com.android.internal.view.IInputContext$Stub
{
    private static final boolean DEBUG;
    private static final int DO_BEGIN_BATCH_EDIT;
    private static final int DO_CLEAR_META_KEY_STATES;
    private static final int DO_CLOSE_CONNECTION;
    private static final int DO_COMMIT_COMPLETION;
    private static final int DO_COMMIT_CONTENT;
    private static final int DO_COMMIT_CORRECTION;
    private static final int DO_COMMIT_TEXT;
    private static final int DO_DELETE_SURROUNDING_TEXT;
    private static final int DO_DELETE_SURROUNDING_TEXT_IN_CODE_POINTS;
    private static final int DO_END_BATCH_EDIT;
    private static final int DO_FINISH_COMPOSING_TEXT;
    private static final int DO_GET_CURSOR_CAPS_MODE;
    private static final int DO_GET_EXTRACTED_TEXT;
    private static final int DO_GET_SELECTED_TEXT;
    private static final int DO_GET_TEXT_AFTER_CURSOR;
    private static final int DO_GET_TEXT_BEFORE_CURSOR;
    private static final int DO_PERFORM_CONTEXT_MENU_ACTION;
    private static final int DO_PERFORM_EDITOR_ACTION;
    private static final int DO_PERFORM_PRIVATE_COMMAND;
    private static final int DO_REQUEST_UPDATE_CURSOR_ANCHOR_INFO;
    private static final int DO_SEND_KEY_EVENT;
    private static final int DO_SET_COMPOSING_REGION;
    private static final int DO_SET_COMPOSING_TEXT;
    private static final int DO_SET_SELECTION;
    private static final java.lang.String TAG;
    private boolean mFinished;
    private android.os.Handler mH;
    private android.view.inputmethod.InputConnection mInputConnection;
    private java.lang.Object mLock;
    private android.os.Looper mMainLooper;

    public void <init>(android.os.Looper, android.view.inputmethod.InputConnection)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Looper r1, $r5;
        android.view.inputmethod.InputConnection r2;
        java.lang.Object $r3;
        com.android.internal.view.IInputConnectionWrapper$MyHandler $r4;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.view.inputmethod.InputConnection;

        specialinvoke r0.<com.android.internal.view.IInputContext$Stub: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.Object mLock> = $r3;

        r0.<com.android.internal.view.IInputConnectionWrapper: boolean mFinished> = 0;

        r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection mInputConnection> = r2;

        r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Looper mMainLooper> = r1;

        $r4 = new com.android.internal.view.IInputConnectionWrapper$MyHandler;

        $r5 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Looper mMainLooper>;

        specialinvoke $r4.<com.android.internal.view.IInputConnectionWrapper$MyHandler: void <init>(com.android.internal.view.IInputConnectionWrapper,android.os.Looper)>(r0, $r5);

        r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH> = $r4;

        return;
    }

    public void beginBatchEdit()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>(90);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void clearMetaKeyStates(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(130, i0, 0);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void closeConnection()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>(150);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void commitCompletion(android.view.inputmethod.CompletionInfo)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.inputmethod.CompletionInfo r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)>(55, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void commitContent(android.view.inputmethod.InputContentInfo, int, android.os.Bundle, com.android.internal.inputmethod.IIntResultCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.inputmethod.InputContentInfo r1;
        int i0;
        android.os.Bundle r2;
        com.android.internal.inputmethod.IIntResultCallback r3;
        com.android.internal.os.SomeArgs r4;
        android.os.Handler $r5;
        android.os.Message $r6;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.InputContentInfo;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: com.android.internal.inputmethod.IIntResultCallback;

        r4 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r2;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r3;

        $r5 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(160, i0, 0, r4);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r6);

        return;
    }

    public void commitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.inputmethod.CorrectionInfo r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)>(56, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void commitText(java.lang.CharSequence, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        java.lang.CharSequence r1;
        int i0;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(50, i0, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void deleteSurroundingText(int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(80, i0, i1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void deleteSurroundingTextInCodePoints(int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(81, i0, i1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    void dispatchMessage(android.os.Message)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message r1;
        android.os.Looper $r2, $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.os.Message;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Looper mMainLooper>;

        if $r2 != $r3 goto label1;

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void executeMessage(android.os.Message)>(r1);

        virtualinvoke r1.<android.os.Message: void recycle()>();

        return;

     label1:
        $r4 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public void endBatchEdit()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>(95);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    void executeMessage(android.os.Message)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, $i2, $i3, $i5, $i6, $i9, $i10, $i12, $i14, $i21, $i22, $i24, $i26, $i28, $i30, $i32, $i33, $i35, $i36, $i38, $i40, $i42, $i44, $i45, $i48, i59, i61;
        android.view.inputmethod.ExtractedTextRequest r1;
        boolean $z0, $z2, $z4, $z5, $z6, $z7, $z8, $z10, $z12, $z14, $z16, $z18, $z20, $z22, $z24, $z25, $z26, $z27, $z28, $z29, $z31, $z33, $z35, $z37, $z39, z41, z42;
        java.lang.Object $r2, $r3, $r4, $r8, $r10, $r11, $r12, $r13, $r14, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r29, r92, r94, r97;
        java.lang.String $r7, $r34, $r39, $r44, $r50, $r55, $r59, $r65, $r73, r105;
        android.os.Bundle $r9, r106;
        android.view.KeyEvent $r15;
        java.lang.CharSequence $r17, $r26, r128, r133, r138;
        android.view.inputmethod.CorrectionInfo $r28;
        android.view.inputmethod.CompletionInfo $r30;
        java.lang.StringBuilder $r31, $r36, $r41, $r52, $r62, $r70, r87, r89, r120;
        android.os.RemoteException $r35, $r40, $r47, $r51, $r56, $r61, $r69;
        java.lang.Throwable $r45, $r46, $r60, $r66, $r67, $r68, $r74;
        android.os.Message r75;
        byte b58, b60;
        android.view.inputmethod.InputConnection r77, r78, r79, r80, r81, r82, r85, r91, r100, r103, r107, r109, r110, r111, r112, r113, r114, r117, r123, r127, r132, r137, r141, r142;
        com.android.internal.os.SomeArgs r83, r104, r115;
        com.android.internal.inputmethod.IIntResultCallback r84, r99, r122;
        android.view.inputmethod.InputContentInfo r86;
        com.android.internal.inputmethod.IExtractedTextResultCallback r116;
        android.view.inputmethod.ExtractedText r118;
        com.android.internal.inputmethod.ICharSequenceResultCallback r126, r131, r136;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r75 := @parameter0: android.os.Message;

        i0 = r75.<android.os.Message: int what>;

        if i0 == 80 goto label149;

        if i0 == 81 goto label146;

        b58 = 0;

        lookupswitch(i0)
        {
            case 10: goto label139;
            case 20: goto label132;
            case 25: goto label125;
            case 30: goto label118;
            case 40: goto label103;
            case 50: goto label100;
            case 63: goto label097;
            case 65: goto label094;
            case 70: goto label091;
            case 90: goto label088;
            case 95: goto label085;
            case 120: goto label075;
            case 130: goto label072;
            case 140: goto label064;
            case 150: goto label043;
            case 160: goto label021;
            default: goto label001;
        };

     label001:
        tableswitch(i0)
        {
            case 55: goto label018;
            case 56: goto label015;
            case 57: goto label012;
            case 58: goto label009;
            case 59: goto label006;
            case 60: goto label003;
            default: goto label002;
        };

     label002:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message code: ");

        $i48 = r75.<android.os.Message: int what>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i48);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", $r34);

        return;

     label003:
        r77 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r77 == null goto label005;

        $z29 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z29 != 0 goto label004;

        goto label005;

     label004:
        $r25 = r75.<android.os.Message: java.lang.Object obj>;

        $r26 = (java.lang.CharSequence) $r25;

        $i38 = r75.<android.os.Message: int arg1>;

        interfaceinvoke r77.<android.view.inputmethod.InputConnection: boolean setComposingText(java.lang.CharSequence,int)>($r26, $i38);

        return;

     label005:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "setComposingText on inactive InputConnection");

        return;

     label006:
        r78 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r78 == null goto label008;

        $z31 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z31 != 0 goto label007;

        goto label008;

     label007:
        $i40 = r75.<android.os.Message: int arg1>;

        interfaceinvoke r78.<android.view.inputmethod.InputConnection: boolean performContextMenuAction(int)>($i40);

        return;

     label008:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "performContextMenuAction on inactive InputConnection");

        return;

     label009:
        r79 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r79 == null goto label011;

        $z33 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z33 != 0 goto label010;

        goto label011;

     label010:
        $i42 = r75.<android.os.Message: int arg1>;

        interfaceinvoke r79.<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>($i42);

        return;

     label011:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "performEditorAction on inactive InputConnection");

        return;

     label012:
        r80 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r80 == null goto label014;

        $z35 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z35 != 0 goto label013;

        goto label014;

     label013:
        $i45 = r75.<android.os.Message: int arg1>;

        $i44 = r75.<android.os.Message: int arg2>;

        interfaceinvoke r80.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>($i45, $i44);

        return;

     label014:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "setSelection on inactive InputConnection");

        return;

     label015:
        r81 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r81 == null goto label017;

        $z37 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z37 != 0 goto label016;

        goto label017;

     label016:
        $r27 = r75.<android.os.Message: java.lang.Object obj>;

        $r28 = (android.view.inputmethod.CorrectionInfo) $r27;

        interfaceinvoke r81.<android.view.inputmethod.InputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>($r28);

        return;

     label017:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "commitCorrection on inactive InputConnection");

        return;

     label018:
        r82 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r82 == null goto label020;

        $z39 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z39 != 0 goto label019;

        goto label020;

     label019:
        $r29 = r75.<android.os.Message: java.lang.Object obj>;

        $r30 = (android.view.inputmethod.CompletionInfo) $r29;

        interfaceinvoke r82.<android.view.inputmethod.InputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>($r30);

        return;

     label020:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "commitCompletion on inactive InputConnection");

        return;

     label021:
        i59 = r75.<android.os.Message: int arg1>;

        $r2 = r75.<android.os.Message: java.lang.Object obj>;

        r83 = (com.android.internal.os.SomeArgs) $r2;

     label022:
        $r3 = r83.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r84 = (com.android.internal.inputmethod.IIntResultCallback) $r3;

        r85 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

     label023:
        if r85 == null goto label034;

     label024:
        $z4 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z4 != 0 goto label026;

     label025:
        goto label034;

     label026:
        $r4 = r83.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r86 = (android.view.inputmethod.InputContentInfo) $r4;

     label027:
        if r86 == null goto label032;

     label028:
        $z5 = virtualinvoke r86.<android.view.inputmethod.InputContentInfo: boolean validate()>();

        if $z5 != 0 goto label030;

     label029:
        goto label032;

     label030:
        $r8 = r83.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r9 = (android.os.Bundle) $r8;

        z41 = interfaceinvoke r85.<android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>(r86, i59, $r9);

     label031:
        goto label036;

     label032:
        r87 = new java.lang.StringBuilder;

        specialinvoke r87.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("commitContent with invalid inputContentInfo=");

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r86);

        $r7 = virtualinvoke r87.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", $r7);

     label033:
        z41 = 0;

        goto label036;

     label034:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "commitContent on inactive InputConnection");

     label035:
        z41 = 0;

     label036:
        if z41 == 0 goto label037;

        b58 = 1;

     label037:
        interfaceinvoke r84.<com.android.internal.inputmethod.IIntResultCallback: void onResult(int)>(b58);

     label038:
        goto label041;

     label039:
        $r47 := @caughtexception;

     label040:
        r89 = new java.lang.StringBuilder;

        specialinvoke r89.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to return the result to commitContent(). result=");

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z41);

        $r50 = virtualinvoke r89.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", $r50, $r47);

     label041:
        virtualinvoke r83.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label042:
        $r74 := @caughtexception;

        virtualinvoke r83.<com.android.internal.os.SomeArgs: void recycle()>();

        throw $r74;

     label043:
        $z6 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isFinished()>();

        if $z6 == 0 goto label044;

        return;

     label044:
        r91 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

     label045:
        if r91 != null goto label051;

        r92 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.Object mLock>;

        entermonitor r92;

     label046:
        r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection mInputConnection> = null;

        r0.<com.android.internal.view.IInputConnectionWrapper: boolean mFinished> = 1;

        exitmonitor r92;

     label047:
        return;

     label048:
        $r68 := @caughtexception;

     label049:
        exitmonitor r92;

     label050:
        throw $r68;

     label051:
        $i9 = staticinvoke <android.view.inputmethod.InputConnectionInspector: int getMissingMethodFlags(android.view.inputmethod.InputConnection)>(r91);

        $i10 = $i9 & 64;

        if $i10 != 0 goto label052;

        interfaceinvoke r91.<android.view.inputmethod.InputConnection: void closeConnection()>();

     label052:
        r94 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.Object mLock>;

        entermonitor r94;

     label053:
        r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection mInputConnection> = null;

        r0.<com.android.internal.view.IInputConnectionWrapper: boolean mFinished> = 1;

        exitmonitor r94;

     label054:
        return;

     label055:
        $r67 := @caughtexception;

     label056:
        exitmonitor r94;

     label057:
        throw $r67;

     label058:
        $r66 := @caughtexception;

        r97 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.Object mLock>;

        entermonitor r97;

     label059:
        r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection mInputConnection> = null;

        r0.<com.android.internal.view.IInputConnectionWrapper: boolean mFinished> = 1;

        exitmonitor r97;

     label060:
        throw $r66;

     label061:
        $r60 := @caughtexception;

     label062:
        exitmonitor r97;

     label063:
        throw $r60;

     label064:
        $r10 = r75.<android.os.Message: java.lang.Object obj>;

        r99 = (com.android.internal.inputmethod.IIntResultCallback) $r10;

        r100 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r100 == null goto label066;

        $z7 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z7 != 0 goto label065;

        goto label066;

     label065:
        $i12 = r75.<android.os.Message: int arg1>;

        z42 = interfaceinvoke r100.<android.view.inputmethod.InputConnection: boolean requestCursorUpdates(int)>($i12);

        goto label067;

     label066:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "requestCursorAnchorInfo on inactive InputConnection");

        z42 = 0;

     label067:
        b60 = 0;

        if z42 == 0 goto label068;

        b60 = 1;

     label068:
        interfaceinvoke r99.<com.android.internal.inputmethod.IIntResultCallback: void onResult(int)>(b60);

     label069:
        goto label071;

     label070:
        $r40 := @caughtexception;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to return the result to requestCursorUpdates(). result=");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z42);

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", $r44, $r40);

     label071:
        return;

     label072:
        r103 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r103 == null goto label074;

        $z8 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z8 != 0 goto label073;

        goto label074;

     label073:
        $i14 = r75.<android.os.Message: int arg1>;

        interfaceinvoke r103.<android.view.inputmethod.InputConnection: boolean clearMetaKeyStates(int)>($i14);

        return;

     label074:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "clearMetaKeyStates on inactive InputConnection");

        return;

     label075:
        $r11 = r75.<android.os.Message: java.lang.Object obj>;

        r104 = (com.android.internal.os.SomeArgs) $r11;

     label076:
        $r12 = r104.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r105 = (java.lang.String) $r12;

        $r13 = r104.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r106 = (android.os.Bundle) $r13;

        r107 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

     label077:
        if r107 == null goto label082;

     label078:
        $z10 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z10 != 0 goto label080;

     label079:
        goto label082;

     label080:
        interfaceinvoke r107.<android.view.inputmethod.InputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>(r105, r106);

     label081:
        virtualinvoke r104.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label082:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "performPrivateCommand on inactive InputConnection");

     label083:
        virtualinvoke r104.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label084:
        $r45 := @caughtexception;

        virtualinvoke r104.<com.android.internal.os.SomeArgs: void recycle()>();

        throw $r45;

     label085:
        r109 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r109 == null goto label087;

        $z12 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z12 != 0 goto label086;

        goto label087;

     label086:
        interfaceinvoke r109.<android.view.inputmethod.InputConnection: boolean endBatchEdit()>();

        return;

     label087:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "endBatchEdit on inactive InputConnection");

        return;

     label088:
        r110 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r110 == null goto label090;

        $z14 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z14 != 0 goto label089;

        goto label090;

     label089:
        interfaceinvoke r110.<android.view.inputmethod.InputConnection: boolean beginBatchEdit()>();

        return;

     label090:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "beginBatchEdit on inactive InputConnection");

        return;

     label091:
        r111 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r111 == null goto label093;

        $z16 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z16 != 0 goto label092;

        goto label093;

     label092:
        $r14 = r75.<android.os.Message: java.lang.Object obj>;

        $r15 = (android.view.KeyEvent) $r14;

        interfaceinvoke r111.<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r15);

        return;

     label093:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "sendKeyEvent on inactive InputConnection");

        return;

     label094:
        $z18 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isFinished()>();

        if $z18 == 0 goto label095;

        return;

     label095:
        r112 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r112 != null goto label096;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "finishComposingText on inactive InputConnection");

        return;

     label096:
        interfaceinvoke r112.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

        return;

     label097:
        r113 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r113 == null goto label099;

        $z20 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z20 != 0 goto label098;

        goto label099;

     label098:
        $i22 = r75.<android.os.Message: int arg1>;

        $i21 = r75.<android.os.Message: int arg2>;

        interfaceinvoke r113.<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>($i22, $i21);

        return;

     label099:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "setComposingRegion on inactive InputConnection");

        return;

     label100:
        r114 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r114 == null goto label102;

        $z22 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z22 != 0 goto label101;

        goto label102;

     label101:
        $r16 = r75.<android.os.Message: java.lang.Object obj>;

        $r17 = (java.lang.CharSequence) $r16;

        $i24 = r75.<android.os.Message: int arg1>;

        interfaceinvoke r114.<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>($r17, $i24);

        return;

     label102:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "commitText on inactive InputConnection");

        return;

     label103:
        $r18 = r75.<android.os.Message: java.lang.Object obj>;

        r115 = (com.android.internal.os.SomeArgs) $r18;

     label104:
        $r19 = r115.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r1 = (android.view.inputmethod.ExtractedTextRequest) $r19;

        $r20 = r115.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r116 = (com.android.internal.inputmethod.IExtractedTextResultCallback) $r20;

        r117 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

     label105:
        if r117 == null goto label110;

     label106:
        $z24 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z24 != 0 goto label108;

     label107:
        goto label110;

     label108:
        $i26 = r75.<android.os.Message: int arg1>;

        r118 = interfaceinvoke r117.<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>(r1, $i26);

     label109:
        goto label112;

     label110:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getExtractedText on inactive InputConnection");

     label111:
        r118 = null;

     label112:
        interfaceinvoke r116.<com.android.internal.inputmethod.IExtractedTextResultCallback: void onResult(android.view.inputmethod.ExtractedText)>(r118);

     label113:
        goto label116;

     label114:
        $r56 := @caughtexception;

     label115:
        r120 = new java.lang.StringBuilder;

        specialinvoke r120.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to return the result to getExtractedText(). result=");

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r118);

        $r59 = virtualinvoke r120.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", $r59, $r56);

     label116:
        virtualinvoke r115.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label117:
        $r46 := @caughtexception;

        virtualinvoke r115.<com.android.internal.os.SomeArgs: void recycle()>();

        throw $r46;

     label118:
        $r21 = r75.<android.os.Message: java.lang.Object obj>;

        r122 = (com.android.internal.inputmethod.IIntResultCallback) $r21;

        r123 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r123 == null goto label120;

        $z25 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z25 != 0 goto label119;

        goto label120;

     label119:
        $i28 = r75.<android.os.Message: int arg1>;

        i61 = interfaceinvoke r123.<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>($i28);

        goto label121;

     label120:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getCursorCapsMode on inactive InputConnection");

        i61 = 0;

     label121:
        interfaceinvoke r122.<com.android.internal.inputmethod.IIntResultCallback: void onResult(int)>(i61);

     label122:
        goto label124;

     label123:
        $r69 := @caughtexception;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to return the result to getCursorCapsMode(). result=");

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i61);

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", $r73, $r69);

     label124:
        return;

     label125:
        $r22 = r75.<android.os.Message: java.lang.Object obj>;

        r126 = (com.android.internal.inputmethod.ICharSequenceResultCallback) $r22;

        r127 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r127 == null goto label127;

        $z26 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z26 != 0 goto label126;

        goto label127;

     label126:
        $i30 = r75.<android.os.Message: int arg1>;

        r128 = interfaceinvoke r127.<android.view.inputmethod.InputConnection: java.lang.CharSequence getSelectedText(int)>($i30);

        goto label128;

     label127:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getSelectedText on inactive InputConnection");

        r128 = null;

     label128:
        interfaceinvoke r126.<com.android.internal.inputmethod.ICharSequenceResultCallback: void onResult(java.lang.CharSequence)>(r128);

     label129:
        goto label131;

     label130:
        $r61 := @caughtexception;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to return the result to getSelectedText(). result=");

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r128);

        $r65 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", $r65, $r61);

     label131:
        return;

     label132:
        $r23 = r75.<android.os.Message: java.lang.Object obj>;

        r131 = (com.android.internal.inputmethod.ICharSequenceResultCallback) $r23;

        r132 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r132 == null goto label134;

        $z27 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z27 != 0 goto label133;

        goto label134;

     label133:
        $i33 = r75.<android.os.Message: int arg1>;

        $i32 = r75.<android.os.Message: int arg2>;

        r133 = interfaceinvoke r132.<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>($i33, $i32);

        goto label135;

     label134:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getTextBeforeCursor on inactive InputConnection");

        r133 = null;

     label135:
        interfaceinvoke r131.<com.android.internal.inputmethod.ICharSequenceResultCallback: void onResult(java.lang.CharSequence)>(r133);

     label136:
        goto label138;

     label137:
        $r35 := @caughtexception;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to return the result to getTextBeforeCursor(). result=");

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r133);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", $r39, $r35);

     label138:
        return;

     label139:
        $r24 = r75.<android.os.Message: java.lang.Object obj>;

        r136 = (com.android.internal.inputmethod.ICharSequenceResultCallback) $r24;

        r137 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r137 == null goto label141;

        $z28 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z28 != 0 goto label140;

        goto label141;

     label140:
        $i36 = r75.<android.os.Message: int arg1>;

        $i35 = r75.<android.os.Message: int arg2>;

        r138 = interfaceinvoke r137.<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>($i36, $i35);

        goto label142;

     label141:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getTextAfterCursor on inactive InputConnection");

        r138 = null;

     label142:
        interfaceinvoke r136.<com.android.internal.inputmethod.ICharSequenceResultCallback: void onResult(java.lang.CharSequence)>(r138);

     label143:
        goto label145;

     label144:
        $r51 := @caughtexception;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to return the result to getTextAfterCursor(). result=");

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r138);

        $r55 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", $r55, $r51);

     label145:
        return;

     label146:
        r141 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r141 == null goto label148;

        $z2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z2 != 0 goto label147;

        goto label148;

     label147:
        $i6 = r75.<android.os.Message: int arg1>;

        $i5 = r75.<android.os.Message: int arg2>;

        interfaceinvoke r141.<android.view.inputmethod.InputConnection: boolean deleteSurroundingTextInCodePoints(int,int)>($i6, $i5);

        return;

     label148:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "deleteSurroundingTextInCodePoints on inactive InputConnection");

        return;

     label149:
        r142 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection getInputConnection()>();

        if r142 == null goto label151;

        $z0 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z0 != 0 goto label150;

        goto label151;

     label150:
        $i3 = r75.<android.os.Message: int arg1>;

        $i2 = r75.<android.os.Message: int arg2>;

        interfaceinvoke r142.<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>($i3, $i2);

        return;

     label151:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "deleteSurroundingText on inactive InputConnection");

        return;

        catch java.lang.Throwable from label022 to label023 with label042;
        catch java.lang.Throwable from label024 to label025 with label042;
        catch java.lang.Throwable from label026 to label027 with label042;
        catch java.lang.Throwable from label028 to label029 with label042;
        catch java.lang.Throwable from label030 to label031 with label042;
        catch java.lang.Throwable from label032 to label033 with label042;
        catch java.lang.Throwable from label034 to label035 with label042;
        catch android.os.RemoteException from label037 to label038 with label039;
        catch java.lang.Throwable from label037 to label038 with label042;
        catch java.lang.Throwable from label040 to label041 with label042;
        catch java.lang.Throwable from label044 to label045 with label058;
        catch java.lang.Throwable from label046 to label047 with label048;
        catch java.lang.Throwable from label049 to label050 with label048;
        catch java.lang.Throwable from label051 to label052 with label058;
        catch java.lang.Throwable from label053 to label054 with label055;
        catch java.lang.Throwable from label056 to label057 with label055;
        catch java.lang.Throwable from label059 to label060 with label061;
        catch java.lang.Throwable from label062 to label063 with label061;
        catch android.os.RemoteException from label068 to label069 with label070;
        catch java.lang.Throwable from label076 to label077 with label084;
        catch java.lang.Throwable from label078 to label079 with label084;
        catch java.lang.Throwable from label080 to label081 with label084;
        catch java.lang.Throwable from label082 to label083 with label084;
        catch java.lang.Throwable from label104 to label105 with label117;
        catch java.lang.Throwable from label106 to label107 with label117;
        catch java.lang.Throwable from label108 to label109 with label117;
        catch java.lang.Throwable from label110 to label111 with label117;
        catch android.os.RemoteException from label112 to label113 with label114;
        catch java.lang.Throwable from label112 to label113 with label117;
        catch java.lang.Throwable from label115 to label116 with label117;
        catch android.os.RemoteException from label121 to label122 with label123;
        catch android.os.RemoteException from label128 to label129 with label130;
        catch android.os.RemoteException from label135 to label136 with label137;
        catch android.os.RemoteException from label142 to label143 with label144;
    }

    public void finishComposingText()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>(65);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void getCursorCapsMode(int, com.android.internal.inputmethod.IIntResultCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        com.android.internal.inputmethod.IIntResultCallback r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.inputmethod.IIntResultCallback;

        $r2 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(30, i0, 0, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r3);

        return;
    }

    public void getExtractedText(android.view.inputmethod.ExtractedTextRequest, int, com.android.internal.inputmethod.IExtractedTextResultCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        int i0;
        com.android.internal.inputmethod.IExtractedTextResultCallback r2;
        com.android.internal.os.SomeArgs r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.inputmethod.IExtractedTextResultCallback;

        r3 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r3.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r3.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r2;

        $r4 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(40, i0, 0, r3);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r5);

        return;
    }

    public android.view.inputmethod.InputConnection getInputConnection()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.view.inputmethod.InputConnection r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.internal.view.IInputConnectionWrapper: android.view.inputmethod.InputConnection mInputConnection>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void getSelectedText(int, com.android.internal.inputmethod.ICharSequenceResultCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        com.android.internal.inputmethod.ICharSequenceResultCallback r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.inputmethod.ICharSequenceResultCallback;

        $r2 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(25, i0, 0, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r3);

        return;
    }

    public void getTextAfterCursor(int, int, com.android.internal.inputmethod.ICharSequenceResultCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.inputmethod.ICharSequenceResultCallback r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.inputmethod.ICharSequenceResultCallback;

        $r2 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(10, i0, i1, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r3);

        return;
    }

    public void getTextBeforeCursor(int, int, com.android.internal.inputmethod.ICharSequenceResultCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.inputmethod.ICharSequenceResultCallback r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.inputmethod.ICharSequenceResultCallback;

        $r2 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(20, i0, i1, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r3);

        return;
    }

    protected abstract boolean isActive();

    protected boolean isFinished()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.internal.view.IInputConnectionWrapper: boolean mFinished>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.os.Message obtainMessage(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(i0);

        return $r2;
    }

    android.os.Message obtainMessageII(int, int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(i0, i1, i2);

        return $r2;
    }

    android.os.Message obtainMessageIO(int, int, java.lang.Object)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        java.lang.Object r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, 0, r1);

        return $r3;
    }

    android.os.Message obtainMessageO(int, java.lang.Object)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        java.lang.Object r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, 0, 0, r1);

        return $r3;
    }

    android.os.Message obtainMessageOO(int, java.lang.Object, java.lang.Object)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        java.lang.Object r1, r2;
        com.android.internal.os.SomeArgs r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r3.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r3.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r2;

        $r4 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, 0, 0, r3);

        return $r5;
    }

    public void performContextMenuAction(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(59, i0, 0);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void performEditorAction(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(58, i0, 0);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void performPrivateCommand(java.lang.String, android.os.Bundle)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r3 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(120, r1, r2);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r3);

        return;
    }

    public void requestUpdateCursorAnchorInfo(int, com.android.internal.inputmethod.IIntResultCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        com.android.internal.inputmethod.IIntResultCallback r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.inputmethod.IIntResultCallback;

        $r2 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(140, i0, 0, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r3);

        return;
    }

    public void sendKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.KeyEvent r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)>(70, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void setComposingRegion(int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(63, i0, i1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void setComposingText(java.lang.CharSequence, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        java.lang.CharSequence r1;
        int i0;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(60, i0, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void setSelection(int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(57, i0, i1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.IInputConnectionWrapper: java.lang.String TAG> = "IInputConnectionWrapper";

        <com.android.internal.view.IInputConnectionWrapper: int DO_SET_SELECTION> = 57;

        <com.android.internal.view.IInputConnectionWrapper: int DO_SET_COMPOSING_TEXT> = 60;

        <com.android.internal.view.IInputConnectionWrapper: int DO_SET_COMPOSING_REGION> = 63;

        <com.android.internal.view.IInputConnectionWrapper: int DO_SEND_KEY_EVENT> = 70;

        <com.android.internal.view.IInputConnectionWrapper: int DO_REQUEST_UPDATE_CURSOR_ANCHOR_INFO> = 140;

        <com.android.internal.view.IInputConnectionWrapper: int DO_PERFORM_PRIVATE_COMMAND> = 120;

        <com.android.internal.view.IInputConnectionWrapper: int DO_PERFORM_EDITOR_ACTION> = 58;

        <com.android.internal.view.IInputConnectionWrapper: int DO_PERFORM_CONTEXT_MENU_ACTION> = 59;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_TEXT_BEFORE_CURSOR> = 20;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_TEXT_AFTER_CURSOR> = 10;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_SELECTED_TEXT> = 25;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_EXTRACTED_TEXT> = 40;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_CURSOR_CAPS_MODE> = 30;

        <com.android.internal.view.IInputConnectionWrapper: int DO_FINISH_COMPOSING_TEXT> = 65;

        <com.android.internal.view.IInputConnectionWrapper: int DO_END_BATCH_EDIT> = 95;

        <com.android.internal.view.IInputConnectionWrapper: int DO_DELETE_SURROUNDING_TEXT_IN_CODE_POINTS> = 81;

        <com.android.internal.view.IInputConnectionWrapper: int DO_DELETE_SURROUNDING_TEXT> = 80;

        <com.android.internal.view.IInputConnectionWrapper: int DO_COMMIT_TEXT> = 50;

        <com.android.internal.view.IInputConnectionWrapper: int DO_COMMIT_CORRECTION> = 56;

        <com.android.internal.view.IInputConnectionWrapper: int DO_COMMIT_CONTENT> = 160;

        <com.android.internal.view.IInputConnectionWrapper: int DO_COMMIT_COMPLETION> = 55;

        <com.android.internal.view.IInputConnectionWrapper: int DO_CLOSE_CONNECTION> = 150;

        <com.android.internal.view.IInputConnectionWrapper: int DO_CLEAR_META_KEY_STATES> = 130;

        <com.android.internal.view.IInputConnectionWrapper: int DO_BEGIN_BATCH_EDIT> = 90;

        <com.android.internal.view.IInputConnectionWrapper: boolean DEBUG> = 0;

        return;
    }
}
