class com.android.internal.view.IInputContext$Stub$Proxy extends java.lang.Object implements com.android.internal.view.IInputContext
{
    public static com.android.internal.view.IInputContext sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        $r1 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void beginBatchEdit() throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void beginBatchEdit()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void clearMetaKeyStates(int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void clearMetaKeyStates(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void commitCompletion(android.view.inputmethod.CompletionInfo) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputContext $r3, $r4;
        java.lang.Throwable $r5;
        android.view.inputmethod.CompletionInfo r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r6 := @parameter0: android.view.inputmethod.CompletionInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void commitCompletion(android.view.inputmethod.CompletionInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void commitContent(android.view.inputmethod.InputContentInfo, int, android.os.Bundle, com.android.internal.inputmethod.IIntResultCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Bundle r1;
        com.android.internal.inputmethod.IIntResultCallback r2;
        android.os.Parcel r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        com.android.internal.view.IInputContext $r5, $r6;
        java.lang.Throwable $r7;
        android.view.inputmethod.InputContentInfo r8;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r8 := @parameter0: android.view.inputmethod.InputContentInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        r2 := @parameter3: com.android.internal.inputmethod.IIntResultCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.view.inputmethod.InputContentInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        if r2 == null goto label14;

     label12:
        r9 = interfaceinvoke r2.<com.android.internal.inputmethod.IIntResultCallback: android.os.IBinder asBinder()>();

     label13:
        goto label15;

     label14:
        r9 = null;

     label15:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r3, null, 1);

        if $z0 != 0 goto label17;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r5 == null goto label17;

        $r6 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.view.IInputContext: void commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle,com.android.internal.inputmethod.IIntResultCallback)>(r8, i0, r1, r2);

     label16:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label17:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label18:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
    }

    public void commitCorrection(android.view.inputmethod.CorrectionInfo) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputContext $r3, $r4;
        java.lang.Throwable $r5;
        android.view.inputmethod.CorrectionInfo r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r6 := @parameter0: android.view.inputmethod.CorrectionInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.view.inputmethod.CorrectionInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void commitCorrection(android.view.inputmethod.CorrectionInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void commitText(java.lang.CharSequence, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputContext $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.CharSequence r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r6 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r6, r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void commitText(java.lang.CharSequence,int)>(r6, i0);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void deleteSurroundingText(int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void deleteSurroundingText(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void deleteSurroundingTextInCodePoints(int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void deleteSurroundingTextInCodePoints(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void endBatchEdit() throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void endBatchEdit()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void finishComposingText() throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void finishComposingText()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void getCursorCapsMode(int, com.android.internal.inputmethod.IIntResultCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        com.android.internal.view.IInputContext $r3, $r4;
        java.lang.Throwable $r5;
        com.android.internal.inputmethod.IIntResultCallback r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: com.android.internal.inputmethod.IIntResultCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<com.android.internal.inputmethod.IIntResultCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void getCursorCapsMode(int,com.android.internal.inputmethod.IIntResultCallback)>(i0, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void getExtractedText(android.view.inputmethod.ExtractedTextRequest, int, com.android.internal.inputmethod.IExtractedTextResultCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        com.android.internal.inputmethod.IExtractedTextResultCallback r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;
        android.view.inputmethod.ExtractedTextRequest r7;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r7 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.inputmethod.IExtractedTextResultCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.view.inputmethod.ExtractedTextRequest: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r1 == null goto label10;

     label08:
        r8 = interfaceinvoke r1.<com.android.internal.inputmethod.IExtractedTextResultCallback: android.os.IBinder asBinder()>();

     label09:
        goto label11;

     label10:
        r8 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, null, 1);

        if $z0 != 0 goto label13;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label13;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void getExtractedText(android.view.inputmethod.ExtractedTextRequest,int,com.android.internal.inputmethod.IExtractedTextResultCallback)>(r7, i0, r1);

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        return "com.android.internal.view.IInputContext";
    }

    public void getSelectedText(int, com.android.internal.inputmethod.ICharSequenceResultCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        com.android.internal.view.IInputContext $r3, $r4;
        java.lang.Throwable $r5;
        com.android.internal.inputmethod.ICharSequenceResultCallback r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: com.android.internal.inputmethod.ICharSequenceResultCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<com.android.internal.inputmethod.ICharSequenceResultCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void getSelectedText(int,com.android.internal.inputmethod.ICharSequenceResultCallback)>(i0, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void getTextAfterCursor(int, int, com.android.internal.inputmethod.ICharSequenceResultCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        com.android.internal.view.IInputContext $r3, $r4;
        java.lang.Throwable $r5;
        com.android.internal.inputmethod.ICharSequenceResultCallback r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: com.android.internal.inputmethod.ICharSequenceResultCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<com.android.internal.inputmethod.ICharSequenceResultCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void getTextAfterCursor(int,int,com.android.internal.inputmethod.ICharSequenceResultCallback)>(i0, i1, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void getTextBeforeCursor(int, int, com.android.internal.inputmethod.ICharSequenceResultCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        com.android.internal.view.IInputContext $r3, $r4;
        java.lang.Throwable $r5;
        com.android.internal.inputmethod.ICharSequenceResultCallback r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: com.android.internal.inputmethod.ICharSequenceResultCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<com.android.internal.inputmethod.ICharSequenceResultCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void getTextBeforeCursor(int,int,com.android.internal.inputmethod.ICharSequenceResultCallback)>(i0, i1, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void performContextMenuAction(int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void performContextMenuAction(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void performEditorAction(int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void performEditorAction(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void performPrivateCommand(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void performPrivateCommand(java.lang.String,android.os.Bundle)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void requestUpdateCursorAnchorInfo(int, com.android.internal.inputmethod.IIntResultCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        com.android.internal.view.IInputContext $r3, $r4;
        java.lang.Throwable $r5;
        com.android.internal.inputmethod.IIntResultCallback r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: com.android.internal.inputmethod.IIntResultCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<com.android.internal.inputmethod.IIntResultCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void requestUpdateCursorAnchorInfo(int,com.android.internal.inputmethod.IIntResultCallback)>(i0, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void sendKeyEvent(android.view.KeyEvent) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputContext $r3, $r4;
        java.lang.Throwable $r5;
        android.view.KeyEvent r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r6 := @parameter0: android.view.KeyEvent;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void sendKeyEvent(android.view.KeyEvent)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void setComposingRegion(int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void setComposingRegion(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void setComposingText(java.lang.CharSequence, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputContext $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.CharSequence r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r6 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r6, r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void setComposingText(java.lang.CharSequence,int)>(r6, i0);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void setSelection(int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void setSelection(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
