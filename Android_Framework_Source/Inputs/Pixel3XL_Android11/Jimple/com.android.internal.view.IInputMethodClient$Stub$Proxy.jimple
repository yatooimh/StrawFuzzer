class com.android.internal.view.IInputMethodClient$Stub$Proxy extends java.lang.Object implements com.android.internal.view.IInputMethodClient
{
    public static com.android.internal.view.IInputMethodClient sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.view.IInputMethodClient$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.view.IInputMethodClient$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void applyImeVisibility(boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodClient$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        com.android.internal.view.IInputMethodClient $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: com.android.internal.view.IInputMethodClient$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodClient");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodClient: void applyImeVisibility(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.view.IInputMethodClient$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.view.IInputMethodClient$Stub$Proxy;

        $r1 = r0.<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.view.IInputMethodClient$Stub$Proxy r0;

        r0 := @this: com.android.internal.view.IInputMethodClient$Stub$Proxy;

        return "com.android.internal.view.IInputMethodClient";
    }

    public void onBindMethod(com.android.internal.view.InputBindResult) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodClient$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputMethodClient $r3, $r4;
        java.lang.Throwable $r5;
        com.android.internal.view.InputBindResult r6;

        r0 := @this: com.android.internal.view.IInputMethodClient$Stub$Proxy;

        r6 := @parameter0: com.android.internal.view.InputBindResult;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodClient");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<com.android.internal.view.InputBindResult: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodClient: void onBindMethod(com.android.internal.view.InputBindResult)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onUnbindMethod(int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodClient$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputMethodClient $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputMethodClient$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodClient");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodClient: void onUnbindMethod(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void reportFullscreenMode(boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodClient$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        com.android.internal.view.IInputMethodClient $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: com.android.internal.view.IInputMethodClient$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodClient");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodClient: void reportFullscreenMode(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void reportPreRendered(android.view.inputmethod.EditorInfo) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodClient$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputMethodClient $r3, $r4;
        java.lang.Throwable $r5;
        android.view.inputmethod.EditorInfo r6;

        r0 := @this: com.android.internal.view.IInputMethodClient$Stub$Proxy;

        r6 := @parameter0: android.view.inputmethod.EditorInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodClient");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodClient: void reportPreRendered(android.view.inputmethod.EditorInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void scheduleStartInputIfNecessary(boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodClient$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        com.android.internal.view.IInputMethodClient $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: com.android.internal.view.IInputMethodClient$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodClient");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodClient: void scheduleStartInputIfNecessary(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void setActive(boolean, boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodClient$Stub$Proxy r0;
        boolean z0, z1, $z2;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        com.android.internal.view.IInputMethodClient $r4, $r5;
        java.lang.Throwable $r6;
        byte b1, b2;

        r0 := @this: com.android.internal.view.IInputMethodClient$Stub$Proxy;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodClient");

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

     label5:
        b2 = 0;

        if z1 == 0 goto label6;

        b2 = 1;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r3 = r0.<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z2 != 0 goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodClient: void setActive(boolean,boolean)>(z0, z1);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void updateActivityViewToScreenMatrix(int, float[]) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodClient$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputMethodClient $r3, $r4;
        java.lang.Throwable $r5;
        float[] r6;

        r0 := @this: com.android.internal.view.IInputMethodClient$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: float[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodClient");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeFloatArray(float[])>(r6);

        $r2 = r0.<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodClient: void updateActivityViewToScreenMatrix(int,float[])>(i0, r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
