class com.android.internal.view.IInputMethodSession$Stub$Proxy extends java.lang.Object implements com.android.internal.view.IInputMethodSession
{
    public static com.android.internal.view.IInputMethodSession sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void appPrivateCommand(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        $r1 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void displayCompletions(android.view.inputmethod.CompletionInfo[]) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r3, $r4;
        java.lang.Throwable $r5;
        android.view.inputmethod.CompletionInfo[] r6;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        r6 := @parameter0: android.view.inputmethod.CompletionInfo[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r6, 0);

        $r2 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void finishSession() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        $r3 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void finishSession()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        return "com.android.internal.view.IInputMethodSession";
    }

    public void notifyImeHidden() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        $r3 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void notifyImeHidden()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void removeImeSurface() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        $r3 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void removeImeSurface()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void toggleSoftInput(int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void toggleSoftInput(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void updateCursor(android.graphics.Rect) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r3, $r4;
        java.lang.Throwable $r5;
        android.graphics.Rect r6;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        r6 := @parameter0: android.graphics.Rect;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodSession: void updateCursor(android.graphics.Rect)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r3, $r4;
        java.lang.Throwable $r5;
        android.view.inputmethod.CursorAnchorInfo r6;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        r6 := @parameter0: android.view.inputmethod.CursorAnchorInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.view.inputmethod.CursorAnchorInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodSession: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void updateExtractedText(int, android.view.inputmethod.ExtractedText) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r3, $r4;
        java.lang.Throwable $r5;
        android.view.inputmethod.ExtractedText r6;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: android.view.inputmethod.ExtractedText;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodSession: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>(i0, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void updateSelection(int, int, int, int, int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r3, $r4;
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, r13;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

     label08:
        $r2 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodSession: void updateSelection(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5);

     label09:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        $r11 := @caughtexception;

        r13 = $r11;

        goto label19;

     label12:
        $r8 := @caughtexception;

        r13 = $r8;

        goto label19;

     label13:
        $r12 := @caughtexception;

        r13 = $r12;

        goto label19;

     label14:
        $r6 := @caughtexception;

        r13 = $r6;

        goto label19;

     label15:
        $r7 := @caughtexception;

        r13 = $r7;

        goto label19;

     label16:
        $r5 := @caughtexception;

        r13 = $r5;

        goto label19;

     label17:
        $r10 := @caughtexception;

        r13 = $r10;

        goto label19;

     label18:
        $r9 := @caughtexception;

        r13 = $r9;

     label19:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r13;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label11;
    }

    public void viewClicked(boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        com.android.internal.view.IInputMethodSession $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void viewClicked(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }
}
