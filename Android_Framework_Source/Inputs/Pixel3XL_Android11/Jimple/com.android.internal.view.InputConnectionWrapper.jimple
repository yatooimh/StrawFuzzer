public class com.android.internal.view.InputConnectionWrapper extends java.lang.Object implements android.view.inputmethod.InputConnection
{
    private static final int MAX_WAIT_TIME_MILLIS;
    private static final java.lang.String TAG;
    private final com.android.internal.inputmethod.CancellationGroup mCancellationGroup;
    private final com.android.internal.view.IInputContext mIInputContext;
    private final java.lang.ref.WeakReference mInputMethodService;
    private final int mMissingMethods;

    public void <init>(java.lang.ref.WeakReference, com.android.internal.view.IInputContext, int, com.android.internal.inputmethod.CancellationGroup)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        java.lang.ref.WeakReference r1;
        com.android.internal.view.IInputContext r2;
        int i0;
        com.android.internal.inputmethod.CancellationGroup r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r1 := @parameter0: java.lang.ref.WeakReference;

        r2 := @parameter1: com.android.internal.view.IInputContext;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.internal.inputmethod.CancellationGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.view.InputConnectionWrapper: java.lang.ref.WeakReference mInputMethodService> = r1;

        r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext> = r2;

        r0.<com.android.internal.view.InputConnectionWrapper: int mMissingMethods> = i0;

        r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup> = r3;

        return;
    }

    private static java.lang.Object getResultOrNull(com.android.internal.inputmethod.CancellationGroup$Completable$Values, java.lang.String)
    {
        com.android.internal.inputmethod.CancellationGroup$Completable$Values r0;
        java.lang.String r1;
        boolean z0, $z1;
        java.util.concurrent.TimeUnit $r2;
        java.lang.Object $r3;

        r0 := @parameter0: com.android.internal.inputmethod.CancellationGroup$Completable$Values;

        r1 := @parameter1: java.lang.String;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        z0 = virtualinvoke r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Values: boolean await(int,java.util.concurrent.TimeUnit)>(2000, $r2);

        $z1 = virtualinvoke r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Values: boolean hasValue()>();

        if $z1 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Values: java.lang.Object getValue()>();

        return $r3;

     label1:
        staticinvoke <com.android.internal.view.InputConnectionWrapper: void logInternal(java.lang.String,boolean,java.lang.Object)>(r1, z0, null);

        return null;
    }

    private static int getResultOrZero(com.android.internal.inputmethod.CancellationGroup$Completable$Int, java.lang.String)
    {
        com.android.internal.inputmethod.CancellationGroup$Completable$Int r0;
        java.lang.String r1;
        boolean z0, $z1;
        java.util.concurrent.TimeUnit $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @parameter0: com.android.internal.inputmethod.CancellationGroup$Completable$Int;

        r1 := @parameter1: java.lang.String;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        z0 = virtualinvoke r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: boolean await(int,java.util.concurrent.TimeUnit)>(2000, $r2);

        $z1 = virtualinvoke r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: boolean hasValue()>();

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: int getValue()>();

        return $i0;

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <com.android.internal.view.InputConnectionWrapper: void logInternal(java.lang.String,boolean,java.lang.Object)>(r1, z0, $r3);

        return 0;
    }

    private boolean isMethodMissing(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.view.InputConnectionWrapper: int mMissingMethods>;

        $i2 = $i1 & i0;

        if $i2 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static void logInternal(java.lang.String, boolean, java.lang.Object)
    {
        java.lang.String r0, $r6, $r13;
        boolean z0;
        java.lang.Object r1;
        java.lang.StringBuilder $r2, $r7;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.Object;

        if z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" didn\'t respond in ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2000);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec. Returning default: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputConnectionWrapper", $r13);

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was canceled before complete. Returning default: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputConnectionWrapper", $r6);

     label2:
        return;
    }

    private void notifyUserActionIfNecessary()
    {
        com.android.internal.view.InputConnectionWrapper r0;
        android.inputmethodservice.AbstractInputMethodService r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: java.lang.ref.WeakReference mInputMethodService>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.inputmethodservice.AbstractInputMethodService) $r3;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<android.inputmethodservice.AbstractInputMethodService: void notifyUserActionIfNecessary()>();

        return;
    }

    public boolean beginBatchEdit()
    {
        com.android.internal.view.InputConnectionWrapper r0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void beginBatchEdit()>();

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean clearMetaKeyStates(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void clearMetaKeyStates(int)>(i0);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void closeConnection()
    {
        com.android.internal.view.InputConnectionWrapper r0;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        return;
    }

    public boolean commitCompletion(android.view.inputmethod.CompletionInfo)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        boolean $z0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;
        android.view.inputmethod.CompletionInfo r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r3 := @parameter0: android.view.inputmethod.CompletionInfo;

        $z0 = specialinvoke r0.<com.android.internal.view.InputConnectionWrapper: boolean isMethodMissing(int)>(4);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void commitCompletion(android.view.inputmethod.CompletionInfo)>(r3);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean commitContent(android.view.inputmethod.InputContentInfo, int, android.os.Bundle)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, $i1, $i2;
        android.os.Bundle r1;
        boolean z0, $z1, z2;
        com.android.internal.inputmethod.CancellationGroup $r2, $r3;
        com.android.internal.view.IInputContext $r4;
        com.android.internal.inputmethod.IIntResultCallback$Stub $r5;
        java.lang.ref.WeakReference $r6;
        java.lang.Object $r7;
        android.os.RemoteException $r8;
        android.view.inputmethod.InputContentInfo r9;
        android.inputmethodservice.AbstractInputMethodService r10;
        com.android.internal.inputmethod.CancellationGroup$Completable$Int r11;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r9 := @parameter0: android.view.inputmethod.InputContentInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        z0 = virtualinvoke $r2.<com.android.internal.inputmethod.CancellationGroup: boolean isCanceled()>();

        z2 = 0;

        if z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<com.android.internal.view.InputConnectionWrapper: boolean isMethodMissing(int)>(128);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $i1 = i0 & 1;

        if $i1 == 0 goto label4;

        $r6 = r0.<com.android.internal.view.InputConnectionWrapper: java.lang.ref.WeakReference mInputMethodService>;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r10 = (android.inputmethodservice.AbstractInputMethodService) $r7;

        if r10 != null goto label3;

        return 0;

     label3:
        virtualinvoke r10.<android.inputmethodservice.AbstractInputMethodService: void exposeContent(android.view.inputmethod.InputContentInfo,android.view.inputmethod.InputConnection)>(r9, r0);

     label4:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        r11 = virtualinvoke $r3.<com.android.internal.inputmethod.CancellationGroup: com.android.internal.inputmethod.CancellationGroup$Completable$Int createCompletableInt()>();

     label5:
        $r4 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $r5 = staticinvoke <com.android.internal.inputmethod.ResultCallbacks: com.android.internal.inputmethod.IIntResultCallback$Stub of(com.android.internal.inputmethod.CancellationGroup$Completable$Int)>(r11);

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle,com.android.internal.inputmethod.IIntResultCallback)>(r9, i0, r1, $r5);

     label6:
        $i2 = staticinvoke <com.android.internal.view.InputConnectionWrapper: int getResultOrZero(com.android.internal.inputmethod.CancellationGroup$Completable$Int,java.lang.String)>(r11, "commitContent()");

        if $i2 == 0 goto label7;

        z2 = 1;

     label7:
        return z2;

     label8:
        $r8 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label5 to label6 with label8;
    }

    public boolean commitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;
        android.view.inputmethod.CorrectionInfo r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r3 := @parameter0: android.view.inputmethod.CorrectionInfo;

     label1:
        $r1 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void commitCorrection(android.view.inputmethod.CorrectionInfo)>(r3);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean commitText(java.lang.CharSequence, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;
        java.lang.CharSequence r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r3 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void commitText(java.lang.CharSequence,int)>(r3, i0);

        specialinvoke r0.<com.android.internal.view.InputConnectionWrapper: void notifyUserActionIfNecessary()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean deleteSurroundingText(int, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void deleteSurroundingText(int,int)>(i0, i1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean deleteSurroundingTextInCodePoints(int, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1;
        boolean $z0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.internal.view.InputConnectionWrapper: boolean isMethodMissing(int)>(16);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void deleteSurroundingTextInCodePoints(int,int)>(i0, i1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean endBatchEdit()
    {
        com.android.internal.view.InputConnectionWrapper r0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void endBatchEdit()>();

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean finishComposingText()
    {
        com.android.internal.view.InputConnectionWrapper r0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void finishComposingText()>();

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getCursorCapsMode(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, $i1;
        com.android.internal.inputmethod.CancellationGroup $r1, $r2;
        boolean $z0;
        com.android.internal.view.IInputContext $r3;
        com.android.internal.inputmethod.IIntResultCallback$Stub $r4;
        android.os.RemoteException $r5;
        com.android.internal.inputmethod.CancellationGroup$Completable$Int r6;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        $z0 = virtualinvoke $r1.<com.android.internal.inputmethod.CancellationGroup: boolean isCanceled()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        r6 = virtualinvoke $r2.<com.android.internal.inputmethod.CancellationGroup: com.android.internal.inputmethod.CancellationGroup$Completable$Int createCompletableInt()>();

     label2:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $r4 = staticinvoke <com.android.internal.inputmethod.ResultCallbacks: com.android.internal.inputmethod.IIntResultCallback$Stub of(com.android.internal.inputmethod.CancellationGroup$Completable$Int)>(r6);

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void getCursorCapsMode(int,com.android.internal.inputmethod.IIntResultCallback)>(i0, $r4);

     label3:
        $i1 = staticinvoke <com.android.internal.view.InputConnectionWrapper: int getResultOrZero(com.android.internal.inputmethod.CancellationGroup$Completable$Int,java.lang.String)>(r6, "getCursorCapsMode()");

        return $i1;

     label4:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0;
        com.android.internal.inputmethod.CancellationGroup$Completable$ExtractedText r1;
        com.android.internal.inputmethod.CancellationGroup $r2, $r3;
        boolean $z0;
        com.android.internal.view.IInputContext $r4;
        com.android.internal.inputmethod.IExtractedTextResultCallback$Stub $r5;
        java.lang.Object $r6;
        android.view.inputmethod.ExtractedText $r7;
        android.os.RemoteException $r8;
        android.view.inputmethod.ExtractedTextRequest r9;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r9 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        $z0 = virtualinvoke $r2.<com.android.internal.inputmethod.CancellationGroup: boolean isCanceled()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        r1 = virtualinvoke $r3.<com.android.internal.inputmethod.CancellationGroup: com.android.internal.inputmethod.CancellationGroup$Completable$ExtractedText createCompletableExtractedText()>();

     label2:
        $r4 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $r5 = staticinvoke <com.android.internal.inputmethod.ResultCallbacks: com.android.internal.inputmethod.IExtractedTextResultCallback$Stub of(com.android.internal.inputmethod.CancellationGroup$Completable$ExtractedText)>(r1);

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void getExtractedText(android.view.inputmethod.ExtractedTextRequest,int,com.android.internal.inputmethod.IExtractedTextResultCallback)>(r9, i0, $r5);

     label3:
        $r6 = staticinvoke <com.android.internal.view.InputConnectionWrapper: java.lang.Object getResultOrNull(com.android.internal.inputmethod.CancellationGroup$Completable$Values,java.lang.String)>(r1, "getExtractedText()");

        $r7 = (android.view.inputmethod.ExtractedText) $r6;

        return $r7;

     label4:
        $r8 := @caughtexception;

        return null;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public android.os.Handler getHandler()
    {
        com.android.internal.view.InputConnectionWrapper r0;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        return null;
    }

    public java.lang.CharSequence getSelectedText(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0;
        com.android.internal.inputmethod.CancellationGroup $r1, $r2;
        boolean $z0, $z1;
        com.android.internal.view.IInputContext $r3;
        com.android.internal.inputmethod.ICharSequenceResultCallback$Stub $r4;
        java.lang.Object $r5;
        java.lang.CharSequence $r6;
        android.os.RemoteException $r7;
        com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence r8;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        $z0 = virtualinvoke $r1.<com.android.internal.inputmethod.CancellationGroup: boolean isCanceled()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z1 = specialinvoke r0.<com.android.internal.view.InputConnectionWrapper: boolean isMethodMissing(int)>(1);

        if $z1 == 0 goto label2;

        return null;

     label2:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        r8 = virtualinvoke $r2.<com.android.internal.inputmethod.CancellationGroup: com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence createCompletableCharSequence()>();

     label3:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $r4 = staticinvoke <com.android.internal.inputmethod.ResultCallbacks: com.android.internal.inputmethod.ICharSequenceResultCallback$Stub of(com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence)>(r8);

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void getSelectedText(int,com.android.internal.inputmethod.ICharSequenceResultCallback)>(i0, $r4);

     label4:
        $r5 = staticinvoke <com.android.internal.view.InputConnectionWrapper: java.lang.Object getResultOrNull(com.android.internal.inputmethod.CancellationGroup$Completable$Values,java.lang.String)>(r8, "getSelectedText()");

        $r6 = (java.lang.CharSequence) $r5;

        return $r6;

     label5:
        $r7 := @caughtexception;

        return null;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public java.lang.CharSequence getTextAfterCursor(int, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.inputmethod.CancellationGroup $r1, $r2;
        boolean $z0;
        com.android.internal.view.IInputContext $r3;
        com.android.internal.inputmethod.ICharSequenceResultCallback$Stub $r4;
        java.lang.Object $r5;
        java.lang.CharSequence $r6;
        android.os.RemoteException $r7;
        com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence r8;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        $z0 = virtualinvoke $r1.<com.android.internal.inputmethod.CancellationGroup: boolean isCanceled()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        r8 = virtualinvoke $r2.<com.android.internal.inputmethod.CancellationGroup: com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence createCompletableCharSequence()>();

     label2:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $r4 = staticinvoke <com.android.internal.inputmethod.ResultCallbacks: com.android.internal.inputmethod.ICharSequenceResultCallback$Stub of(com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence)>(r8);

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void getTextAfterCursor(int,int,com.android.internal.inputmethod.ICharSequenceResultCallback)>(i0, i1, $r4);

     label3:
        $r5 = staticinvoke <com.android.internal.view.InputConnectionWrapper: java.lang.Object getResultOrNull(com.android.internal.inputmethod.CancellationGroup$Completable$Values,java.lang.String)>(r8, "getTextAfterCursor()");

        $r6 = (java.lang.CharSequence) $r5;

        return $r6;

     label4:
        $r7 := @caughtexception;

        return null;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public java.lang.CharSequence getTextBeforeCursor(int, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.inputmethod.CancellationGroup $r1, $r2;
        boolean $z0;
        com.android.internal.view.IInputContext $r3;
        com.android.internal.inputmethod.ICharSequenceResultCallback$Stub $r4;
        java.lang.Object $r5;
        java.lang.CharSequence $r6;
        android.os.RemoteException $r7;
        com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence r8;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        $z0 = virtualinvoke $r1.<com.android.internal.inputmethod.CancellationGroup: boolean isCanceled()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        r8 = virtualinvoke $r2.<com.android.internal.inputmethod.CancellationGroup: com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence createCompletableCharSequence()>();

     label2:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $r4 = staticinvoke <com.android.internal.inputmethod.ResultCallbacks: com.android.internal.inputmethod.ICharSequenceResultCallback$Stub of(com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence)>(r8);

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void getTextBeforeCursor(int,int,com.android.internal.inputmethod.ICharSequenceResultCallback)>(i0, i1, $r4);

     label3:
        $r5 = staticinvoke <com.android.internal.view.InputConnectionWrapper: java.lang.Object getResultOrNull(com.android.internal.inputmethod.CancellationGroup$Completable$Values,java.lang.String)>(r8, "getTextBeforeCursor()");

        $r6 = (java.lang.CharSequence) $r5;

        return $r6;

     label4:
        $r7 := @caughtexception;

        return null;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public boolean performContextMenuAction(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void performContextMenuAction(int)>(i0);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean performEditorAction(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void performEditorAction(int)>(i0);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean performPrivateCommand(java.lang.String, android.os.Bundle)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        android.os.Bundle r1;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;
        java.lang.String r4;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void performPrivateCommand(java.lang.String,android.os.Bundle)>(r4, r1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean reportFullscreenMode(boolean)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        boolean z0;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        z0 := @parameter0: boolean;

        return 0;
    }

    public boolean requestCursorUpdates(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, $i1;
        boolean z0, $z1, z2;
        com.android.internal.inputmethod.CancellationGroup $r1, $r2;
        com.android.internal.view.IInputContext $r3;
        com.android.internal.inputmethod.IIntResultCallback$Stub $r4;
        android.os.RemoteException $r5;
        com.android.internal.inputmethod.CancellationGroup$Completable$Int r6;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        z0 = virtualinvoke $r1.<com.android.internal.inputmethod.CancellationGroup: boolean isCanceled()>();

        z2 = 0;

        if z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<com.android.internal.view.InputConnectionWrapper: boolean isMethodMissing(int)>(8);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        r6 = virtualinvoke $r2.<com.android.internal.inputmethod.CancellationGroup: com.android.internal.inputmethod.CancellationGroup$Completable$Int createCompletableInt()>();

     label3:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $r4 = staticinvoke <com.android.internal.inputmethod.ResultCallbacks: com.android.internal.inputmethod.IIntResultCallback$Stub of(com.android.internal.inputmethod.CancellationGroup$Completable$Int)>(r6);

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void requestUpdateCursorAnchorInfo(int,com.android.internal.inputmethod.IIntResultCallback)>(i0, $r4);

     label4:
        $i1 = staticinvoke <com.android.internal.view.InputConnectionWrapper: int getResultOrZero(com.android.internal.inputmethod.CancellationGroup$Completable$Int,java.lang.String)>(r6, "requestUpdateCursorAnchorInfo()");

        if $i1 == 0 goto label5;

        z2 = 1;

     label5:
        return z2;

     label6:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public boolean sendKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;
        android.view.KeyEvent r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r3 := @parameter0: android.view.KeyEvent;

     label1:
        $r1 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void sendKeyEvent(android.view.KeyEvent)>(r3);

        specialinvoke r0.<com.android.internal.view.InputConnectionWrapper: void notifyUserActionIfNecessary()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setComposingRegion(int, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1;
        boolean $z0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.internal.view.InputConnectionWrapper: boolean isMethodMissing(int)>(2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void setComposingRegion(int,int)>(i0, i1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setComposingText(java.lang.CharSequence, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;
        java.lang.CharSequence r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r3 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void setComposingText(java.lang.CharSequence,int)>(r3, i0);

        specialinvoke r0.<com.android.internal.view.InputConnectionWrapper: void notifyUserActionIfNecessary()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setSelection(int, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void setSelection(int,int)>(i0, i1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        com.android.internal.view.InputConnectionWrapper r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r4, $r7, $r10;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InputConnectionWrapper{idHash=#");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMissingMethods=");

        $i1 = r0.<com.android.internal.view.InputConnectionWrapper: int mMissingMethods>;

        $r7 = staticinvoke <android.view.inputmethod.InputConnectionInspector: java.lang.String getMissingMethodFlagsAsString(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.InputConnectionWrapper: java.lang.String TAG> = "InputConnectionWrapper";

        <com.android.internal.view.InputConnectionWrapper: int MAX_WAIT_TIME_MILLIS> = 2000;

        return;
    }
}
