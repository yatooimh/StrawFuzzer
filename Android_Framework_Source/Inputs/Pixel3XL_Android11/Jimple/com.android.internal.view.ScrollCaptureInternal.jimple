public class com.android.internal.view.ScrollCaptureInternal extends java.lang.Object
{
    private static final int DOWN;
    private static final java.lang.String TAG;
    public static final int TYPE_FIXED;
    public static final int TYPE_RECYCLING;
    public static final int TYPE_SCROLLING;
    private static final int UP;

    public void <init>()
    {
        com.android.internal.view.ScrollCaptureInternal r0;

        r0 := @this: com.android.internal.view.ScrollCaptureInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int detectScrollingType(android.view.View)
    {
        android.view.View r0;
        boolean $z0, $z1, $z2, $z3;
        android.view.ViewGroup $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: android.view.View;

        $z0 = r0 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<android.view.View: boolean canScrollVertically(int)>(1);

        if $z1 != 0 goto label2;

        $z3 = virtualinvoke r0.<android.view.View: boolean canScrollVertically(int)>(-1);

        if $z3 != 0 goto label2;

        return 0;

     label2:
        $r1 = (android.view.ViewGroup) r0;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 1 goto label3;

        return 2;

     label3:
        $i1 = virtualinvoke r0.<android.view.View: int getScrollY()>();

        if $i1 == 0 goto label4;

        return 1;

     label4:
        $z2 = virtualinvoke r0.<android.view.View: boolean canScrollVertically(int)>(-1);

        if $z2 == 0 goto label5;

        return 2;

     label5:
        $i2 = virtualinvoke r0.<android.view.View: int getScrollX()>();

        virtualinvoke r0.<android.view.View: void scrollTo(int,int)>($i2, 1);

        $i3 = virtualinvoke r0.<android.view.View: int getScrollY()>();

        if $i3 != 1 goto label6;

        $i4 = virtualinvoke r0.<android.view.View: int getScrollX()>();

        virtualinvoke r0.<android.view.View: void scrollTo(int,int)>($i4, 0);

        return 1;

     label6:
        return 2;
    }

    public android.view.ScrollCaptureCallback requestCallback(android.view.View, android.graphics.Rect, android.graphics.Point)
    {
        com.android.internal.view.ScrollCaptureInternal r0;
        android.view.View r1;
        android.graphics.Rect r2;
        android.graphics.Point r3;
        int $i0;
        com.android.internal.view.ScrollCaptureViewSupport $r4;
        com.android.internal.view.ScrollViewCaptureHelper $r5;
        android.view.ViewGroup $r6;

        r0 := @this: com.android.internal.view.ScrollCaptureInternal;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Point;

        $i0 = staticinvoke <com.android.internal.view.ScrollCaptureInternal: int detectScrollingType(android.view.View)>(r1);

        if $i0 == 1 goto label1;

        return null;

     label1:
        $r4 = new com.android.internal.view.ScrollCaptureViewSupport;

        $r6 = (android.view.ViewGroup) r1;

        $r5 = new com.android.internal.view.ScrollViewCaptureHelper;

        specialinvoke $r5.<com.android.internal.view.ScrollViewCaptureHelper: void <init>()>();

        specialinvoke $r4.<com.android.internal.view.ScrollCaptureViewSupport: void <init>(android.view.View,com.android.internal.view.ScrollCaptureViewHelper)>($r6, $r5);

        return $r4;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.ScrollCaptureInternal: int UP> = -1;

        <com.android.internal.view.ScrollCaptureInternal: int TYPE_SCROLLING> = 1;

        <com.android.internal.view.ScrollCaptureInternal: int TYPE_RECYCLING> = 2;

        <com.android.internal.view.ScrollCaptureInternal: int TYPE_FIXED> = 0;

        <com.android.internal.view.ScrollCaptureInternal: java.lang.String TAG> = "ScrollCaptureInternal";

        <com.android.internal.view.ScrollCaptureInternal: int DOWN> = 1;

        return;
    }
}
