final class com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer extends java.lang.Object
{
    private static final float AMBIENT_SHADOW_ALPHA;
    private static final float LIGHT_RADIUS_DP;
    private static final float LIGHT_Z_DP;
    private static final float SPOT_SHADOW_ALPHA;
    private static final java.lang.String TAG;
    private long mLastRenderedSourceDrawingId;
    private android.graphics.HardwareRenderer mRenderer;
    private android.graphics.RenderNode mRootRenderNode;
    private final android.graphics.Rect mSourceRect;
    private final int[] mTempLocation;
    private final android.graphics.Matrix mTempMatrix;
    private final android.graphics.Rect mTempRect;
    private final android.graphics.RectF mTempRectF;

    void <init>()
    {
        com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer r0;
        android.graphics.RectF $r2;
        android.graphics.Rect $r3, $r4;
        android.graphics.Matrix $r5;
        int[] $r6;
        android.graphics.HardwareRenderer $r7, $r9, $r10;
        android.graphics.RenderNode $r8;

        r0 := @this: com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.RectF mTempRectF> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Rect mSourceRect> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Rect mTempRect> = $r4;

        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Matrix mTempMatrix> = $r5;

        $r6 = newarray (int)[2];

        r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: int[] mTempLocation> = $r6;

        r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: long mLastRenderedSourceDrawingId> = -1L;

        $r7 = new android.graphics.HardwareRenderer;

        specialinvoke $r7.<android.graphics.HardwareRenderer: void <init>()>();

        r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.HardwareRenderer mRenderer> = $r7;

        $r8 = new android.graphics.RenderNode;

        specialinvoke $r8.<android.graphics.RenderNode: void <init>(java.lang.String)>("ScrollCaptureRoot");

        r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.RenderNode mRootRenderNode> = $r8;

        $r9 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.HardwareRenderer mRenderer>;

        virtualinvoke $r9.<android.graphics.HardwareRenderer: void setContentRoot(android.graphics.RenderNode)>($r8);

        $r10 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.HardwareRenderer mRenderer>;

        virtualinvoke $r10.<android.graphics.HardwareRenderer: void setOpaque(boolean)>(0);

        return;
    }

    private void buildRootDisplayList(android.view.View, android.graphics.Rect)
    {
        com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer r0;
        android.graphics.Rect r1, $r3, $r4, $r6, $r7, $r9, $r10, $r11;
        android.view.View r2, r14;
        android.graphics.RenderNode $r5, $r8, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f1;
        android.graphics.RecordingCanvas r15;

        r0 := @this: com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer;

        r14 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.Rect;

        r2 = virtualinvoke r14.<android.view.View: android.view.View getRootView()>();

        $r3 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Rect mTempRect>;

        specialinvoke r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: void transformToRoot(android.view.View,android.graphics.Rect,android.graphics.Rect)>(r14, r1, $r3);

        $r5 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.RenderNode mRootRenderNode>;

        $r4 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Rect mTempRect>;

        $i0 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        $r6 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Rect mTempRect>;

        $i1 = virtualinvoke $r6.<android.graphics.Rect: int height()>();

        virtualinvoke $r5.<android.graphics.RenderNode: boolean setPosition(int,int,int,int)>(0, 0, $i0, $i1);

        $r8 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.RenderNode mRootRenderNode>;

        $r7 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke $r7.<android.graphics.Rect: int width()>();

        $r9 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Rect mTempRect>;

        $i3 = virtualinvoke $r9.<android.graphics.Rect: int height()>();

        r15 = virtualinvoke $r8.<android.graphics.RenderNode: android.graphics.RecordingCanvas beginRecording(int,int)>($i2, $i3);

        $r10 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Rect mTempRect>;

        $i4 = $r10.<android.graphics.Rect: int left>;

        $i5 = neg $i4;

        $f1 = (float) $i5;

        $r11 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Rect mTempRect>;

        $i6 = $r11.<android.graphics.Rect: int top>;

        $i7 = neg $i6;

        $f0 = (float) $i7;

        virtualinvoke r15.<android.graphics.RecordingCanvas: void translate(float,float)>($f1, $f0);

        $r12 = virtualinvoke r2.<android.view.View: android.graphics.RenderNode updateDisplayListIfDirty()>();

        virtualinvoke r15.<android.graphics.RecordingCanvas: void drawRenderNode(android.graphics.RenderNode)>($r12);

        $r13 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.RenderNode mRootRenderNode>;

        virtualinvoke $r13.<android.graphics.RenderNode: void endRecording()>();

        return;
    }

    private void setupLighting(android.view.View)
    {
        com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer r0;
        android.view.View r1;
        android.util.DisplayMetrics r2;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        int i0, i1, $i3, $i4, $i5, $i6, $i7;
        long $l2;
        android.content.res.Resources $r3;
        int[] $r4, $r5, $r6;
        android.graphics.HardwareRenderer $r7, $r8;

        r0 := @this: com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer;

        r1 := @parameter0: android.view.View;

        $l2 = virtualinvoke r1.<android.view.View: long getUniqueDrawingId()>();

        r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: long mLastRenderedSourceDrawingId> = $l2;

        $r3 = virtualinvoke r1.<android.view.View: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r4 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: int[] mTempLocation>;

        virtualinvoke r1.<android.view.View: void getLocationOnScreen(int[])>($r4);

        $i3 = r2.<android.util.DisplayMetrics: int widthPixels>;

        $f3 = (float) $i3;

        f0 = $f3 / 2.0F;

        $r5 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: int[] mTempLocation>;

        $i4 = $r5[0];

        f1 = (float) $i4;

        $i6 = r2.<android.util.DisplayMetrics: int heightPixels>;

        $r6 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: int[] mTempLocation>;

        $i5 = $r6[1];

        $i7 = $i6 - $i5;

        f2 = (float) $i7;

        $f4 = r2.<android.util.DisplayMetrics: float density>;

        $f5 = $f4 * 400.0F;

        i0 = (int) $f5;

        $f6 = r2.<android.util.DisplayMetrics: float density>;

        $f7 = $f6 * 800.0F;

        i1 = (int) $f7;

        $r7 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.HardwareRenderer mRenderer>;

        $f10 = f0 - f1;

        $f9 = (float) i0;

        $f8 = (float) i1;

        virtualinvoke $r7.<android.graphics.HardwareRenderer: void setLightSourceGeometry(float,float,float,float)>($f10, f2, $f9, $f8);

        $r8 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.HardwareRenderer mRenderer>;

        virtualinvoke $r8.<android.graphics.HardwareRenderer: void setLightSourceAlpha(float,float)>(0.039F, 0.039F);

        return;
    }

    private void transformToRoot(android.view.View, android.graphics.Rect, android.graphics.Rect)
    {
        com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer r0;
        android.view.View r1;
        android.graphics.Rect r2, r3;
        android.graphics.Matrix $r4, $r5, $r8;
        android.graphics.RectF $r6, $r7, $r9;

        r0 := @this: com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        $r4 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r4.<android.graphics.Matrix: void reset()>();

        $r5 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Matrix mTempMatrix>;

        virtualinvoke r1.<android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)>($r5);

        $r6 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.RectF mTempRectF>;

        virtualinvoke $r6.<android.graphics.RectF: void set(android.graphics.Rect)>(r2);

        $r8 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.Matrix mTempMatrix>;

        $r7 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.RectF mTempRectF>;

        virtualinvoke $r8.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>($r7);

        $r9 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.RectF mTempRectF>;

        virtualinvoke $r9.<android.graphics.RectF: void round(android.graphics.Rect)>(r3);

        return;
    }

    private boolean updateForView(android.view.View)
    {
        com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer r0;
        android.view.View r1;
        long $l0, $l1, $l3;
        byte $b2;

        r0 := @this: com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer;

        r1 := @parameter0: android.view.View;

        $l0 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: long mLastRenderedSourceDrawingId>;

        $l1 = virtualinvoke r1.<android.view.View: long getUniqueDrawingId()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        return 0;

     label1:
        $l3 = virtualinvoke r1.<android.view.View: long getUniqueDrawingId()>();

        r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: long mLastRenderedSourceDrawingId> = $l3;

        return 1;
    }

    public void destroy()
    {
        com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer r0;
        android.graphics.HardwareRenderer $r1;

        r0 := @this: com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer;

        $r1 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.HardwareRenderer mRenderer>;

        virtualinvoke $r1.<android.graphics.HardwareRenderer: void destroy()>();

        return;
    }

    public void renderFrame(android.view.View, android.graphics.Rect, android.os.Handler, java.lang.Runnable)
    {
        com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer r0;
        android.graphics.Rect r1;
        android.os.Handler r2;
        java.lang.Runnable r3;
        boolean $z0;
        android.graphics.HardwareRenderer $r4;
        long $l0;
        com.android.internal.view._$$Lambda$LfzJt661qZfn2w_6SYHFbD3aMy0 $r7;
        android.view.View r10;
        android.graphics.HardwareRenderer$FrameRenderRequest r11;

        r0 := @this: com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer;

        r10 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.os.Handler;

        r3 := @parameter3: java.lang.Runnable;

        $z0 = specialinvoke r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: boolean updateForView(android.view.View)>(r10);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: void setupLighting(android.view.View)>(r10);

     label1:
        specialinvoke r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: void buildRootDisplayList(android.view.View,android.graphics.Rect)>(r10, r1);

        $r4 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.HardwareRenderer mRenderer>;

        r11 = virtualinvoke $r4.<android.graphics.HardwareRenderer: android.graphics.HardwareRenderer$FrameRenderRequest createRenderRequest()>();

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        virtualinvoke r11.<android.graphics.HardwareRenderer$FrameRenderRequest: android.graphics.HardwareRenderer$FrameRenderRequest setVsyncTime(long)>($l0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r7 = new com.android.internal.view._$$Lambda$LfzJt661qZfn2w_6SYHFbD3aMy0;

        specialinvoke $r7.<com.android.internal.view._$$Lambda$LfzJt661qZfn2w_6SYHFbD3aMy0: void <init>(android.os.Handler)>(r2);

        virtualinvoke r11.<android.graphics.HardwareRenderer$FrameRenderRequest: android.graphics.HardwareRenderer$FrameRenderRequest setFrameCommitCallback(java.util.concurrent.Executor,java.lang.Runnable)>($r7, r3);

        virtualinvoke r11.<android.graphics.HardwareRenderer$FrameRenderRequest: android.graphics.HardwareRenderer$FrameRenderRequest setWaitForPresent(boolean)>(1);

        virtualinvoke r11.<android.graphics.HardwareRenderer$FrameRenderRequest: int syncAndDraw()>();

        return;
    }

    public void setSurface(android.view.Surface)
    {
        com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer r0;
        android.view.Surface r1;
        android.graphics.HardwareRenderer $r2;

        r0 := @this: com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer;

        r1 := @parameter0: android.view.Surface;

        $r2 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.HardwareRenderer mRenderer>;

        virtualinvoke $r2.<android.graphics.HardwareRenderer: void setSurface(android.view.Surface)>(r1);

        return;
    }

    public void trimMemory()
    {
        com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer r0;
        android.graphics.HardwareRenderer $r1;

        r0 := @this: com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer;

        $r1 = r0.<com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: android.graphics.HardwareRenderer mRenderer>;

        virtualinvoke $r1.<android.graphics.HardwareRenderer: void clearContent()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: java.lang.String TAG> = "ViewRenderer";

        <com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: float SPOT_SHADOW_ALPHA> = 0.039F;

        <com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: float LIGHT_Z_DP> = 400.0F;

        <com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: float LIGHT_RADIUS_DP> = 800.0F;

        <com.android.internal.view.ScrollCaptureViewSupport$ViewRenderer: float AMBIENT_SHADOW_ALPHA> = 0.039F;

        return;
    }
}
