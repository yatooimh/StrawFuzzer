public class com.android.internal.view.menu.ActionMenuItemView extends android.widget.TextView implements com.android.internal.view.menu.MenuView$ItemView, android.view.View$OnClickListener, android.widget.ActionMenuView$ActionMenuChildView
{
    private static final int MAX_ICON_SIZE;
    private static final java.lang.String TAG;
    private boolean mAllowTextWithIcon;
    private boolean mExpandedFormat;
    private android.widget.ForwardingListener mForwardingListener;
    private android.graphics.drawable.Drawable mIcon;
    private com.android.internal.view.menu.MenuItemImpl mItemData;
    private com.android.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker;
    private int mMaxIconSize;
    private int mMinWidth;
    private com.android.internal.view.menu.ActionMenuItemView$PopupCallback mPopupCallback;
    private int mSavedPaddingLeft;
    private java.lang.CharSequence mTitle;

    public void <init>(android.content.Context)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.util.AttributeSet r1;
        int i0, i1, $i2, $i3;
        android.content.res.Resources r2;
        boolean $z0;
        int[] $r3;
        android.util.DisplayMetrics $r4;
        float $f0, $f1, $f2;
        android.content.Context r5;
        android.content.res.TypedArray r6;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r5 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r5, r1, i0, i1);

        r2 = virtualinvoke r5.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: boolean shouldAllowTextWithIcon()>();

        r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon> = $z0;

        $r3 = <com.android.internal.R$styleable: int[] ActionMenuItemView>;

        r6 = virtualinvoke r5.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r3, i0, i1);

        $i2 = virtualinvoke r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        r0.<com.android.internal.view.menu.ActionMenuItemView: int mMinWidth> = $i2;

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        $r4 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r4.<android.util.DisplayMetrics: float density>;

        $f1 = 32.0F * $f0;

        $f2 = $f1 + 0.5F;

        $i3 = (int) $f2;

        r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize> = $i3;

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        r0.<com.android.internal.view.menu.ActionMenuItemView: int mSavedPaddingLeft> = -1;

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setSaveEnabled(boolean)>(0);

        return;
    }

    static com.android.internal.view.menu.ActionMenuItemView$PopupCallback access$000(com.android.internal.view.menu.ActionMenuItemView)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        com.android.internal.view.menu.ActionMenuItemView$PopupCallback $r1;

        r0 := @parameter0: com.android.internal.view.menu.ActionMenuItemView;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.ActionMenuItemView$PopupCallback mPopupCallback>;

        return $r1;
    }

    static com.android.internal.view.menu.MenuBuilder$ItemInvoker access$100(com.android.internal.view.menu.ActionMenuItemView)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        com.android.internal.view.menu.MenuBuilder$ItemInvoker $r1;

        r0 := @parameter0: com.android.internal.view.menu.ActionMenuItemView;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker>;

        return $r1;
    }

    static com.android.internal.view.menu.MenuItemImpl access$200(com.android.internal.view.menu.ActionMenuItemView)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        com.android.internal.view.menu.MenuItemImpl $r1;

        r0 := @parameter0: com.android.internal.view.menu.ActionMenuItemView;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        return $r1;
    }

    private boolean shouldAllowTextWithIcon()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.content.res.Configuration r1;
        int i0, i1, $i2;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        boolean z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        $r2 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i0 = r1.<android.content.res.Configuration: int screenWidthDp>;

        i1 = r1.<android.content.res.Configuration: int screenHeightDp>;

        if i0 >= 480 goto label3;

        if i0 < 640 goto label1;

        if i1 >= 480 goto label3;

     label1:
        $i2 = r1.<android.content.res.Configuration: int orientation>;

        if $i2 != 2 goto label2;

        goto label3;

     label2:
        z0 = 0;

        goto label4;

     label3:
        z0 = 1;

     label4:
        return z0;
    }

    private void updateTextButtonVisibility()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, z8;
        java.lang.CharSequence $r1, r8, r9, r10, r11, r12;
        android.graphics.drawable.Drawable $r2;
        com.android.internal.view.menu.MenuItemImpl $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle>;

        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        z6 = 1;

        $r2 = r0.<com.android.internal.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon>;

        if $r2 == null goto label03;

        $r7 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        $z3 = virtualinvoke $r7.<com.android.internal.view.menu.MenuItemImpl: boolean showsTextAsAction()>();

        if $z3 == 0 goto label02;

        $z4 = r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon>;

        if $z4 != 0 goto label01;

        $z5 = r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mExpandedFormat>;

        if $z5 == 0 goto label02;

     label01:
        goto label03;

     label02:
        z6 = 0;

        goto label03;

     label03:
        $z7 = z0 ^ 1;

        z8 = $z7 & z6;

        if z8 == 0 goto label04;

        r8 = r0.<com.android.internal.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle>;

        goto label05;

     label04:
        r8 = null;

     label05:
        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setText(java.lang.CharSequence)>(r8);

        $r3 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        r9 = virtualinvoke $r3.<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z1 == 0 goto label08;

        if z8 == 0 goto label06;

        r10 = null;

        goto label07;

     label06:
        $r6 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        r10 = virtualinvoke $r6.<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>();

     label07:
        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setContentDescription(java.lang.CharSequence)>(r10);

        goto label09;

     label08:
        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setContentDescription(java.lang.CharSequence)>(r9);

     label09:
        $r4 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        r11 = virtualinvoke $r4.<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r11);

        if $z2 == 0 goto label12;

        if z8 == 0 goto label10;

        r12 = null;

        goto label11;

     label10:
        $r5 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        r12 = virtualinvoke $r5.<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>();

     label11:
        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setTooltipText(java.lang.CharSequence)>(r12);

        goto label13;

     label12:
        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setTooltipText(java.lang.CharSequence)>(r11);

     label13:
        return;
    }

    public boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: boolean onHoverEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return 1;
    }

    public com.android.internal.view.menu.MenuItemImpl getItemData()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        com.android.internal.view.menu.MenuItemImpl $r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        return $r1;
    }

    public boolean hasText()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        java.lang.CharSequence $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        $r1 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public void initialize(com.android.internal.view.menu.MenuItemImpl, int)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        com.android.internal.view.menu.MenuItemImpl r1;
        android.graphics.drawable.Drawable $r2;
        java.lang.CharSequence $r3;
        int $i0, i1;
        boolean $z0, $z1, $z2;
        android.widget.ForwardingListener $r4;
        com.android.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener $r5;
        byte b2;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: com.android.internal.view.menu.MenuItemImpl;

        i1 := @parameter1: int;

        r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData> = r1;

        $r2 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)>($r2);

        $r3 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.android.internal.view.menu.MenuView$ItemView)>(r0);

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)>($r3);

        $i0 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: int getItemId()>();

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setId(int)>($i0);

        $z0 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean isVisible()>();

        if $z0 == 0 goto label1;

        b2 = 0;

        goto label2;

     label1:
        b2 = 8;

     label2:
        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setVisibility(int)>(b2);

        $z1 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean isEnabled()>();

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setEnabled(boolean)>($z1);

        $z2 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>();

        if $z2 == 0 goto label3;

        $r4 = r0.<com.android.internal.view.menu.ActionMenuItemView: android.widget.ForwardingListener mForwardingListener>;

        if $r4 != null goto label3;

        $r5 = new com.android.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener;

        specialinvoke $r5.<com.android.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: void <init>(com.android.internal.view.menu.ActionMenuItemView)>(r0);

        r0.<com.android.internal.view.menu.ActionMenuItemView: android.widget.ForwardingListener mForwardingListener> = $r5;

     label3:
        return;
    }

    public boolean needsDividerAfter()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        $z0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: boolean hasText()>();

        return $z0;
    }

    public boolean needsDividerBefore()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean $z0, z1;
        com.android.internal.view.menu.MenuItemImpl $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        $z0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: boolean hasText()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        $r2 = virtualinvoke $r1.<com.android.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        if $r2 != null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void onClick(android.view.View)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        com.android.internal.view.menu.MenuItemImpl $r1;
        android.view.View r2;
        com.android.internal.view.menu.MenuBuilder$ItemInvoker r3;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r2 := @parameter0: android.view.View;

        r3 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker>;

        if r3 == null goto label1;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        interfaceinvoke r3.<com.android.internal.view.menu.MenuBuilder$ItemInvoker: boolean invokeItem(com.android.internal.view.menu.MenuItemImpl)>($r1);

     label1:
        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.content.res.Configuration r1;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.widget.TextView: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $z0 = specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: boolean shouldAllowTextWithIcon()>();

        r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon> = $z0;

        specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19;
        boolean z0;
        android.graphics.drawable.Drawable $r1, $r2;
        android.graphics.Rect $r3;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        i15 := @parameter0: int;

        i0 := @parameter1: int;

        z0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: boolean hasText()>();

        if z0 == 0 goto label1;

        i16 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mSavedPaddingLeft>;

        if i16 < 0 goto label1;

        $i12 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingTop()>();

        $i13 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingRight()>();

        $i14 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingBottom()>();

        specialinvoke r0.<android.widget.TextView: void setPadding(int,int,int,int)>(i16, $i12, $i13, $i14);

     label1:
        specialinvoke r0.<android.widget.TextView: void onMeasure(int,int)>(i15, i0);

        i17 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i15);

        i18 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i15);

        i1 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getMeasuredWidth()>();

        if i17 != -2147483648 goto label2;

        $i11 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMinWidth>;

        i19 = staticinvoke <java.lang.Math: int min(int,int)>(i18, $i11);

        goto label3;

     label2:
        i19 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMinWidth>;

     label3:
        if i17 == 1073741824 goto label4;

        $i9 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMinWidth>;

        if $i9 <= 0 goto label4;

        if i1 >= i19 goto label4;

        $i10 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i19, 1073741824);

        specialinvoke r0.<android.widget.TextView: void onMeasure(int,int)>($i10, i0);

     label4:
        if z0 != 0 goto label5;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon>;

        if $r1 == null goto label5;

        $i2 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getMeasuredWidth()>();

        $r2 = r0.<com.android.internal.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i3 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $i4 = $i2 - $i3;

        $i5 = $i4 / 2;

        $i6 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingTop()>();

        $i7 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingRight()>();

        $i8 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingBottom()>();

        specialinvoke r0.<android.widget.TextView: void setPadding(int,int,int,int)>($i5, $i6, $i7, $i8);

     label5:
        return;
    }

    public void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.CharSequence r2;
        boolean $z0;
        java.util.List $r3;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.TextView: void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r1);

        r2 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: java.lang.CharSequence getContentDescription()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label1:
        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.os.Parcelable r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.os.Parcelable;

        specialinvoke r0.<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>(null);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.view.MotionEvent r1;
        android.widget.ForwardingListener r2;
        com.android.internal.view.menu.MenuItemImpl $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        $z0 = virtualinvoke $r3.<com.android.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.android.internal.view.menu.ActionMenuItemView: android.widget.ForwardingListener mForwardingListener>;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<android.widget.ForwardingListener: boolean onTouch(android.view.View,android.view.MotionEvent)>(r0, r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z2 = specialinvoke r0.<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z2;
    }

    public boolean prefersCondensedTitle()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        return 1;
    }

    public void setCheckable(boolean)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        z0 := @parameter0: boolean;

        return;
    }

    public void setChecked(boolean)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        z0 := @parameter0: boolean;

        return;
    }

    public void setExpandedFormat(boolean)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean z0, $z1;
        com.android.internal.view.menu.MenuItemImpl r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mExpandedFormat>;

        if $z1 == z0 goto label1;

        r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mExpandedFormat> = z0;

        r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: void actionFormatChanged()>();

     label1:
        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.graphics.drawable.Drawable r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9;
        int i0, i1, i2, i3, i4, i5, i6, i7;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.android.internal.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon> = r1;

        if r1 == null goto label3;

        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i2 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize>;

        i3 = i0;

        i4 = i1;

        if i0 <= i2 goto label1;

        $f5 = (float) i2;

        $f4 = (float) i0;

        f8 = $f5 / $f4;

        i3 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize>;

        $f6 = (float) i1;

        $f7 = $f6 * f8;

        i4 = (int) $f7;

     label1:
        i5 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize>;

        i6 = i3;

        i7 = i4;

        if i4 <= i5 goto label2;

        $f1 = (float) i5;

        $f0 = (float) i4;

        f9 = $f1 / $f0;

        i7 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize>;

        $f2 = (float) i3;

        $f3 = $f2 * f9;

        i6 = (int) $f3;

     label2:
        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i6, i7);

     label3:
        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, null, null, null);

        specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>();

        return;
    }

    public void setItemInvoker(com.android.internal.view.menu.MenuBuilder$ItemInvoker)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        com.android.internal.view.menu.MenuBuilder$ItemInvoker r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: com.android.internal.view.menu.MenuBuilder$ItemInvoker;

        r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker> = r1;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        int i0, i1, i2, i3;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<com.android.internal.view.menu.ActionMenuItemView: int mSavedPaddingLeft> = i0;

        specialinvoke r0.<android.widget.TextView: void setPadding(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void setPopupCallback(com.android.internal.view.menu.ActionMenuItemView$PopupCallback)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        com.android.internal.view.menu.ActionMenuItemView$PopupCallback r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: com.android.internal.view.menu.ActionMenuItemView$PopupCallback;

        r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.ActionMenuItemView$PopupCallback mPopupCallback> = r1;

        return;
    }

    public void setShortcut(boolean, char)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean z0;
        char c0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        z0 := @parameter0: boolean;

        c0 := @parameter1: char;

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        java.lang.CharSequence r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<com.android.internal.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle> = r1;

        specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>();

        return;
    }

    public boolean showsIcon()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        return 1;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.menu.ActionMenuItemView: java.lang.String TAG> = "ActionMenuItemView";

        <com.android.internal.view.menu.ActionMenuItemView: int MAX_ICON_SIZE> = 32;

        return;
    }
}
