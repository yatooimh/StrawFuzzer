public abstract class com.android.internal.widget.AbsActionBarView extends android.view.ViewGroup
{
    private static final int FADE_DURATION;
    private static final android.animation.TimeInterpolator sAlphaInterpolator;
    protected android.widget.ActionMenuPresenter mActionMenuPresenter;
    protected int mContentHeight;
    private boolean mEatingHover;
    private boolean mEatingTouch;
    protected android.widget.ActionMenuView mMenuView;
    protected final android.content.Context mPopupContext;
    protected boolean mSplitActionBar;
    protected android.view.ViewGroup mSplitView;
    protected boolean mSplitWhenNarrow;
    protected final com.android.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener;
    protected android.animation.Animator mVisibilityAnim;

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator $r0;

        <com.android.internal.widget.AbsActionBarView: int FADE_DURATION> = 200;

        $r0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r0.<android.view.animation.DecelerateInterpolator: void <init>()>();

        <com.android.internal.widget.AbsActionBarView: android.animation.TimeInterpolator sAlphaInterpolator> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.content.Context r1;
        int i0, i1, $i2, $i3;
        com.android.internal.widget.AbsActionBarView$VisibilityAnimListener $r2;
        android.util.TypedValue $r3;
        android.content.res.Resources$Theme $r4;
        boolean $z0;
        android.view.ContextThemeWrapper $r5;
        android.util.AttributeSet r6;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.content.Context;

        r6 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r6, i0, i1);

        $r2 = new com.android.internal.widget.AbsActionBarView$VisibilityAnimListener;

        specialinvoke $r2.<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(com.android.internal.widget.AbsActionBarView)>(r0);

        r0.<com.android.internal.widget.AbsActionBarView: com.android.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener> = $r2;

        $r3 = new android.util.TypedValue;

        specialinvoke $r3.<android.util.TypedValue: void <init>()>();

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r4.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843917, $r3, 1);

        if $z0 == 0 goto label1;

        $i2 = $r3.<android.util.TypedValue: int resourceId>;

        if $i2 == 0 goto label1;

        $r5 = new android.view.ContextThemeWrapper;

        $i3 = $r3.<android.util.TypedValue: int resourceId>;

        specialinvoke $r5.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r1, $i3);

        r0.<com.android.internal.widget.AbsActionBarView: android.content.Context mPopupContext> = $r5;

        goto label2;

     label1:
        r0.<com.android.internal.widget.AbsActionBarView: android.content.Context mPopupContext> = r1;

     label2:
        return;
    }

    protected static int next(int, int, boolean)
    {
        int i0, i1, i2;
        boolean z0;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        i2 = i1 - i0;

        goto label2;

     label1:
        i2 = i1 + i0;

     label2:
        return i2;
    }

    public void animateToVisibility(int)
    {
        com.android.internal.widget.AbsActionBarView r0;
        int i0;
        android.animation.Animator $r1;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: android.animation.Animator setupAnimatorToVisibility(int,long)>(i0, 200L);

        virtualinvoke $r1.<android.animation.Animator: void start()>();

        return;
    }

    public boolean canShowOverflowMenu()
    {
        com.android.internal.widget.AbsActionBarView r0;
        boolean $z0, z1;
        int $i0;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        $z0 = virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: int getVisibility()>();

        if $i0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void dismissPopupMenus()
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.widget.ActionMenuPresenter r1;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.ActionMenuPresenter: boolean dismissPopupMenus()>();

     label1:
        return;
    }

    public int getAnimatedVisibility()
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.animation.Animator $r1;
        int $i0, $i1;
        com.android.internal.widget.AbsActionBarView$VisibilityAnimListener $r2;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        $r1 = r0.<com.android.internal.widget.AbsActionBarView: android.animation.Animator mVisibilityAnim>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.AbsActionBarView: com.android.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $i1 = $r2.<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility>;

        return $i1;

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: int getVisibility()>();

        return $i0;
    }

    public int getContentHeight()
    {
        com.android.internal.widget.AbsActionBarView r0;
        int $i0;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        $i0 = r0.<com.android.internal.widget.AbsActionBarView: int mContentHeight>;

        return $i0;
    }

    public boolean hideOverflowMenu()
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.widget.ActionMenuPresenter r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.ActionMenuPresenter: boolean hideOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowPending()
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.widget.ActionMenuPresenter r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.widget.ActionMenuPresenter r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowReserved()
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.widget.ActionMenuPresenter r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.ActionMenuPresenter: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    protected int measureChildView(android.view.View, int, int, int)
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.view.View r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i0, -2147483648);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i3, i1);

        $i4 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i5 = i0 - $i4;

        $i6 = $i5 - i2;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        return $i7;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.content.res.Configuration r1;
        android.content.Context $r2, $r4;
        int[] $r3;
        int $i0;
        boolean $z0, $z1;
        android.content.res.Resources $r5;
        android.content.res.TypedArray r6;
        android.widget.ActionMenuPresenter r7;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $r2 = virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: android.content.Context getContext()>();

        $r3 = <com.android.internal.R$styleable: int[] ActionBar>;

        r6 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r3, 16843470, 0);

        $i0 = virtualinvoke r6.<android.content.res.TypedArray: int getLayoutDimension(int,int)>(4, 0);

        virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: void setContentHeight(int)>($i0);

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        $z0 = r0.<com.android.internal.widget.AbsActionBarView: boolean mSplitWhenNarrow>;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r5.<android.content.res.Resources: boolean getBoolean(int)>(17891614);

        virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: void setSplitToolbar(boolean)>($z1);

     label1:
        r7 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if r7 == null goto label2;

        virtualinvoke r7.<android.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label2:
        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.view.MotionEvent r1;
        int i0;
        boolean z0, $z1;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 != 9 goto label1;

        r0.<com.android.internal.widget.AbsActionBarView: boolean mEatingHover> = 0;

     label1:
        $z1 = r0.<com.android.internal.widget.AbsActionBarView: boolean mEatingHover>;

        if $z1 != 0 goto label2;

        z0 = specialinvoke r0.<android.view.ViewGroup: boolean onHoverEvent(android.view.MotionEvent)>(r1);

        if i0 != 9 goto label2;

        if z0 != 0 goto label2;

        r0.<com.android.internal.widget.AbsActionBarView: boolean mEatingHover> = 1;

     label2:
        if i0 == 10 goto label3;

        if i0 != 3 goto label4;

     label3:
        r0.<com.android.internal.widget.AbsActionBarView: boolean mEatingHover> = 0;

     label4:
        return 1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.view.MotionEvent r1;
        int i0;
        boolean z0, $z1;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 != 0 goto label1;

        r0.<com.android.internal.widget.AbsActionBarView: boolean mEatingTouch> = 0;

     label1:
        $z1 = r0.<com.android.internal.widget.AbsActionBarView: boolean mEatingTouch>;

        if $z1 != 0 goto label2;

        z0 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if i0 != 0 goto label2;

        if z0 != 0 goto label2;

        r0.<com.android.internal.widget.AbsActionBarView: boolean mEatingTouch> = 1;

     label2:
        if i0 == 1 goto label3;

        if i0 != 3 goto label4;

     label3:
        r0.<com.android.internal.widget.AbsActionBarView: boolean mEatingTouch> = 0;

     label4:
        return 1;
    }

    protected int positionChild(android.view.View, int, int, int, boolean)
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.view.View r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        boolean z0;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.view.View;

        i9 := @parameter1: int;

        i10 := @parameter2: int;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        i1 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i2 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i3 = i0 - i2;

        $i4 = $i3 / 2;

        i11 = $i4 + i10;

        if z0 == 0 goto label1;

        $i8 = i9 - i1;

        $i7 = i11 + i2;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i8, i11, i9, $i7);

        goto label2;

     label1:
        $i6 = i9 + i1;

        $i5 = i11 + i2;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i9, i11, $i6, $i5);

     label2:
        if z0 == 0 goto label3;

        i12 = neg i1;

        goto label4;

     label3:
        i12 = i1;

     label4:
        return i12;
    }

    public void postShowOverflowMenu()
    {
        com.android.internal.widget.AbsActionBarView r0;
        com.android.internal.widget.AbsActionBarView$1 $r1;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        $r1 = new com.android.internal.widget.AbsActionBarView$1;

        specialinvoke $r1.<com.android.internal.widget.AbsActionBarView$1: void <init>(com.android.internal.widget.AbsActionBarView)>(r0);

        virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void setContentHeight(int)
    {
        com.android.internal.widget.AbsActionBarView r0;
        int i0;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        i0 := @parameter0: int;

        r0.<com.android.internal.widget.AbsActionBarView: int mContentHeight> = i0;

        virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: void requestLayout()>();

        return;
    }

    public void setSplitToolbar(boolean)
    {
        com.android.internal.widget.AbsActionBarView r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.AbsActionBarView: boolean mSplitActionBar> = z0;

        return;
    }

    public void setSplitView(android.view.ViewGroup)
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.view.ViewGroup r1;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.view.ViewGroup;

        r0.<com.android.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView> = r1;

        return;
    }

    public void setSplitWhenNarrow(boolean)
    {
        com.android.internal.widget.AbsActionBarView r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.AbsActionBarView: boolean mSplitWhenNarrow> = z0;

        return;
    }

    public void setVisibility(int)
    {
        com.android.internal.widget.AbsActionBarView r0;
        int i0, $i1;
        android.animation.Animator r1;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: int getVisibility()>();

        if i0 == $i1 goto label2;

        r1 = r0.<com.android.internal.widget.AbsActionBarView: android.animation.Animator mVisibilityAnim>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.animation.Animator: void end()>();

     label1:
        specialinvoke r0.<android.view.ViewGroup: void setVisibility(int)>(i0);

     label2:
        return;
    }

    public android.animation.Animator setupAnimatorToVisibility(int, long)
    {
        com.android.internal.widget.AbsActionBarView r0;
        int i0, $i2;
        long l1;
        float[] $r1, $r10, $r23, $r35;
        android.util.Property $r2, $r11, $r24, $r34;
        android.animation.TimeInterpolator $r4, $r37;
        android.view.ViewGroup $r5, $r31, $r38;
        com.android.internal.widget.AbsActionBarView$VisibilityAnimListener $r6, $r7, $r14, $r15, $r19, $r20, $r27, $r28;
        android.widget.ActionMenuView $r8, $r12, $r21, $r25, r33;
        android.animation.AnimatorSet $r9, $r22;
        android.animation.AnimatorSet$Builder $r16, $r29;
        android.animation.Animator r32;
        android.animation.ObjectAnimator r36, r40, r41, r43;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r32 = r0.<com.android.internal.widget.AbsActionBarView: android.animation.Animator mVisibilityAnim>;

        if r32 == null goto label1;

        virtualinvoke r32.<android.animation.Animator: void cancel()>();

     label1:
        if i0 != 0 goto label4;

        $i2 = virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: int getVisibility()>();

        if $i2 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.widget.AbsActionBarView: void setAlpha(float)>(0.0F);

        $r31 = r0.<com.android.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView>;

        if $r31 == null goto label2;

        r33 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuView mMenuView>;

        if r33 == null goto label2;

        virtualinvoke r33.<android.widget.ActionMenuView: void setAlpha(float)>(0.0F);

     label2:
        $r34 = <android.view.View: android.util.Property ALPHA>;

        $r35 = newarray (float)[1];

        $r35[0] = 1.0F;

        r36 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r34, $r35);

        virtualinvoke r36.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(l1);

        $r37 = <com.android.internal.widget.AbsActionBarView: android.animation.TimeInterpolator sAlphaInterpolator>;

        virtualinvoke r36.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r37);

        $r38 = r0.<com.android.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView>;

        if $r38 == null goto label3;

        $r21 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuView mMenuView>;

        if $r21 == null goto label3;

        $r22 = new android.animation.AnimatorSet;

        specialinvoke $r22.<android.animation.AnimatorSet: void <init>()>();

        $r25 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuView mMenuView>;

        $r24 = <android.view.View: android.util.Property ALPHA>;

        $r23 = newarray (float)[1];

        $r23[0] = 1.0F;

        r40 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r25, $r24, $r23);

        virtualinvoke r40.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(l1);

        $r27 = r0.<com.android.internal.widget.AbsActionBarView: com.android.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r28 = virtualinvoke $r27.<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: com.android.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int)>(i0);

        virtualinvoke $r22.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r28);

        $r29 = virtualinvoke $r22.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r36);

        virtualinvoke $r29.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>(r40);

        return $r22;

     label3:
        $r19 = r0.<com.android.internal.widget.AbsActionBarView: com.android.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r20 = virtualinvoke $r19.<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: com.android.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int)>(i0);

        virtualinvoke r36.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r20);

        return r36;

     label4:
        $r2 = <android.view.View: android.util.Property ALPHA>;

        $r1 = newarray (float)[1];

        $r1[0] = 0.0F;

        r41 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r2, $r1);

        virtualinvoke r41.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(l1);

        $r4 = <com.android.internal.widget.AbsActionBarView: android.animation.TimeInterpolator sAlphaInterpolator>;

        virtualinvoke r41.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r4);

        $r5 = r0.<com.android.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView>;

        if $r5 == null goto label5;

        $r8 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuView mMenuView>;

        if $r8 == null goto label5;

        $r9 = new android.animation.AnimatorSet;

        specialinvoke $r9.<android.animation.AnimatorSet: void <init>()>();

        $r12 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuView mMenuView>;

        $r11 = <android.view.View: android.util.Property ALPHA>;

        $r10 = newarray (float)[1];

        $r10[0] = 0.0F;

        r43 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r12, $r11, $r10);

        virtualinvoke r43.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(l1);

        $r14 = r0.<com.android.internal.widget.AbsActionBarView: com.android.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r15 = virtualinvoke $r14.<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: com.android.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int)>(i0);

        virtualinvoke $r9.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r15);

        $r16 = virtualinvoke $r9.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r41);

        virtualinvoke $r16.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>(r43);

        return $r9;

     label5:
        $r6 = r0.<com.android.internal.widget.AbsActionBarView: com.android.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r7 = virtualinvoke $r6.<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: com.android.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int)>(i0);

        virtualinvoke r41.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r7);

        return r41;
    }

    public boolean showOverflowMenu()
    {
        com.android.internal.widget.AbsActionBarView r0;
        android.widget.ActionMenuPresenter r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.AbsActionBarView;

        r1 = r0.<com.android.internal.widget.AbsActionBarView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.ActionMenuPresenter: boolean showOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }
}
