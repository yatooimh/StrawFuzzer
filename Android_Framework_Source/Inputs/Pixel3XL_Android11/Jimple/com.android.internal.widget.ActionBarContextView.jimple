public class com.android.internal.widget.ActionBarContextView extends com.android.internal.widget.AbsActionBarView
{
    private static final java.lang.String TAG;
    private android.view.View mClose;
    private int mCloseItemLayout;
    private android.view.View mCustomView;
    private android.graphics.drawable.Drawable mSplitBackground;
    private java.lang.CharSequence mSubtitle;
    private int mSubtitleStyleRes;
    private android.widget.TextView mSubtitleView;
    private java.lang.CharSequence mTitle;
    private android.widget.LinearLayout mTitleLayout;
    private boolean mTitleOptional;
    private int mTitleStyleRes;
    private android.widget.TextView mTitleView;

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843668);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.util.AttributeSet r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        int[] $r2;
        android.graphics.drawable.Drawable $r3, $r4;
        android.content.Context r5;
        android.content.res.TypedArray r6;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        r5 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r5, r1, i0, i1);

        $r2 = <com.android.internal.R$styleable: int[] ActionMode>;

        r6 = virtualinvoke r5.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r2, i0, i1);

        $r3 = virtualinvoke r6.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void setBackground(android.graphics.drawable.Drawable)>($r3);

        $i2 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>(2, 0);

        r0.<com.android.internal.widget.ActionBarContextView: int mTitleStyleRes> = $i2;

        $i3 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>(3, 0);

        r0.<com.android.internal.widget.ActionBarContextView: int mSubtitleStyleRes> = $i3;

        $i4 = virtualinvoke r6.<android.content.res.TypedArray: int getLayoutDimension(int,int)>(1, 0);

        r0.<com.android.internal.widget.ActionBarContextView: int mContentHeight> = $i4;

        $r4 = virtualinvoke r6.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(4);

        r0.<com.android.internal.widget.ActionBarContextView: android.graphics.drawable.Drawable mSplitBackground> = $r4;

        $i5 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>(5, 17367075);

        r0.<com.android.internal.widget.ActionBarContextView: int mCloseItemLayout> = $i5;

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void initTitle()
    {
        com.android.internal.widget.ActionBarContextView r0;
        boolean z0, z1, $z2, $z3;
        android.widget.LinearLayout $r1, $r2, $r9, r14, r22, $r23;
        android.content.Context $r3;
        android.view.LayoutInflater $r4;
        int $i1, $i2, i3, i4, i5, i6;
        android.view.View $r6, $r7, $r10;
        android.widget.TextView $r8, $r11, $r12, $r13, $r15, $r17, r21;
        java.lang.CharSequence $r16, $r18, $r19, $r20;
        android.view.ViewParent $r24;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        $r1 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        if $r1 != null goto label2;

        $r3 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: android.content.Context getContext()>();

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367070, r0);

        $i1 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getChildCount()>();

        $i2 = $i1 - 1;

        $r6 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: android.view.View getChildAt(int)>($i2);

        r14 = (android.widget.LinearLayout) $r6;

        r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout> = r14;

        $r7 = virtualinvoke r14.<android.widget.LinearLayout: android.view.View findViewById(int)>(16908713);

        $r8 = (android.widget.TextView) $r7;

        r0.<com.android.internal.widget.ActionBarContextView: android.widget.TextView mTitleView> = $r8;

        $r9 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        $r10 = virtualinvoke $r9.<android.widget.LinearLayout: android.view.View findViewById(int)>(16908712);

        $r11 = (android.widget.TextView) $r10;

        r0.<com.android.internal.widget.ActionBarContextView: android.widget.TextView mSubtitleView> = $r11;

        i3 = r0.<com.android.internal.widget.ActionBarContextView: int mTitleStyleRes>;

        if i3 == 0 goto label1;

        $r13 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.TextView mTitleView>;

        virtualinvoke $r13.<android.widget.TextView: void setTextAppearance(int)>(i3);

     label1:
        i4 = r0.<com.android.internal.widget.ActionBarContextView: int mSubtitleStyleRes>;

        if i4 == 0 goto label2;

        $r12 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.TextView mSubtitleView>;

        virtualinvoke $r12.<android.widget.TextView: void setTextAppearance(int)>(i4);

     label2:
        $r15 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.TextView mTitleView>;

        $r16 = r0.<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence mTitle>;

        virtualinvoke $r15.<android.widget.TextView: void setText(java.lang.CharSequence)>($r16);

        $r17 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.TextView mSubtitleView>;

        $r18 = r0.<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence mSubtitle>;

        virtualinvoke $r17.<android.widget.TextView: void setText(java.lang.CharSequence)>($r18);

        $r19 = r0.<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence mTitle>;

        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r19);

        $r20 = r0.<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence mSubtitle>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r20);

        z1 = $z3 ^ 1;

        r21 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.TextView mSubtitleView>;

        if z1 == 0 goto label3;

        i5 = 0;

        goto label4;

     label3:
        i5 = 8;

     label4:
        virtualinvoke r21.<android.widget.TextView: void setVisibility(int)>(i5);

        r22 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        i6 = 0;

        $z2 = z0 ^ 1;

        if $z2 != 0 goto label6;

        if z1 == 0 goto label5;

        i6 = 0;

        goto label6;

     label5:
        i6 = 8;

     label6:
        virtualinvoke r22.<android.widget.LinearLayout: void setVisibility(int)>(i6);

        $r23 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        $r24 = virtualinvoke $r23.<android.widget.LinearLayout: android.view.ViewParent getParent()>();

        if $r24 != null goto label7;

        $r2 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void addView(android.view.View)>($r2);

     label7:
        return;
    }

    public void closeMode()
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.view.View $r1;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        $r1 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mClose>;

        if $r1 != null goto label1;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void killMode()>();

        return;

     label1:
        return;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.view.ViewGroup$MarginLayoutParams $r1;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        $r1 = new android.view.ViewGroup$MarginLayoutParams;

        specialinvoke $r1.<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>(-1, -2);

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.util.AttributeSet r1;
        android.view.ViewGroup$MarginLayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.view.ViewGroup$MarginLayoutParams;

        $r3 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: android.content.Context getContext()>();

        specialinvoke $r2.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    public java.lang.CharSequence getSubtitle()
    {
        com.android.internal.widget.ActionBarContextView r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        $r1 = r0.<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence mSubtitle>;

        return $r1;
    }

    public java.lang.CharSequence getTitle()
    {
        com.android.internal.widget.ActionBarContextView r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        $r1 = r0.<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence mTitle>;

        return $r1;
    }

    public boolean hideOverflowMenu()
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        $r1 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.widget.ActionMenuPresenter: boolean hideOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }

    public void initForMode(android.view.ActionMode)
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.view.ViewParent $r1;
        android.widget.ActionMenuPresenter $r2, $r4, $r6, $r10, $r12, $r13, $r21, $r22, $r27, $r39;
        android.content.Context $r3, $r7, $r11, $r20, $r29;
        android.view.ViewGroup$LayoutParams $r5;
        boolean $z0;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r9;
        int $i0, $i1, $i2;
        com.android.internal.view.menu.MenuView $r14, $r23;
        android.widget.ActionMenuView $r15, $r17, $r18, $r24, $r25, $r26;
        android.graphics.drawable.Drawable $r16;
        android.view.ViewGroup $r19;
        android.view.View $r28, r32, r33, $r34, $r35;
        android.view.LayoutInflater $r30;
        android.view.ActionMode r31;
        com.android.internal.widget.ActionBarContextView$1 $r36;
        android.view.Menu $r37;
        com.android.internal.view.menu.MenuBuilder r38;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        r31 := @parameter0: android.view.ActionMode;

        r32 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mClose>;

        if r32 != null goto label1;

        $r29 = r0.<com.android.internal.widget.ActionBarContextView: android.content.Context mContext>;

        $r30 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r29);

        $i2 = r0.<com.android.internal.widget.ActionBarContextView: int mCloseItemLayout>;

        r33 = virtualinvoke $r30.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i2, r0, 0);

        r0.<com.android.internal.widget.ActionBarContextView: android.view.View mClose> = r33;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void addView(android.view.View)>(r33);

        goto label2;

     label1:
        $r1 = virtualinvoke r32.<android.view.View: android.view.ViewParent getParent()>();

        if $r1 != null goto label2;

        $r28 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mClose>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void addView(android.view.View)>($r28);

        goto label2;

     label2:
        $r34 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mClose>;

        $r35 = virtualinvoke $r34.<android.view.View: android.view.View findViewById(int)>(16908720);

        $r36 = new com.android.internal.widget.ActionBarContextView$1;

        specialinvoke $r36.<com.android.internal.widget.ActionBarContextView$1: void <init>(com.android.internal.widget.ActionBarContextView,android.view.ActionMode)>(r0, r31);

        virtualinvoke $r35.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r36);

        $r37 = virtualinvoke r31.<android.view.ActionMode: android.view.Menu getMenu()>();

        r38 = (com.android.internal.view.menu.MenuBuilder) $r37;

        $r39 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r39 == null goto label3;

        $r27 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r27.<android.widget.ActionMenuPresenter: boolean dismissPopupMenus()>();

     label3:
        $r2 = new android.widget.ActionMenuPresenter;

        $r3 = r0.<com.android.internal.widget.ActionBarContextView: android.content.Context mContext>;

        specialinvoke $r2.<android.widget.ActionMenuPresenter: void <init>(android.content.Context)>($r3);

        r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter> = $r2;

        $r4 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r4.<android.widget.ActionMenuPresenter: void setReserveOverflow(boolean)>(1);

        $r5 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r5.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -1);

        $z0 = r0.<com.android.internal.widget.ActionBarContextView: boolean mSplitActionBar>;

        if $z0 != 0 goto label4;

        $r21 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        $r20 = r0.<com.android.internal.widget.ActionBarContextView: android.content.Context mPopupContext>;

        virtualinvoke r38.<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(com.android.internal.view.menu.MenuPresenter,android.content.Context)>($r21, $r20);

        $r22 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        $r23 = virtualinvoke $r22.<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>(r0);

        $r24 = (android.widget.ActionMenuView) $r23;

        r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView> = $r24;

        $r25 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r25.<android.widget.ActionMenuView: void setBackground(android.graphics.drawable.Drawable)>(null);

        $r26 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r26, $r5);

        goto label5;

     label4:
        $r6 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        $r7 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r9.<android.util.DisplayMetrics: int widthPixels>;

        virtualinvoke $r6.<android.widget.ActionMenuPresenter: void setWidthLimit(int,boolean)>($i0, 1);

        $r10 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r10.<android.widget.ActionMenuPresenter: void setItemLimit(int)>(2147483647);

        $r5.<android.view.ViewGroup$LayoutParams: int width> = -1;

        $i1 = r0.<com.android.internal.widget.ActionBarContextView: int mContentHeight>;

        $r5.<android.view.ViewGroup$LayoutParams: int height> = $i1;

        $r12 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        $r11 = r0.<com.android.internal.widget.ActionBarContextView: android.content.Context mPopupContext>;

        virtualinvoke r38.<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(com.android.internal.view.menu.MenuPresenter,android.content.Context)>($r12, $r11);

        $r13 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        $r14 = virtualinvoke $r13.<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>(r0);

        $r15 = (android.widget.ActionMenuView) $r14;

        r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView> = $r15;

        $r17 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        $r16 = r0.<com.android.internal.widget.ActionBarContextView: android.graphics.drawable.Drawable mSplitBackground>;

        virtualinvoke $r17.<android.widget.ActionMenuView: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r16);

        $r19 = r0.<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup mSplitView>;

        $r18 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r19.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r18, $r5);

     label5:
        return;
    }

    public boolean isOverflowMenuShowing()
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        $r1 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isTitleOptional()
    {
        com.android.internal.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        $z0 = r0.<com.android.internal.widget.ActionBarContextView: boolean mTitleOptional>;

        return $z0;
    }

    public void killMode()
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.view.ViewGroup $r1, $r3;
        android.widget.ActionMenuView $r2;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void removeAllViews()>();

        $r1 = r0.<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup mSplitView>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup mSplitView>;

        $r2 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r3.<android.view.ViewGroup: void removeView(android.view.View)>($r2);

     label1:
        r0.<com.android.internal.widget.ActionBarContextView: android.view.View mCustomView> = null;

        r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView> = null;

        return;
    }

    public void onDetachedFromWindow()
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.widget.ActionMenuPresenter $r1, $r2, $r3;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        specialinvoke r0.<com.android.internal.widget.AbsActionBarView: void onDetachedFromWindow()>();

        $r1 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r2.<android.widget.ActionMenuPresenter: boolean hideOverflowMenu()>();

        $r3 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r3.<android.widget.ActionMenuPresenter: boolean hideSubMenus()>();

     label1:
        return;
    }

    public void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.view.accessibility.AccessibilityEvent r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r3, $r5;
        android.content.Context $r4;
        java.lang.CharSequence $r6;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 32 goto label1;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setSource(android.view.View)>(r0);

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        $r4 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r5);

        $r6 = r0.<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence mTitle>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>($r6);

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.widget.AbsActionBarView: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r1);

     label2:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.internal.widget.ActionBarContextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27;
        android.widget.ActionMenuView $r1, $r2;
        boolean $z0, z1, z2;
        android.view.View $r3, $r5, $r7, r8, r11;
        android.widget.LinearLayout $r4, r10;
        android.view.ViewGroup$LayoutParams $r6;
        android.view.ViewGroup$MarginLayoutParams r9;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        z1 := @parameter0: boolean;

        i18 := @parameter1: int;

        i19 := @parameter2: int;

        i0 := @parameter3: int;

        i20 := @parameter4: int;

        z2 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: boolean isLayoutRtl()>();

        if z2 == 0 goto label01;

        $i16 = i0 - i18;

        $i17 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getPaddingRight()>();

        i21 = $i16 - $i17;

        goto label02;

     label01:
        i21 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getPaddingLeft()>();

     label02:
        i1 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getPaddingTop()>();

        $i3 = i20 - i19;

        $i4 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getPaddingTop()>();

        $i5 = $i3 - $i4;

        $i6 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getPaddingBottom()>();

        i2 = $i5 - $i6;

        r8 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mClose>;

        if r8 == null goto label07;

        $i13 = virtualinvoke r8.<android.view.View: int getVisibility()>();

        if $i13 == 8 goto label07;

        $r5 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mClose>;

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r9 = (android.view.ViewGroup$MarginLayoutParams) $r6;

        if z2 == 0 goto label03;

        i22 = r9.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        goto label04;

     label03:
        i22 = r9.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

     label04:
        if z2 == 0 goto label05;

        i23 = r9.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        goto label06;

     label05:
        i23 = r9.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

     label06:
        i24 = staticinvoke <com.android.internal.widget.ActionBarContextView: int next(int,int,boolean)>(i21, i22, z2);

        $r7 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mClose>;

        $i14 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int positionChild(android.view.View,int,int,int,boolean)>($r7, i24, i1, i2, z2);

        $i15 = i24 + $i14;

        i25 = staticinvoke <com.android.internal.widget.ActionBarContextView: int next(int,int,boolean)>($i15, i23, z2);

        goto label08;

     label07:
        i25 = i21;

     label08:
        r10 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        i26 = i25;

        if r10 == null goto label09;

        i26 = i25;

        $r3 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mCustomView>;

        if $r3 != null goto label09;

        i26 = i25;

        $i11 = virtualinvoke r10.<android.widget.LinearLayout: int getVisibility()>();

        if $i11 == 8 goto label09;

        $r4 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        $i12 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int positionChild(android.view.View,int,int,int,boolean)>($r4, i25, i1, i2, z2);

        i26 = i25 + $i12;

     label09:
        r11 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mCustomView>;

        if r11 == null goto label10;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int positionChild(android.view.View,int,int,int,boolean)>(r11, i26, i1, i2, z2);

     label10:
        if z2 == 0 goto label11;

        i27 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getPaddingLeft()>();

        goto label12;

     label11:
        $i7 = i0 - i18;

        $i8 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getPaddingRight()>();

        i27 = $i7 - $i8;

     label12:
        $r1 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label13;

        $r2 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        $z0 = z2 ^ 1;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int positionChild(android.view.View,int,int,int,boolean)>($r2, i27, i1, i2, $z0);

     label13:
        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.ActionBarContextView r0;
        int i0, i1, i2, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i29, i30, i31, i32, i33, i34, i35, i36, i38, i39, i40, i41, i42, i43, i44, i45;
        java.lang.StringBuilder $r1, $r8;
        java.lang.Class $r2, $r9;
        java.lang.String $r3, $r7, $r10, $r14;
        java.lang.IllegalStateException $r6, $r13;
        android.widget.ActionMenuView $r15, $r21, $r23;
        android.view.View $r16, $r17, $r18, $r24, r26, r30;
        boolean $z0, z1;
        android.widget.LinearLayout $r19, $r20, r28, r29;
        android.view.ViewParent $r22;
        android.view.ViewGroup$LayoutParams $r25, r31;
        android.view.ViewGroup$MarginLayoutParams r27;
        byte b37;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        i25 := @parameter0: int;

        i26 := @parameter1: int;

        i27 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i25);

        if i27 != 1073741824 goto label26;

        $i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i26);

        if $i5 == 0 goto label25;

        i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i25);

        $i6 = r0.<com.android.internal.widget.ActionBarContextView: int mContentHeight>;

        if $i6 <= 0 goto label01;

        i29 = r0.<com.android.internal.widget.ActionBarContextView: int mContentHeight>;

        goto label02;

     label01:
        i29 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i26);

     label02:
        $i7 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getPaddingTop()>();

        $i8 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getPaddingBottom()>();

        i1 = $i7 + $i8;

        $i9 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getPaddingLeft()>();

        $i10 = i0 - $i9;

        $i11 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getPaddingRight()>();

        i30 = $i10 - $i11;

        i2 = i29 - i1;

        i31 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i2, -2147483648);

        r26 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mClose>;

        i32 = i30;

        if r26 == null goto label03;

        i33 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int measureChildView(android.view.View,int,int,int)>(r26, i30, i31, 0);

        $r24 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mClose>;

        $r25 = virtualinvoke $r24.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r27 = (android.view.ViewGroup$MarginLayoutParams) $r25;

        $i23 = r27.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i22 = r27.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i24 = $i23 + $i22;

        i32 = i33 - $i24;

     label03:
        i34 = i32;

        $r15 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        if $r15 == null goto label04;

        i34 = i32;

        $r21 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        $r22 = virtualinvoke $r21.<android.widget.ActionMenuView: android.view.ViewParent getParent()>();

        if $r22 != r0 goto label04;

        $r23 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        i34 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int measureChildView(android.view.View,int,int,int)>($r23, i32, i31, 0);

     label04:
        r28 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        i35 = i34;

        if r28 == null goto label11;

        i35 = i34;

        $r18 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mCustomView>;

        if $r18 != null goto label11;

        $z0 = r0.<com.android.internal.widget.ActionBarContextView: boolean mTitleOptional>;

        if $z0 == 0 goto label10;

        i36 = staticinvoke <android.view.View$MeasureSpec: int makeSafeMeasureSpec(int,int)>(i0, 0);

        $r19 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        virtualinvoke $r19.<android.widget.LinearLayout: void measure(int,int)>(i36, i31);

        $r20 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        i4 = virtualinvoke $r20.<android.widget.LinearLayout: int getMeasuredWidth()>();

        if i4 > i34 goto label05;

        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        i35 = i34;

        if z1 == 0 goto label07;

        i35 = i34 - i4;

     label07:
        r29 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        if z1 == 0 goto label08;

        b37 = 0;

        goto label09;

     label08:
        b37 = 8;

     label09:
        virtualinvoke r29.<android.widget.LinearLayout: void setVisibility(int)>(b37);

        goto label11;

     label10:
        i35 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int measureChildView(android.view.View,int,int,int)>(r28, i34, i31, 0);

     label11:
        r30 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mCustomView>;

        if r30 == null goto label19;

        r31 = virtualinvoke r30.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i14 = r31.<android.view.ViewGroup$LayoutParams: int width>;

        if $i14 == -2 goto label12;

        i38 = 1073741824;

        goto label13;

     label12:
        i38 = -2147483648;

     label13:
        $i15 = r31.<android.view.ViewGroup$LayoutParams: int width>;

        if $i15 < 0 goto label14;

        $i21 = r31.<android.view.ViewGroup$LayoutParams: int width>;

        i35 = staticinvoke <java.lang.Math: int min(int,int)>($i21, i35);

        goto label14;

     label14:
        $i16 = r31.<android.view.ViewGroup$LayoutParams: int height>;

        if $i16 == -2 goto label15;

        i39 = 1073741824;

        goto label16;

     label15:
        i39 = -2147483648;

     label16:
        $i17 = r31.<android.view.ViewGroup$LayoutParams: int height>;

        if $i17 < 0 goto label17;

        $i20 = r31.<android.view.ViewGroup$LayoutParams: int height>;

        i40 = staticinvoke <java.lang.Math: int min(int,int)>($i20, i2);

        goto label18;

     label17:
        i40 = i2;

     label18:
        $r17 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mCustomView>;

        $i18 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i35, i38);

        $i19 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i40, i39);

        virtualinvoke $r17.<android.view.View: void measure(int,int)>($i18, $i19);

        goto label19;

     label19:
        $i12 = r0.<com.android.internal.widget.ActionBarContextView: int mContentHeight>;

        if $i12 > 0 goto label23;

        i41 = 0;

        i42 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: int getChildCount()>();

        i43 = 0;

     label20:
        if i43 >= i42 goto label22;

        $r16 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: android.view.View getChildAt(int)>(i43);

        $i13 = virtualinvoke $r16.<android.view.View: int getMeasuredHeight()>();

        i44 = $i13 + i1;

        i45 = i41;

        if i44 <= i41 goto label21;

        i45 = i44;

     label21:
        i43 = i43 + 1;

        i41 = i45;

        goto label20;

     label22:
        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void setMeasuredDimension(int,int)>(i0, i41);

        goto label24;

     label23:
        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void setMeasuredDimension(int,int)>(i0, i29);

     label24:
        return;

     label25:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be used with android:layout_height=\"wrap_content\"");

        $r13 = new java.lang.IllegalStateException;

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label26:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be used with android:layout_width=\"match_parent\" (or fill_parent)");

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void setContentHeight(int)
    {
        com.android.internal.widget.ActionBarContextView r0;
        int i0;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        i0 := @parameter0: int;

        r0.<com.android.internal.widget.ActionBarContextView: int mContentHeight> = i0;

        return;
    }

    public void setCustomView(android.view.View)
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.view.View r1, r2;
        android.widget.LinearLayout r3;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        r1 := @parameter0: android.view.View;

        r2 = r0.<com.android.internal.widget.ActionBarContextView: android.view.View mCustomView>;

        if r2 == null goto label1;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void removeView(android.view.View)>(r2);

     label1:
        r0.<com.android.internal.widget.ActionBarContextView: android.view.View mCustomView> = r1;

        if r1 == null goto label2;

        r3 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        if r3 == null goto label2;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void removeView(android.view.View)>(r3);

        r0.<com.android.internal.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout> = null;

     label2:
        if r1 == null goto label3;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void addView(android.view.View)>(r1);

     label3:
        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void requestLayout()>();

        return;
    }

    public void setSplitToolbar(boolean)
    {
        com.android.internal.widget.ActionBarContextView r0;
        boolean z0, $z1;
        android.widget.ActionMenuPresenter $r2, $r4, $r8, $r9, $r19;
        android.view.ViewGroup$LayoutParams $r3;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        android.util.DisplayMetrics $r7;
        int $i0, $i1;
        com.android.internal.view.menu.MenuView $r10, $r20;
        android.widget.ActionMenuView $r11, $r13, $r14, $r16, $r18, $r21, $r22, $r23, $r25, $r26;
        android.graphics.drawable.Drawable $r12;
        android.view.ViewParent $r15, $r24;
        android.view.ViewGroup $r17, r27, r28;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.widget.ActionBarContextView: boolean mSplitActionBar>;

        if $z1 == z0 goto label5;

        $r2 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r2 == null goto label4;

        $r3 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r3.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -1);

        if z0 != 0 goto label2;

        $r19 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        $r20 = virtualinvoke $r19.<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>(r0);

        $r21 = (android.widget.ActionMenuView) $r20;

        r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView> = $r21;

        $r22 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r22.<android.widget.ActionMenuView: void setBackground(android.graphics.drawable.Drawable)>(null);

        $r23 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        $r24 = virtualinvoke $r23.<android.widget.ActionMenuView: android.view.ViewParent getParent()>();

        r27 = (android.view.ViewGroup) $r24;

        if r27 == null goto label1;

        $r26 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        virtualinvoke r27.<android.view.ViewGroup: void removeView(android.view.View)>($r26);

     label1:
        $r25 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r25, $r3);

        goto label4;

     label2:
        $r4 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        $r5 = virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r7.<android.util.DisplayMetrics: int widthPixels>;

        virtualinvoke $r4.<android.widget.ActionMenuPresenter: void setWidthLimit(int,boolean)>($i0, 1);

        $r8 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r8.<android.widget.ActionMenuPresenter: void setItemLimit(int)>(2147483647);

        $r3.<android.view.ViewGroup$LayoutParams: int width> = -1;

        $i1 = r0.<com.android.internal.widget.ActionBarContextView: int mContentHeight>;

        $r3.<android.view.ViewGroup$LayoutParams: int height> = $i1;

        $r9 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        $r10 = virtualinvoke $r9.<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>(r0);

        $r11 = (android.widget.ActionMenuView) $r10;

        r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView> = $r11;

        $r13 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        $r12 = r0.<com.android.internal.widget.ActionBarContextView: android.graphics.drawable.Drawable mSplitBackground>;

        virtualinvoke $r13.<android.widget.ActionMenuView: void setBackground(android.graphics.drawable.Drawable)>($r12);

        $r14 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        $r15 = virtualinvoke $r14.<android.widget.ActionMenuView: android.view.ViewParent getParent()>();

        r28 = (android.view.ViewGroup) $r15;

        if r28 == null goto label3;

        $r18 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        virtualinvoke r28.<android.view.ViewGroup: void removeView(android.view.View)>($r18);

     label3:
        $r17 = r0.<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup mSplitView>;

        $r16 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r17.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r16, $r3);

     label4:
        specialinvoke r0.<com.android.internal.widget.AbsActionBarView: void setSplitToolbar(boolean)>(z0);

     label5:
        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        com.android.internal.widget.ActionBarContextView r0;
        java.lang.CharSequence r1;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence mSubtitle> = r1;

        specialinvoke r0.<com.android.internal.widget.ActionBarContextView: void initTitle()>();

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        com.android.internal.widget.ActionBarContextView r0;
        java.lang.CharSequence r1;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence mTitle> = r1;

        specialinvoke r0.<com.android.internal.widget.ActionBarContextView: void initTitle()>();

        return;
    }

    public void setTitleOptional(boolean)
    {
        com.android.internal.widget.ActionBarContextView r0;
        boolean z0, $z1;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.widget.ActionBarContextView: boolean mTitleOptional>;

        if z0 == $z1 goto label1;

        virtualinvoke r0.<com.android.internal.widget.ActionBarContextView: void requestLayout()>();

     label1:
        r0.<com.android.internal.widget.ActionBarContextView: boolean mTitleOptional> = z0;

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        com.android.internal.widget.ActionBarContextView r0;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        return 0;
    }

    public boolean showOverflowMenu()
    {
        com.android.internal.widget.ActionBarContextView r0;
        android.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarContextView;

        $r1 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.ActionBarContextView: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.widget.ActionMenuPresenter: boolean showOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.ActionBarContextView: java.lang.String TAG> = "ActionBarContextView";

        return;
    }
}
