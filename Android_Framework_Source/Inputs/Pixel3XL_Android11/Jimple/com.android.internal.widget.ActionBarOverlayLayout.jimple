public class com.android.internal.widget.ActionBarOverlayLayout extends android.view.ViewGroup implements com.android.internal.widget.DecorContentParent
{
    public static final android.util.Property ACTION_BAR_HIDE_OFFSET;
    static final int[] ATTRS;
    private static final java.lang.String TAG;
    private final int ACTION_BAR_ANIMATE_DELAY;
    private com.android.internal.widget.ActionBarContainer mActionBarBottom;
    private int mActionBarHeight;
    private com.android.internal.widget.ActionBarContainer mActionBarTop;
    private com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback;
    private final java.lang.Runnable mAddActionBarHideOffset;
    private boolean mAnimatingForFling;
    private final android.graphics.Rect mBaseContentInsets;
    private android.view.WindowInsets mBaseInnerInsets;
    private final android.animation.Animator$AnimatorListener mBottomAnimatorListener;
    private android.view.View mContent;
    private final android.graphics.Rect mContentInsets;
    private android.view.ViewPropertyAnimator mCurrentActionBarBottomAnimator;
    private android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator;
    private com.android.internal.widget.DecorToolbar mDecorToolbar;
    private android.widget.OverScroller mFlingEstimator;
    private boolean mHasNonEmbeddedTabs;
    private boolean mHideOnContentScroll;
    private int mHideOnContentScrollReference;
    private boolean mIgnoreWindowContentOverlay;
    private android.view.WindowInsets mInnerInsets;
    private final android.graphics.Rect mLastBaseContentInsets;
    private android.view.WindowInsets mLastBaseInnerInsets;
    private android.view.WindowInsets mLastInnerInsets;
    private int mLastSystemUiVisibility;
    private boolean mOverlayMode;
    private final java.lang.Runnable mRemoveActionBarHideOffset;
    private final android.animation.Animator$AnimatorListener mTopAnimatorListener;
    private android.graphics.drawable.Drawable mWindowContentOverlay;
    private int mWindowVisibility;

    static void <clinit>()
    {
        com.android.internal.widget.ActionBarOverlayLayout$5 $r0;
        int[] $r1;

        <com.android.internal.widget.ActionBarOverlayLayout: java.lang.String TAG> = "ActionBarOverlayLayout";

        $r0 = new com.android.internal.widget.ActionBarOverlayLayout$5;

        specialinvoke $r0.<com.android.internal.widget.ActionBarOverlayLayout$5: void <init>(java.lang.String)>("actionBarHideOffset");

        <com.android.internal.widget.ActionBarOverlayLayout: android.util.Property ACTION_BAR_HIDE_OFFSET> = $r0;

        $r1 = newarray (int)[2];

        $r1[0] = 16843499;

        $r1[1] = 16842841;

        <com.android.internal.widget.ActionBarOverlayLayout: int[] ATTRS> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.content.Context r1;
        android.graphics.Rect $r2, $r3, $r4;
        android.view.WindowInsets $r5, $r6, $r7, $r8;
        com.android.internal.widget.ActionBarOverlayLayout$1 $r9;
        com.android.internal.widget.ActionBarOverlayLayout$2 $r10;
        com.android.internal.widget.ActionBarOverlayLayout$3 $r11;
        com.android.internal.widget.ActionBarOverlayLayout$4 $r12;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>(r1);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: int mWindowVisibility> = 0;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets> = $r4;

        $r5 = <android.view.WindowInsets: android.view.WindowInsets CONSUMED>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mBaseInnerInsets> = $r5;

        $r6 = <android.view.WindowInsets: android.view.WindowInsets CONSUMED>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mLastBaseInnerInsets> = $r6;

        $r7 = <android.view.WindowInsets: android.view.WindowInsets CONSUMED>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets> = $r7;

        $r8 = <android.view.WindowInsets: android.view.WindowInsets CONSUMED>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mLastInnerInsets> = $r8;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: int ACTION_BAR_ANIMATE_DELAY> = 600;

        $r9 = new com.android.internal.widget.ActionBarOverlayLayout$1;

        specialinvoke $r9.<com.android.internal.widget.ActionBarOverlayLayout$1: void <init>(com.android.internal.widget.ActionBarOverlayLayout)>(r0);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.animation.Animator$AnimatorListener mTopAnimatorListener> = $r9;

        $r10 = new com.android.internal.widget.ActionBarOverlayLayout$2;

        specialinvoke $r10.<com.android.internal.widget.ActionBarOverlayLayout$2: void <init>(com.android.internal.widget.ActionBarOverlayLayout)>(r0);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.animation.Animator$AnimatorListener mBottomAnimatorListener> = $r10;

        $r11 = new com.android.internal.widget.ActionBarOverlayLayout$3;

        specialinvoke $r11.<com.android.internal.widget.ActionBarOverlayLayout$3: void <init>(com.android.internal.widget.ActionBarOverlayLayout)>(r0);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset> = $r11;

        $r12 = new com.android.internal.widget.ActionBarOverlayLayout$4;

        specialinvoke $r12.<com.android.internal.widget.ActionBarOverlayLayout$4: void <init>(com.android.internal.widget.ActionBarOverlayLayout)>(r0);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset> = $r12;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void init(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.graphics.Rect $r3, $r4, $r5;
        android.view.WindowInsets $r6, $r7, $r8, $r9;
        com.android.internal.widget.ActionBarOverlayLayout$1 $r10;
        com.android.internal.widget.ActionBarOverlayLayout$2 $r11;
        com.android.internal.widget.ActionBarOverlayLayout$3 $r12;
        com.android.internal.widget.ActionBarOverlayLayout$4 $r13;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: int mWindowVisibility> = 0;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets> = $r5;

        $r6 = <android.view.WindowInsets: android.view.WindowInsets CONSUMED>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mBaseInnerInsets> = $r6;

        $r7 = <android.view.WindowInsets: android.view.WindowInsets CONSUMED>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mLastBaseInnerInsets> = $r7;

        $r8 = <android.view.WindowInsets: android.view.WindowInsets CONSUMED>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets> = $r8;

        $r9 = <android.view.WindowInsets: android.view.WindowInsets CONSUMED>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mLastInnerInsets> = $r9;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: int ACTION_BAR_ANIMATE_DELAY> = 600;

        $r10 = new com.android.internal.widget.ActionBarOverlayLayout$1;

        specialinvoke $r10.<com.android.internal.widget.ActionBarOverlayLayout$1: void <init>(com.android.internal.widget.ActionBarOverlayLayout)>(r0);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.animation.Animator$AnimatorListener mTopAnimatorListener> = $r10;

        $r11 = new com.android.internal.widget.ActionBarOverlayLayout$2;

        specialinvoke $r11.<com.android.internal.widget.ActionBarOverlayLayout$2: void <init>(com.android.internal.widget.ActionBarOverlayLayout)>(r0);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.animation.Animator$AnimatorListener mBottomAnimatorListener> = $r11;

        $r12 = new com.android.internal.widget.ActionBarOverlayLayout$3;

        specialinvoke $r12.<com.android.internal.widget.ActionBarOverlayLayout$3: void <init>(com.android.internal.widget.ActionBarOverlayLayout)>(r0);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset> = $r12;

        $r13 = new com.android.internal.widget.ActionBarOverlayLayout$4;

        specialinvoke $r13.<com.android.internal.widget.ActionBarOverlayLayout$4: void <init>(com.android.internal.widget.ActionBarOverlayLayout)>(r0);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset> = $r13;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void init(android.content.Context)>(r1);

        return;
    }

    static android.view.ViewPropertyAnimator access$002(com.android.internal.widget.ActionBarOverlayLayout, android.view.ViewPropertyAnimator)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.ViewPropertyAnimator r1;

        r0 := @parameter0: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter1: android.view.ViewPropertyAnimator;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator> = r1;

        return r1;
    }

    static boolean access$102(com.android.internal.widget.ActionBarOverlayLayout, boolean)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.widget.ActionBarOverlayLayout;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mAnimatingForFling> = z0;

        return z0;
    }

    static android.view.ViewPropertyAnimator access$202(com.android.internal.widget.ActionBarOverlayLayout, android.view.ViewPropertyAnimator)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.ViewPropertyAnimator r1;

        r0 := @parameter0: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter1: android.view.ViewPropertyAnimator;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.ViewPropertyAnimator mCurrentActionBarBottomAnimator> = r1;

        return r1;
    }

    static void access$300(com.android.internal.widget.ActionBarOverlayLayout)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;

        r0 := @parameter0: com.android.internal.widget.ActionBarOverlayLayout;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        return;
    }

    static android.animation.Animator$AnimatorListener access$400(com.android.internal.widget.ActionBarOverlayLayout)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.animation.Animator$AnimatorListener $r1;

        r0 := @parameter0: com.android.internal.widget.ActionBarOverlayLayout;

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.animation.Animator$AnimatorListener mTopAnimatorListener>;

        return $r1;
    }

    static com.android.internal.widget.ActionBarContainer access$500(com.android.internal.widget.ActionBarOverlayLayout)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.ActionBarContainer $r1;

        r0 := @parameter0: com.android.internal.widget.ActionBarOverlayLayout;

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        return $r1;
    }

    static com.android.internal.widget.ActionBarContainer access$600(com.android.internal.widget.ActionBarOverlayLayout)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.ActionBarContainer $r1;

        r0 := @parameter0: com.android.internal.widget.ActionBarOverlayLayout;

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        return $r1;
    }

    static android.animation.Animator$AnimatorListener access$700(com.android.internal.widget.ActionBarOverlayLayout)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.animation.Animator$AnimatorListener $r1;

        r0 := @parameter0: com.android.internal.widget.ActionBarOverlayLayout;

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.animation.Animator$AnimatorListener mBottomAnimatorListener>;

        return $r1;
    }

    private void addActionBarHideOffset()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        java.lang.Runnable $r1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return;
    }

    private boolean applyInsets(android.view.View, android.graphics.Rect, boolean, boolean, boolean, boolean)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.graphics.Rect r1;
        boolean z0, z1, z3, z4, z5, z6, z7, z8;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.view.View r3;
        com.android.internal.widget.ActionBarOverlayLayout$LayoutParams r4;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r3 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.Rect;

        z3 := @parameter2: boolean;

        z4 := @parameter3: boolean;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r2 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (com.android.internal.widget.ActionBarOverlayLayout$LayoutParams) $r2;

        z5 = 0;

        if z3 == 0 goto label1;

        z5 = 0;

        $i10 = r4.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        $i9 = r1.<android.graphics.Rect: int left>;

        if $i10 == $i9 goto label1;

        z5 = 1;

        $i11 = r1.<android.graphics.Rect: int left>;

        r4.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin> = $i11;

     label1:
        z6 = z5;

        if z4 == 0 goto label2;

        z6 = z5;

        $i7 = r4.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        $i6 = r1.<android.graphics.Rect: int top>;

        if $i7 == $i6 goto label2;

        z6 = 1;

        $i8 = r1.<android.graphics.Rect: int top>;

        r4.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int topMargin> = $i8;

     label2:
        z7 = z6;

        if z1 == 0 goto label3;

        z7 = z6;

        $i4 = r4.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin>;

        $i3 = r1.<android.graphics.Rect: int right>;

        if $i4 == $i3 goto label3;

        z7 = 1;

        $i5 = r1.<android.graphics.Rect: int right>;

        r4.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin> = $i5;

     label3:
        z8 = z7;

        if z0 == 0 goto label4;

        z8 = z7;

        $i1 = r4.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        if $i1 == $i0 goto label4;

        z8 = 1;

        $i2 = r1.<android.graphics.Rect: int bottom>;

        r4.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin> = $i2;

     label4:
        return z8;
    }

    private com.android.internal.widget.DecorToolbar getDecorToolbar(android.view.View)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.View r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;
        java.lang.IllegalStateException $r8;
        android.widget.Toolbar $r10;
        com.android.internal.widget.DecorToolbar $r11, $r12;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.view.View;

        $z0 = r1 instanceof com.android.internal.widget.DecorToolbar;

        if $z0 == 0 goto label1;

        $r12 = (com.android.internal.widget.DecorToolbar) r1;

        return $r12;

     label1:
        $z1 = r1 instanceof android.widget.Toolbar;

        if $z1 == 0 goto label2;

        $r10 = (android.widget.Toolbar) r1;

        $r11 = virtualinvoke $r10.<android.widget.Toolbar: com.android.internal.widget.DecorToolbar getWrapper()>();

        return $r11;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t make a decor toolbar out of ");

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private void haltActionBarHideOffsetAnimations()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        java.lang.Runnable $r1, $r2;
        android.view.ViewPropertyAnimator r3, r4;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean removeCallbacks(java.lang.Runnable)>($r2);

        r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.view.ViewPropertyAnimator: void cancel()>();

     label1:
        r4 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.ViewPropertyAnimator mCurrentActionBarBottomAnimator>;

        if r4 == null goto label2;

        virtualinvoke r4.<android.view.ViewPropertyAnimator: void cancel()>();

     label2:
        return;
    }

    private void init(android.content.Context)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.content.Context r1, $r4;
        android.content.res.TypedArray r2;
        android.graphics.drawable.Drawable r3;
        android.content.res.Resources$Theme $r5;
        int[] $r6;
        int $i0, $i1;
        android.content.pm.ApplicationInfo $r7;
        android.widget.OverScroller $r8;
        boolean z1, z2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.content.Context;

        $r4 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r6 = <com.android.internal.widget.ActionBarOverlayLayout: int[] ATTRS>;

        r2 = virtualinvoke $r5.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>($r6);

        $i0 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: int mActionBarHeight> = $i0;

        r3 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay> = r3;

        if r3 != null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void setWillNotDraw(boolean)>(z1);

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        z2 = 0;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 >= 19 goto label3;

        z2 = 1;

     label3:
        r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay> = z2;

        $r8 = new android.widget.OverScroller;

        specialinvoke $r8.<android.widget.OverScroller: void <init>(android.content.Context)>(r1);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator> = $r8;

        return;
    }

    private void postAddActionBarHideOffset()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        java.lang.Runnable $r1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean postDelayed(java.lang.Runnable,long)>($r1, 600L);

        return;
    }

    private void postRemoveActionBarHideOffset()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        java.lang.Runnable $r1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean postDelayed(java.lang.Runnable,long)>($r1, 600L);

        return;
    }

    private void removeActionBarHideOffset()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        java.lang.Runnable $r1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return;
    }

    private boolean shouldHideActionBarOnFling(float, float)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        float f0, f1;
        int $i0, $i1, $i2;
        android.widget.OverScroller $r1, $r2;
        com.android.internal.widget.ActionBarContainer $r3;
        boolean z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator>;

        $i0 = (int) f1;

        virtualinvoke $r1.<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>(0, 0, 0, $i0, 0, 0, -2147483648, 2147483647);

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator>;

        $i1 = virtualinvoke $r2.<android.widget.OverScroller: int getFinalY()>();

        $r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $i2 = virtualinvoke $r3.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        if $i1 <= $i2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean canShowOverflowMenu()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.DecorToolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: boolean canShowOverflowMenu()>();

        return $z0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof com.android.internal.widget.ActionBarOverlayLayout$LayoutParams;

        return $z0;
    }

    public void dismissPopups()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void dismissPopupMenus()>();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable $r2, $r4, $r5, $r6;
        boolean $z0;
        com.android.internal.widget.ActionBarContainer $r3, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        if $r2 == null goto label3;

        $z0 = r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay>;

        if $z0 != 0 goto label3;

        $r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $i0 = virtualinvoke $r3.<com.android.internal.widget.ActionBarContainer: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r7 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $i4 = virtualinvoke $r7.<com.android.internal.widget.ActionBarContainer: int getBottom()>();

        $f0 = (float) $i4;

        $r8 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $f1 = virtualinvoke $r8.<com.android.internal.widget.ActionBarContainer: float getTranslationY()>();

        $f2 = $f0 + $f1;

        $f3 = $f2 + 0.5F;

        i5 = (int) $f3;

        goto label2;

     label1:
        i5 = 0;

     label2:
        $r4 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        $i1 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getWidth()>();

        $r5 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        $i2 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i3 = $i2 + i5;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, i5, $i1, $i3);

        $r6 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label3:
        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.ActionBarOverlayLayout$LayoutParams $r1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        $r1 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected com.android.internal.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.ActionBarOverlayLayout$LayoutParams $r1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        $r1 = new com.android.internal.widget.ActionBarOverlayLayout$LayoutParams;

        specialinvoke $r1.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.util.AttributeSet r1;
        com.android.internal.widget.ActionBarOverlayLayout$LayoutParams $r2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        com.android.internal.widget.ActionBarOverlayLayout$LayoutParams $r2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new com.android.internal.widget.ActionBarOverlayLayout$LayoutParams;

        specialinvoke $r2.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public com.android.internal.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.util.AttributeSet r1;
        com.android.internal.widget.ActionBarOverlayLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new com.android.internal.widget.ActionBarOverlayLayout$LayoutParams;

        $r3 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        specialinvoke $r2.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    public int getActionBarHideOffset()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.ActionBarContainer r1;
        float $f0;
        int $i0, i1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        if r1 == null goto label1;

        $f0 = virtualinvoke r1.<com.android.internal.widget.ActionBarContainer: float getTranslationY()>();

        $i0 = (int) $f0;

        i1 = neg $i0;

        goto label2;

     label1:
        i1 = 0;

     label2:
        return i1;
    }

    public java.lang.CharSequence getTitle()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.DecorToolbar $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r2 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: java.lang.CharSequence getTitle()>();

        return $r2;
    }

    public boolean hasIcon()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.DecorToolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: boolean hasIcon()>();

        return $z0;
    }

    public boolean hasLogo()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.DecorToolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: boolean hasLogo()>();

        return $z0;
    }

    public boolean hideOverflowMenu()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.DecorToolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: boolean hideOverflowMenu()>();

        return $z0;
    }

    public void initFeature(int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1, $r2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        if i0 == 2 goto label3;

        if i0 == 5 goto label2;

        if i0 == 9 goto label1;

        goto label4;

     label1:
        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)>(1);

        goto label4;

     label2:
        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void initIndeterminateProgress()>();

        goto label4;

     label3:
        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void initProgress()>();

     label4:
        return;
    }

    public boolean isHideOnContentScrollEnabled()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        $z0 = r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        return $z0;
    }

    public boolean isInOverlayMode()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        $z0 = r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mOverlayMode>;

        return $z0;
    }

    public boolean isOverflowMenuShowPending()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.DecorToolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: boolean isOverflowMenuShowPending()>();

        return $z0;
    }

    public boolean isOverflowMenuShowing()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.DecorToolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: boolean isOverflowMenuShowing()>();

        return $z0;
    }

    public android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.graphics.Rect r1, $r4, $r6, $r8, $r9, $r11, $r12;
        boolean z0, $z1, $z2, $z3, z4;
        com.android.internal.widget.ActionBarContainer r2, $r3;
        android.view.WindowInsets $r7, $r10, $r13, r14, r15;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r14 := @parameter0: android.view.WindowInsets;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getWindowSystemUiVisibility()>();

        r1 = virtualinvoke r14.<android.view.WindowInsets: android.graphics.Rect getSystemWindowInsetsAsRect()>();

        $r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        z0 = specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)>($r3, r1, 1, 1, 0, 1);

        r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        z4 = z0;

        if r2 == null goto label1;

        $z3 = specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)>(r2, r1, 1, 0, 1, 1);

        z4 = z0 | $z3;

     label1:
        $r4 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect)>(r14, $r4);

        $r6 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        r15 = virtualinvoke r14.<android.view.WindowInsets: android.view.WindowInsets inset(android.graphics.Rect)>($r6);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mBaseInnerInsets> = r15;

        $r7 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mLastBaseInnerInsets>;

        $z1 = virtualinvoke $r7.<android.view.WindowInsets: boolean equals(java.lang.Object)>(r15);

        if $z1 != 0 goto label2;

        z4 = 1;

        $r13 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mBaseInnerInsets>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mLastBaseInnerInsets> = $r13;

     label2:
        $r9 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets>;

        $r8 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        $z2 = virtualinvoke $r9.<android.graphics.Rect: boolean equals(java.lang.Object)>($r8);

        if $z2 != 0 goto label3;

        z4 = 1;

        $r12 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets>;

        $r11 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        virtualinvoke $r12.<android.graphics.Rect: void set(android.graphics.Rect)>($r11);

     label3:
        if z4 == 0 goto label4;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void requestLayout()>();

     label4:
        $r10 = <android.view.WindowInsets: android.view.WindowInsets CONSUMED>;

        return $r10;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.content.res.Configuration r1;
        android.content.Context $r2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $r2 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void init(android.content.Context)>($r2);

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void requestApplyInsets()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22;
        android.view.View r1;
        com.android.internal.widget.ActionBarOverlayLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        com.android.internal.widget.ActionBarContainer $r4;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        z0 := @parameter0: boolean;

        i19 := @parameter1: int;

        i0 := @parameter2: int;

        i20 := @parameter3: int;

        i1 := @parameter4: int;

        i2 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getChildCount()>();

        i3 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getPaddingLeft()>();

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getPaddingRight()>();

        i4 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getPaddingTop()>();

        i5 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getPaddingBottom()>();

        i21 = 0;

     label1:
        if i21 >= i2 goto label5;

        r1 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View getChildAt(int)>(i21);

        $i10 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i10 == 8 goto label4;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.widget.ActionBarOverlayLayout$LayoutParams) $r3;

        i6 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i7 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i11 = r2.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        i8 = $i11 + i3;

        $r4 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        if r1 != $r4 goto label2;

        $i15 = i1 - i0;

        $i16 = $i15 - i5;

        $i18 = $i16 - i7;

        $i17 = r2.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin>;

        i22 = $i18 - $i17;

        goto label3;

     label2:
        $i12 = r2.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        i22 = $i12 + i4;

     label3:
        $i14 = i8 + i6;

        $i13 = i22 + i7;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i8, i22, $i14, $i13);

     label4:
        i21 = i21 + 1;

        goto label1;

     label5:
        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73;
        com.android.internal.widget.ActionBarContainer $r1, $r2, $r4, $r5, $r6, $r7, $r22, $r23, $r25, $r27, $r28, $r29, r31, r34;
        android.view.ViewGroup$LayoutParams $r3, $r14, $r26;
        android.view.WindowInsets $r8, $r9, $r10, $r11, $r20, $r21, $r37, r40, $r43, $r44, r45;
        android.view.View $r12, $r13, $r15, $r16, $r17, $r18, $r24, $r41;
        boolean $z1, z2, $z3, $z4, $z5;
        com.android.internal.widget.ActionBarOverlayLayout$LayoutParams r30, r32, r46;
        com.android.internal.widget.DecorToolbar $r33;
        android.graphics.Rect $r35, $r36, r38, r39, $r42;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        i62 = 0;

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, i0, 0, i1, 0);

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $r3 = virtualinvoke $r2.<com.android.internal.widget.ActionBarContainer: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r30 = (com.android.internal.widget.ActionBarOverlayLayout$LayoutParams) $r3;

        $r4 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $i3 = virtualinvoke $r4.<com.android.internal.widget.ActionBarContainer: int getMeasuredWidth()>();

        $i4 = r30.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        $i6 = $i3 + $i4;

        $i5 = r30.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin>;

        $i7 = $i6 + $i5;

        i63 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        $r5 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $i8 = virtualinvoke $r5.<com.android.internal.widget.ActionBarContainer: int getMeasuredHeight()>();

        $i9 = r30.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        $i11 = $i8 + $i9;

        $i10 = r30.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin>;

        $i12 = $i11 + $i10;

        i64 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        $r6 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $i13 = virtualinvoke $r6.<com.android.internal.widget.ActionBarContainer: int getMeasuredState()>();

        i65 = staticinvoke <com.android.internal.widget.ActionBarOverlayLayout: int combineMeasuredStates(int,int)>(0, $i13);

        r31 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        if r31 == null goto label01;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r31, i0, 0, i1, 0);

        $r25 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        $r26 = virtualinvoke $r25.<com.android.internal.widget.ActionBarContainer: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r32 = (com.android.internal.widget.ActionBarOverlayLayout$LayoutParams) $r26;

        $r27 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        $i51 = virtualinvoke $r27.<com.android.internal.widget.ActionBarContainer: int getMeasuredWidth()>();

        $i52 = r32.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        $i54 = $i51 + $i52;

        $i53 = r32.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin>;

        $i55 = $i54 + $i53;

        i63 = staticinvoke <java.lang.Math: int max(int,int)>(i63, $i55);

        $r28 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        $i56 = virtualinvoke $r28.<com.android.internal.widget.ActionBarContainer: int getMeasuredHeight()>();

        $i57 = r32.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        $i59 = $i56 + $i57;

        $i58 = r32.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin>;

        $i60 = $i59 + $i58;

        i64 = staticinvoke <java.lang.Math: int max(int,int)>(i64, $i60);

        $r29 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        $i61 = virtualinvoke $r29.<com.android.internal.widget.ActionBarContainer: int getMeasuredState()>();

        i65 = staticinvoke <com.android.internal.widget.ActionBarOverlayLayout: int combineMeasuredStates(int,int)>(i65, $i61);

        goto label01;

     label01:
        $i14 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getWindowSystemUiVisibility()>();

        $i15 = $i14 & 256;

        if $i15 == 0 goto label02;

        z2 = 1;

        goto label03;

     label02:
        z2 = 0;

     label03:
        if z2 == 0 goto label05;

        i66 = r0.<com.android.internal.widget.ActionBarOverlayLayout: int mActionBarHeight>;

        i62 = i66;

        $z1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mHasNonEmbeddedTabs>;

        if $z1 == 0 goto label06;

        i62 = i66;

        $r23 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $r24 = virtualinvoke $r23.<com.android.internal.widget.ActionBarContainer: android.view.View getTabContainer()>();

        if $r24 == null goto label04;

        $i50 = r0.<com.android.internal.widget.ActionBarOverlayLayout: int mActionBarHeight>;

        i62 = i66 + $i50;

     label04:
        goto label06;

     label05:
        $r7 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $i16 = virtualinvoke $r7.<com.android.internal.widget.ActionBarContainer: int getVisibility()>();

        if $i16 == 8 goto label06;

        $r22 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        i62 = virtualinvoke $r22.<com.android.internal.widget.ActionBarContainer: int getMeasuredHeight()>();

     label06:
        i67 = 0;

        $r33 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z3 = interfaceinvoke $r33.<com.android.internal.widget.DecorToolbar: boolean isSplit()>();

        if $z3 == 0 goto label08;

        r34 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        i67 = 0;

        if r34 == null goto label08;

        if z2 == 0 goto label07;

        i67 = r0.<com.android.internal.widget.ActionBarOverlayLayout: int mActionBarHeight>;

        goto label08;

     label07:
        i67 = virtualinvoke r34.<com.android.internal.widget.ActionBarContainer: int getMeasuredHeight()>();

     label08:
        $r35 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        $r36 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        virtualinvoke $r35.<android.graphics.Rect: void set(android.graphics.Rect)>($r36);

        $r37 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mBaseInnerInsets>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets> = $r37;

        $z4 = r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mOverlayMode>;

        if $z4 != 0 goto label09;

        if z2 != 0 goto label09;

        r38 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        $i46 = r38.<android.graphics.Rect: int top>;

        $i47 = $i46 + i62;

        r38.<android.graphics.Rect: int top> = $i47;

        r39 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        $i48 = r39.<android.graphics.Rect: int bottom>;

        $i49 = $i48 + i67;

        r39.<android.graphics.Rect: int bottom> = $i49;

        $r20 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets>;

        $r21 = virtualinvoke $r20.<android.view.WindowInsets: android.view.WindowInsets inset(int,int,int,int)>(0, i62, 0, i67);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets> = $r21;

        goto label10;

     label09:
        r40 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets>;

        $i17 = virtualinvoke r40.<android.view.WindowInsets: int getSystemWindowInsetLeft()>();

        $r8 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets>;

        $i18 = virtualinvoke $r8.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $i19 = $i18 + i62;

        $r9 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets>;

        $i20 = virtualinvoke $r9.<android.view.WindowInsets: int getSystemWindowInsetRight()>();

        $r10 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets>;

        $i21 = virtualinvoke $r10.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        $i22 = $i21 + i67;

        $r11 = virtualinvoke r40.<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>($i17, $i19, $i20, $i22);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets> = $r11;

     label10:
        $r41 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View mContent>;

        $r42 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)>($r41, $r42, 1, 1, 1, 1);

        $r43 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mLastInnerInsets>;

        $r44 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets>;

        $z5 = virtualinvoke $r43.<android.view.WindowInsets: boolean equals(java.lang.Object)>($r44);

        if $z5 != 0 goto label11;

        r45 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mInnerInsets>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets mLastInnerInsets> = r45;

        $r18 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View mContent>;

        virtualinvoke $r18.<android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>(r45);

     label11:
        $r12 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View mContent>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>($r12, i0, 0, i1, 0);

        $r13 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View mContent>;

        $r14 = virtualinvoke $r13.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r46 = (com.android.internal.widget.ActionBarOverlayLayout$LayoutParams) $r14;

        $r15 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View mContent>;

        $i23 = virtualinvoke $r15.<android.view.View: int getMeasuredWidth()>();

        $i24 = r46.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        $i26 = $i23 + $i24;

        $i25 = r46.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin>;

        $i27 = $i26 + $i25;

        i68 = staticinvoke <java.lang.Math: int max(int,int)>(i63, $i27);

        $r16 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View mContent>;

        $i28 = virtualinvoke $r16.<android.view.View: int getMeasuredHeight()>();

        $i29 = r46.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        $i31 = $i28 + $i29;

        $i30 = r46.<com.android.internal.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin>;

        $i32 = $i31 + $i30;

        i69 = staticinvoke <java.lang.Math: int max(int,int)>(i64, $i32);

        $r17 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View mContent>;

        $i33 = virtualinvoke $r17.<android.view.View: int getMeasuredState()>();

        i70 = staticinvoke <com.android.internal.widget.ActionBarOverlayLayout: int combineMeasuredStates(int,int)>(i65, $i33);

        i71 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getPaddingLeft()>();

        i72 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getPaddingRight()>();

        $i34 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getPaddingTop()>();

        $i35 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getPaddingBottom()>();

        $i36 = $i34 + $i35;

        $i37 = i69 + $i36;

        $i38 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getSuggestedMinimumHeight()>();

        i73 = staticinvoke <java.lang.Math: int max(int,int)>($i37, $i38);

        $i39 = i71 + i72;

        $i40 = i68 + $i39;

        $i41 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getSuggestedMinimumWidth()>();

        $i42 = staticinvoke <java.lang.Math: int max(int,int)>($i40, $i41);

        $i43 = staticinvoke <com.android.internal.widget.ActionBarOverlayLayout: int resolveSizeAndState(int,int,int)>($i42, i0, i70);

        $i44 = i70 << 16;

        $i45 = staticinvoke <com.android.internal.widget.ActionBarOverlayLayout: int resolveSizeAndState(int,int,int)>(i73, i1, $i44);

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void setMeasuredDimension(int,int)>($i43, $i45);

        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.View r1;
        float f0, f1;
        boolean z0, $z1, $z2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        $z1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        if $z1 == 0 goto label4;

        if z0 != 0 goto label1;

        goto label4;

     label1:
        $z2 = specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean shouldHideActionBarOnFling(float,float)>(f0, f1);

        if $z2 == 0 goto label2;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void addActionBarHideOffset()>();

        goto label3;

     label2:
        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void removeActionBarHideOffset()>();

     label3:
        r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mAnimatingForFling> = 1;

        return 1;

     label4:
        return 0;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.View r1;
        int i0, i1, i2, $i3, i4, i5;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.view.View;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $i3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference>;

        i5 = $i3 + i0;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference> = i5;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>(i5);

        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.View r1, r2;
        int i0, $i1;
        com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback r3;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r2 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void onNestedScrollAccepted(android.view.View,android.view.View,int)>(r2, r1, i0);

        $i1 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getActionBarHideOffset()>();

        r0.<com.android.internal.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference> = $i1;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if r3 == null goto label1;

        interfaceinvoke r3.<com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStarted()>();

     label1:
        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.View r1, r2;
        int i0, $i1, $i2;
        com.android.internal.widget.ActionBarContainer $r3;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label2;

        $r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $i2 = virtualinvoke $r3.<com.android.internal.widget.ActionBarContainer: int getVisibility()>();

        if $i2 == 0 goto label1;

        goto label2;

     label1:
        $z0 = r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        return $z0;

     label2:
        return 0;
    }

    public void onStopNestedScroll(android.view.View)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        boolean $z0, $z1;
        com.android.internal.widget.ActionBarContainer $r1;
        int $i0, $i1;
        android.view.View r2;
        com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback r3;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r2 := @parameter0: android.view.View;

        specialinvoke r0.<android.view.ViewGroup: void onStopNestedScroll(android.view.View)>(r2);

        $z0 = r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mAnimatingForFling>;

        if $z1 != 0 goto label2;

        $i0 = r0.<com.android.internal.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference>;

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $i1 = virtualinvoke $r1.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        if $i0 > $i1 goto label1;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void postRemoveActionBarHideOffset()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void postAddActionBarHideOffset()>();

     label2:
        r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if r3 == null goto label3;

        interfaceinvoke r3.<com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStopped()>();

     label3:
        return;
    }

    public void onWindowSystemUiVisibilityChanged(int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback r1, $r2, $r3, $r4;
        boolean z0, z1, z2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ViewGroup: void onWindowSystemUiVisibilityChanged(int)>(i0);

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        i1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility>;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility> = i0;

        z0 = 1;

        $i2 = i0 & 4;

        if $i2 != 0 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        $i3 = i0 & 256;

        if $i3 == 0 goto label03;

        z2 = 1;

        goto label04;

     label03:
        z2 = 0;

     label04:
        r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if r1 == null goto label09;

        if z2 != 0 goto label05;

        goto label06;

     label05:
        z0 = 0;

     label06:
        interfaceinvoke r1.<com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void enableContentAnimations(boolean)>(z0);

        if z1 != 0 goto label08;

        if z2 != 0 goto label07;

        goto label08;

     label07:
        $r4 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        interfaceinvoke $r4.<com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void hideForSystem()>();

        goto label09;

     label08:
        $r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        interfaceinvoke $r3.<com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void showForSystem()>();

     label09:
        $i4 = i1 ^ i0;

        $i5 = $i4 & 256;

        if $i5 == 0 goto label10;

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if $r2 == null goto label10;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void requestApplyInsets()>();

     label10:
        return;
    }

    protected void onWindowVisibilityChanged(int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        int i0;
        com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback r1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ViewGroup: void onWindowVisibilityChanged(int)>(i0);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: int mWindowVisibility> = i0;

        r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onWindowVisibilityChanged(int)>(i0);

     label1:
        return;
    }

    void pullChildren()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.View $r1, $r2, $r3, $r5, $r7;
        com.android.internal.widget.ActionBarContainer $r4, $r8;
        com.android.internal.widget.DecorToolbar $r6;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View mContent>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View findViewById(int)>(16908290);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View mContent> = $r2;

        $r3 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View findViewById(int)>(16908710);

        $r4 = (com.android.internal.widget.ActionBarContainer) $r3;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop> = $r4;

        $r5 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View findViewById(int)>(16908709);

        $r6 = specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar getDecorToolbar(android.view.View)>($r5);

        r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar> = $r6;

        $r7 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View findViewById(int)>(16909463);

        $r8 = (com.android.internal.widget.ActionBarContainer) $r7;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom> = $r8;

     label1:
        return;
    }

    public void restoreToolbarHierarchyState(android.util.SparseArray)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.util.SparseArray r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void restoreHierarchyState(android.util.SparseArray)>(r1);

        return;
    }

    public void saveToolbarHierarchyState(android.util.SparseArray)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.util.SparseArray r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void saveHierarchyState(android.util.SparseArray)>(r1);

        return;
    }

    public void setActionBarHideOffset(int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        com.android.internal.widget.ActionBarContainer r1, $r2, $r3, $r4, $r5;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        i5 := @parameter0: int;

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        i0 = virtualinvoke $r2.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i5, i0);

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarTop>;

        $i2 = neg i6;

        $f1 = (float) $i2;

        virtualinvoke $r3.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>($f1);

        r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        if r1 == null goto label1;

        $i3 = virtualinvoke r1.<com.android.internal.widget.ActionBarContainer: int getVisibility()>();

        if $i3 == 8 goto label1;

        $f3 = (float) i6;

        $f2 = (float) i0;

        f0 = $f3 / $f2;

        $r4 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        $i4 = virtualinvoke $r4.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        $f4 = (float) $i4;

        $f5 = $f4 * f0;

        i7 = (int) $f5;

        $r5 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        $f6 = (float) i7;

        virtualinvoke $r5.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>($f6);

     label1:
        return;
    }

    public void setActionBarVisibilityCallback(com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback r1, $r3;
        android.os.IBinder $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback> = r1;

        $r2 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.os.IBinder getWindowToken()>();

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        $i0 = r0.<com.android.internal.widget.ActionBarOverlayLayout: int mWindowVisibility>;

        interfaceinvoke $r3.<com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onWindowVisibilityChanged(int)>($i0);

        $i1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility>;

        if $i1 == 0 goto label1;

        $i2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility>;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)>($i2);

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void requestApplyInsets()>();

     label1:
        return;
    }

    public void setHasNonEmbeddedTabs(boolean)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mHasNonEmbeddedTabs> = z0;

        return;
    }

    public void setHideOnContentScrollEnabled(boolean)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        boolean z0, $z1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        if z0 == $z1 goto label1;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll> = z0;

        if z0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void stopNestedScroll()>();

        specialinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>(0);

     label1:
        return;
    }

    public void setIcon(int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setIcon(int)>(i0);

        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setLogo(int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setLogo(int)>(i0);

        return;
    }

    public void setMenu(android.view.Menu, com.android.internal.view.menu.MenuPresenter$Callback)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.Menu r1;
        com.android.internal.view.menu.MenuPresenter$Callback r2;
        com.android.internal.widget.DecorToolbar $r3;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.view.Menu;

        r2 := @parameter1: com.android.internal.view.menu.MenuPresenter$Callback;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r3.<com.android.internal.widget.DecorToolbar: void setMenu(android.view.Menu,com.android.internal.view.menu.MenuPresenter$Callback)>(r1, r2);

        return;
    }

    public void setMenuPrepared()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setMenuPrepared()>();

        return;
    }

    public void setOverlayMode(boolean)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;
        boolean z0, z1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mOverlayMode> = z0;

        if z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 19 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<com.android.internal.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay> = z1;

        return;
    }

    public void setShowingForActionMode(boolean)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        boolean z0;
        int $i0, $i1;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: int getWindowSystemUiVisibility()>();

        $i1 = $i0 & 1280;

        if $i1 != 1280 goto label2;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void setDisabledSystemUiVisibility(int)>(4);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void setDisabledSystemUiVisibility(int)>(0);

     label2:
        return;
    }

    public void setUiOptions(int)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        int i0, $i1;
        com.android.internal.widget.ActionBarContextView r1;
        com.android.internal.widget.ActionBarContainer $r2, $r4, $r9;
        com.android.internal.widget.DecorToolbar $r3, $r5, $r6, $r7;
        boolean $z0, z1, z2;
        android.view.View $r8;
        android.content.Context $r10;
        android.content.res.Resources $r11;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        i0 := @parameter0: int;

        z1 = 0;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        if z2 == 0 goto label3;

        $r10 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        z1 = virtualinvoke $r11.<android.content.res.Resources: boolean getBoolean(int)>(17891614);

     label3:
        if z1 == 0 goto label5;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        if $r2 == null goto label4;

        $r3 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r3.<com.android.internal.widget.DecorToolbar: boolean canSplit()>();

        if $z0 == 0 goto label4;

        $r5 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r4 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        interfaceinvoke $r5.<com.android.internal.widget.DecorToolbar: void setSplitView(android.view.ViewGroup)>($r4);

        $r6 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r6.<com.android.internal.widget.DecorToolbar: void setSplitToolbar(boolean)>(z1);

        $r7 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r7.<com.android.internal.widget.DecorToolbar: void setSplitWhenNarrow(boolean)>(z2);

        $r8 = virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: android.view.View findViewById(int)>(16908714);

        r1 = (com.android.internal.widget.ActionBarContextView) $r8;

        $r9 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarContainer mActionBarBottom>;

        virtualinvoke r1.<com.android.internal.widget.ActionBarContextView: void setSplitView(android.view.ViewGroup)>($r9);

        virtualinvoke r1.<com.android.internal.widget.ActionBarContextView: void setSplitToolbar(boolean)>(z1);

        virtualinvoke r1.<com.android.internal.widget.ActionBarContextView: void setSplitWhenNarrow(boolean)>(z2);

        goto label5;

     label4:
        if z1 == 0 goto label5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActionBarOverlayLayout", "Requested split action bar with incompatible window decor! Ignoring request.");

     label5:
        return;
    }

    public void setWindowCallback(android.view.Window$Callback)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        android.view.Window$Callback r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: android.view.Window$Callback;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setWindowCallback(android.view.Window$Callback)>(r1);

        return;
    }

    public void setWindowTitle(java.lang.CharSequence)
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>(r1);

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        return 0;
    }

    public boolean showOverflowMenu()
    {
        com.android.internal.widget.ActionBarOverlayLayout r0;
        com.android.internal.widget.DecorToolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ActionBarOverlayLayout;

        virtualinvoke r0.<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = r0.<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: boolean showOverflowMenu()>();

        return $z0;
    }
}
