public class com.android.internal.widget.ButtonBarLayout extends android.widget.LinearLayout
{
    private static final int PEEK_BUTTON_DP;
    private boolean mAllowStacking;
    private int mLastWidthSize;
    private int mMinimumHeight;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.ButtonBarLayout r0;
        android.util.AttributeSet r1;
        int[] $r2;
        boolean $z0;
        android.content.Context r3;
        android.content.res.TypedArray r4;

        r0 := @this: com.android.internal.widget.ButtonBarLayout;

        r3 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r3, r1);

        r0.<com.android.internal.widget.ButtonBarLayout: int mLastWidthSize> = -1;

        r0.<com.android.internal.widget.ButtonBarLayout: int mMinimumHeight> = 0;

        $r2 = <com.android.internal.R$styleable: int[] ButtonBarLayout>;

        r4 = virtualinvoke r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r1, $r2);

        $z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        r0.<com.android.internal.widget.ButtonBarLayout: boolean mAllowStacking> = $z0;

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private int getNextVisibleChildIndex(int)
    {
        com.android.internal.widget.ButtonBarLayout r0;
        int i0, $i1, i2;
        android.view.View $r1;

        r0 := @this: com.android.internal.widget.ButtonBarLayout;

        i2 := @parameter0: int;

        i0 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: int getChildCount()>();

     label1:
        if i2 >= i0 goto label3;

        $r1 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: android.view.View getChildAt(int)>(i2);

        $i1 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return -1;
    }

    private boolean isStacked()
    {
        com.android.internal.widget.ButtonBarLayout r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.widget.ButtonBarLayout;

        i0 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: int getOrientation()>();

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void setStacked(boolean)
    {
        com.android.internal.widget.ButtonBarLayout r0;
        android.view.View r1, $r2;
        boolean z0;
        int i0, i1, $i2, i3, i4;

        r0 := @this: com.android.internal.widget.ButtonBarLayout;

        z0 := @parameter0: boolean;

        i4 = (int) z0;

        virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: void setOrientation(int)>(i4);

        if z0 == 0 goto label1;

        i0 = 8388613;

        goto label2;

     label1:
        i0 = 80;

     label2:
        virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: void setGravity(int)>(i0);

        r1 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: android.view.View findViewById(int)>(16909456);

        if r1 == null goto label5;

        if z0 == 0 goto label3;

        i1 = 8;

        goto label4;

     label3:
        i1 = 4;

     label4:
        virtualinvoke r1.<android.view.View: void setVisibility(int)>(i1);

     label5:
        $i2 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: int getChildCount()>();

        i3 = $i2 - 2;

     label6:
        if i3 < 0 goto label7;

        $r2 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: android.view.View getChildAt(int)>(i3);

        virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: void bringChildToFront(android.view.View)>($r2);

        i3 = i3 + -1;

        goto label6;

     label7:
        return;
    }

    public int getMinimumHeight()
    {
        com.android.internal.widget.ButtonBarLayout r0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.ButtonBarLayout;

        $i0 = r0.<com.android.internal.widget.ButtonBarLayout: int mMinimumHeight>;

        $i1 = specialinvoke r0.<android.widget.LinearLayout: int getMinimumHeight()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.ButtonBarLayout r0;
        android.view.View r1, $r4;
        android.widget.LinearLayout$LayoutParams r2;
        boolean $z0, $z1, $z2, $z3, z4, $z5, z6, $z7;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, i21, $i22;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.content.res.Resources $r5;
        android.util.DisplayMetrics $r6;

        r0 := @this: com.android.internal.widget.ButtonBarLayout;

        i14 := @parameter0: int;

        i15 := @parameter1: int;

        i16 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i14);

        $z0 = r0.<com.android.internal.widget.ButtonBarLayout: boolean mAllowStacking>;

        if $z0 == 0 goto label02;

        $i13 = r0.<com.android.internal.widget.ButtonBarLayout: int mLastWidthSize>;

        if i16 <= $i13 goto label01;

        $z3 = specialinvoke r0.<com.android.internal.widget.ButtonBarLayout: boolean isStacked()>();

        if $z3 == 0 goto label01;

        specialinvoke r0.<com.android.internal.widget.ButtonBarLayout: void setStacked(boolean)>(0);

     label01:
        r0.<com.android.internal.widget.ButtonBarLayout: int mLastWidthSize> = i16;

     label02:
        z4 = 0;

        $z5 = specialinvoke r0.<com.android.internal.widget.ButtonBarLayout: boolean isStacked()>();

        if $z5 != 0 goto label03;

        $i12 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i14);

        if $i12 != 1073741824 goto label03;

        i17 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i16, -2147483648);

        z4 = 1;

        goto label04;

     label03:
        i17 = i14;

     label04:
        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>(i17, i15);

        z6 = z4;

        $z7 = r0.<com.android.internal.widget.ButtonBarLayout: boolean mAllowStacking>;

        if $z7 == 0 goto label05;

        z6 = z4;

        $z2 = specialinvoke r0.<com.android.internal.widget.ButtonBarLayout: boolean isStacked()>();

        if $z2 != 0 goto label05;

        z6 = z4;

        $i10 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: int getMeasuredWidthAndState()>();

        $i11 = -16777216 & $i10;

        if $i11 != 16777216 goto label05;

        specialinvoke r0.<com.android.internal.widget.ButtonBarLayout: void setStacked(boolean)>(1);

        z6 = 1;

     label05:
        if z6 == 0 goto label06;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>(i14, i15);

     label06:
        i18 = 0;

        i19 = specialinvoke r0.<com.android.internal.widget.ButtonBarLayout: int getNextVisibleChildIndex(int)>(0);

        if i19 < 0 goto label09;

        r1 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: android.view.View getChildAt(int)>(i19);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i0 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: int getPaddingTop()>();

        $i1 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i3 = $i0 + $i1;

        $i2 = r2.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i5 = $i3 + $i2;

        $i4 = r2.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i6 = $i5 + $i4;

        i20 = 0 + $i6;

        $z1 = specialinvoke r0.<com.android.internal.widget.ButtonBarLayout: boolean isStacked()>();

        if $z1 == 0 goto label08;

        $i8 = i19 + 1;

        i21 = specialinvoke r0.<com.android.internal.widget.ButtonBarLayout: int getNextVisibleChildIndex(int)>($i8);

        i18 = i20;

        if i21 < 0 goto label07;

        $f0 = (float) i20;

        $r4 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: android.view.View getChildAt(int)>(i21);

        $i9 = virtualinvoke $r4.<android.view.View: int getPaddingTop()>();

        $f1 = (float) $i9;

        $r5 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f2 = $r6.<android.util.DisplayMetrics: float density>;

        $f3 = $f2 * 16.0F;

        $f4 = $f1 + $f3;

        $f5 = $f0 + $f4;

        i18 = (int) $f5;

     label07:
        goto label09;

     label08:
        $i7 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: int getPaddingBottom()>();

        i18 = i20 + $i7;

     label09:
        $i22 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: int getMinimumHeight()>();

        if $i22 == i18 goto label10;

        virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: void setMinimumHeight(int)>(i18);

     label10:
        return;
    }

    public void setAllowStacking(boolean)
    {
        com.android.internal.widget.ButtonBarLayout r0;
        boolean z0, $z1;
        int $i0;

        r0 := @this: com.android.internal.widget.ButtonBarLayout;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.widget.ButtonBarLayout: boolean mAllowStacking>;

        if $z1 == z0 goto label2;

        r0.<com.android.internal.widget.ButtonBarLayout: boolean mAllowStacking> = z0;

        if z0 != 0 goto label1;

        $i0 = virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: int getOrientation()>();

        if $i0 != 1 goto label1;

        specialinvoke r0.<com.android.internal.widget.ButtonBarLayout: void setStacked(boolean)>(0);

     label1:
        virtualinvoke r0.<com.android.internal.widget.ButtonBarLayout: void requestLayout()>();

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.ButtonBarLayout: int PEEK_BUTTON_DP> = 16;

        return;
    }
}
