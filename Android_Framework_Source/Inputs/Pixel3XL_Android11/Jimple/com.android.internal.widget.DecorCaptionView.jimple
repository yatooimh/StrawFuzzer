public class com.android.internal.widget.DecorCaptionView extends android.view.ViewGroup implements android.view.View$OnTouchListener, android.view.GestureDetector$OnGestureListener
{
    private static final java.lang.String TAG;
    private android.view.View mCaption;
    private boolean mCheckForDragging;
    private android.view.View mClickTarget;
    private android.view.View mClose;
    private final android.graphics.Rect mCloseRect;
    private android.view.View mContent;
    private int mDragSlop;
    private boolean mDragging;
    private android.view.GestureDetector mGestureDetector;
    private android.view.View mMaximize;
    private final android.graphics.Rect mMaximizeRect;
    private boolean mOverlayWithAppContent;
    private com.android.internal.policy.PhoneWindow mOwner;
    private int mRootScrollY;
    private boolean mShow;
    private java.util.ArrayList mTouchDispatchList;
    private int mTouchDownX;
    private int mTouchDownY;

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.content.Context r1;
        java.util.ArrayList $r2;
        android.graphics.Rect $r3, $r4;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>(r1);

        r0.<com.android.internal.widget.DecorCaptionView: com.android.internal.policy.PhoneWindow mOwner> = null;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mShow> = 0;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mDragging> = 0;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mOverlayWithAppContent> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(2);

        r0.<com.android.internal.widget.DecorCaptionView: java.util.ArrayList mTouchDispatchList> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mCloseRect> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mMaximizeRect> = $r4;

        specialinvoke r0.<com.android.internal.widget.DecorCaptionView: void init(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        java.util.ArrayList $r3;
        android.graphics.Rect $r4, $r5;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.internal.widget.DecorCaptionView: com.android.internal.policy.PhoneWindow mOwner> = null;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mShow> = 0;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mDragging> = 0;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mOverlayWithAppContent> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(2);

        r0.<com.android.internal.widget.DecorCaptionView: java.util.ArrayList mTouchDispatchList> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mCloseRect> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mMaximizeRect> = $r5;

        specialinvoke r0.<com.android.internal.widget.DecorCaptionView: void init(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        java.util.ArrayList $r3;
        android.graphics.Rect $r4, $r5;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<com.android.internal.widget.DecorCaptionView: com.android.internal.policy.PhoneWindow mOwner> = null;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mShow> = 0;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mDragging> = 0;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mOverlayWithAppContent> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(2);

        r0.<com.android.internal.widget.DecorCaptionView: java.util.ArrayList mTouchDispatchList> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mCloseRect> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mMaximizeRect> = $r5;

        specialinvoke r0.<com.android.internal.widget.DecorCaptionView: void init(android.content.Context)>(r1);

        return;
    }

    private void init(android.content.Context)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.content.Context r1;
        android.view.ViewConfiguration $r2;
        int $i0;
        android.view.GestureDetector $r3;
        java.lang.Object[] $r4;
        android.content.pm.PackageManager $r5;
        android.content.pm.ApplicationInfo $r6;
        java.lang.CharSequence $r7;
        java.lang.String $r8;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i0 = virtualinvoke $r2.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.android.internal.widget.DecorCaptionView: int mDragSlop> = $i0;

        $r3 = new android.view.GestureDetector;

        specialinvoke $r3.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>(r1, r0);

        r0.<com.android.internal.widget.DecorCaptionView: android.view.GestureDetector mGestureDetector> = $r3;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r7 = virtualinvoke $r5.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r6);

        $r4[0] = $r7;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039551, $r4);

        virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: void setContentDescription(java.lang.CharSequence)>($r8);

        return;
    }

    private boolean passedSlop(int, int)
    {
        com.android.internal.widget.DecorCaptionView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.internal.widget.DecorCaptionView: int mTouchDownX>;

        $i3 = i0 - $i2;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        $i5 = r0.<com.android.internal.widget.DecorCaptionView: int mDragSlop>;

        if $i4 > $i5 goto label2;

        $i6 = r0.<com.android.internal.widget.DecorCaptionView: int mTouchDownY>;

        $i7 = i1 - $i6;

        $i8 = staticinvoke <java.lang.Math: int abs(int)>($i7);

        $i9 = r0.<com.android.internal.widget.DecorCaptionView: int mDragSlop>;

        if $i8 <= $i9 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private void toggleFreeformWindowingMode()
    {
        com.android.internal.widget.DecorCaptionView r0;
        com.android.internal.policy.PhoneWindow $r1;
        android.os.RemoteException $r2;
        android.view.Window$WindowControllerCallback r3;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        $r1 = r0.<com.android.internal.widget.DecorCaptionView: com.android.internal.policy.PhoneWindow mOwner>;

        r3 = virtualinvoke $r1.<com.android.internal.policy.PhoneWindow: android.view.Window$WindowControllerCallback getWindowControllerCallback()>();

        if r3 == null goto label4;

     label1:
        interfaceinvoke r3.<android.view.Window$WindowControllerCallback: void toggleFreeformWindowingMode()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DecorCaptionView", "Cannot change task workspace.");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void updateCaptionVisibility()
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.View r1, $r2;
        boolean $z0;
        byte b0;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        $z0 = r0.<com.android.internal.widget.DecorCaptionView: boolean mShow>;

        if $z0 == 0 goto label1;

        b0 = 0;

        goto label2;

     label1:
        b0 = 8;

     label2:
        virtualinvoke r1.<android.view.View: void setVisibility(int)>(b0);

        $r2 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        virtualinvoke $r2.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>(r0);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.DecorCaptionView r0;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        java.lang.IllegalStateException $r8;
        android.view.View r9;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r9 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label2;

        if i0 >= 2 goto label1;

        $i1 = virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: int getChildCount()>();

        if $i1 >= 2 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r9, 0, r1);

        r0.<com.android.internal.widget.DecorCaptionView: android.view.View mContent> = r9;

        return;

     label1:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DecorCaptionView can only handle 1 client view");

        throw $r8;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("params ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must subclass MarginLayoutParams");

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        return $z0;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.ViewGroup$MarginLayoutParams $r1;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        $r1 = new android.view.ViewGroup$MarginLayoutParams;

        specialinvoke $r1.<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>(-1, -1);

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.util.AttributeSet r1;
        android.view.ViewGroup$MarginLayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.view.ViewGroup$MarginLayoutParams;

        $r3 = virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: android.content.Context getContext()>();

        specialinvoke $r2.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.ViewGroup$LayoutParams r1;
        android.view.ViewGroup$MarginLayoutParams $r2;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.view.ViewGroup$MarginLayoutParams;

        specialinvoke $r2.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public android.view.View getCaption()
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.View $r1;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        $r1 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        return $r1;
    }

    public int getCaptionHeight()
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.View r1;
        int i0;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.view.View: int getHeight()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public boolean isCaptionShowing()
    {
        com.android.internal.widget.DecorCaptionView r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        $z0 = r0.<com.android.internal.widget.DecorCaptionView: boolean mShow>;

        return $z0;
    }

    public void onConfigurationChanged(boolean)
    {
        com.android.internal.widget.DecorCaptionView r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mShow> = z0;

        specialinvoke r0.<com.android.internal.widget.DecorCaptionView: void updateCaptionVisibility()>();

        return;
    }

    public boolean onDown(android.view.MotionEvent)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.MotionEvent r1;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    protected void onFinishInflate()
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.View $r1;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        specialinvoke r0.<android.view.ViewGroup: void onFinishInflate()>();

        $r1 = virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: android.view.View getChildAt(int)>(0);

        r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption> = $r1;

        return;
    }

    public boolean onFling(android.view.MotionEvent, android.view.MotionEvent, float, float)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.MotionEvent r1, r2;
        float f0, f1;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        return 0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1;
        android.graphics.Rect $r2, $r3;
        boolean $z0, $z1, z2;
        android.view.View $r4, $r5, $r6;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.view.MotionEvent;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i2 != 0 goto label2;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i0 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i1 = (int) $f1;

        $r2 = r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mMaximizeRect>;

        $i3 = r0.<com.android.internal.widget.DecorCaptionView: int mRootScrollY>;

        $i4 = i1 - $i3;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean contains(int,int)>(i0, $i4);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mMaximize>;

        r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClickTarget> = $r5;

     label1:
        $r3 = r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mCloseRect>;

        $i5 = r0.<com.android.internal.widget.DecorCaptionView: int mRootScrollY>;

        $i6 = i1 - $i5;

        $z1 = virtualinvoke $r3.<android.graphics.Rect: boolean contains(int,int)>(i0, $i6);

        if $z1 == 0 goto label2;

        $r4 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClose>;

        r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClickTarget> = $r4;

     label2:
        $r6 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClickTarget>;

        if $r6 == null goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.internal.widget.DecorCaptionView r0;
        boolean z0, $z1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, $i16, $i17, $i18;
        android.view.View $r1, $r4, $r5, $r6, $r7, $r8, $r10, $r12, r13, r14, $r16, $r19, $r20, $r21, $r22;
        android.graphics.Rect $r2, $r3, $r9, $r11;
        com.android.internal.policy.PhoneWindow $r15, $r18;
        com.android.internal.policy.DecorView $r17;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        z0 := @parameter0: boolean;

        i13 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r1 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        $i3 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i3 == 8 goto label1;

        r13 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        $i9 = virtualinvoke r13.<android.view.View: int getMeasuredWidth()>();

        $r6 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        $i10 = virtualinvoke $r6.<android.view.View: int getMeasuredHeight()>();

        virtualinvoke r13.<android.view.View: void layout(int,int,int,int)>(0, 0, $i9, $i10);

        $r7 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        $i11 = virtualinvoke $r7.<android.view.View: int getBottom()>();

        $r8 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        $i12 = virtualinvoke $r8.<android.view.View: int getTop()>();

        i14 = $i11 - $i12;

        $r10 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mMaximize>;

        $r9 = r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mMaximizeRect>;

        virtualinvoke $r10.<android.view.View: void getHitRect(android.graphics.Rect)>($r9);

        $r12 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClose>;

        $r11 = r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mCloseRect>;

        virtualinvoke $r12.<android.view.View: void getHitRect(android.graphics.Rect)>($r11);

        goto label2;

     label1:
        i14 = 0;

        $r2 = r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mMaximizeRect>;

        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

        $r3 = r0.<com.android.internal.widget.DecorCaptionView: android.graphics.Rect mCloseRect>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

     label2:
        r14 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mContent>;

        if r14 == null goto label4;

        $z1 = r0.<com.android.internal.widget.DecorCaptionView: boolean mOverlayWithAppContent>;

        if $z1 == 0 goto label3;

        $i7 = virtualinvoke r14.<android.view.View: int getMeasuredWidth()>();

        $r5 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mContent>;

        $i8 = virtualinvoke $r5.<android.view.View: int getMeasuredHeight()>();

        virtualinvoke r14.<android.view.View: void layout(int,int,int,int)>(0, 0, $i7, $i8);

        goto label4;

     label3:
        $i4 = virtualinvoke r14.<android.view.View: int getMeasuredWidth()>();

        $r4 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mContent>;

        $i5 = virtualinvoke $r4.<android.view.View: int getMeasuredHeight()>();

        $i6 = $i5 + i14;

        virtualinvoke r14.<android.view.View: void layout(int,int,int,int)>(0, i14, $i4, $i6);

     label4:
        $r15 = r0.<com.android.internal.widget.DecorCaptionView: com.android.internal.policy.PhoneWindow mOwner>;

        $r16 = virtualinvoke $r15.<com.android.internal.policy.PhoneWindow: android.view.View getDecorView()>();

        $r17 = (com.android.internal.policy.DecorView) $r16;

        virtualinvoke $r17.<com.android.internal.policy.DecorView: void notifyCaptionHeightChanged()>();

        $r18 = r0.<com.android.internal.widget.DecorCaptionView: com.android.internal.policy.PhoneWindow mOwner>;

        $r19 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mMaximize>;

        $i15 = virtualinvoke $r19.<android.view.View: int getLeft()>();

        $r20 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mMaximize>;

        $i16 = virtualinvoke $r20.<android.view.View: int getTop()>();

        $r21 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClose>;

        $i17 = virtualinvoke $r21.<android.view.View: int getRight()>();

        $r22 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClose>;

        $i18 = virtualinvoke $r22.<android.view.View: int getBottom()>();

        virtualinvoke $r18.<com.android.internal.policy.PhoneWindow: void notifyRestrictedCaptionAreaCallback(int,int,int,int)>($i15, $i16, $i17, $i18);

        return;
    }

    public void onLongPress(android.view.MotionEvent)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.MotionEvent r1;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.view.MotionEvent;

        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.DecorCaptionView r0;
        int i0, i1, $i2, i3, $i4, $i5;
        android.view.View r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i2 == 8 goto label1;

        $r3 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: void measureChildWithMargins(android.view.View,int,int,int,int)>($r3, i0, 0, i1, 0);

        $r4 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        i3 = virtualinvoke $r4.<android.view.View: int getMeasuredHeight()>();

        goto label2;

     label1:
        i3 = 0;

     label2:
        r1 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mContent>;

        if r1 == null goto label4;

        $z0 = r0.<com.android.internal.widget.DecorCaptionView: boolean mOverlayWithAppContent>;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i0, 0, i1, 0);

        goto label4;

     label3:
        virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i0, 0, i1, i3);

     label4:
        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: void setMeasuredDimension(int,int)>($i4, $i5);

        return;
    }

    public void onRootViewScrollYChanged(int)
    {
        com.android.internal.widget.DecorCaptionView r0;
        int i0;
        android.view.View r1;
        float $f0;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mCaption>;

        if r1 == null goto label1;

        r0.<com.android.internal.widget.DecorCaptionView: int mRootScrollY> = i0;

        $f0 = (float) i0;

        virtualinvoke r1.<android.view.View: void setTranslationY(float)>($f0);

     label1:
        return;
    }

    public boolean onScroll(android.view.MotionEvent, android.view.MotionEvent, float, float)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.MotionEvent r1, r2;
        float f0, f1;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        return 0;
    }

    public void onShowPress(android.view.MotionEvent)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.MotionEvent r1;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.view.MotionEvent;

        return;
    }

    public boolean onSingleTapUp(android.view.MotionEvent)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.View $r1, $r2, r5;
        com.android.internal.policy.PhoneWindow $r3;
        android.view.MotionEvent r4;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r4 := @parameter0: android.view.MotionEvent;

        r5 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClickTarget>;

        $r1 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mMaximize>;

        if r5 != $r1 goto label1;

        specialinvoke r0.<com.android.internal.widget.DecorCaptionView: void toggleFreeformWindowingMode()>();

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClose>;

        if r5 != $r2 goto label2;

        $r3 = r0.<com.android.internal.widget.DecorCaptionView: com.android.internal.policy.PhoneWindow mOwner>;

        virtualinvoke $r3.<com.android.internal.policy.PhoneWindow: void dispatchOnWindowDismissed(boolean,boolean)>(1, 0);

     label2:
        return 1;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.View r1;
        android.view.MotionEvent r2;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, z9, z10, z11, $z12;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.MotionEvent;

        $f0 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        i0 = (int) $f0;

        $f1 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        i1 = (int) $f1;

        $i3 = virtualinvoke r2.<android.view.MotionEvent: int getActionIndex()>();

        i6 = virtualinvoke r2.<android.view.MotionEvent: int getToolType(int)>($i3);

        z9 = 0;

        if i6 != 3 goto label01;

        z10 = 1;

        goto label02;

     label01:
        z10 = 0;

     label02:
        $i4 = virtualinvoke r2.<android.view.MotionEvent: int getButtonState()>();

        $i5 = $i4 & 1;

        if $i5 == 0 goto label03;

        z11 = 1;

        goto label04;

     label03:
        z11 = 0;

     label04:
        i2 = virtualinvoke r2.<android.view.MotionEvent: int getActionMasked()>();

        if i2 == 0 goto label10;

        if i2 == 1 goto label07;

        if i2 == 2 goto label05;

        if i2 == 3 goto label07;

        goto label13;

     label05:
        $z5 = r0.<com.android.internal.widget.DecorCaptionView: boolean mDragging>;

        if $z5 != 0 goto label13;

        $z6 = r0.<com.android.internal.widget.DecorCaptionView: boolean mCheckForDragging>;

        if $z6 == 0 goto label13;

        if z10 != 0 goto label06;

        $z8 = specialinvoke r0.<com.android.internal.widget.DecorCaptionView: boolean passedSlop(int,int)>(i0, i1);

        if $z8 == 0 goto label13;

     label06:
        r0.<com.android.internal.widget.DecorCaptionView: boolean mCheckForDragging> = 0;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mDragging> = 1;

        $f2 = virtualinvoke r2.<android.view.MotionEvent: float getRawX()>();

        $f3 = virtualinvoke r2.<android.view.MotionEvent: float getRawY()>();

        virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: boolean startMovingTask(float,float)>($f2, $f3);

        goto label13;

     label07:
        $z2 = r0.<com.android.internal.widget.DecorCaptionView: boolean mDragging>;

        if $z2 != 0 goto label08;

        goto label13;

     label08:
        if i2 != 1 goto label09;

        virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: void finishMovingTask()>();

     label09:
        r0.<com.android.internal.widget.DecorCaptionView: boolean mDragging> = 0;

        $z3 = r0.<com.android.internal.widget.DecorCaptionView: boolean mCheckForDragging>;

        $z4 = $z3 ^ 1;

        return $z4;

     label10:
        $z0 = r0.<com.android.internal.widget.DecorCaptionView: boolean mShow>;

        if $z0 != 0 goto label11;

        return 0;

     label11:
        if z10 == 0 goto label12;

        if z11 == 0 goto label13;

     label12:
        r0.<com.android.internal.widget.DecorCaptionView: boolean mCheckForDragging> = 1;

        r0.<com.android.internal.widget.DecorCaptionView: int mTouchDownX> = i0;

        r0.<com.android.internal.widget.DecorCaptionView: int mTouchDownY> = i1;

     label13:
        $z12 = r0.<com.android.internal.widget.DecorCaptionView: boolean mDragging>;

        if $z12 != 0 goto label14;

        $z1 = r0.<com.android.internal.widget.DecorCaptionView: boolean mCheckForDragging>;

        if $z1 == 0 goto label15;

     label14:
        z9 = 1;

     label15:
        return z9;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.MotionEvent r1;
        int i0;
        android.view.View $r2;
        android.view.GestureDetector $r3;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClickTarget>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.internal.widget.DecorCaptionView: android.view.GestureDetector mGestureDetector>;

        virtualinvoke $r3.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if i0 == 1 goto label1;

        if i0 != 3 goto label2;

     label1:
        r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClickTarget> = null;

     label2:
        return 1;

     label3:
        return 0;
    }

    public void removeContentView()
    {
        com.android.internal.widget.DecorCaptionView r0;
        android.view.View r1;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 = r0.<com.android.internal.widget.DecorCaptionView: android.view.View mContent>;

        if r1 == null goto label1;

        virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: void removeView(android.view.View)>(r1);

        r0.<com.android.internal.widget.DecorCaptionView: android.view.View mContent> = null;

     label1:
        return;
    }

    public void setPhoneWindow(com.android.internal.policy.PhoneWindow, boolean)
    {
        com.android.internal.widget.DecorCaptionView r0;
        com.android.internal.policy.PhoneWindow r1, $r2;
        boolean z0, $z1;
        android.view.View $r3, $r5, $r6;
        android.view.ViewOutlineProvider $r4;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        r1 := @parameter0: com.android.internal.policy.PhoneWindow;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.widget.DecorCaptionView: com.android.internal.policy.PhoneWindow mOwner> = r1;

        r0.<com.android.internal.widget.DecorCaptionView: boolean mShow> = z0;

        $z1 = virtualinvoke r1.<com.android.internal.policy.PhoneWindow: boolean isOverlayWithDecorCaptionEnabled()>();

        r0.<com.android.internal.widget.DecorCaptionView: boolean mOverlayWithAppContent> = $z1;

        specialinvoke r0.<com.android.internal.widget.DecorCaptionView: void updateCaptionVisibility()>();

        $r2 = r0.<com.android.internal.widget.DecorCaptionView: com.android.internal.policy.PhoneWindow mOwner>;

        $r3 = virtualinvoke $r2.<com.android.internal.policy.PhoneWindow: android.view.View getDecorView()>();

        $r4 = <android.view.ViewOutlineProvider: android.view.ViewOutlineProvider BOUNDS>;

        virtualinvoke $r3.<android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>($r4);

        $r5 = virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: android.view.View findViewById(int)>(16909147);

        r0.<com.android.internal.widget.DecorCaptionView: android.view.View mMaximize> = $r5;

        $r6 = virtualinvoke r0.<com.android.internal.widget.DecorCaptionView: android.view.View findViewById(int)>(16908852);

        r0.<com.android.internal.widget.DecorCaptionView: android.view.View mClose> = $r6;

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        com.android.internal.widget.DecorCaptionView r0;

        r0 := @this: com.android.internal.widget.DecorCaptionView;

        return 0;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.DecorCaptionView: java.lang.String TAG> = "DecorCaptionView";

        return;
    }
}
