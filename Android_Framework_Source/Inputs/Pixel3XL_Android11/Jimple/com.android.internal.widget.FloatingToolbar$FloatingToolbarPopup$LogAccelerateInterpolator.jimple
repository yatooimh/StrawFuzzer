final class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator extends java.lang.Object implements android.view.animation.Interpolator
{
    private static final int BASE;
    private static final float LOGS_SCALE;

    static void <clinit>()
    {
        float $f0, $f1;

        <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: int BASE> = 100;

        $f0 = staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: float computeLog(float,int)>(1.0F, 100);

        $f1 = 1.0F / $f0;

        <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: float LOGS_SCALE> = $f1;

        return;
    }

    private void <init>()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator r0;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.internal.widget.FloatingToolbar$1)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator r0;
        com.android.internal.widget.FloatingToolbar$1 r1;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator;

        r1 := @parameter0: com.android.internal.widget.FloatingToolbar$1;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: void <init>()>();

        return;
    }

    private static float computeLog(float, int)
    {
        float f0, $f1, $f2;
        int i0;
        double $d0, $d1, $d2, $d3;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        $d1 = (double) i0;

        $f1 = neg f0;

        $d0 = (double) $f1;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, $d0);

        $d3 = 1.0 - $d2;

        $f2 = (float) $d3;

        return $f2;
    }

    public float getInterpolation(float)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator r0;
        float f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator;

        f0 := @parameter0: float;

        $f1 = 1.0F - f0;

        $f2 = staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: float computeLog(float,int)>($f1, 100);

        $f3 = <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: float LOGS_SCALE>;

        $f4 = $f2 * $f3;

        $f5 = 1.0F - $f4;

        return $f5;
    }
}
