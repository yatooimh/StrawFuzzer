final class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup extends java.lang.Object
{
    private static final int MAX_OVERFLOW_SIZE;
    private static final int MIN_OVERFLOW_SIZE;
    private final android.graphics.drawable.Drawable mArrow;
    private final android.view.animation.AnimationSet mCloseOverflowAnimation;
    private final android.view.ViewGroup mContentContainer;
    private final android.content.Context mContext;
    private final android.graphics.Point mCoordsOnWindow;
    private final android.animation.AnimatorSet mDismissAnimation;
    private boolean mDismissed;
    private final android.view.animation.Interpolator mFastOutLinearInInterpolator;
    private final android.view.animation.Interpolator mFastOutSlowInInterpolator;
    private boolean mHidden;
    private final android.animation.AnimatorSet mHideAnimation;
    private final int mIconTextSpacing;
    private final android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer;
    private boolean mIsOverflowOpen;
    private final int mLineHeight;
    private final android.view.animation.Interpolator mLinearOutSlowInInterpolator;
    private final android.view.animation.Interpolator mLogAccelerateInterpolator;
    private final android.view.ViewGroup mMainPanel;
    private android.util.Size mMainPanelSize;
    private final int mMarginHorizontal;
    private final int mMarginVertical;
    private final android.view.View$OnClickListener mMenuItemButtonOnClickListener;
    private android.view.MenuItem$OnMenuItemClickListener mOnMenuItemClickListener;
    private final android.view.animation.AnimationSet mOpenOverflowAnimation;
    private boolean mOpenOverflowUpwards;
    private final android.graphics.drawable.Drawable mOverflow;
    private final android.view.animation.Animation$AnimationListener mOverflowAnimationListener;
    private final android.widget.ImageButton mOverflowButton;
    private final android.util.Size mOverflowButtonSize;
    private final com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel;
    private android.util.Size mOverflowPanelSize;
    private final com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper mOverflowPanelViewHelper;
    private final android.view.View mParent;
    private final android.widget.PopupWindow mPopupWindow;
    private final java.lang.Runnable mPreparePopupContentRTLHelper;
    private final android.animation.AnimatorSet mShowAnimation;
    private final int[] mTmpCoords;
    private final android.graphics.drawable.AnimatedVectorDrawable mToArrow;
    private final android.graphics.drawable.AnimatedVectorDrawable mToOverflow;
    private final android.graphics.Region mTouchableRegion;
    private int mTransitionDurationScale;
    private final android.graphics.Rect mViewPortOnScreen;

    public void <init>(android.content.Context, android.view.View)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.View r1, $r11;
        android.view.ViewGroup r2, $r45, $r54, $r57, $r60;
        android.graphics.Rect $r3;
        android.graphics.Point $r4;
        int[] $r5;
        android.graphics.Region $r6;
        com.android.internal.widget._$$Lambda$FloatingToolbar$FloatingToolbarPopup$77YZy6kisO5OnjlgtKp0Zi1V8EY $r7;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$1 $r8;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$2 $r9;
        android.content.Context $r13, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r39, $r41, $r47, r62;
        android.widget.PopupWindow $r14;
        android.content.res.Resources $r15, $r16, $r17, $r18, $r27, $r31, $r35, $r40;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator $r19;
        android.view.animation.Interpolator $r21, $r23, $r25;
        android.content.res.Resources$Theme $r29, $r33, $r37, $r42;
        android.graphics.drawable.Drawable $r38, $r43, r63, r64;
        android.util.Size $r44;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper $r46;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r48;
        android.view.animation.Animation$AnimationListener $r49, $r51, $r53;
        android.view.animation.AnimationSet $r50, $r52;
        android.animation.AnimatorSet $r55, $r58, $r61;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$3 $r56;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$4 $r59;
        android.graphics.drawable.AnimatedVectorDrawable r65, r66;
        android.widget.ImageButton r67;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r62 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen> = $r3;

        $r4 = new android.graphics.Point;

        specialinvoke $r4.<android.graphics.Point: void <init>()>();

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow> = $r4;

        $r5 = newarray (int)[2];

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords> = $r5;

        $r6 = new android.graphics.Region;

        specialinvoke $r6.<android.graphics.Region: void <init>()>();

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Region mTouchableRegion> = $r6;

        $r7 = new com.android.internal.widget._$$Lambda$FloatingToolbar$FloatingToolbarPopup$77YZy6kisO5OnjlgtKp0Zi1V8EY;

        specialinvoke $r7.<com.android.internal.widget._$$Lambda$FloatingToolbar$FloatingToolbarPopup$77YZy6kisO5OnjlgtKp0Zi1V8EY: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer> = $r7;

        $r8 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$1;

        specialinvoke $r8.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$1: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: java.lang.Runnable mPreparePopupContentRTLHelper> = $r8;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissed> = 1;

        $r9 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$2;

        specialinvoke $r9.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$2: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View$OnClickListener mMenuItemButtonOnClickListener> = $r9;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r11 = (android.view.View) r1;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent> = $r11;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r62);

        $r13 = (android.content.Context) r62;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext> = $r13;

        r2 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.view.ViewGroup access$600(android.content.Context)>(r62);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer> = r2;

        $r14 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.widget.PopupWindow access$700(android.view.ViewGroup)>(r2);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow> = $r14;

        $r15 = virtualinvoke r1.<android.view.View: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r15.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105187);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal> = $i0;

        $r16 = virtualinvoke r1.<android.view.View: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r16.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105200);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical> = $i1;

        $r17 = virtualinvoke r62.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r17.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105186);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight> = $i2;

        $r18 = virtualinvoke r62.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r18.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105188);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mIconTextSpacing> = $i3;

        $r19 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator;

        specialinvoke $r19.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: void <init>(com.android.internal.widget.FloatingToolbar$1)>(null);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLogAccelerateInterpolator> = $r19;

        $r20 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r21 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r20, 17563661);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutSlowInInterpolator> = $r21;

        $r22 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r23 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r22, 17563662);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLinearOutSlowInInterpolator> = $r23;

        $r24 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r25 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r24, 17563663);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutLinearInInterpolator> = $r25;

        $r26 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r27 = virtualinvoke $r26.<android.content.Context: android.content.res.Resources getResources()>();

        $r28 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r29 = virtualinvoke $r28.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r63 = virtualinvoke $r27.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(17302272, $r29);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mArrow> = r63;

        virtualinvoke r63.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>(1);

        $r30 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r31 = virtualinvoke $r30.<android.content.Context: android.content.res.Resources getResources()>();

        $r32 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r33 = virtualinvoke $r32.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r64 = virtualinvoke $r31.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(17302270, $r33);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mOverflow> = r64;

        virtualinvoke r64.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>(1);

        $r34 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r35 = virtualinvoke $r34.<android.content.Context: android.content.res.Resources getResources()>();

        $r36 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r37 = virtualinvoke $r36.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r38 = virtualinvoke $r35.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(17302271, $r37);

        r65 = (android.graphics.drawable.AnimatedVectorDrawable) $r38;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToArrow> = r65;

        virtualinvoke r65.<android.graphics.drawable.AnimatedVectorDrawable: void setAutoMirrored(boolean)>(1);

        $r39 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r40 = virtualinvoke $r39.<android.content.Context: android.content.res.Resources getResources()>();

        $r41 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r42 = virtualinvoke $r41.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r43 = virtualinvoke $r40.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(17302273, $r42);

        r66 = (android.graphics.drawable.AnimatedVectorDrawable) $r43;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToOverflow> = r66;

        virtualinvoke r66.<android.graphics.drawable.AnimatedVectorDrawable: void setAutoMirrored(boolean)>(1);

        r67 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton createOverflowButton()>();

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton> = r67;

        $r44 = staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size measure(android.view.View)>(r67);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize> = $r44;

        $r45 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup createMainPanel()>();

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel> = $r45;

        $r46 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper;

        $r47 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $i4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mIconTextSpacing>;

        specialinvoke $r46.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: void <init>(android.content.Context,int)>($r47, $i4);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper mOverflowPanelViewHelper> = $r46;

        $r48 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel createOverflowPanel()>();

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel> = $r48;

        $r49 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Animation$AnimationListener createOverflowAnimationListener()>();

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Animation$AnimationListener mOverflowAnimationListener> = $r49;

        $r50 = new android.view.animation.AnimationSet;

        specialinvoke $r50.<android.view.animation.AnimationSet: void <init>(boolean)>(1);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation> = $r50;

        $r51 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Animation$AnimationListener mOverflowAnimationListener>;

        virtualinvoke $r50.<android.view.animation.AnimationSet: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r51);

        $r52 = new android.view.animation.AnimationSet;

        specialinvoke $r52.<android.view.animation.AnimationSet: void <init>(boolean)>(1);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation> = $r52;

        $r53 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Animation$AnimationListener mOverflowAnimationListener>;

        virtualinvoke $r52.<android.view.animation.AnimationSet: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r53);

        $r54 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r55 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.animation.AnimatorSet access$900(android.view.View)>($r54);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mShowAnimation> = $r55;

        $r57 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r56 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$3;

        specialinvoke $r56.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$3: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        $r58 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.animation.AnimatorSet access$1100(android.view.View,int,android.animation.Animator$AnimatorListener)>($r57, 150, $r56);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mDismissAnimation> = $r58;

        $r60 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r59 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$4;

        specialinvoke $r59.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$4: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        $r61 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.animation.AnimatorSet access$1100(android.view.View,int,android.animation.Animator$AnimatorListener)>($r60, 0, $r59);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mHideAnimation> = $r61;

        return;
    }

    static android.widget.PopupWindow access$1000(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.widget.PopupWindow $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        return $r1;
    }

    static void access$1200(android.view.View, int)
    {
        android.view.View r0;
        int i0;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setWidth(android.view.View,int)>(r0, i0);

        return;
    }

    static boolean access$1300(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        return $z0;
    }

    static android.view.ViewGroup access$1400(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.ViewGroup $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        return $r1;
    }

    static com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel access$1500(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        return $r1;
    }

    static void access$1600(android.view.View, int)
    {
        android.view.View r0;
        int i0;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setHeight(android.view.View,int)>(r0, i0);

        return;
    }

    static boolean access$1700(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        return $z0;
    }

    static void access$1800(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void positionContentYCoordinatesIfOpeningOverflowUpwards()>();

        return;
    }

    static android.widget.ImageButton access$1900(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.widget.ImageButton $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        return $r1;
    }

    static void access$200(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setPanelsStatesAtRestingPosition()>();

        return;
    }

    static boolean access$2100(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isOverflowAnimating()>();

        return $z0;
    }

    static android.util.Size access$2200(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.util.Size $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        return $r1;
    }

    static android.util.Size access$2300(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.util.Size $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        return $r1;
    }

    static com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper access$2400(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper mOverflowPanelViewHelper>;

        return $r1;
    }

    static android.content.Context access$2500(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        return $r1;
    }

    static android.util.Size access$2600(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.util.Size $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        return $r1;
    }

    static void access$300(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setContentAreaAsTouchableSurface()>();

        return;
    }

    static android.view.ViewGroup access$400(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.ViewGroup $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        return $r1;
    }

    static android.view.MenuItem$OnMenuItemClickListener access$500(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.MenuItem$OnMenuItemClickListener $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.MenuItem$OnMenuItemClickListener mOnMenuItemClickListener>;

        return $r1;
    }

    private int calculateOverflowHeight(int)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r1, $r2;
        android.util.Size $r3;
        float $f0, $f1;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        i11 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(2, i11);

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $i2 = virtualinvoke $r1.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: int getCount()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(4, $i3);

        i12 = 0;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $i4 = virtualinvoke $r2.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: int getCount()>();

        if i0 >= $i4 goto label1;

        $i10 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight>;

        $f0 = (float) $i10;

        $f1 = $f0 * 0.5F;

        i12 = (int) $f1;

     label1:
        $i5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight>;

        $i6 = $i5 * i0;

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i7 = virtualinvoke $r3.<android.util.Size: int getHeight()>();

        $i8 = $i6 + $i7;

        $i9 = $i8 + i12;

        return $i9;
    }

    private void cancelDismissAndHideAnimations()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.animation.AnimatorSet $r1, $r2;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mDismissAnimation>;

        virtualinvoke $r1.<android.animation.AnimatorSet: void cancel()>();

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mHideAnimation>;

        virtualinvoke $r2.<android.animation.AnimatorSet: void cancel()>();

        return;
    }

    private void cancelOverflowAnimations()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.ViewGroup $r1, $r2;
        android.view.ViewPropertyAnimator $r3, $r5;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r4;
        android.graphics.drawable.AnimatedVectorDrawable $r6, $r7;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        virtualinvoke $r1.<android.view.ViewGroup: void clearAnimation()>();

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.ViewPropertyAnimator animate()>();

        virtualinvoke $r3.<android.view.ViewPropertyAnimator: void cancel()>();

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r5 = virtualinvoke $r4.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.view.ViewPropertyAnimator animate()>();

        virtualinvoke $r5.<android.view.ViewPropertyAnimator: void cancel()>();

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToArrow>;

        virtualinvoke $r6.<android.graphics.drawable.AnimatedVectorDrawable: void stop()>();

        $r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToOverflow>;

        virtualinvoke $r7.<android.graphics.drawable.AnimatedVectorDrawable: void stop()>();

        return;
    }

    private void clearPanels()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.widget.ArrayAdapter r1;
        android.view.ViewGroup $r2, $r6;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r3, $r5;
        android.widget.ListAdapter $r4;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize> = null;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize> = null;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen> = 0;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r2.<android.view.ViewGroup: void removeAllViews()>();

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r4 = virtualinvoke $r3.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.widget.ListAdapter getAdapter()>();

        r1 = (android.widget.ArrayAdapter) $r4;

        virtualinvoke r1.<android.widget.ArrayAdapter: void clear()>();

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r5.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAdapter(android.widget.ListAdapter)>(r1);

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        virtualinvoke $r6.<android.view.ViewGroup: void removeAllViews()>();

        return;
    }

    private void closeOverflow()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, f13;
        android.util.Size $r4, $r10;
        android.view.ViewGroup $r5, $r6, $r8, $r11, $r12, $r13, $r26, $r27;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$8 $r7;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$9 $r9;
        android.widget.ImageButton $r14, $r15, $r41;
        boolean $z0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$10 $r16;
        android.view.animation.Interpolator $r17, $r18, $r19, $r31, $r38;
        long $l8, $l10, $l12;
        android.view.animation.AnimationSet $r20, $r22, $r23, $r24, $r25;
        java.util.List $r21;
        android.view.ViewPropertyAnimator $r28, $r29, $r30, $r32, $r33, $r35, $r36, $r37, $r39, $r40;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r34;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        i0 = virtualinvoke $r4.<android.util.Size: int getWidth()>();

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        i1 = virtualinvoke $r5.<android.view.ViewGroup: int getWidth()>();

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        f12 = virtualinvoke $r6.<android.view.ViewGroup: float getX()>();

        $r7 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$8;

        $r8 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i2 = virtualinvoke $r8.<android.view.ViewGroup: int getWidth()>();

        $f1 = (float) $i2;

        $f2 = f12 + $f1;

        specialinvoke $r7.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$8: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,int,int,float,float)>(r0, i0, i1, f12, $f2);

        $r9 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$9;

        $r10 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $i3 = virtualinvoke $r10.<android.util.Size: int getHeight()>();

        $r11 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i4 = virtualinvoke $r11.<android.view.ViewGroup: int getHeight()>();

        $r12 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f3 = virtualinvoke $r12.<android.view.ViewGroup: float getY()>();

        $r13 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i5 = virtualinvoke $r13.<android.view.ViewGroup: int getHeight()>();

        $f4 = (float) $i5;

        $f5 = $f3 + $f4;

        specialinvoke $r9.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$9: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,int,int,float)>(r0, $i3, $i4, $f5);

        $r14 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        f0 = virtualinvoke $r14.<android.widget.ImageButton: float getX()>();

        $z0 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z0 == 0 goto label1;

        $f9 = (float) i1;

        $f10 = f0 - $f9;

        $r41 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i13 = virtualinvoke $r41.<android.widget.ImageButton: int getWidth()>();

        $f11 = (float) $i13;

        f13 = $f10 + $f11;

        goto label2;

     label1:
        $f6 = (float) i1;

        $f7 = $f6 + f0;

        $r15 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i6 = virtualinvoke $r15.<android.widget.ImageButton: int getWidth()>();

        $f8 = (float) $i6;

        f13 = $f7 - $f8;

     label2:
        $r16 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$10;

        specialinvoke $r16.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$10: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,float,float,int)>(r0, f0, f13, i1);

        $r17 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutSlowInInterpolator>;

        virtualinvoke $r7.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r17);

        $i7 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l8 = (long) $i7;

        virtualinvoke $r7.<android.view.animation.Animation: void setDuration(long)>($l8);

        $r18 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLogAccelerateInterpolator>;

        virtualinvoke $r9.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r18);

        $i9 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l10 = (long) $i9;

        virtualinvoke $r9.<android.view.animation.Animation: void setDuration(long)>($l10);

        $r19 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutSlowInInterpolator>;

        virtualinvoke $r16.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r19);

        $i11 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l12 = (long) $i11;

        virtualinvoke $r16.<android.view.animation.Animation: void setDuration(long)>($l12);

        $r20 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        $r21 = virtualinvoke $r20.<android.view.animation.AnimationSet: java.util.List getAnimations()>();

        interfaceinvoke $r21.<java.util.List: void clear()>();

        $r22 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        virtualinvoke $r22.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r7);

        $r23 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        virtualinvoke $r23.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r9);

        $r24 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        virtualinvoke $r24.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r16);

        $r26 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r25 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        virtualinvoke $r26.<android.view.ViewGroup: void startAnimation(android.view.animation.Animation)>($r25);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen> = 0;

        $r27 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r28 = virtualinvoke $r27.<android.view.ViewGroup: android.view.ViewPropertyAnimator animate()>();

        $r29 = virtualinvoke $r28.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $r30 = virtualinvoke $r29.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $r31 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutLinearInInterpolator>;

        $r32 = virtualinvoke $r30.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>($r31);

        $r33 = virtualinvoke $r32.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(100L);

        virtualinvoke $r33.<android.view.ViewPropertyAnimator: void start()>();

        $r34 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r35 = virtualinvoke $r34.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.view.ViewPropertyAnimator animate()>();

        $r36 = virtualinvoke $r35.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $r37 = virtualinvoke $r36.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $r38 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLinearOutSlowInInterpolator>;

        $r39 = virtualinvoke $r37.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>($r38);

        $r40 = virtualinvoke $r39.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(150L);

        virtualinvoke $r40.<android.view.ViewPropertyAnimator: void start()>();

        return;
    }

    private android.view.ViewGroup createMainPanel()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$11 $r1;
        android.content.Context $r2;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$11;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        specialinvoke $r1.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$11: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,android.content.Context)>(r0, $r2);

        return $r1;
    }

    private android.view.animation.Animation$AnimationListener createOverflowAnimationListener()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$13 $r1;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$13;

        specialinvoke $r1.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$13: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        return $r1;
    }

    private android.widget.ImageButton createOverflowButton()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.widget.ImageButton r1;
        android.content.Context $r2;
        android.view.LayoutInflater $r3;
        android.view.View $r4;
        android.graphics.drawable.Drawable $r5;
        com.android.internal.widget._$$Lambda$FloatingToolbar$FloatingToolbarPopup$_uEfRwR__1oHxMvRVdmbNRdukDM $r6;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r2);

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367162, null);

        r1 = (android.widget.ImageButton) $r4;

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mOverflow>;

        virtualinvoke r1.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r5);

        $r6 = new com.android.internal.widget._$$Lambda$FloatingToolbar$FloatingToolbarPopup$_uEfRwR__1oHxMvRVdmbNRdukDM;

        specialinvoke $r6.<com.android.internal.widget._$$Lambda$FloatingToolbar$FloatingToolbarPopup$_uEfRwR__1oHxMvRVdmbNRdukDM: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,android.widget.ImageButton)>(r0, r1);

        virtualinvoke r1.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r6);

        return r1;
    }

    private com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel createOverflowPanel()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r2;
        android.view.ViewGroup$LayoutParams $r3;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$12 $r4;
        android.content.Context $r5;
        com.android.internal.widget._$$Lambda$FloatingToolbar$FloatingToolbarPopup$E8FwnPCl7gZpcTlX_UaRPIBRnT0 $r6;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r2 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel;

        specialinvoke $r2.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        $r3 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r3.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r2.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

        virtualinvoke $r2.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setDivider(android.graphics.drawable.Drawable)>(null);

        virtualinvoke $r2.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setDividerHeight(int)>(0);

        $r4 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$12;

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        specialinvoke $r4.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$12: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,android.content.Context,int)>(r0, $r5, 0);

        virtualinvoke $r2.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAdapter(android.widget.ListAdapter)>($r4);

        $r6 = new com.android.internal.widget._$$Lambda$FloatingToolbar$FloatingToolbarPopup$E8FwnPCl7gZpcTlX_UaRPIBRnT0;

        specialinvoke $r6.<com.android.internal.widget._$$Lambda$FloatingToolbar$FloatingToolbarPopup$E8FwnPCl7gZpcTlX_UaRPIBRnT0: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel)>(r0, $r2);

        virtualinvoke $r2.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r6);

        return $r2;
    }

    private int getAdjustedDuration(int)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        i0 := @parameter0: int;

        i1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mTransitionDurationScale>;

        if i1 >= 150 goto label1;

        $i4 = i0 - 50;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i4, 0);

        return $i5;

     label1:
        if i1 <= 300 goto label2;

        $i3 = i0 + 50;

        return $i3;

     label2:
        $f0 = (float) i0;

        $f1 = staticinvoke <android.animation.ValueAnimator: float getDurationScale()>();

        $f2 = $f0 * $f1;

        $i2 = (int) $f2;

        return $i2;
    }

    private int getAdjustedToolbarWidth(int)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i1, i2, $i3, $i4, $i5, i6, i7;
        android.graphics.Rect $r1;
        android.view.View $r2, $r4;
        android.content.res.Resources $r3, $r5;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        i6 := @parameter0: int;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void refreshViewPort()>();

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        i1 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r3 = virtualinvoke $r2.<android.view.View: android.content.res.Resources getResources()>();

        i2 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105187);

        i7 = i6;

        if i6 > 0 goto label1;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r5 = virtualinvoke $r4.<android.view.View: android.content.res.Resources getResources()>();

        i7 = virtualinvoke $r5.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105198);

     label1:
        $i3 = i2 * 2;

        $i4 = i1 - $i3;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i7, $i4);

        return $i5;
    }

    private int getOverflowWidth()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, $i1, i2, i3;
        android.view.MenuItem r1;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r2, $r4;
        android.widget.ListAdapter $r3, $r5;
        java.lang.Object $r6;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper $r7;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        i2 = 0;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r3 = virtualinvoke $r2.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.widget.ListAdapter getAdapter()>();

        i0 = interfaceinvoke $r3.<android.widget.ListAdapter: int getCount()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r5 = virtualinvoke $r4.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.widget.ListAdapter getAdapter()>();

        $r6 = interfaceinvoke $r5.<android.widget.ListAdapter: java.lang.Object getItem(int)>(i3);

        r1 = (android.view.MenuItem) $r6;

        $r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper mOverflowPanelViewHelper>;

        $i1 = virtualinvoke $r7.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: int calculateWidth(android.view.MenuItem)>(r1);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    private boolean hasOverflow()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.util.Size $r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isInRTLMode()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean z0, z1;
        android.content.Context $r1, $r3;
        android.content.pm.ApplicationInfo $r2;
        android.content.res.Resources $r4;
        android.content.res.Configuration $r5;
        int $i0;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        z0 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: boolean hasRtlSupport()>();

        z1 = 1;

        if z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = virtualinvoke $r5.<android.content.res.Configuration: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isOverflowAnimating()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.animation.AnimationSet $r1, $r2, $r3, $r4;
        boolean $z1, $z2, z3, z4, $z5, z6, z7;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        z3 = virtualinvoke $r1.<android.view.animation.AnimationSet: boolean hasStarted()>();

        if z3 == 0 goto label1;

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        $z2 = virtualinvoke $r3.<android.view.animation.AnimationSet: boolean hasEnded()>();

        if $z2 != 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        $z5 = virtualinvoke $r4.<android.view.animation.AnimationSet: boolean hasStarted()>();

        if $z5 == 0 goto label3;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        $z1 = virtualinvoke $r2.<android.view.animation.AnimationSet: boolean hasEnded()>();

        if $z1 != 0 goto label3;

        z6 = 1;

        goto label4;

     label3:
        z6 = 0;

     label4:
        z7 = 1;

        if z4 != 0 goto label6;

        if z6 == 0 goto label5;

        z7 = 1;

        goto label6;

     label5:
        z7 = 0;

     label6:
        return z7;
    }

    private void layoutOverflowPanelItems(java.util.List)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.widget.ArrayAdapter r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r2, $r4, $r6, $r9, $r10;
        android.widget.ListAdapter $r3;
        boolean $z0;
        android.util.Size $r5, $r7, $r8;
        float $f0;
        java.lang.Object $r11;
        android.view.MenuItem $r12;
        java.util.List r13;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r13 := @parameter0: java.util.List;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r3 = virtualinvoke $r2.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.widget.ListAdapter getAdapter()>();

        r1 = (android.widget.ArrayAdapter) $r3;

        virtualinvoke r1.<android.widget.ArrayAdapter: void clear()>();

        i0 = interfaceinvoke r13.<java.util.List: int size()>();

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $r11 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(i6);

        $r12 = (android.view.MenuItem) $r11;

        virtualinvoke r1.<android.widget.ArrayAdapter: void add(java.lang.Object)>($r12);

        i6 = i6 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r4.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAdapter(android.widget.ListAdapter)>(r1);

        $z0 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z0 == 0 goto label3;

        $r10 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r10.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>(0.0F);

        goto label4;

     label3:
        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i1 = virtualinvoke $r5.<android.util.Size: int getHeight()>();

        $f0 = (float) $i1;

        virtualinvoke $r6.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>($f0);

     label4:
        $r7 = new android.util.Size;

        $i2 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int getOverflowWidth()>();

        $r8 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i3 = virtualinvoke $r8.<android.util.Size: int getWidth()>();

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $i5 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int calculateOverflowHeight(int)>(4);

        specialinvoke $r7.<android.util.Size: void <init>(int,int)>($i4, $i5);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize> = $r7;

        $r9 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>($r9, $r7);

        return;
    }

    private void maybeComputeTransitionDurationScale()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.util.Size r1, $r2, $r3, $r4, $r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        double $d0, $d1, $d2, $d3;
        android.view.ViewGroup $r6;
        android.content.Context $r7;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r9;
        float $f0;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        if r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        if $r2 == null goto label1;

        $i2 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i3 = virtualinvoke $r3.<android.util.Size: int getWidth()>();

        i0 = $i2 - $i3;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i4 = virtualinvoke $r4.<android.util.Size: int getHeight()>();

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $i5 = virtualinvoke $r5.<android.util.Size: int getHeight()>();

        i1 = $i4 - $i5;

        $i7 = i0 * i0;

        $i6 = i1 * i1;

        $i8 = $i7 + $i6;

        $d0 = (double) $i8;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r7 = virtualinvoke $r6.<android.view.ViewGroup: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r9.<android.util.DisplayMetrics: float density>;

        $d2 = (double) $f0;

        $d3 = $d1 / $d2;

        $i9 = (int) $d3;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mTransitionDurationScale> = $i9;

     label1:
        return;
    }

    private static android.util.Size measure(android.view.View)
    {
        android.view.View r0;
        android.view.ViewParent $r1;
        android.util.Size $r2;
        int $i0, $i1;
        boolean z0;

        r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        if $r1 != null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z0);

        virtualinvoke r0.<android.view.View: void measure(int,int)>(0, 0);

        $r2 = new android.util.Size;

        $i0 = virtualinvoke r0.<android.view.View: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.view.View: int getMeasuredHeight()>();

        specialinvoke $r2.<android.util.Size: void <init>(int,int)>($i0, $i1);

        return $r2;
    }

    private void openOverflow()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i8, $i10, $i12;
        android.util.Size $r4, $r5;
        android.view.ViewGroup $r6, $r7, $r8, $r9, $r11, $r27, $r28;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$5 $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9, f10, f11;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$6 $r12;
        android.widget.ImageButton $r13, $r14, $r36;
        boolean $z0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$7 $r15;
        android.view.animation.Interpolator $r16, $r17, $r18, $r32;
        long $l7, $l9, $l11;
        android.view.animation.AnimationSet $r19, $r21, $r23, $r24, $r25, $r26;
        java.util.List $r20, $r22;
        android.view.ViewPropertyAnimator $r29, $r30, $r31, $r33, $r34;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r35;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        i0 = virtualinvoke $r4.<android.util.Size: int getWidth()>();

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        i1 = virtualinvoke $r5.<android.util.Size: int getHeight()>();

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        i2 = virtualinvoke $r6.<android.view.ViewGroup: int getWidth()>();

        $r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        i3 = virtualinvoke $r7.<android.view.ViewGroup: int getHeight()>();

        $r8 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        f8 = virtualinvoke $r8.<android.view.ViewGroup: float getY()>();

        $r9 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        f9 = virtualinvoke $r9.<android.view.ViewGroup: float getX()>();

        $r10 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$5;

        $r11 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i4 = virtualinvoke $r11.<android.view.ViewGroup: int getWidth()>();

        $f0 = (float) $i4;

        $f1 = f9 + $f0;

        specialinvoke $r10.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$5: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,int,int,float,float)>(r0, i0, i2, f9, $f1);

        $r12 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$6;

        specialinvoke $r12.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$6: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,int,int,float)>(r0, i1, i3, f8);

        $r13 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        f10 = virtualinvoke $r13.<android.widget.ImageButton: float getX()>();

        $z0 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z0 == 0 goto label1;

        $f5 = (float) i0;

        $f6 = $f5 + f10;

        $r36 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i12 = virtualinvoke $r36.<android.widget.ImageButton: int getWidth()>();

        $f7 = (float) $i12;

        f11 = $f6 - $f7;

        goto label2;

     label1:
        $f2 = (float) i0;

        $f3 = f10 - $f2;

        $r14 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i5 = virtualinvoke $r14.<android.widget.ImageButton: int getWidth()>();

        $f4 = (float) $i5;

        f11 = $f3 + $f4;

     label2:
        $r15 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$7;

        specialinvoke $r15.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$7: void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,float,float,int)>(r0, f10, f11, i2);

        $r16 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLogAccelerateInterpolator>;

        virtualinvoke $r10.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r16);

        $i6 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l7 = (long) $i6;

        virtualinvoke $r10.<android.view.animation.Animation: void setDuration(long)>($l7);

        $r17 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutSlowInInterpolator>;

        virtualinvoke $r12.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r17);

        $i8 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l9 = (long) $i8;

        virtualinvoke $r12.<android.view.animation.Animation: void setDuration(long)>($l9);

        $r18 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutSlowInInterpolator>;

        virtualinvoke $r15.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r18);

        $i10 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l11 = (long) $i10;

        virtualinvoke $r15.<android.view.animation.Animation: void setDuration(long)>($l11);

        $r19 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        $r20 = virtualinvoke $r19.<android.view.animation.AnimationSet: java.util.List getAnimations()>();

        interfaceinvoke $r20.<java.util.List: void clear()>();

        $r21 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        $r22 = virtualinvoke $r21.<android.view.animation.AnimationSet: java.util.List getAnimations()>();

        interfaceinvoke $r22.<java.util.List: void clear()>();

        $r23 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        virtualinvoke $r23.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r10);

        $r24 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        virtualinvoke $r24.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r12);

        $r25 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        virtualinvoke $r25.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r15);

        $r27 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r26 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        virtualinvoke $r27.<android.view.ViewGroup: void startAnimation(android.view.animation.Animation)>($r26);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen> = 1;

        $r28 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r29 = virtualinvoke $r28.<android.view.ViewGroup: android.view.ViewPropertyAnimator animate()>();

        $r30 = virtualinvoke $r29.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $r31 = virtualinvoke $r30.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $r32 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLinearOutSlowInInterpolator>;

        $r33 = virtualinvoke $r31.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>($r32);

        $r34 = virtualinvoke $r33.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(250L);

        virtualinvoke $r34.<android.view.ViewPropertyAnimator: void start()>();

        $r35 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r35.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAlpha(float)>(1.0F);

        return;
    }

    private void positionContentYCoordinatesIfOpeningOverflowUpwards()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0;
        android.view.ViewGroup $r1, $r2, $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.util.Size $r3, $r9;
        float $f0, $f1, $f2;
        android.widget.ImageButton $r5, $r6;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r8;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getHeight()>();

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $i1 = virtualinvoke $r3.<android.util.Size: int getHeight()>();

        $i2 = $i0 - $i1;

        $f0 = (float) $i2;

        virtualinvoke $r2.<android.view.ViewGroup: void setY(float)>($f0);

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i3 = virtualinvoke $r4.<android.view.ViewGroup: int getHeight()>();

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i4 = virtualinvoke $r6.<android.widget.ImageButton: int getHeight()>();

        $i5 = $i3 - $i4;

        $f1 = (float) $i5;

        virtualinvoke $r5.<android.widget.ImageButton: void setY(float)>($f1);

        $r8 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i6 = virtualinvoke $r7.<android.view.ViewGroup: int getHeight()>();

        $r9 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i7 = virtualinvoke $r9.<android.util.Size: int getHeight()>();

        $i8 = $i6 - $i7;

        $f2 = (float) $i8;

        virtualinvoke $r8.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>($f2);

     label1:
        return;
    }

    private void preparePopupContent()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.ViewGroup $r1, $r2, $r3, $r4, $r6, $r8, $r10;
        boolean $z0, $z1, $z2;
        java.lang.Runnable $r5;
        android.widget.ImageButton $r7;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r9;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        virtualinvoke $r1.<android.view.ViewGroup: void removeAllViews()>();

        $z0 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean hasOverflow()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r9 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r10.<android.view.ViewGroup: void addView(android.view.View)>($r9);

     label1:
        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r3.<android.view.ViewGroup: void addView(android.view.View)>($r2);

        $z1 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean hasOverflow()>();

        if $z1 == 0 goto label2;

        $r8 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r8.<android.view.ViewGroup: void addView(android.view.View)>($r7);

     label2:
        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setPanelsStatesAtRestingPosition()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setContentAreaAsTouchableSurface()>();

        $z2 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z2 == 0 goto label3;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        virtualinvoke $r4.<android.view.ViewGroup: void setAlpha(float)>(0.0F);

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: java.lang.Runnable mPreparePopupContentRTLHelper>;

        virtualinvoke $r6.<android.view.ViewGroup: boolean post(java.lang.Runnable)>($r5);

     label3:
        return;
    }

    private void refreshCoordinatesAndOverflowDirection(android.graphics.Rect)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, $i53, $i54, $i55, $i56, $i57, $i58;
        android.widget.PopupWindow $r1, $r3, $r11, $r12;
        android.graphics.Rect $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, r14;
        boolean $z0;
        android.view.View $r15, $r16, $r19, $r20;
        int[] $r17, r18, $r21, r22;
        android.graphics.Point $r23;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r14 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void refreshViewPort()>();

        $i4 = virtualinvoke r14.<android.graphics.Rect: int centerX()>();

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i5 = virtualinvoke $r1.<android.widget.PopupWindow: int getWidth()>();

        $i6 = $i5 / 2;

        $i7 = $i4 - $i6;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i8 = $r2.<android.graphics.Rect: int right>;

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i9 = virtualinvoke $r3.<android.widget.PopupWindow: int getWidth()>();

        $i10 = $i8 - $i9;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i10);

        $i12 = r14.<android.graphics.Rect: int top>;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i11 = $r4.<android.graphics.Rect: int top>;

        i38 = $i12 - $i11;

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i14 = $r5.<android.graphics.Rect: int bottom>;

        $i13 = r14.<android.graphics.Rect: int bottom>;

        i39 = $i14 - $i13;

        $i15 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        i40 = $i15 * 2;

        $i16 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight>;

        i41 = $i16 + i40;

        $z0 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean hasOverflow()>();

        if $z0 != 0 goto label4;

        if i38 < i41 goto label1;

        $i37 = r14.<android.graphics.Rect: int top>;

        i42 = $i37 - i41;

        goto label9;

     label1:
        if i39 < i41 goto label2;

        i42 = r14.<android.graphics.Rect: int bottom>;

        goto label9;

     label2:
        $i31 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight>;

        if i39 < $i31 goto label3;

        $i36 = r14.<android.graphics.Rect: int bottom>;

        $i35 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        i42 = $i36 - $i35;

        goto label9;

     label3:
        $r13 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i34 = $r13.<android.graphics.Rect: int top>;

        $i32 = r14.<android.graphics.Rect: int top>;

        $i33 = $i32 - i41;

        i42 = staticinvoke <java.lang.Math: int max(int,int)>($i34, $i33);

        goto label9;

     label4:
        $i17 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int calculateOverflowHeight(int)>(2);

        i1 = $i17 + i40;

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i19 = $r6.<android.graphics.Rect: int bottom>;

        $i18 = r14.<android.graphics.Rect: int top>;

        $i20 = $i19 - $i18;

        i43 = $i20 + i41;

        i2 = r14.<android.graphics.Rect: int bottom>;

        $r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        i3 = $r7.<android.graphics.Rect: int top>;

        if i38 < i1 goto label5;

        $i30 = i38 - i40;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void updateOverflowHeight(int)>($i30);

        i44 = r14.<android.graphics.Rect: int top>;

        $r12 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        i45 = virtualinvoke $r12.<android.widget.PopupWindow: int getHeight()>();

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards> = 1;

        i42 = i44 - i45;

        goto label9;

     label5:
        if i38 < i41 goto label6;

        if i43 < i1 goto label6;

        $i29 = i43 - i40;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void updateOverflowHeight(int)>($i29);

        i46 = r14.<android.graphics.Rect: int top>;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards> = 0;

        i42 = i46 - i41;

        goto label9;

     label6:
        if i39 < i1 goto label7;

        $i28 = i39 - i40;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void updateOverflowHeight(int)>($i28);

        i42 = r14.<android.graphics.Rect: int bottom>;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards> = 0;

        goto label9;

     label7:
        if i39 < i41 goto label8;

        $r10 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i23 = virtualinvoke $r10.<android.graphics.Rect: int height()>();

        if $i23 < i1 goto label8;

        $i24 = i2 - i3;

        $i25 = $i24 + i41;

        $i26 = $i25 - i40;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void updateOverflowHeight(int)>($i26);

        i47 = r14.<android.graphics.Rect: int bottom>;

        $r11 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        i48 = virtualinvoke $r11.<android.widget.PopupWindow: int getHeight()>();

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards> = 1;

        $i27 = i47 + i41;

        i42 = $i27 - i48;

        goto label9;

     label8:
        $r8 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i21 = virtualinvoke $r8.<android.graphics.Rect: int height()>();

        $i22 = $i21 - i40;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void updateOverflowHeight(int)>($i22);

        $r9 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        i42 = $r9.<android.graphics.Rect: int top>;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards> = 0;

     label9:
        $r15 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r16 = virtualinvoke $r15.<android.view.View: android.view.View getRootView()>();

        $r17 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords>;

        virtualinvoke $r16.<android.view.View: void getLocationOnScreen(int[])>($r17);

        r18 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords>;

        i49 = r18[0];

        i50 = r18[1];

        $r19 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r20 = virtualinvoke $r19.<android.view.View: android.view.View getRootView()>();

        $r21 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords>;

        virtualinvoke $r20.<android.view.View: void getLocationInWindow(int[])>($r21);

        r22 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords>;

        i51 = r22[0];

        i52 = r22[1];

        $r23 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow>;

        $i53 = i49 - i51;

        $i54 = i0 - $i53;

        $i55 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i54);

        $i56 = i50 - i52;

        $i57 = i42 - $i56;

        $i58 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i57);

        virtualinvoke $r23.<android.graphics.Point: void set(int,int)>($i55, $i58);

        return;
    }

    private void refreshViewPort()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.graphics.Rect $r1;
        android.view.View $r2;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        virtualinvoke $r2.<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>($r1);

        return;
    }

    private void runDismissAnimation()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.animation.AnimatorSet $r1;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mDismissAnimation>;

        virtualinvoke $r1.<android.animation.AnimatorSet: void start()>();

        return;
    }

    private void runHideAnimation()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.animation.AnimatorSet $r1;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mHideAnimation>;

        virtualinvoke $r1.<android.animation.AnimatorSet: void start()>();

        return;
    }

    private void runShowAnimation()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.animation.AnimatorSet $r1;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mShowAnimation>;

        virtualinvoke $r1.<android.animation.AnimatorSet: void start()>();

        return;
    }

    private void setButtonTagAndClickListener(android.view.View, android.view.MenuItem)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.View r1;
        android.view.MenuItem r2;
        android.view.View$OnClickListener $r3;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.MenuItem;

        virtualinvoke r1.<android.view.View: void setTag(java.lang.Object)>(r2);

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View$OnClickListener mMenuItemButtonOnClickListener>;

        virtualinvoke r1.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r3);

        return;
    }

    private void setContentAreaAsTouchableSurface()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.util.Size $r1, $r3, $r4, $r10, $r12, $r13;
        boolean $z0;
        android.view.ViewGroup $r5, $r7, $r8, $r9;
        android.graphics.Region $r6;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r1);

        $z0 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen>;

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r10);

        $r12 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        i6 = virtualinvoke $r12.<android.util.Size: int getWidth()>();

        $r13 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        i7 = virtualinvoke $r13.<android.util.Size: int getHeight()>();

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        i6 = virtualinvoke $r3.<android.util.Size: int getWidth()>();

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        i7 = virtualinvoke $r4.<android.util.Size: int getHeight()>();

     label2:
        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Region mTouchableRegion>;

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f0 = virtualinvoke $r5.<android.view.ViewGroup: float getX()>();

        $i0 = (int) $f0;

        $r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f1 = virtualinvoke $r7.<android.view.ViewGroup: float getY()>();

        $i1 = (int) $f1;

        $r8 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f2 = virtualinvoke $r8.<android.view.ViewGroup: float getX()>();

        $i2 = (int) $f2;

        $i3 = $i2 + i6;

        $r9 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f3 = virtualinvoke $r9.<android.view.ViewGroup: float getY()>();

        $i4 = (int) $f3;

        $i5 = $i4 + i7;

        virtualinvoke $r6.<android.graphics.Region: boolean set(int,int,int,int)>($i0, $i1, $i3, $i5);

        return;
    }

    private static void setHeight(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams $r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = $r1.<android.view.ViewGroup$LayoutParams: int width>;

        staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,int,int)>(r0, $i1, i0);

        return;
    }

    private void setPanelsStatesAtRestingPosition()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.widget.ImageButton $r1, $r9, $r11, $r20, $r26, $r32, $r37, $r45, $r47, $r53, $r57, $r63, $r68;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r2, $r6, $r7, $r22, $r28, $r33, $r38, $r42, $r43, $r54, $r59, $r65, $r70;
        boolean $z1, $z2, $z3, $z4, $z5, $z6;
        android.view.ViewGroup $r3, $r4, $r5, $r13, $r14, $r15, $r16, $r18, $r19, $r24, $r25, $r30, $r31, $r35, $r36, $r39, $r40, $r41, $r50, $r51, $r52, $r55, $r56, $r60, $r61, $r62, $r66, $r67;
        android.graphics.drawable.Drawable $r8, $r44;
        android.content.Context $r10, $r46;
        java.lang.String $r12, $r48;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        android.widget.PopupWindow $r17, $r49;
        android.util.Size $r21, $r23, $r27, $r29, $r34, $r58, $r64, $r69, r71, r72;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r1.<android.widget.ImageButton: void setEnabled(boolean)>(1);

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r2.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: boolean awakenScrollBars()>();

        $z1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen>;

        if $z1 == 0 goto label05;

        r71 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $r39 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>($r39, r71);

        $r40 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r40.<android.view.ViewGroup: void setAlpha(float)>(0.0F);

        $r41 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r41.<android.view.ViewGroup: void setVisibility(int)>(4);

        $r42 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r42.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAlpha(float)>(1.0F);

        $r43 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r43.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setVisibility(int)>(0);

        $r45 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r44 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mArrow>;

        virtualinvoke $r45.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r44);

        $r47 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r46 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r48 = virtualinvoke $r46.<android.content.Context: java.lang.String getString(int)>(17040215);

        virtualinvoke $r47.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r48);

        $z5 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z5 == 0 goto label01;

        $r66 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i38 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $f18 = (float) $i38;

        virtualinvoke $r66.<android.view.ViewGroup: void setX(float)>($f18);

        $r67 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r67.<android.view.ViewGroup: void setX(float)>(0.0F);

        $r68 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i39 = virtualinvoke r71.<android.util.Size: int getWidth()>();

        $r69 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i40 = virtualinvoke $r69.<android.util.Size: int getWidth()>();

        $i41 = $i39 - $i40;

        $f19 = (float) $i41;

        virtualinvoke $r68.<android.widget.ImageButton: void setX(float)>($f19);

        $r70 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r70.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>(0.0F);

        goto label02;

     label01:
        $r50 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r49 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i24 = virtualinvoke $r49.<android.widget.PopupWindow: int getWidth()>();

        $i25 = virtualinvoke r71.<android.util.Size: int getWidth()>();

        $i27 = $i24 - $i25;

        $i26 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $i28 = $i27 - $i26;

        $f10 = (float) $i28;

        virtualinvoke $r50.<android.view.ViewGroup: void setX(float)>($f10);

        $r52 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r51 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f11 = virtualinvoke $r51.<android.view.ViewGroup: float getX()>();

        $f12 = neg $f11;

        virtualinvoke $r52.<android.view.ViewGroup: void setX(float)>($f12);

        $r53 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r53.<android.widget.ImageButton: void setX(float)>(0.0F);

        $r54 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r54.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>(0.0F);

     label02:
        $z6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z6 == 0 goto label03;

        $r60 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i31 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $f15 = (float) $i31;

        virtualinvoke $r60.<android.view.ViewGroup: void setY(float)>($f15);

        $r61 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $i32 = virtualinvoke r71.<android.util.Size: int getHeight()>();

        $r62 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i33 = virtualinvoke $r62.<android.view.ViewGroup: int getHeight()>();

        $i34 = $i32 - $i33;

        $f16 = (float) $i34;

        virtualinvoke $r61.<android.view.ViewGroup: void setY(float)>($f16);

        $r63 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i35 = virtualinvoke r71.<android.util.Size: int getHeight()>();

        $r64 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i36 = virtualinvoke $r64.<android.util.Size: int getHeight()>();

        $i37 = $i35 - $i36;

        $f17 = (float) $i37;

        virtualinvoke $r63.<android.widget.ImageButton: void setY(float)>($f17);

        $r65 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r65.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>(0.0F);

        goto label04;

     label03:
        $r55 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i29 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $f13 = (float) $i29;

        virtualinvoke $r55.<android.view.ViewGroup: void setY(float)>($f13);

        $r56 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r56.<android.view.ViewGroup: void setY(float)>(0.0F);

        $r57 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r57.<android.widget.ImageButton: void setY(float)>(0.0F);

        $r59 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r58 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i30 = virtualinvoke $r58.<android.util.Size: int getHeight()>();

        $f14 = (float) $i30;

        virtualinvoke $r59.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>($f14);

     label04:
        goto label10;

     label05:
        r72 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>($r3, r72);

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r4.<android.view.ViewGroup: void setAlpha(float)>(1.0F);

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r5.<android.view.ViewGroup: void setVisibility(int)>(0);

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r6.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAlpha(float)>(0.0F);

        $r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r7.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setVisibility(int)>(4);

        $r9 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r8 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mOverflow>;

        virtualinvoke $r9.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r8);

        $r11 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r10 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r12 = virtualinvoke $r10.<android.content.Context: java.lang.String getString(int)>(17040216);

        virtualinvoke $r11.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r12);

        $z2 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean hasOverflow()>();

        if $z2 == 0 goto label09;

        $z3 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z3 == 0 goto label06;

        $r35 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i23 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $f9 = (float) $i23;

        virtualinvoke $r35.<android.view.ViewGroup: void setX(float)>($f9);

        $r36 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r36.<android.view.ViewGroup: void setX(float)>(0.0F);

        $r37 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r37.<android.widget.ImageButton: void setX(float)>(0.0F);

        $r38 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r38.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>(0.0F);

        goto label07;

     label06:
        $r18 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r17 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i2 = virtualinvoke $r17.<android.widget.PopupWindow: int getWidth()>();

        $i3 = virtualinvoke r72.<android.util.Size: int getWidth()>();

        $i5 = $i2 - $i3;

        $i4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $i6 = $i5 - $i4;

        $f2 = (float) $i6;

        virtualinvoke $r18.<android.view.ViewGroup: void setX(float)>($f2);

        $r19 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r19.<android.view.ViewGroup: void setX(float)>(0.0F);

        $r20 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i7 = virtualinvoke r72.<android.util.Size: int getWidth()>();

        $r21 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i8 = virtualinvoke $r21.<android.util.Size: int getWidth()>();

        $i9 = $i7 - $i8;

        $f3 = (float) $i9;

        virtualinvoke $r20.<android.widget.ImageButton: void setX(float)>($f3);

        $r22 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $i10 = virtualinvoke r72.<android.util.Size: int getWidth()>();

        $r23 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i11 = virtualinvoke $r23.<android.util.Size: int getWidth()>();

        $i12 = $i10 - $i11;

        $f4 = (float) $i12;

        virtualinvoke $r22.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>($f4);

     label07:
        $z4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z4 == 0 goto label08;

        $r30 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i15 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $r29 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i16 = virtualinvoke $r29.<android.util.Size: int getHeight()>();

        $i17 = $i15 + $i16;

        $i18 = virtualinvoke r72.<android.util.Size: int getHeight()>();

        $i19 = $i17 - $i18;

        $f7 = (float) $i19;

        virtualinvoke $r30.<android.view.ViewGroup: void setY(float)>($f7);

        $r31 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r31.<android.view.ViewGroup: void setY(float)>(0.0F);

        $r32 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r32.<android.widget.ImageButton: void setY(float)>(0.0F);

        $r33 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $i20 = virtualinvoke r72.<android.util.Size: int getHeight()>();

        $r34 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i21 = virtualinvoke $r34.<android.util.Size: int getHeight()>();

        $i22 = $i20 - $i21;

        $f8 = (float) $i22;

        virtualinvoke $r33.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>($f8);

        goto label10;

     label08:
        $r24 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i13 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $f5 = (float) $i13;

        virtualinvoke $r24.<android.view.ViewGroup: void setY(float)>($f5);

        $r25 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r25.<android.view.ViewGroup: void setY(float)>(0.0F);

        $r26 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r26.<android.widget.ImageButton: void setY(float)>(0.0F);

        $r28 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r27 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i14 = virtualinvoke $r27.<android.util.Size: int getHeight()>();

        $f6 = (float) $i14;

        virtualinvoke $r28.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>($f6);

        goto label10;

     label09:
        $r13 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i0 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $f0 = (float) $i0;

        virtualinvoke $r13.<android.view.ViewGroup: void setX(float)>($f0);

        $r14 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $f1 = (float) $i1;

        virtualinvoke $r14.<android.view.ViewGroup: void setY(float)>($f1);

        $r15 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r15.<android.view.ViewGroup: void setX(float)>(0.0F);

        $r16 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r16.<android.view.ViewGroup: void setY(float)>(0.0F);

     label10:
        return;
    }

    private static void setSize(android.view.View, int, int)
    {
        android.view.View r0;
        int i0, i1;
        android.view.ViewGroup$LayoutParams $r1, r2;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.view.View: void setMinimumWidth(int)>(i0);

        virtualinvoke r0.<android.view.View: void setMinimumHeight(int)>(i1);

        r2 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r2 != null goto label1;

        $r1 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r1.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(0, 0);

        r2 = $r1;

        goto label1;

     label1:
        r2.<android.view.ViewGroup$LayoutParams: int width> = i0;

        r2.<android.view.ViewGroup$LayoutParams: int height> = i1;

        virtualinvoke r0.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        return;
    }

    private static void setSize(android.view.View, android.util.Size)
    {
        android.view.View r0;
        android.util.Size r1;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.util.Size;

        $i0 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i1 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,int,int)>(r0, $i0, $i1);

        return;
    }

    private void setTouchableSurfaceInsetsComputer()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.ViewTreeObserver r1;
        android.widget.PopupWindow $r2;
        android.view.View $r3, $r4;
        android.view.ViewTreeObserver$OnComputeInternalInsetsListener $r5, $r6;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $r3 = virtualinvoke $r2.<android.widget.PopupWindow: android.view.View getContentView()>();

        $r4 = virtualinvoke $r3.<android.view.View: android.view.View getRootView()>();

        r1 = virtualinvoke $r4.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>($r5);

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>($r6);

        return;
    }

    private static void setWidth(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams $r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = $r1.<android.view.ViewGroup$LayoutParams: int height>;

        staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,int,int)>(r0, i0, $i1);

        return;
    }

    private void setZeroTouchableSurface()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.graphics.Region $r1;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Region mTouchableRegion>;

        virtualinvoke $r1.<android.graphics.Region: void setEmpty()>();

        return;
    }

    private void updateOverflowHeight(int)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0, $z1, $z2;
        android.util.Size $r1, $r2, $r3, $r5, $r7, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r4;
        android.view.ViewGroup $r6, $r8, r12;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.widget.ImageButton r13;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        i7 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean hasOverflow()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i0 = virtualinvoke $r1.<android.util.Size: int getHeight()>();

        $i2 = i7 - $i0;

        $i1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight>;

        $i3 = $i2 / $i1;

        i8 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int calculateOverflowHeight(int)>($i3);

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i4 = virtualinvoke $r2.<android.util.Size: int getHeight()>();

        if $i4 == i8 goto label1;

        $r10 = new android.util.Size;

        $r11 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i6 = virtualinvoke $r11.<android.util.Size: int getWidth()>();

        specialinvoke $r10.<android.util.Size: void <init>(int,int)>($i6, i8);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize> = $r10;

     label1:
        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>($r4, $r3);

        $z1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen>;

        if $z1 == 0 goto label2;

        $r8 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>($r8, $r7);

        $z2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z2 == 0 goto label3;

        $r9 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i5 = virtualinvoke $r9.<android.util.Size: int getHeight()>();

        i9 = $i5 - i8;

        r12 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f0 = virtualinvoke r12.<android.view.ViewGroup: float getY()>();

        $f1 = (float) i9;

        $f2 = $f0 + $f1;

        virtualinvoke r12.<android.view.ViewGroup: void setY(float)>($f2);

        r13 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $f3 = virtualinvoke r13.<android.widget.ImageButton: float getY()>();

        $f4 = (float) i9;

        $f5 = $f3 - $f4;

        virtualinvoke r13.<android.widget.ImageButton: void setY(float)>($f5);

        goto label3;

     label2:
        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>($r6, $r5);

     label3:
        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void updatePopupSize()>();

     label4:
        return;
    }

    private void updatePopupSize()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;
        android.widget.PopupWindow $r1, $r2;
        android.util.Size $r3, $r4, r5, r6;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        i10 = 0;

        i11 = 0;

        r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        if r5 == null goto label1;

        $i8 = virtualinvoke r5.<android.util.Size: int getWidth()>();

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $i9 = virtualinvoke $r4.<android.util.Size: int getHeight()>();

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

     label1:
        r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        i12 = i10;

        i13 = i11;

        if r6 == null goto label2;

        $i6 = virtualinvoke r6.<android.util.Size: int getWidth()>();

        i12 = staticinvoke <java.lang.Math: int max(int,int)>(i10, $i6);

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i7 = virtualinvoke $r3.<android.util.Size: int getHeight()>();

        i13 = staticinvoke <java.lang.Math: int max(int,int)>(i11, $i7);

     label2:
        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i0 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $i1 = $i0 * 2;

        $i2 = $i1 + i12;

        virtualinvoke $r1.<android.widget.PopupWindow: void setWidth(int)>($i2);

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $i4 = $i3 * 2;

        $i5 = $i4 + i13;

        virtualinvoke $r2.<android.widget.PopupWindow: void setHeight(int)>($i5);

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void maybeComputeTransitionDurationScale()>();

        return;
    }

    public void dismiss()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0;
        android.animation.AnimatorSet $r1;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mHidden> = 0;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissed> = 1;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mHideAnimation>;

        virtualinvoke $r1.<android.animation.AnimatorSet: void cancel()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void runDismissAnimation()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setZeroTouchableSurface()>();

        return;
    }

    public void hide()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = virtualinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mHidden> = 1;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void runHideAnimation()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setZeroTouchableSurface()>();

        return;
    }

    public boolean isHidden()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mHidden>;

        return $z0;
    }

    public boolean isShowing()
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissed>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mHidden>;

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public void lambda$createOverflowButton$1$FloatingToolbar$FloatingToolbarPopup(android.widget.ImageButton, android.view.View)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.widget.ImageButton r1;
        android.view.View r2;
        boolean $z0;
        android.graphics.drawable.AnimatedVectorDrawable $r3, $r4, $r5, $r6;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: android.widget.ImageButton;

        r2 := @parameter1: android.view.View;

        $z0 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToOverflow>;

        virtualinvoke r1.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r5);

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToOverflow>;

        virtualinvoke $r6.<android.graphics.drawable.AnimatedVectorDrawable: void start()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void closeOverflow()>();

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToArrow>;

        virtualinvoke r1.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r3);

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToArrow>;

        virtualinvoke $r4.<android.graphics.drawable.AnimatedVectorDrawable: void start()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void openOverflow()>();

     label2:
        return;
    }

    public void lambda$createOverflowPanel$2$FloatingToolbar$FloatingToolbarPopup(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel, android.widget.AdapterView, android.view.View, int, long)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.View r1;
        int i0;
        long l1;
        android.widget.ListAdapter $r2;
        java.lang.Object $r3;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel r4;
        android.widget.AdapterView r5;
        android.view.MenuItem r6;
        android.view.MenuItem$OnMenuItemClickListener r7;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r4 := @parameter0: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel;

        r5 := @parameter1: android.widget.AdapterView;

        r1 := @parameter2: android.view.View;

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        $r2 = virtualinvoke r4.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.widget.ListAdapter getAdapter()>();

        $r3 = interfaceinvoke $r2.<android.widget.ListAdapter: java.lang.Object getItem(int)>(i0);

        r6 = (android.view.MenuItem) $r3;

        r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.MenuItem$OnMenuItemClickListener mOnMenuItemClickListener>;

        if r7 == null goto label1;

        interfaceinvoke r7.<android.view.MenuItem$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>(r6);

     label1:
        return;
    }

    public void lambda$new$0$FloatingToolbar$FloatingToolbarPopup(android.view.ViewTreeObserver$InternalInsetsInfo)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.ViewTreeObserver$InternalInsetsInfo r1;
        android.graphics.Rect $r2, $r3;
        android.graphics.Region $r4, $r5;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: android.view.ViewTreeObserver$InternalInsetsInfo;

        $r2 = r1.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Rect contentInsets>;

        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

        $r3 = r1.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Rect visibleInsets>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

        $r5 = r1.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Region touchableRegion>;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Region mTouchableRegion>;

        virtualinvoke $r5.<android.graphics.Region: boolean set(android.graphics.Region)>($r4);

        virtualinvoke r1.<android.view.ViewTreeObserver$InternalInsetsInfo: void setTouchableInsets(int)>(3);

        return;
    }

    public java.util.List layoutMainPanelItems(java.util.List, int)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21;
        java.util.LinkedList $r3, $r4;
        boolean $z0, $z2, $z3, $z4, $z6, z8, z9, z10, z11, z12, $z13;
        android.view.ViewGroup $r5, $r6, $r7, $r10, $r14;
        android.util.Size $r8, $r9, $r12;
        java.lang.Object $r11, $r17;
        java.lang.CharSequence $r13;
        double $d0, $d1, $d2, $d3;
        android.widget.LinearLayout $r16;
        java.util.List r18;
        java.util.Iterator r20;
        android.view.MenuItem r21, r22;
        android.content.Context $r23;
        android.view.View r24;
        android.view.ViewGroup$LayoutParams r25;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r18 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r18);

        i20 = i0;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r20 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r17 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (android.view.MenuItem) $r17;

        $i19 = interfaceinvoke r21.<android.view.MenuItem: int getItemId()>();

        if $i19 == 16908353 goto label02;

        $z6 = interfaceinvoke r21.<android.view.MenuItem: boolean requiresOverflow()>();

        if $z6 == 0 goto label02;

        virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>(r21);

        goto label03;

     label02:
        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r21);

     label03:
        goto label01;

     label04:
        virtualinvoke $r3.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r4);

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r5.<android.view.ViewGroup: void removeAllViews()>();

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r6.<android.view.ViewGroup: void setPaddingRelative(int,int,int,int)>(0, 0, 0, 0);

        z8 = 1;

     label05:
        $z2 = virtualinvoke $r3.<java.util.LinkedList: boolean isEmpty()>();

        if $z2 != 0 goto label19;

        $r11 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object peek()>();

        r22 = (android.view.MenuItem) $r11;

        if z8 != 0 goto label06;

        $z4 = interfaceinvoke r22.<android.view.MenuItem: boolean requiresOverflow()>();

        if $z4 == 0 goto label06;

        goto label19;

     label06:
        if z8 == 0 goto label07;

        $i18 = interfaceinvoke r22.<android.view.MenuItem: int getItemId()>();

        if $i18 != 16908353 goto label07;

        z9 = 1;

        goto label08;

     label07:
        z9 = 0;

     label08:
        $r23 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $i21 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int mIconTextSpacing>;

        r24 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.view.View access$2000(android.content.Context,android.view.MenuItem,int,boolean)>($r23, r22, $i21, z9);

        if z9 != 0 goto label09;

        $z3 = r24 instanceof android.widget.LinearLayout;

        if $z3 == 0 goto label09;

        $r16 = (android.widget.LinearLayout) r24;

        virtualinvoke $r16.<android.widget.LinearLayout: void setGravity(int)>(17);

     label09:
        if z8 == 0 goto label10;

        $i13 = virtualinvoke r24.<android.view.View: int getPaddingStart()>();

        $d2 = (double) $i13;

        $d3 = $d2 * 1.5;

        $i14 = (int) $d3;

        $i15 = virtualinvoke r24.<android.view.View: int getPaddingTop()>();

        $i16 = virtualinvoke r24.<android.view.View: int getPaddingEnd()>();

        $i17 = virtualinvoke r24.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r24.<android.view.View: void setPaddingRelative(int,int,int,int)>($i14, $i15, $i16, $i17);

     label10:
        $i3 = virtualinvoke $r3.<java.util.LinkedList: int size()>();

        if $i3 != 1 goto label11;

        z10 = 1;

        goto label12;

     label11:
        z10 = 0;

     label12:
        if z10 == 0 goto label13;

        $i8 = virtualinvoke r24.<android.view.View: int getPaddingStart()>();

        $i9 = virtualinvoke r24.<android.view.View: int getPaddingTop()>();

        $i10 = virtualinvoke r24.<android.view.View: int getPaddingEnd()>();

        $d0 = (double) $i10;

        $d1 = $d0 * 1.5;

        $i11 = (int) $d1;

        $i12 = virtualinvoke r24.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r24.<android.view.View: void setPaddingRelative(int,int,int,int)>($i8, $i9, $i11, $i12);

        goto label13;

     label13:
        virtualinvoke r24.<android.view.View: void measure(int,int)>(0, 0);

        $i4 = virtualinvoke r24.<android.view.View: int getMeasuredWidth()>();

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i0);

        $r12 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i5 = virtualinvoke $r12.<android.util.Size: int getWidth()>();

        $i6 = i20 - $i5;

        if i1 > $i6 goto label14;

        z11 = 1;

        goto label15;

     label14:
        z11 = 0;

     label15:
        if z10 == 0 goto label16;

        if i1 > i20 goto label16;

        z12 = 1;

        goto label17;

     label16:
        z12 = 0;

     label17:
        if z11 != 0 goto label18;

        if z12 == 0 goto label19;

     label18:
        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setButtonTagAndClickListener(android.view.View,android.view.MenuItem)>(r24, r22);

        $r13 = interfaceinvoke r22.<android.view.MenuItem: java.lang.CharSequence getTooltipText()>();

        virtualinvoke r24.<android.view.View: void setTooltipText(java.lang.CharSequence)>($r13);

        $r14 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r14.<android.view.ViewGroup: void addView(android.view.View)>(r24);

        r25 = virtualinvoke r24.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r25.<android.view.ViewGroup$LayoutParams: int width> = i1;

        virtualinvoke r24.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r25);

        i20 = i20 - i1;

        virtualinvoke $r3.<java.util.LinkedList: java.lang.Object pop()>();

        interfaceinvoke r22.<android.view.MenuItem: int getGroupId()>();

        z8 = 0;

        goto label05;

     label19:
        $z13 = virtualinvoke $r3.<java.util.LinkedList: boolean isEmpty()>();

        if $z13 != 0 goto label20;

        $r10 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r9 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i2 = virtualinvoke $r9.<android.util.Size: int getWidth()>();

        virtualinvoke $r10.<android.view.ViewGroup: void setPaddingRelative(int,int,int,int)>(0, 0, $i2, 0);

     label20:
        $r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r8 = staticinvoke <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size measure(android.view.View)>($r7);

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize> = $r8;

        return $r3;
    }

    public void layoutMenuItems(java.util.List, android.view.MenuItem$OnMenuItemClickListener, int)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.MenuItem$OnMenuItemClickListener r1;
        int i0, $i1;
        boolean $z0;
        java.util.List r2, r3;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r2 := @parameter0: java.util.List;

        r1 := @parameter1: android.view.MenuItem$OnMenuItemClickListener;

        i0 := @parameter2: int;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.MenuItem$OnMenuItemClickListener mOnMenuItemClickListener> = r1;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void cancelOverflowAnimations()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void clearPanels()>();

        $i1 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedToolbarWidth(int)>(i0);

        r3 = virtualinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: java.util.List layoutMainPanelItems(java.util.List,int)>(r2, $i1);

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void layoutOverflowPanelItems(java.util.List)>(r3);

     label1:
        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void updatePopupSize()>();

        return;
    }

    public boolean setOutsideTouchable(boolean, android.widget.PopupWindow$OnDismissListener)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean z0, $z1, $z2, $z3, z4;
        android.widget.PopupWindow$OnDismissListener r1;
        android.widget.PopupWindow $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.widget.PopupWindow$OnDismissListener;

        z4 = 0;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $z1 = virtualinvoke $r2.<android.widget.PopupWindow: boolean isOutsideTouchable()>();

        $z2 = $z1 ^ z0;

        if $z2 == 0 goto label1;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        virtualinvoke $r4.<android.widget.PopupWindow: void setOutsideTouchable(boolean)>(z0);

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $z3 = z0 ^ 1;

        virtualinvoke $r5.<android.widget.PopupWindow: void setFocusable(boolean)>($z3);

        z4 = 1;

     label1:
        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        virtualinvoke $r3.<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>(r1);

        return z4;
    }

    public void show(android.graphics.Rect)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.graphics.Rect r1;
        boolean $z0;
        android.graphics.Point $r3, $r4;
        int $i0, $i1;
        android.view.View $r5;
        android.widget.PopupWindow $r6;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: android.graphics.Rect;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mHidden> = 0;

        r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissed> = 0;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void cancelDismissAndHideAnimations()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void cancelOverflowAnimations()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void refreshCoordinatesAndOverflowDirection(android.graphics.Rect)>(r1);

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void preparePopupContent()>();

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow>;

        $i0 = $r4.<android.graphics.Point: int y>;

        virtualinvoke $r6.<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>($r5, 0, $i1, $i0);

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void setTouchableSurfaceInsetsComputer()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void runShowAnimation()>();

        return;
    }

    public void updateCoordinates(android.graphics.Rect)
    {
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.graphics.Rect r1;
        boolean $z0, $z1;
        android.widget.PopupWindow $r3, $r6, $r7, $r8;
        android.graphics.Point $r4, $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: android.graphics.Rect;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $z1 = virtualinvoke $r3.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void cancelOverflowAnimations()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void refreshCoordinatesAndOverflowDirection(android.graphics.Rect)>(r1);

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void preparePopupContent()>();

        $r7 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow>;

        $i0 = $r4.<android.graphics.Point: int x>;

        $r5 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow>;

        $i1 = $r5.<android.graphics.Point: int y>;

        $r6 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i2 = virtualinvoke $r6.<android.widget.PopupWindow: int getWidth()>();

        $r8 = r0.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i3 = virtualinvoke $r8.<android.widget.PopupWindow: int getHeight()>();

        virtualinvoke $r7.<android.widget.PopupWindow: void update(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int MIN_OVERFLOW_SIZE> = 2;

        <com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: int MAX_OVERFLOW_SIZE> = 4;

        return;
    }
}
