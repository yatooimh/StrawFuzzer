public final class com.android.internal.widget.FloatingToolbar extends java.lang.Object
{
    public static final java.lang.String FLOATING_TOOLBAR_TAG;
    private static final android.view.MenuItem$OnMenuItemClickListener NO_OP_MENUITEM_CLICK_LISTENER;
    private final android.graphics.Rect mContentRect;
    private final android.content.Context mContext;
    private android.view.Menu mMenu;
    private android.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener;
    private final java.util.Comparator mMenuItemComparator;
    private final android.view.View$OnLayoutChangeListener mOrientationChangeHandler;
    private final com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup;
    private final android.graphics.Rect mPreviousContentRect;
    private java.util.List mShowingMenuItems;
    private int mSuggestedWidth;
    private boolean mWidthChanged;
    private final android.view.Window mWindow;

    static void <clinit>()
    {
        com.android.internal.widget.'-$$Lambda$FloatingToolbar$7-enOzxeypZYfdFYr1HzBLfj47k' $r0;
        android.view.MenuItem$OnMenuItemClickListener r1;

        <com.android.internal.widget.FloatingToolbar: java.lang.String FLOATING_TOOLBAR_TAG> = "floating_toolbar";

        $r0 = <com.android.internal.widget._$$Lambda$FloatingToolbar$7_enOzxeypZYfdFYr1HzBLfj47k: com.android.internal.widget.'-$$Lambda$FloatingToolbar$7-enOzxeypZYfdFYr1HzBLfj47k' INSTANCE>;

        r1 = (android.view.MenuItem$OnMenuItemClickListener) $r0;

        <com.android.internal.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener NO_OP_MENUITEM_CLICK_LISTENER> = r1;

        return;
    }

    public void <init>(android.view.Window)
    {
        com.android.internal.widget.FloatingToolbar r0;
        android.view.Window r1, $r11;
        android.view.MenuItem$OnMenuItemClickListener $r5;
        com.android.internal.widget.'-$$Lambda$FloatingToolbar$LutnsyBKrZiroTBekgIjhIyrl40' $r7;
        android.content.Context $r8, $r9, $r13;
        android.view.View $r14;
        android.graphics.Rect r15, r16;
        java.util.ArrayList r17;
        com.android.internal.widget.FloatingToolbar$1 r18;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup r19;
        java.util.Comparator r20;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        r1 := @parameter0: android.view.Window;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r15 = new android.graphics.Rect;

        specialinvoke r15.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.FloatingToolbar: android.graphics.Rect mContentRect> = r15;

        r16 = new android.graphics.Rect;

        specialinvoke r16.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.FloatingToolbar: android.graphics.Rect mPreviousContentRect> = r16;

        r17 = new java.util.ArrayList;

        specialinvoke r17.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.FloatingToolbar: java.util.List mShowingMenuItems> = r17;

        $r5 = <com.android.internal.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener NO_OP_MENUITEM_CLICK_LISTENER>;

        r0.<com.android.internal.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener> = $r5;

        r0.<com.android.internal.widget.FloatingToolbar: boolean mWidthChanged> = 1;

        r18 = new com.android.internal.widget.FloatingToolbar$1;

        specialinvoke r18.<com.android.internal.widget.FloatingToolbar$1: void <init>(com.android.internal.widget.FloatingToolbar)>(r0);

        r0.<com.android.internal.widget.FloatingToolbar: android.view.View$OnLayoutChangeListener mOrientationChangeHandler> = r18;

        $r7 = <com.android.internal.widget._$$Lambda$FloatingToolbar$LutnsyBKrZiroTBekgIjhIyrl40: com.android.internal.widget.'-$$Lambda$FloatingToolbar$LutnsyBKrZiroTBekgIjhIyrl40' INSTANCE>;

        r20 = (java.util.Comparator) $r7;

        r0.<com.android.internal.widget.FloatingToolbar: java.util.Comparator mMenuItemComparator> = r20;

        $r8 = virtualinvoke r1.<android.view.Window: android.content.Context getContext()>();

        $r9 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.content.Context applyDefaultTheme(android.content.Context)>($r8);

        r0.<com.android.internal.widget.FloatingToolbar: android.content.Context mContext> = $r9;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r11 = (android.view.Window) r1;

        r0.<com.android.internal.widget.FloatingToolbar: android.view.Window mWindow> = $r11;

        r19 = new com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup;

        $r13 = r0.<com.android.internal.widget.FloatingToolbar: android.content.Context mContext>;

        $r14 = virtualinvoke r1.<android.view.Window: android.view.View getDecorView()>();

        specialinvoke r19.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void <init>(android.content.Context,android.view.View)>($r13, $r14);

        r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup> = r19;

        return;
    }

    static com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup access$000(com.android.internal.widget.FloatingToolbar)
    {
        com.android.internal.widget.FloatingToolbar r0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup $r1;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        return $r1;
    }

    static boolean access$102(com.android.internal.widget.FloatingToolbar, boolean)
    {
        com.android.internal.widget.FloatingToolbar r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.widget.FloatingToolbar;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.widget.FloatingToolbar: boolean mWidthChanged> = z0;

        return z0;
    }

    static android.animation.AnimatorSet access$1100(android.view.View, int, android.animation.Animator$AnimatorListener)
    {
        android.view.View r0;
        int i0;
        android.animation.Animator$AnimatorListener r1;
        android.animation.AnimatorSet $r2;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 := @parameter2: android.animation.Animator$AnimatorListener;

        $r2 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.animation.AnimatorSet createExitAnimation(android.view.View,int,android.animation.Animator$AnimatorListener)>(r0, i0, r1);

        return $r2;
    }

    static android.view.View access$2000(android.content.Context, android.view.MenuItem, int, boolean)
    {
        android.content.Context r0;
        android.view.MenuItem r1;
        int i0;
        boolean z0;
        android.view.View $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.MenuItem;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r2 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.view.View createMenuItemButton(android.content.Context,android.view.MenuItem,int,boolean)>(r0, r1, i0, z0);

        return $r2;
    }

    static void access$2700(android.view.View, android.view.MenuItem, int, boolean)
    {
        android.view.View r0;
        android.view.MenuItem r1;
        int i0;
        boolean z0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.MenuItem;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        staticinvoke <com.android.internal.widget.FloatingToolbar: void updateMenuItemButton(android.view.View,android.view.MenuItem,int,boolean)>(r0, r1, i0, z0);

        return;
    }

    static android.view.ViewGroup access$600(android.content.Context)
    {
        android.content.Context r0;
        android.view.ViewGroup $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.view.ViewGroup createContentContainer(android.content.Context)>(r0);

        return $r1;
    }

    static android.widget.PopupWindow access$700(android.view.ViewGroup)
    {
        android.view.ViewGroup r0;
        android.widget.PopupWindow $r1;

        r0 := @parameter0: android.view.ViewGroup;

        $r1 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.widget.PopupWindow createPopupWindow(android.view.ViewGroup)>(r0);

        return $r1;
    }

    static android.animation.AnimatorSet access$900(android.view.View)
    {
        android.view.View r0;
        android.animation.AnimatorSet $r1;

        r0 := @parameter0: android.view.View;

        $r1 = staticinvoke <com.android.internal.widget.FloatingToolbar: android.animation.AnimatorSet createEnterAnimation(android.view.View)>(r0);

        return $r1;
    }

    private static android.content.Context applyDefaultTheme(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.TypedArray r1;
        int[] $r2;
        boolean $z0;
        android.view.ContextThemeWrapper $r3;
        int i0;

        r0 := @parameter0: android.content.Context;

        $r2 = newarray (int)[1];

        $r2[0] = 16844176;

        r1 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r2);

        $z0 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        i0 = 16974123;

        goto label2;

     label1:
        i0 = 16974120;

     label2:
        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        $r3 = new android.view.ContextThemeWrapper;

        specialinvoke $r3.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r0, i0);

        return $r3;
    }

    private static android.view.ViewGroup createContentContainer(android.content.Context)
    {
        android.view.LayoutInflater $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.content.Context r3;
        android.view.ViewGroup r4;

        r3 := @parameter0: android.content.Context;

        $r0 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r3);

        $r1 = virtualinvoke $r0.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367159, null);

        r4 = (android.view.ViewGroup) $r1;

        $r2 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r2.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke r4.<android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        virtualinvoke r4.<android.view.ViewGroup: void setTag(java.lang.Object)>("floating_toolbar");

        virtualinvoke r4.<android.view.ViewGroup: void setClipToOutline(boolean)>(1);

        return r4;
    }

    private static android.animation.AnimatorSet createEnterAnimation(android.view.View)
    {
        android.view.View r0;
        android.animation.AnimatorSet $r2;
        android.animation.Animator[] $r3;
        float[] $r4;
        android.util.Property $r5;
        android.animation.ObjectAnimator $r6, $r7;

        r0 := @parameter0: android.view.View;

        $r2 = new android.animation.AnimatorSet;

        specialinvoke $r2.<android.animation.AnimatorSet: void <init>()>();

        $r3 = newarray (android.animation.Animator)[1];

        $r5 = <android.view.View: android.util.Property ALPHA>;

        $r4 = newarray (float)[2];

        $r4[0] = 0.0F;

        $r4[1] = 1.0F;

        $r6 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r5, $r4);

        $r7 = virtualinvoke $r6.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(150L);

        $r3[0] = $r7;

        virtualinvoke $r2.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r3);

        return $r2;
    }

    private static android.animation.AnimatorSet createExitAnimation(android.view.View, int, android.animation.Animator$AnimatorListener)
    {
        android.view.View r0;
        int i0;
        android.animation.Animator$AnimatorListener r1;
        android.animation.AnimatorSet $r3;
        android.animation.Animator[] $r4;
        float[] $r5;
        android.util.Property $r6;
        android.animation.ObjectAnimator $r7, $r8;
        long $l1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 := @parameter2: android.animation.Animator$AnimatorListener;

        $r3 = new android.animation.AnimatorSet;

        specialinvoke $r3.<android.animation.AnimatorSet: void <init>()>();

        $r4 = newarray (android.animation.Animator)[1];

        $r6 = <android.view.View: android.util.Property ALPHA>;

        $r5 = newarray (float)[2];

        $r5[0] = 1.0F;

        $r5[1] = 0.0F;

        $r7 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r6, $r5);

        $r8 = virtualinvoke $r7.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(100L);

        $r4[0] = $r8;

        virtualinvoke $r3.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r4);

        $l1 = (long) i0;

        virtualinvoke $r3.<android.animation.AnimatorSet: void setStartDelay(long)>($l1);

        virtualinvoke $r3.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>(r1);

        return $r3;
    }

    private static android.view.View createMenuItemButton(android.content.Context, android.view.MenuItem, int, boolean)
    {
        android.view.MenuItem r0;
        int i0;
        boolean z0;
        android.view.LayoutInflater $r1;
        android.content.Context r2;
        android.view.View r3;

        r2 := @parameter0: android.content.Context;

        r0 := @parameter1: android.view.MenuItem;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r1 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r2);

        r3 = virtualinvoke $r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367160, null);

        if r0 == null goto label1;

        staticinvoke <com.android.internal.widget.FloatingToolbar: void updateMenuItemButton(android.view.View,android.view.MenuItem,int,boolean)>(r3, r0, i0, z0);

     label1:
        return r3;
    }

    private static android.widget.PopupWindow createPopupWindow(android.view.ViewGroup)
    {
        android.view.ViewGroup r0;
        android.widget.LinearLayout $r3;
        android.content.Context $r4;
        android.widget.PopupWindow $r5;
        android.graphics.drawable.ColorDrawable $r6;
        android.view.ViewGroup$LayoutParams $r7;

        r0 := @parameter0: android.view.ViewGroup;

        $r3 = new android.widget.LinearLayout;

        $r4 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r3.<android.widget.LinearLayout: void <init>(android.content.Context)>($r4);

        $r5 = new android.widget.PopupWindow;

        specialinvoke $r5.<android.widget.PopupWindow: void <init>(android.view.View)>($r3);

        virtualinvoke $r5.<android.widget.PopupWindow: void setClippingEnabled(boolean)>(0);

        virtualinvoke $r5.<android.widget.PopupWindow: void setWindowLayoutType(int)>(1005);

        virtualinvoke $r5.<android.widget.PopupWindow: void setAnimationStyle(int)>(0);

        $r6 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r6.<android.graphics.drawable.ColorDrawable: void <init>(int)>(0);

        virtualinvoke $r5.<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r6);

        $r7 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r7.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke r0.<android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r7);

        virtualinvoke $r3.<android.view.ViewGroup: void addView(android.view.View)>(r0);

        return $r5;
    }

    private void doShow()
    {
        com.android.internal.widget.FloatingToolbar r0;
        java.util.List r1;
        android.view.Menu $r2;
        java.util.Comparator $r3;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup $r4, $r6, $r10, $r12, $r13;
        int $i0;
        android.view.MenuItem$OnMenuItemClickListener $r5;
        android.graphics.Rect $r7, $r8, $r9, $r11, $r14, $r15;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar: android.view.Menu mMenu>;

        r1 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar: java.util.List getVisibleAndEnabledMenuItems(android.view.Menu)>($r2);

        $r3 = r0.<com.android.internal.widget.FloatingToolbar: java.util.Comparator mMenuItemComparator>;

        interfaceinvoke r1.<java.util.List: void sort(java.util.Comparator)>($r3);

        $z0 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar: boolean isCurrentlyShowing(java.util.List)>(r1);

        if $z0 == 0 goto label1;

        $z2 = r0.<com.android.internal.widget.FloatingToolbar: boolean mWidthChanged>;

        if $z2 == 0 goto label2;

     label1:
        $r4 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        virtualinvoke $r4.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void dismiss()>();

        $r6 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $r5 = r0.<com.android.internal.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener>;

        $i0 = r0.<com.android.internal.widget.FloatingToolbar: int mSuggestedWidth>;

        virtualinvoke $r6.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void layoutMenuItems(java.util.List,android.view.MenuItem$OnMenuItemClickListener,int)>(r1, $r5, $i0);

        r0.<com.android.internal.widget.FloatingToolbar: java.util.List mShowingMenuItems> = r1;

     label2:
        $r13 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $z3 = virtualinvoke $r13.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        if $z3 != 0 goto label3;

        $r12 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $r11 = r0.<com.android.internal.widget.FloatingToolbar: android.graphics.Rect mContentRect>;

        virtualinvoke $r12.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void show(android.graphics.Rect)>($r11);

        goto label4;

     label3:
        $r8 = r0.<com.android.internal.widget.FloatingToolbar: android.graphics.Rect mPreviousContentRect>;

        $r7 = r0.<com.android.internal.widget.FloatingToolbar: android.graphics.Rect mContentRect>;

        $z1 = virtualinvoke $r8.<android.graphics.Rect: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label4;

        $r10 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $r9 = r0.<com.android.internal.widget.FloatingToolbar: android.graphics.Rect mContentRect>;

        virtualinvoke $r10.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void updateCoordinates(android.graphics.Rect)>($r9);

     label4:
        r0.<com.android.internal.widget.FloatingToolbar: boolean mWidthChanged> = 0;

        $r14 = r0.<com.android.internal.widget.FloatingToolbar: android.graphics.Rect mPreviousContentRect>;

        $r15 = r0.<com.android.internal.widget.FloatingToolbar: android.graphics.Rect mContentRect>;

        virtualinvoke $r14.<android.graphics.Rect: void set(android.graphics.Rect)>($r15);

        return;
    }

    private java.util.List getVisibleAndEnabledMenuItems(android.view.Menu)
    {
        com.android.internal.widget.FloatingToolbar r0;
        android.view.Menu r1;
        android.view.MenuItem r3;
        android.view.SubMenu r4;
        java.util.ArrayList $r5;
        int $i0, i1;
        boolean $z0, $z1;
        java.util.List $r6;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        r1 := @parameter0: android.view.Menu;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        if r1 == null goto label4;

        $i0 = interfaceinvoke r1.<android.view.Menu: int size()>();

        if i1 >= $i0 goto label4;

        r3 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem getItem(int)>(i1);

        $z0 = interfaceinvoke r3.<android.view.MenuItem: boolean isVisible()>();

        if $z0 == 0 goto label3;

        $z1 = interfaceinvoke r3.<android.view.MenuItem: boolean isEnabled()>();

        if $z1 == 0 goto label3;

        r4 = interfaceinvoke r3.<android.view.MenuItem: android.view.SubMenu getSubMenu()>();

        if r4 == null goto label2;

        $r6 = specialinvoke r0.<com.android.internal.widget.FloatingToolbar: java.util.List getVisibleAndEnabledMenuItems(android.view.Menu)>(r4);

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        goto label3;

     label2:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return $r5;
    }

    private boolean isCurrentlyShowing(java.util.List)
    {
        com.android.internal.widget.FloatingToolbar r0;
        java.util.List r1, $r4, $r5, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.view.MenuItem r2, r3;
        java.lang.Object $r6, $r8;
        java.lang.CharSequence $r9, $r10;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r11, $r12;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<com.android.internal.widget.FloatingToolbar: java.util.List mShowingMenuItems>;

        if $r4 == null goto label6;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r5 = r0.<com.android.internal.widget.FloatingToolbar: java.util.List mShowingMenuItems>;

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 == $i2 goto label1;

        goto label6;

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i7 = 0;

     label2:
        if i7 >= i0 goto label5;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        r2 = (android.view.MenuItem) $r6;

        $r7 = r0.<com.android.internal.widget.FloatingToolbar: java.util.List mShowingMenuItems>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i7);

        r3 = (android.view.MenuItem) $r8;

        $i3 = interfaceinvoke r2.<android.view.MenuItem: int getItemId()>();

        $i4 = interfaceinvoke r3.<android.view.MenuItem: int getItemId()>();

        if $i3 != $i4 goto label4;

        $r9 = interfaceinvoke r2.<android.view.MenuItem: java.lang.CharSequence getTitle()>();

        $r10 = interfaceinvoke r3.<android.view.MenuItem: java.lang.CharSequence getTitle()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r9, $r10);

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r2.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        $r12 = interfaceinvoke r3.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r11, $r12);

        if $z1 == 0 goto label4;

        $i5 = interfaceinvoke r2.<android.view.MenuItem: int getGroupId()>();

        $i6 = interfaceinvoke r3.<android.view.MenuItem: int getGroupId()>();

        if $i5 == $i6 goto label3;

        goto label4;

     label3:
        i7 = i7 + 1;

        goto label2;

     label4:
        return 0;

     label5:
        return 1;

     label6:
        return 0;
    }

    static int lambda$new$1(android.view.MenuItem, android.view.MenuItem)
    {
        android.view.MenuItem r0, r1;
        int i0, $i2, $i3, $i4, $i5, $i6, i8, i9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        byte b7;

        r0 := @parameter0: android.view.MenuItem;

        r1 := @parameter1: android.view.MenuItem;

        i0 = interfaceinvoke r0.<android.view.MenuItem: int getItemId()>();

        b7 = 0;

        if i0 != 16908353 goto label03;

        $i6 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        if $i6 != 16908353 goto label01;

        goto label02;

     label01:
        b7 = -1;

     label02:
        return b7;

     label03:
        $i2 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        if $i2 != 16908353 goto label04;

        return 1;

     label04:
        $z0 = interfaceinvoke r0.<android.view.MenuItem: boolean requiresActionButton()>();

        if $z0 == 0 goto label07;

        $z6 = interfaceinvoke r1.<android.view.MenuItem: boolean requiresActionButton()>();

        if $z6 == 0 goto label05;

        i8 = 0;

        goto label06;

     label05:
        i8 = -1;

     label06:
        return i8;

     label07:
        $z1 = interfaceinvoke r1.<android.view.MenuItem: boolean requiresActionButton()>();

        if $z1 == 0 goto label08;

        return 1;

     label08:
        $z2 = interfaceinvoke r0.<android.view.MenuItem: boolean requiresOverflow()>();

        if $z2 == 0 goto label09;

        $z4 = interfaceinvoke r1.<android.view.MenuItem: boolean requiresOverflow()>();

        $z5 = $z4 ^ 1;

        i9 = (int) $z5;

        return i9;

     label09:
        $z3 = interfaceinvoke r1.<android.view.MenuItem: boolean requiresOverflow()>();

        if $z3 == 0 goto label10;

        return -1;

     label10:
        $i3 = interfaceinvoke r0.<android.view.MenuItem: int getOrder()>();

        $i4 = interfaceinvoke r1.<android.view.MenuItem: int getOrder()>();

        $i5 = $i3 - $i4;

        return $i5;
    }

    static boolean lambda$static$0(android.view.MenuItem)
    {
        android.view.MenuItem r0;

        r0 := @parameter0: android.view.MenuItem;

        return 0;
    }

    private void registerOrientationHandler()
    {
        com.android.internal.widget.FloatingToolbar r0;
        android.view.Window $r1;
        android.view.View $r2;
        android.view.View$OnLayoutChangeListener $r3;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar: void unregisterOrientationHandler()>();

        $r1 = r0.<com.android.internal.widget.FloatingToolbar: android.view.Window mWindow>;

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        $r3 = r0.<com.android.internal.widget.FloatingToolbar: android.view.View$OnLayoutChangeListener mOrientationChangeHandler>;

        virtualinvoke $r2.<android.view.View: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>($r3);

        return;
    }

    private void unregisterOrientationHandler()
    {
        com.android.internal.widget.FloatingToolbar r0;
        android.view.Window $r1;
        android.view.View $r2;
        android.view.View$OnLayoutChangeListener $r3;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar: android.view.Window mWindow>;

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        $r3 = r0.<com.android.internal.widget.FloatingToolbar: android.view.View$OnLayoutChangeListener mOrientationChangeHandler>;

        virtualinvoke $r2.<android.view.View: void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>($r3);

        return;
    }

    private static void updateMenuItemButton(android.view.View, android.view.MenuItem, int, boolean)
    {
        android.view.View r0, $r3, $r6;
        android.view.MenuItem r1;
        int i0;
        boolean z0, $z1, $z2;
        android.widget.TextView r2;
        java.lang.CharSequence $r4, $r5, $r8, r11;
        android.graphics.drawable.Drawable $r7, $r9;
        android.widget.ImageView r10;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.MenuItem;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = virtualinvoke r0.<android.view.View: android.view.View findViewById(int)>(16909009);

        r2 = (android.widget.TextView) $r3;

        virtualinvoke r2.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>(null);

        $r4 = interfaceinvoke r1.<android.view.MenuItem: java.lang.CharSequence getTitle()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z1 == 0 goto label1;

        virtualinvoke r2.<android.widget.TextView: void setVisibility(int)>(8);

        goto label2;

     label1:
        virtualinvoke r2.<android.widget.TextView: void setVisibility(int)>(0);

        $r5 = interfaceinvoke r1.<android.view.MenuItem: java.lang.CharSequence getTitle()>();

        virtualinvoke r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r5);

     label2:
        $r6 = virtualinvoke r0.<android.view.View: android.view.View findViewById(int)>(16909007);

        r10 = (android.widget.ImageView) $r6;

        $r7 = interfaceinvoke r1.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        if $r7 == null goto label4;

        if z0 != 0 goto label3;

        goto label4;

     label3:
        virtualinvoke r10.<android.widget.ImageView: void setVisibility(int)>(0);

        $r9 = interfaceinvoke r1.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke r10.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r9);

        if r2 == null goto label5;

        virtualinvoke r2.<android.widget.TextView: void setPaddingRelative(int,int,int,int)>(i0, 0, 0, 0);

        goto label5;

     label4:
        virtualinvoke r10.<android.widget.ImageView: void setVisibility(int)>(8);

        if r2 == null goto label5;

        virtualinvoke r2.<android.widget.TextView: void setPaddingRelative(int,int,int,int)>(0, 0, 0, 0);

     label5:
        r11 = interfaceinvoke r1.<android.view.MenuItem: java.lang.CharSequence getContentDescription()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r11);

        if $z2 == 0 goto label6;

        $r8 = interfaceinvoke r1.<android.view.MenuItem: java.lang.CharSequence getTitle()>();

        virtualinvoke r0.<android.view.View: void setContentDescription(java.lang.CharSequence)>($r8);

        goto label7;

     label6:
        virtualinvoke r0.<android.view.View: void setContentDescription(java.lang.CharSequence)>(r11);

     label7:
        return;
    }

    public void dismiss()
    {
        com.android.internal.widget.FloatingToolbar r0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup $r1;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar: void unregisterOrientationHandler()>();

        $r1 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        virtualinvoke $r1.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void dismiss()>();

        return;
    }

    public void hide()
    {
        com.android.internal.widget.FloatingToolbar r0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup $r1;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        virtualinvoke $r1.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: void hide()>();

        return;
    }

    public boolean isHidden()
    {
        com.android.internal.widget.FloatingToolbar r0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $z0 = virtualinvoke $r1.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isHidden()>();

        return $z0;
    }

    public boolean isShowing()
    {
        com.android.internal.widget.FloatingToolbar r0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $z0 = virtualinvoke $r1.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        return $z0;
    }

    public com.android.internal.widget.FloatingToolbar setContentRect(android.graphics.Rect)
    {
        com.android.internal.widget.FloatingToolbar r0;
        android.graphics.Rect r1, r2, $r4;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<com.android.internal.widget.FloatingToolbar: android.graphics.Rect mContentRect>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = (android.graphics.Rect) r1;

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r4);

        return r0;
    }

    public com.android.internal.widget.FloatingToolbar setMenu(android.view.Menu)
    {
        com.android.internal.widget.FloatingToolbar r0;
        android.view.Menu r1, $r3;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        r1 := @parameter0: android.view.Menu;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (android.view.Menu) r1;

        r0.<com.android.internal.widget.FloatingToolbar: android.view.Menu mMenu> = $r3;

        return r0;
    }

    public com.android.internal.widget.FloatingToolbar setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
    {
        com.android.internal.widget.FloatingToolbar r0;
        android.view.MenuItem$OnMenuItemClickListener r1, $r2;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        r1 := @parameter0: android.view.MenuItem$OnMenuItemClickListener;

        if r1 == null goto label1;

        r0.<com.android.internal.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener> = r1;

        goto label2;

     label1:
        $r2 = <com.android.internal.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener NO_OP_MENUITEM_CLICK_LISTENER>;

        r0.<com.android.internal.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener> = $r2;

     label2:
        return r0;
    }

    public void setOutsideTouchable(boolean, android.widget.PopupWindow$OnDismissListener)
    {
        com.android.internal.widget.FloatingToolbar r0;
        boolean z0, $z1, $z2;
        android.widget.PopupWindow$OnDismissListener r1;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup $r2;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.widget.PopupWindow$OnDismissListener;

        $r2 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $z1 = virtualinvoke $r2.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean setOutsideTouchable(boolean,android.widget.PopupWindow$OnDismissListener)>(z0, r1);

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<com.android.internal.widget.FloatingToolbar: boolean isShowing()>();

        if $z2 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.widget.FloatingToolbar: void dismiss()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar: void doShow()>();

     label1:
        return;
    }

    public com.android.internal.widget.FloatingToolbar setSuggestedWidth(int)
    {
        com.android.internal.widget.FloatingToolbar r0;
        int i0, $i1, $i2, $i3, $i4;
        double $d0, $d1, $d2;
        byte $b5;
        boolean z0;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.FloatingToolbar: int mSuggestedWidth>;

        $i2 = i0 - $i1;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $d2 = (double) $i3;

        $i4 = r0.<com.android.internal.widget.FloatingToolbar: int mSuggestedWidth>;

        $d0 = (double) $i4;

        $d1 = $d0 * 0.2;

        $b5 = $d2 cmpl $d1;

        if $b5 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<com.android.internal.widget.FloatingToolbar: boolean mWidthChanged> = z0;

        r0.<com.android.internal.widget.FloatingToolbar: int mSuggestedWidth> = i0;

        return r0;
    }

    public com.android.internal.widget.FloatingToolbar show()
    {
        com.android.internal.widget.FloatingToolbar r0;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar: void registerOrientationHandler()>();

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar: void doShow()>();

        return r0;
    }

    public com.android.internal.widget.FloatingToolbar updateLayout()
    {
        com.android.internal.widget.FloatingToolbar r0;
        com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.FloatingToolbar;

        $r1 = r0.<com.android.internal.widget.FloatingToolbar: com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $z0 = virtualinvoke $r1.<com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.FloatingToolbar: void doShow()>();

     label1:
        return r0;
    }
}
