public class com.android.internal.widget.GridLayoutManager extends com.android.internal.widget.LinearLayoutManager
{
    private static final boolean DEBUG;
    public static final int DEFAULT_SPAN_COUNT;
    private static final java.lang.String TAG;
    int[] mCachedBorders;
    final android.graphics.Rect mDecorInsets;
    boolean mPendingSpanCountChange;
    final android.util.SparseIntArray mPreLayoutSpanIndexCache;
    final android.util.SparseIntArray mPreLayoutSpanSizeCache;
    android.view.View[] mSet;
    int mSpanCount;
    com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup;

    public void <init>(android.content.Context, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        android.content.Context r1;
        int i0;
        android.util.SparseIntArray $r2, $r3;
        com.android.internal.widget.GridLayoutManager$DefaultSpanSizeLookup $r4;
        android.graphics.Rect $r5;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.widget.LinearLayoutManager: void <init>(android.content.Context)>(r1);

        r0.<com.android.internal.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

        r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount> = -1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache> = $r2;

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache> = $r3;

        $r4 = new com.android.internal.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke $r4.<com.android.internal.widget.GridLayoutManager$DefaultSpanSizeLookup: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: android.graphics.Rect mDecorInsets> = $r5;

        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void setSpanCount(int)>(i0);

        return;
    }

    public void <init>(android.content.Context, int, int, boolean)
    {
        com.android.internal.widget.GridLayoutManager r0;
        android.content.Context r1;
        int i0, i1;
        boolean z0;
        android.util.SparseIntArray $r2, $r3;
        com.android.internal.widget.GridLayoutManager$DefaultSpanSizeLookup $r4;
        android.graphics.Rect $r5;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.internal.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>(r1, i1, z0);

        r0.<com.android.internal.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

        r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount> = -1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache> = $r2;

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache> = $r3;

        $r4 = new com.android.internal.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke $r4.<com.android.internal.widget.GridLayoutManager$DefaultSpanSizeLookup: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: android.graphics.Rect mDecorInsets> = $r5;

        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void setSpanCount(int)>(i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2;
        android.util.SparseIntArray $r3, $r4;
        com.android.internal.widget.GridLayoutManager$DefaultSpanSizeLookup $r5;
        android.graphics.Rect $r6;
        com.android.internal.widget.RecyclerView$LayoutManager$Properties $r7;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.internal.widget.LinearLayoutManager: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<com.android.internal.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

        r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount> = -1;

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache> = $r3;

        $r4 = new android.util.SparseIntArray;

        specialinvoke $r4.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache> = $r4;

        $r5 = new com.android.internal.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke $r5.<com.android.internal.widget.GridLayoutManager$DefaultSpanSizeLookup: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.GridLayoutManager: android.graphics.Rect mDecorInsets> = $r6;

        $r7 = staticinvoke <com.android.internal.widget.GridLayoutManager: com.android.internal.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $i2 = $r7.<com.android.internal.widget.RecyclerView$LayoutManager$Properties: int spanCount>;

        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void setSpanCount(int)>($i2);

        return;
    }

    private void assignSpans(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, int, int, boolean)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        boolean z0;
        android.view.View r3;
        com.android.internal.widget.GridLayoutManager$LayoutParams r4;
        android.view.View[] $r5;
        android.view.ViewGroup$LayoutParams $r6;
        int $i0, $i1, $i2, i3, i4, i6, i8, i9;
        byte b7;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        i3 := @parameter2: int;

        i4 := @parameter3: int;

        z0 := @parameter4: boolean;

        if z0 == 0 goto label1;

        i6 = i3;

        b7 = 1;

        i8 = 0;

        goto label2;

     label1:
        i8 = i3 + -1;

        i6 = -1;

        b7 = -1;

     label2:
        i9 = 0;

     label3:
        if i8 == i6 goto label4;

        $r5 = r0.<com.android.internal.widget.GridLayoutManager: android.view.View[] mSet>;

        r3 = $r5[i8];

        $r6 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (com.android.internal.widget.GridLayoutManager$LayoutParams) $r6;

        $i0 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPosition(android.view.View)>(r3);

        $i1 = specialinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpanSize(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int)>(r1, r2, $i0);

        r4.<com.android.internal.widget.GridLayoutManager$LayoutParams: int mSpanSize> = $i1;

        r4.<com.android.internal.widget.GridLayoutManager$LayoutParams: int mSpanIndex> = i9;

        $i2 = r4.<com.android.internal.widget.GridLayoutManager$LayoutParams: int mSpanSize>;

        i9 = i9 + $i2;

        i8 = i8 + b7;

        goto label3;

     label4:
        return;
    }

    private void cachePreLayoutSpanMapping()
    {
        com.android.internal.widget.GridLayoutManager r0;
        int i0, i1, $i2, $i3, i4;
        com.android.internal.widget.GridLayoutManager$LayoutParams r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.util.SparseIntArray $r4, $r5;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        i0 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getChildCount()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r2 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: android.view.View getChildAt(int)>(i4);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (com.android.internal.widget.GridLayoutManager$LayoutParams) $r3;

        i1 = virtualinvoke r1.<com.android.internal.widget.GridLayoutManager$LayoutParams: int getViewLayoutPosition()>();

        $r4 = r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        $i2 = virtualinvoke r1.<com.android.internal.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        virtualinvoke $r4.<android.util.SparseIntArray: void put(int,int)>(i1, $i2);

        $r5 = r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        $i3 = virtualinvoke r1.<com.android.internal.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>(i1, $i3);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    private void calculateItemBorders(int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        int i0, $i1;
        int[] $r1, $r2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.GridLayoutManager: int[] mCachedBorders>;

        $i1 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        $r2 = staticinvoke <com.android.internal.widget.GridLayoutManager: int[] calculateItemBorders(int[],int,int)>($r1, $i1, i0);

        r0.<com.android.internal.widget.GridLayoutManager: int[] mCachedBorders> = $r2;

        return;
    }

    static int[] calculateItemBorders(int[], int, int)
    {
        int[] r0, r1;
        int i0, i1, i2, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, i13, i14, i15, i16;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i11 := @parameter2: int;

        if r0 == null goto label1;

        $i7 = lengthof r0;

        $i6 = i0 + 1;

        if $i7 != $i6 goto label1;

        r1 = r0;

        $i8 = lengthof r0;

        $i9 = $i8 - 1;

        $i10 = r0[$i9];

        if $i10 == i11 goto label2;

     label1:
        $i12 = i0 + 1;

        r1 = newarray (int)[$i12];

     label2:
        r1[0] = 0;

        i1 = i11 / i0;

        i2 = i11 % i0;

        i13 = 0;

        i14 = 0;

        i15 = 1;

     label3:
        if i15 > i0 goto label5;

        i4 = i14 + i2;

        i14 = i4;

        i16 = i1;

        if i4 <= 0 goto label4;

        i14 = i4;

        i16 = i1;

        $i5 = i0 - i4;

        if $i5 >= i2 goto label4;

        i16 = i1 + 1;

        i14 = i4 - i0;

     label4:
        i13 = i13 + i16;

        r1[i15] = i13;

        i15 = i15 + 1;

        goto label3;

     label5:
        return r1;
    }

    private void clearPreLayoutSpanMappingCache()
    {
        com.android.internal.widget.GridLayoutManager r0;
        android.util.SparseIntArray $r1, $r2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        $r1 = r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        virtualinvoke $r1.<android.util.SparseIntArray: void clear()>();

        $r2 = r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        virtualinvoke $r2.<android.util.SparseIntArray: void clear()>();

        return;
    }

    private void ensureAnchorIsInCorrectSpan(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, com.android.internal.widget.LinearLayoutManager$AnchorInfo, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        com.android.internal.widget.LinearLayoutManager$AnchorInfo r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13;
        boolean z0;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        r3 := @parameter2: com.android.internal.widget.LinearLayoutManager$AnchorInfo;

        i8 := @parameter3: int;

        if i8 != 1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $i1 = r3.<com.android.internal.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        i9 = specialinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpanIndex(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int)>(r1, r2, $i1);

        if z0 == 0 goto label4;

     label3:
        if i9 <= 0 goto label7;

        $i4 = r3.<com.android.internal.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        if $i4 <= 0 goto label7;

        $i5 = r3.<com.android.internal.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i6 = $i5 - 1;

        r3.<com.android.internal.widget.LinearLayoutManager$AnchorInfo: int mPosition> = $i6;

        $i7 = r3.<com.android.internal.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        i9 = specialinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpanIndex(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int)>(r1, r2, $i7);

        goto label3;

     label4:
        i0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$State: int getItemCount()>();

        i10 = r3.<com.android.internal.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        i11 = i9;

        i12 = i10;

     label5:
        $i2 = i0 - 1;

        if i12 >= $i2 goto label6;

        $i3 = i12 + 1;

        i13 = specialinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpanIndex(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int)>(r1, r2, $i3);

        if i13 <= i11 goto label6;

        i12 = i12 + 1;

        i11 = i13;

        goto label5;

     label6:
        r3.<com.android.internal.widget.LinearLayoutManager$AnchorInfo: int mPosition> = i12;

     label7:
        return;
    }

    private void ensureViewSet()
    {
        com.android.internal.widget.GridLayoutManager r0;
        android.view.View[] r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 = r0.<com.android.internal.widget.GridLayoutManager: android.view.View[] mSet>;

        if r1 == null goto label1;

        $i2 = lengthof r1;

        $i1 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        if $i2 == $i1 goto label2;

     label1:
        $i0 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        $r2 = newarray (android.view.View)[$i0];

        r0.<com.android.internal.widget.GridLayoutManager: android.view.View[] mSet> = $r2;

     label2:
        return;
    }

    private int getSpanGroupIndex(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;
        int i0, i1, $i2, $i3, $i5, $i6;
        boolean $z0;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup $r2, $r7;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        com.android.internal.widget.RecyclerView$Recycler r8;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r8 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$State;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i5 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        $i6 = virtualinvoke $r7.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)>(i0, $i5);

        return $i6;

     label1:
        i1 = virtualinvoke r8.<com.android.internal.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>(i0);

        if i1 != -1 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r6);

        return 0;

     label2:
        $r2 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i2 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        $i3 = virtualinvoke $r2.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)>(i1, $i2);

        return $i3;
    }

    private int getSpanIndex(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;
        int i0, $i1, $i2, $i4, $i5, i6, i7;
        boolean $z0;
        android.util.SparseIntArray $r2;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup $r3, $r8;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        com.android.internal.widget.RecyclerView$Recycler r9;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r9 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$State;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r8 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i4 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        $i5 = virtualinvoke $r8.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)>(i0, $i4);

        return $i5;

     label1:
        $r2 = r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        i6 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i6 == -1 goto label2;

        return i6;

     label2:
        i7 = virtualinvoke r9.<com.android.internal.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>(i0);

        if i7 != -1 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. It is not cached, not in the adapter. Pos:");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r7);

        return 0;

     label3:
        $r3 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i1 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        $i2 = virtualinvoke $r3.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)>(i7, $i1);

        return $i2;
    }

    private int getSpanSize(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;
        int i0, $i1, $i3, i4, i5;
        boolean $z0;
        android.util.SparseIntArray $r2;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup $r3, $r8;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        com.android.internal.widget.RecyclerView$Recycler r9;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r9 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$State;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r8 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i3 = virtualinvoke $r8.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i0);

        return $i3;

     label1:
        $r2 = r0.<com.android.internal.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        i4 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i4 == -1 goto label2;

        return i4;

     label2:
        i5 = virtualinvoke r9.<com.android.internal.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>(i0);

        if i5 != -1 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. It is not cached, not in the adapter. Pos:");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r7);

        return 1;

     label3:
        $r3 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i1 = virtualinvoke $r3.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i5);

        return $i1;
    }

    private void guessMeasurement(float, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        float f0, $f1, $f2;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        $i1 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        $f1 = (float) $i1;

        $f2 = $f1 * f0;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, i0);

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void calculateItemBorders(int)>($i3);

        return;
    }

    private void measureChild(android.view.View, int, boolean)
    {
        com.android.internal.widget.GridLayoutManager r0;
        android.view.View r1;
        boolean z0;
        com.android.internal.widget.GridLayoutManager$LayoutParams r2;
        android.graphics.Rect r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28;
        android.view.ViewGroup$LayoutParams $r4;
        com.android.internal.widget.OrientationHelper $r5, $r6;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        i25 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.widget.GridLayoutManager$LayoutParams) $r4;

        r3 = r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i3 = r3.<android.graphics.Rect: int top>;

        $i2 = r3.<android.graphics.Rect: int bottom>;

        $i5 = $i3 + $i2;

        $i4 = r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: int topMargin>;

        $i7 = $i5 + $i4;

        $i6 = r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: int bottomMargin>;

        i0 = $i7 + $i6;

        $i9 = r3.<android.graphics.Rect: int left>;

        $i8 = r3.<android.graphics.Rect: int right>;

        $i11 = $i9 + $i8;

        $i10 = r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: int leftMargin>;

        $i13 = $i11 + $i10;

        $i12 = r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: int rightMargin>;

        i26 = $i13 + $i12;

        $i15 = r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i14 = r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: int mSpanSize>;

        i1 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpaceForSpanRange(int,int)>($i15, $i14);

        $i16 = r0.<com.android.internal.widget.GridLayoutManager: int mOrientation>;

        if $i16 != 1 goto label1;

        $i21 = r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: int width>;

        i27 = staticinvoke <com.android.internal.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>(i1, i25, i26, $i21, 0);

        $r6 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        $i22 = virtualinvoke $r6.<com.android.internal.widget.OrientationHelper: int getTotalSpace()>();

        $i23 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getHeightMode()>();

        $i24 = r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: int height>;

        i28 = staticinvoke <com.android.internal.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i22, $i23, i0, $i24, 1);

        goto label2;

     label1:
        $i17 = r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: int height>;

        i28 = staticinvoke <com.android.internal.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>(i1, i25, i0, $i17, 0);

        $r5 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        $i18 = virtualinvoke $r5.<com.android.internal.widget.OrientationHelper: int getTotalSpace()>();

        $i19 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getWidthMode()>();

        $i20 = r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: int width>;

        i27 = staticinvoke <com.android.internal.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i18, $i19, i26, $i20, 1);

     label2:
        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)>(r1, i27, i28, z0);

        return;
    }

    private void measureChildWithDecorationsAndMargin(android.view.View, int, int, boolean)
    {
        com.android.internal.widget.GridLayoutManager r0;
        android.view.View r1;
        int i0, i1;
        com.android.internal.widget.RecyclerView$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean z0, z1;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.widget.RecyclerView$LayoutParams) $r3;

        if z0 == 0 goto label1;

        z1 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: boolean shouldReMeasureChild(android.view.View,int,int,com.android.internal.widget.RecyclerView$LayoutParams)>(r1, i0, i1, r2);

        goto label2;

     label1:
        z1 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: boolean shouldMeasureChild(android.view.View,int,int,com.android.internal.widget.RecyclerView$LayoutParams)>(r1, i0, i1, r2);

     label2:
        if z1 == 0 goto label3;

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i0, i1);

     label3:
        return;
    }

    private void updateMeasurements()
    {
        com.android.internal.widget.GridLayoutManager r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        $i0 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getOrientation()>();

        if $i0 != 1 goto label1;

        $i5 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getWidth()>();

        $i6 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPaddingRight()>();

        $i7 = $i5 - $i6;

        $i8 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPaddingLeft()>();

        i9 = $i7 - $i8;

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getHeight()>();

        $i2 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPaddingBottom()>();

        $i3 = $i1 - $i2;

        $i4 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPaddingTop()>();

        i9 = $i3 - $i4;

     label2:
        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void calculateItemBorders(int)>(i9);

        return;
    }

    public boolean checkLayoutParams(com.android.internal.widget.RecyclerView$LayoutParams)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$LayoutParams r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$LayoutParams;

        $z0 = r1 instanceof com.android.internal.widget.GridLayoutManager$LayoutParams;

        return $z0;
    }

    void collectPrefetchPositionsForLayoutState(com.android.internal.widget.RecyclerView$State, com.android.internal.widget.LinearLayoutManager$LayoutState, com.android.internal.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;
        com.android.internal.widget.LinearLayoutManager$LayoutState r2;
        com.android.internal.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        boolean $z0;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup $r4;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$State;

        r2 := @parameter1: com.android.internal.widget.LinearLayoutManager$LayoutState;

        r3 := @parameter2: com.android.internal.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        i8 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        i9 = 0;

     label1:
        $i1 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        if i9 >= $i1 goto label2;

        $z0 = virtualinvoke r2.<com.android.internal.widget.LinearLayoutManager$LayoutState: boolean hasMore(com.android.internal.widget.RecyclerView$State)>(r1);

        if $z0 == 0 goto label2;

        if i8 <= 0 goto label2;

        i0 = r2.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i2 = r2.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        interfaceinvoke r3.<com.android.internal.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)>(i0, $i3);

        $r4 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i4 = virtualinvoke $r4.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i0);

        i8 = i8 - $i4;

        $i6 = r2.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i5 = r2.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $i7 = $i6 + $i5;

        r2.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i7;

        i9 = i9 + 1;

        goto label1;

     label2:
        return;
    }

    android.view.View findReferenceChild(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, int, int, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, i8;
        android.view.View r3, r10, r11, r12, r13;
        com.android.internal.widget.OrientationHelper $r4, $r5, $r8, $r9;
        android.view.ViewGroup$LayoutParams $r6;
        com.android.internal.widget.RecyclerView$LayoutParams $r7;
        boolean $z0;
        byte b9;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        i8 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void ensureLayoutState()>();

        r10 = null;

        r11 = null;

        $r4 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        i2 = virtualinvoke $r4.<com.android.internal.widget.OrientationHelper: int getStartAfterPadding()>();

        $r5 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        i3 = virtualinvoke $r5.<com.android.internal.widget.OrientationHelper: int getEndAfterPadding()>();

        if i0 <= i8 goto label01;

        b9 = 1;

        goto label02;

     label01:
        b9 = -1;

     label02:
        if i8 == i0 goto label08;

        r3 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: android.view.View getChildAt(int)>(i8);

        i4 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPosition(android.view.View)>(r3);

        r12 = r10;

        r13 = r11;

        if i4 < 0 goto label07;

        r12 = r10;

        r13 = r11;

        if i4 >= i1 goto label07;

        $i5 = specialinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpanIndex(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int)>(r1, r2, i4);

        if $i5 == 0 goto label03;

        r12 = r10;

        r13 = r11;

        goto label07;

     label03:
        $r6 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (com.android.internal.widget.RecyclerView$LayoutParams) $r6;

        $z0 = virtualinvoke $r7.<com.android.internal.widget.RecyclerView$LayoutParams: boolean isItemRemoved()>();

        if $z0 == 0 goto label04;

        r12 = r10;

        r13 = r11;

        if r10 != null goto label07;

        r12 = r3;

        r13 = r11;

        goto label07;

     label04:
        $r8 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r8.<com.android.internal.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r3);

        if $i6 >= i3 goto label06;

        $r9 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        $i7 = virtualinvoke $r9.<com.android.internal.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r3);

        if $i7 >= i2 goto label05;

        goto label06;

     label05:
        return r3;

     label06:
        r12 = r10;

        r13 = r11;

        if r11 != null goto label07;

        r13 = r3;

        r12 = r10;

     label07:
        i8 = i8 + b9;

        r10 = r12;

        r11 = r13;

        goto label02;

     label08:
        if r11 == null goto label09;

        goto label10;

     label09:
        r11 = r10;

     label10:
        return r11;
    }

    public com.android.internal.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
    {
        com.android.internal.widget.GridLayoutManager r0;
        int $i0;
        com.android.internal.widget.GridLayoutManager$LayoutParams $r1, $r2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        $i0 = r0.<com.android.internal.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $r2 = new com.android.internal.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: void <init>(int,int)>(-2, -1);

        return $r2;

     label1:
        $r1 = new com.android.internal.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r1.<com.android.internal.widget.GridLayoutManager$LayoutParams: void <init>(int,int)>(-1, -2);

        return $r1;
    }

    public com.android.internal.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.GridLayoutManager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        com.android.internal.widget.GridLayoutManager$LayoutParams $r3;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = new com.android.internal.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r3.<com.android.internal.widget.GridLayoutManager$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return $r3;
    }

    public com.android.internal.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.GridLayoutManager r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;
        com.android.internal.widget.GridLayoutManager$LayoutParams $r2, $r3;
        android.view.ViewGroup$MarginLayoutParams $r4;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label1;

        $r3 = new com.android.internal.widget.GridLayoutManager$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<com.android.internal.widget.GridLayoutManager$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label1:
        $r2 = new com.android.internal.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r2.<com.android.internal.widget.GridLayoutManager$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public int getColumnCountForAccessibility(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        $i0 = r0.<com.android.internal.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 1 goto label1;

        $i6 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        return $i6;

     label1:
        $i1 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$State: int getItemCount()>();

        if $i1 >= 1 goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$State: int getItemCount()>();

        $i3 = $i2 - 1;

        $i4 = specialinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpanGroupIndex(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int)>(r1, r2, $i3);

        $i5 = $i4 + 1;

        return $i5;
    }

    public int getRowCountForAccessibility(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        $i0 = r0.<com.android.internal.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $i6 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        return $i6;

     label1:
        $i1 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$State: int getItemCount()>();

        if $i1 >= 1 goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$State: int getItemCount()>();

        $i3 = $i2 - 1;

        $i4 = specialinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpanGroupIndex(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int)>(r1, r2, $i3);

        $i5 = $i4 + 1;

        return $i5;
    }

    int getSpaceForSpanRange(int, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;
        int[] r1, r2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = r0.<com.android.internal.widget.GridLayoutManager: int mOrientation>;

        if $i3 != 1 goto label1;

        $z0 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: boolean isLayoutRTL()>();

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.internal.widget.GridLayoutManager: int[] mCachedBorders>;

        i2 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        $i8 = i2 - i0;

        $i12 = r1[$i8];

        $i9 = i2 - i0;

        $i10 = $i9 - i1;

        $i11 = r1[$i10];

        $i13 = $i12 - $i11;

        return $i13;

     label1:
        r2 = r0.<com.android.internal.widget.GridLayoutManager: int[] mCachedBorders>;

        $i4 = i0 + i1;

        $i6 = r2[$i4];

        $i5 = r2[i0];

        $i7 = $i6 - $i5;

        return $i7;
    }

    public int getSpanCount()
    {
        com.android.internal.widget.GridLayoutManager r0;
        int $i0;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        $i0 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        return $i0;
    }

    public com.android.internal.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup $r1;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        $r1 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        return $r1;
    }

    void layoutChunk(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, com.android.internal.widget.LinearLayoutManager$LayoutState, com.android.internal.widget.LinearLayoutManager$LayoutChunkResult)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.LinearLayoutManager$LayoutState r1;
        com.android.internal.widget.LinearLayoutManager$LayoutChunkResult r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i45, $i46, $i47, $i48, i49, i50, i51, i52, i53, $i55, i58, i59, i62, i63, i64, i65, i66, i67, i68, i69, i70, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, i91;
        float f0, $f1, $f2, $f3, f4, f5;
        com.android.internal.widget.OrientationHelper $r3, $r8, $r10, $r12, $r14, $r17, $r21, $r40;
        android.view.View[] $r4, $r5, $r13, $r16, $r18, $r32;
        android.view.ViewGroup$LayoutParams $r6, $r15, $r20;
        int[] $r7, $r9, $r11, $r33;
        boolean $z0, $z1, $z2, z3, z4, $z5, $z6, $z7, $z8;
        java.util.List $r19;
        byte $b41;
        java.lang.StringBuilder $r22;
        java.lang.IllegalArgumentException $r30;
        java.lang.String $r31;
        com.android.internal.widget.RecyclerView$Recycler r34;
        com.android.internal.widget.RecyclerView$State r35;
        android.view.View r36, r38, r42, r43, r46;
        android.graphics.Rect $r39, r45;
        com.android.internal.widget.GridLayoutManager$LayoutParams r41, r44, r47;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r34 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r35 := @parameter1: com.android.internal.widget.RecyclerView$State;

        r1 := @parameter2: com.android.internal.widget.LinearLayoutManager$LayoutState;

        r2 := @parameter3: com.android.internal.widget.LinearLayoutManager$LayoutChunkResult;

        $r3 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        i49 = virtualinvoke $r3.<com.android.internal.widget.OrientationHelper: int getModeInOther()>();

        if i49 == 1073741824 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        $i1 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getChildCount()>();

        if $i1 <= 0 goto label03;

        $r33 = r0.<com.android.internal.widget.GridLayoutManager: int[] mCachedBorders>;

        $i48 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        i50 = $r33[$i48];

        goto label04;

     label03:
        i50 = 0;

     label04:
        if z3 == 0 goto label05;

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void updateMeasurements()>();

     label05:
        $i2 = r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        if $i2 != 1 goto label06;

        z4 = 1;

        goto label07;

     label06:
        z4 = 0;

     label07:
        i51 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        if z4 != 0 goto label08;

        $i44 = r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i45 = specialinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpanIndex(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int)>(r34, r35, $i44);

        $i46 = r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i47 = specialinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpanSize(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int)>(r34, r35, $i46);

        i51 = $i45 + $i47;

        i52 = 0;

        i53 = 0;

        goto label09;

     label08:
        i52 = 0;

        i53 = 0;

     label09:
        $i55 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        if i52 >= $i55 goto label13;

        $z2 = virtualinvoke r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: boolean hasMore(com.android.internal.widget.RecyclerView$State)>(r35);

        if $z2 == 0 goto label13;

        if i51 <= 0 goto label13;

        i58 = r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        i59 = specialinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpanSize(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int)>(r34, r35, i58);

        $i42 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        if i59 > $i42 goto label12;

        i51 = i51 - i59;

        if i51 >= 0 goto label10;

        goto label13;

     label10:
        r36 = virtualinvoke r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: android.view.View next(com.android.internal.widget.RecyclerView$Recycler)>(r34);

        if r36 != null goto label11;

        goto label13;

     label11:
        i53 = i53 + i59;

        $r32 = r0.<com.android.internal.widget.GridLayoutManager: android.view.View[] mSet>;

        $r32[i52] = r36;

        i52 = i52 + 1;

        goto label09;

     label12:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Item at position ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i58);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i59);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spans but GridLayoutManager has only ");

        $i43 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spans.");

        $r30 = new java.lang.IllegalArgumentException;

        $r31 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r30;

     label13:
        if i52 != 0 goto label14;

        r2.<com.android.internal.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished> = 1;

        return;

     label14:
        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void assignSpans(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int,int,boolean)>(r34, r35, i52, i53, z4);

        i62 = 0;

        i63 = 0;

        f4 = 0.0F;

     label15:
        if i62 >= i52 goto label22;

        $r18 = r0.<com.android.internal.widget.GridLayoutManager: android.view.View[] mSet>;

        r38 = $r18[i62];

        $r19 = r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        if $r19 != null goto label17;

        if z4 == 0 goto label16;

        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void addView(android.view.View)>(r38);

        goto label19;

     label16:
        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void addView(android.view.View,int)>(r38, 0);

        goto label19;

     label17:
        if z4 == 0 goto label18;

        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void addDisappearingView(android.view.View)>(r38);

        goto label19;

     label18:
        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void addDisappearingView(android.view.View,int)>(r38, 0);

     label19:
        $r39 = r0.<com.android.internal.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)>(r38, $r39);

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void measureChild(android.view.View,int,boolean)>(r38, i49, 0);

        $r40 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r40.<com.android.internal.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r38);

        i64 = i63;

        if i0 <= i63 goto label20;

        i64 = i0;

     label20:
        $r20 = virtualinvoke r38.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r41 = (com.android.internal.widget.GridLayoutManager$LayoutParams) $r20;

        $r21 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        $i39 = virtualinvoke $r21.<com.android.internal.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r38);

        $f1 = (float) $i39;

        $f3 = $f1 * 1.0F;

        $i40 = r41.<com.android.internal.widget.GridLayoutManager$LayoutParams: int mSpanSize>;

        $f2 = (float) $i40;

        f0 = $f3 / $f2;

        f5 = f4;

        $b41 = f0 cmpl f4;

        if $b41 <= 0 goto label21;

        f5 = f0;

     label21:
        i62 = i62 + 1;

        i63 = i64;

        f4 = f5;

        goto label15;

     label22:
        if z3 == 0 goto label26;

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void guessMeasurement(float,int)>(f4, i50);

        i65 = 0;

        i66 = 0;

     label23:
        if i66 >= i52 goto label25;

        $r16 = r0.<com.android.internal.widget.GridLayoutManager: android.view.View[] mSet>;

        r42 = $r16[i66];

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void measureChild(android.view.View,int,boolean)>(r42, 1073741824, 1);

        $r17 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        i67 = virtualinvoke $r17.<com.android.internal.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r42);

        i68 = i65;

        if i67 <= i65 goto label24;

        i68 = i67;

     label24:
        i66 = i66 + 1;

        i65 = i68;

        goto label23;

     label25:
        i69 = i65;

        goto label27;

     label26:
        i69 = i63;

     label27:
        i70 = 0;

     label28:
        if i70 >= i52 goto label32;

        $r13 = r0.<com.android.internal.widget.GridLayoutManager: android.view.View[] mSet>;

        r43 = $r13[i70];

        $r14 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        $i19 = virtualinvoke $r14.<com.android.internal.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r43);

        if $i19 == i69 goto label31;

        $r15 = virtualinvoke r43.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r44 = (com.android.internal.widget.GridLayoutManager$LayoutParams) $r15;

        r45 = r44.<com.android.internal.widget.GridLayoutManager$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i21 = r45.<android.graphics.Rect: int top>;

        $i20 = r45.<android.graphics.Rect: int bottom>;

        $i23 = $i21 + $i20;

        $i22 = r44.<com.android.internal.widget.GridLayoutManager$LayoutParams: int topMargin>;

        $i25 = $i23 + $i22;

        $i24 = r44.<com.android.internal.widget.GridLayoutManager$LayoutParams: int bottomMargin>;

        i72 = $i25 + $i24;

        $i27 = r45.<android.graphics.Rect: int left>;

        $i26 = r45.<android.graphics.Rect: int right>;

        $i29 = $i27 + $i26;

        $i28 = r44.<com.android.internal.widget.GridLayoutManager$LayoutParams: int leftMargin>;

        $i31 = $i29 + $i28;

        $i30 = r44.<com.android.internal.widget.GridLayoutManager$LayoutParams: int rightMargin>;

        i73 = $i31 + $i30;

        $i33 = r44.<com.android.internal.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i32 = r44.<com.android.internal.widget.GridLayoutManager$LayoutParams: int mSpanSize>;

        i74 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpaceForSpanRange(int,int)>($i33, $i32);

        $i34 = r0.<com.android.internal.widget.GridLayoutManager: int mOrientation>;

        if $i34 != 1 goto label29;

        $i37 = r44.<com.android.internal.widget.GridLayoutManager$LayoutParams: int width>;

        i75 = staticinvoke <com.android.internal.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>(i74, 1073741824, i73, $i37, 0);

        $i38 = i69 - i72;

        i76 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i38, 1073741824);

        goto label30;

     label29:
        $i35 = i69 - i73;

        i75 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i35, 1073741824);

        $i36 = r44.<com.android.internal.widget.GridLayoutManager$LayoutParams: int height>;

        i76 = staticinvoke <com.android.internal.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>(i74, 1073741824, i72, $i36, 0);

     label30:
        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)>(r43, i75, i76, 1);

        goto label31;

     label31:
        i70 = i70 + 1;

        goto label28;

     label32:
        r2.<com.android.internal.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed> = i69;

        i77 = 0;

        i78 = 0;

        i79 = 0;

        i80 = 0;

        $i3 = r0.<com.android.internal.widget.GridLayoutManager: int mOrientation>;

        if $i3 != 1 goto label34;

        $i18 = r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i18 != -1 goto label33;

        i80 = r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i79 = i80 - i69;

        goto label36;

     label33:
        i79 = r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i80 = i79 + i69;

        goto label36;

     label34:
        $i4 = r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i4 != -1 goto label35;

        i78 = r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i77 = i78 - i69;

        goto label36;

     label35:
        i77 = r1.<com.android.internal.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i78 = i77 + i69;

     label36:
        i81 = 0;

     label37:
        if i81 >= i52 goto label44;

        $r5 = r0.<com.android.internal.widget.GridLayoutManager: android.view.View[] mSet>;

        r46 = $r5[i81];

        $r6 = virtualinvoke r46.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r47 = (com.android.internal.widget.GridLayoutManager$LayoutParams) $r6;

        $i5 = r0.<com.android.internal.widget.GridLayoutManager: int mOrientation>;

        if $i5 != 1 goto label39;

        $z1 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: boolean isLayoutRTL()>();

        if $z1 == 0 goto label38;

        $i12 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPaddingLeft()>();

        $r11 = r0.<com.android.internal.widget.GridLayoutManager: int[] mCachedBorders>;

        $i14 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        $i13 = r47.<com.android.internal.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i15 = $i14 - $i13;

        $i16 = $r11[$i15];

        i82 = $i12 + $i16;

        $r12 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        $i17 = virtualinvoke $r12.<com.android.internal.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r46);

        i77 = i82 - $i17;

        i83 = i80;

        i84 = i79;

        i85 = i82;

        goto label40;

     label38:
        $i9 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPaddingLeft()>();

        $r9 = r0.<com.android.internal.widget.GridLayoutManager: int[] mCachedBorders>;

        $i10 = r47.<com.android.internal.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i11 = $r9[$i10];

        i86 = $i9 + $i11;

        $r10 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        i87 = virtualinvoke $r10.<com.android.internal.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r46);

        i77 = i86;

        i88 = i87 + i86;

        i83 = i80;

        i84 = i79;

        i85 = i88;

        goto label40;

     label39:
        i85 = i78;

        $i6 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPaddingTop()>();

        $r7 = r0.<com.android.internal.widget.GridLayoutManager: int[] mCachedBorders>;

        $i7 = r47.<com.android.internal.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i8 = $r7[$i7];

        i89 = $i6 + $i8;

        $r8 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.OrientationHelper mOrientationHelper>;

        i90 = virtualinvoke $r8.<com.android.internal.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r46);

        i84 = i89;

        i83 = i90 + i89;

     label40:
        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void layoutDecoratedWithMargins(android.view.View,int,int,int,int)>(r46, i77, i84, i85, i83);

        $z5 = virtualinvoke r47.<com.android.internal.widget.GridLayoutManager$LayoutParams: boolean isItemRemoved()>();

        if $z5 != 0 goto label42;

        $z0 = virtualinvoke r47.<com.android.internal.widget.GridLayoutManager$LayoutParams: boolean isItemChanged()>();

        if $z0 == 0 goto label41;

        goto label42;

     label41:
        goto label43;

     label42:
        r2.<com.android.internal.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed> = 1;

     label43:
        $z6 = r2.<com.android.internal.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable>;

        $z7 = virtualinvoke r46.<android.view.View: boolean hasFocusable()>();

        $z8 = $z6 | $z7;

        r2.<com.android.internal.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable> = $z8;

        i91 = i81 + 1;

        i78 = i85;

        i79 = i84;

        i80 = i83;

        i81 = i91;

        goto label37;

     label44:
        $r4 = r0.<com.android.internal.widget.GridLayoutManager: android.view.View[] mSet>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r4, null);

        return;
    }

    void onAnchorReady(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, com.android.internal.widget.LinearLayoutManager$AnchorInfo, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        com.android.internal.widget.LinearLayoutManager$AnchorInfo r3;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        r3 := @parameter2: com.android.internal.widget.LinearLayoutManager$AnchorInfo;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.internal.widget.LinearLayoutManager: void onAnchorReady(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,com.android.internal.widget.LinearLayoutManager$AnchorInfo,int)>(r1, r2, r3, i0);

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void updateMeasurements()>();

        $i1 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$State: int getItemCount()>();

        if $i1 <= 0 goto label1;

        $z0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void ensureAnchorIsInCorrectSpan(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,com.android.internal.widget.LinearLayoutManager$AnchorInfo,int)>(r1, r2, r3, i0);

     label1:
        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void ensureViewSet()>();

        return;
    }

    public void onInitializeAccessibilityNodeInfoForItem(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, android.view.View, android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        android.view.accessibility.AccessibilityNodeInfo r3;
        android.view.ViewGroup$LayoutParams r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo $r5, $r6;
        android.view.View r7;
        com.android.internal.widget.GridLayoutManager$LayoutParams r8;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        r7 := @parameter2: android.view.View;

        r3 := @parameter3: android.view.accessibility.AccessibilityNodeInfo;

        r4 = virtualinvoke r7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = r4 instanceof com.android.internal.widget.GridLayoutManager$LayoutParams;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.LinearLayoutManager: void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>(r7, r3);

        return;

     label1:
        r8 = (com.android.internal.widget.GridLayoutManager$LayoutParams) r4;

        $i1 = virtualinvoke r8.<com.android.internal.widget.GridLayoutManager$LayoutParams: int getViewLayoutPosition()>();

        i0 = specialinvoke r0.<com.android.internal.widget.GridLayoutManager: int getSpanGroupIndex(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int)>(r1, r2, $i1);

        $i2 = r0.<com.android.internal.widget.GridLayoutManager: int mOrientation>;

        if $i2 != 0 goto label2;

        $i5 = virtualinvoke r8.<com.android.internal.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        $i6 = virtualinvoke r8.<com.android.internal.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $r6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>($i5, $i6, i0, 1, 0, 0);

        virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>($r6);

        goto label3;

     label2:
        $i3 = virtualinvoke r8.<com.android.internal.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        $i4 = virtualinvoke r8.<com.android.internal.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $r5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>(i0, 1, $i3, $i4, 0, 0);

        virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>($r5);

     label3:
        return;
    }

    public void onItemsAdded(com.android.internal.widget.RecyclerView, int, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, i1;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }

    public void onItemsChanged(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }

    public void onItemsMoved(com.android.internal.widget.RecyclerView, int, int, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, i1, i2;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }

    public void onItemsRemoved(com.android.internal.widget.RecyclerView, int, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, i1;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }

    public void onItemsUpdated(com.android.internal.widget.RecyclerView, int, int, java.lang.Object)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, i1;
        java.lang.Object r2;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup $r3;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Object;

        $r3 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r3.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }

    public void onLayoutChildren(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        $z0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void cachePreLayoutSpanMapping()>();

     label1:
        specialinvoke r0.<com.android.internal.widget.LinearLayoutManager: void onLayoutChildren(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>(r1, r2);

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void clearPreLayoutSpanMappingCache()>();

        return;
    }

    public void onLayoutCompleted(com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$State;

        specialinvoke r0.<com.android.internal.widget.LinearLayoutManager: void onLayoutCompleted(com.android.internal.widget.RecyclerView$State)>(r1);

        r0.<com.android.internal.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

        return;
    }

    public int scrollHorizontallyBy(int, com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.GridLayoutManager r0;
        int i0, $i1;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter2: com.android.internal.widget.RecyclerView$State;

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void updateMeasurements()>();

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void ensureViewSet()>();

        $i1 = specialinvoke r0.<com.android.internal.widget.LinearLayoutManager: int scrollHorizontallyBy(int,com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>(i0, r1, r2);

        return $i1;
    }

    public int scrollVerticallyBy(int, com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.GridLayoutManager r0;
        int i0, $i1;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter2: com.android.internal.widget.RecyclerView$State;

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void updateMeasurements()>();

        specialinvoke r0.<com.android.internal.widget.GridLayoutManager: void ensureViewSet()>();

        $i1 = specialinvoke r0.<com.android.internal.widget.LinearLayoutManager: int scrollVerticallyBy(int,com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>(i0, r1, r2);

        return $i1;
    }

    public void setMeasuredDimension(android.graphics.Rect, int, int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26;
        int[] $r1, r3, r4;
        android.graphics.Rect r2;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r2 := @parameter0: android.graphics.Rect;

        i23 := @parameter1: int;

        i24 := @parameter2: int;

        $r1 = r0.<com.android.internal.widget.GridLayoutManager: int[] mCachedBorders>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.android.internal.widget.LinearLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)>(r2, i23, i24);

     label1:
        $i2 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPaddingRight()>();

        i0 = $i2 + $i3;

        $i4 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPaddingTop()>();

        $i5 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getPaddingBottom()>();

        i1 = $i4 + $i5;

        $i6 = r0.<com.android.internal.widget.GridLayoutManager: int mOrientation>;

        if $i6 != 1 goto label2;

        $i15 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $i16 = $i15 + i1;

        $i17 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getMinimumHeight()>();

        i25 = staticinvoke <com.android.internal.widget.GridLayoutManager: int chooseSize(int,int,int)>(i24, $i16, $i17);

        r3 = r0.<com.android.internal.widget.GridLayoutManager: int[] mCachedBorders>;

        $i18 = lengthof r3;

        $i19 = $i18 - 1;

        $i20 = r3[$i19];

        $i21 = $i20 + i0;

        $i22 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getMinimumWidth()>();

        i26 = staticinvoke <com.android.internal.widget.GridLayoutManager: int chooseSize(int,int,int)>(i23, $i21, $i22);

        goto label3;

     label2:
        $i7 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i8 = $i7 + i0;

        $i9 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getMinimumWidth()>();

        i26 = staticinvoke <com.android.internal.widget.GridLayoutManager: int chooseSize(int,int,int)>(i23, $i8, $i9);

        r4 = r0.<com.android.internal.widget.GridLayoutManager: int[] mCachedBorders>;

        $i10 = lengthof r4;

        $i11 = $i10 - 1;

        $i12 = r4[$i11];

        $i13 = $i12 + i1;

        $i14 = virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: int getMinimumHeight()>();

        i25 = staticinvoke <com.android.internal.widget.GridLayoutManager: int chooseSize(int,int,int)>(i24, $i13, $i14);

     label3:
        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void setMeasuredDimension(int,int)>(i26, i25);

        return;
    }

    public void setSpanCount(int)
    {
        com.android.internal.widget.GridLayoutManager r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup $r7;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<com.android.internal.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 1;

        if i0 < 1 goto label2;

        r0.<com.android.internal.widget.GridLayoutManager: int mSpanCount> = i0;

        $r7 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r7.<com.android.internal.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        virtualinvoke r0.<com.android.internal.widget.GridLayoutManager: void requestLayout()>();

        return;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Span count should be at least 1. Provided ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void setSpanSizeLookup(com.android.internal.widget.GridLayoutManager$SpanSizeLookup)
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.GridLayoutManager$SpanSizeLookup r1;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        r1 := @parameter0: com.android.internal.widget.GridLayoutManager$SpanSizeLookup;

        r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = r1;

        return;
    }

    public void setStackFromEnd(boolean)
    {
        com.android.internal.widget.GridLayoutManager r0;
        boolean z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.LinearLayoutManager: void setStackFromEnd(boolean)>(0);

        return;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("GridLayoutManager does not support stack from end. Consider using reverse layout");

        throw $r1;
    }

    public boolean supportsPredictiveItemAnimations()
    {
        com.android.internal.widget.GridLayoutManager r0;
        com.android.internal.widget.LinearLayoutManager$SavedState $r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.GridLayoutManager;

        $r1 = r0.<com.android.internal.widget.GridLayoutManager: com.android.internal.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r1 != null goto label1;

        $z0 = r0.<com.android.internal.widget.GridLayoutManager: boolean mPendingSpanCountChange>;

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.GridLayoutManager: java.lang.String TAG> = "GridLayoutManager";

        <com.android.internal.widget.GridLayoutManager: int DEFAULT_SPAN_COUNT> = -1;

        <com.android.internal.widget.GridLayoutManager: boolean DEBUG> = 0;

        return;
    }
}
