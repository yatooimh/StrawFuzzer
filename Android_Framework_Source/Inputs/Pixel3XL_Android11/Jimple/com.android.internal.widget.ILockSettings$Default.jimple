public class com.android.internal.widget.ILockSettings$Default extends java.lang.Object implements com.android.internal.widget.ILockSettings
{

    public void <init>()
    {
        com.android.internal.widget.ILockSettings$Default r0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.widget.ILockSettings$Default r0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        return null;
    }

    public com.android.internal.widget.VerifyCredentialResponse checkCredential(com.android.internal.widget.LockscreenCredential, int, com.android.internal.widget.ICheckCredentialProgressCallback) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        com.android.internal.widget.LockscreenCredential r1;
        int i0;
        com.android.internal.widget.ICheckCredentialProgressCallback r2;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: com.android.internal.widget.LockscreenCredential;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.widget.ICheckCredentialProgressCallback;

        return null;
    }

    public boolean checkVoldPassword(int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public void closeSession(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public java.lang.String generateKey(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String generateKeyWithMetadata(java.lang.String, byte[]) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;
        byte[] r2;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        return null;
    }

    public boolean getBoolean(java.lang.String, boolean, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;
        boolean z0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        return 0;
    }

    public int getCredentialType(int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public byte[] getHashFactor(com.android.internal.widget.LockscreenCredential, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        com.android.internal.widget.LockscreenCredential r1;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: com.android.internal.widget.LockscreenCredential;

        i0 := @parameter1: int;

        return null;
    }

    public java.lang.String getKey(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public android.security.keystore.recovery.KeyChainSnapshot getKeyChainSnapshot() throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        return null;
    }

    public long getLong(java.lang.String, long, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;
        long l0;
        int i1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        return 0L;
    }

    public int[] getRecoverySecretTypes() throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        return null;
    }

    public java.util.Map getRecoveryStatus() throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        return null;
    }

    public boolean getSeparateProfileChallengeEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public java.lang.String getString(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return null;
    }

    public int getStrongAuthForUser(int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean hasPendingEscrowToken(int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean hasSecureLockScreen() throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        return 0;
    }

    public java.lang.String importKey(java.lang.String, byte[]) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;
        byte[] r2;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        return null;
    }

    public java.lang.String importKeyWithMetadata(java.lang.String, byte[], byte[]) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;
        byte[] r2, r3;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        return null;
    }

    public void initRecoveryServiceWithSigFile(java.lang.String, byte[], byte[]) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;
        byte[] r2, r3;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        return;
    }

    public java.util.Map recoverKeyChainSnapshot(java.lang.String, byte[], java.util.List) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;
        byte[] r2;
        java.util.List r3;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.util.List;

        return null;
    }

    public void registerStrongAuthTracker(android.app.trust.IStrongAuthTracker) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        android.app.trust.IStrongAuthTracker r1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: android.app.trust.IStrongAuthTracker;

        return;
    }

    public void removeCachedUnifiedChallenge(int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        return;
    }

    public void removeKey(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void reportSuccessfulBiometricUnlock(boolean, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        boolean z0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        return;
    }

    public void requireStrongAuth(int, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0, i1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void resetKeyStore(int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        return;
    }

    public void scheduleNonStrongBiometricIdleTimeout(int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        return;
    }

    public void setBoolean(java.lang.String, boolean, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;
        boolean z0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        return;
    }

    public boolean setLockCredential(com.android.internal.widget.LockscreenCredential, com.android.internal.widget.LockscreenCredential, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        com.android.internal.widget.LockscreenCredential r1, r2;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: com.android.internal.widget.LockscreenCredential;

        r2 := @parameter1: com.android.internal.widget.LockscreenCredential;

        i0 := @parameter2: int;

        return 0;
    }

    public void setLong(java.lang.String, long, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;
        long l0;
        int i1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        return;
    }

    public void setRecoverySecretTypes(int[]) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int[] r1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: int[];

        return;
    }

    public void setRecoveryStatus(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return;
    }

    public void setSeparateProfileChallengeEnabled(int, boolean, com.android.internal.widget.LockscreenCredential) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0;
        boolean z0;
        com.android.internal.widget.LockscreenCredential r1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: com.android.internal.widget.LockscreenCredential;

        return;
    }

    public void setServerParams(byte[]) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        byte[] r1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: byte[];

        return;
    }

    public void setSnapshotCreatedPendingIntent(android.app.PendingIntent) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        android.app.PendingIntent r1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: android.app.PendingIntent;

        return;
    }

    public void setString(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return;
    }

    public byte[] startRecoverySessionWithCertPath(java.lang.String, java.lang.String, android.security.keystore.recovery.RecoveryCertPath, byte[], byte[], java.util.List) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        java.lang.String r1, r2;
        android.security.keystore.recovery.RecoveryCertPath r3;
        byte[] r4, r5;
        java.util.List r6;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.security.keystore.recovery.RecoveryCertPath;

        r4 := @parameter3: byte[];

        r5 := @parameter4: byte[];

        r6 := @parameter5: java.util.List;

        return null;
    }

    public void systemReady() throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        return;
    }

    public boolean tryUnlockWithCachedUnifiedChallenge(int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public void unregisterStrongAuthTracker(android.app.trust.IStrongAuthTracker) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        android.app.trust.IStrongAuthTracker r1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: android.app.trust.IStrongAuthTracker;

        return;
    }

    public void userPresent(int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        int i0;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        i0 := @parameter0: int;

        return;
    }

    public com.android.internal.widget.VerifyCredentialResponse verifyCredential(com.android.internal.widget.LockscreenCredential, long, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        com.android.internal.widget.LockscreenCredential r1;
        long l0;
        int i1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: com.android.internal.widget.LockscreenCredential;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        return null;
    }

    public com.android.internal.widget.VerifyCredentialResponse verifyTiedProfileChallenge(com.android.internal.widget.LockscreenCredential, long, int) throws android.os.RemoteException
    {
        com.android.internal.widget.ILockSettings$Default r0;
        com.android.internal.widget.LockscreenCredential r1;
        long l0;
        int i1;

        r0 := @this: com.android.internal.widget.ILockSettings$Default;

        r1 := @parameter0: com.android.internal.widget.LockscreenCredential;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        return null;
    }
}
