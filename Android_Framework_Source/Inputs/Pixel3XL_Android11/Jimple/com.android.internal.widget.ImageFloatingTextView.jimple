public class com.android.internal.widget.ImageFloatingTextView extends android.widget.TextView
{
    private int mImageEndMargin;
    private int mIndentLines;
    private int mLayoutMaxLines;
    private int mMaxLinesForHeight;
    private int mResolvedDirection;

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.ImageFloatingTextView r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.ImageFloatingTextView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.ImageFloatingTextView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.ImageFloatingTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.widget.ImageFloatingTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.internal.widget.ImageFloatingTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.widget.ImageFloatingTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: com.android.internal.widget.ImageFloatingTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.widget.ImageFloatingTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        com.android.internal.widget.ImageFloatingTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;

        r0 := @this: com.android.internal.widget.ImageFloatingTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<com.android.internal.widget.ImageFloatingTextView: int mResolvedDirection> = -1;

        r0.<com.android.internal.widget.ImageFloatingTextView: int mMaxLinesForHeight> = -1;

        r0.<com.android.internal.widget.ImageFloatingTextView: int mLayoutMaxLines> = -1;

        return;
    }

    protected android.text.Layout makeSingleLayout(int, android.text.BoringLayout$Metrics, int, android.text.Layout$Alignment, boolean, android.text.TextUtils$TruncateAt, boolean)
    {
        com.android.internal.widget.ImageFloatingTextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        boolean z0, z1, $z2;
        android.text.TextUtils$TruncateAt r1;
        android.text.method.TransformationMethod r2;
        android.text.TextPaint $r3;
        android.text.StaticLayout$Builder $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r16, r22;
        android.text.TextDirectionHeuristic $r6;
        float $f0, $f1;
        android.text.StaticLayout $r14;
        android.text.BoringLayout$Metrics r18;
        android.text.Layout$Alignment r19;
        java.lang.CharSequence r20, r25, r26;
        java.lang.Object r21;
        int[] r23, r24;

        r0 := @this: com.android.internal.widget.ImageFloatingTextView;

        i8 := @parameter0: int;

        r18 := @parameter1: android.text.BoringLayout$Metrics;

        i0 := @parameter2: int;

        r19 := @parameter3: android.text.Layout$Alignment;

        z0 := @parameter4: boolean;

        r1 := @parameter5: android.text.TextUtils$TruncateAt;

        z1 := @parameter6: boolean;

        r2 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: android.text.method.TransformationMethod getTransformationMethod()>();

        r20 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: java.lang.CharSequence getText()>();

        r21 = r20;

        if r2 == null goto label01;

        r21 = interfaceinvoke r2.<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>(r20, r0);

     label01:
        if r21 != null goto label02;

        r21 = "";

        goto label02;

     label02:
        r25 = (java.lang.CharSequence) r21;

        $i1 = interfaceinvoke r25.<java.lang.CharSequence: int length()>();

        $r3 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: android.text.TextPaint getPaint()>();

        r26 = (java.lang.CharSequence) r21;

        $r4 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>(r26, 0, $i1, $r3, i8);

        $r5 = virtualinvoke $r4.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>(r19);

        $r6 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        $r7 = virtualinvoke $r5.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>($r6);

        $f0 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: float getLineSpacingExtra()>();

        $f1 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: float getLineSpacingMultiplier()>();

        $r8 = virtualinvoke $r7.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>($f0, $f1);

        $z2 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: boolean getIncludeFontPadding()>();

        $r9 = virtualinvoke $r8.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIncludePad(boolean)>($z2);

        $r10 = virtualinvoke $r9.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setUseLineSpacingFromFallbacks(boolean)>(1);

        $r11 = virtualinvoke $r10.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setBreakStrategy(int)>(1);

        r22 = virtualinvoke $r11.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setHyphenationFrequency(int)>(2);

        $i2 = r0.<com.android.internal.widget.ImageFloatingTextView: int mMaxLinesForHeight>;

        if $i2 <= 0 goto label03;

        i9 = r0.<com.android.internal.widget.ImageFloatingTextView: int mMaxLinesForHeight>;

        goto label05;

     label03:
        $i3 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: int getMaxLines()>();

        if $i3 < 0 goto label04;

        i9 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: int getMaxLines()>();

        goto label05;

     label04:
        i9 = 2147483647;

     label05:
        virtualinvoke r22.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>(i9);

        r0.<com.android.internal.widget.ImageFloatingTextView: int mLayoutMaxLines> = i9;

        if z0 == 0 goto label06;

        $r16 = virtualinvoke r22.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)>(r1);

        virtualinvoke $r16.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsizedWidth(int)>(i0);

     label06:
        r23 = null;

        i10 = r0.<com.android.internal.widget.ImageFloatingTextView: int mIndentLines>;

        if i10 <= 0 goto label08;

        $i5 = i10 + 1;

        r24 = newarray (int)[$i5];

        i11 = 0;

     label07:
        r23 = r24;

        $i6 = r0.<com.android.internal.widget.ImageFloatingTextView: int mIndentLines>;

        if i11 >= $i6 goto label08;

        $i7 = r0.<com.android.internal.widget.ImageFloatingTextView: int mImageEndMargin>;

        r24[i11] = $i7;

        i11 = i11 + 1;

        goto label07;

     label08:
        $i4 = r0.<com.android.internal.widget.ImageFloatingTextView: int mResolvedDirection>;

        if $i4 != 1 goto label09;

        virtualinvoke r22.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIndents(int[],int[])>(r23, null);

        goto label10;

     label09:
        virtualinvoke r22.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIndents(int[],int[])>(null, r23);

     label10:
        $r14 = virtualinvoke r22.<android.text.StaticLayout$Builder: android.text.StaticLayout build()>();

        return $r14;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.ImageFloatingTextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, i15, i16;
        android.text.Layout r1, $r2, $r3;

        r0 := @this: com.android.internal.widget.ImageFloatingTextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $i3 = r0.<com.android.internal.widget.ImageFloatingTextView: int mPaddingTop>;

        $i5 = $i2 - $i3;

        $i4 = r0.<com.android.internal.widget.ImageFloatingTextView: int mPaddingBottom>;

        i13 = $i5 - $i4;

        $r2 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: android.text.Layout getLayout()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: android.text.Layout getLayout()>();

        $i12 = virtualinvoke $r3.<android.text.Layout: int getHeight()>();

        if $i12 == i13 goto label1;

        r0.<com.android.internal.widget.ImageFloatingTextView: int mMaxLinesForHeight> = -1;

        virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: void nullLayouts()>();

     label1:
        specialinvoke r0.<android.widget.TextView: void onMeasure(int,int)>(i0, i1);

        r1 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: android.text.Layout getLayout()>();

        $i14 = virtualinvoke r1.<android.text.Layout: int getHeight()>();

        if $i14 <= i13 goto label5;

        $i6 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        i15 = $i6 - 1;

     label2:
        if i15 <= 1 goto label3;

        $i10 = i15 - 1;

        $i11 = virtualinvoke r1.<android.text.Layout: int getLineBottom(int)>($i10);

        if $i11 <= i13 goto label3;

        i15 = i15 + -1;

        goto label2;

     label3:
        i16 = i15;

        $i7 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: int getMaxLines()>();

        if $i7 <= 0 goto label4;

        $i9 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: int getMaxLines()>();

        i16 = staticinvoke <java.lang.Math: int min(int,int)>($i9, i15);

     label4:
        $i8 = r0.<com.android.internal.widget.ImageFloatingTextView: int mLayoutMaxLines>;

        if i16 == $i8 goto label5;

        r0.<com.android.internal.widget.ImageFloatingTextView: int mMaxLinesForHeight> = i16;

        virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: void nullLayouts()>();

        specialinvoke r0.<android.widget.TextView: void onMeasure(int,int)>(i0, i1);

     label5:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        com.android.internal.widget.ImageFloatingTextView r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ImageFloatingTextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TextView: void onRtlPropertiesChanged(int)>(i0);

        $i1 = r0.<com.android.internal.widget.ImageFloatingTextView: int mResolvedDirection>;

        if i0 == $i1 goto label1;

        $z0 = virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: boolean isLayoutDirectionResolved()>();

        if $z0 == 0 goto label1;

        r0.<com.android.internal.widget.ImageFloatingTextView: int mResolvedDirection> = i0;

        $i2 = r0.<com.android.internal.widget.ImageFloatingTextView: int mIndentLines>;

        if $i2 <= 0 goto label1;

        virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: void nullLayouts()>();

        virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: void requestLayout()>();

     label1:
        return;
    }

    public void setHasImage(boolean)
    {
        com.android.internal.widget.ImageFloatingTextView r0;
        boolean z0;
        byte b0;

        r0 := @this: com.android.internal.widget.ImageFloatingTextView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        b0 = 2;

        goto label2;

     label1:
        b0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: boolean setNumIndentLines(int)>(b0);

        return;
    }

    public void setImageEndMargin(int)
    {
        com.android.internal.widget.ImageFloatingTextView r0;
        int i0;

        r0 := @this: com.android.internal.widget.ImageFloatingTextView;

        i0 := @parameter0: int;

        r0.<com.android.internal.widget.ImageFloatingTextView: int mImageEndMargin> = i0;

        return;
    }

    public boolean setNumIndentLines(int)
    {
        com.android.internal.widget.ImageFloatingTextView r0;
        int i0, $i1;

        r0 := @this: com.android.internal.widget.ImageFloatingTextView;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.ImageFloatingTextView: int mIndentLines>;

        if $i1 == i0 goto label1;

        r0.<com.android.internal.widget.ImageFloatingTextView: int mIndentLines> = i0;

        virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: void nullLayouts()>();

        virtualinvoke r0.<com.android.internal.widget.ImageFloatingTextView: void requestLayout()>();

        return 1;

     label1:
        return 0;
    }
}
