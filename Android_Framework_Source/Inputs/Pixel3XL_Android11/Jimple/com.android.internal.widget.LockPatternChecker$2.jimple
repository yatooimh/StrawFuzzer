class com.android.internal.widget.LockPatternChecker$2 extends android.os.AsyncTask
{
    private int mThrottleTimeout;
    final com.android.internal.widget.LockPatternChecker$OnCheckCallback val$callback;
    final com.android.internal.widget.LockscreenCredential val$credentialCopy;
    final int val$userId;
    final com.android.internal.widget.LockPatternUtils val$utils;

    void <init>(com.android.internal.widget.LockPatternUtils, com.android.internal.widget.LockscreenCredential, int, com.android.internal.widget.LockPatternChecker$OnCheckCallback)
    {
        com.android.internal.widget.LockPatternChecker$2 r0;
        com.android.internal.widget.LockPatternUtils r1;
        com.android.internal.widget.LockscreenCredential r2;
        int i0;
        com.android.internal.widget.LockPatternChecker$OnCheckCallback r3;

        r0 := @this: com.android.internal.widget.LockPatternChecker$2;

        r1 := @parameter0: com.android.internal.widget.LockPatternUtils;

        r2 := @parameter1: com.android.internal.widget.LockscreenCredential;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.internal.widget.LockPatternChecker$OnCheckCallback;

        r0.<com.android.internal.widget.LockPatternChecker$2: com.android.internal.widget.LockPatternUtils val$utils> = r1;

        r0.<com.android.internal.widget.LockPatternChecker$2: com.android.internal.widget.LockscreenCredential val$credentialCopy> = r2;

        r0.<com.android.internal.widget.LockPatternChecker$2: int val$userId> = i0;

        r0.<com.android.internal.widget.LockPatternChecker$2: com.android.internal.widget.LockPatternChecker$OnCheckCallback val$callback> = r3;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected transient java.lang.Boolean doInBackground(java.lang.Void[])
    {
        com.android.internal.widget.LockPatternChecker$2 r0;
        com.android.internal.widget.LockPatternUtils r1;
        com.android.internal.widget.LockscreenCredential r2;
        int i0, $i1;
        com.android.internal.widget.LockPatternChecker$OnCheckCallback r3;
        boolean z0;
        java.lang.Boolean $r5, $r7;
        com.android.internal.widget.LockPatternUtils$RequestThrottledException $r6;
        java.lang.Void[] r8;
        com.android.internal.widget._$$Lambda$TTC7hNz7BTsLwhNRb2L5kl_7mdU r9;

        r0 := @this: com.android.internal.widget.LockPatternChecker$2;

        r8 := @parameter0: java.lang.Void[];

     label1:
        r1 = r0.<com.android.internal.widget.LockPatternChecker$2: com.android.internal.widget.LockPatternUtils val$utils>;

        r2 = r0.<com.android.internal.widget.LockPatternChecker$2: com.android.internal.widget.LockscreenCredential val$credentialCopy>;

        i0 = r0.<com.android.internal.widget.LockPatternChecker$2: int val$userId>;

        r3 = r0.<com.android.internal.widget.LockPatternChecker$2: com.android.internal.widget.LockPatternChecker$OnCheckCallback val$callback>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        r9 = new com.android.internal.widget._$$Lambda$TTC7hNz7BTsLwhNRb2L5kl_7mdU;

        specialinvoke r9.<com.android.internal.widget._$$Lambda$TTC7hNz7BTsLwhNRb2L5kl_7mdU: void <init>(com.android.internal.widget.LockPatternChecker$OnCheckCallback)>(r3);

        z0 = virtualinvoke r1.<com.android.internal.widget.LockPatternUtils: boolean checkCredential(com.android.internal.widget.LockscreenCredential,int,com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback)>(r2, i0, r9);

     label2:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        return $r5;

     label3:
        $r6 := @caughtexception;

        $i1 = virtualinvoke $r6.<com.android.internal.widget.LockPatternUtils$RequestThrottledException: int getTimeoutMs()>();

        r0.<com.android.internal.widget.LockPatternChecker$2: int mThrottleTimeout> = $i1;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r7;

        catch com.android.internal.widget.LockPatternUtils$RequestThrottledException from label1 to label2 with label3;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.internal.widget.LockPatternChecker$2 r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.lang.Boolean $r3;

        r0 := @this: com.android.internal.widget.LockPatternChecker$2;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.internal.widget.LockPatternChecker$2: java.lang.Boolean doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }

    protected void onCancelled()
    {
        com.android.internal.widget.LockPatternChecker$2 r0;
        com.android.internal.widget.LockPatternChecker$OnCheckCallback $r1;
        com.android.internal.widget.LockscreenCredential $r2;

        r0 := @this: com.android.internal.widget.LockPatternChecker$2;

        $r1 = r0.<com.android.internal.widget.LockPatternChecker$2: com.android.internal.widget.LockPatternChecker$OnCheckCallback val$callback>;

        interfaceinvoke $r1.<com.android.internal.widget.LockPatternChecker$OnCheckCallback: void onCancelled()>();

        $r2 = r0.<com.android.internal.widget.LockPatternChecker$2: com.android.internal.widget.LockscreenCredential val$credentialCopy>;

        virtualinvoke $r2.<com.android.internal.widget.LockscreenCredential: void zeroize()>();

        return;
    }

    protected void onPostExecute(java.lang.Boolean)
    {
        com.android.internal.widget.LockPatternChecker$2 r0;
        java.lang.Boolean r1;
        com.android.internal.widget.LockPatternChecker$OnCheckCallback $r2;
        boolean $z0;
        int $i0;
        com.android.internal.widget.LockscreenCredential $r3;

        r0 := @this: com.android.internal.widget.LockPatternChecker$2;

        r1 := @parameter0: java.lang.Boolean;

        $r2 = r0.<com.android.internal.widget.LockPatternChecker$2: com.android.internal.widget.LockPatternChecker$OnCheckCallback val$callback>;

        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        $i0 = r0.<com.android.internal.widget.LockPatternChecker$2: int mThrottleTimeout>;

        interfaceinvoke $r2.<com.android.internal.widget.LockPatternChecker$OnCheckCallback: void onChecked(boolean,int)>($z0, $i0);

        $r3 = r0.<com.android.internal.widget.LockPatternChecker$2: com.android.internal.widget.LockscreenCredential val$credentialCopy>;

        virtualinvoke $r3.<com.android.internal.widget.LockscreenCredential: void zeroize()>();

        return;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.android.internal.widget.LockPatternChecker$2 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;

        r0 := @this: com.android.internal.widget.LockPatternChecker$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Boolean) r1;

        virtualinvoke r0.<com.android.internal.widget.LockPatternChecker$2: void onPostExecute(java.lang.Boolean)>($r2);

        return;
    }
}
