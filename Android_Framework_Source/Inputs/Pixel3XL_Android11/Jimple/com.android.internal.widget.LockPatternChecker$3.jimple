class com.android.internal.widget.LockPatternChecker$3 extends android.os.AsyncTask
{
    private int mThrottleTimeout;
    final com.android.internal.widget.LockPatternChecker$OnVerifyCallback val$callback;
    final long val$challenge;
    final com.android.internal.widget.LockscreenCredential val$credentialCopy;
    final int val$userId;
    final com.android.internal.widget.LockPatternUtils val$utils;

    void <init>(com.android.internal.widget.LockPatternUtils, com.android.internal.widget.LockscreenCredential, long, int, com.android.internal.widget.LockPatternChecker$OnVerifyCallback)
    {
        com.android.internal.widget.LockPatternChecker$3 r0;
        com.android.internal.widget.LockPatternUtils r1;
        com.android.internal.widget.LockscreenCredential r2;
        long l0;
        int i1;
        com.android.internal.widget.LockPatternChecker$OnVerifyCallback r3;

        r0 := @this: com.android.internal.widget.LockPatternChecker$3;

        r1 := @parameter0: com.android.internal.widget.LockPatternUtils;

        r2 := @parameter1: com.android.internal.widget.LockscreenCredential;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        r3 := @parameter4: com.android.internal.widget.LockPatternChecker$OnVerifyCallback;

        r0.<com.android.internal.widget.LockPatternChecker$3: com.android.internal.widget.LockPatternUtils val$utils> = r1;

        r0.<com.android.internal.widget.LockPatternChecker$3: com.android.internal.widget.LockscreenCredential val$credentialCopy> = r2;

        r0.<com.android.internal.widget.LockPatternChecker$3: long val$challenge> = l0;

        r0.<com.android.internal.widget.LockPatternChecker$3: int val$userId> = i1;

        r0.<com.android.internal.widget.LockPatternChecker$3: com.android.internal.widget.LockPatternChecker$OnVerifyCallback val$callback> = r3;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.internal.widget.LockPatternChecker$3 r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        byte[] $r3;

        r0 := @this: com.android.internal.widget.LockPatternChecker$3;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.internal.widget.LockPatternChecker$3: byte[] doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }

    protected transient byte[] doInBackground(java.lang.Void[])
    {
        com.android.internal.widget.LockPatternChecker$3 r0;
        int $i0, $i2;
        long $l1;
        com.android.internal.widget.LockscreenCredential $r1;
        com.android.internal.widget.LockPatternUtils $r2;
        com.android.internal.widget.LockPatternUtils$RequestThrottledException $r3;
        java.lang.Void[] r4;
        byte[] r5;

        r0 := @this: com.android.internal.widget.LockPatternChecker$3;

        r4 := @parameter0: java.lang.Void[];

     label1:
        $r2 = r0.<com.android.internal.widget.LockPatternChecker$3: com.android.internal.widget.LockPatternUtils val$utils>;

        $r1 = r0.<com.android.internal.widget.LockPatternChecker$3: com.android.internal.widget.LockscreenCredential val$credentialCopy>;

        $l1 = r0.<com.android.internal.widget.LockPatternChecker$3: long val$challenge>;

        $i0 = r0.<com.android.internal.widget.LockPatternChecker$3: int val$userId>;

        r5 = virtualinvoke $r2.<com.android.internal.widget.LockPatternUtils: byte[] verifyTiedProfileChallenge(com.android.internal.widget.LockscreenCredential,long,int)>($r1, $l1, $i0);

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        $i2 = virtualinvoke $r3.<com.android.internal.widget.LockPatternUtils$RequestThrottledException: int getTimeoutMs()>();

        r0.<com.android.internal.widget.LockPatternChecker$3: int mThrottleTimeout> = $i2;

        return null;

        catch com.android.internal.widget.LockPatternUtils$RequestThrottledException from label1 to label2 with label3;
    }

    protected void onCancelled()
    {
        com.android.internal.widget.LockPatternChecker$3 r0;
        com.android.internal.widget.LockscreenCredential $r1;

        r0 := @this: com.android.internal.widget.LockPatternChecker$3;

        $r1 = r0.<com.android.internal.widget.LockPatternChecker$3: com.android.internal.widget.LockscreenCredential val$credentialCopy>;

        virtualinvoke $r1.<com.android.internal.widget.LockscreenCredential: void zeroize()>();

        return;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.android.internal.widget.LockPatternChecker$3 r0;
        java.lang.Object r1;
        byte[] $r2;

        r0 := @this: com.android.internal.widget.LockPatternChecker$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (byte[]) r1;

        virtualinvoke r0.<com.android.internal.widget.LockPatternChecker$3: void onPostExecute(byte[])>($r2);

        return;
    }

    protected void onPostExecute(byte[])
    {
        com.android.internal.widget.LockPatternChecker$3 r0;
        byte[] r1;
        int $i0;
        com.android.internal.widget.LockPatternChecker$OnVerifyCallback $r2;
        com.android.internal.widget.LockscreenCredential $r3;

        r0 := @this: com.android.internal.widget.LockPatternChecker$3;

        r1 := @parameter0: byte[];

        $r2 = r0.<com.android.internal.widget.LockPatternChecker$3: com.android.internal.widget.LockPatternChecker$OnVerifyCallback val$callback>;

        $i0 = r0.<com.android.internal.widget.LockPatternChecker$3: int mThrottleTimeout>;

        interfaceinvoke $r2.<com.android.internal.widget.LockPatternChecker$OnVerifyCallback: void onVerified(byte[],int)>(r1, $i0);

        $r3 = r0.<com.android.internal.widget.LockPatternChecker$3: com.android.internal.widget.LockscreenCredential val$credentialCopy>;

        virtualinvoke $r3.<com.android.internal.widget.LockscreenCredential: void zeroize()>();

        return;
    }
}
