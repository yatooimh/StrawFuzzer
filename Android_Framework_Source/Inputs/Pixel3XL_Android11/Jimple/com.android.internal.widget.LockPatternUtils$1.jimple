class com.android.internal.widget.LockPatternUtils$1 extends android.os.AsyncTask
{
    final com.android.internal.widget.LockPatternUtils this$0;
    final java.lang.String val$passwordString;
    final android.os.IBinder val$service;
    final int val$type;

    void <init>(com.android.internal.widget.LockPatternUtils, android.os.IBinder, int, java.lang.String)
    {
        com.android.internal.widget.LockPatternUtils$1 r0;
        com.android.internal.widget.LockPatternUtils r1;
        android.os.IBinder r2;
        int i0;
        java.lang.String r3;

        r0 := @this: com.android.internal.widget.LockPatternUtils$1;

        r1 := @parameter0: com.android.internal.widget.LockPatternUtils;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r0.<com.android.internal.widget.LockPatternUtils$1: com.android.internal.widget.LockPatternUtils this$0> = r1;

        r0.<com.android.internal.widget.LockPatternUtils$1: android.os.IBinder val$service> = r2;

        r0.<com.android.internal.widget.LockPatternUtils$1: int val$type> = i0;

        r0.<com.android.internal.widget.LockPatternUtils$1: java.lang.String val$passwordString> = r3;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.internal.widget.LockPatternUtils$1 r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.lang.Void $r3;

        r0 := @this: com.android.internal.widget.LockPatternUtils$1;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.internal.widget.LockPatternUtils$1: java.lang.Void doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }

    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        com.android.internal.widget.LockPatternUtils$1 r0;
        android.os.IBinder $r1;
        java.lang.String $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.Void[] r4;
        android.os.storage.IStorageManager r5;

        r0 := @this: com.android.internal.widget.LockPatternUtils$1;

        r4 := @parameter0: java.lang.Void[];

        $r1 = r0.<com.android.internal.widget.LockPatternUtils$1: android.os.IBinder val$service>;

        r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager asInterface(android.os.IBinder)>($r1);

     label1:
        $i0 = r0.<com.android.internal.widget.LockPatternUtils$1: int val$type>;

        $r2 = r0.<com.android.internal.widget.LockPatternUtils$1: java.lang.String val$passwordString>;

        interfaceinvoke r5.<android.os.storage.IStorageManager: int changeEncryptionPassword(int,java.lang.String)>($i0, $r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LockPatternUtils", "Error changing encryption password", $r3);

     label4:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
