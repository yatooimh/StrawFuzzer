class com.android.internal.widget.LockPatternUtils$WrappedCallback extends com.android.internal.widget.ICheckCredentialProgressCallback$Stub
{
    private com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback mCallback;
    private android.os.Handler mHandler;

    void <init>(android.os.Handler, com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback)
    {
        com.android.internal.widget.LockPatternUtils$WrappedCallback r0;
        android.os.Handler r1;
        com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback r2;

        r0 := @this: com.android.internal.widget.LockPatternUtils$WrappedCallback;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback;

        specialinvoke r0.<com.android.internal.widget.ICheckCredentialProgressCallback$Stub: void <init>()>();

        r0.<com.android.internal.widget.LockPatternUtils$WrappedCallback: android.os.Handler mHandler> = r1;

        r0.<com.android.internal.widget.LockPatternUtils$WrappedCallback: com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback mCallback> = r2;

        return;
    }

    public void lambda$onCredentialVerified$0$LockPatternUtils$WrappedCallback()
    {
        com.android.internal.widget.LockPatternUtils$WrappedCallback r0;
        com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback $r1;

        r0 := @this: com.android.internal.widget.LockPatternUtils$WrappedCallback;

        $r1 = r0.<com.android.internal.widget.LockPatternUtils$WrappedCallback: com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback mCallback>;

        interfaceinvoke $r1.<com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback: void onEarlyMatched()>();

        r0.<com.android.internal.widget.LockPatternUtils$WrappedCallback: com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback mCallback> = null;

        return;
    }

    public void onCredentialVerified() throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtils$WrappedCallback r0;
        android.os.Handler $r1, $r3;
        com.android.internal.widget._$$Lambda$LockPatternUtils$WrappedCallback$i9jMZqkjCdhv8ydv_FyQJHm7hSE $r2;

        r0 := @this: com.android.internal.widget.LockPatternUtils$WrappedCallback;

        $r1 = r0.<com.android.internal.widget.LockPatternUtils$WrappedCallback: android.os.Handler mHandler>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LockPatternUtils", "Handler is null during callback");

     label1:
        $r3 = r0.<com.android.internal.widget.LockPatternUtils$WrappedCallback: android.os.Handler mHandler>;

        $r2 = new com.android.internal.widget._$$Lambda$LockPatternUtils$WrappedCallback$i9jMZqkjCdhv8ydv_FyQJHm7hSE;

        specialinvoke $r2.<com.android.internal.widget._$$Lambda$LockPatternUtils$WrappedCallback$i9jMZqkjCdhv8ydv_FyQJHm7hSE: void <init>(com.android.internal.widget.LockPatternUtils$WrappedCallback)>(r0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        r0.<com.android.internal.widget.LockPatternUtils$WrappedCallback: android.os.Handler mHandler> = null;

        return;
    }
}
