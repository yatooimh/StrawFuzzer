class com.android.internal.widget.LockPatternView$1 extends java.lang.Object implements android.animation.ValueAnimator$AnimatorUpdateListener
{
    final com.android.internal.widget.LockPatternView this$0;
    final com.android.internal.widget.LockPatternView$CellState val$cellState;
    final float val$endAlpha;
    final float val$endScale;
    final float val$endTranslationY;
    final float val$startAlpha;
    final float val$startScale;
    final float val$startTranslationY;

    void <init>(com.android.internal.widget.LockPatternView, com.android.internal.widget.LockPatternView$CellState, float, float, float, float, float, float)
    {
        com.android.internal.widget.LockPatternView$1 r0;
        com.android.internal.widget.LockPatternView r1;
        com.android.internal.widget.LockPatternView$CellState r2;
        float f0, f1, f2, f3, f4, f5;

        r0 := @this: com.android.internal.widget.LockPatternView$1;

        r1 := @parameter0: com.android.internal.widget.LockPatternView;

        r2 := @parameter1: com.android.internal.widget.LockPatternView$CellState;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        f2 := @parameter4: float;

        f3 := @parameter5: float;

        f4 := @parameter6: float;

        f5 := @parameter7: float;

        r0.<com.android.internal.widget.LockPatternView$1: com.android.internal.widget.LockPatternView this$0> = r1;

        r0.<com.android.internal.widget.LockPatternView$1: com.android.internal.widget.LockPatternView$CellState val$cellState> = r2;

        r0.<com.android.internal.widget.LockPatternView$1: float val$startAlpha> = f0;

        r0.<com.android.internal.widget.LockPatternView$1: float val$endAlpha> = f1;

        r0.<com.android.internal.widget.LockPatternView$1: float val$startTranslationY> = f2;

        r0.<com.android.internal.widget.LockPatternView$1: float val$endTranslationY> = f3;

        r0.<com.android.internal.widget.LockPatternView$1: float val$startScale> = f4;

        r0.<com.android.internal.widget.LockPatternView$1: float val$endScale> = f5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAnimationUpdate(android.animation.ValueAnimator)
    {
        com.android.internal.widget.LockPatternView$1 r0;
        android.animation.ValueAnimator r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        java.lang.Object $r2;
        java.lang.Float $r3;
        com.android.internal.widget.LockPatternView$CellState $r4, $r5, $r7;
        com.android.internal.widget.LockPatternView $r6, $r8;
        int $i0, $i1;

        r0 := @this: com.android.internal.widget.LockPatternView$1;

        r1 := @parameter0: android.animation.ValueAnimator;

        $r2 = virtualinvoke r1.<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>();

        $r3 = (java.lang.Float) $r2;

        f0 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        $r4 = r0.<com.android.internal.widget.LockPatternView$1: com.android.internal.widget.LockPatternView$CellState val$cellState>;

        $f2 = 1.0F - f0;

        $f1 = r0.<com.android.internal.widget.LockPatternView$1: float val$startAlpha>;

        $f5 = $f2 * $f1;

        $f3 = r0.<com.android.internal.widget.LockPatternView$1: float val$endAlpha>;

        $f4 = $f3 * f0;

        $f6 = $f5 + $f4;

        $r4.<com.android.internal.widget.LockPatternView$CellState: float alpha> = $f6;

        $r5 = r0.<com.android.internal.widget.LockPatternView$1: com.android.internal.widget.LockPatternView$CellState val$cellState>;

        $f8 = 1.0F - f0;

        $f7 = r0.<com.android.internal.widget.LockPatternView$1: float val$startTranslationY>;

        $f11 = $f8 * $f7;

        $f9 = r0.<com.android.internal.widget.LockPatternView$1: float val$endTranslationY>;

        $f10 = $f9 * f0;

        $f12 = $f11 + $f10;

        $r5.<com.android.internal.widget.LockPatternView$CellState: float translationY> = $f12;

        $r7 = r0.<com.android.internal.widget.LockPatternView$1: com.android.internal.widget.LockPatternView$CellState val$cellState>;

        $r6 = r0.<com.android.internal.widget.LockPatternView$1: com.android.internal.widget.LockPatternView this$0>;

        $i0 = staticinvoke <com.android.internal.widget.LockPatternView: int access$000(com.android.internal.widget.LockPatternView)>($r6);

        $i1 = $i0 / 2;

        $f19 = (float) $i1;

        $f14 = 1.0F - f0;

        $f13 = r0.<com.android.internal.widget.LockPatternView$1: float val$startScale>;

        $f17 = $f14 * $f13;

        $f15 = r0.<com.android.internal.widget.LockPatternView$1: float val$endScale>;

        $f16 = $f15 * f0;

        $f18 = $f17 + $f16;

        $f20 = $f19 * $f18;

        $r7.<com.android.internal.widget.LockPatternView$CellState: float radius> = $f20;

        $r8 = r0.<com.android.internal.widget.LockPatternView$1: com.android.internal.widget.LockPatternView this$0>;

        virtualinvoke $r8.<com.android.internal.widget.LockPatternView: void invalidate()>();

        return;
    }
}
