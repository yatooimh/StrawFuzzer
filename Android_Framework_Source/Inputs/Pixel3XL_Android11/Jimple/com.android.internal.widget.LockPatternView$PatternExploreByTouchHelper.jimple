final class com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper extends com.android.internal.widget.ExploreByTouchHelper
{
    private final android.util.SparseArray mItems;
    private android.graphics.Rect mTempRect;
    final com.android.internal.widget.LockPatternView this$0;

    public void <init>(com.android.internal.widget.LockPatternView, android.view.View)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        com.android.internal.widget.LockPatternView r1;
        android.view.View r2;
        android.graphics.Rect $r3;
        android.util.SparseArray $r4, $r6;
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper$VirtualViewContainer $r5;
        java.lang.CharSequence $r7;
        int i0;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        r1 := @parameter0: com.android.internal.widget.LockPatternView;

        r2 := @parameter1: android.view.View;

        r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0> = r1;

        specialinvoke r0.<com.android.internal.widget.ExploreByTouchHelper: void <init>(android.view.View)>(r2);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: android.graphics.Rect mTempRect> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: android.util.SparseArray mItems> = $r4;

        i0 = 1;

     label1:
        if i0 >= 10 goto label2;

        $r6 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: android.util.SparseArray mItems>;

        $r5 = new com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper$VirtualViewContainer;

        $r7 = specialinvoke r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: java.lang.CharSequence getTextForVirtualView(int)>(i0);

        specialinvoke $r5.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper$VirtualViewContainer: void <init>(com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper,java.lang.CharSequence)>(r0, $r7);

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r5);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private android.graphics.Rect getBoundsForVirtualView(int)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        android.graphics.Rect r1;
        com.android.internal.widget.LockPatternView$CellState r2;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        com.android.internal.widget.LockPatternView $r3, $r6, $r7, $r8, $r9, $r10, $r11;
        com.android.internal.widget.LockPatternView$CellState[][] $r4;
        com.android.internal.widget.LockPatternView$CellState[] $r5;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        i4 := @parameter0: int;

        i5 = i4 - 1;

        r1 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: android.graphics.Rect mTempRect>;

        i6 = i5 / 3;

        i7 = i5 % 3;

        $r3 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $r4 = staticinvoke <com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$CellState[][] access$800(com.android.internal.widget.LockPatternView)>($r3);

        $r5 = $r4[i6];

        r2 = $r5[i7];

        $r6 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        f0 = staticinvoke <com.android.internal.widget.LockPatternView: float access$900(com.android.internal.widget.LockPatternView,int)>($r6, i7);

        $r7 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        f1 = staticinvoke <com.android.internal.widget.LockPatternView: float access$1000(com.android.internal.widget.LockPatternView,int)>($r7, i6);

        $r8 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $f4 = staticinvoke <com.android.internal.widget.LockPatternView: float access$1100(com.android.internal.widget.LockPatternView)>($r8);

        $r9 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $f5 = staticinvoke <com.android.internal.widget.LockPatternView: float access$1200(com.android.internal.widget.LockPatternView)>($r9);

        $f6 = $f4 * $f5;

        f2 = $f6 * 0.5F;

        $r10 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $f7 = staticinvoke <com.android.internal.widget.LockPatternView: float access$1300(com.android.internal.widget.LockPatternView)>($r10);

        $r11 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $f8 = staticinvoke <com.android.internal.widget.LockPatternView: float access$1200(com.android.internal.widget.LockPatternView)>($r11);

        $f9 = $f7 * $f8;

        f3 = $f9 * 0.5F;

        $f10 = f0 - f3;

        $i0 = (int) $f10;

        r1.<android.graphics.Rect: int left> = $i0;

        $f11 = f0 + f3;

        $i1 = (int) $f11;

        r1.<android.graphics.Rect: int right> = $i1;

        $f12 = f1 - f2;

        $i2 = (int) $f12;

        r1.<android.graphics.Rect: int top> = $i2;

        $f13 = f1 + f2;

        $i3 = (int) $f13;

        r1.<android.graphics.Rect: int bottom> = $i3;

        return r1;
    }

    private java.lang.CharSequence getTextForVirtualView(int)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        int i0;
        com.android.internal.widget.LockPatternView $r1;
        android.content.res.Resources $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.lang.String $r5;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $r2 = virtualinvoke $r1.<com.android.internal.widget.LockPatternView: android.content.res.Resources getResources()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        $r5 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040438, $r3);

        return $r5;
    }

    private int getVirtualViewIdForHit(float, float)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        float f0, f1;
        int i0, i1, $i2, $i3, i4;
        com.android.internal.widget.LockPatternView $r1, $r2, $r3;
        boolean[][] $r4;
        boolean[] $r5;
        boolean $z0;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        i0 = staticinvoke <com.android.internal.widget.LockPatternView: int access$1400(com.android.internal.widget.LockPatternView,float)>($r1, f1);

        i4 = -2147483648;

        if i0 >= 0 goto label1;

        return -2147483648;

     label1:
        $r2 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        i1 = staticinvoke <com.android.internal.widget.LockPatternView: int access$1500(com.android.internal.widget.LockPatternView,float)>($r2, f0);

        if i1 >= 0 goto label2;

        return -2147483648;

     label2:
        $r3 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $r4 = staticinvoke <com.android.internal.widget.LockPatternView: boolean[][] access$700(com.android.internal.widget.LockPatternView)>($r3);

        $r5 = $r4[i0];

        $z0 = $r5[i1];

        if $z0 == 0 goto label3;

        $i2 = i0 * 3;

        $i3 = $i2 + i1;

        i4 = $i3 + 1;

     label3:
        return i4;
    }

    private boolean isClickable(int)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        int i0, i1, $i2, $i3, $i4;
        com.android.internal.widget.LockPatternView $r1;
        boolean[][] $r2;
        boolean[] $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        i0 := @parameter0: int;

        if i0 == -2147483648 goto label1;

        $i2 = i0 - 1;

        i1 = $i2 / 3;

        $r1 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $r2 = staticinvoke <com.android.internal.widget.LockPatternView: boolean[][] access$700(com.android.internal.widget.LockPatternView)>($r1);

        $r3 = $r2[i1];

        $i3 = i0 - 1;

        $i4 = $i3 % 3;

        $z0 = $r3[$i4];

        $z1 = $z0 ^ 1;

        return $z1;

     label1:
        return 0;
    }

    protected int getVirtualViewAt(float, float)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        float f0, f1;
        int $i0;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = specialinvoke r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: int getVirtualViewIdForHit(float,float)>(f0, f1);

        return $i0;
    }

    protected void getVisibleVirtualViews(android.util.IntArray)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        android.util.IntArray r1;
        com.android.internal.widget.LockPatternView $r2;
        boolean $z0;
        int i0;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        r1 := @parameter0: android.util.IntArray;

        $r2 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $z0 = staticinvoke <com.android.internal.widget.LockPatternView: boolean access$600(com.android.internal.widget.LockPatternView)>($r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        i0 = 1;

     label2:
        if i0 >= 10 goto label3;

        virtualinvoke r1.<android.util.IntArray: void add(int)>(i0);

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    boolean onItemClicked(int)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        int i0;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: void invalidateVirtualView(int)>(i0);

        virtualinvoke r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>(i0, 1);

        return 1;
    }

    protected boolean onPerformActionForVirtualView(int, int, android.os.Bundle)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        int i0, i1;
        android.os.Bundle r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        if i1 == 16 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: boolean onItemClicked(int)>(i0);

        return $z0;
    }

    public void onPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;
        com.android.internal.widget.LockPatternView $r3, $r4;
        boolean $z0;
        android.content.Context $r5;
        java.lang.CharSequence $r6;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<com.android.internal.widget.ExploreByTouchHelper: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r1, r2);

        $r3 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $z0 = staticinvoke <com.android.internal.widget.LockPatternView: boolean access$600(com.android.internal.widget.LockPatternView)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $r5 = virtualinvoke $r4.<com.android.internal.widget.LockPatternView: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.CharSequence getText(int)>(17040436);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>($r6);

     label1:
        return;
    }

    protected void onPopulateEventForVirtualView(int, android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        int i0;
        android.view.accessibility.AccessibilityEvent r1;
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper$VirtualViewContainer r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        java.util.List $r5;
        java.lang.CharSequence $r6;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.accessibility.AccessibilityEvent;

        $r3 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: android.util.SparseArray mItems>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper$VirtualViewContainer) $r4;

        if r2 == null goto label1;

        $r5 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r6 = r2.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper$VirtualViewContainer: java.lang.CharSequence description>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

     label1:
        return;
    }

    protected void onPopulateNodeForVirtualView(int, android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper r0;
        int i0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.CharSequence $r2, $r3;
        com.android.internal.widget.LockPatternView $r4;
        boolean $z0, $z1, $z2;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r5;
        android.graphics.Rect $r6;

        r0 := @this: com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        $r2 = specialinvoke r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: java.lang.CharSequence getTextForVirtualView(int)>(i0);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>($r2);

        $r3 = specialinvoke r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: java.lang.CharSequence getTextForVirtualView(int)>(i0);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>($r3);

        $r4 = r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: com.android.internal.widget.LockPatternView this$0>;

        $z0 = staticinvoke <com.android.internal.widget.LockPatternView: boolean access$600(com.android.internal.widget.LockPatternView)>($r4);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)>(1);

        $z1 = specialinvoke r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: boolean isClickable(int)>(i0);

        if $z1 == 0 goto label1;

        $r5 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_CLICK>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r5);

        $z2 = specialinvoke r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: boolean isClickable(int)>(i0);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>($z2);

     label1:
        $r6 = specialinvoke r0.<com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper: android.graphics.Rect getBoundsForVirtualView(int)>(i0);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>($r6);

        return;
    }
}
