public class com.android.internal.widget.LockscreenCredential extends java.lang.Object implements android.os.Parcelable, java.lang.AutoCloseable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private byte[] mCredential;
    private final int mType;

    static void <clinit>()
    {
        com.android.internal.widget.LockscreenCredential$1 $r0;

        $r0 = new com.android.internal.widget.LockscreenCredential$1;

        specialinvoke $r0.<com.android.internal.widget.LockscreenCredential$1: void <init>()>();

        <com.android.internal.widget.LockscreenCredential: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(int, byte[])
    {
        com.android.internal.widget.LockscreenCredential r0;
        int i0, $i1, $i2;
        byte[] r1;
        boolean z1, z2, z3;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        z1 = 0;

        if i0 != -1 goto label2;

        $i1 = lengthof r1;

        if $i1 != 0 goto label1;

        z1 = 1;

     label1:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z1);

        goto label7;

     label2:
        if i0 == 3 goto label4;

        if i0 == 4 goto label4;

        if i0 != 1 goto label3;

        goto label4;

     label3:
        z2 = 0;

        goto label5;

     label4:
        z2 = 1;

     label5:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z2);

        z3 = 0;

        $i2 = lengthof r1;

        if $i2 <= 0 goto label6;

        z3 = 1;

     label6:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z3);

     label7:
        r0.<com.android.internal.widget.LockscreenCredential: int mType> = i0;

        r0.<com.android.internal.widget.LockscreenCredential: byte[] mCredential> = r1;

        return;
    }

    void <init>(int, byte[], com.android.internal.widget.LockscreenCredential$1)
    {
        com.android.internal.widget.LockscreenCredential r0;
        int i0;
        byte[] r1;
        com.android.internal.widget.LockscreenCredential$1 r2;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r2 := @parameter2: com.android.internal.widget.LockscreenCredential$1;

        specialinvoke r0.<com.android.internal.widget.LockscreenCredential: void <init>(int,byte[])>(i0, r1);

        return;
    }

    private static byte[] charSequenceToByteArray(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        byte[] r1, $r2;
        int $i0, $i1, i5;
        char $c2;
        byte $b3, $b4;

        r0 := @parameter0: java.lang.CharSequence;

        if r0 != null goto label1;

        $r2 = newarray (byte)[0];

        return $r2;

     label1:
        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        r1 = newarray (byte)[$i0];

        i5 = 0;

     label2:
        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i5 >= $i1 goto label3;

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i5);

        $b3 = (byte) $c2;

        $b4 = (byte) $b3;

        r1[i5] = $b4;

        i5 = i5 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static com.android.internal.widget.LockscreenCredential createManagedPassword(byte[])
    {
        byte[] r0, $r2;
        com.android.internal.widget.LockscreenCredential $r1;
        int $i0;

        r0 := @parameter0: byte[];

        $r1 = new com.android.internal.widget.LockscreenCredential;

        $i0 = lengthof r0;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r0, $i0);

        specialinvoke $r1.<com.android.internal.widget.LockscreenCredential: void <init>(int,byte[])>(4, $r2);

        return $r1;
    }

    public static com.android.internal.widget.LockscreenCredential createNone()
    {
        com.android.internal.widget.LockscreenCredential $r0;
        byte[] $r1;

        $r0 = new com.android.internal.widget.LockscreenCredential;

        $r1 = newarray (byte)[0];

        specialinvoke $r0.<com.android.internal.widget.LockscreenCredential: void <init>(int,byte[])>(-1, $r1);

        return $r0;
    }

    public static com.android.internal.widget.LockscreenCredential createPassword(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        com.android.internal.widget.LockscreenCredential $r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = new com.android.internal.widget.LockscreenCredential;

        $r2 = staticinvoke <com.android.internal.widget.LockscreenCredential: byte[] charSequenceToByteArray(java.lang.CharSequence)>(r0);

        specialinvoke $r1.<com.android.internal.widget.LockscreenCredential: void <init>(int,byte[])>(4, $r2);

        return $r1;
    }

    public static com.android.internal.widget.LockscreenCredential createPasswordOrNone(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean $z0;
        com.android.internal.widget.LockscreenCredential $r1, $r2;

        r0 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createNone()>();

        return $r2;

     label1:
        $r1 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createPassword(java.lang.CharSequence)>(r0);

        return $r1;
    }

    public static com.android.internal.widget.LockscreenCredential createPattern(java.util.List)
    {
        java.util.List r0;
        com.android.internal.widget.LockscreenCredential $r1;
        byte[] $r2;

        r0 := @parameter0: java.util.List;

        $r1 = new com.android.internal.widget.LockscreenCredential;

        $r2 = staticinvoke <com.android.internal.widget.LockPatternUtils: byte[] patternToByteArray(java.util.List)>(r0);

        specialinvoke $r1.<com.android.internal.widget.LockscreenCredential: void <init>(int,byte[])>(1, $r2);

        return $r1;
    }

    public static com.android.internal.widget.LockscreenCredential createPin(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        com.android.internal.widget.LockscreenCredential $r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = new com.android.internal.widget.LockscreenCredential;

        $r2 = staticinvoke <com.android.internal.widget.LockscreenCredential: byte[] charSequenceToByteArray(java.lang.CharSequence)>(r0);

        specialinvoke $r1.<com.android.internal.widget.LockscreenCredential: void <init>(int,byte[])>(3, $r2);

        return $r1;
    }

    public static com.android.internal.widget.LockscreenCredential createPinOrNone(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean $z0;
        com.android.internal.widget.LockscreenCredential $r1, $r2;

        r0 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createNone()>();

        return $r2;

     label1:
        $r1 = staticinvoke <com.android.internal.widget.LockscreenCredential: com.android.internal.widget.LockscreenCredential createPin(java.lang.CharSequence)>(r0);

        return $r1;
    }

    private void ensureNotZeroized()
    {
        com.android.internal.widget.LockscreenCredential r0;
        byte[] $r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        $r1 = r0.<com.android.internal.widget.LockscreenCredential: byte[] mCredential>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>(z0, "Credential is already zeroized");

        return;
    }

    public boolean checkAgainstStoredType(int)
    {
        com.android.internal.widget.LockscreenCredential r0;
        int i0, $i1, $i2, $i3;
        boolean z1, z2;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        i0 := @parameter0: int;

        z1 = 1;

        if i0 != 2 goto label3;

        z2 = 1;

        $i2 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: int getType()>();

        if $i2 == 4 goto label2;

        $i3 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: int getType()>();

        if $i3 != 3 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;

     label3:
        $i1 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: int getType()>();

        if $i1 != i0 goto label4;

        goto label5;

     label4:
        z1 = 0;

     label5:
        return z1;
    }

    public void checkLength()
    {
        com.android.internal.widget.LockscreenCredential r0;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1, $r2;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        $z0 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: boolean isNone()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: boolean isPattern()>();

        if $z1 == 0 goto label3;

        $i1 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: int size()>();

        if $i1 < 4 goto label2;

        return;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pattern must not be null and at least 4 dots long.");

        throw $r2;

     label3:
        $z2 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: boolean isPassword()>();

        if $z2 != 0 goto label5;

        $z3 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: boolean isPin()>();

        if $z3 == 0 goto label4;

        goto label5;

     label4:
        return;

     label5:
        $i0 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: int size()>();

        if $i0 < 4 goto label6;

        return;

     label6:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("password must not be null and at least of length 4");

        throw $r1;
    }

    public void close()
    {
        com.android.internal.widget.LockscreenCredential r0;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: void zeroize()>();

        return;
    }

    public int describeContents()
    {
        com.android.internal.widget.LockscreenCredential r0;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        return 0;
    }

    public com.android.internal.widget.LockscreenCredential duplicate()
    {
        com.android.internal.widget.LockscreenCredential r0, $r1;
        int i0, $i1;
        byte[] r2, r3;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        i0 = r0.<com.android.internal.widget.LockscreenCredential: int mType>;

        r2 = r0.<com.android.internal.widget.LockscreenCredential: byte[] mCredential>;

        if r2 == null goto label1;

        $i1 = lengthof r2;

        r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r2, $i1);

        goto label2;

     label1:
        r3 = null;

     label2:
        $r1 = new com.android.internal.widget.LockscreenCredential;

        specialinvoke $r1.<com.android.internal.widget.LockscreenCredential: void <init>(int,byte[])>(i0, r3);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.internal.widget.LockscreenCredential r0, r4;
        boolean $z0, $z1, z2;
        int $i0, $i1;
        byte[] $r1, $r2;
        java.lang.Object r3;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        r3 := @parameter0: java.lang.Object;

        z2 = 1;

        if r3 != r0 goto label1;

        return 1;

     label1:
        $z0 = r3 instanceof com.android.internal.widget.LockscreenCredential;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r4 = (com.android.internal.widget.LockscreenCredential) r3;

        $i1 = r0.<com.android.internal.widget.LockscreenCredential: int mType>;

        $i0 = r4.<com.android.internal.widget.LockscreenCredential: int mType>;

        if $i1 != $i0 goto label3;

        $r2 = r0.<com.android.internal.widget.LockscreenCredential: byte[] mCredential>;

        $r1 = r4.<com.android.internal.widget.LockscreenCredential: byte[] mCredential>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r2, $r1);

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    public byte[] getCredential()
    {
        com.android.internal.widget.LockscreenCredential r0;
        byte[] $r1;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        specialinvoke r0.<com.android.internal.widget.LockscreenCredential: void ensureNotZeroized()>();

        $r1 = r0.<com.android.internal.widget.LockscreenCredential: byte[] mCredential>;

        return $r1;
    }

    public int getStorageCryptType()
    {
        com.android.internal.widget.LockscreenCredential r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        $z0 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: boolean isNone()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: boolean isPattern()>();

        if $z1 == 0 goto label2;

        return 2;

     label2:
        $z2 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: boolean isPin()>();

        if $z2 == 0 goto label3;

        return 3;

     label3:
        $z3 = virtualinvoke r0.<com.android.internal.widget.LockscreenCredential: boolean isPassword()>();

        if $z3 == 0 goto label4;

        return 0;

     label4:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unhandled credential type");

        throw $r1;
    }

    public int getType()
    {
        com.android.internal.widget.LockscreenCredential r0;
        int $i0;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        specialinvoke r0.<com.android.internal.widget.LockscreenCredential: void ensureNotZeroized()>();

        $i0 = r0.<com.android.internal.widget.LockscreenCredential: int mType>;

        return $i0;
    }

    public int hashCode()
    {
        com.android.internal.widget.LockscreenCredential r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        $i0 = r0.<com.android.internal.widget.LockscreenCredential: int mType>;

        $i1 = $i0 + 17;

        $i2 = $i1 * 31;

        $r1 = r0.<com.android.internal.widget.LockscreenCredential: byte[] mCredential>;

        $i3 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i4 = $i2 + $i3;

        return $i4;
    }

    public boolean isNone()
    {
        com.android.internal.widget.LockscreenCredential r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        specialinvoke r0.<com.android.internal.widget.LockscreenCredential: void ensureNotZeroized()>();

        $i0 = r0.<com.android.internal.widget.LockscreenCredential: int mType>;

        if $i0 != -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPassword()
    {
        com.android.internal.widget.LockscreenCredential r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        specialinvoke r0.<com.android.internal.widget.LockscreenCredential: void ensureNotZeroized()>();

        $i0 = r0.<com.android.internal.widget.LockscreenCredential: int mType>;

        if $i0 != 4 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPattern()
    {
        com.android.internal.widget.LockscreenCredential r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        specialinvoke r0.<com.android.internal.widget.LockscreenCredential: void ensureNotZeroized()>();

        i0 = r0.<com.android.internal.widget.LockscreenCredential: int mType>;

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPin()
    {
        com.android.internal.widget.LockscreenCredential r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        specialinvoke r0.<com.android.internal.widget.LockscreenCredential: void ensureNotZeroized()>();

        $i0 = r0.<com.android.internal.widget.LockscreenCredential: int mType>;

        if $i0 != 3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int size()
    {
        com.android.internal.widget.LockscreenCredential r0;
        byte[] $r1;
        int $i0;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        specialinvoke r0.<com.android.internal.widget.LockscreenCredential: void ensureNotZeroized()>();

        $r1 = r0.<com.android.internal.widget.LockscreenCredential: byte[] mCredential>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.internal.widget.LockscreenCredential r0;
        android.os.Parcel r1;
        int i0, $i1;
        byte[] $r2;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<com.android.internal.widget.LockscreenCredential: int mType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<com.android.internal.widget.LockscreenCredential: byte[] mCredential>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r2);

        return;
    }

    public void zeroize()
    {
        com.android.internal.widget.LockscreenCredential r0;
        byte[] r1;

        r0 := @this: com.android.internal.widget.LockscreenCredential;

        r1 = r0.<com.android.internal.widget.LockscreenCredential: byte[] mCredential>;

        if r1 == null goto label1;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r1, 0);

        r0.<com.android.internal.widget.LockscreenCredential: byte[] mCredential> = null;

     label1:
        return;
    }
}
