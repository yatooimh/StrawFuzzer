public interface  com.android.internal.widget.MessagingLinearLayout$MessagingChild extends java.lang.Object
{
    public static final int MEASURED_NORMAL;
    public static final int MEASURED_SHORTENED;
    public static final int MEASURED_TOO_SMALL;

    public abstract int getConsumedLines();

    public int getExtraSpacing()
    {
        com.android.internal.widget.MessagingLinearLayout$MessagingChild r0;

        r0 := @this: com.android.internal.widget.MessagingLinearLayout$MessagingChild;

        return 0;
    }

    public abstract int getMeasuredType();

    public boolean hasDifferentHeightWhenFirst()
    {
        com.android.internal.widget.MessagingLinearLayout$MessagingChild r0;

        r0 := @this: com.android.internal.widget.MessagingLinearLayout$MessagingChild;

        return 0;
    }

    public abstract void hideAnimated();

    public abstract boolean isHidingAnimated();

    public void setIsFirstInLayout(boolean)
    {
        com.android.internal.widget.MessagingLinearLayout$MessagingChild r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.MessagingLinearLayout$MessagingChild;

        z0 := @parameter0: boolean;

        return;
    }

    public abstract void setMaxDisplayedLines(int);

    public static void <clinit>()
    {
        <com.android.internal.widget.MessagingLinearLayout$MessagingChild: int MEASURED_TOO_SMALL> = 2;

        <com.android.internal.widget.MessagingLinearLayout$MessagingChild: int MEASURED_SHORTENED> = 1;

        <com.android.internal.widget.MessagingLinearLayout$MessagingChild: int MEASURED_NORMAL> = 0;

        return;
    }
}
