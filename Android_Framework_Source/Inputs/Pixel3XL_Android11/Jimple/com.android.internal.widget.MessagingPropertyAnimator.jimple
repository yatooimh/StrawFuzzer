public class com.android.internal.widget.MessagingPropertyAnimator extends java.lang.Object implements android.view.View$OnLayoutChangeListener
{
    public static final android.view.animation.Interpolator ALPHA_IN;
    public static final android.view.animation.Interpolator ALPHA_OUT;
    private static final long APPEAR_ANIMATION_LENGTH;
    private static final com.android.internal.widget.ViewClippingUtil$ClippingParameters CLIPPING_PARAMETERS;
    private static final int TAG_ALPHA_ANIMATOR;
    private static final int TAG_FIRST_LAYOUT;
    private static final int TAG_LAYOUT_TOP;
    private static final int TAG_TOP;
    private static final int TAG_TOP_ANIMATOR;
    private static final android.util.IntProperty TOP;

    static void <clinit>()
    {
        com.android.internal.widget.'-$$Lambda$MessagingPropertyAnimator$7coWc0tjIUC7grCXucNFbpYTxDI' $r2;
        android.view.animation.PathInterpolator r4, r5;
        com.android.internal.widget.MessagingPropertyAnimator$1 r6;
        com.android.internal.widget.ViewClippingUtil$ClippingParameters r7;

        <com.android.internal.widget.MessagingPropertyAnimator: int TAG_TOP_ANIMATOR> = 16909500;

        <com.android.internal.widget.MessagingPropertyAnimator: int TAG_TOP> = 16909501;

        <com.android.internal.widget.MessagingPropertyAnimator: int TAG_LAYOUT_TOP> = 16909499;

        <com.android.internal.widget.MessagingPropertyAnimator: int TAG_FIRST_LAYOUT> = 16909498;

        <com.android.internal.widget.MessagingPropertyAnimator: int TAG_ALPHA_ANIMATOR> = 16909497;

        <com.android.internal.widget.MessagingPropertyAnimator: long APPEAR_ANIMATION_LENGTH> = 210L;

        r4 = new android.view.animation.PathInterpolator;

        specialinvoke r4.<android.view.animation.PathInterpolator: void <init>(float,float,float,float)>(0.4F, 0.0F, 1.0F, 1.0F);

        <com.android.internal.widget.MessagingPropertyAnimator: android.view.animation.Interpolator ALPHA_IN> = r4;

        r5 = new android.view.animation.PathInterpolator;

        specialinvoke r5.<android.view.animation.PathInterpolator: void <init>(float,float,float,float)>(0.0F, 0.0F, 0.8F, 1.0F);

        <com.android.internal.widget.MessagingPropertyAnimator: android.view.animation.Interpolator ALPHA_OUT> = r5;

        $r2 = <com.android.internal.widget._$$Lambda$MessagingPropertyAnimator$7coWc0tjIUC7grCXucNFbpYTxDI: com.android.internal.widget.'-$$Lambda$MessagingPropertyAnimator$7coWc0tjIUC7grCXucNFbpYTxDI' INSTANCE>;

        r7 = (com.android.internal.widget.ViewClippingUtil$ClippingParameters) $r2;

        <com.android.internal.widget.MessagingPropertyAnimator: com.android.internal.widget.ViewClippingUtil$ClippingParameters CLIPPING_PARAMETERS> = r7;

        r6 = new com.android.internal.widget.MessagingPropertyAnimator$1;

        specialinvoke r6.<com.android.internal.widget.MessagingPropertyAnimator$1: void <init>(java.lang.String)>("top");

        <com.android.internal.widget.MessagingPropertyAnimator: android.util.IntProperty TOP> = r6;

        return;
    }

    public void <init>()
    {
        com.android.internal.widget.MessagingPropertyAnimator r0;

        r0 := @this: com.android.internal.widget.MessagingPropertyAnimator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$000(android.view.View, int)
    {
        android.view.View r0;
        int i0;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void setTop(android.view.View,int)>(r0, i0);

        return;
    }

    static void access$100(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void updateLayerType(android.view.View,boolean)>(r0, z0);

        return;
    }

    public static void fadeIn(android.view.View)
    {
        android.view.View r0;
        java.lang.Object $r1;
        int $i0;
        float[] $r2;
        android.util.Property $r3;
        android.view.animation.Interpolator $r4;
        com.android.internal.widget.MessagingPropertyAnimator$3 $r6;
        android.animation.ObjectAnimator r7, r8;

        r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>(16909497);

        r7 = (android.animation.ObjectAnimator) $r1;

        if r7 == null goto label1;

        virtualinvoke r7.<android.animation.ObjectAnimator: void cancel()>();

     label1:
        $i0 = virtualinvoke r0.<android.view.View: int getVisibility()>();

        if $i0 != 4 goto label2;

        virtualinvoke r0.<android.view.View: void setVisibility(int)>(0);

     label2:
        $r3 = <android.view.View: android.util.Property ALPHA>;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 1.0F;

        r8 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r3, $r2);

        virtualinvoke r0.<android.view.View: void setAlpha(float)>(0.0F);

        $r4 = <com.android.internal.widget.MessagingPropertyAnimator: android.view.animation.Interpolator ALPHA_IN>;

        virtualinvoke r8.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r4);

        virtualinvoke r8.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(210L);

        $r6 = new com.android.internal.widget.MessagingPropertyAnimator$3;

        specialinvoke $r6.<com.android.internal.widget.MessagingPropertyAnimator$3: void <init>(android.view.View)>(r0);

        virtualinvoke r8.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r6);

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void updateLayerType(android.view.View,boolean)>(r0, 1);

        virtualinvoke r0.<android.view.View: void setTagInternal(int,java.lang.Object)>(16909497, r8);

        virtualinvoke r8.<android.animation.ObjectAnimator: void start()>();

        return;
    }

    public static void fadeOut(android.view.View, java.lang.Runnable)
    {
        android.view.View r0;
        java.lang.Runnable r1;
        java.lang.Object $r2;
        boolean $z0, $z1, $z2;
        float[] $r3;
        android.util.Property $r4;
        float $f0;
        android.view.animation.Interpolator $r5;
        com.android.internal.widget.MessagingPropertyAnimator$4 $r7;
        android.animation.ObjectAnimator r8, r9;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.lang.Runnable;

        $r2 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>(16909497);

        r8 = (android.animation.ObjectAnimator) $r2;

        if r8 == null goto label1;

        virtualinvoke r8.<android.animation.ObjectAnimator: void cancel()>();

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean isShown()>();

        if $z0 == 0 goto label3;

        $z1 = staticinvoke <com.android.internal.widget.MessagingLinearLayout: boolean isGone(android.view.View)>(r0);

        if $z1 == 0 goto label2;

        $z2 = staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: boolean isHidingAnimated(android.view.View)>(r0);

        if $z2 != 0 goto label2;

        goto label3;

     label2:
        $r4 = <android.view.View: android.util.Property ALPHA>;

        $r3 = newarray (float)[2];

        $f0 = virtualinvoke r0.<android.view.View: float getAlpha()>();

        $r3[0] = $f0;

        $r3[1] = 0.0F;

        r9 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r4, $r3);

        $r5 = <com.android.internal.widget.MessagingPropertyAnimator: android.view.animation.Interpolator ALPHA_OUT>;

        virtualinvoke r9.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r5);

        virtualinvoke r9.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(210L);

        $r7 = new com.android.internal.widget.MessagingPropertyAnimator$4;

        specialinvoke $r7.<com.android.internal.widget.MessagingPropertyAnimator$4: void <init>(android.view.View,java.lang.Runnable)>(r0, r1);

        virtualinvoke r9.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r7);

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void updateLayerType(android.view.View,boolean)>(r0, 1);

        virtualinvoke r0.<android.view.View: void setTagInternal(int,java.lang.Object)>(16909497, r9);

        virtualinvoke r9.<android.animation.ObjectAnimator: void start()>();

        return;

     label3:
        virtualinvoke r0.<android.view.View: void setAlpha(float)>(0.0F);

        if r1 == null goto label4;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label4:
        return;
    }

    public static int getLayoutTop(android.view.View)
    {
        android.view.View r0;
        java.lang.Integer r1;
        java.lang.Object $r2;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>(16909499);

        r1 = (java.lang.Integer) $r2;

        if r1 != null goto label1;

        $i1 = staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: int getTop(android.view.View)>(r0);

        return $i1;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static int getTop(android.view.View)
    {
        android.view.View r0;
        java.lang.Integer r1;
        java.lang.Object $r2;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>(16909501);

        r1 = (java.lang.Integer) $r2;

        if r1 != null goto label1;

        $i1 = virtualinvoke r0.<android.view.View: int getTop()>();

        return $i1;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static boolean isAnimatingAlpha(android.view.View)
    {
        android.view.View r0;
        java.lang.Object $r1;
        boolean z0;

        r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>(16909497);

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isAnimatingTranslation(android.view.View)
    {
        android.view.View r0;
        java.lang.Object $r1;
        boolean z0;

        r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>(16909500);

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isFirstLayout(android.view.View)
    {
        java.lang.Object $r0;
        boolean $z0;
        android.view.View r1;
        java.lang.Boolean r2;

        r1 := @parameter0: android.view.View;

        $r0 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>(16909498);

        r2 = (java.lang.Boolean) $r0;

        if r2 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private static boolean isHidingAnimated(android.view.View)
    {
        android.view.View r0;
        boolean $z0, $z1;
        com.android.internal.widget.MessagingLinearLayout$MessagingChild $r1;

        r0 := @parameter0: android.view.View;

        $z0 = r0 instanceof com.android.internal.widget.MessagingLinearLayout$MessagingChild;

        if $z0 == 0 goto label1;

        $r1 = (com.android.internal.widget.MessagingLinearLayout$MessagingChild) r0;

        $z1 = interfaceinvoke $r1.<com.android.internal.widget.MessagingLinearLayout$MessagingChild: boolean isHidingAnimated()>();

        return $z1;

     label1:
        return 0;
    }

    static boolean lambda$static$0(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getId()>();

        if $i0 != 16909239 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static void recycle(android.view.View)
    {
        android.view.View r0;

        r0 := @parameter0: android.view.View;

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void setFirstLayout(android.view.View,boolean)>(r0, 1);

        return;
    }

    public static void setClippingDeactivated(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0;
        com.android.internal.widget.ViewClippingUtil$ClippingParameters $r1;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $r1 = <com.android.internal.widget.MessagingPropertyAnimator: com.android.internal.widget.ViewClippingUtil$ClippingParameters CLIPPING_PARAMETERS>;

        staticinvoke <com.android.internal.widget.ViewClippingUtil: void setClippingDeactivated(android.view.View,boolean,com.android.internal.widget.ViewClippingUtil$ClippingParameters)>(r0, z0, $r1);

        return;
    }

    private static void setFirstLayout(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0;
        java.lang.Boolean $r1;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke r0.<android.view.View: void setTagInternal(int,java.lang.Object)>(16909498, $r1);

        return;
    }

    private static void setLayoutTop(android.view.View, int)
    {
        android.view.View r0;
        int i0;
        java.lang.Integer $r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r0.<android.view.View: void setTagInternal(int,java.lang.Object)>(16909499, $r1);

        return;
    }

    public static void setToLaidOutPosition(android.view.View)
    {
        android.view.View r0;
        int $i0;

        r0 := @parameter0: android.view.View;

        $i0 = staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: int getLayoutTop(android.view.View)>(r0);

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void setTop(android.view.View,int)>(r0, $i0);

        return;
    }

    private static void setTop(android.view.View, int)
    {
        android.view.View r0;
        int i0;
        java.lang.Integer $r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r0.<android.view.View: void setTagInternal(int,java.lang.Object)>(16909501, $r1);

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void updateTopAndBottom(android.view.View)>(r0);

        return;
    }

    public static void startLocalTranslationFrom(android.view.View, int, android.view.animation.Interpolator)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3;
        android.view.animation.Interpolator r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 := @parameter2: android.view.animation.Interpolator;

        $i1 = staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: int getTop(android.view.View)>(r0);

        $i2 = $i1 + i0;

        $i3 = staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: int getLayoutTop(android.view.View)>(r0);

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void startTopAnimation(android.view.View,int,int,android.view.animation.Interpolator)>(r0, $i2, $i3, r1);

        return;
    }

    public static void startLocalTranslationTo(android.view.View, int, android.view.animation.Interpolator)
    {
        android.view.View r0;
        int i0, i1, $i2;
        android.view.animation.Interpolator r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 := @parameter2: android.view.animation.Interpolator;

        i1 = staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: int getTop(android.view.View)>(r0);

        $i2 = i1 + i0;

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void startTopAnimation(android.view.View,int,int,android.view.animation.Interpolator)>(r0, i1, $i2, r1);

        return;
    }

    private static void startTopAnimation(android.view.View, int, int, android.view.animation.Interpolator)
    {
        android.view.View r0;
        int i0, i1;
        android.view.animation.Interpolator r1;
        java.lang.Object $r2;
        boolean $z0, $z1, $z2;
        int[] $r3;
        android.util.IntProperty $r4;
        com.android.internal.widget.MessagingPropertyAnimator$2 $r6;
        android.animation.ObjectAnimator r7, r8;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.view.animation.Interpolator;

        $r2 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>(16909500);

        r7 = (android.animation.ObjectAnimator) $r2;

        if r7 == null goto label1;

        virtualinvoke r7.<android.animation.ObjectAnimator: void cancel()>();

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean isShown()>();

        if $z0 == 0 goto label3;

        if i0 == i1 goto label3;

        $z1 = staticinvoke <com.android.internal.widget.MessagingLinearLayout: boolean isGone(android.view.View)>(r0);

        if $z1 == 0 goto label2;

        $z2 = staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: boolean isHidingAnimated(android.view.View)>(r0);

        if $z2 != 0 goto label2;

        goto label3;

     label2:
        $r4 = <com.android.internal.widget.MessagingPropertyAnimator: android.util.IntProperty TOP>;

        $r3 = newarray (int)[2];

        $r3[0] = i0;

        $r3[1] = i1;

        r8 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[])>(r0, $r4, $r3);

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void setTop(android.view.View,int)>(r0, i0);

        virtualinvoke r8.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>(r1);

        virtualinvoke r8.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(210L);

        $r6 = new com.android.internal.widget.MessagingPropertyAnimator$2;

        specialinvoke $r6.<com.android.internal.widget.MessagingPropertyAnimator$2: void <init>(android.view.View)>(r0);

        virtualinvoke r8.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r6);

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void setClippingDeactivated(android.view.View,boolean)>(r0, 1);

        virtualinvoke r0.<android.view.View: void setTagInternal(int,java.lang.Object)>(16909500, r8);

        virtualinvoke r8.<android.animation.ObjectAnimator: void start()>();

        return;

     label3:
        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void setTop(android.view.View,int)>(r0, i1);

        return;
    }

    private static void updateLayerType(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0, $z1;
        int $i0;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<android.view.View: boolean hasOverlappingRendering()>();

        if $z1 == 0 goto label1;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.view.View: void setLayerType(int,android.graphics.Paint)>(2, null);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<android.view.View: int getLayerType()>();

        if $i0 != 2 goto label2;

        virtualinvoke r0.<android.view.View: void setLayerType(int,android.graphics.Paint)>(0, null);

     label2:
        return;
    }

    private static void updateTopAndBottom(android.view.View)
    {
        android.view.View r0;
        int i0, i1, $i2;

        r0 := @parameter0: android.view.View;

        i0 = staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: int getTop(android.view.View)>(r0);

        i1 = virtualinvoke r0.<android.view.View: int getHeight()>();

        virtualinvoke r0.<android.view.View: void setTop(int)>(i0);

        $i2 = i1 + i0;

        virtualinvoke r0.<android.view.View: void setBottom(int)>($i2);

        return;
    }

    public void onLayoutChange(android.view.View, int, int, int, int, int, int, int, int)
    {
        com.android.internal.widget.MessagingPropertyAnimator r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        boolean $z0;
        android.view.animation.Interpolator $r2;

        r0 := @this: com.android.internal.widget.MessagingPropertyAnimator;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void setLayoutTop(android.view.View,int)>(r1, i1);

        $z0 = staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: boolean isFirstLayout(android.view.View)>(r1);

        if $z0 == 0 goto label1;

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void setFirstLayout(android.view.View,boolean)>(r1, 0);

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void setTop(android.view.View,int)>(r1, i1);

        return;

     label1:
        $i8 = staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: int getTop(android.view.View)>(r1);

        $r2 = <com.android.internal.widget.MessagingLayout: android.view.animation.Interpolator FAST_OUT_SLOW_IN>;

        staticinvoke <com.android.internal.widget.MessagingPropertyAnimator: void startTopAnimation(android.view.View,int,int,android.view.animation.Interpolator)>(r1, $i8, i1, $r2);

        return;
    }
}
