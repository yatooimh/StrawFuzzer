public class com.android.internal.widget.NotificationActionListLayout extends android.widget.LinearLayout
{
    public static final java.util.Comparator MEASURE_ORDER_COMPARATOR;
    private int mDefaultPaddingBottom;
    private int mDefaultPaddingTop;
    private int mEmphasizedHeight;
    private boolean mEmphasizedMode;
    private final int mGravity;
    private java.util.ArrayList mMeasureOrderOther;
    private java.util.ArrayList mMeasureOrderTextViews;
    private int mRegularHeight;
    private int mTotalWidth;

    static void <clinit>()
    {
        com.android.internal.widget.'-$$Lambda$NotificationActionListLayout$uFZFEmIEBpI3kn6c3tNvvgmMSv8' $r0;
        java.util.Comparator r1;

        $r0 = <com.android.internal.widget._$$Lambda$NotificationActionListLayout$uFZFEmIEBpI3kn6c3tNvvgmMSv8: com.android.internal.widget.'-$$Lambda$NotificationActionListLayout$uFZFEmIEBpI3kn6c3tNvvgmMSv8' INSTANCE>;

        r1 = (java.util.Comparator) $r0;

        <com.android.internal.widget.NotificationActionListLayout: java.util.Comparator MEASURE_ORDER_COMPARATOR> = r1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        android.util.AttributeSet r1;
        int i0, i1, $i2;
        java.util.ArrayList $r2, $r3;
        int[] $r4;
        android.content.Context r5;
        android.content.res.TypedArray r6;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        r5 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r5, r1, i0, i1);

        r0.<com.android.internal.widget.NotificationActionListLayout: int mTotalWidth> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderTextViews> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderOther> = $r3;

        $r4 = newarray (int)[1];

        $r4[0] = 16842927;

        r6 = virtualinvoke r5.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r4, i0, i1);

        $i2 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        r0.<com.android.internal.widget.NotificationActionListLayout: int mGravity> = $i2;

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void clearMeasureOrder()
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        $r1 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderOther>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderTextViews>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        return;
    }

    static int lambda$static$0(android.util.Pair, android.util.Pair)
    {
        android.util.Pair r0, r1;
        java.lang.Object $r2, $r3;
        java.lang.Integer $r4, $r5;
        int $i0;

        r0 := @parameter0: android.util.Pair;

        r1 := @parameter1: android.util.Pair;

        $r2 = r0.<android.util.Pair: java.lang.Object first>;

        $r5 = (java.lang.Integer) $r2;

        $r3 = r1.<android.util.Pair: java.lang.Object first>;

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int compareTo(java.lang.Integer)>($r4);

        return $i0;
    }

    private void rebuildMeasureOrder(int, int)
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        android.view.View r1;
        java.util.ArrayList $r2, $r3, $r5, $r6, $r10;
        java.util.Comparator $r4;
        boolean $z0;
        android.widget.TextView $r7, $r9, $r13;
        java.lang.CharSequence $r8, $r11;
        int $i0, $i1, i2, i3, i4, i5;
        java.lang.Integer $r12;
        android.util.Pair $r14;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        specialinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void clearMeasureOrder()>();

        $r2 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderTextViews>;

        virtualinvoke $r2.<java.util.ArrayList: void ensureCapacity(int)>(i2);

        $r3 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderOther>;

        virtualinvoke $r3.<java.util.ArrayList: void ensureCapacity(int)>(i3);

        i4 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getChildCount()>();

        i5 = 0;

     label1:
        if i5 >= i4 goto label4;

        r1 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: android.view.View getChildAt(int)>(i5);

        $z0 = r1 instanceof android.widget.TextView;

        if $z0 == 0 goto label2;

        $r7 = (android.widget.TextView) r1;

        $r8 = virtualinvoke $r7.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = interfaceinvoke $r8.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label2;

        $r10 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderTextViews>;

        $r9 = (android.widget.TextView) r1;

        $r11 = virtualinvoke $r9.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i1 = interfaceinvoke $r11.<java.lang.CharSequence: int length()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r13 = (android.widget.TextView) r1;

        $r14 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r12, $r13);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        goto label3;

     label2:
        $r6 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderOther>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        $r5 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderTextViews>;

        $r4 = <com.android.internal.widget.NotificationActionListLayout: java.util.Comparator MEASURE_ORDER_COMPARATOR>;

        virtualinvoke $r5.<java.util.ArrayList: void sort(java.util.Comparator)>($r4);

        return;
    }

    private void updateHeights()
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.res.Resources $r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        $r1 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105344);

        $r2 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105345);

        $i2 = $i1 + i0;

        $r3 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105334);

        $i4 = $i2 + $i3;

        r0.<com.android.internal.widget.NotificationActionListLayout: int mEmphasizedHeight> = $i4;

        $r4 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: android.content.res.Resources getResources()>();

        $i5 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105335);

        r0.<com.android.internal.widget.NotificationActionListLayout: int mRegularHeight> = $i5;

        return;
    }

    public int getExtraMeasureHeight()
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        $z0 = r0.<com.android.internal.widget.NotificationActionListLayout: boolean mEmphasizedMode>;

        if $z0 == 0 goto label1;

        $i1 = r0.<com.android.internal.widget.NotificationActionListLayout: int mEmphasizedHeight>;

        $i0 = r0.<com.android.internal.widget.NotificationActionListLayout: int mRegularHeight>;

        $i2 = $i1 - $i0;

        return $i2;

     label1:
        return 0;
    }

    protected void onFinishInflate()
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        specialinvoke r0.<android.widget.LinearLayout: void onFinishInflate()>();

        $i0 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getPaddingBottom()>();

        r0.<com.android.internal.widget.NotificationActionListLayout: int mDefaultPaddingBottom> = $i0;

        $i1 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getPaddingTop()>();

        r0.<com.android.internal.widget.NotificationActionListLayout: int mDefaultPaddingTop> = $i1;

        specialinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void updateHeights()>();

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, i40, i41, i42, i43, i45, i47;
        android.view.View r1;
        boolean $z0, z1, z2, z3;
        android.view.ViewGroup$LayoutParams $r2;
        byte b44;
        android.view.ViewGroup$MarginLayoutParams r4;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        z1 := @parameter0: boolean;

        i38 := @parameter1: int;

        i0 := @parameter2: int;

        i39 := @parameter3: int;

        i1 := @parameter4: int;

        $z0 = r0.<com.android.internal.widget.NotificationActionListLayout: boolean mEmphasizedMode>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>(z1, i38, i0, i39, i1);

        return;

     label1:
        z2 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: boolean isLayoutRtl()>();

        i2 = r0.<com.android.internal.widget.NotificationActionListLayout: int mPaddingTop>;

        i40 = r0.<com.android.internal.widget.NotificationActionListLayout: int mGravity>;

        z3 = 1;

        $i8 = i40 & 1;

        if $i8 == 0 goto label2;

        goto label3;

     label2:
        z3 = 0;

     label3:
        if z3 == 0 goto label4;

        $i31 = r0.<com.android.internal.widget.NotificationActionListLayout: int mPaddingLeft>;

        $i34 = $i31 + i38;

        $i32 = i39 - i38;

        $i33 = $i32 / 2;

        $i37 = $i34 + $i33;

        $i35 = r0.<com.android.internal.widget.NotificationActionListLayout: int mTotalWidth>;

        $i36 = $i35 / 2;

        i41 = $i37 - $i36;

        goto label5;

     label4:
        i42 = r0.<com.android.internal.widget.NotificationActionListLayout: int mPaddingLeft>;

        i41 = i42;

        $i9 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getLayoutDirection()>();

        $i10 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>(8388611, $i9);

        if $i10 != 5 goto label5;

        $i29 = i39 - i38;

        $i28 = r0.<com.android.internal.widget.NotificationActionListLayout: int mTotalWidth>;

        $i30 = $i29 - $i28;

        i41 = i42 + $i30;

     label5:
        i3 = r0.<com.android.internal.widget.NotificationActionListLayout: int mPaddingBottom>;

        i4 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getChildCount()>();

        i43 = 0;

        b44 = 1;

        if z2 == 0 goto label6;

        i43 = i4 - 1;

        b44 = -1;

     label6:
        i45 = 0;

     label7:
        if i45 >= i4 goto label9;

        $i11 = b44 * i45;

        $i12 = $i11 + i43;

        r1 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: android.view.View getChildAt(int)>($i12);

        $i13 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i13 == 8 goto label8;

        i5 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i6 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i14 = i1 - i0;

        $i15 = $i14 - i2;

        $i16 = $i15 - i3;

        $i17 = $i16 - i6;

        $i18 = $i17 / 2;

        $i20 = i2 + $i18;

        $i19 = r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i22 = $i20 + $i19;

        $i21 = r4.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        i7 = $i22 - $i21;

        $i23 = r4.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        i47 = i41 + $i23;

        $i25 = i47 + i5;

        $i24 = i7 + i6;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i47, i7, $i25, $i24);

        $i26 = r4.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i27 = $i26 + i5;

        i41 = i47 + $i27;

        goto label8;

     label8:
        i45 = i45 + 1;

        goto label7;

     label9:
        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43;
        android.view.ViewGroup$MarginLayoutParams r1;
        boolean $z0, $z1, z2, z3;
        java.util.ArrayList $r2, $r3, $r4, $r9, $r11, $r12, $r19;
        java.lang.Object $r5, $r7, $r10, $r13, $r14, $r16;
        android.util.Pair $r6, r21;
        android.view.ViewGroup$LayoutParams $r8;
        java.lang.Integer $r15;
        android.widget.TextView $r17;
        java.lang.CharSequence $r18;
        android.view.View r20, r22;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<com.android.internal.widget.NotificationActionListLayout: boolean mEmphasizedMode>;

        if $z0 == 0 goto label01;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>(i0, i1);

        return;

     label01:
        i2 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getChildCount()>();

        i33 = 0;

        i34 = 0;

        i35 = 0;

        i36 = 0;

     label02:
        if i33 >= i2 goto label06;

        r20 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: android.view.View getChildAt(int)>(i33);

        $z1 = r20 instanceof android.widget.TextView;

        if $z1 == 0 goto label03;

        i34 = i34 + 1;

        goto label04;

     label03:
        i35 = i35 + 1;

     label04:
        i37 = i36;

        $i32 = virtualinvoke r20.<android.view.View: int getVisibility()>();

        if $i32 == 8 goto label05;

        i37 = i36 + 1;

     label05:
        i33 = i33 + 1;

        i36 = i37;

        goto label02;

     label06:
        z2 = 0;

        $r2 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderTextViews>;

        $i5 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i34 != $i5 goto label07;

        $r19 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderOther>;

        $i31 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        if i35 == $i31 goto label08;

     label07:
        z2 = 1;

     label08:
        if z2 != 0 goto label12;

        $r11 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderTextViews>;

        i38 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        i39 = 0;

     label09:
        if i39 >= i38 goto label11;

        $r12 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderTextViews>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i39);

        r21 = (android.util.Pair) $r13;

        $r14 = r21.<android.util.Pair: java.lang.Object first>;

        $r15 = (java.lang.Integer) $r14;

        $i29 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $r16 = r21.<android.util.Pair: java.lang.Object second>;

        $r17 = (android.widget.TextView) $r16;

        $r18 = virtualinvoke $r17.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i30 = interfaceinvoke $r18.<java.lang.CharSequence: int length()>();

        if $i29 == $i30 goto label10;

        z2 = 1;

     label10:
        i39 = i39 + 1;

        goto label09;

     label11:
        goto label12;

     label12:
        if z2 == 0 goto label13;

        specialinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void rebuildMeasureOrder(int,int)>(i34, i35);

     label13:
        $i6 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        if $i6 == 0 goto label14;

        z3 = 1;

        goto label15;

     label14:
        z3 = 0;

     label15:
        $i7 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i8 = r0.<com.android.internal.widget.NotificationActionListLayout: int mPaddingLeft>;

        $i10 = $i7 - $i8;

        $i9 = r0.<com.android.internal.widget.NotificationActionListLayout: int mPaddingRight>;

        i3 = $i10 - $i9;

        $r3 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderOther>;

        i4 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i40 = 0;

        i41 = 0;

        i42 = 0;

     label16:
        if i42 >= i2 goto label23;

        if i42 >= i4 goto label17;

        $r9 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderOther>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i42);

        r22 = (android.view.View) $r10;

        goto label18;

     label17:
        $r4 = r0.<com.android.internal.widget.NotificationActionListLayout: java.util.ArrayList mMeasureOrderTextViews>;

        $i19 = i42 - i4;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i19);

        $r6 = (android.util.Pair) $r5;

        $r7 = $r6.<android.util.Pair: java.lang.Object second>;

        r22 = (android.view.View) $r7;

     label18:
        $i20 = virtualinvoke r22.<android.view.View: int getVisibility()>();

        if $i20 != 8 goto label19;

        goto label22;

     label19:
        $r8 = virtualinvoke r22.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.view.ViewGroup$MarginLayoutParams) $r8;

        if z3 == 0 goto label20;

        $i27 = i3 - i40;

        $i26 = i36 - i41;

        $i28 = $i27 / $i26;

        i43 = i3 - $i28;

        goto label21;

     label20:
        i43 = i40;

     label21:
        virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r22, i0, i43, i1, 0);

        $i21 = virtualinvoke r22.<android.view.View: int getMeasuredWidth()>();

        $i22 = r1.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i24 = $i21 + $i22;

        $i23 = r1.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i25 = $i24 + $i23;

        i40 = i40 + $i25;

        i41 = i41 + 1;

     label22:
        i42 = i42 + 1;

        goto label16;

     label23:
        $i11 = r0.<com.android.internal.widget.NotificationActionListLayout: int mPaddingRight>;

        $i13 = i40 + $i11;

        $i12 = r0.<com.android.internal.widget.NotificationActionListLayout: int mPaddingLeft>;

        $i14 = $i13 + $i12;

        r0.<com.android.internal.widget.NotificationActionListLayout: int mTotalWidth> = $i14;

        $i15 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getSuggestedMinimumWidth()>();

        $i16 = staticinvoke <com.android.internal.widget.NotificationActionListLayout: int resolveSize(int,int)>($i15, i0);

        $i17 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getSuggestedMinimumHeight()>();

        $i18 = staticinvoke <com.android.internal.widget.NotificationActionListLayout: int resolveSize(int,int)>($i17, i1);

        virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void setMeasuredDimension(int,int)>($i16, $i18);

        return;
    }

    public void onViewAdded(android.view.View)
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        android.view.View r1;
        android.graphics.drawable.Drawable $r2, $r3;
        boolean $z0;
        android.graphics.drawable.RippleDrawable $r4;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.widget.LinearLayout: void onViewAdded(android.view.View)>(r1);

        specialinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void clearMeasureOrder()>();

        $r2 = virtualinvoke r1.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        $z0 = $r2 instanceof android.graphics.drawable.RippleDrawable;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        $r4 = (android.graphics.drawable.RippleDrawable) $r3;

        virtualinvoke $r4.<android.graphics.drawable.RippleDrawable: void setForceSoftware(boolean)>(1);

     label1:
        return;
    }

    public void onViewRemoved(android.view.View)
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        android.view.View r1;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.widget.LinearLayout: void onViewRemoved(android.view.View)>(r1);

        specialinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void clearMeasureOrder()>();

        return;
    }

    public void setEmphasizedMode(boolean)
    {
        com.android.internal.widget.NotificationActionListLayout r0;
        boolean z0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        android.view.ViewGroup$LayoutParams r1;
        android.content.res.Resources $r2, $r3, $r4;

        r0 := @this: com.android.internal.widget.NotificationActionListLayout;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.NotificationActionListLayout: boolean mEmphasizedMode> = z0;

        if z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105344);

        $r3 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: android.content.res.Resources getResources()>();

        i1 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105345);

        i11 = r0.<com.android.internal.widget.NotificationActionListLayout: int mEmphasizedHeight>;

        $r4 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: android.content.res.Resources getResources()>();

        i2 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104964);

        $i7 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getPaddingStart()>();

        $i8 = i0 - i2;

        $i9 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getPaddingEnd()>();

        $i10 = i1 - i2;

        virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void setPaddingRelative(int,int,int,int)>($i7, $i8, $i9, $i10);

        goto label2;

     label1:
        $i3 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getPaddingStart()>();

        $i4 = r0.<com.android.internal.widget.NotificationActionListLayout: int mDefaultPaddingTop>;

        $i5 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: int getPaddingEnd()>();

        $i6 = r0.<com.android.internal.widget.NotificationActionListLayout: int mDefaultPaddingBottom>;

        virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void setPaddingRelative(int,int,int,int)>($i3, $i4, $i5, $i6);

        i11 = r0.<com.android.internal.widget.NotificationActionListLayout: int mRegularHeight>;

     label2:
        r1 = virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1.<android.view.ViewGroup$LayoutParams: int height> = i11;

        virtualinvoke r0.<com.android.internal.widget.NotificationActionListLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return;
    }
}
