public class com.android.internal.widget.NotificationExpandButton extends android.widget.ImageView
{
    private int mOriginalNotificationColor;

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.NotificationExpandButton r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.NotificationExpandButton;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.NotificationExpandButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.widget.NotificationExpandButton;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.widget.NotificationExpandButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: com.android.internal.widget.NotificationExpandButton;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        com.android.internal.widget.NotificationExpandButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;

        r0 := @this: com.android.internal.widget.NotificationExpandButton;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        return;
    }

    private void extendRectToMinTouchSize(android.graphics.Rect)
    {
        com.android.internal.widget.NotificationExpandButton r0;
        android.graphics.Rect r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        float $f0, $f1;

        r0 := @this: com.android.internal.widget.NotificationExpandButton;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = virtualinvoke r0.<com.android.internal.widget.NotificationExpandButton: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r3.<android.util.DisplayMetrics: float density>;

        $f1 = $f0 * 48.0F;

        i0 = (int) $f1;

        $i1 = virtualinvoke r1.<android.graphics.Rect: int centerX()>();

        $i2 = i0 / 2;

        $i3 = $i1 - $i2;

        r1.<android.graphics.Rect: int left> = $i3;

        $i4 = r1.<android.graphics.Rect: int left>;

        $i5 = $i4 + i0;

        r1.<android.graphics.Rect: int right> = $i5;

        $i6 = virtualinvoke r1.<android.graphics.Rect: int centerY()>();

        $i7 = i0 / 2;

        $i8 = $i6 - $i7;

        r1.<android.graphics.Rect: int top> = $i8;

        $i9 = r1.<android.graphics.Rect: int top>;

        $i10 = $i9 + i0;

        r1.<android.graphics.Rect: int bottom> = $i10;

        return;
    }

    public void getBoundsOnScreen(android.graphics.Rect, boolean)
    {
        com.android.internal.widget.NotificationExpandButton r0;
        android.graphics.Rect r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.NotificationExpandButton;

        r1 := @parameter0: android.graphics.Rect;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.ImageView: void getBoundsOnScreen(android.graphics.Rect,boolean)>(r1, z0);

        specialinvoke r0.<com.android.internal.widget.NotificationExpandButton: void extendRectToMinTouchSize(android.graphics.Rect)>(r1);

        return;
    }

    public int getOriginalNotificationColor()
    {
        com.android.internal.widget.NotificationExpandButton r0;
        int $i0;

        r0 := @this: com.android.internal.widget.NotificationExpandButton;

        $i0 = r0.<com.android.internal.widget.NotificationExpandButton: int mOriginalNotificationColor>;

        return $i0;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.internal.widget.NotificationExpandButton r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.widget.NotificationExpandButton;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.ImageView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "Landroid/widget/Button;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void setOriginalNotificationColor(int)
    {
        com.android.internal.widget.NotificationExpandButton r0;
        int i0;

        r0 := @this: com.android.internal.widget.NotificationExpandButton;

        i0 := @parameter0: int;

        r0.<com.android.internal.widget.NotificationExpandButton: int mOriginalNotificationColor> = i0;

        return;
    }
}
