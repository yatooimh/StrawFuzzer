class com.android.internal.widget.RecyclerView$5 extends java.lang.Object implements com.android.internal.widget.ChildHelper$Callback
{
    final com.android.internal.widget.RecyclerView this$0;

    void <init>(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView$5 r0;
        com.android.internal.widget.RecyclerView r1;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addView(android.view.View, int)
    {
        com.android.internal.widget.RecyclerView$5 r0;
        android.view.View r1;
        int i0;
        com.android.internal.widget.RecyclerView $r2, $r3;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView: void addView(android.view.View,int)>(r1, i0);

        $r3 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView: void dispatchChildAttached(android.view.View)>(r1);

        return;
    }

    public void attachViewToParent(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.RecyclerView$5 r0;
        int i0;
        android.view.ViewGroup$LayoutParams r1;
        com.android.internal.widget.RecyclerView$ViewHolder r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        android.view.View r8;
        com.android.internal.widget.RecyclerView $r10;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        r8 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 := @parameter2: android.view.ViewGroup$LayoutParams;

        r2 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r8);

        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called attach on a child which is not detached: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: void clearTmpDetachFlag()>();

     label3:
        $r10 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        staticinvoke <com.android.internal.widget.RecyclerView: void access$000(com.android.internal.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)>($r10, r8, i0, r1);

        return;
    }

    public void detachViewFromParent(int)
    {
        com.android.internal.widget.RecyclerView$5 r0;
        int i0;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.view.View r7;
        com.android.internal.widget.RecyclerView $r9;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        i0 := @parameter0: int;

        r7 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$5: android.view.View getChildAt(int)>(i0);

        if r7 == null goto label3;

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r7);

        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called detach on an already detached child ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void addFlags(int)>(256);

     label3:
        $r9 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        staticinvoke <com.android.internal.widget.RecyclerView: void access$100(com.android.internal.widget.RecyclerView,int)>($r9, i0);

        return;
    }

    public android.view.View getChildAt(int)
    {
        com.android.internal.widget.RecyclerView$5 r0;
        int i0;
        com.android.internal.widget.RecyclerView $r1;
        android.view.View $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        $r2 = virtualinvoke $r1.<com.android.internal.widget.RecyclerView: android.view.View getChildAt(int)>(i0);

        return $r2;
    }

    public int getChildCount()
    {
        com.android.internal.widget.RecyclerView$5 r0;
        com.android.internal.widget.RecyclerView $r1;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        $r1 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.RecyclerView: int getChildCount()>();

        return $i0;
    }

    public com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    {
        com.android.internal.widget.RecyclerView$5 r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$ViewHolder $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        return $r2;
    }

    public int indexOfChild(android.view.View)
    {
        com.android.internal.widget.RecyclerView$5 r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView $r2;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        $i0 = virtualinvoke $r2.<com.android.internal.widget.RecyclerView: int indexOfChild(android.view.View)>(r1);

        return $i0;
    }

    public void onEnteredHiddenState(android.view.View)
    {
        com.android.internal.widget.RecyclerView$5 r0;
        com.android.internal.widget.RecyclerView $r1;
        android.view.View r2;
        com.android.internal.widget.RecyclerView$ViewHolder r3;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        r2 := @parameter0: android.view.View;

        r3 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        if r3 == null goto label1;

        $r1 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        staticinvoke <com.android.internal.widget.RecyclerView$ViewHolder: void access$200(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView)>(r3, $r1);

     label1:
        return;
    }

    public void onLeftHiddenState(android.view.View)
    {
        com.android.internal.widget.RecyclerView$5 r0;
        com.android.internal.widget.RecyclerView $r1;
        android.view.View r2;
        com.android.internal.widget.RecyclerView$ViewHolder r3;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        r2 := @parameter0: android.view.View;

        r3 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        if r3 == null goto label1;

        $r1 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        staticinvoke <com.android.internal.widget.RecyclerView$ViewHolder: void access$300(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView)>(r3, $r1);

     label1:
        return;
    }

    public void removeAllViews()
    {
        com.android.internal.widget.RecyclerView$5 r0;
        int i0, i1;
        com.android.internal.widget.RecyclerView $r1, $r2;
        android.view.View $r3;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$5: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        $r3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$5: android.view.View getChildAt(int)>(i1);

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView: void dispatchChildDetached(android.view.View)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r1 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        virtualinvoke $r1.<com.android.internal.widget.RecyclerView: void removeAllViews()>();

        return;
    }

    public void removeViewAt(int)
    {
        com.android.internal.widget.RecyclerView$5 r0;
        int i0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView $r2, $r3, $r4;

        r0 := @this: com.android.internal.widget.RecyclerView$5;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        r1 = virtualinvoke $r2.<com.android.internal.widget.RecyclerView: android.view.View getChildAt(int)>(i0);

        if r1 == null goto label1;

        $r4 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        virtualinvoke $r4.<com.android.internal.widget.RecyclerView: void dispatchChildDetached(android.view.View)>(r1);

     label1:
        $r3 = r0.<com.android.internal.widget.RecyclerView$5: com.android.internal.widget.RecyclerView this$0>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView: void removeViewAt(int)>(i0);

        return;
    }
}
