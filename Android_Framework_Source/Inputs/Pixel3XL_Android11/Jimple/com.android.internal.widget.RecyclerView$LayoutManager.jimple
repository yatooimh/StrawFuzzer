public abstract class com.android.internal.widget.RecyclerView$LayoutManager extends java.lang.Object
{
    boolean mAutoMeasure;
    com.android.internal.widget.ChildHelper mChildHelper;
    private int mHeight;
    private int mHeightMode;
    boolean mIsAttachedToWindow;
    private boolean mItemPrefetchEnabled;
    private boolean mMeasurementCacheEnabled;
    int mPrefetchMaxCountObserved;
    boolean mPrefetchMaxObservedInInitialPrefetch;
    com.android.internal.widget.RecyclerView mRecyclerView;
    boolean mRequestedSimpleAnimations;
    com.android.internal.widget.RecyclerView$SmoothScroller mSmoothScroller;
    private int mWidth;
    private int mWidthMode;

    public void <init>()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = 0;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow> = 0;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mAutoMeasure> = 0;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled> = 1;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled> = 1;

        return;
    }

    static void access$1200(com.android.internal.widget.RecyclerView$LayoutManager, com.android.internal.widget.RecyclerView$SmoothScroller)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$SmoothScroller r1;

        r0 := @parameter0: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$SmoothScroller;

        specialinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void onSmoothScrollerStopped(com.android.internal.widget.RecyclerView$SmoothScroller)>(r1);

        return;
    }

    private void addViewInt(android.view.View, int, boolean)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0, $r21;
        android.view.View r1, $r8;
        int i0, i1, $i2, i3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.internal.widget.RecyclerView$ViewHolder r2;
        com.android.internal.widget.RecyclerView$LayoutParams r3;
        com.android.internal.widget.RecyclerView $r4, $r10, $r16, $r20, $r23;
        com.android.internal.widget.ViewInfoStore $r5, $r24;
        com.android.internal.widget.ChildHelper $r6, $r11, $r13, $r22;
        android.view.ViewGroup$LayoutParams $r7, $r25;
        android.view.ViewParent $r9;
        com.android.internal.widget.RecyclerView$SmoothScroller $r12, r27;
        java.lang.StringBuilder $r14;
        java.lang.IllegalStateException $r18;
        java.lang.String $r19;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if z0 != 0 goto label02;

        $z4 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z4 == 0 goto label01;

        goto label02;

     label01:
        $r23 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r24 = $r23.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r24.<com.android.internal.widget.ViewInfoStore: void removeFromDisappearedInLayout(com.android.internal.widget.RecyclerView$ViewHolder)>(r2);

        goto label03;

     label02:
        $r4 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r5.<com.android.internal.widget.ViewInfoStore: void addToDisappearedInLayout(com.android.internal.widget.RecyclerView$ViewHolder)>(r2);

     label03:
        $r25 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (com.android.internal.widget.RecyclerView$LayoutParams) $r25;

        $z5 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()>();

        if $z5 != 0 goto label09;

        $z2 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z2 == 0 goto label04;

        goto label09;

     label04:
        $r9 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r10 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if $r9 != $r10 goto label08;

        $r13 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r13.<com.android.internal.widget.ChildHelper: int indexOfChild(android.view.View)>(r1);

        i3 = i0;

        if i0 != -1 goto label05;

        $r22 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        i3 = virtualinvoke $r22.<com.android.internal.widget.ChildHelper: int getChildCount()>();

     label05:
        if i1 == -1 goto label07;

        if i1 == i3 goto label06;

        $r20 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r21 = $r20.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r21.<com.android.internal.widget.RecyclerView$LayoutManager: void moveView(int,int)>(i1, i3);

     label06:
        goto label12;

     label07:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added View has RecyclerView as parent but view is not a real child. Unfiltered index:");

        $r16 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $i2 = virtualinvoke $r16.<com.android.internal.widget.RecyclerView: int indexOfChild(android.view.View)>(r1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = new java.lang.IllegalStateException;

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label08:
        $r11 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        virtualinvoke $r11.<com.android.internal.widget.ChildHelper: void addView(android.view.View,int,boolean)>(r1, i0, 0);

        r3.<com.android.internal.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        r27 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if r27 == null goto label12;

        $z3 = virtualinvoke r27.<com.android.internal.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z3 == 0 goto label12;

        $r12 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        virtualinvoke $r12.<com.android.internal.widget.RecyclerView$SmoothScroller: void onChildAttachedToWindow(android.view.View)>(r1);

        goto label12;

     label09:
        $z1 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z1 == 0 goto label10;

        virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: void unScrap()>();

        goto label11;

     label10:
        virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: void clearReturnedFromScrapFlag()>();

     label11:
        $r6 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        virtualinvoke $r6.<com.android.internal.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>(r1, i0, $r7, 0);

     label12:
        $z6 = r3.<com.android.internal.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate>;

        if $z6 == 0 goto label13;

        $r8 = r2.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke $r8.<android.view.View: void invalidate()>();

        r3.<com.android.internal.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = 0;

     label13:
        return;
    }

    public static int chooseSize(int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, i6, i7;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i6);

        i7 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i6);

        if i2 == -2147483648 goto label2;

        if i2 == 1073741824 goto label1;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        return $i5;

     label1:
        return i7;

     label2:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i7, $i3);

        return $i4;
    }

    private void detachViewInternal(int, android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.view.View r1;
        com.android.internal.widget.ChildHelper $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        $r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<com.android.internal.widget.ChildHelper: void detachViewFromParent(int)>(i0);

        return;
    }

    public static int getChildMeasureSpec(int, int, int, int, boolean)
    {
        int i0, i1, i2, $i5, i6, i7, i8, i9, $i10;
        boolean z0;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        i7 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        $i5 = i6 - i7;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        i8 = 0;

        i9 = 0;

        if z0 == 0 goto label06;

        if i1 < 0 goto label01;

        i8 = i1;

        i9 = 1073741824;

        goto label11;

     label01:
        if i1 != -1 goto label05;

        if i0 == -2147483648 goto label03;

        if i0 == 0 goto label02;

        if i0 == 1073741824 goto label03;

        goto label04;

     label02:
        i8 = 0;

        i9 = 0;

        goto label04;

     label03:
        i8 = i2;

        i9 = i0;

     label04:
        goto label11;

     label05:
        i8 = 0;

        i9 = 0;

        if i1 != -2 goto label11;

        i8 = 0;

        i9 = 0;

        goto label11;

     label06:
        if i1 < 0 goto label07;

        i8 = i1;

        i9 = 1073741824;

        goto label11;

     label07:
        if i1 != -1 goto label08;

        i8 = i2;

        i9 = i0;

        goto label11;

     label08:
        i8 = 0;

        i9 = 0;

        if i1 != -2 goto label11;

        i8 = i2;

        if i0 == -2147483648 goto label10;

        if i0 != 1073741824 goto label09;

        goto label10;

     label09:
        i9 = 0;

        goto label11;

     label10:
        i9 = -2147483648;

     label11:
        $i10 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i8, i9);

        return $i10;
    }

    public static int getChildMeasureSpec(int, int, int, boolean)
    {
        int i0, i1, $i2, i3, i4, i5, i6, $i7;
        boolean z0;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i2 = i3 - i4;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        i5 = 0;

        i6 = 0;

        if z0 == 0 goto label2;

        if i0 < 0 goto label1;

        i5 = i0;

        i6 = 1073741824;

        goto label5;

     label1:
        i5 = 0;

        i6 = 0;

        goto label5;

     label2:
        if i0 < 0 goto label3;

        i5 = i0;

        i6 = 1073741824;

        goto label5;

     label3:
        if i0 != -1 goto label4;

        i5 = i1;

        i6 = 1073741824;

        goto label5;

     label4:
        if i0 != -2 goto label5;

        i5 = i1;

        i6 = -2147483648;

     label5:
        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i5, i6);

        return $i7;
    }

    public static com.android.internal.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.util.AttributeSet r0;
        int i0, i1, $i2, $i3;
        com.android.internal.widget.RecyclerView$LayoutManager$Properties $r2;
        int[] $r3;
        boolean $z0, $z1;
        android.content.Context r4;
        android.content.res.TypedArray r5;

        r4 := @parameter0: android.content.Context;

        r0 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = new com.android.internal.widget.RecyclerView$LayoutManager$Properties;

        specialinvoke $r2.<com.android.internal.widget.RecyclerView$LayoutManager$Properties: void <init>()>();

        $r3 = <com.android.internal.R$styleable: int[] RecyclerView>;

        r5 = virtualinvoke r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r0, $r3, i0, i1);

        $i2 = virtualinvoke r5.<android.content.res.TypedArray: int getInt(int,int)>(0, 1);

        $r2.<com.android.internal.widget.RecyclerView$LayoutManager$Properties: int orientation> = $i2;

        $i3 = virtualinvoke r5.<android.content.res.TypedArray: int getInt(int,int)>(4, 1);

        $r2.<com.android.internal.widget.RecyclerView$LayoutManager$Properties: int spanCount> = $i3;

        $z0 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, 0);

        $r2.<com.android.internal.widget.RecyclerView$LayoutManager$Properties: boolean reverseLayout> = $z0;

        $z1 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        $r2.<com.android.internal.widget.RecyclerView$LayoutManager$Properties: boolean stackFromEnd> = $z1;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return $r2;
    }

    private static boolean isMeasurementUpToDate(int, int, int)
    {
        int i0, i1, i2, i3, i4;
        boolean z1, z2;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i3);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i3);

        z1 = 0;

        if i1 <= 0 goto label1;

        if i0 == i1 goto label1;

        return 0;

     label1:
        if i2 == -2147483648 goto label5;

        if i2 == 0 goto label4;

        if i2 == 1073741824 goto label2;

        return 0;

     label2:
        if i4 != i0 goto label3;

        z1 = 1;

     label3:
        return z1;

     label4:
        return 1;

     label5:
        z2 = 0;

        if i4 < i0 goto label6;

        z2 = 1;

     label6:
        return z2;
    }

    private void onSmoothScrollerStopped(com.android.internal.widget.RecyclerView$SmoothScroller)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$SmoothScroller r1, $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$SmoothScroller;

        $r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r2 != r1 goto label1;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$SmoothScroller mSmoothScroller> = null;

     label1:
        return;
    }

    private void scrapOrRecycleView(com.android.internal.widget.RecyclerView$Recycler, int, android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        int i0;
        android.view.View r2;
        com.android.internal.widget.RecyclerView$ViewHolder r3;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.widget.RecyclerView $r4, $r6;
        com.android.internal.widget.RecyclerView$Adapter $r5;
        com.android.internal.widget.ViewInfoStore $r7;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.View;

        r3 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        $z0 = virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z2 != 0 goto label2;

        $r4 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        $z3 = virtualinvoke $r5.<com.android.internal.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z3 != 0 goto label2;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void removeViewAt(int)>(i0);

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$Recycler: void recycleViewHolderInternal(com.android.internal.widget.RecyclerView$ViewHolder)>(r3);

        goto label3;

     label2:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void detachViewAt(int)>(i0);

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$Recycler: void scrapView(android.view.View)>(r2);

        $r6 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r7 = $r6.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r7.<com.android.internal.widget.ViewInfoStore: void onViewDetached(com.android.internal.widget.RecyclerView$ViewHolder)>(r3);

     label3:
        return;
    }

    public void addDisappearingView(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View,int)>(r1, -1);

        return;
    }

    public void addDisappearingView(android.view.View, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void addViewInt(android.view.View,int,boolean)>(r1, i0, 1);

        return;
    }

    public void addView(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void addView(android.view.View,int)>(r1, -1);

        return;
    }

    public void addView(android.view.View, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void addViewInt(android.view.View,int,boolean)>(r1, i0, 0);

        return;
    }

    public void assertInLayoutOrScroll(java.lang.String)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        java.lang.String r1;
        com.android.internal.widget.RecyclerView r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.widget.RecyclerView: void assertInLayoutOrScroll(java.lang.String)>(r1);

     label1:
        return;
    }

    public void assertNotInLayoutOrScroll(java.lang.String)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        java.lang.String r1;
        com.android.internal.widget.RecyclerView r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>(r1);

     label1:
        return;
    }

    public void attachView(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)>(r1, -1);

        return;
    }

    public void attachView(android.view.View, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams $r2;
        com.android.internal.widget.RecyclerView$LayoutParams $r3;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.android.internal.widget.RecyclerView$LayoutParams) $r2;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int,com.android.internal.widget.RecyclerView$LayoutParams)>(r1, i0, $r3);

        return;
    }

    public void attachView(android.view.View, int, com.android.internal.widget.RecyclerView$LayoutParams)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        com.android.internal.widget.RecyclerView$LayoutParams r2;
        com.android.internal.widget.RecyclerView$ViewHolder r3;
        boolean $z0, $z1;
        com.android.internal.widget.RecyclerView $r4, $r7;
        com.android.internal.widget.ViewInfoStore $r5, $r8;
        com.android.internal.widget.ChildHelper $r6;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.widget.RecyclerView$LayoutParams;

        r3 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        $z0 = virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r8 = $r7.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r8.<com.android.internal.widget.ViewInfoStore: void addToDisappearedInLayout(com.android.internal.widget.RecyclerView$ViewHolder)>(r3);

        goto label2;

     label1:
        $r4 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r5.<com.android.internal.widget.ViewInfoStore: void removeFromDisappearedInLayout(com.android.internal.widget.RecyclerView$ViewHolder)>(r3);

     label2:
        $r6 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        $z1 = virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        virtualinvoke $r6.<com.android.internal.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>(r1, i0, r2, $z1);

        return;
    }

    public void calculateItemDecorationsForChild(android.view.View, android.graphics.Rect)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2, $r4;
        com.android.internal.widget.RecyclerView r3;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r3 != null goto label1;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return;

     label1:
        $r4 = virtualinvoke r3.<com.android.internal.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>(r1);

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r4);

        return;
    }

    public boolean canScrollHorizontally()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        return 0;
    }

    public boolean canScrollVertically()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        return 0;
    }

    public boolean checkLayoutParams(com.android.internal.widget.RecyclerView$LayoutParams)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$LayoutParams r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$LayoutParams;

        if r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void collectAdjacentPrefetchPositions(int, int, com.android.internal.widget.RecyclerView$State, com.android.internal.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0, i1;
        com.android.internal.widget.RecyclerView$State r1;
        com.android.internal.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.widget.RecyclerView$State;

        r2 := @parameter3: com.android.internal.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        return;
    }

    public void collectInitialPrefetchPositions(int, com.android.internal.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        com.android.internal.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        return;
    }

    public int computeHorizontalScrollExtent(com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$State;

        return 0;
    }

    public int computeHorizontalScrollOffset(com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$State;

        return 0;
    }

    public int computeHorizontalScrollRange(com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$State;

        return 0;
    }

    public int computeVerticalScrollExtent(com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$State;

        return 0;
    }

    public int computeVerticalScrollOffset(com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$State;

        return 0;
    }

    public int computeVerticalScrollRange(com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$State;

        return 0;
    }

    public void detachAndScrapAttachedViews(com.android.internal.widget.RecyclerView$Recycler)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        int $i0, i1;
        android.view.View $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        $i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i1);

        specialinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(com.android.internal.widget.RecyclerView$Recycler,int,android.view.View)>(r1, i1, $r2);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    public void detachAndScrapView(android.view.View, com.android.internal.widget.RecyclerView$Recycler)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$Recycler r2;
        com.android.internal.widget.ChildHelper $r3;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$Recycler;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r3.<com.android.internal.widget.ChildHelper: int indexOfChild(android.view.View)>(r1);

        specialinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(com.android.internal.widget.RecyclerView$Recycler,int,android.view.View)>(r2, $i0, r1);

        return;
    }

    public void detachAndScrapViewAt(int, com.android.internal.widget.RecyclerView$Recycler)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        android.view.View $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$Recycler;

        $r2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        specialinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(com.android.internal.widget.RecyclerView$Recycler,int,android.view.View)>(r1, i0, $r2);

        return;
    }

    public void detachView(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        com.android.internal.widget.ChildHelper $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int indexOfChild(android.view.View)>(r1);

        if i0 < 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void detachViewInternal(int,android.view.View)>(i0, r1);

     label1:
        return;
    }

    public void detachViewAt(int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.view.View $r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        specialinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void detachViewInternal(int,android.view.View)>(i0, $r1);

        return;
    }

    void dispatchAttachedToWindow(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow> = 1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void onAttachedToWindow(com.android.internal.widget.RecyclerView)>(r1);

        return;
    }

    void dispatchDetachedFromWindow(com.android.internal.widget.RecyclerView, com.android.internal.widget.RecyclerView$Recycler)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        com.android.internal.widget.RecyclerView$Recycler r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$Recycler;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow> = 0;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(com.android.internal.widget.RecyclerView,com.android.internal.widget.RecyclerView$Recycler)>(r1, r2);

        return;
    }

    public void endAnimation(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView $r2, $r4;
        com.android.internal.widget.RecyclerView$ItemAnimator $r3, $r5;
        com.android.internal.widget.RecyclerView$ViewHolder $r6;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r3 = $r2.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r6 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke $r5.<com.android.internal.widget.RecyclerView$ItemAnimator: void endAnimation(com.android.internal.widget.RecyclerView$ViewHolder)>($r6);

     label1:
        return;
    }

    public android.view.View findContainingItemView(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        com.android.internal.widget.ChildHelper $r2;
        boolean $z0;
        android.view.View r3, r4;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r3 := @parameter0: android.view.View;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 != null goto label1;

        return null;

     label1:
        r4 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>(r3);

        if r4 != null goto label2;

        return null;

     label2:
        $r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        $z0 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: boolean isHidden(android.view.View)>(r4);

        if $z0 == 0 goto label3;

        return null;

     label3:
        return r4;
    }

    public android.view.View findViewByPosition(int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0, i1, $i2, i3;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$ViewHolder r2;
        boolean $z0, $z1, $z2;
        com.android.internal.widget.RecyclerView $r3;
        com.android.internal.widget.RecyclerView$State $r4;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label5;

        r1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i3);

        r2 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 != null goto label2;

        goto label4;

     label2:
        $i2 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if $i2 != i0 goto label4;

        $z0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label4;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z1 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z2 != 0 goto label4;

     label3:
        return r1;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return null;
    }

    public abstract com.android.internal.widget.RecyclerView$LayoutParams generateDefaultLayoutParams();

    public com.android.internal.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        com.android.internal.widget.RecyclerView$LayoutParams $r3;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = new com.android.internal.widget.RecyclerView$LayoutParams;

        specialinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return $r3;
    }

    public com.android.internal.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1;
        com.android.internal.widget.RecyclerView$LayoutParams $r2, $r3, $r5, $r6;
        android.view.ViewGroup$MarginLayoutParams $r4;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof com.android.internal.widget.RecyclerView$LayoutParams;

        if $z0 == 0 goto label1;

        $r5 = new com.android.internal.widget.RecyclerView$LayoutParams;

        $r6 = (com.android.internal.widget.RecyclerView$LayoutParams) r1;

        specialinvoke $r5.<com.android.internal.widget.RecyclerView$LayoutParams: void <init>(com.android.internal.widget.RecyclerView$LayoutParams)>($r6);

        return $r5;

     label1:
        $z1 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z1 == 0 goto label2;

        $r3 = new com.android.internal.widget.RecyclerView$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label2:
        $r2 = new com.android.internal.widget.RecyclerView$LayoutParams;

        specialinvoke $r2.<com.android.internal.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public int getBaseline()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        return -1;
    }

    public int getBottomDecorationHeight(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        com.android.internal.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.android.internal.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int bottom>;

        return $i0;
    }

    public android.view.View getChildAt(int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        com.android.internal.widget.ChildHelper r1;
        android.view.View r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<com.android.internal.widget.ChildHelper: android.view.View getChildAt(int)>(i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public int getChildCount()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.ChildHelper r1;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public boolean getClipToPadding()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        $z0 = r1.<com.android.internal.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public int getColumnCountForAccessibility(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;
        com.android.internal.widget.RecyclerView$Adapter $r2, $r4;
        boolean $z0;
        com.android.internal.widget.RecyclerView $r3, r6;
        com.android.internal.widget.RecyclerView$Recycler r5;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r5 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$State;

        r6 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        i0 = 1;

        if r6 == null goto label3;

        $r2 = r6.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if $r2 != null goto label1;

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        i0 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView$Adapter: int getItemCount()>();

     label2:
        return i0;

     label3:
        return 1;
    }

    public int getDecoratedBottom(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getBottomDecorationHeight(android.view.View)>(r1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public void getDecoratedBoundsWithMargins(android.view.View, android.graphics.Rect)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        staticinvoke <com.android.internal.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)>(r1, r2);

        return;
    }

    public int getDecoratedLeft(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getLeftDecorationWidth(android.view.View)>(r1);

        $i2 = $i0 - $i1;

        return $i2;
    }

    public int getDecoratedMeasuredHeight(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        com.android.internal.widget.RecyclerView$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (com.android.internal.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i1 = r2.<android.graphics.Rect: int top>;

        $i3 = $i0 + $i1;

        $i2 = r2.<android.graphics.Rect: int bottom>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getDecoratedMeasuredWidth(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        com.android.internal.widget.RecyclerView$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (com.android.internal.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i1 = r2.<android.graphics.Rect: int left>;

        $i3 = $i0 + $i1;

        $i2 = r2.<android.graphics.Rect: int right>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getDecoratedRight(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getRightDecorationWidth(android.view.View)>(r1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getDecoratedTop(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getTopDecorationHeight(android.view.View)>(r1);

        $i2 = $i0 - $i1;

        return $i2;
    }

    public android.view.View getFocusedChild()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.ChildHelper $r1;
        boolean $z0;
        com.android.internal.widget.RecyclerView r2;
        android.view.View r3;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r2 != null goto label1;

        return null;

     label1:
        r3 = virtualinvoke r2.<com.android.internal.widget.RecyclerView: android.view.View getFocusedChild()>();

        if r3 == null goto label3;

        $r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        $z0 = virtualinvoke $r1.<com.android.internal.widget.ChildHelper: boolean isHidden(android.view.View)>(r3);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        return r3;

     label3:
        return null;
    }

    public int getHeight()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $i0 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mHeight>;

        return $i0;
    }

    public int getHeightMode()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $i0 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mHeightMode>;

        return $i0;
    }

    public int getItemCount()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        com.android.internal.widget.RecyclerView$Adapter r2;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter getAdapter()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        if r2 == null goto label3;

        i0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$Adapter: int getItemCount()>();

        goto label4;

     label3:
        i0 = 0;

     label4:
        return i0;
    }

    public int getItemViewType(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$ViewHolder $r2;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        $i0 = virtualinvoke $r2.<com.android.internal.widget.RecyclerView$ViewHolder: int getItemViewType()>();

        return $i0;
    }

    public int getLayoutDirection()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView $r1;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.RecyclerView: int getLayoutDirection()>();

        return $i0;
    }

    public int getLeftDecorationWidth(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        com.android.internal.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.android.internal.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int left>;

        return $i0;
    }

    public int getMinimumHeight()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView $r1;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.RecyclerView: int getMinimumHeight()>();

        return $i0;
    }

    public int getMinimumWidth()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView $r1;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.RecyclerView: int getMinimumWidth()>();

        return $i0;
    }

    public int getPaddingBottom()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getPaddingBottom()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getPaddingEnd()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getPaddingEnd()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getPaddingLeft()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getPaddingLeft()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getPaddingRight()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getPaddingRight()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getPaddingStart()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getPaddingStart()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getPaddingTop()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getPaddingTop()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getPosition(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        com.android.internal.widget.RecyclerView$LayoutParams $r3;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.android.internal.widget.RecyclerView$LayoutParams) $r2;

        $i0 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()>();

        return $i0;
    }

    public int getRightDecorationWidth(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        com.android.internal.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.android.internal.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int right>;

        return $i0;
    }

    public int getRowCountForAccessibility(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;
        com.android.internal.widget.RecyclerView$Adapter $r2, $r4;
        boolean $z0;
        com.android.internal.widget.RecyclerView $r3, r6;
        com.android.internal.widget.RecyclerView$Recycler r5;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r5 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$State;

        r6 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        i0 = 1;

        if r6 == null goto label3;

        $r2 = r6.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if $r2 != null goto label1;

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        i0 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView$Adapter: int getItemCount()>();

     label2:
        return i0;

     label3:
        return 1;
    }

    public int getSelectionModeForAccessibility(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        return 0;
    }

    public int getTopDecorationHeight(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        com.android.internal.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.android.internal.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int top>;

        return $i0;
    }

    public void getTransformedBoundingBox(android.view.View, boolean, android.graphics.Rect)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        boolean z0, $z1;
        android.graphics.Rect r2, r8;
        android.graphics.RectF r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        com.android.internal.widget.RecyclerView $r4, $r5;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        android.view.ViewGroup$LayoutParams $r6;
        com.android.internal.widget.RecyclerView$LayoutParams $r7;
        android.graphics.Matrix r9;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.graphics.Rect;

        if z0 == 0 goto label1;

        $r6 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (com.android.internal.widget.RecyclerView$LayoutParams) $r6;

        r8 = $r7.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i6 = r8.<android.graphics.Rect: int left>;

        $i8 = neg $i6;

        $i7 = r8.<android.graphics.Rect: int top>;

        $i9 = neg $i7;

        $i10 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i11 = r8.<android.graphics.Rect: int right>;

        $i12 = $i10 + $i11;

        $i13 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i14 = r8.<android.graphics.Rect: int bottom>;

        $i15 = $i13 + $i14;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>($i8, $i9, $i12, $i15);

        goto label2;

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke r1.<android.view.View: int getHeight()>();

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

     label2:
        $r4 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if $r4 == null goto label3;

        r9 = virtualinvoke r1.<android.view.View: android.graphics.Matrix getMatrix()>();

        if r9 == null goto label3;

        $z1 = virtualinvoke r9.<android.graphics.Matrix: boolean isIdentity()>();

        if $z1 != 0 goto label3;

        $r5 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        r3 = $r5.<com.android.internal.widget.RecyclerView: android.graphics.RectF mTempRectF>;

        virtualinvoke r3.<android.graphics.RectF: void set(android.graphics.Rect)>(r2);

        virtualinvoke r9.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

        $f0 = r3.<android.graphics.RectF: float left>;

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i2 = (int) $d1;

        $f1 = r3.<android.graphics.RectF: float top>;

        $d2 = (double) $f1;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $i3 = (int) $d3;

        $f2 = r3.<android.graphics.RectF: float right>;

        $d4 = (double) $f2;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        $i4 = (int) $d5;

        $f3 = r3.<android.graphics.RectF: float bottom>;

        $d6 = (double) $f3;

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>($d6);

        $i5 = (int) $d7;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>($i2, $i3, $i4, $i5);

     label3:
        $i16 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i17 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>($i16, $i17);

        return;
    }

    public int getWidth()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $i0 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mWidth>;

        return $i0;
    }

    public int getWidthMode()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $i0 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mWidthMode>;

        return $i0;
    }

    boolean hasFlexibleChildInBothOrientations()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0, $i1, $i2, i3;
        android.view.ViewGroup$LayoutParams r1;
        android.view.View $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $r2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i3);

        r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = r1.<android.view.ViewGroup$LayoutParams: int width>;

        if $i1 >= 0 goto label2;

        $i2 = r1.<android.view.ViewGroup$LayoutParams: int height>;

        if $i2 >= 0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean hasFocus()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void ignoreView(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.ViewParent r1;
        com.android.internal.widget.RecyclerView r2, $r4;
        java.lang.IllegalArgumentException $r3;
        int $i0;
        com.android.internal.widget.ViewInfoStore $r5;
        android.view.View r6;
        com.android.internal.widget.RecyclerView$ViewHolder r7;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r6 := @parameter0: android.view.View;

        r1 = virtualinvoke r6.<android.view.View: android.view.ViewParent getParent()>();

        r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 != r2 goto label1;

        $i0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView: int indexOfChild(android.view.View)>(r6);

        if $i0 == -1 goto label1;

        r7 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r6);

        virtualinvoke r7.<com.android.internal.widget.RecyclerView$ViewHolder: void addFlags(int)>(128);

        $r4 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r5.<com.android.internal.widget.ViewInfoStore: void removeViewHolder(com.android.internal.widget.RecyclerView$ViewHolder)>(r7);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View should be fully attached to be ignored");

        throw $r3;
    }

    public boolean isAttachedToWindow()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $z0 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow>;

        return $z0;
    }

    public boolean isAutoMeasureEnabled()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $z0 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mAutoMeasure>;

        return $z0;
    }

    public boolean isFocused()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: boolean isFocused()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public final boolean isItemPrefetchEnabled()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $z0 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled>;

        return $z0;
    }

    public boolean isLayoutHierarchical(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        return 0;
    }

    public boolean isMeasurementCacheEnabled()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $z0 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled>;

        return $z0;
    }

    public boolean isSmoothScrolling()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$SmoothScroller r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void layoutDecorated(android.view.View, int, int, int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        com.android.internal.widget.RecyclerView$LayoutParams $r4;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (com.android.internal.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i4 = r2.<android.graphics.Rect: int left>;

        $i11 = $i4 + i0;

        $i5 = r2.<android.graphics.Rect: int top>;

        $i10 = $i5 + i1;

        $i6 = r2.<android.graphics.Rect: int right>;

        $i9 = i2 - $i6;

        $i7 = r2.<android.graphics.Rect: int bottom>;

        $i8 = i3 - $i7;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i11, $i10, $i9, $i8);

        return;
    }

    public void layoutDecoratedWithMargins(android.view.View, int, int, int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        com.android.internal.widget.RecyclerView$LayoutParams r2;
        android.graphics.Rect r3;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.widget.RecyclerView$LayoutParams) $r4;

        r3 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i4 = r3.<android.graphics.Rect: int left>;

        $i6 = $i4 + i0;

        $i5 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int leftMargin>;

        $i19 = $i6 + $i5;

        $i7 = r3.<android.graphics.Rect: int top>;

        $i9 = $i7 + i1;

        $i8 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int topMargin>;

        $i18 = $i9 + $i8;

        $i10 = r3.<android.graphics.Rect: int right>;

        $i12 = i2 - $i10;

        $i11 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int rightMargin>;

        $i17 = $i12 - $i11;

        $i13 = r3.<android.graphics.Rect: int bottom>;

        $i15 = i3 - $i13;

        $i14 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $i16 = $i15 - $i14;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i19, $i18, $i17, $i16);

        return;
    }

    public void measureChild(android.view.View, int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$LayoutParams r2;
        android.graphics.Rect r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25;
        android.view.ViewGroup$LayoutParams $r4;
        com.android.internal.widget.RecyclerView $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i22 := @parameter1: int;

        i23 := @parameter2: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.widget.RecyclerView$LayoutParams) $r4;

        $r5 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        r3 = virtualinvoke $r5.<com.android.internal.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>(r1);

        i0 = r3.<android.graphics.Rect: int left>;

        i1 = r3.<android.graphics.Rect: int right>;

        i2 = r3.<android.graphics.Rect: int top>;

        i3 = r3.<android.graphics.Rect: int bottom>;

        $i4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getWidthMode()>();

        $i6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i7 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i10 = $i6 + $i7;

        $i8 = i0 + i1;

        $i9 = i22 + $i8;

        $i11 = $i10 + $i9;

        $i12 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int width>;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        i24 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i4, $i5, $i11, $i12, $z0);

        $i13 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i14 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getHeightMode()>();

        $i15 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i16 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i19 = $i15 + $i16;

        $i17 = i2 + i3;

        $i18 = i23 + $i17;

        $i20 = $i19 + $i18;

        $i21 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int height>;

        $z1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        i25 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i13, $i14, $i20, $i21, $z1);

        $z2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean shouldMeasureChild(android.view.View,int,int,com.android.internal.widget.RecyclerView$LayoutParams)>(r1, i24, i25, r2);

        if $z2 == 0 goto label1;

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i24, i25);

     label1:
        return;
    }

    public void measureChildWithMargins(android.view.View, int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$LayoutParams r2;
        android.graphics.Rect r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, i33;
        android.view.ViewGroup$LayoutParams $r4;
        com.android.internal.widget.RecyclerView $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i30 := @parameter1: int;

        i31 := @parameter2: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.widget.RecyclerView$LayoutParams) $r4;

        $r5 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        r3 = virtualinvoke $r5.<com.android.internal.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>(r1);

        i0 = r3.<android.graphics.Rect: int left>;

        i1 = r3.<android.graphics.Rect: int right>;

        i2 = r3.<android.graphics.Rect: int top>;

        i3 = r3.<android.graphics.Rect: int bottom>;

        $i4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getWidthMode()>();

        $i6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i7 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i9 = $i6 + $i7;

        $i8 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int leftMargin>;

        $i11 = $i9 + $i8;

        $i10 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int rightMargin>;

        $i14 = $i11 + $i10;

        $i12 = i0 + i1;

        $i13 = i30 + $i12;

        $i15 = $i14 + $i13;

        $i16 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int width>;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        i32 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i4, $i5, $i15, $i16, $z0);

        $i17 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i18 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getHeightMode()>();

        $i19 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i20 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i22 = $i19 + $i20;

        $i21 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int topMargin>;

        $i24 = $i22 + $i21;

        $i23 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $i27 = $i24 + $i23;

        $i25 = i2 + i3;

        $i26 = i31 + $i25;

        $i28 = $i27 + $i26;

        $i29 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int height>;

        $z1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        i33 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i17, $i18, $i28, $i29, $z1);

        $z2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean shouldMeasureChild(android.view.View,int,int,com.android.internal.widget.RecyclerView$LayoutParams)>(r1, i32, i33, r2);

        if $z2 == 0 goto label1;

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i32, i33);

     label1:
        return;
    }

    public void moveView(int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.view.View r6;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        if r6 == null goto label1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void detachViewAt(int)>(i0);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)>(r6, i1);

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot move a child from non-existing index:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public void offsetChildrenHorizontal(int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        com.android.internal.widget.RecyclerView r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView: void offsetChildrenHorizontal(int)>(i0);

     label1:
        return;
    }

    public void offsetChildrenVertical(int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        com.android.internal.widget.RecyclerView r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView: void offsetChildrenVertical(int)>(i0);

     label1:
        return;
    }

    public void onAdapterChanged(com.android.internal.widget.RecyclerView$Adapter, com.android.internal.widget.RecyclerView$Adapter)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Adapter r1, r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Adapter;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$Adapter;

        return;
    }

    public boolean onAddFocusables(com.android.internal.widget.RecyclerView, java.util.ArrayList, int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        java.util.ArrayList r2;
        int i0, i1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        r2 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return 0;
    }

    public void onAttachedToWindow(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        return;
    }

    public void onDetachedFromWindow(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        return;
    }

    public void onDetachedFromWindow(com.android.internal.widget.RecyclerView, com.android.internal.widget.RecyclerView$Recycler)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        com.android.internal.widget.RecyclerView$Recycler r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$Recycler;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(com.android.internal.widget.RecyclerView)>(r1);

        return;
    }

    public android.view.View onFocusSearchFailed(android.view.View, int, com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        com.android.internal.widget.RecyclerView$Recycler r2;
        com.android.internal.widget.RecyclerView$State r3;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.widget.RecyclerView$Recycler;

        r3 := @parameter3: com.android.internal.widget.RecyclerView$State;

        return null;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.accessibility.AccessibilityEvent r1;
        com.android.internal.widget.RecyclerView $r2, $r3;
        com.android.internal.widget.RecyclerView$State $r4;
        com.android.internal.widget.RecyclerView$Recycler $r5;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r5 = $r2.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent)>($r5, $r4, r1);

        return;
    }

    public void onInitializeAccessibilityEvent(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;
        android.view.accessibility.AccessibilityEvent r2;
        boolean $z0, $z1, $z2, $z3, z4;
        com.android.internal.widget.RecyclerView $r3, $r5, $r6, $r7, r9, $r10;
        com.android.internal.widget.RecyclerView$Adapter $r4, $r11;
        int $i0;
        com.android.internal.widget.RecyclerView$Recycler r8;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r8 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$State;

        r2 := @parameter2: android.view.accessibility.AccessibilityEvent;

        r9 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r9 == null goto label5;

        if r2 != null goto label1;

        goto label5;

     label1:
        z4 = 1;

        $z0 = virtualinvoke r9.<com.android.internal.widget.RecyclerView: boolean canScrollVertically(int)>(1);

        if $z0 != 0 goto label3;

        $r5 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $z1 = virtualinvoke $r5.<com.android.internal.widget.RecyclerView: boolean canScrollVertically(int)>(-1);

        if $z1 != 0 goto label3;

        $r6 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $z2 = virtualinvoke $r6.<com.android.internal.widget.RecyclerView: boolean canScrollHorizontally(int)>(-1);

        if $z2 != 0 goto label3;

        $r7 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $z3 = virtualinvoke $r7.<com.android.internal.widget.RecyclerView: boolean canScrollHorizontally(int)>(1);

        if $z3 == 0 goto label2;

        goto label3;

     label2:
        z4 = 0;

        goto label3;

     label3:
        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>(z4);

        $r10 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r11 = $r10.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if $r11 == null goto label4;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        $i0 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView$Adapter: int getItemCount()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>($i0);

     label4:
        return;

     label5:
        return;
    }

    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        com.android.internal.widget.RecyclerView $r2, $r3;
        com.android.internal.widget.RecyclerView$State $r4;
        com.android.internal.widget.RecyclerView$Recycler $r5;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r5 = $r2.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfo(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,android.view.accessibility.AccessibilityNodeInfo)>($r5, $r4, r1);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        android.view.accessibility.AccessibilityNodeInfo r3;
        com.android.internal.widget.RecyclerView $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo $r8;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        r3 := @parameter2: android.view.accessibility.AccessibilityNodeInfo;

        $r4 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView: boolean canScrollVertically(int)>(-1);

        if $z0 != 0 goto label1;

        $r6 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $z2 = virtualinvoke $r6.<com.android.internal.widget.RecyclerView: boolean canScrollHorizontally(int)>(-1);

        if $z2 == 0 goto label2;

     label1:
        virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(8192);

        virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>(1);

     label2:
        $r7 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $z3 = virtualinvoke $r7.<com.android.internal.widget.RecyclerView: boolean canScrollVertically(int)>(1);

        if $z3 != 0 goto label3;

        $r5 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $z1 = virtualinvoke $r5.<com.android.internal.widget.RecyclerView: boolean canScrollHorizontally(int)>(1);

        if $z1 == 0 goto label4;

     label3:
        virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(4096);

        virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>(1);

     label4:
        $i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getRowCountForAccessibility(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>(r1, r2);

        $i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getColumnCountForAccessibility(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>(r1, r2);

        $z4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean isLayoutHierarchical(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>(r1, r2);

        $i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getSelectionModeForAccessibility(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>(r1, r2);

        $r8 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int)>($i0, $i1, $z4, $i2);

        virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>($r8);

        return;
    }

    void onInitializeAccessibilityNodeInfoForItem(android.view.View, android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1, $r4;
        android.view.accessibility.AccessibilityNodeInfo r2;
        com.android.internal.widget.RecyclerView$ViewHolder r3;
        boolean $z0, $z1;
        com.android.internal.widget.ChildHelper $r5;
        com.android.internal.widget.RecyclerView $r6, $r7;
        com.android.internal.widget.RecyclerView$State $r8;
        com.android.internal.widget.RecyclerView$Recycler $r9;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        r3 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        $r4 = r3.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z1 = virtualinvoke $r5.<com.android.internal.widget.ChildHelper: boolean isHidden(android.view.View)>($r4);

        if $z1 != 0 goto label1;

        $r6 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r9 = $r6.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r7 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r8 = $r7.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfoForItem(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,android.view.View,android.view.accessibility.AccessibilityNodeInfo)>($r9, $r8, r1, r2);

     label1:
        return;
    }

    public void onInitializeAccessibilityNodeInfoForItem(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, android.view.View, android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        android.view.View r3;
        android.view.accessibility.AccessibilityNodeInfo r4;
        boolean z0, $z1;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo $r5;
        int i0, i1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.view.accessibility.AccessibilityNodeInfo;

        z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        i0 = 0;

        if z0 == 0 goto label1;

        i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)>(r3);

        goto label2;

     label1:
        i1 = 0;

     label2:
        $z1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z1 == 0 goto label3;

        i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)>(r3);

     label3:
        $r5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>(i1, 1, i0, 1, 0, 0);

        virtualinvoke r4.<android.view.accessibility.AccessibilityNodeInfo: void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>($r5);

        return;
    }

    public android.view.View onInterceptFocusSearch(android.view.View, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        return null;
    }

    public void onItemsAdded(com.android.internal.widget.RecyclerView, int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, i1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void onItemsChanged(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        return;
    }

    public void onItemsMoved(com.android.internal.widget.RecyclerView, int, int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, i1, i2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public void onItemsRemoved(com.android.internal.widget.RecyclerView, int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, i1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void onItemsUpdated(com.android.internal.widget.RecyclerView, int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, i1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void onItemsUpdated(com.android.internal.widget.RecyclerView, int, int, java.lang.Object)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, i1;
        java.lang.Object r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Object;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void onItemsUpdated(com.android.internal.widget.RecyclerView,int,int)>(r1, i0, i1);

        return;
    }

    public void onLayoutChildren(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "You must override onLayoutChildren(Recycler recycler, State state) ");

        return;
    }

    public void onLayoutCompleted(com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$State;

        return;
    }

    public void onMeasure(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        int i0, i1;
        com.android.internal.widget.RecyclerView $r3;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView: void defaultOnMeasure(int,int)>(i0, i1);

        return;
    }

    public boolean onRequestChildFocus(com.android.internal.widget.RecyclerView, android.view.View, android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        android.view.View r2, r3;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.View;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean isSmoothScrolling()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: boolean isComputingLayout()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public boolean onRequestChildFocus(com.android.internal.widget.RecyclerView, com.android.internal.widget.RecyclerView$State, android.view.View, android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        com.android.internal.widget.RecyclerView$State r2;
        android.view.View r3, r4;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.view.View;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(com.android.internal.widget.RecyclerView,android.view.View,android.view.View)>(r1, r3, r4);

        return $z0;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.os.Parcelable r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.os.Parcelable;

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        return null;
    }

    public void onScrollStateChanged(int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        return;
    }

    boolean performAccessibilityAction(int, android.os.Bundle)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.os.Bundle r1;
        com.android.internal.widget.RecyclerView $r2, $r3;
        com.android.internal.widget.RecyclerView$State $r4;
        com.android.internal.widget.RecyclerView$Recycler $r5;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r5 = $r2.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int,android.os.Bundle)>($r5, $r4, i0, r1);

        return $z0;
    }

    public boolean performAccessibilityAction(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, int, android.os.Bundle)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$State r1;
        android.os.Bundle r2;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.widget.RecyclerView $r3, $r4, $r5, r7;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24;
        com.android.internal.widget.RecyclerView$Recycler r6;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r6 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$State;

        i20 := @parameter2: int;

        r2 := @parameter3: android.os.Bundle;

        r7 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r7 != null goto label1;

        return 0;

     label1:
        i21 = 0;

        i22 = 0;

        if i20 == 4096 goto label4;

        if i20 == 8192 goto label2;

        i23 = 0;

        goto label6;

     label2:
        $z2 = virtualinvoke r7.<com.android.internal.widget.RecyclerView: boolean canScrollVertically(int)>(-1);

        if $z2 == 0 goto label3;

        $i15 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i16 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i17 = $i15 - $i16;

        $i18 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i19 = $i17 - $i18;

        i21 = neg $i19;

     label3:
        i23 = i21;

        $r5 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $z3 = virtualinvoke $r5.<com.android.internal.widget.RecyclerView: boolean canScrollHorizontally(int)>(-1);

        if $z3 == 0 goto label6;

        $i10 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i11 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i12 = $i10 - $i11;

        $i13 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i14 = $i12 - $i13;

        i22 = neg $i14;

        i23 = i21;

        goto label6;

     label4:
        i24 = 0;

        $z0 = virtualinvoke r7.<com.android.internal.widget.RecyclerView: boolean canScrollVertically(int)>(1);

        if $z0 == 0 goto label5;

        $i6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i7 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i8 = $i6 - $i7;

        $i9 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i24 = $i8 - $i9;

     label5:
        i23 = i24;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $z1 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView: boolean canScrollHorizontally(int)>(1);

        if $z1 == 0 goto label6;

        $i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i22 = $i4 - $i5;

        i23 = i24;

     label6:
        if i23 != 0 goto label7;

        if i22 != 0 goto label7;

        return 0;

     label7:
        $r4 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r4.<com.android.internal.widget.RecyclerView: void smoothScrollBy(int,int)>(i22, i23);

        return 1;
    }

    boolean performAccessibilityActionForItem(android.view.View, int, android.os.Bundle)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        android.os.Bundle r2;
        com.android.internal.widget.RecyclerView $r3, $r4;
        com.android.internal.widget.RecyclerView$State $r5;
        com.android.internal.widget.RecyclerView$Recycler $r6;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r6 = $r3.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r4 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean performAccessibilityActionForItem(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,android.view.View,int,android.os.Bundle)>($r6, $r5, r1, i0, r2);

        return $z0;
    }

    public boolean performAccessibilityActionForItem(com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State, android.view.View, int, android.os.Bundle)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;
        android.view.View r3;
        int i0;
        android.os.Bundle r4;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        i0 := @parameter3: int;

        r4 := @parameter4: android.os.Bundle;

        return 0;
    }

    public void postOnAnimation(java.lang.Runnable)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        java.lang.Runnable r1;
        com.android.internal.widget.RecyclerView r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: java.lang.Runnable;

        r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.widget.RecyclerView: void postOnAnimation(java.lang.Runnable)>(r1);

     label1:
        return;
    }

    public void removeAllViews()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int $i0, i1;
        com.android.internal.widget.ChildHelper $r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        $i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        virtualinvoke $r1.<com.android.internal.widget.ChildHelper: void removeViewAt(int)>(i1);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    public void removeAndRecycleAllViews(com.android.internal.widget.RecyclerView$Recycler)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        int $i0, i1;
        android.view.View $r2;
        com.android.internal.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        $i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i1);

        $r3 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        $z0 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void removeAndRecycleViewAt(int,com.android.internal.widget.RecyclerView$Recycler)>(i1, r1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    void removeAndRecycleScrapInt(com.android.internal.widget.RecyclerView$Recycler)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        int i0, i1;
        android.view.View r2;
        com.android.internal.widget.RecyclerView$ViewHolder r3;
        com.android.internal.widget.RecyclerView $r4, $r5, $r7, $r9;
        boolean $z0, $z1;
        com.android.internal.widget.RecyclerView$ItemAnimator $r6, $r8;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        i0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$Recycler: int getScrapCount()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label6;

        r2 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$Recycler: android.view.View getScrapViewAt(int)>(i1);

        r3 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        $z0 = virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label5;

     label2:
        virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        $z1 = virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z1 == 0 goto label3;

        $r9 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r9.<com.android.internal.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>(r2, 0);

     label3:
        $r5 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r6 = $r5.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r6 == null goto label4;

        $r7 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r8 = $r7.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r8.<com.android.internal.widget.RecyclerView$ItemAnimator: void endAnimation(com.android.internal.widget.RecyclerView$ViewHolder)>(r3);

     label4:
        virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(1);

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$Recycler: void quickRecycleScrapView(android.view.View)>(r2);

     label5:
        i1 = i1 + -1;

        goto label1;

     label6:
        virtualinvoke r1.<com.android.internal.widget.RecyclerView$Recycler: void clearScrap()>();

        if i0 <= 0 goto label7;

        $r4 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r4.<com.android.internal.widget.RecyclerView: void invalidate()>();

     label7:
        return;
    }

    public void removeAndRecycleView(android.view.View, com.android.internal.widget.RecyclerView$Recycler)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$Recycler r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$Recycler;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void removeView(android.view.View)>(r1);

        virtualinvoke r2.<com.android.internal.widget.RecyclerView$Recycler: void recycleView(android.view.View)>(r1);

        return;
    }

    public void removeAndRecycleViewAt(int, com.android.internal.widget.RecyclerView$Recycler)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        android.view.View r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$Recycler;

        r2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void removeViewAt(int)>(i0);

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$Recycler: void recycleView(android.view.View)>(r2);

        return;
    }

    public boolean removeCallbacks(java.lang.Runnable)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        java.lang.Runnable r1;
        com.android.internal.widget.RecyclerView r2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: java.lang.Runnable;

        r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView: boolean removeCallbacks(java.lang.Runnable)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public void removeDetachedView(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>(r1, 0);

        return;
    }

    public void removeView(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        com.android.internal.widget.ChildHelper $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<com.android.internal.widget.ChildHelper: void removeView(android.view.View)>(r1);

        return;
    }

    public void removeViewAt(int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.view.View $r1;
        com.android.internal.widget.ChildHelper $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<com.android.internal.widget.ChildHelper: void removeViewAt(int)>(i0);

     label1:
        return;
    }

    public boolean requestChildRectangleOnScreen(com.android.internal.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        android.view.View r2;
        android.graphics.Rect r3;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, i33;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.graphics.Rect;

        z0 := @parameter3: boolean;

        i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i9 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i10 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i2 = $i9 - $i10;

        i3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getHeight()>();

        i4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i11 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i12 = r3.<android.graphics.Rect: int left>;

        $i13 = $i11 + $i12;

        $i14 = virtualinvoke r2.<android.view.View: int getScrollX()>();

        i5 = $i13 - $i14;

        $i15 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i16 = r3.<android.graphics.Rect: int top>;

        $i17 = $i15 + $i16;

        $i18 = virtualinvoke r2.<android.view.View: int getScrollY()>();

        i6 = $i17 - $i18;

        $i19 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        i7 = $i19 + i5;

        i30 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        $i20 = i5 - i0;

        i31 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i20);

        $i21 = i6 - i1;

        i32 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i21);

        $i22 = i7 - i2;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i22);

        $i24 = i30 + i6;

        $i23 = i3 - i4;

        $i25 = $i24 - $i23;

        i33 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i25);

        $i26 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getLayoutDirection()>();

        if $i26 != 1 goto label03;

        if i8 == 0 goto label01;

        i31 = i8;

        goto label02;

     label01:
        $i29 = i7 - i2;

        i31 = staticinvoke <java.lang.Math: int max(int,int)>(i31, $i29);

     label02:
        goto label05;

     label03:
        if i31 == 0 goto label04;

        goto label05;

     label04:
        $i27 = i5 - i0;

        i31 = staticinvoke <java.lang.Math: int min(int,int)>($i27, i8);

     label05:
        if i32 == 0 goto label06;

        goto label07;

     label06:
        $i28 = i6 - i1;

        i32 = staticinvoke <java.lang.Math: int min(int,int)>($i28, i33);

     label07:
        if i31 != 0 goto label09;

        if i32 == 0 goto label08;

        goto label09;

     label08:
        return 0;

     label09:
        if z0 == 0 goto label10;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView: void scrollBy(int,int)>(i31, i32);

        goto label11;

     label10:
        virtualinvoke r1.<com.android.internal.widget.RecyclerView: void smoothScrollBy(int,int)>(i31, i32);

     label11:
        return 1;
    }

    public void requestLayout()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView: void requestLayout()>();

     label1:
        return;
    }

    public void requestSimpleAnimationsInNextLayout()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = 1;

        return;
    }

    public int scrollHorizontallyBy(int, com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter2: com.android.internal.widget.RecyclerView$State;

        return 0;
    }

    public void scrollToPosition(int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        return;
    }

    public int scrollVerticallyBy(int, com.android.internal.widget.RecyclerView$Recycler, com.android.internal.widget.RecyclerView$State)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        com.android.internal.widget.RecyclerView$State r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$Recycler;

        r2 := @parameter2: com.android.internal.widget.RecyclerView$State;

        return 0;
    }

    public void setAutoMeasureEnabled(boolean)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mAutoMeasure> = z0;

        return;
    }

    void setExactMeasureSpecsFrom(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        $i0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getWidth()>();

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, 1073741824);

        $i2 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getHeight()>();

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)>($i1, $i3);

        return;
    }

    public final void setItemPrefetchEnabled(boolean)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        boolean z0, $z1;
        com.android.internal.widget.RecyclerView r1;
        com.android.internal.widget.RecyclerView$Recycler $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled>;

        if z0 == $z1 goto label1;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled> = z0;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mPrefetchMaxCountObserved> = 0;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if r1 == null goto label1;

        $r2 = r1.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView$Recycler: void updateViewCacheSize()>();

     label1:
        return;
    }

    void setMeasureSpecs(int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0, $i1, i2, i3, $i4, i5;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i2);

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mWidth> = $i1;

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i2);

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mWidthMode> = i3;

        if i3 != 0 goto label1;

        $z1 = <com.android.internal.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC>;

        if $z1 != 0 goto label1;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mWidth> = 0;

     label1:
        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mHeight> = $i4;

        i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mHeightMode> = i5;

        if i5 != 0 goto label2;

        $z0 = <com.android.internal.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC>;

        if $z0 != 0 goto label2;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mHeight> = 0;

     label2:
        return;
    }

    public void setMeasuredDimension(int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0, i1;
        com.android.internal.widget.RecyclerView $r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        staticinvoke <com.android.internal.widget.RecyclerView: void access$1000(com.android.internal.widget.RecyclerView,int,int)>($r1, i0, i1);

        return;
    }

    public void setMeasuredDimension(android.graphics.Rect, int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.graphics.Rect r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.graphics.Rect;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        i3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        i4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i5 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        i6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        i7 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i8 = i2 + i3;

        $i9 = $i8 + i4;

        $i10 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getMinimumWidth()>();

        $i11 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>(i0, $i9, $i10);

        $i12 = i5 + i6;

        $i13 = $i12 + i7;

        $i14 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getMinimumHeight()>();

        $i15 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>(i1, $i13, $i14);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void setMeasuredDimension(int,int)>($i11, $i15);

        return;
    }

    void setMeasuredDimensionFromChildren(int, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14, i15;
        android.view.View r1;
        android.graphics.Rect r2, $r4, $r6;
        com.android.internal.widget.RecyclerView $r3, $r5, $r7, $r8;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: int getChildCount()>();

        if i2 != 0 goto label1;

        $r8 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r8.<com.android.internal.widget.RecyclerView: void defaultOnMeasure(int,int)>(i0, i1);

        return;

     label1:
        i7 = 2147483647;

        i8 = 2147483647;

        i9 = -2147483648;

        i10 = -2147483648;

        i11 = 0;

     label2:
        if i11 >= i2 goto label7;

        r1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i11);

        $r7 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        r2 = $r7.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>(r1, r2);

        i12 = i7;

        $i3 = r2.<android.graphics.Rect: int left>;

        if $i3 >= i7 goto label3;

        i12 = r2.<android.graphics.Rect: int left>;

     label3:
        i13 = i9;

        $i4 = r2.<android.graphics.Rect: int right>;

        if $i4 <= i9 goto label4;

        i13 = r2.<android.graphics.Rect: int right>;

     label4:
        i14 = i8;

        $i5 = r2.<android.graphics.Rect: int top>;

        if $i5 >= i8 goto label5;

        i14 = r2.<android.graphics.Rect: int top>;

     label5:
        i15 = i10;

        $i6 = r2.<android.graphics.Rect: int bottom>;

        if $i6 <= i10 goto label6;

        i15 = r2.<android.graphics.Rect: int bottom>;

     label6:
        i11 = i11 + 1;

        i7 = i12;

        i8 = i14;

        i9 = i13;

        i10 = i15;

        goto label2;

     label7:
        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(i7, i8, i9, i10);

        $r5 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        $r6 = $r5.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$LayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)>($r6, i0, i1);

        return;
    }

    public void setMeasurementCacheEnabled(boolean)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled> = z0;

        return;
    }

    void setRecyclerView(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        com.android.internal.widget.ChildHelper $r2;
        int $i0, $i1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        if r1 != null goto label1;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView> = null;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper> = null;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mWidth> = 0;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mHeight> = 0;

        goto label2;

     label1:
        r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView> = r1;

        $r2 = r1.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.ChildHelper mChildHelper> = $r2;

        $i0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getWidth()>();

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mWidth> = $i0;

        $i1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getHeight()>();

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mHeight> = $i1;

     label2:
        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mWidthMode> = 1073741824;

        r0.<com.android.internal.widget.RecyclerView$LayoutManager: int mHeightMode> = 1073741824;

        return;
    }

    boolean shouldMeasureChild(android.view.View, int, int, com.android.internal.widget.RecyclerView$LayoutParams)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.internal.widget.RecyclerView$LayoutParams r2;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.internal.widget.RecyclerView$LayoutParams;

        $z0 = virtualinvoke r1.<android.view.View: boolean isLayoutRequested()>();

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled>;

        if $z1 == 0 goto label2;

        $i2 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i3 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int width>;

        $z2 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i2, i0, $i3);

        if $z2 == 0 goto label2;

        $i4 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i5 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int height>;

        $z3 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i4, i1, $i5);

        if $z3 != 0 goto label1;

        goto label2;

     label1:
        z4 = 0;

        goto label3;

     label2:
        z4 = 1;

     label3:
        return z4;
    }

    boolean shouldMeasureTwice()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        return 0;
    }

    boolean shouldReMeasureChild(android.view.View, int, int, com.android.internal.widget.RecyclerView$LayoutParams)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.internal.widget.RecyclerView$LayoutParams r2;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.internal.widget.RecyclerView$LayoutParams;

        $z0 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled>;

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int width>;

        $z1 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i2, i0, $i3);

        if $z1 == 0 goto label2;

        $i4 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i5 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int height>;

        $z2 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i4, i1, $i5);

        if $z2 != 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    public void smoothScrollToPosition(com.android.internal.widget.RecyclerView, com.android.internal.widget.RecyclerView$State, int)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView r1;
        com.android.internal.widget.RecyclerView$State r2;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$State;

        i0 := @parameter2: int;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "You must override smoothScrollToPosition to support smooth scrolling");

        return;
    }

    public void startSmoothScroll(com.android.internal.widget.RecyclerView$SmoothScroller)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$SmoothScroller r1, r2, $r3;
        boolean $z0;
        com.android.internal.widget.RecyclerView $r4;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$SmoothScroller;

        r2 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if r2 == null goto label1;

        if r1 == r2 goto label1;

        $z0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$SmoothScroller: void stop()>();

     label1:
        r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$SmoothScroller mSmoothScroller> = r1;

        $r4 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$SmoothScroller: void start(com.android.internal.widget.RecyclerView,com.android.internal.widget.RecyclerView$LayoutManager)>($r4, r0);

        return;
    }

    public void stopIgnoringView(android.view.View)
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$ViewHolder r2;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: void stopIgnoring()>();

        virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: void resetInternal()>();

        virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: void addFlags(int)>(4);

        return;
    }

    void stopSmoothScroller()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;
        com.android.internal.widget.RecyclerView$SmoothScroller r1;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        r1 = r0.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$SmoothScroller: void stop()>();

     label1:
        return;
    }

    public boolean supportsPredictiveItemAnimations()
    {
        com.android.internal.widget.RecyclerView$LayoutManager r0;

        r0 := @this: com.android.internal.widget.RecyclerView$LayoutManager;

        return 0;
    }
}
