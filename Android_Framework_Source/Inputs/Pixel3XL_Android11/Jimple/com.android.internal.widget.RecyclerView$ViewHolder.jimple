public abstract class com.android.internal.widget.RecyclerView$ViewHolder extends java.lang.Object
{
    static final int FLAG_ADAPTER_FULLUPDATE;
    static final int FLAG_ADAPTER_POSITION_UNKNOWN;
    static final int FLAG_APPEARED_IN_PRE_LAYOUT;
    static final int FLAG_BOUNCED_FROM_HIDDEN_LIST;
    static final int FLAG_BOUND;
    static final int FLAG_IGNORE;
    static final int FLAG_INVALID;
    static final int FLAG_MOVED;
    static final int FLAG_NOT_RECYCLABLE;
    static final int FLAG_REMOVED;
    static final int FLAG_RETURNED_FROM_SCRAP;
    static final int FLAG_TMP_DETACHED;
    static final int FLAG_UPDATE;
    private static final java.util.List FULLUPDATE_PAYLOADS;
    static final int PENDING_ACCESSIBILITY_STATE_NOT_SET;
    public final android.view.View itemView;
    private int mFlags;
    private boolean mInChangeScrap;
    private int mIsRecyclableCount;
    long mItemId;
    int mItemViewType;
    java.lang.ref.WeakReference mNestedRecyclerView;
    int mOldPosition;
    com.android.internal.widget.RecyclerView mOwnerRecyclerView;
    java.util.List mPayloads;
    int mPendingAccessibilityState;
    int mPosition;
    int mPreLayoutPosition;
    private com.android.internal.widget.RecyclerView$Recycler mScrapContainer;
    com.android.internal.widget.RecyclerView$ViewHolder mShadowedHolder;
    com.android.internal.widget.RecyclerView$ViewHolder mShadowingHolder;
    java.util.List mUnmodifiedPayloads;
    private int mWasImportantForAccessibilityBeforeHidden;

    static void <clinit>()
    {
        java.util.List $r0;

        <com.android.internal.widget.RecyclerView$ViewHolder: int PENDING_ACCESSIBILITY_STATE_NOT_SET> = -1;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_UPDATE> = 2;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_TMP_DETACHED> = 256;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_RETURNED_FROM_SCRAP> = 32;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_REMOVED> = 8;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_NOT_RECYCLABLE> = 16;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_MOVED> = 2048;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_INVALID> = 4;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_IGNORE> = 128;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_BOUND> = 1;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_BOUNCED_FROM_HIDDEN_LIST> = 8192;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_APPEARED_IN_PRE_LAYOUT> = 4096;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_ADAPTER_POSITION_UNKNOWN> = 512;

        <com.android.internal.widget.RecyclerView$ViewHolder: int FLAG_ADAPTER_FULLUPDATE> = 1024;

        $r0 = <java.util.Collections: java.util.List EMPTY_LIST>;

        <com.android.internal.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS> = $r0;

        return;
    }

    public void <init>(android.view.View)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        android.view.View r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition> = -1;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mOldPosition> = -1;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: long mItemId> = -1L;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mItemViewType> = -1;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = -1;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$ViewHolder mShadowedHolder> = null;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$ViewHolder mShadowingHolder> = null;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List mPayloads> = null;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads> = null;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = 0;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$Recycler mScrapContainer> = null;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean mInChangeScrap> = 0;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = 0;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = -1;

        if r1 == null goto label1;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView> = r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("itemView may not be null");

        throw $r2;
    }

    static boolean access$1300(com.android.internal.widget.RecyclerView$ViewHolder)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        $z0 = specialinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldBeKeptAsChild()>();

        return $z0;
    }

    static int access$1400(com.android.internal.widget.RecyclerView$ViewHolder)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        return $i0;
    }

    static void access$200(com.android.internal.widget.RecyclerView$ViewHolder, com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        com.android.internal.widget.RecyclerView r1;

        r0 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        r1 := @parameter1: com.android.internal.widget.RecyclerView;

        specialinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: void onEnteredHiddenState(com.android.internal.widget.RecyclerView)>(r1);

        return;
    }

    static void access$300(com.android.internal.widget.RecyclerView$ViewHolder, com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        com.android.internal.widget.RecyclerView r1;

        r0 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        r1 := @parameter1: com.android.internal.widget.RecyclerView;

        specialinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: void onLeftHiddenState(com.android.internal.widget.RecyclerView)>(r1);

        return;
    }

    static boolean access$700(com.android.internal.widget.RecyclerView$ViewHolder)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        $z0 = specialinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean doesTransientStatePreventRecycling()>();

        return $z0;
    }

    static com.android.internal.widget.RecyclerView$Recycler access$802(com.android.internal.widget.RecyclerView$ViewHolder, com.android.internal.widget.RecyclerView$Recycler)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        com.android.internal.widget.RecyclerView$Recycler r1;

        r0 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$Recycler;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$Recycler mScrapContainer> = r1;

        return r1;
    }

    static boolean access$900(com.android.internal.widget.RecyclerView$ViewHolder)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        $z0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean mInChangeScrap>;

        return $z0;
    }

    static boolean access$902(com.android.internal.widget.RecyclerView$ViewHolder, boolean)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean mInChangeScrap> = z0;

        return z0;
    }

    private void createPayloadsIfNeeded()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        java.util.List $r2, $r4;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $r2 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List mPayloads> = $r3;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads> = $r4;

     label1:
        return;
    }

    private boolean doesTransientStatePreventRecycling()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 16;

        if $i1 != 0 goto label1;

        $r1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean hasTransientState()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private void onEnteredHiddenState(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        com.android.internal.widget.RecyclerView r1;
        android.view.View $r2;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i0 = virtualinvoke $r2.<android.view.View: int getImportantForAccessibility()>();

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = $i0;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(com.android.internal.widget.RecyclerView$ViewHolder,int)>(r0, 4);

        return;
    }

    private void onLeftHiddenState(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        com.android.internal.widget.RecyclerView r1;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden>;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(com.android.internal.widget.RecyclerView$ViewHolder,int)>(r0, $i0);

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = 0;

        return;
    }

    private boolean shouldBeKeptAsChild()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void addChangePayload(java.lang.Object)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        java.lang.Object r1;
        int $i0, $i1;
        java.util.List $r2;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: void addFlags(int)>(1024);

        goto label2;

     label1:
        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = 1024 & $i0;

        if $i1 != 0 goto label2;

        specialinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: void createPayloadsIfNeeded()>();

        $r2 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    void addFlags(int)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i2 = $i1 | i0;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags> = $i2;

        return;
    }

    void clearOldPosition()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mOldPosition> = -1;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = -1;

        return;
    }

    void clearPayload()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        java.util.List r1;
        int $i0, $i1;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        r1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        if r1 == null goto label1;

        interfaceinvoke r1.<java.util.List: void clear()>();

     label1:
        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & -1025;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags> = $i1;

        return;
    }

    void clearReturnedFromScrapFlag()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & -33;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags> = $i1;

        return;
    }

    void clearTmpDetachFlag()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & -257;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags> = $i1;

        return;
    }

    void flagRemovedAndOffsetPosition(int, int, boolean)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int i0, i1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: void addFlags(int)>(8);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>(i1, z0);

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition> = i0;

        return;
    }

    public final int getAdapterPosition()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        com.android.internal.widget.RecyclerView r1;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        r1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView mOwnerRecyclerView>;

        if r1 != null goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getAdapterPositionFor(com.android.internal.widget.RecyclerView$ViewHolder)>(r0);

        return $i0;
    }

    public final long getItemId()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        long $l0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $l0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: long mItemId>;

        return $l0;
    }

    public final int getItemViewType()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mItemViewType>;

        return $i0;
    }

    public final int getLayoutPosition()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int i0, i1;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        i1 = i0;

        if i0 != -1 goto label1;

        i1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

     label1:
        return i1;
    }

    public final int getOldPosition()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mOldPosition>;

        return $i0;
    }

    public final int getPosition()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int i0, i1;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        i1 = i0;

        if i0 != -1 goto label1;

        i1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

     label1:
        return i1;
    }

    java.util.List getUnmodifiedPayloads()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        java.util.List r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 1024;

        if $i1 != 0 goto label3;

        r1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        if r1 == null goto label2;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 != 0 goto label1;

        goto label2;

     label1:
        $r4 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads>;

        return $r4;

     label2:
        $r3 = <com.android.internal.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS>;

        return $r3;

     label3:
        $r2 = <com.android.internal.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS>;

        return $r2;
    }

    boolean hasAnyOfTheFlags(int)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isAdapterPositionUnknown()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 512;

        if $i1 != 0 goto label2;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    boolean isBound()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        z0 = 1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isInvalid()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public final boolean isRecyclable()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 16;

        if $i1 != 0 goto label1;

        $r1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean hasTransientState()>();

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isRemoved()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isScrap()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        com.android.internal.widget.RecyclerView$Recycler $r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $r1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$Recycler mScrapContainer>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isTmpDetached()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 256;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isUpdated()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean needsUpdate()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void offsetPosition(int, boolean)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0;
        android.view.View $r1, $r3;
        android.view.ViewGroup$LayoutParams $r2, $r4;
        com.android.internal.widget.RecyclerView$LayoutParams $r5;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mOldPosition>;

        if $i1 != -1 goto label1;

        $i8 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mOldPosition> = $i8;

     label1:
        $i2 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        if $i2 != -1 goto label2;

        $i7 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = $i7;

     label2:
        if z0 == 0 goto label3;

        $i5 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        $i6 = $i5 + i0;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = $i6;

     label3:
        $i3 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        $i4 = $i3 + i0;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition> = $i4;

        $r1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $r2 == null goto label4;

        $r3 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (com.android.internal.widget.RecyclerView$LayoutParams) $r4;

        $r5.<com.android.internal.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

     label4:
        return;
    }

    void resetInternal()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags> = 0;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition> = -1;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mOldPosition> = -1;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: long mItemId> = -1L;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = -1;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = 0;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$ViewHolder mShadowedHolder> = null;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$ViewHolder mShadowingHolder> = null;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: void clearPayload()>();

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = 0;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = -1;

        staticinvoke <com.android.internal.widget.RecyclerView: void clearNestedRecyclerViewIfNotNested(com.android.internal.widget.RecyclerView$ViewHolder)>(r0);

        return;
    }

    void saveOldPosition()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mOldPosition>;

        if $i0 != -1 goto label1;

        $i1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mOldPosition> = $i1;

     label1:
        return;
    }

    void setFlags(int, int)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i4 = $i2 & i1;

        $i3 = i0 & i1;

        $i5 = $i4 | $i3;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags> = $i5;

        return;
    }

    public final void setIsRecyclable(boolean)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, i6, i7;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        z0 := @parameter0: boolean;

        i6 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        if z0 == 0 goto label1;

        i7 = i6 + -1;

        goto label2;

     label1:
        i7 = i6 + 1;

     label2:
        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = i7;

        if i7 >= 0 goto label3;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = 0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isRecyclable decremented below 0: unmatched pair of setIsRecyable() calls for ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("View", $r5);

        goto label5;

     label3:
        if z0 != 0 goto label4;

        if i7 != 1 goto label4;

        $i3 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i4 = $i3 | 16;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags> = $i4;

        goto label5;

     label4:
        if z0 == 0 goto label5;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        if $i0 != 0 goto label5;

        $i1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i2 = $i1 & -17;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags> = $i2;

     label5:
        return;
    }

    void setScrapContainer(com.android.internal.widget.RecyclerView$Recycler, boolean)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        com.android.internal.widget.RecyclerView$Recycler r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Recycler;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$Recycler mScrapContainer> = r1;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean mInChangeScrap> = z0;

        return;
    }

    boolean shouldIgnore()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 128;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void stopIgnoring()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & -129;

        r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags> = $i1;

        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        java.lang.StringBuilder $r2, $r14, $r22;
        int $i0, $i1, $i3, $i4, $i5;
        java.lang.String $r4, $r15, $r19, $r26, r37;
        long $l2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.view.View $r16;
        android.view.ViewParent $r17;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ViewHolder{");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" position=");

        $i1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        $l2 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: long mItemId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oldPos=");

        $i3 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mOldPosition>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pLpos:");

        $i4 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = new java.lang.StringBuilder;

        $r15 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>($r15);

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z0 == 0 goto label03;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scrap ");

        $z8 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean mInChangeScrap>;

        if $z8 == 0 goto label01;

        r37 = "[changeScrap]";

        goto label02;

     label01:
        r37 = "[attachedScrap]";

     label02:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

     label03:
        $z9 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z9 == 0 goto label04;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invalid");

     label04:
        $z1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isBound()>();

        if $z1 != 0 goto label05;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unbound");

     label05:
        $z2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean needsUpdate()>();

        if $z2 == 0 goto label06;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" update");

     label06:
        $z3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z3 == 0 goto label07;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" removed");

     label07:
        $z4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z4 == 0 goto label08;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored");

     label08:
        $z5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z5 == 0 goto label09;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tmpDetached");

     label09:
        $z6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRecyclable()>();

        if $z6 != 0 goto label10;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not recyclable(");

        $i5 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

     label10:
        $z7 = virtualinvoke r0.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isAdapterPositionUnknown()>();

        if $z7 == 0 goto label11;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" undefined adapter position");

     label11:
        $r16 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r17 = virtualinvoke $r16.<android.view.View: android.view.ViewParent getParent()>();

        if $r17 != null goto label12;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no parent");

     label12:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;
    }

    void unScrap()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        com.android.internal.widget.RecyclerView$Recycler $r1;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $r1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$Recycler mScrapContainer>;

        virtualinvoke $r1.<com.android.internal.widget.RecyclerView$Recycler: void unscrapView(com.android.internal.widget.RecyclerView$ViewHolder)>(r0);

        return;
    }

    boolean wasReturnedFromScrap()
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView$ViewHolder;

        $i0 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: int mFlags>;

        $i1 = $i0 & 32;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }
}
