public class com.android.internal.widget.RecyclerView extends android.view.ViewGroup implements com.android.internal.widget.ScrollingView, com.android.internal.widget.NestedScrollingChild
{
    static final boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC;
    private static final boolean ALLOW_THREAD_GAP_WORK;
    private static final int[] CLIP_TO_PADDING_ATTR;
    static final boolean DEBUG;
    static final boolean DISPATCH_TEMP_DETACH;
    private static final boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION;
    static final boolean FORCE_INVALIDATE_DISPLAY_LIST;
    static final long FOREVER_NS;
    public static final int HORIZONTAL;
    private static final boolean IGNORE_DETACHED_FOCUSED_CHILD;
    private static final int INVALID_POINTER;
    public static final int INVALID_TYPE;
    private static final java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE;
    static final int MAX_SCROLL_DURATION;
    private static final int[] NESTED_SCROLLING_ATTRS;
    public static final long NO_ID;
    public static final int NO_POSITION;
    static final boolean POST_UPDATES_ON_ANIMATION;
    public static final int SCROLL_STATE_DRAGGING;
    public static final int SCROLL_STATE_IDLE;
    public static final int SCROLL_STATE_SETTLING;
    static final java.lang.String TAG;
    public static final int TOUCH_SLOP_DEFAULT;
    public static final int TOUCH_SLOP_PAGING;
    static final java.lang.String TRACE_BIND_VIEW_TAG;
    static final java.lang.String TRACE_CREATE_VIEW_TAG;
    private static final java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG;
    static final java.lang.String TRACE_NESTED_PREFETCH_TAG;
    private static final java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG;
    private static final java.lang.String TRACE_ON_LAYOUT_TAG;
    static final java.lang.String TRACE_PREFETCH_TAG;
    static final java.lang.String TRACE_SCROLL_TAG;
    public static final int VERTICAL;
    static final android.view.animation.Interpolator sQuinticInterpolator;
    com.android.internal.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate;
    private final android.view.accessibility.AccessibilityManager mAccessibilityManager;
    private com.android.internal.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener;
    com.android.internal.widget.RecyclerView$Adapter mAdapter;
    com.android.internal.widget.AdapterHelper mAdapterHelper;
    boolean mAdapterUpdateDuringMeasure;
    private android.widget.EdgeEffect mBottomGlow;
    private com.android.internal.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback;
    com.android.internal.widget.ChildHelper mChildHelper;
    boolean mClipToPadding;
    boolean mDataSetHasChangedAfterLayout;
    private int mDispatchScrollCounter;
    private int mEatRequestLayout;
    private int mEatenAccessibilityChangeFlags;
    boolean mFirstLayoutComplete;
    com.android.internal.widget.GapWorker mGapWorker;
    boolean mHasFixedSize;
    private boolean mIgnoreMotionEventTillDown;
    private int mInitialTouchX;
    private int mInitialTouchY;
    boolean mIsAttached;
    com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator;
    private com.android.internal.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener;
    private java.lang.Runnable mItemAnimatorRunner;
    final java.util.ArrayList mItemDecorations;
    boolean mItemsAddedOrRemoved;
    boolean mItemsChanged;
    private int mLastTouchX;
    private int mLastTouchY;
    com.android.internal.widget.RecyclerView$LayoutManager mLayout;
    boolean mLayoutFrozen;
    private int mLayoutOrScrollCounter;
    boolean mLayoutRequestEaten;
    private android.widget.EdgeEffect mLeftGlow;
    private final int mMaxFlingVelocity;
    private final int mMinFlingVelocity;
    private final int[] mMinMaxLayoutPositions;
    private final int[] mNestedOffsets;
    private final com.android.internal.widget.RecyclerView$RecyclerViewDataObserver mObserver;
    private java.util.List mOnChildAttachStateListeners;
    private com.android.internal.widget.RecyclerView$OnFlingListener mOnFlingListener;
    private final java.util.ArrayList mOnItemTouchListeners;
    final java.util.List mPendingAccessibilityImportanceChange;
    private com.android.internal.widget.RecyclerView$SavedState mPendingSavedState;
    boolean mPostedAnimatorRunner;
    com.android.internal.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry;
    private boolean mPreserveFocusAfterLayout;
    final com.android.internal.widget.RecyclerView$Recycler mRecycler;
    com.android.internal.widget.RecyclerView$RecyclerListener mRecyclerListener;
    private android.widget.EdgeEffect mRightGlow;
    private final int[] mScrollConsumed;
    private float mScrollFactor;
    private com.android.internal.widget.RecyclerView$OnScrollListener mScrollListener;
    private java.util.List mScrollListeners;
    private final int[] mScrollOffset;
    private int mScrollPointerId;
    private int mScrollState;
    final com.android.internal.widget.RecyclerView$State mState;
    final android.graphics.Rect mTempRect;
    private final android.graphics.Rect mTempRect2;
    final android.graphics.RectF mTempRectF;
    private android.widget.EdgeEffect mTopGlow;
    private int mTouchSlop;
    final java.lang.Runnable mUpdateChildViewsRunnable;
    private android.view.VelocityTracker mVelocityTracker;
    final com.android.internal.widget.RecyclerView$ViewFlinger mViewFlinger;
    private final com.android.internal.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback;
    final com.android.internal.widget.ViewInfoStore mViewInfoStore;

    static void <clinit>()
    {
        int[] $r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Class[] $r2;
        java.lang.Class $r3, $r4;
        com.android.internal.widget.RecyclerView$3 $r5;
        boolean z0, z1, z2, z3, z4, z5;

        <com.android.internal.widget.RecyclerView: int VERTICAL> = 1;

        <com.android.internal.widget.RecyclerView: java.lang.String TRACE_SCROLL_TAG> = "RV Scroll";

        <com.android.internal.widget.RecyclerView: java.lang.String TRACE_PREFETCH_TAG> = "RV Prefetch";

        <com.android.internal.widget.RecyclerView: java.lang.String TRACE_ON_LAYOUT_TAG> = "RV OnLayout";

        <com.android.internal.widget.RecyclerView: java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG> = "RV FullInvalidate";

        <com.android.internal.widget.RecyclerView: java.lang.String TRACE_NESTED_PREFETCH_TAG> = "RV Nested Prefetch";

        <com.android.internal.widget.RecyclerView: java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG> = "RV PartialInvalidate";

        <com.android.internal.widget.RecyclerView: java.lang.String TRACE_CREATE_VIEW_TAG> = "RV CreateView";

        <com.android.internal.widget.RecyclerView: java.lang.String TRACE_BIND_VIEW_TAG> = "RV OnBindView";

        <com.android.internal.widget.RecyclerView: int TOUCH_SLOP_PAGING> = 1;

        <com.android.internal.widget.RecyclerView: int TOUCH_SLOP_DEFAULT> = 0;

        <com.android.internal.widget.RecyclerView: java.lang.String TAG> = "RecyclerView";

        <com.android.internal.widget.RecyclerView: int SCROLL_STATE_SETTLING> = 2;

        <com.android.internal.widget.RecyclerView: int SCROLL_STATE_IDLE> = 0;

        <com.android.internal.widget.RecyclerView: int SCROLL_STATE_DRAGGING> = 1;

        <com.android.internal.widget.RecyclerView: int NO_POSITION> = -1;

        <com.android.internal.widget.RecyclerView: long NO_ID> = -1L;

        <com.android.internal.widget.RecyclerView: int MAX_SCROLL_DURATION> = 2000;

        <com.android.internal.widget.RecyclerView: int INVALID_TYPE> = -1;

        <com.android.internal.widget.RecyclerView: int INVALID_POINTER> = -1;

        <com.android.internal.widget.RecyclerView: int HORIZONTAL> = 0;

        <com.android.internal.widget.RecyclerView: long FOREVER_NS> = 9223372036854775807L;

        <com.android.internal.widget.RecyclerView: boolean DISPATCH_TEMP_DETACH> = 0;

        <com.android.internal.widget.RecyclerView: boolean DEBUG> = 0;

        $r0 = newarray (int)[1];

        $r0[0] = 16843830;

        <com.android.internal.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS> = $r0;

        $r1 = newarray (int)[1];

        $r1[0] = 16842987;

        <com.android.internal.widget.RecyclerView: int[] CLIP_TO_PADDING_ATTR> = $r1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 18 goto label02;

        $i5 = <android.os.Build$VERSION: int SDK_INT>;

        if $i5 == 19 goto label02;

        $i6 = <android.os.Build$VERSION: int SDK_INT>;

        if $i6 != 20 goto label01;

        goto label02;

     label01:
        z0 = 0;

        goto label03;

     label02:
        z0 = 1;

     label03:
        <com.android.internal.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST> = z0;

        $i7 = <android.os.Build$VERSION: int SDK_INT>;

        if $i7 < 23 goto label04;

        z1 = 1;

        goto label05;

     label04:
        z1 = 0;

     label05:
        <com.android.internal.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC> = z1;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 16 goto label06;

        z2 = 1;

        goto label07;

     label06:
        z2 = 0;

     label07:
        <com.android.internal.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION> = z2;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label08;

        z3 = 1;

        goto label09;

     label08:
        z3 = 0;

     label09:
        <com.android.internal.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK> = z3;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 > 15 goto label10;

        z4 = 1;

        goto label11;

     label10:
        z4 = 0;

     label11:
        <com.android.internal.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION> = z4;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 > 15 goto label12;

        z5 = 1;

        goto label13;

     label12:
        z5 = 0;

     label13:
        <com.android.internal.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD> = z5;

        $r2 = newarray (java.lang.Class)[4];

        $r2[0] = class "Landroid/content/Context;";

        $r2[1] = class "Landroid/util/AttributeSet;";

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[2] = $r3;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[3] = $r4;

        <com.android.internal.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE> = $r2;

        $r5 = new com.android.internal.widget.RecyclerView$3;

        specialinvoke $r5.<com.android.internal.widget.RecyclerView$3: void <init>()>();

        <com.android.internal.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator> = $r5;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.RecyclerView r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.RecyclerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.widget.RecyclerView r0;
        android.util.AttributeSet r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.content.res.TypedArray r2, r35, r38;
        com.android.internal.widget.RecyclerView$RecyclerViewDataObserver $r3;
        com.android.internal.widget.RecyclerView$Recycler $r4;
        com.android.internal.widget.ViewInfoStore $r5;
        com.android.internal.widget.RecyclerView$1 $r6;
        android.graphics.Rect $r7, $r8;
        android.graphics.RectF $r9;
        java.util.ArrayList $r10, $r11, $r20;
        com.android.internal.widget.DefaultItemAnimator $r12;
        com.android.internal.widget.RecyclerView$ViewFlinger $r13;
        boolean $z1, $z2, z3, z4;
        com.android.internal.widget.RecyclerView$State $r14;
        com.android.internal.widget.RecyclerView$ItemAnimatorRestoreListener $r15;
        int[] $r16, $r17, $r18, $r19, $r29, $r30, $r31;
        com.android.internal.widget.RecyclerView$2 $r21;
        com.android.internal.widget.RecyclerView$4 $r22;
        com.android.internal.widget.RecyclerView$ItemAnimator$ItemAnimatorListener $r23;
        com.android.internal.widget.RecyclerView$ItemAnimator $r24;
        android.content.Context $r25, r33;
        java.lang.Object $r26;
        android.view.accessibility.AccessibilityManager $r27;
        com.android.internal.widget.RecyclerViewAccessibilityDelegate $r28;
        com.android.internal.widget.GapWorker$LayoutPrefetchRegistryImpl $r32, r34;
        android.view.ViewConfiguration r36;
        java.lang.String r37;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r33 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r33, r1, i0);

        $r3 = new com.android.internal.widget.RecyclerView$RecyclerViewDataObserver;

        specialinvoke $r3.<com.android.internal.widget.RecyclerView$RecyclerViewDataObserver: void <init>(com.android.internal.widget.RecyclerView)>(r0);

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$RecyclerViewDataObserver mObserver> = $r3;

        $r4 = new com.android.internal.widget.RecyclerView$Recycler;

        specialinvoke $r4.<com.android.internal.widget.RecyclerView$Recycler: void <init>(com.android.internal.widget.RecyclerView)>(r0);

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler> = $r4;

        $r5 = new com.android.internal.widget.ViewInfoStore;

        specialinvoke $r5.<com.android.internal.widget.ViewInfoStore: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore> = $r5;

        $r6 = new com.android.internal.widget.RecyclerView$1;

        specialinvoke $r6.<com.android.internal.widget.RecyclerView$1: void <init>(com.android.internal.widget.RecyclerView)>(r0);

        r0.<com.android.internal.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect> = $r7;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2> = $r8;

        $r9 = new android.graphics.RectF;

        specialinvoke $r9.<android.graphics.RectF: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: android.graphics.RectF mTempRectF> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners> = $r11;

        r0.<com.android.internal.widget.RecyclerView: int mEatRequestLayout> = 0;

        r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 0;

        r0.<com.android.internal.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        r0.<com.android.internal.widget.RecyclerView: int mDispatchScrollCounter> = 0;

        $r12 = new com.android.internal.widget.DefaultItemAnimator;

        specialinvoke $r12.<com.android.internal.widget.DefaultItemAnimator: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator> = $r12;

        r0.<com.android.internal.widget.RecyclerView: int mScrollState> = 0;

        r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId> = -1;

        r0.<com.android.internal.widget.RecyclerView: float mScrollFactor> = 1.4E-45F;

        r0.<com.android.internal.widget.RecyclerView: boolean mPreserveFocusAfterLayout> = 1;

        $r13 = new com.android.internal.widget.RecyclerView$ViewFlinger;

        specialinvoke $r13.<com.android.internal.widget.RecyclerView$ViewFlinger: void <init>(com.android.internal.widget.RecyclerView)>(r0);

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewFlinger mViewFlinger> = $r13;

        $z1 = <com.android.internal.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z1 == 0 goto label01;

        $r32 = new com.android.internal.widget.GapWorker$LayoutPrefetchRegistryImpl;

        specialinvoke $r32.<com.android.internal.widget.GapWorker$LayoutPrefetchRegistryImpl: void <init>()>();

        r34 = $r32;

        goto label02;

     label01:
        r34 = null;

     label02:
        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry> = r34;

        $r14 = new com.android.internal.widget.RecyclerView$State;

        specialinvoke $r14.<com.android.internal.widget.RecyclerView$State: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState> = $r14;

        r0.<com.android.internal.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 0;

        r0.<com.android.internal.widget.RecyclerView: boolean mItemsChanged> = 0;

        $r15 = new com.android.internal.widget.RecyclerView$ItemAnimatorRestoreListener;

        specialinvoke $r15.<com.android.internal.widget.RecyclerView$ItemAnimatorRestoreListener: void <init>(com.android.internal.widget.RecyclerView)>(r0);

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener> = $r15;

        r0.<com.android.internal.widget.RecyclerView: boolean mPostedAnimatorRunner> = 0;

        $r16 = newarray (int)[2];

        r0.<com.android.internal.widget.RecyclerView: int[] mMinMaxLayoutPositions> = $r16;

        $r17 = newarray (int)[2];

        r0.<com.android.internal.widget.RecyclerView: int[] mScrollOffset> = $r17;

        $r18 = newarray (int)[2];

        r0.<com.android.internal.widget.RecyclerView: int[] mScrollConsumed> = $r18;

        $r19 = newarray (int)[2];

        r0.<com.android.internal.widget.RecyclerView: int[] mNestedOffsets> = $r19;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange> = $r20;

        $r21 = new com.android.internal.widget.RecyclerView$2;

        specialinvoke $r21.<com.android.internal.widget.RecyclerView$2: void <init>(com.android.internal.widget.RecyclerView)>(r0);

        r0.<com.android.internal.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner> = $r21;

        $r22 = new com.android.internal.widget.RecyclerView$4;

        specialinvoke $r22.<com.android.internal.widget.RecyclerView$4: void <init>(com.android.internal.widget.RecyclerView)>(r0);

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback> = $r22;

        if r1 == null goto label03;

        $r31 = <com.android.internal.widget.RecyclerView: int[] CLIP_TO_PADDING_ATTR>;

        r35 = virtualinvoke r33.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r31, i0, 0);

        $z2 = virtualinvoke r35.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding> = $z2;

        virtualinvoke r35.<android.content.res.TypedArray: void recycle()>();

        goto label04;

     label03:
        r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding> = 1;

     label04:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setScrollContainer(boolean)>(1);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setFocusableInTouchMode(boolean)>(1);

        r36 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r33);

        $i1 = virtualinvoke r36.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.android.internal.widget.RecyclerView: int mTouchSlop> = $i1;

        $i2 = virtualinvoke r36.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<com.android.internal.widget.RecyclerView: int mMinFlingVelocity> = $i2;

        $i3 = virtualinvoke r36.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<com.android.internal.widget.RecyclerView: int mMaxFlingVelocity> = $i3;

        $i4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getOverScrollMode()>();

        if $i4 != 2 goto label05;

        z3 = 1;

        goto label06;

     label05:
        z3 = 0;

     label06:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setWillNotDraw(boolean)>(z3);

        $r24 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r23 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener>;

        virtualinvoke $r24.<com.android.internal.widget.RecyclerView$ItemAnimator: void setListener(com.android.internal.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)>($r23);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void initAdapterManager()>();

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void initChildrenHelper()>();

        $i5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getImportantForAccessibility()>();

        if $i5 != 0 goto label07;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setImportantForAccessibility(int)>(1);

     label07:
        $r25 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.content.Context getContext()>();

        $r26 = virtualinvoke $r25.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r27 = (android.view.accessibility.AccessibilityManager) $r26;

        r0.<com.android.internal.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager> = $r27;

        $r28 = new com.android.internal.widget.RecyclerViewAccessibilityDelegate;

        specialinvoke $r28.<com.android.internal.widget.RecyclerViewAccessibilityDelegate: void <init>(com.android.internal.widget.RecyclerView)>(r0);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setAccessibilityDelegateCompat(com.android.internal.widget.RecyclerViewAccessibilityDelegate)>($r28);

        z4 = 1;

        if r1 == null goto label10;

        $r29 = <com.android.internal.R$styleable: int[] RecyclerView>;

        r2 = virtualinvoke r33.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r29, i0, 0);

        r37 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        $i6 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        if $i6 != -1 goto label08;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setDescendantFocusability(int)>(262144);

     label08:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)>(r33, r37, r1, i0, 0);

        $i7 = <android.os.Build$VERSION: int SDK_INT>;

        if $i7 < 21 goto label09;

        $r30 = <com.android.internal.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS>;

        r38 = virtualinvoke r33.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r30, i0, 0);

        z4 = virtualinvoke r38.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        virtualinvoke r38.<android.content.res.TypedArray: void recycle()>();

     label09:
        goto label11;

     label10:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setDescendantFocusability(int)>(262144);

        z4 = 1;

     label11:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setNestedScrollingEnabled(boolean)>(z4);

        return;
    }

    static void access$000(com.android.internal.widget.RecyclerView, android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @parameter0: com.android.internal.widget.RecyclerView;

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r2 := @parameter3: android.view.ViewGroup$LayoutParams;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        return;
    }

    static void access$100(com.android.internal.widget.RecyclerView, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0;

        r0 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void detachViewFromParent(int)>(i0);

        return;
    }

    static void access$1000(com.android.internal.widget.RecyclerView, int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1;

        r0 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setMeasuredDimension(int,int)>(i0, i1);

        return;
    }

    static boolean access$500(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.widget.RecyclerView;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean awakenScrollBars()>();

        return $z0;
    }

    static boolean access$600()
    {
        boolean $z0;

        $z0 = <com.android.internal.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        return $z0;
    }

    private void addAnimatingView(com.android.internal.widget.RecyclerView$ViewHolder)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewHolder r1, $r5;
        android.view.View r2;
        android.view.ViewParent $r3;
        com.android.internal.widget.RecyclerView$Recycler $r4;
        boolean $z0, z1;
        com.android.internal.widget.ChildHelper $r6, $r7, $r8;
        android.view.ViewGroup$LayoutParams $r9;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        r2 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r3 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 != r0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r2);

        virtualinvoke $r4.<com.android.internal.widget.RecyclerView$Recycler: void unscrapView(com.android.internal.widget.RecyclerView$ViewHolder)>($r5);

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r9 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        virtualinvoke $r8.<com.android.internal.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>(r2, -1, $r9, 1);

        goto label5;

     label3:
        if z1 != 0 goto label4;

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        virtualinvoke $r7.<com.android.internal.widget.ChildHelper: void addView(android.view.View,boolean)>(r2, 1);

        goto label5;

     label4:
        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        virtualinvoke $r6.<com.android.internal.widget.ChildHelper: void hide(android.view.View)>(r2);

     label5:
        return;
    }

    private void animateChange(com.android.internal.widget.RecyclerView$ViewHolder, com.android.internal.widget.RecyclerView$ViewHolder, com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo, com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo, boolean, boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewHolder r1, r2;
        com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo r3, r4;
        boolean z0, z1, $z2;
        com.android.internal.widget.RecyclerView$Recycler $r5;
        com.android.internal.widget.RecyclerView$ItemAnimator $r6;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$ViewHolder;

        r3 := @parameter2: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        r4 := @parameter3: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void addAnimatingView(com.android.internal.widget.RecyclerView$ViewHolder)>(r1);

     label1:
        if r1 == r2 goto label3;

        if z1 == 0 goto label2;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void addAnimatingView(com.android.internal.widget.RecyclerView$ViewHolder)>(r2);

     label2:
        r1.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$ViewHolder mShadowedHolder> = r2;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void addAnimatingView(com.android.internal.widget.RecyclerView$ViewHolder)>(r1);

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<com.android.internal.widget.RecyclerView$Recycler: void unscrapView(com.android.internal.widget.RecyclerView$ViewHolder)>(r1);

        virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        r2.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$ViewHolder mShadowingHolder> = r1;

     label3:
        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z2 = virtualinvoke $r6.<com.android.internal.widget.RecyclerView$ItemAnimator: boolean animateChange(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2, r3, r4);

        if $z2 == 0 goto label4;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void postAnimationRunner()>();

     label4:
        return;
    }

    private void cancelTouch()
    {
        com.android.internal.widget.RecyclerView r0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void resetTouch()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setScrollState(int)>(0);

        return;
    }

    static void clearNestedRecyclerViewIfNotNested(com.android.internal.widget.RecyclerView$ViewHolder)
    {
        com.android.internal.widget.RecyclerView$ViewHolder r0;
        java.lang.ref.WeakReference $r1, $r2;
        java.lang.Object $r3;
        android.view.View $r4, r5;
        boolean $z0;
        android.view.ViewParent r6;

        r0 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        $r1 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView>;

        if $r1 == null goto label6;

        $r2 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (android.view.View) $r3;

     label1:
        if r5 == null goto label5;

        $r4 = r0.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        if r5 != $r4 goto label2;

        return;

     label2:
        r6 = virtualinvoke r5.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r6 instanceof android.view.View;

        if $z0 == 0 goto label3;

        r5 = (android.view.View) r6;

        goto label4;

     label3:
        r5 = null;

     label4:
        goto label1;

     label5:
        r0.<com.android.internal.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView> = null;

     label6:
        return;
    }

    private void createLayoutManager(android.content.Context, java.lang.String, android.util.AttributeSet, int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        android.util.AttributeSet r1;
        int i0, i1, $i2;
        java.lang.String r2, $r13, $r14, $r17, $r19, $r24, $r26, $r29, $r31, $r34, $r36, $r39, $r41, r43, r44;
        java.lang.Class r3, $r4, $r11;
        boolean $z0;
        java.lang.Class[] $r5, $r21;
        java.lang.Object[] $r6, r47;
        java.lang.Integer $r7, $r8;
        java.lang.Object $r9;
        com.android.internal.widget.RecyclerView$LayoutManager $r10;
        java.lang.Throwable $r12, $r15, $r20, $r22, $r27;
        java.lang.ClassNotFoundException $r32;
        java.lang.ClassCastException $r37;
        android.content.Context r42;
        java.lang.ClassLoader r45;
        java.lang.reflect.Constructor r46;
        java.lang.StringBuilder r62, r64, r66, r68, r70, r72;
        java.lang.IllegalStateException r63, r65, r67, r69, r71, r73;
        java.lang.NoSuchMethodException r74;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r42 := @parameter0: android.content.Context;

        r43 := @parameter1: java.lang.String;

        r1 := @parameter2: android.util.AttributeSet;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        if r43 == null goto label19;

        r44 = virtualinvoke r43.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke r44.<java.lang.String: int length()>();

        if $i2 == 0 goto label19;

        r2 = specialinvoke r0.<com.android.internal.widget.RecyclerView: java.lang.String getFullClassName(android.content.Context,java.lang.String)>(r42, r44);

     label01:
        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isInEditMode()>();

        if $z0 == 0 goto label03;

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r45 = virtualinvoke $r11.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label02:
        goto label04;

     label03:
        r45 = virtualinvoke r42.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label04:
        $r4 = virtualinvoke r45.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r2);

        r3 = virtualinvoke $r4.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lcom/android/internal/widget/RecyclerView$LayoutManager;");

     label05:
        $r5 = <com.android.internal.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE>;

        r46 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r5);

     label06:
        $r6 = newarray (java.lang.Object)[4];

        $r6[0] = r42;

        $r6[1] = r1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[2] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[3] = $r8;

        r47 = $r6;

        goto label10;

     label07:
        $r20 := @caughtexception;

     label08:
        $r21 = newarray (java.lang.Class)[0];

        r46 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r21);

     label09:
        r47 = null;

     label10:
        virtualinvoke r46.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r9 = virtualinvoke r46.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r47);

        $r10 = (com.android.internal.widget.RecyclerView$LayoutManager) $r9;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setLayoutManager(com.android.internal.widget.RecyclerView$LayoutManager)>($r10);

     label11:
        goto label19;

     label12:
        $r12 := @caughtexception;

     label13:
        r74 = (java.lang.NoSuchMethodException) $r12;

        virtualinvoke r74.<java.lang.NoSuchMethodException: java.lang.Throwable initCause(java.lang.Throwable)>($r20);

        r63 = new java.lang.IllegalStateException;

        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        $r13 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error creating LayoutManager ");

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r63.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r12);

        throw r63;

     label14:
        $r37 := @caughtexception;

        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        $r39 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Class is not a LayoutManager ");

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r65 = new java.lang.IllegalStateException;

        $r41 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r65.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r41, $r37);

        throw r65;

     label15:
        $r22 := @caughtexception;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        $r24 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Cannot access non-public constructor ");

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r67 = new java.lang.IllegalStateException;

        $r26 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r67.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r26, $r22);

        throw r67;

     label16:
        $r27 := @caughtexception;

        r68 = new java.lang.StringBuilder;

        specialinvoke r68.<java.lang.StringBuilder: void <init>()>();

        $r29 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not instantiate the LayoutManager: ");

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r69 = new java.lang.IllegalStateException;

        $r31 = virtualinvoke r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r69.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r31, $r27);

        throw r69;

     label17:
        $r15 := @caughtexception;

        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not instantiate the LayoutManager: ");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r71 = new java.lang.IllegalStateException;

        $r19 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r71.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r15);

        throw r71;

     label18:
        $r32 := @caughtexception;

        r72 = new java.lang.StringBuilder;

        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        $r34 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Unable to find LayoutManager ");

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r73 = new java.lang.IllegalStateException;

        $r36 = virtualinvoke r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r73.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r36, $r32);

        throw r73;

     label19:
        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label18;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label17;
        catch java.lang.InstantiationException from label01 to label02 with label16;
        catch java.lang.IllegalAccessException from label01 to label02 with label15;
        catch java.lang.ClassCastException from label01 to label02 with label14;
        catch java.lang.ClassNotFoundException from label03 to label04 with label18;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label17;
        catch java.lang.InstantiationException from label03 to label04 with label16;
        catch java.lang.IllegalAccessException from label03 to label04 with label15;
        catch java.lang.ClassCastException from label03 to label04 with label14;
        catch java.lang.ClassNotFoundException from label04 to label05 with label18;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label17;
        catch java.lang.InstantiationException from label04 to label05 with label16;
        catch java.lang.IllegalAccessException from label04 to label05 with label15;
        catch java.lang.ClassCastException from label04 to label05 with label14;
        catch java.lang.NoSuchMethodException from label05 to label06 with label07;
        catch java.lang.ClassNotFoundException from label05 to label06 with label18;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label17;
        catch java.lang.InstantiationException from label05 to label06 with label16;
        catch java.lang.IllegalAccessException from label05 to label06 with label15;
        catch java.lang.ClassCastException from label05 to label06 with label14;
        catch java.lang.NoSuchMethodException from label08 to label09 with label12;
        catch java.lang.ClassNotFoundException from label08 to label09 with label18;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label17;
        catch java.lang.InstantiationException from label08 to label09 with label16;
        catch java.lang.IllegalAccessException from label08 to label09 with label15;
        catch java.lang.ClassCastException from label08 to label09 with label14;
        catch java.lang.ClassNotFoundException from label10 to label11 with label18;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label17;
        catch java.lang.InstantiationException from label10 to label11 with label16;
        catch java.lang.IllegalAccessException from label10 to label11 with label15;
        catch java.lang.ClassCastException from label10 to label11 with label14;
        catch java.lang.ClassNotFoundException from label13 to label14 with label18;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label17;
        catch java.lang.InstantiationException from label13 to label14 with label16;
        catch java.lang.IllegalAccessException from label13 to label14 with label15;
        catch java.lang.ClassCastException from label13 to label14 with label14;
    }

    private boolean didChildRangeChange(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, $i2, $i3;
        int[] r1, $r2;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.internal.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])>($r2);

        r1 = r0.<com.android.internal.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        z0 = 0;

        $i2 = r1[0];

        if $i2 != i0 goto label1;

        $i3 = r1[1];

        if $i3 == i1 goto label2;

     label1:
        z0 = 1;

     label2:
        return z0;
    }

    private void dispatchContentChangedIfNecessary()
    {
        com.android.internal.widget.RecyclerView r0;
        int i0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 = r0.<com.android.internal.widget.RecyclerView: int mEatenAccessibilityChangeFlags>;

        r0.<com.android.internal.widget.RecyclerView: int mEatenAccessibilityChangeFlags> = 0;

        if i0 == 0 goto label1;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isAccessibilityEnabled()>();

        if $z0 == 0 goto label1;

        r1 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setEventType(int)>(2048);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>(i0);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>(r1);

     label1:
        return;
    }

    private void dispatchLayoutStep1()
    {
        com.android.internal.widget.RecyclerView r0;
        long l0;
        int i1, $i2, $i3, $i4, i5, i6, i7, i8;
        com.android.internal.widget.RecyclerView$State $r1, $r3, $r4, $r5, $r6, $r7, $r10, $r16, $r23, $r26, r29, r30, r31, $r32, $r35;
        com.android.internal.widget.ViewInfoStore $r2, $r14, $r18, $r25, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14, $z15, z16, z17;
        com.android.internal.widget.RecyclerView$Recycler $r8;
        com.android.internal.widget.RecyclerView$LayoutManager $r9;
        com.android.internal.widget.ChildHelper $r11, $r12, $r19, $r20;
        android.view.View $r13, $r21;
        com.android.internal.widget.RecyclerView$ItemAnimator $r15, $r22;
        java.util.List $r17, $r24;
        com.android.internal.widget.RecyclerView$Adapter $r28, $r33;
        int[] $r34;
        com.android.internal.widget.RecyclerView$ViewHolder r36, r38;
        com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo r37, r39;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r29 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        z13 = 1;

        virtualinvoke r29.<com.android.internal.widget.RecyclerView$State: void assertLayoutStep(int)>(1);

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r1.<com.android.internal.widget.RecyclerView$State: boolean mIsMeasuring> = 0;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void eatRequestLayout()>();

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r2.<com.android.internal.widget.ViewInfoStore: void clear()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>();

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void saveFocusInfo()>();

        r30 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z0 = r30.<com.android.internal.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z0 == 0 goto label01;

        $z12 = r0.<com.android.internal.widget.RecyclerView: boolean mItemsChanged>;

        if $z12 == 0 goto label01;

        goto label02;

     label01:
        z13 = 0;

     label02:
        r30.<com.android.internal.widget.RecyclerView$State: boolean mTrackOldChangeHolders> = z13;

        r0.<com.android.internal.widget.RecyclerView: boolean mItemsChanged> = 0;

        r0.<com.android.internal.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 0;

        r31 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z14 = r31.<com.android.internal.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        r31.<com.android.internal.widget.RecyclerView$State: boolean mInPreLayout> = $z14;

        $r32 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r33 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        $i4 = virtualinvoke $r33.<com.android.internal.widget.RecyclerView$Adapter: int getItemCount()>();

        $r32.<com.android.internal.widget.RecyclerView$State: int mItemCount> = $i4;

        $r34 = r0.<com.android.internal.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])>($r34);

        $r35 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z15 = $r35.<com.android.internal.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z15 == 0 goto label06;

        $r19 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i5 = virtualinvoke $r19.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        i6 = 0;

     label03:
        if i6 >= i5 goto label06;

        $r20 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r21 = virtualinvoke $r20.<com.android.internal.widget.ChildHelper: android.view.View getChildAt(int)>(i6);

        r36 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r21);

        $z4 = virtualinvoke r36.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z4 != 0 goto label05;

        $z5 = virtualinvoke r36.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z5 == 0 goto label04;

        $r28 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        $z11 = virtualinvoke $r28.<com.android.internal.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z11 != 0 goto label04;

        goto label05;

     label04:
        $r22 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r23 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $i3 = staticinvoke <com.android.internal.widget.RecyclerView$ItemAnimator: int buildAdapterChangeFlagsForAnimations(com.android.internal.widget.RecyclerView$ViewHolder)>(r36);

        $r24 = virtualinvoke r36.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()>();

        r37 = virtualinvoke $r22.<com.android.internal.widget.RecyclerView$ItemAnimator: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(com.android.internal.widget.RecyclerView$State,com.android.internal.widget.RecyclerView$ViewHolder,int,java.util.List)>($r23, r36, $i3, $r24);

        $r25 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r25.<com.android.internal.widget.ViewInfoStore: void addToPreLayout(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r36, r37);

        $r26 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z6 = $r26.<com.android.internal.widget.RecyclerView$State: boolean mTrackOldChangeHolders>;

        if $z6 == 0 goto label05;

        $z7 = virtualinvoke r36.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isUpdated()>();

        if $z7 == 0 goto label05;

        $z8 = virtualinvoke r36.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z8 != 0 goto label05;

        $z9 = virtualinvoke r36.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z9 != 0 goto label05;

        $z10 = virtualinvoke r36.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z10 != 0 goto label05;

        l0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: long getChangedHolderKey(com.android.internal.widget.RecyclerView$ViewHolder)>(r36);

        $r27 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r27.<com.android.internal.widget.ViewInfoStore: void addToOldChangeHolders(long,com.android.internal.widget.RecyclerView$ViewHolder)>(l0, r36);

     label05:
        i6 = i6 + 1;

        goto label03;

     label06:
        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z1 = $r3.<com.android.internal.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        if $z1 == 0 goto label13;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void saveOldPositions()>();

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        z16 = $r5.<com.android.internal.widget.RecyclerView$State: boolean mStructureChanged>;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r6.<com.android.internal.widget.RecyclerView$State: boolean mStructureChanged> = 0;

        $r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r8 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r9.<com.android.internal.widget.RecyclerView$LayoutManager: void onLayoutChildren(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>($r8, $r7);

        $r10 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r10.<com.android.internal.widget.RecyclerView$State: boolean mStructureChanged> = z16;

        i7 = 0;

     label07:
        $r11 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $i2 = virtualinvoke $r11.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        if i7 >= $i2 goto label12;

        $r12 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r13 = virtualinvoke $r12.<com.android.internal.widget.ChildHelper: android.view.View getChildAt(int)>(i7);

        r38 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r13);

        $z2 = virtualinvoke r38.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z2 == 0 goto label08;

        goto label11;

     label08:
        $r14 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        $z3 = virtualinvoke $r14.<com.android.internal.widget.ViewInfoStore: boolean isInPreLayout(com.android.internal.widget.RecyclerView$ViewHolder)>(r38);

        if $z3 != 0 goto label11;

        i1 = staticinvoke <com.android.internal.widget.RecyclerView$ItemAnimator: int buildAdapterChangeFlagsForAnimations(com.android.internal.widget.RecyclerView$ViewHolder)>(r38);

        z17 = virtualinvoke r38.<com.android.internal.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)>(8192);

        i8 = i1;

        if z17 != 0 goto label09;

        i8 = i1 | 4096;

     label09:
        $r15 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r16 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r17 = virtualinvoke r38.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()>();

        r39 = virtualinvoke $r15.<com.android.internal.widget.RecyclerView$ItemAnimator: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(com.android.internal.widget.RecyclerView$State,com.android.internal.widget.RecyclerView$ViewHolder,int,java.util.List)>($r16, r38, i8, $r17);

        if z17 == 0 goto label10;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r38, r39);

        goto label11;

     label10:
        $r18 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r18.<com.android.internal.widget.ViewInfoStore: void addToAppearedInPreLayoutHolders(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r38, r39);

     label11:
        i7 = i7 + 1;

        goto label07;

     label12:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void clearOldPositions()>();

        goto label14;

     label13:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void clearOldPositions()>();

     label14:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r4.<com.android.internal.widget.RecyclerView$State: int mLayoutStep> = 2;

        return;
    }

    private void dispatchLayoutStep2()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$State r1, $r2, $r5, $r6, $r7, $r8, $r11, $r13;
        com.android.internal.widget.AdapterHelper $r3;
        com.android.internal.widget.RecyclerView$Adapter $r4;
        int $i0;
        com.android.internal.widget.RecyclerView$Recycler $r9;
        com.android.internal.widget.RecyclerView$LayoutManager $r10;
        boolean $z0, z1;
        com.android.internal.widget.RecyclerView$ItemAnimator $r12;

        r0 := @this: com.android.internal.widget.RecyclerView;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void eatRequestLayout()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView$State: void assertLayoutStep(int)>(6);

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r3.<com.android.internal.widget.AdapterHelper: void consumeUpdatesInOnePass()>();

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        $i0 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView$Adapter: int getItemCount()>();

        $r5.<com.android.internal.widget.RecyclerView$State: int mItemCount> = $i0;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r6.<com.android.internal.widget.RecyclerView$State: int mDeletedInvisibleItemCountSincePreviousLayout> = 0;

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r7.<com.android.internal.widget.RecyclerView$State: boolean mInPreLayout> = 0;

        $r10 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r8 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r10.<com.android.internal.widget.RecyclerView$LayoutManager: void onLayoutChildren(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>($r9, $r8);

        $r11 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r11.<com.android.internal.widget.RecyclerView$State: boolean mStructureChanged> = 0;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$SavedState mPendingSavedState> = null;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z0 = r1.<com.android.internal.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z0 == 0 goto label1;

        $r12 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r12 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r1.<com.android.internal.widget.RecyclerView$State: boolean mRunSimpleAnimations> = z1;

        $r13 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r13.<com.android.internal.widget.RecyclerView$State: int mLayoutStep> = 4;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

        return;
    }

    private void dispatchLayoutStep3()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewHolder r1, r2;
        long l0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        com.android.internal.widget.RecyclerView$State $r3, $r4, $r5, $r8, $r9, $r14, $r27, r40;
        com.android.internal.widget.RecyclerView$Recycler $r6, $r11, $r19, $r20;
        com.android.internal.widget.RecyclerView$LayoutManager $r7, $r10, $r13, $r15, $r17, $r18;
        int $i1, $i2, $i3, $i4, i5;
        java.util.ArrayList $r12, $r21;
        com.android.internal.widget.ViewInfoStore $r16, $r24, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        com.android.internal.widget.ChildHelper $r22, $r25;
        com.android.internal.widget.ViewInfoStore$ProcessCallback $r23;
        android.view.View $r26;
        com.android.internal.widget.RecyclerView$ItemAnimator $r28;
        com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo r37, r38, r39;
        int[] r41;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$State: void assertLayoutStep(int)>(4);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void eatRequestLayout()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r4.<com.android.internal.widget.RecyclerView$State: int mLayoutStep> = 1;

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z2 = $r5.<com.android.internal.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z2 == 0 goto label09;

        $r22 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $i4 = virtualinvoke $r22.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        i5 = $i4 - 1;

     label01:
        if i5 < 0 goto label08;

        $r25 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r26 = virtualinvoke $r25.<com.android.internal.widget.ChildHelper: android.view.View getChildAt(int)>(i5);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r26);

        $z5 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z5 == 0 goto label02;

        goto label07;

     label02:
        l0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: long getChangedHolderKey(com.android.internal.widget.RecyclerView$ViewHolder)>(r1);

        $r28 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r27 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        r37 = virtualinvoke $r28.<com.android.internal.widget.RecyclerView$ItemAnimator: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(com.android.internal.widget.RecyclerView$State,com.android.internal.widget.RecyclerView$ViewHolder)>($r27, r1);

        $r29 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        r2 = virtualinvoke $r29.<com.android.internal.widget.ViewInfoStore: com.android.internal.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long)>(l0);

        if r2 == null goto label06;

        $z6 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z6 != 0 goto label06;

        $r31 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        z0 = virtualinvoke $r31.<com.android.internal.widget.ViewInfoStore: boolean isDisappearing(com.android.internal.widget.RecyclerView$ViewHolder)>(r2);

        $r32 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        z1 = virtualinvoke $r32.<com.android.internal.widget.ViewInfoStore: boolean isDisappearing(com.android.internal.widget.RecyclerView$ViewHolder)>(r1);

        if z0 == 0 goto label03;

        if r2 != r1 goto label03;

        $r36 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r36.<com.android.internal.widget.ViewInfoStore: void addToPostLayout(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r37);

        goto label05;

     label03:
        $r33 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        r38 = virtualinvoke $r33.<com.android.internal.widget.ViewInfoStore: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(com.android.internal.widget.RecyclerView$ViewHolder)>(r2);

        $r34 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r34.<com.android.internal.widget.ViewInfoStore: void addToPostLayout(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r37);

        $r35 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        r39 = virtualinvoke $r35.<com.android.internal.widget.ViewInfoStore: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(com.android.internal.widget.RecyclerView$ViewHolder)>(r1);

        if r38 != null goto label04;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void handleMissingPreInfoForChangeError(long,com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ViewHolder)>(l0, r1, r2);

        goto label05;

     label04:
        specialinvoke r0.<com.android.internal.widget.RecyclerView: void animateChange(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)>(r2, r1, r38, r39, z0, z1);

     label05:
        goto label07;

     label06:
        $r30 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r30.<com.android.internal.widget.ViewInfoStore: void addToPostLayout(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r37);

     label07:
        i5 = i5 + -1;

        goto label01;

     label08:
        $r24 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        $r23 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback>;

        virtualinvoke $r24.<com.android.internal.widget.ViewInfoStore: void process(com.android.internal.widget.ViewInfoStore$ProcessCallback)>($r23);

     label09:
        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r7.<com.android.internal.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(com.android.internal.widget.RecyclerView$Recycler)>($r6);

        r40 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $i1 = r40.<com.android.internal.widget.RecyclerView$State: int mItemCount>;

        r40.<com.android.internal.widget.RecyclerView$State: int mPreviousLayoutItemCount> = $i1;

        r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 0;

        $r8 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r8.<com.android.internal.widget.RecyclerView$State: boolean mRunSimpleAnimations> = 0;

        $r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r9.<com.android.internal.widget.RecyclerView$State: boolean mRunPredictiveAnimations> = 0;

        $r10 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r10.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = 0;

        $r11 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r12 = $r11.<com.android.internal.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        if $r12 == null goto label10;

        $r20 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r21 = $r20.<com.android.internal.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        virtualinvoke $r21.<java.util.ArrayList: void clear()>();

     label10:
        $r13 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $z3 = $r13.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mPrefetchMaxObservedInInitialPrefetch>;

        if $z3 == 0 goto label11;

        $r17 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r17.<com.android.internal.widget.RecyclerView$LayoutManager: int mPrefetchMaxCountObserved> = 0;

        $r18 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r18.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mPrefetchMaxObservedInInitialPrefetch> = 0;

        $r19 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r19.<com.android.internal.widget.RecyclerView$Recycler: void updateViewCacheSize()>();

     label11:
        $r15 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r14 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r15.<com.android.internal.widget.RecyclerView$LayoutManager: void onLayoutCompleted(com.android.internal.widget.RecyclerView$State)>($r14);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

        $r16 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r16.<com.android.internal.widget.ViewInfoStore: void clear()>();

        r41 = r0.<com.android.internal.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        $i3 = r41[0];

        $i2 = r41[1];

        $z4 = specialinvoke r0.<com.android.internal.widget.RecyclerView: boolean didChildRangeChange(int,int)>($i3, $i2);

        if $z4 == 0 goto label12;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchOnScrolled(int,int)>(0, 0);

     label12:
        specialinvoke r0.<com.android.internal.widget.RecyclerView: void recoverFocusFromState()>();

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void resetFocusInfo()>();

        return;
    }

    private boolean dispatchOnItemTouch(android.view.MotionEvent)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;
        com.android.internal.widget.RecyclerView$OnItemTouchListener r5, r6;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener>;

        if r5 == null goto label4;

        if i1 != 0 goto label1;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = null;

        goto label4;

     label1:
        interfaceinvoke r5.<com.android.internal.widget.RecyclerView$OnItemTouchListener: void onTouchEvent(com.android.internal.widget.RecyclerView,android.view.MotionEvent)>(r0, r1);

        if i1 == 3 goto label2;

        if i1 != 1 goto label3;

     label2:
        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = null;

     label3:
        return 1;

     label4:
        if i1 == 0 goto label7;

        $r2 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label5:
        if i2 >= i0 goto label7;

        $r3 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r6 = (com.android.internal.widget.RecyclerView$OnItemTouchListener) $r4;

        $z0 = interfaceinvoke r6.<com.android.internal.widget.RecyclerView$OnItemTouchListener: boolean onInterceptTouchEvent(com.android.internal.widget.RecyclerView,android.view.MotionEvent)>(r0, r1);

        if $z0 == 0 goto label6;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = r6;

        return 1;

     label6:
        i2 = i2 + 1;

        goto label5;

     label7:
        return 0;
    }

    private boolean dispatchOnItemTouchIntercept(android.view.MotionEvent)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2;
        com.android.internal.widget.RecyclerView$OnItemTouchListener r2;
        java.util.ArrayList $r3, $r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if i0 == 3 goto label1;

        if i0 != 0 goto label2;

     label1:
        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = null;

     label2:
        $r5 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i2 = 0;

     label3:
        if i2 >= i1 goto label5;

        $r3 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.internal.widget.RecyclerView$OnItemTouchListener) $r4;

        $z0 = interfaceinvoke r2.<com.android.internal.widget.RecyclerView$OnItemTouchListener: boolean onInterceptTouchEvent(com.android.internal.widget.RecyclerView,android.view.MotionEvent)>(r0, r1);

        if $z0 == 0 goto label4;

        if i0 == 3 goto label4;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = r2;

        return 1;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return 0;
    }

    private void findMinMaxChildLayoutPositions(int[])
    {
        com.android.internal.widget.RecyclerView r0;
        int[] r1;
        int i0, i1, i2, i3, i4, i5, i6;
        com.android.internal.widget.RecyclerView$ViewHolder r2;
        com.android.internal.widget.ChildHelper $r3, $r4;
        android.view.View $r5;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: int[];

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r3.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        if i0 != 0 goto label1;

        r1[0] = -1;

        r1[1] = -1;

        return;

     label1:
        i2 = 2147483647;

        i3 = -2147483648;

        i4 = 0;

     label2:
        if i4 >= i0 goto label6;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<com.android.internal.widget.ChildHelper: android.view.View getChildAt(int)>(i4);

        r2 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        $z0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label3;

        i5 = i3;

        goto label5;

     label3:
        i1 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        i6 = i2;

        if i1 >= i2 goto label4;

        i6 = i1;

     label4:
        i2 = i6;

        i5 = i3;

        if i1 <= i3 goto label5;

        i5 = i1;

        i2 = i6;

     label5:
        i4 = i4 + 1;

        i3 = i5;

        goto label2;

     label6:
        r1[0] = i2;

        r1[1] = i3;

        return;
    }

    static com.android.internal.widget.RecyclerView findNestedRecyclerView(android.view.View)
    {
        int i0, i1;
        com.android.internal.widget.RecyclerView r0, $r2;
        boolean $z0, $z1;
        android.view.View $r1, r3;
        android.view.ViewGroup r4;

        r3 := @parameter0: android.view.View;

        $z0 = r3 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $z1 = r3 instanceof com.android.internal.widget.RecyclerView;

        if $z1 == 0 goto label2;

        $r2 = (com.android.internal.widget.RecyclerView) r3;

        return $r2;

     label2:
        r4 = (android.view.ViewGroup) r3;

        i0 = virtualinvoke r4.<android.view.ViewGroup: int getChildCount()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r1 = virtualinvoke r4.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        r0 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView findNestedRecyclerView(android.view.View)>($r1);

        if r0 == null goto label4;

        return r0;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return null;
    }

    private android.view.View findNextViewToFocus()
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, $i1, $i2, i3, i4, i5;
        com.android.internal.widget.RecyclerView$State $r1, $r2, $r7;
        android.view.View $r3, $r4, $r5, $r6;
        boolean $z0, $z1;
        com.android.internal.widget.RecyclerView$ViewHolder r8, r9;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $i1 = $r1.<com.android.internal.widget.RecyclerView$State: int mFocusedItemPosition>;

        if $i1 == -1 goto label01;

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        i3 = $r7.<com.android.internal.widget.RecyclerView$State: int mFocusedItemPosition>;

        goto label02;

     label01:
        i3 = 0;

     label02:
        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        i0 = virtualinvoke $r2.<com.android.internal.widget.RecyclerView$State: int getItemCount()>();

        i4 = i3;

     label03:
        if i4 >= i0 goto label06;

        r8 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)>(i4);

        if r8 != null goto label04;

        goto label06;

     label04:
        $r5 = r8.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z1 = virtualinvoke $r5.<android.view.View: boolean hasFocusable()>();

        if $z1 == 0 goto label05;

        $r6 = r8.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        return $r6;

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i3);

        i5 = $i2 - 1;

     label07:
        if i5 < 0 goto label10;

        r9 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)>(i5);

        if r9 != null goto label08;

        return null;

     label08:
        $r3 = r9.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean hasFocusable()>();

        if $z0 == 0 goto label09;

        $r4 = r9.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        return $r4;

     label09:
        i5 = i5 + -1;

        goto label07;

     label10:
        return null;
    }

    static com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)
    {
        android.view.View r0;
        android.view.ViewGroup$LayoutParams $r1;
        com.android.internal.widget.RecyclerView$LayoutParams $r2;
        com.android.internal.widget.RecyclerView$ViewHolder $r3;

        r0 := @parameter0: android.view.View;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r2 = (com.android.internal.widget.RecyclerView$LayoutParams) $r1;

        $r3 = $r2.<com.android.internal.widget.RecyclerView$LayoutParams: com.android.internal.widget.RecyclerView$ViewHolder mViewHolder>;

        return $r3;
    }

    static void getDecoratedBoundsWithMarginsInt(android.view.View, android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1, r3;
        com.android.internal.widget.RecyclerView$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.Rect;

        $r4 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.widget.RecyclerView$LayoutParams) $r4;

        r3 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke r0.<android.view.View: int getLeft()>();

        $i1 = r3.<android.graphics.Rect: int left>;

        $i3 = $i0 - $i1;

        $i2 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int leftMargin>;

        $i4 = $i3 - $i2;

        $i5 = virtualinvoke r0.<android.view.View: int getTop()>();

        $i6 = r3.<android.graphics.Rect: int top>;

        $i8 = $i5 - $i6;

        $i7 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int topMargin>;

        $i9 = $i8 - $i7;

        $i10 = virtualinvoke r0.<android.view.View: int getRight()>();

        $i11 = r3.<android.graphics.Rect: int right>;

        $i13 = $i10 + $i11;

        $i12 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int rightMargin>;

        $i14 = $i13 + $i12;

        $i15 = virtualinvoke r0.<android.view.View: int getBottom()>();

        $i16 = r3.<android.graphics.Rect: int bottom>;

        $i18 = $i15 + $i16;

        $i17 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $i19 = $i18 + $i17;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i4, $i9, $i14, $i19);

        return;
    }

    private int getDeepestFocusedViewWithId(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0, $z1, $z2;
        android.view.ViewGroup $r1;
        int $i0, i1;
        android.view.View r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r2 := @parameter0: android.view.View;

        i1 = virtualinvoke r2.<android.view.View: int getId()>();

     label1:
        $z0 = virtualinvoke r2.<android.view.View: boolean isFocused()>();

        if $z0 != 0 goto label3;

        $z1 = r2 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r2.<android.view.View: boolean hasFocus()>();

        if $z2 == 0 goto label3;

        $r1 = (android.view.ViewGroup) r2;

        r2 = virtualinvoke $r1.<android.view.ViewGroup: android.view.View getFocusedChild()>();

        $i0 = virtualinvoke r2.<android.view.View: int getId()>();

        if $i0 == -1 goto label2;

        i1 = virtualinvoke r2.<android.view.View: int getId()>();

     label2:
        goto label1;

     label3:
        return i1;
    }

    private java.lang.String getFullClassName(android.content.Context, java.lang.String)
    {
        com.android.internal.widget.RecyclerView r0;
        java.lang.String r1, $r6, $r10, $r12, $r15;
        char $c0;
        boolean $z0;
        java.lang.StringBuilder $r3, $r11;
        java.lang.Class $r4;
        java.lang.Package $r5;
        android.content.Context r16;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r16 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c0 != 46 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r16.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z0 == 0 goto label2;

        return r1;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = class "Lcom/android/internal/widget/RecyclerView;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    private float getScrollFactor()
    {
        com.android.internal.widget.RecyclerView r0;
        float $f0, $f1, $f2;
        byte $b0;
        android.util.TypedValue $r2;
        android.content.Context $r3, $r5;
        android.content.res.Resources$Theme $r4;
        boolean $z0;
        android.content.res.Resources $r6;
        android.util.DisplayMetrics $r7;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $f0 = r0.<com.android.internal.widget.RecyclerView: float mScrollFactor>;

        $b0 = $f0 cmpl 1.4E-45F;

        if $b0 != 0 goto label2;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        $r3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r4.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842829, $r2, 1);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f2 = virtualinvoke $r2.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r7);

        r0.<com.android.internal.widget.RecyclerView: float mScrollFactor> = $f2;

        goto label2;

     label1:
        return 0.0F;

     label2:
        $f1 = r0.<com.android.internal.widget.RecyclerView: float mScrollFactor>;

        return $f1;
    }

    private void handleMissingPreInfoForChangeError(long, com.android.internal.widget.RecyclerView$ViewHolder, com.android.internal.widget.RecyclerView$ViewHolder)
    {
        com.android.internal.widget.RecyclerView r0;
        long l0, $l3;
        com.android.internal.widget.RecyclerView$ViewHolder r1, r25, r26;
        int i1, i5;
        com.android.internal.widget.ChildHelper $r2, $r9;
        java.lang.StringBuilder $r3, $r11, $r18;
        java.lang.String $r8, $r17, $r24;
        android.view.View $r10;
        byte $b4;
        java.lang.IllegalStateException $r16, $r23;
        boolean $z0;
        com.android.internal.widget.RecyclerView$Adapter r27;

        r0 := @this: com.android.internal.widget.RecyclerView;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.internal.widget.RecyclerView$ViewHolder;

        r25 := @parameter2: com.android.internal.widget.RecyclerView$ViewHolder;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        i5 = 0;

     label1:
        if i5 >= i1 goto label5;

        $r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r10 = virtualinvoke $r9.<com.android.internal.widget.ChildHelper: android.view.View getChildAt(int)>(i5);

        r26 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r10);

        if r26 != r1 goto label2;

        goto label4;

     label2:
        $l3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: long getChangedHolderKey(com.android.internal.widget.RecyclerView$ViewHolder)>(r26);

        $b4 = $l3 cmp l0;

        if $b4 != 0 goto label4;

        r27 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if r27 == null goto label3;

        $z0 = virtualinvoke r27.<com.android.internal.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 == 0 goto label3;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Two different ViewHolders have the same stable ID. Stable IDs in your adapter MUST BE unique and SHOULD NOT change.\n ViewHolder 1:");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \n View Holder 2:");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = new java.lang.IllegalStateException;

        $r24 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label3:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Two different ViewHolders have the same change ID. This might happen due to inconsistent Adapter update events or if the LayoutManager lays out the same View multiple times.\n ViewHolder 1:");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \n View Holder 2:");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = new java.lang.IllegalStateException;

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem while matching changed view holders with the newones. The pre-layout information for the change holder ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be found but it is necessary for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r8);

        return;
    }

    private boolean hasUpdatedView()
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.ChildHelper $r2, $r3;
        android.view.View $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r4 = virtualinvoke $r3.<com.android.internal.widget.ChildHelper: android.view.View getChildAt(int)>(i1);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r4);

        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $z1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isUpdated()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    private void initChildrenHelper()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.ChildHelper $r1;
        com.android.internal.widget.RecyclerView$5 $r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = new com.android.internal.widget.ChildHelper;

        $r2 = new com.android.internal.widget.RecyclerView$5;

        specialinvoke $r2.<com.android.internal.widget.RecyclerView$5: void <init>(com.android.internal.widget.RecyclerView)>(r0);

        specialinvoke $r1.<com.android.internal.widget.ChildHelper: void <init>(com.android.internal.widget.ChildHelper$Callback)>($r2);

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper> = $r1;

        return;
    }

    private boolean isPreferredNextFocus(android.view.View, android.view.View, int)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1, r2;
        int i0, $i1;
        com.android.internal.widget.RecyclerView$LayoutManager $r3;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6;
        byte b2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        z5 = 0;

        if r2 == null goto label12;

        if r2 != r0 goto label01;

        goto label12;

     label01:
        if r1 != null goto label02;

        return 1;

     label02:
        if i0 == 2 goto label04;

        if i0 != 1 goto label03;

        goto label04;

     label03:
        $z4 = specialinvoke r0.<com.android.internal.widget.RecyclerView: boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)>(r1, r2, i0);

        return $z4;

     label04:
        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $i1 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: int getLayoutDirection()>();

        if $i1 != 1 goto label05;

        z6 = 1;

        goto label06;

     label05:
        z6 = 0;

     label06:
        if i0 != 2 goto label07;

        z5 = 1;

     label07:
        $z0 = z5 ^ z6;

        if $z0 == 0 goto label08;

        b2 = 66;

        goto label09;

     label08:
        b2 = 17;

     label09:
        $z1 = specialinvoke r0.<com.android.internal.widget.RecyclerView: boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)>(r1, r2, b2);

        if $z1 == 0 goto label10;

        return 1;

     label10:
        if i0 != 2 goto label11;

        $z3 = specialinvoke r0.<com.android.internal.widget.RecyclerView: boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)>(r1, r2, 130);

        return $z3;

     label11:
        $z2 = specialinvoke r0.<com.android.internal.widget.RecyclerView: boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)>(r1, r2, 33);

        return $z2;

     label12:
        return 0;
    }

    private boolean isPreferredNextFocusAbsolute(android.view.View, android.view.View, int)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1, r35;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        android.graphics.Rect r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r29, $r30, $r31, $r32, $r33, $r34;
        java.lang.StringBuilder $r24;
        java.lang.IllegalArgumentException $r27;
        java.lang.String $r28;
        boolean z4, z5, z6, z7;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r35 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r2 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        i1 = virtualinvoke r35.<android.view.View: int getWidth()>();

        i2 = virtualinvoke r35.<android.view.View: int getHeight()>();

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, i1, i2);

        $r3 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i3 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i4 = virtualinvoke r1.<android.view.View: int getHeight()>();

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i3, $i4);

        $r4 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r35, $r4);

        $r5 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, $r5);

        if i0 == 17 goto label10;

        if i0 == 33 goto label07;

        if i0 == 66 goto label04;

        if i0 != 130 goto label03;

        $r29 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i24 = $r29.<android.graphics.Rect: int top>;

        $r30 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i23 = $r30.<android.graphics.Rect: int top>;

        if $i24 < $i23 goto label01;

        z4 = 0;

        $r33 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i28 = $r33.<android.graphics.Rect: int bottom>;

        $r34 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i27 = $r34.<android.graphics.Rect: int top>;

        if $i28 > $i27 goto label02;

     label01:
        z4 = 0;

        $r31 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i26 = $r31.<android.graphics.Rect: int bottom>;

        $r32 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i25 = $r32.<android.graphics.Rect: int bottom>;

        if $i26 >= $i25 goto label02;

        z4 = 1;

     label02:
        return z4;

     label03:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("direction must be absolute. received:");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label04:
        $r18 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i18 = $r18.<android.graphics.Rect: int left>;

        $r19 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i17 = $r19.<android.graphics.Rect: int left>;

        if $i18 < $i17 goto label05;

        z5 = 0;

        $r22 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i22 = $r22.<android.graphics.Rect: int right>;

        $r23 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i21 = $r23.<android.graphics.Rect: int left>;

        if $i22 > $i21 goto label06;

     label05:
        z5 = 0;

        $r20 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i20 = $r20.<android.graphics.Rect: int right>;

        $r21 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i19 = $r21.<android.graphics.Rect: int right>;

        if $i20 >= $i19 goto label06;

        z5 = 1;

     label06:
        return z5;

     label07:
        $r12 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i12 = $r12.<android.graphics.Rect: int bottom>;

        $r13 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i11 = $r13.<android.graphics.Rect: int bottom>;

        if $i12 > $i11 goto label08;

        z6 = 0;

        $r16 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i16 = $r16.<android.graphics.Rect: int top>;

        $r17 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i15 = $r17.<android.graphics.Rect: int bottom>;

        if $i16 < $i15 goto label09;

     label08:
        z6 = 0;

        $r14 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i14 = $r14.<android.graphics.Rect: int top>;

        $r15 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i13 = $r15.<android.graphics.Rect: int top>;

        if $i14 <= $i13 goto label09;

        z6 = 1;

     label09:
        return z6;

     label10:
        $r6 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i6 = $r6.<android.graphics.Rect: int right>;

        $r7 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i5 = $r7.<android.graphics.Rect: int right>;

        if $i6 > $i5 goto label11;

        z7 = 0;

        $r10 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i10 = $r10.<android.graphics.Rect: int left>;

        $r11 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i9 = $r11.<android.graphics.Rect: int right>;

        if $i10 < $i9 goto label12;

     label11:
        z7 = 0;

        $r8 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i8 = $r8.<android.graphics.Rect: int left>;

        $r9 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i7 = $r9.<android.graphics.Rect: int left>;

        if $i8 <= $i7 goto label12;

        z7 = 1;

     label12:
        return z7;
    }

    private void onPointerUp(android.view.MotionEvent)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i3, i4, i6;
        float $f0, $f1, $f2, $f3;
        byte b5;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        i4 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i4);

        $i2 = r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId>;

        if $i1 != $i2 goto label3;

        if i4 != 0 goto label1;

        b5 = 1;

        goto label2;

     label1:
        b5 = 0;

     label2:
        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(b5);

        r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId> = $i3;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(b5);

        $f1 = $f0 + 0.5F;

        i0 = (int) $f1;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchX> = i0;

        r0.<com.android.internal.widget.RecyclerView: int mInitialTouchX> = i0;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(b5);

        $f3 = $f2 + 0.5F;

        i6 = (int) $f3;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchY> = i6;

        r0.<com.android.internal.widget.RecyclerView: int mInitialTouchY> = i6;

     label3:
        return;
    }

    private boolean predictiveItemAnimationsEnabled()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ItemAnimator $r1;
        com.android.internal.widget.RecyclerView$LayoutManager $r2;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<com.android.internal.widget.RecyclerView$LayoutManager: boolean supportsPredictiveItemAnimations()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private void processAdapterUpdatesAndSetAnimationFlags()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, $z11, $z12, z13, $z14, z15;
        com.android.internal.widget.AdapterHelper $r1, $r5, $r6;
        com.android.internal.widget.RecyclerView$ItemAnimator $r2;
        com.android.internal.widget.RecyclerView$Adapter $r3;
        com.android.internal.widget.RecyclerView$LayoutManager $r4, $r7;
        com.android.internal.widget.RecyclerView$State r8, r9;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z1 = r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z1 == 0 goto label01;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r6.<com.android.internal.widget.AdapterHelper: void reset()>();

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r7.<com.android.internal.widget.RecyclerView$LayoutManager: void onItemsChanged(com.android.internal.widget.RecyclerView)>(r0);

     label01:
        $z2 = specialinvoke r0.<com.android.internal.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()>();

        if $z2 == 0 goto label02;

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r5.<com.android.internal.widget.AdapterHelper: void preProcess()>();

        goto label03;

     label02:
        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r1.<com.android.internal.widget.AdapterHelper: void consumeUpdatesInOnePass()>();

     label03:
        z9 = r0.<com.android.internal.widget.RecyclerView: boolean mItemsAddedOrRemoved>;

        if z9 != 0 goto label05;

        $z8 = r0.<com.android.internal.widget.RecyclerView: boolean mItemsChanged>;

        if $z8 == 0 goto label04;

        goto label05;

     label04:
        z10 = 0;

        goto label06;

     label05:
        z10 = 1;

     label06:
        r8 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z11 = r0.<com.android.internal.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z11 == 0 goto label09;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r2 == null goto label09;

        $z5 = r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z5 != 0 goto label07;

        if z10 != 0 goto label07;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $z7 = $r4.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations>;

        if $z7 == 0 goto label09;

     label07:
        $z12 = r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z12 == 0 goto label08;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        $z6 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z6 == 0 goto label09;

     label08:
        z13 = 1;

        goto label10;

     label09:
        z13 = 0;

     label10:
        r8.<com.android.internal.widget.RecyclerView$State: boolean mRunSimpleAnimations> = z13;

        r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z14 = r9.<com.android.internal.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z14 == 0 goto label11;

        if z10 == 0 goto label11;

        $z3 = r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z3 != 0 goto label11;

        $z4 = specialinvoke r0.<com.android.internal.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()>();

        if $z4 == 0 goto label11;

        z15 = 1;

        goto label12;

     label11:
        z15 = 0;

     label12:
        r9.<com.android.internal.widget.RecyclerView$State: boolean mRunPredictiveAnimations> = z15;

        return;
    }

    private void pullGlows(float, float, float, float)
    {
        com.android.internal.widget.RecyclerView r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        byte $b0, $b1, $b2, $b3, $b4, $b13;
        android.widget.EdgeEffect $r1, $r2, $r3, $r4;
        int $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        z0 = 0;

        $b0 = f1 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void ensureLeftGlow()>();

        $r4 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $f18 = neg f1;

        $i11 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getWidth()>();

        $f19 = (float) $i11;

        $f20 = $f18 / $f19;

        $i12 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getHeight()>();

        $f21 = (float) $i12;

        $f22 = f2 / $f21;

        $f23 = 1.0F - $f22;

        virtualinvoke $r4.<android.widget.EdgeEffect: void onPull(float,float)>($f20, $f23);

        z0 = 1;

        goto label2;

     label1:
        $b1 = f1 cmpl 0.0F;

        if $b1 <= 0 goto label2;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void ensureRightGlow()>();

        $r3 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $i9 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getWidth()>();

        $f14 = (float) $i9;

        $f15 = f1 / $f14;

        $i10 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getHeight()>();

        $f16 = (float) $i10;

        $f17 = f2 / $f16;

        virtualinvoke $r3.<android.widget.EdgeEffect: void onPull(float,float)>($f15, $f17);

        z0 = 1;

     label2:
        $b13 = f3 cmpg 0.0F;

        if $b13 >= 0 goto label3;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void ensureTopGlow()>();

        $r2 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $f9 = neg f3;

        $i7 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getHeight()>();

        $f10 = (float) $i7;

        $f11 = $f9 / $f10;

        $i8 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getWidth()>();

        $f12 = (float) $i8;

        $f13 = f0 / $f12;

        virtualinvoke $r2.<android.widget.EdgeEffect: void onPull(float,float)>($f11, $f13);

        z0 = 1;

        goto label4;

     label3:
        $b2 = f3 cmpl 0.0F;

        if $b2 <= 0 goto label4;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void ensureBottomGlow()>();

        $r1 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $i5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getHeight()>();

        $f4 = (float) $i5;

        $f5 = f3 / $f4;

        $i6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getWidth()>();

        $f6 = (float) $i6;

        $f7 = f0 / $f6;

        $f8 = 1.0F - $f7;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onPull(float,float)>($f5, $f8);

        z0 = 1;

     label4:
        if z0 != 0 goto label5;

        $b3 = f1 cmpl 0.0F;

        if $b3 != 0 goto label5;

        $b4 = f3 cmpl 0.0F;

        if $b4 == 0 goto label6;

     label5:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void postInvalidateOnAnimation()>();

     label6:
        return;
    }

    private void recoverFocusFromState()
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1, $r5, $r7, r13, r16, r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        com.android.internal.widget.RecyclerView$Adapter $r2, $r8;
        int $i0, $i1, $i2, $i5, $i7, $i10;
        com.android.internal.widget.RecyclerView$State $r3, $r4, $r9, $r15;
        long $l3, $l6, $l8;
        byte $b4, $b9;
        com.android.internal.widget.ChildHelper $r6, $r10, $r12, $r17;
        android.view.ViewParent $r11;
        com.android.internal.widget.RecyclerView$ViewHolder r14;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        if $z0 == 0 goto label11;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label11;

        $z1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean hasFocus()>();

        if $z1 == 0 goto label11;

        $i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getDescendantFocusability()>();

        if $i0 == 393216 goto label11;

        $i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getDescendantFocusability()>();

        if $i1 != 131072 goto label01;

        $z10 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isFocused()>();

        if $z10 == 0 goto label01;

        goto label11;

     label01:
        $z2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isFocused()>();

        if $z2 != 0 goto label04;

        r13 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.view.View getFocusedChild()>();

        $z7 = <com.android.internal.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD>;

        if $z7 == 0 goto label03;

        $r11 = virtualinvoke r13.<android.view.View: android.view.ViewParent getParent()>();

        if $r11 == null goto label02;

        $z9 = virtualinvoke r13.<android.view.View: boolean hasFocus()>();

        if $z9 != 0 goto label03;

     label02:
        $r12 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $i7 = virtualinvoke $r12.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        if $i7 != 0 goto label04;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean requestFocus()>();

        return;

     label03:
        $r10 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $z8 = virtualinvoke $r10.<com.android.internal.widget.ChildHelper: boolean isHidden(android.view.View)>(r13);

        if $z8 != 0 goto label04;

        return;

     label04:
        r14 = null;

        $r15 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $l8 = $r15.<com.android.internal.widget.RecyclerView$State: long mFocusedItemId>;

        $b9 = $l8 cmp -1L;

        if $b9 == 0 goto label05;

        r14 = null;

        $r8 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        $z6 = virtualinvoke $r8.<com.android.internal.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z6 == 0 goto label05;

        $r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $l6 = $r9.<com.android.internal.widget.RecyclerView$State: long mFocusedItemId>;

        r14 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)>($l6);

     label05:
        if r14 == null goto label07;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r5 = r14.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z4 = virtualinvoke $r6.<com.android.internal.widget.ChildHelper: boolean isHidden(android.view.View)>($r5);

        if $z4 != 0 goto label07;

        $r7 = r14.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z5 = virtualinvoke $r7.<android.view.View: boolean hasFocusable()>();

        if $z5 != 0 goto label06;

        goto label07;

     label06:
        r16 = r14.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        goto label08;

     label07:
        r16 = null;

        $r17 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $i10 = virtualinvoke $r17.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        if $i10 <= 0 goto label08;

        r16 = specialinvoke r0.<com.android.internal.widget.RecyclerView: android.view.View findNextViewToFocus()>();

     label08:
        if r16 == null goto label10;

        r18 = r16;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $i2 = $r3.<com.android.internal.widget.RecyclerView$State: int mFocusedSubChildId>;

        $l3 = (long) $i2;

        $b4 = $l3 cmp -1L;

        if $b4 == 0 goto label09;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $i5 = $r4.<com.android.internal.widget.RecyclerView$State: int mFocusedSubChildId>;

        r1 = virtualinvoke r16.<android.view.View: android.view.View findViewById(int)>($i5);

        r18 = r16;

        if r1 == null goto label09;

        r18 = r16;

        $z3 = virtualinvoke r1.<android.view.View: boolean isFocusable()>();

        if $z3 == 0 goto label09;

        r18 = r1;

     label09:
        virtualinvoke r18.<android.view.View: boolean requestFocus()>();

     label10:
        return;

     label11:
        return;
    }

    private void releaseGlows()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0;
        android.widget.EdgeEffect r1, r2, r3, r4;

        r0 := @this: com.android.internal.widget.RecyclerView;

        z0 = 0;

        r1 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.EdgeEffect: void onRelease()>();

        z0 = 1;

     label1:
        r2 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.widget.EdgeEffect: void onRelease()>();

        z0 = 1;

     label2:
        r3 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if r3 == null goto label3;

        virtualinvoke r3.<android.widget.EdgeEffect: void onRelease()>();

        z0 = 1;

     label3:
        r4 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if r4 == null goto label4;

        virtualinvoke r4.<android.widget.EdgeEffect: void onRelease()>();

        z0 = 1;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void postInvalidateOnAnimation()>();

     label5:
        return;
    }

    private void resetFocusInfo()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$State $r1, $r2, $r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r1.<com.android.internal.widget.RecyclerView$State: long mFocusedItemId> = -1L;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r2.<com.android.internal.widget.RecyclerView$State: int mFocusedItemPosition> = -1;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r3.<com.android.internal.widget.RecyclerView$State: int mFocusedSubChildId> = -1;

        return;
    }

    private void resetTouch()
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.VelocityTracker r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.VelocityTracker: void clear()>();

     label1:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void stopNestedScroll()>();

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void releaseGlows()>();

        return;
    }

    private void saveFocusInfo()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.internal.widget.RecyclerView$Adapter $r1, $r2;
        android.view.View r3, $r8;
        com.android.internal.widget.RecyclerView$ViewHolder r4;
        com.android.internal.widget.RecyclerView$State r5, r6, $r7;
        long l0;
        int i1, $i2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r3 = null;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        if $z0 == 0 goto label01;

        r3 = null;

        $z4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean hasFocus()>();

        if $z4 == 0 goto label01;

        r3 = null;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label01;

        r3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.view.View getFocusedChild()>();

     label01:
        if r3 != null goto label02;

        r4 = null;

        goto label03;

     label02:
        r4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)>(r3);

     label03:
        if r4 != null goto label04;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void resetFocusInfo()>();

        goto label10;

     label04:
        r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        $z1 = virtualinvoke $r1.<com.android.internal.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z1 == 0 goto label05;

        l0 = virtualinvoke r4.<com.android.internal.widget.RecyclerView$ViewHolder: long getItemId()>();

        goto label06;

     label05:
        l0 = -1L;

     label06:
        r5.<com.android.internal.widget.RecyclerView$State: long mFocusedItemId> = l0;

        r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z2 = r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z2 == 0 goto label07;

        i1 = -1;

        goto label09;

     label07:
        $z3 = virtualinvoke r4.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z3 == 0 goto label08;

        i1 = r4.<com.android.internal.widget.RecyclerView$ViewHolder: int mOldPosition>;

        goto label09;

     label08:
        i1 = virtualinvoke r4.<com.android.internal.widget.RecyclerView$ViewHolder: int getAdapterPosition()>();

     label09:
        r6.<com.android.internal.widget.RecyclerView$State: int mFocusedItemPosition> = i1;

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r8 = r4.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i2 = specialinvoke r0.<com.android.internal.widget.RecyclerView: int getDeepestFocusedViewWithId(android.view.View)>($r8);

        $r7.<com.android.internal.widget.RecyclerView$State: int mFocusedSubChildId> = $i2;

     label10:
        return;
    }

    private void setAdapterInternal(com.android.internal.widget.RecyclerView$Adapter, boolean, boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0, z1;
        com.android.internal.widget.RecyclerView$Adapter $r1, $r4, $r7, r8, r9, r11;
        com.android.internal.widget.RecyclerView$Recycler $r2;
        com.android.internal.widget.RecyclerView$State $r3;
        com.android.internal.widget.RecyclerView$RecyclerViewDataObserver $r5, $r6;
        com.android.internal.widget.AdapterHelper $r10;
        com.android.internal.widget.RecyclerView$LayoutManager r12;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r8 := @parameter0: com.android.internal.widget.RecyclerView$Adapter;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if r9 == null goto label1;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$RecyclerViewDataObserver mObserver>;

        virtualinvoke r9.<com.android.internal.widget.RecyclerView$Adapter: void unregisterAdapterDataObserver(com.android.internal.widget.RecyclerView$AdapterDataObserver)>($r6);

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r7.<com.android.internal.widget.RecyclerView$Adapter: void onDetachedFromRecyclerView(com.android.internal.widget.RecyclerView)>(r0);

     label1:
        if z0 == 0 goto label2;

        if z1 == 0 goto label3;

     label2:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void removeAndRecycleViews()>();

     label3:
        $r10 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r10.<com.android.internal.widget.AdapterHelper: void reset()>();

        r11 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter> = r8;

        if r8 == null goto label4;

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$RecyclerViewDataObserver mObserver>;

        virtualinvoke r8.<com.android.internal.widget.RecyclerView$Adapter: void registerAdapterDataObserver(com.android.internal.widget.RecyclerView$AdapterDataObserver)>($r5);

        virtualinvoke r8.<com.android.internal.widget.RecyclerView$Adapter: void onAttachedToRecyclerView(com.android.internal.widget.RecyclerView)>(r0);

     label4:
        r12 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r12 == null goto label5;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke r12.<com.android.internal.widget.RecyclerView$LayoutManager: void onAdapterChanged(com.android.internal.widget.RecyclerView$Adapter,com.android.internal.widget.RecyclerView$Adapter)>(r11, $r4);

     label5:
        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView$Recycler: void onAdapterChanged(com.android.internal.widget.RecyclerView$Adapter,com.android.internal.widget.RecyclerView$Adapter,boolean)>(r11, $r1, z0);

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r3.<com.android.internal.widget.RecyclerView$State: boolean mStructureChanged> = 1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void markKnownViewsInvalid()>();

        return;
    }

    private void stopScrollersInternal()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager r1;
        com.android.internal.widget.RecyclerView$ViewFlinger $r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView$ViewFlinger: void stop()>();

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: void stopSmoothScroller()>();

     label1:
        return;
    }

    void absorbGlows(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, $i2, $i3;
        android.widget.EdgeEffect $r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void ensureLeftGlow()>();

        $r4 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $i3 = neg i0;

        virtualinvoke $r4.<android.widget.EdgeEffect: void onAbsorb(int)>($i3);

        goto label2;

     label1:
        if i0 <= 0 goto label2;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void ensureRightGlow()>();

        $r3 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        virtualinvoke $r3.<android.widget.EdgeEffect: void onAbsorb(int)>(i0);

     label2:
        if i1 >= 0 goto label3;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void ensureTopGlow()>();

        $r2 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $i2 = neg i1;

        virtualinvoke $r2.<android.widget.EdgeEffect: void onAbsorb(int)>($i2);

        goto label4;

     label3:
        if i1 <= 0 goto label4;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void ensureBottomGlow()>();

        $r1 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onAbsorb(int)>(i1);

     label4:
        if i0 != 0 goto label5;

        if i1 == 0 goto label6;

     label5:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void postInvalidateOnAnimation()>();

     label6:
        return;
    }

    public void addFocusables(java.util.ArrayList, int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        java.util.ArrayList r1;
        int i0, i1;
        com.android.internal.widget.RecyclerView$LayoutManager r2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$LayoutManager: boolean onAddFocusables(com.android.internal.widget.RecyclerView,java.util.ArrayList,int,int)>(r0, r1, i0, i1);

        if $z0 != 0 goto label2;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int,int)>(r1, i0, i1);

     label2:
        return;
    }

    public void addItemDecoration(com.android.internal.widget.RecyclerView$ItemDecoration)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ItemDecoration r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ItemDecoration;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void addItemDecoration(com.android.internal.widget.RecyclerView$ItemDecoration,int)>(r1, -1);

        return;
    }

    public void addItemDecoration(com.android.internal.widget.RecyclerView$ItemDecoration, int)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ItemDecoration r1;
        int i0;
        com.android.internal.widget.RecyclerView$LayoutManager r2;
        java.util.ArrayList $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ItemDecoration;

        i0 := @parameter1: int;

        r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot add item decoration during a scroll  or layout");

     label1:
        $r3 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setWillNotDraw(boolean)>(0);

     label2:
        if i0 >= 0 goto label3;

        $r5 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        goto label4;

     label3:
        $r4 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r4.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r1);

     label4:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void addOnChildAttachStateChangeListener(com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener r1;
        java.util.List $r2, $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener;

        $r2 = r0.<com.android.internal.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: java.util.List mOnChildAttachStateListeners> = $r4;

     label1:
        $r3 = r0.<com.android.internal.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addOnItemTouchListener(com.android.internal.widget.RecyclerView$OnItemTouchListener)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$OnItemTouchListener r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$OnItemTouchListener;

        $r2 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addOnScrollListener(com.android.internal.widget.RecyclerView$OnScrollListener)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$OnScrollListener r1;
        java.util.List $r2, $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$OnScrollListener;

        $r2 = r0.<com.android.internal.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: java.util.List mScrollListeners> = $r4;

     label1:
        $r3 = r0.<com.android.internal.widget.RecyclerView: java.util.List mScrollListeners>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    void animateAppearance(com.android.internal.widget.RecyclerView$ViewHolder, com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo, com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo r2, r3;
        com.android.internal.widget.RecyclerView$ItemAnimator $r4;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        r3 := @parameter2: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z0 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView$ItemAnimator: boolean animateAppearance(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2, r3);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void postAnimationRunner()>();

     label1:
        return;
    }

    void animateDisappearance(com.android.internal.widget.RecyclerView$ViewHolder, com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo, com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo r2, r3;
        com.android.internal.widget.RecyclerView$ItemAnimator $r4;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        r3 := @parameter2: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void addAnimatingView(com.android.internal.widget.RecyclerView$ViewHolder)>(r1);

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z0 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView$ItemAnimator: boolean animateDisappearance(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2, r3);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void postAnimationRunner()>();

     label1:
        return;
    }

    void assertInLayoutOrScroll(java.lang.String)
    {
        com.android.internal.widget.RecyclerView r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalStateException $r2, $r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 != 0 goto label2;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call this method unless RecyclerView is computing a layout or scrolling");

        throw $r3;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r1);

        throw $r2;

     label2:
        return;
    }

    void assertNotInLayoutOrScroll(java.lang.String)
    {
        com.android.internal.widget.RecyclerView r0;
        java.lang.String r1;
        boolean $z0;
        int $i0;
        java.lang.IllegalStateException $r2, $r3, $r4;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label2;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call this method while RecyclerView is computing a layout or scrolling");

        throw $r4;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r1);

        throw $r3;

     label2:
        $i0 = r0.<com.android.internal.widget.RecyclerView: int mDispatchScrollCounter>;

        if $i0 <= 0 goto label3;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("");

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RecyclerView", "Cannot call this method in a scroll callback. Scroll callbacks might be run during a measure & layout pass where you cannot change the RecyclerView data. Any method call that might change the structure of the RecyclerView or the adapter contents should be postponed to the next frame.", $r2);

     label3:
        return;
    }

    boolean canReuseUpdatedViewHolder(com.android.internal.widget.RecyclerView$ViewHolder)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.RecyclerView$ItemAnimator r2;
        java.util.List $r3;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if r2 == null goto label2;

        $r3 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()>();

        $z0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ItemAnimator: boolean canReuseUpdatedViewHolder(com.android.internal.widget.RecyclerView$ViewHolder,java.util.List)>(r1, $r3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, z2;
        com.android.internal.widget.RecyclerView$LayoutParams $r2;
        com.android.internal.widget.RecyclerView$LayoutManager $r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof com.android.internal.widget.RecyclerView$LayoutParams;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = (com.android.internal.widget.RecyclerView$LayoutParams) r1;

        $z1 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: boolean checkLayoutParams(com.android.internal.widget.RecyclerView$LayoutParams)>($r2);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    void clearOldPositions()
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.ChildHelper $r2, $r4;
        com.android.internal.widget.RecyclerView$Recycler $r3;
        android.view.View $r5;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void clearOldPosition()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$Recycler: void clearOldPositions()>();

        return;
    }

    public void clearOnChildAttachStateChangeListeners()
    {
        com.android.internal.widget.RecyclerView r0;
        java.util.List r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if r1 == null goto label1;

        interfaceinvoke r1.<java.util.List: void clear()>();

     label1:
        return;
    }

    public void clearOnScrollListeners()
    {
        com.android.internal.widget.RecyclerView r0;
        java.util.List r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: java.util.List mScrollListeners>;

        if r1 == null goto label1;

        interfaceinvoke r1.<java.util.List: void clear()>();

     label1:
        return;
    }

    public int computeHorizontalScrollExtent()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager r1, $r3;
        boolean $z0;
        com.android.internal.widget.RecyclerView$State $r2;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        i0 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        i0 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: int computeHorizontalScrollExtent(com.android.internal.widget.RecyclerView$State)>($r2);

     label2:
        return i0;
    }

    public int computeHorizontalScrollOffset()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager r1, $r3;
        boolean $z0;
        com.android.internal.widget.RecyclerView$State $r2;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        i0 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        i0 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: int computeHorizontalScrollOffset(com.android.internal.widget.RecyclerView$State)>($r2);

     label2:
        return i0;
    }

    public int computeHorizontalScrollRange()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager r1, $r3;
        boolean $z0;
        com.android.internal.widget.RecyclerView$State $r2;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        i0 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        i0 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: int computeHorizontalScrollRange(com.android.internal.widget.RecyclerView$State)>($r2);

     label2:
        return i0;
    }

    public int computeVerticalScrollExtent()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager r1, $r3;
        boolean $z0;
        com.android.internal.widget.RecyclerView$State $r2;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        i0 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        i0 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: int computeVerticalScrollExtent(com.android.internal.widget.RecyclerView$State)>($r2);

     label2:
        return i0;
    }

    public int computeVerticalScrollOffset()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager r1, $r3;
        boolean $z0;
        com.android.internal.widget.RecyclerView$State $r2;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        i0 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        i0 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: int computeVerticalScrollOffset(com.android.internal.widget.RecyclerView$State)>($r2);

     label2:
        return i0;
    }

    public int computeVerticalScrollRange()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager r1, $r3;
        boolean $z0;
        com.android.internal.widget.RecyclerView$State $r2;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        i0 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        i0 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: int computeVerticalScrollRange(com.android.internal.widget.RecyclerView$State)>($r2);

     label2:
        return i0;
    }

    void considerReleasingGlowsOnScroll(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3, z5, z6, z7, z8;
        android.widget.EdgeEffect $r1, $r2, $r3, $r4, r5, r6, r7, r8;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r5 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        z5 = 0;

        if r5 == null goto label1;

        z5 = 0;

        $z3 = virtualinvoke r5.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z3 != 0 goto label1;

        z5 = 0;

        if i1 <= 0 goto label1;

        $r4 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        virtualinvoke $r4.<android.widget.EdgeEffect: void onRelease()>();

        z5 = 1;

     label1:
        r6 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        z6 = z5;

        if r6 == null goto label2;

        z6 = z5;

        $z2 = virtualinvoke r6.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z2 != 0 goto label2;

        z6 = z5;

        if i1 >= 0 goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        virtualinvoke $r3.<android.widget.EdgeEffect: void onRelease()>();

        z6 = 1;

     label2:
        r7 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        z7 = z6;

        if r7 == null goto label3;

        z7 = z6;

        $z1 = virtualinvoke r7.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z1 != 0 goto label3;

        z7 = z6;

        if i0 <= 0 goto label3;

        $r2 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        virtualinvoke $r2.<android.widget.EdgeEffect: void onRelease()>();

        z7 = 1;

     label3:
        r8 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        z8 = z7;

        if r8 == null goto label4;

        z8 = z7;

        $z0 = virtualinvoke r8.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 != 0 goto label4;

        z8 = z7;

        if i0 >= 0 goto label4;

        $r1 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onRelease()>();

        z8 = 1;

     label4:
        if z8 == 0 goto label5;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void postInvalidateOnAnimation()>();

     label5:
        return;
    }

    void consumePendingUpdateOperations()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.internal.widget.AdapterHelper $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label7;

        $z1 = r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z1 == 0 goto label1;

        goto label7;

     label1:
        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        $z2 = virtualinvoke $r1.<com.android.internal.widget.AdapterHelper: boolean hasPendingUpdates()>();

        if $z2 != 0 goto label2;

        return;

     label2:
        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        $z3 = virtualinvoke $r2.<com.android.internal.widget.AdapterHelper: boolean hasAnyUpdateTypes(int)>(4);

        if $z3 == 0 goto label5;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        $z5 = virtualinvoke $r4.<com.android.internal.widget.AdapterHelper: boolean hasAnyUpdateTypes(int)>(11);

        if $z5 != 0 goto label5;

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>("RV PartialInvalidate");

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void eatRequestLayout()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r5.<com.android.internal.widget.AdapterHelper: void preProcess()>();

        $z6 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutRequestEaten>;

        if $z6 != 0 goto label4;

        $z7 = specialinvoke r0.<com.android.internal.widget.RecyclerView: boolean hasUpdatedView()>();

        if $z7 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayout()>();

        goto label4;

     label3:
        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r6.<com.android.internal.widget.AdapterHelper: void consumePostponedUpdates()>();

     label4:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void resumeRequestLayout(boolean)>(1);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onExitLayoutOrScroll()>();

        staticinvoke <android.os.Trace: void endSection()>();

        goto label6;

     label5:
        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        $z4 = virtualinvoke $r3.<com.android.internal.widget.AdapterHelper: boolean hasPendingUpdates()>();

        if $z4 == 0 goto label6;

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>("RV FullInvalidate");

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <android.os.Trace: void endSection()>();

     label6:
        return;

     label7:
        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>("RV FullInvalidate");

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <android.os.Trace: void endSection()>();

        return;
    }

    void defaultOnMeasure(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i10 := @parameter0: int;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingLeft()>();

        $i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingRight()>();

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMinimumWidth()>();

        i11 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>(i10, $i3, $i4);

        $i5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingTop()>();

        $i6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingBottom()>();

        $i7 = $i5 + $i6;

        $i8 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMinimumHeight()>();

        $i9 = staticinvoke <com.android.internal.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>(i0, $i7, $i8);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setMeasuredDimension(int,int)>(i11, $i9);

        return;
    }

    void dispatchChildAttached(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$Adapter r2;
        int $i0, i1;
        java.util.List $r3, r7;
        java.lang.Object $r4;
        com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener $r5;
        com.android.internal.widget.RecyclerView$ViewHolder r6;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r6 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)>(r1);

        r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if r2 == null goto label1;

        if r6 == null goto label1;

        virtualinvoke r2.<com.android.internal.widget.RecyclerView$Adapter: void onViewAttachedToWindow(com.android.internal.widget.RecyclerView$ViewHolder)>(r6);

     label1:
        r7 = r0.<com.android.internal.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if r7 == null goto label3;

        $i0 = interfaceinvoke r7.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.internal.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener) $r4;

        interfaceinvoke $r5.<com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewAttachedToWindow(android.view.View)>(r1);

        i1 = i1 + -1;

        goto label2;

     label3:
        return;
    }

    void dispatchChildDetached(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$Adapter r2;
        int $i0, i1;
        java.util.List $r3, r7;
        java.lang.Object $r4;
        com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener $r5;
        com.android.internal.widget.RecyclerView$ViewHolder r6;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r6 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)>(r1);

        r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if r2 == null goto label1;

        if r6 == null goto label1;

        virtualinvoke r2.<com.android.internal.widget.RecyclerView$Adapter: void onViewDetachedFromWindow(com.android.internal.widget.RecyclerView$ViewHolder)>(r6);

     label1:
        r7 = r0.<com.android.internal.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if r7 == null goto label3;

        $i0 = interfaceinvoke r7.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.internal.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener) $r4;

        interfaceinvoke $r5.<com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewDetachedFromWindow(android.view.View)>(r1);

        i1 = i1 + -1;

        goto label2;

     label3:
        return;
    }

    void dispatchLayout()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$Adapter $r1;
        com.android.internal.widget.RecyclerView$LayoutManager $r2, $r6, $r7, $r8, $r9, $r10;
        com.android.internal.widget.RecyclerView$State $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.internal.widget.AdapterHelper $r5;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "No adapter attached; skipping layout");

        return;

     label1:
        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "No layout manager attached; skipping layout");

        return;

     label2:
        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r3.<com.android.internal.widget.RecyclerView$State: boolean mIsMeasuring> = 0;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $i0 = $r4.<com.android.internal.widget.RecyclerView$State: int mLayoutStep>;

        if $i0 != 1 goto label3;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayoutStep1()>();

        $r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r9.<com.android.internal.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(com.android.internal.widget.RecyclerView)>(r0);

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayoutStep2()>();

        goto label6;

     label3:
        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r5.<com.android.internal.widget.AdapterHelper: boolean hasUpdates()>();

        if $z0 != 0 goto label5;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $i1 = virtualinvoke $r6.<com.android.internal.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getWidth()>();

        if $i1 != $i2 goto label5;

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $i3 = virtualinvoke $r7.<com.android.internal.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getHeight()>();

        if $i3 == $i4 goto label4;

        goto label5;

     label4:
        $r8 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r8.<com.android.internal.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(com.android.internal.widget.RecyclerView)>(r0);

        goto label6;

     label5:
        $r10 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r10.<com.android.internal.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(com.android.internal.widget.RecyclerView)>(r0);

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayoutStep2()>();

     label6:
        specialinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayoutStep3()>();

        return;
    }

    void dispatchOnScrollStateChanged(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, $i1, i2;
        java.util.List $r1, r6;
        java.lang.Object $r2;
        com.android.internal.widget.RecyclerView$OnScrollListener $r3, r5;
        com.android.internal.widget.RecyclerView$LayoutManager r4;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r4 == null goto label1;

        virtualinvoke r4.<com.android.internal.widget.RecyclerView$LayoutManager: void onScrollStateChanged(int)>(i0);

     label1:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onScrollStateChanged(int)>(i0);

        r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnScrollListener mScrollListener>;

        if r5 == null goto label2;

        virtualinvoke r5.<com.android.internal.widget.RecyclerView$OnScrollListener: void onScrollStateChanged(com.android.internal.widget.RecyclerView,int)>(r0, i0);

     label2:
        r6 = r0.<com.android.internal.widget.RecyclerView: java.util.List mScrollListeners>;

        if r6 == null goto label4;

        $i1 = interfaceinvoke r6.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label3:
        if i2 < 0 goto label4;

        $r1 = r0.<com.android.internal.widget.RecyclerView: java.util.List mScrollListeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r3 = (com.android.internal.widget.RecyclerView$OnScrollListener) $r2;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$OnScrollListener: void onScrollStateChanged(com.android.internal.widget.RecyclerView,int)>(r0, i0);

        i2 = i2 + -1;

        goto label3;

     label4:
        return;
    }

    void dispatchOnScrolled(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.util.List $r1, r5;
        java.lang.Object $r2;
        com.android.internal.widget.RecyclerView$OnScrollListener $r3, r4;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = r0.<com.android.internal.widget.RecyclerView: int mDispatchScrollCounter>;

        $i4 = $i3 + 1;

        r0.<com.android.internal.widget.RecyclerView: int mDispatchScrollCounter> = $i4;

        i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getScrollX()>();

        i8 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getScrollY()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onScrollChanged(int,int,int,int)>(i2, i8, i2, i8);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onScrolled(int,int)>(i0, i1);

        r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnScrollListener mScrollListener>;

        if r4 == null goto label1;

        virtualinvoke r4.<com.android.internal.widget.RecyclerView$OnScrollListener: void onScrolled(com.android.internal.widget.RecyclerView,int,int)>(r0, i0, i1);

     label1:
        r5 = r0.<com.android.internal.widget.RecyclerView: java.util.List mScrollListeners>;

        if r5 == null goto label3;

        $i7 = interfaceinvoke r5.<java.util.List: int size()>();

        i9 = $i7 - 1;

     label2:
        if i9 < 0 goto label3;

        $r1 = r0.<com.android.internal.widget.RecyclerView: java.util.List mScrollListeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i9);

        $r3 = (com.android.internal.widget.RecyclerView$OnScrollListener) $r2;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$OnScrollListener: void onScrolled(com.android.internal.widget.RecyclerView,int,int)>(r0, i0, i1);

        i9 = i9 + -1;

        goto label2;

     label3:
        $i5 = r0.<com.android.internal.widget.RecyclerView: int mDispatchScrollCounter>;

        $i6 = $i5 - 1;

        r0.<com.android.internal.widget.RecyclerView: int mDispatchScrollCounter> = $i6;

        return;
    }

    void dispatchPendingImportantForAccessibilityChanges()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        int i0, $i1, i2;
        java.util.List $r2, $r3, $r4;
        java.lang.Object $r5;
        android.view.View $r6, $r8;
        android.view.ViewParent $r7;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label4;

        $r4 = r0.<com.android.internal.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        r1 = (com.android.internal.widget.RecyclerView$ViewHolder) $r5;

        $r6 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewParent getParent()>();

        if $r7 != r0 goto label3;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        i0 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState>;

        if i0 == -1 goto label3;

        $r8 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke $r8.<android.view.View: void setImportantForAccessibility(int)>(i0);

        r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = -1;

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        $r3 = r0.<com.android.internal.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;
    }

    protected void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        com.android.internal.widget.RecyclerView r0;
        android.util.SparseArray r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchThawSelfOnly(android.util.SparseArray)>(r1);

        return;
    }

    protected void dispatchSaveInstanceState(android.util.SparseArray)
    {
        com.android.internal.widget.RecyclerView r0;
        android.util.SparseArray r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchFreezeSelfOnly(android.util.SparseArray)>(r1);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.internal.widget.RecyclerView r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, i27, i28;
        java.util.ArrayList $r2, $r4, $r6;
        com.android.internal.widget.RecyclerView$ItemAnimator $r3, $r5;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z15, z16, z17, z18, z19, z20, z21, z22, z23;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        java.lang.Object $r7;
        com.android.internal.widget.RecyclerView$State $r8;
        com.android.internal.widget.RecyclerView$ItemDecoration $r9;
        android.widget.EdgeEffect r10, r11, r12, r13, r14, r15, r16, r17;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        i21 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i22 = 0;

     label01:
        if i22 >= i21 goto label02;

        $r6 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i22);

        $r9 = (com.android.internal.widget.RecyclerView$ItemDecoration) $r7;

        $r8 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r9.<com.android.internal.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,com.android.internal.widget.RecyclerView,com.android.internal.widget.RecyclerView$State)>(r1, r0, $r8);

        i22 = i22 + 1;

        goto label01;

     label02:
        r10 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        z15 = 0;

        if r10 == null goto label07;

        z15 = 0;

        $z11 = virtualinvoke r10.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z11 != 0 goto label07;

        i23 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $z12 = r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding>;

        if $z12 == 0 goto label03;

        i24 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingBottom()>();

        goto label04;

     label03:
        i24 = 0;

     label04:
        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>(270.0F);

        $i18 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getHeight()>();

        $i19 = neg $i18;

        $i20 = $i19 + i24;

        $f8 = (float) $i20;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f8, 0.0F);

        r11 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if r11 == null goto label05;

        $z13 = virtualinvoke r11.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z13 == 0 goto label05;

        z16 = 1;

        goto label06;

     label05:
        z16 = 0;

     label06:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i23);

        z15 = z16;

     label07:
        r12 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        z17 = z15;

        if r12 == null goto label11;

        z17 = z15;

        $z8 = virtualinvoke r12.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z8 != 0 goto label11;

        i25 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $z9 = r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding>;

        if $z9 == 0 goto label08;

        $i16 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingLeft()>();

        $f6 = (float) $i16;

        $i17 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingTop()>();

        $f7 = (float) $i17;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f6, $f7);

     label08:
        r13 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if r13 == null goto label09;

        $z10 = virtualinvoke r13.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z10 == 0 goto label09;

        z18 = 1;

        goto label10;

     label09:
        z18 = 0;

     label10:
        z17 = z15 | z18;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i25);

     label11:
        r14 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        z19 = z17;

        if r14 == null goto label16;

        z19 = z17;

        $z5 = virtualinvoke r14.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z5 != 0 goto label16;

        i26 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getWidth()>();

        $z6 = r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding>;

        if $z6 == 0 goto label12;

        i27 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingTop()>();

        goto label13;

     label12:
        i27 = 0;

     label13:
        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>(90.0F);

        $i14 = neg i27;

        $f5 = (float) $i14;

        $i15 = neg i0;

        $f4 = (float) $i15;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f5, $f4);

        r15 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if r15 == null goto label14;

        $z7 = virtualinvoke r15.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z7 == 0 goto label14;

        z20 = 1;

        goto label15;

     label14:
        z20 = 0;

     label15:
        z19 = z17 | z20;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i26);

     label16:
        r16 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        z21 = z19;

        if r16 == null goto label21;

        z21 = z19;

        $z2 = virtualinvoke r16.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z2 != 0 goto label21;

        i28 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>(180.0F);

        $z3 = r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding>;

        if $z3 == 0 goto label17;

        $i6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getWidth()>();

        $i7 = neg $i6;

        $i8 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingRight()>();

        $i9 = $i7 + $i8;

        $f2 = (float) $i9;

        $i10 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getHeight()>();

        $i11 = neg $i10;

        $i12 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingBottom()>();

        $i13 = $i11 + $i12;

        $f3 = (float) $i13;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f2, $f3);

        goto label18;

     label17:
        $i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getWidth()>();

        $i3 = neg $i2;

        $f0 = (float) $i3;

        $i4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getHeight()>();

        $i5 = neg $i4;

        $f1 = (float) $i5;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

     label18:
        r17 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if r17 == null goto label19;

        $z4 = virtualinvoke r17.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z4 == 0 goto label19;

        z22 = 1;

        goto label20;

     label19:
        z22 = 0;

     label20:
        z21 = z19 | z22;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i28);

     label21:
        z23 = z21;

        if z21 != 0 goto label22;

        z23 = z21;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r3 == null goto label22;

        z23 = z21;

        $r4 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label22;

        z23 = z21;

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z1 = virtualinvoke $r5.<com.android.internal.widget.RecyclerView$ItemAnimator: boolean isRunning()>();

        if $z1 == 0 goto label22;

        z23 = 1;

     label22:
        if z23 == 0 goto label23;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void postInvalidateOnAnimation()>();

     label23:
        return;
    }

    public boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        com.android.internal.widget.RecyclerView r0;
        android.graphics.Canvas r1;
        android.view.View r2;
        long l0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.view.View;

        l0 := @parameter2: long;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>(r1, r2, l0);

        return $z0;
    }

    void eatRequestLayout()
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $i1 = r0.<com.android.internal.widget.RecyclerView: int mEatRequestLayout>;

        i0 = $i1 + 1;

        r0.<com.android.internal.widget.RecyclerView: int mEatRequestLayout> = i0;

        if i0 != 1 goto label1;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label1;

        r0.<com.android.internal.widget.RecyclerView: boolean mLayoutRequestEaten> = 0;

     label1:
        return;
    }

    void ensureBottomGlow()
    {
        com.android.internal.widget.RecyclerView r0;
        android.widget.EdgeEffect $r2, $r3;
        android.content.Context $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = new android.widget.EdgeEffect;

        $r4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r3.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r4);

        r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow> = $r3;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredWidth()>();

        $i3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingLeft()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingRight()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredHeight()>();

        $i8 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingTop()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingBottom()>();

        $i11 = $i9 - $i10;

        virtualinvoke $r3.<android.widget.EdgeEffect: void setSize(int,int)>($i6, $i11);

        goto label3;

     label2:
        $i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredHeight()>();

        virtualinvoke $r3.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

     label3:
        return;
    }

    void ensureLeftGlow()
    {
        com.android.internal.widget.RecyclerView r0;
        android.widget.EdgeEffect $r2, $r3;
        android.content.Context $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = new android.widget.EdgeEffect;

        $r4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r3.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r4);

        r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow> = $r3;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredHeight()>();

        $i3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingTop()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingBottom()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredWidth()>();

        $i8 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingLeft()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingRight()>();

        $i11 = $i9 - $i10;

        virtualinvoke $r3.<android.widget.EdgeEffect: void setSize(int,int)>($i6, $i11);

        goto label3;

     label2:
        $i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredWidth()>();

        virtualinvoke $r3.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

     label3:
        return;
    }

    void ensureRightGlow()
    {
        com.android.internal.widget.RecyclerView r0;
        android.widget.EdgeEffect $r2, $r3;
        android.content.Context $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = new android.widget.EdgeEffect;

        $r4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r3.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r4);

        r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mRightGlow> = $r3;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredHeight()>();

        $i3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingTop()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingBottom()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredWidth()>();

        $i8 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingLeft()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingRight()>();

        $i11 = $i9 - $i10;

        virtualinvoke $r3.<android.widget.EdgeEffect: void setSize(int,int)>($i6, $i11);

        goto label3;

     label2:
        $i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredWidth()>();

        virtualinvoke $r3.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

     label3:
        return;
    }

    void ensureTopGlow()
    {
        com.android.internal.widget.RecyclerView r0;
        android.widget.EdgeEffect $r2, $r3;
        android.content.Context $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = new android.widget.EdgeEffect;

        $r4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r3.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r4);

        r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mTopGlow> = $r3;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredWidth()>();

        $i3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingLeft()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingRight()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredHeight()>();

        $i8 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingTop()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingBottom()>();

        $i11 = $i9 - $i10;

        virtualinvoke $r3.<android.widget.EdgeEffect: void setSize(int,int)>($i6, $i11);

        goto label3;

     label2:
        $i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredHeight()>();

        virtualinvoke $r3.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

     label3:
        return;
    }

    public android.view.View findChildViewUnder(float, float)
    {
        com.android.internal.widget.RecyclerView r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.view.View r1;
        com.android.internal.widget.ChildHelper $r2, $r3;
        int $i0, $i1, $i3, $i5, $i7, i9;
        byte $b2, $b4, $b6, $b8;

        r0 := @this: com.android.internal.widget.RecyclerView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        i9 = $i0 - 1;

     label1:
        if i9 < 0 goto label3;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        r1 = virtualinvoke $r3.<com.android.internal.widget.ChildHelper: android.view.View getChildAt(int)>(i9);

        f2 = virtualinvoke r1.<android.view.View: float getTranslationX()>();

        f3 = virtualinvoke r1.<android.view.View: float getTranslationY()>();

        $i1 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $f4 = (float) $i1;

        $f5 = $f4 + f2;

        $b2 = f0 cmpl $f5;

        if $b2 < 0 goto label2;

        $i3 = virtualinvoke r1.<android.view.View: int getRight()>();

        $f6 = (float) $i3;

        $f7 = $f6 + f2;

        $b4 = f0 cmpg $f7;

        if $b4 > 0 goto label2;

        $i5 = virtualinvoke r1.<android.view.View: int getTop()>();

        $f8 = (float) $i5;

        $f9 = $f8 + f3;

        $b6 = f1 cmpl $f9;

        if $b6 < 0 goto label2;

        $i7 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $f10 = (float) $i7;

        $f11 = $f10 + f3;

        $b8 = f1 cmpg $f11;

        if $b8 > 0 goto label2;

        return r1;

     label2:
        i9 = i9 + -1;

        goto label1;

     label3:
        return null;
    }

    public android.view.View findContainingItemView(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0;
        android.view.View r1;
        android.view.ViewParent r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

     label1:
        if r2 == null goto label2;

        if r2 == r0 goto label2;

        $z0 = r2 instanceof android.view.View;

        if $z0 == 0 goto label2;

        r1 = (android.view.View) r2;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        goto label1;

     label2:
        if r2 != r0 goto label3;

        goto label4;

     label3:
        r1 = null;

     label4:
        return r1;
    }

    public com.android.internal.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1, r2;
        com.android.internal.widget.RecyclerView$ViewHolder r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>(r1);

        if r2 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r2);

     label2:
        return r3;
    }

    public com.android.internal.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, $i2, i3;
        com.android.internal.widget.RecyclerView$ViewHolder r1, r7, r8;
        boolean $z0, $z1, $z2;
        com.android.internal.widget.ChildHelper $r2, $r3, $r6;
        android.view.View $r4, $r5;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        r7 = null;

        i3 = 0;

     label2:
        if i3 >= i1 goto label5;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r4 = virtualinvoke $r3.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i3);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r4);

        r8 = r7;

        if r1 == null goto label4;

        r8 = r7;

        $z1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z1 != 0 goto label4;

        r8 = r7;

        $i2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getAdapterPositionFor(com.android.internal.widget.RecyclerView$ViewHolder)>(r1);

        if $i2 != i0 goto label4;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r5 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z2 = virtualinvoke $r6.<com.android.internal.widget.ChildHelper: boolean isHidden(android.view.View)>($r5);

        if $z2 == 0 goto label3;

        r8 = r1;

        goto label4;

     label3:
        return r1;

     label4:
        i3 = i3 + 1;

        r7 = r8;

        goto label2;

     label5:
        return r7;
    }

    public com.android.internal.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
    {
        com.android.internal.widget.RecyclerView r0;
        long l0, $l2;
        int i1, i4;
        com.android.internal.widget.RecyclerView$ViewHolder r1, r8, r9;
        boolean $z0, $z1, $z2;
        com.android.internal.widget.ChildHelper $r2, $r3, $r6;
        android.view.View $r4, $r5;
        byte $b3;
        com.android.internal.widget.RecyclerView$Adapter r7;

        r0 := @this: com.android.internal.widget.RecyclerView;

        l0 := @parameter0: long;

        r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if r7 == null goto label6;

        $z0 = virtualinvoke r7.<com.android.internal.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 != 0 goto label1;

        goto label6;

     label1:
        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        r8 = null;

        i4 = 0;

     label2:
        if i4 >= i1 goto label5;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r4 = virtualinvoke $r3.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i4);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r4);

        r9 = r8;

        if r1 == null goto label4;

        r9 = r8;

        $z1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z1 != 0 goto label4;

        r9 = r8;

        $l2 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: long getItemId()>();

        $b3 = $l2 cmp l0;

        if $b3 != 0 goto label4;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r5 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z2 = virtualinvoke $r6.<com.android.internal.widget.ChildHelper: boolean isHidden(android.view.View)>($r5);

        if $z2 == 0 goto label3;

        r9 = r1;

        goto label4;

     label3:
        return r1;

     label4:
        i4 = i4 + 1;

        r8 = r9;

        goto label2;

     label5:
        return r8;

     label6:
        return null;
    }

    public com.android.internal.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0;
        com.android.internal.widget.RecyclerView$ViewHolder $r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)>(i0, 0);

        return $r1;
    }

    public com.android.internal.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0;
        com.android.internal.widget.RecyclerView$ViewHolder $r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)>(i0, 0);

        return $r1;
    }

    com.android.internal.widget.RecyclerView$ViewHolder findViewHolderForPosition(int, boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, $i2, $i3, i4;
        boolean z0, $z1, $z2;
        com.android.internal.widget.RecyclerView$ViewHolder r1, r7, r8;
        com.android.internal.widget.ChildHelper $r2, $r3, $r6;
        android.view.View $r4, $r5;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        r7 = null;

        i4 = 0;

     label1:
        if i4 >= i1 goto label6;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r4 = virtualinvoke $r3.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i4);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r4);

        r8 = r7;

        if r1 == null goto label5;

        r8 = r7;

        $z1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z1 != 0 goto label5;

        if z0 == 0 goto label2;

        $i3 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 == i0 goto label3;

        r8 = r7;

        goto label5;

     label2:
        $i2 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if $i2 == i0 goto label3;

        r8 = r7;

        goto label5;

     label3:
        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r5 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z2 = virtualinvoke $r6.<com.android.internal.widget.ChildHelper: boolean isHidden(android.view.View)>($r5);

        if $z2 == 0 goto label4;

        r8 = r1;

        goto label5;

     label4:
        return r1;

     label5:
        i4 = i4 + 1;

        r7 = r8;

        goto label1;

     label6:
        return r7;
    }

    public boolean fling(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0, z1, $z2, $z3, $z5, z6, z7;
        com.android.internal.widget.RecyclerView$LayoutManager $r1, $r2, r5, r7;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i21, i22, i23, i24, i25, i26, i27, i28;
        com.android.internal.widget.RecyclerView$ViewFlinger $r3;
        com.android.internal.widget.RecyclerView$Adapter $r4;
        android.view.View r6, r8;
        com.android.internal.widget.RecyclerView$OnFlingListener r9;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i21 := @parameter0: int;

        i22 := @parameter1: int;

        r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r5 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot fling without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return 0;

     label01:
        $z2 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z2 == 0 goto label02;

        return 0;

     label02:
        z0 = virtualinvoke r5.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        z1 = virtualinvoke $r1.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if z0 == 0 goto label03;

        i23 = i21;

        $i18 = staticinvoke <java.lang.Math: int abs(int)>(i21);

        $i19 = r0.<com.android.internal.widget.RecyclerView: int mMinFlingVelocity>;

        if $i18 >= $i19 goto label04;

     label03:
        i23 = 0;

     label04:
        if z1 == 0 goto label05;

        i24 = i22;

        $i16 = staticinvoke <java.lang.Math: int abs(int)>(i22);

        $i17 = r0.<com.android.internal.widget.RecyclerView: int mMinFlingVelocity>;

        if $i16 >= $i17 goto label06;

     label05:
        i24 = 0;

     label06:
        if i23 != 0 goto label07;

        if i24 != 0 goto label07;

        return 0;

     label07:
        $f1 = (float) i23;

        $f0 = (float) i24;

        $z3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)>($f1, $f0);

        if $z3 != 0 goto label18;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        r6 = virtualinvoke $r2.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(0);

        r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $i0 = virtualinvoke r7.<com.android.internal.widget.RecyclerView$LayoutManager: int getChildCount()>();

        $i1 = $i0 - 1;

        r8 = virtualinvoke r7.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>($i1);

        z6 = 0;

        if i24 >= 0 goto label10;

        $i13 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getChildAdapterPosition(android.view.View)>(r6);

        if $i13 > 0 goto label09;

        $i14 = virtualinvoke r6.<android.view.View: int getTop()>();

        $i15 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingTop()>();

        if $i14 >= $i15 goto label08;

        goto label09;

     label08:
        z6 = 0;

        goto label10;

     label09:
        z6 = 1;

     label10:
        if i24 <= 0 goto label13;

        $i6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getChildAdapterPosition(android.view.View)>(r8);

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        $i7 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView$Adapter: int getItemCount()>();

        $i8 = $i7 - 1;

        if $i6 < $i8 goto label12;

        $i9 = virtualinvoke r8.<android.view.View: int getBottom()>();

        $i10 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getHeight()>();

        $i11 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getPaddingBottom()>();

        $i12 = $i10 - $i11;

        if $i9 <= $i12 goto label11;

        goto label12;

     label11:
        z6 = 0;

        goto label13;

     label12:
        z6 = 1;

     label13:
        $f2 = (float) i23;

        $f3 = (float) i24;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>($f2, $f3, z6);

        r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnFlingListener mOnFlingListener>;

        if r9 == null goto label14;

        $z5 = virtualinvoke r9.<com.android.internal.widget.RecyclerView$OnFlingListener: boolean onFling(int,int)>(i23, i24);

        if $z5 == 0 goto label14;

        return 1;

     label14:
        if z0 != 0 goto label16;

        if z1 == 0 goto label15;

        goto label16;

     label15:
        z7 = 0;

        goto label17;

     label16:
        z7 = 1;

     label17:
        if z7 == 0 goto label18;

        i25 = r0.<com.android.internal.widget.RecyclerView: int mMaxFlingVelocity>;

        $i2 = neg i25;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i23, i25);

        i26 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        i27 = r0.<com.android.internal.widget.RecyclerView: int mMaxFlingVelocity>;

        $i4 = neg i27;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i24, i27);

        i28 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$ViewFlinger: void fling(int,int)>(i26, i28);

        return 1;

     label18:
        return 0;
    }

    public android.view.View focusSearch(android.view.View, int)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1, r2, $r4, $r9, $r16, $r17, r19, r22;
        com.android.internal.widget.RecyclerView$LayoutManager $r3, $r7, $r8, $r12, $r14, $r15, $r18;
        com.android.internal.widget.RecyclerView$State $r5, $r10;
        com.android.internal.widget.RecyclerView$Recycler $r6, $r11;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, z10, z12, z13, z14, z15, $z17;
        int $i0, i1, i2, i4;
        com.android.internal.widget.RecyclerView$Adapter r20;
        android.view.FocusFinder r21;
        short s3;
        byte b5;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        r19 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View onInterceptFocusSearch(android.view.View,int)>(r1, i1);

        if r19 == null goto label01;

        return r19;

     label01:
        r20 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if r20 == null goto label02;

        $r18 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if $r18 == null goto label02;

        $z6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isComputingLayout()>();

        if $z6 != 0 goto label02;

        $z7 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z7 != 0 goto label02;

        z8 = 1;

        goto label03;

     label02:
        z8 = 0;

     label03:
        r21 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        if z8 == 0 goto label21;

        if i1 == 2 goto label04;

        if i1 != 1 goto label21;

     label04:
        z9 = 0;

        i2 = i1;

        $r8 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = virtualinvoke $r8.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z1 == 0 goto label09;

        if i1 != 2 goto label05;

        s3 = 130;

        goto label06;

     label05:
        s3 = 33;

     label06:
        $r17 = virtualinvoke r21.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r1, s3);

        if $r17 != null goto label07;

        z10 = 1;

        goto label08;

     label07:
        z10 = 0;

     label08:
        z9 = z10;

        i2 = i1;

        $z5 = <com.android.internal.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION>;

        if $z5 == 0 goto label09;

        i2 = s3;

        z9 = z10;

     label09:
        z12 = z9;

        i4 = i2;

        if z9 != 0 goto label18;

        z12 = z9;

        i4 = i2;

        $r14 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $z2 = virtualinvoke $r14.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z2 == 0 goto label18;

        $r15 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $i0 = virtualinvoke $r15.<com.android.internal.widget.RecyclerView$LayoutManager: int getLayoutDirection()>();

        if $i0 != 1 goto label10;

        z13 = 1;

        goto label11;

     label10:
        z13 = 0;

     label11:
        if i2 != 2 goto label12;

        z14 = 1;

        goto label13;

     label12:
        z14 = 0;

     label13:
        $z3 = z14 ^ z13;

        if $z3 == 0 goto label14;

        b5 = 66;

        goto label15;

     label14:
        b5 = 17;

     label15:
        $r16 = virtualinvoke r21.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r1, b5);

        if $r16 != null goto label16;

        z15 = 1;

        goto label17;

     label16:
        z15 = 0;

     label17:
        z12 = z15;

        i4 = i2;

        $z4 = <com.android.internal.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION>;

        if $z4 == 0 goto label18;

        i4 = b5;

        z12 = z15;

     label18:
        if z12 == 0 goto label20;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void consumePendingUpdateOperations()>();

        $r9 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>(r1);

        if $r9 != null goto label19;

        return null;

     label19:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void eatRequestLayout()>();

        $r12 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r11 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r10 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r12.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>(r1, i4, $r11, $r10);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

     label20:
        r22 = virtualinvoke r21.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r1, i4);

        goto label23;

     label21:
        r2 = virtualinvoke r21.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r1, i1);

        r22 = r2;

        i4 = i1;

        if r2 != null goto label23;

        r22 = r2;

        i4 = i1;

        if z8 == 0 goto label23;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void consumePendingUpdateOperations()>();

        $r4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>(r1);

        if $r4 != null goto label22;

        return null;

     label22:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void eatRequestLayout()>();

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        r22 = virtualinvoke $r7.<com.android.internal.widget.RecyclerView$LayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>(r1, i1, $r6, $r5);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

        i4 = i1;

     label23:
        $z17 = specialinvoke r0.<com.android.internal.widget.RecyclerView: boolean isPreferredNextFocus(android.view.View,android.view.View,int)>(r1, r22, i4);

        if $z17 == 0 goto label24;

        goto label25;

     label24:
        r22 = specialinvoke r0.<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>(r1, i4);

     label25:
        return r22;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager r1;
        java.lang.IllegalStateException $r2;
        com.android.internal.widget.RecyclerView$LayoutParams $r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()>();

        return $r3;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RecyclerView has no LayoutManager");

        throw $r2;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.widget.RecyclerView r0;
        android.util.AttributeSet r1;
        com.android.internal.widget.RecyclerView$LayoutManager r2;
        java.lang.IllegalStateException $r3;
        android.content.Context $r4;
        com.android.internal.widget.RecyclerView$LayoutParams $r5;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.util.AttributeSet;

        r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r2 == null goto label1;

        $r4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.content.Context getContext()>();

        $r5 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)>($r4, r1);

        return $r5;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RecyclerView has no LayoutManager");

        throw $r3;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.ViewGroup$LayoutParams r1;
        com.android.internal.widget.RecyclerView$LayoutManager r2;
        java.lang.IllegalStateException $r3;
        com.android.internal.widget.RecyclerView$LayoutParams $r4;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r4;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RecyclerView has no LayoutManager");

        throw $r3;
    }

    public com.android.internal.widget.RecyclerView$Adapter getAdapter()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$Adapter $r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        return $r1;
    }

    int getAdapterPositionFor(com.android.internal.widget.RecyclerView$ViewHolder)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        boolean $z0, $z1;
        int $i0, $i1;
        com.android.internal.widget.AdapterHelper $r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)>(524);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isBound()>();

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        $i0 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        $i1 = virtualinvoke $r2.<com.android.internal.widget.AdapterHelper: int applyPendingUpdatesToPosition(int)>($i0);

        return $i1;

     label2:
        return -1;
    }

    public int getBaseline()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager r1;
        int $i0, $i1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: int getBaseline()>();

        return $i1;

     label1:
        $i0 = specialinvoke r0.<android.view.ViewGroup: int getBaseline()>();

        return $i0;
    }

    long getChangedHolderKey(com.android.internal.widget.RecyclerView$ViewHolder)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.RecyclerView$Adapter $r2;
        boolean $z0;
        int $i0;
        long l1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r2.<com.android.internal.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 == 0 goto label1;

        l1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: long getItemId()>();

        goto label2;

     label1:
        $i0 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        l1 = (long) $i0;

     label2:
        return l1;
    }

    public int getChildAdapterPosition(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$ViewHolder r2;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 == null goto label1;

        i0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: int getAdapterPosition()>();

        goto label2;

     label1:
        i0 = -1;

     label2:
        return i0;
    }

    protected int getChildDrawingOrder(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, $i2, $i3;
        com.android.internal.widget.RecyclerView$ChildDrawingOrderCallback r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback>;

        if r1 != null goto label1;

        $i3 = specialinvoke r0.<android.view.ViewGroup: int getChildDrawingOrder(int,int)>(i0, i1);

        return $i3;

     label1:
        $i2 = interfaceinvoke r1.<com.android.internal.widget.RecyclerView$ChildDrawingOrderCallback: int onGetChildDrawingOrder(int,int)>(i0, i1);

        return $i2;
    }

    public long getChildItemId(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$Adapter r1;
        boolean $z0;
        android.view.View r2;
        long l0;
        com.android.internal.widget.RecyclerView$ViewHolder r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r2 := @parameter0: android.view.View;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        l0 = -1L;

        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 != 0 goto label1;

        goto label3;

     label1:
        r3 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        if r3 == null goto label2;

        l0 = virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: long getItemId()>();

     label2:
        return l0;

     label3:
        return -1L;
    }

    public int getChildLayoutPosition(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$ViewHolder r2;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 == null goto label1;

        i0 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        goto label2;

     label1:
        i0 = -1;

     label2:
        return i0;
    }

    public int getChildPosition(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getChildAdapterPosition(android.view.View)>(r1);

        return $i0;
    }

    public com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$ViewHolder $r2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9;
        android.view.ViewParent r10;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r10 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        if r10 == null goto label2;

        if r10 != r0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a direct child of ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        $r2 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        return $r2;
    }

    public boolean getClipToPadding()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding>;

        return $z0;
    }

    public com.android.internal.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerViewAccessibilityDelegate $r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate>;

        return $r1;
    }

    public void getDecoratedBoundsWithMargins(android.view.View, android.graphics.Rect)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;
        android.graphics.Rect r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        staticinvoke <com.android.internal.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)>(r1, r2);

        return;
    }

    public com.android.internal.widget.RecyclerView$ItemAnimator getItemAnimator()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ItemAnimator $r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        return $r1;
    }

    android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;
        com.android.internal.widget.RecyclerView$LayoutParams r2;
        android.graphics.Rect r3, $r7, $r11, $r13, $r14, $r15, $r16, $r17, $r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        android.view.ViewGroup$LayoutParams $r4;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.widget.RecyclerView$State $r5, $r10;
        java.util.ArrayList $r6, $r8;
        java.lang.Object $r9;
        com.android.internal.widget.RecyclerView$ItemDecoration $r12;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.widget.RecyclerView$LayoutParams) $r4;

        $z0 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: boolean mInsetsDirty>;

        if $z0 != 0 goto label1;

        $r18 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        return $r18;

     label1:
        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z1 = virtualinvoke $r5.<com.android.internal.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$LayoutParams: boolean isItemChanged()>();

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$LayoutParams: boolean isViewInvalid()>();

        if $z3 == 0 goto label3;

     label2:
        $r17 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        return $r17;

     label3:
        r3 = r2.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        $r6 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i13 = 0;

     label4:
        if i13 >= i0 goto label5;

        $r7 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke $r7.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        $r8 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        $r12 = (com.android.internal.widget.RecyclerView$ItemDecoration) $r9;

        $r11 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $r10 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r12.<com.android.internal.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,android.view.View,com.android.internal.widget.RecyclerView,com.android.internal.widget.RecyclerView$State)>($r11, r1, r0, $r10);

        $i2 = r3.<android.graphics.Rect: int left>;

        $r13 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i1 = $r13.<android.graphics.Rect: int left>;

        $i3 = $i2 + $i1;

        r3.<android.graphics.Rect: int left> = $i3;

        $i5 = r3.<android.graphics.Rect: int top>;

        $r14 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i4 = $r14.<android.graphics.Rect: int top>;

        $i6 = $i5 + $i4;

        r3.<android.graphics.Rect: int top> = $i6;

        $i8 = r3.<android.graphics.Rect: int right>;

        $r15 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i7 = $r15.<android.graphics.Rect: int right>;

        $i9 = $i8 + $i7;

        r3.<android.graphics.Rect: int right> = $i9;

        $i11 = r3.<android.graphics.Rect: int bottom>;

        $r16 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i10 = $r16.<android.graphics.Rect: int bottom>;

        $i12 = $i11 + $i10;

        r3.<android.graphics.Rect: int bottom> = $i12;

        i13 = i13 + 1;

        goto label4;

     label5:
        r2.<com.android.internal.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 0;

        return r3;
    }

    public com.android.internal.widget.RecyclerView$LayoutManager getLayoutManager()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager $r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        return $r1;
    }

    public int getMaxFlingVelocity()
    {
        com.android.internal.widget.RecyclerView r0;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $i0 = r0.<com.android.internal.widget.RecyclerView: int mMaxFlingVelocity>;

        return $i0;
    }

    public int getMinFlingVelocity()
    {
        com.android.internal.widget.RecyclerView r0;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $i0 = r0.<com.android.internal.widget.RecyclerView: int mMinFlingVelocity>;

        return $i0;
    }

    long getNanoTime()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0;
        long $l0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z0 = <com.android.internal.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        return $l0;

     label1:
        return 0L;
    }

    public com.android.internal.widget.RecyclerView$OnFlingListener getOnFlingListener()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$OnFlingListener $r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnFlingListener mOnFlingListener>;

        return $r1;
    }

    public boolean getPreserveFocusAfterLayout()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        return $z0;
    }

    public com.android.internal.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$Recycler $r1;
        com.android.internal.widget.RecyclerView$RecycledViewPool $r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r2 = virtualinvoke $r1.<com.android.internal.widget.RecyclerView$Recycler: com.android.internal.widget.RecyclerView$RecycledViewPool getRecycledViewPool()>();

        return $r2;
    }

    public int getScrollState()
    {
        com.android.internal.widget.RecyclerView r0;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $i0 = r0.<com.android.internal.widget.RecyclerView: int mScrollState>;

        return $i0;
    }

    public boolean hasFixedSize()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mHasFixedSize>;

        return $z0;
    }

    public boolean hasPendingAdapterUpdates()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0, $z1, $z2, z3;
        com.android.internal.widget.AdapterHelper $r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z1 != 0 goto label2;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        $z2 = virtualinvoke $r1.<com.android.internal.widget.AdapterHelper: boolean hasPendingUpdates()>();

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    void initAdapterManager()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.AdapterHelper $r1;
        com.android.internal.widget.RecyclerView$6 $r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = new com.android.internal.widget.AdapterHelper;

        $r2 = new com.android.internal.widget.RecyclerView$6;

        specialinvoke $r2.<com.android.internal.widget.RecyclerView$6: void <init>(com.android.internal.widget.RecyclerView)>(r0);

        specialinvoke $r1.<com.android.internal.widget.AdapterHelper: void <init>(com.android.internal.widget.AdapterHelper$Callback)>($r2);

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper> = $r1;

        return;
    }

    void invalidateGlows()
    {
        com.android.internal.widget.RecyclerView r0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow> = null;

        r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mTopGlow> = null;

        r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mRightGlow> = null;

        r0.<com.android.internal.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow> = null;

        return;
    }

    public void invalidateItemDecorations()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager r1;
        java.util.ArrayList $r2;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot invalidate item decorations during a scroll or layout");

     label2:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void requestLayout()>();

        return;
    }

    boolean isAccessibilityEnabled()
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityManager r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isAnimating()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ItemAnimator r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ItemAnimator: boolean isRunning()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isAttachedToWindow()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mIsAttached>;

        return $z0;
    }

    public boolean isComputingLayout()
    {
        com.android.internal.widget.RecyclerView r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $i0 = r0.<com.android.internal.widget.RecyclerView: int mLayoutOrScrollCounter>;

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isLayoutFrozen()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        return $z0;
    }

    void jumpToPositionForSmoothScroller(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0;
        com.android.internal.widget.RecyclerView$LayoutManager r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: void scrollToPosition(int)>(i0);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean awakenScrollBars()>();

        return;
    }

    void markItemDecorInsetsDirty()
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1;
        com.android.internal.widget.ChildHelper $r1, $r3;
        com.android.internal.widget.RecyclerView$Recycler $r2;
        android.view.View $r4;
        android.view.ViewGroup$LayoutParams $r5;
        com.android.internal.widget.RecyclerView$LayoutParams $r6;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r1.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r4 = virtualinvoke $r3.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (com.android.internal.widget.RecyclerView$LayoutParams) $r5;

        $r6.<com.android.internal.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView$Recycler: void markItemDecorInsetsDirty()>();

        return;
    }

    void markKnownViewsInvalid()
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.ChildHelper $r2, $r4;
        com.android.internal.widget.RecyclerView$Recycler $r3;
        android.view.View $r5;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void addFlags(int)>(6);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$Recycler: void markKnownViewsInvalid()>();

        return;
    }

    public void offsetChildrenHorizontal(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, i2;
        com.android.internal.widget.ChildHelper $r1, $r2;
        android.view.View $r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r1.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r3 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: android.view.View getChildAt(int)>(i2);

        virtualinvoke $r3.<android.view.View: void offsetLeftAndRight(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void offsetChildrenVertical(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, i2;
        com.android.internal.widget.ChildHelper $r1, $r2;
        android.view.View $r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r1.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r3 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: android.view.View getChildAt(int)>(i2);

        virtualinvoke $r3.<android.view.View: void offsetTopAndBottom(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    void offsetPositionRecordsForInsert(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, i2, $i3, i4;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.ChildHelper $r2, $r4;
        com.android.internal.widget.RecyclerView$Recycler $r3;
        android.view.View $r5;
        boolean $z0;
        com.android.internal.widget.RecyclerView$State $r6;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i2 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        i4 = 0;

     label1:
        if i4 >= i2 goto label3;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i4);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        $i3 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 < i0 goto label2;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>(i1, 0);

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r6.<com.android.internal.widget.RecyclerView$State: boolean mStructureChanged> = 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$Recycler: void offsetPositionRecordsForInsert(int,int)>(i0, i1);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void requestLayout()>();

        return;
    }

    void offsetPositionRecordsForMove(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i10;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.ChildHelper $r2, $r4;
        com.android.internal.widget.RecyclerView$Recycler $r3;
        android.view.View $r5;
        com.android.internal.widget.RecyclerView$State $r6;
        byte b9;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i2 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        if i0 >= i1 goto label1;

        i7 = i0;

        i8 = i1;

        b9 = -1;

        goto label2;

     label1:
        i7 = i1;

        i8 = i0;

        b9 = 1;

     label2:
        i10 = 0;

     label3:
        if i10 >= i2 goto label8;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i10);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        if r1 == null goto label7;

        $i3 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 < i7 goto label7;

        $i4 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i4 <= i8 goto label4;

        goto label7;

     label4:
        $i5 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i5 != i0 goto label5;

        $i6 = i1 - i0;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>($i6, 0);

        goto label6;

     label5:
        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>(b9, 0);

     label6:
        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r6.<com.android.internal.widget.RecyclerView$State: boolean mStructureChanged> = 1;

     label7:
        i10 = i10 + 1;

        goto label3;

     label8:
        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$Recycler: void offsetPositionRecordsForMove(int,int)>(i0, i1);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void requestLayout()>();

        return;
    }

    void offsetPositionRecordsForRemove(int, int, boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean z0, $z1;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.ChildHelper $r2, $r4;
        com.android.internal.widget.RecyclerView$Recycler $r3;
        android.view.View $r5;
        com.android.internal.widget.RecyclerView$State $r6, $r7;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i2 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        i9 = 0;

     label1:
        if i9 >= i2 goto label4;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i9);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        if r1 == null goto label3;

        $z1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z1 != 0 goto label3;

        $i4 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        $i3 = i0 + i1;

        if $i4 < $i3 goto label2;

        $i8 = neg i1;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>($i8, z0);

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r7.<com.android.internal.widget.RecyclerView$State: boolean mStructureChanged> = 1;

        goto label3;

     label2:
        $i5 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i5 < i0 goto label3;

        $i7 = i0 - 1;

        $i6 = neg i1;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void flagRemovedAndOffsetPosition(int,int,boolean)>($i7, $i6, z0);

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r6.<com.android.internal.widget.RecyclerView$State: boolean mStructureChanged> = 1;

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$Recycler: void offsetPositionRecordsForRemove(int,int,boolean)>(i0, i1, z0);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void requestLayout()>();

        return;
    }

    protected void onAttachedToWindow()
    {
        com.android.internal.widget.RecyclerView r0;
        float f1, f2, $f3;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.ThreadLocal $r1, $r8;
        java.lang.Object $r2;
        com.android.internal.widget.GapWorker $r3, r5, $r7, $r9, $r10;
        byte $b0;
        com.android.internal.widget.RecyclerView$LayoutManager r4;
        android.view.Display r6;
        long $l1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        r0.<com.android.internal.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        z4 = 1;

        r0.<com.android.internal.widget.RecyclerView: boolean mIsAttached> = 1;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isLayoutRequested()>();

        if $z3 != 0 goto label1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        r0.<com.android.internal.widget.RecyclerView: boolean mFirstLayoutComplete> = z4;

        r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r4 == null goto label3;

        virtualinvoke r4.<com.android.internal.widget.RecyclerView$LayoutManager: void dispatchAttachedToWindow(com.android.internal.widget.RecyclerView)>(r0);

     label3:
        r0.<com.android.internal.widget.RecyclerView: boolean mPostedAnimatorRunner> = 0;

        $z1 = <com.android.internal.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z1 == 0 goto label6;

        $r1 = <com.android.internal.widget.GapWorker: java.lang.ThreadLocal sGapWorker>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r5 = (com.android.internal.widget.GapWorker) $r2;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.GapWorker mGapWorker> = r5;

        if r5 != null goto label5;

        $r3 = new com.android.internal.widget.GapWorker;

        specialinvoke $r3.<com.android.internal.widget.GapWorker: void <init>()>();

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.GapWorker mGapWorker> = $r3;

        r6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.view.Display getDisplay()>();

        f2 = 60.0F;

        $z2 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isInEditMode()>();

        if $z2 != 0 goto label4;

        f2 = 60.0F;

        if r6 == null goto label4;

        f1 = virtualinvoke r6.<android.view.Display: float getRefreshRate()>();

        f2 = 60.0F;

        $b0 = f1 cmpl 30.0F;

        if $b0 < 0 goto label4;

        f2 = f1;

     label4:
        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.GapWorker mGapWorker>;

        $f3 = 1.0E9F / f2;

        $l1 = (long) $f3;

        $r7.<com.android.internal.widget.GapWorker: long mFrameIntervalNs> = $l1;

        $r8 = <com.android.internal.widget.GapWorker: java.lang.ThreadLocal sGapWorker>;

        $r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.GapWorker mGapWorker>;

        virtualinvoke $r8.<java.lang.ThreadLocal: void set(java.lang.Object)>($r9);

     label5:
        $r10 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.GapWorker mGapWorker>;

        virtualinvoke $r10.<com.android.internal.widget.GapWorker: void add(com.android.internal.widget.RecyclerView)>(r0);

     label6:
        return;
    }

    public void onChildAttachedToWindow(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        return;
    }

    public void onChildDetachedFromWindow(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        return;
    }

    protected void onDetachedFromWindow()
    {
        com.android.internal.widget.RecyclerView r0;
        java.util.List $r1;
        java.lang.Runnable $r2;
        com.android.internal.widget.ViewInfoStore $r3;
        boolean $z1;
        com.android.internal.widget.GapWorker $r4;
        com.android.internal.widget.RecyclerView$Recycler $r5;
        com.android.internal.widget.RecyclerView$ItemAnimator r6;
        com.android.internal.widget.RecyclerView$LayoutManager r7;

        r0 := @this: com.android.internal.widget.RecyclerView;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if r6 == null goto label1;

        virtualinvoke r6.<com.android.internal.widget.RecyclerView$ItemAnimator: void endAnimations()>();

     label1:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void stopScroll()>();

        r0.<com.android.internal.widget.RecyclerView: boolean mIsAttached> = 0;

        r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r7 == null goto label2;

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke r7.<com.android.internal.widget.RecyclerView$LayoutManager: void dispatchDetachedFromWindow(com.android.internal.widget.RecyclerView,com.android.internal.widget.RecyclerView$Recycler)>(r0, $r5);

     label2:
        $r1 = r0.<com.android.internal.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<com.android.internal.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner>;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean removeCallbacks(java.lang.Runnable)>($r2);

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r3.<com.android.internal.widget.ViewInfoStore: void onDetach()>();

        $z1 = <com.android.internal.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z1 == 0 goto label3;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.GapWorker mGapWorker>;

        virtualinvoke $r4.<com.android.internal.widget.GapWorker: void remove(com.android.internal.widget.RecyclerView)>(r0);

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.GapWorker mGapWorker> = null;

     label3:
        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.android.internal.widget.RecyclerView r0;
        android.graphics.Canvas r1;
        int i0, i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.internal.widget.RecyclerView$State $r5;
        com.android.internal.widget.RecyclerView$ItemDecoration $r6;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>(r1);

        $r2 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (com.android.internal.widget.RecyclerView$ItemDecoration) $r4;

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r6.<com.android.internal.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,com.android.internal.widget.RecyclerView,com.android.internal.widget.RecyclerView$State)>(r1, r0, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void onEnterLayoutOrScroll()
    {
        com.android.internal.widget.RecyclerView r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $i0 = r0.<com.android.internal.widget.RecyclerView: int mLayoutOrScrollCounter>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.widget.RecyclerView: int mLayoutOrScrollCounter> = $i1;

        return;
    }

    void onExitLayoutOrScroll()
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, $i1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $i1 = r0.<com.android.internal.widget.RecyclerView: int mLayoutOrScrollCounter>;

        i0 = $i1 - 1;

        r0.<com.android.internal.widget.RecyclerView: int mLayoutOrScrollCounter> = i0;

        if i0 >= 1 goto label1;

        r0.<com.android.internal.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchContentChangedIfNecessary()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchPendingImportantForAccessibilityChanges()>();

     label1:
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.MotionEvent r1;
        float f0, $f1, $f2, $f3, f4, f5;
        com.android.internal.widget.RecyclerView$LayoutManager $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i4, $i5;
        byte $b3, $b6;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label8;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i2 != 8 goto label8;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z1 == 0 goto label3;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(9);

        f4 = neg $f3;

        goto label4;

     label3:
        f4 = 0.0F;

     label4:
        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $z2 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z2 == 0 goto label5;

        f5 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(10);

        goto label6;

     label5:
        f5 = 0.0F;

     label6:
        $b3 = f4 cmpl 0.0F;

        if $b3 != 0 goto label7;

        $b6 = f5 cmpl 0.0F;

        if $b6 == 0 goto label8;

     label7:
        f0 = specialinvoke r0.<com.android.internal.widget.RecyclerView: float getScrollFactor()>();

        $f1 = f5 * f0;

        $i5 = (int) $f1;

        $f2 = f4 * f0;

        $i4 = (int) $f2;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>($i5, $i4, r1);

     label8:
        return 0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$LayoutManager r1, $r2;
        boolean z0, $z1, $z2, z4, z5, z6, z8, z9;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i26, i27, i28, i30, i31, $i34;
        android.view.VelocityTracker $r3, $r4, $r6, $r12;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.view.ViewParent $r5;
        java.lang.StringBuilder $r7;
        java.lang.String $r11;
        android.view.MotionEvent r13;
        byte b25, b29, b32, b33;
        int[] r15;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r13 := @parameter0: android.view.MotionEvent;

        z4 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        z5 = 0;

        if z4 == 0 goto label01;

        return 0;

     label01:
        $z1 = specialinvoke r0.<com.android.internal.widget.RecyclerView: boolean dispatchOnItemTouchIntercept(android.view.MotionEvent)>(r13);

        if $z1 == 0 goto label02;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void cancelTouch()>();

        return 1;

     label02:
        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r1 != null goto label03;

        return 0;

     label03:
        z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        z6 = virtualinvoke $r2.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        $r3 = r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if $r3 != null goto label04;

        $r12 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker> = $r12;

     label04:
        $r4 = r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r13);

        i15 = virtualinvoke r13.<android.view.MotionEvent: int getActionMasked()>();

        i16 = virtualinvoke r13.<android.view.MotionEvent: int getActionIndex()>();

        if i15 == 0 goto label18;

        if i15 == 1 goto label17;

        if i15 == 2 goto label08;

        if i15 == 3 goto label07;

        if i15 == 5 goto label06;

        if i15 == 6 goto label05;

        goto label23;

     label05:
        specialinvoke r0.<com.android.internal.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)>(r13);

        goto label23;

     label06:
        $i14 = virtualinvoke r13.<android.view.MotionEvent: int getPointerId(int)>(i16);

        r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId> = $i14;

        $f8 = virtualinvoke r13.<android.view.MotionEvent: float getX(int)>(i16);

        $f9 = $f8 + 0.5F;

        i17 = (int) $f9;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchX> = i17;

        r0.<com.android.internal.widget.RecyclerView: int mInitialTouchX> = i17;

        $f10 = virtualinvoke r13.<android.view.MotionEvent: float getY(int)>(i16);

        $f11 = $f10 + 0.5F;

        i18 = (int) $f11;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchY> = i18;

        r0.<com.android.internal.widget.RecyclerView: int mInitialTouchY> = i18;

        goto label23;

     label07:
        specialinvoke r0.<com.android.internal.widget.RecyclerView: void cancelTouch()>();

        goto label23;

     label08:
        $i4 = r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId>;

        i19 = virtualinvoke r13.<android.view.MotionEvent: int findPointerIndex(int)>($i4);

        if i19 >= 0 goto label09;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing scroll; pointer index for id ");

        $i12 = r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found. Did any MotionEvents get skipped?");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r11);

        return 0;

     label09:
        $f4 = virtualinvoke r13.<android.view.MotionEvent: float getX(int)>(i19);

        $f5 = $f4 + 0.5F;

        i20 = (int) $f5;

        $f6 = virtualinvoke r13.<android.view.MotionEvent: float getY(int)>(i19);

        $f7 = $f6 + 0.5F;

        i21 = (int) $f7;

        $i5 = r0.<com.android.internal.widget.RecyclerView: int mScrollState>;

        if $i5 == 1 goto label16;

        $i6 = r0.<com.android.internal.widget.RecyclerView: int mInitialTouchX>;

        i22 = i20 - $i6;

        $i7 = r0.<com.android.internal.widget.RecyclerView: int mInitialTouchY>;

        i0 = i21 - $i7;

        z8 = 0;

        if z0 == 0 goto label12;

        i1 = staticinvoke <java.lang.Math: int abs(int)>(i22);

        i23 = r0.<com.android.internal.widget.RecyclerView: int mTouchSlop>;

        z8 = 0;

        if i1 <= i23 goto label12;

        i24 = r0.<com.android.internal.widget.RecyclerView: int mInitialTouchX>;

        if i22 >= 0 goto label10;

        b25 = -1;

        goto label11;

     label10:
        b25 = 1;

     label11:
        $i10 = i23 * b25;

        $i11 = i24 + $i10;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchX> = $i11;

        z8 = 1;

     label12:
        z9 = z8;

        if z6 == 0 goto label15;

        i26 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        i27 = r0.<com.android.internal.widget.RecyclerView: int mTouchSlop>;

        z9 = z8;

        if i26 <= i27 goto label15;

        i28 = r0.<com.android.internal.widget.RecyclerView: int mInitialTouchY>;

        if i0 >= 0 goto label13;

        b29 = -1;

        goto label14;

     label13:
        b29 = 1;

     label14:
        $i8 = i27 * b29;

        $i9 = i28 + $i8;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchY> = $i9;

        z9 = 1;

     label15:
        if z9 == 0 goto label16;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setScrollState(int)>(1);

     label16:
        goto label23;

     label17:
        $r6 = r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r6.<android.view.VelocityTracker: void clear()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void stopNestedScroll()>();

        goto label23;

     label18:
        $z2 = r0.<com.android.internal.widget.RecyclerView: boolean mIgnoreMotionEventTillDown>;

        if $z2 == 0 goto label19;

        r0.<com.android.internal.widget.RecyclerView: boolean mIgnoreMotionEventTillDown> = 0;

     label19:
        $i2 = virtualinvoke r13.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId> = $i2;

        $f0 = virtualinvoke r13.<android.view.MotionEvent: float getX()>();

        $f1 = $f0 + 0.5F;

        i30 = (int) $f1;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchX> = i30;

        r0.<com.android.internal.widget.RecyclerView: int mInitialTouchX> = i30;

        $f2 = virtualinvoke r13.<android.view.MotionEvent: float getY()>();

        $f3 = $f2 + 0.5F;

        i31 = (int) $f3;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchY> = i31;

        r0.<com.android.internal.widget.RecyclerView: int mInitialTouchY> = i31;

        $i3 = r0.<com.android.internal.widget.RecyclerView: int mScrollState>;

        if $i3 != 2 goto label20;

        $r5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.view.ViewParent getParent()>();

        interfaceinvoke $r5.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setScrollState(int)>(1);

     label20:
        r15 = r0.<com.android.internal.widget.RecyclerView: int[] mNestedOffsets>;

        r15[1] = 0;

        r15[0] = 0;

        b32 = 0;

        if z0 == 0 goto label21;

        b32 = 0 | 1;

     label21:
        b33 = b32;

        if z6 == 0 goto label22;

        b33 = b32 | 2;

     label22:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean startNestedScroll(int)>(b33);

     label23:
        $i34 = r0.<com.android.internal.widget.RecyclerView: int mScrollState>;

        if $i34 != 1 goto label24;

        z5 = 1;

     label24:
        return z5;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>("RV OnLayout");

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <android.os.Trace: void endSection()>();

        r0.<com.android.internal.widget.RecyclerView: boolean mFirstLayoutComplete> = 1;

        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, $z2, $z3, $z4, $z5, z6;
        com.android.internal.widget.RecyclerView$State $r1, $r2, $r5, $r6, $r7, $r9, $r10, $r11, $r15, $r17, $r21, $r26;
        com.android.internal.widget.RecyclerView$Recycler $r3, $r12, $r25;
        com.android.internal.widget.RecyclerView$LayoutManager $r4, $r13, $r16, $r18, $r19, $r20, $r22, r23, $r24;
        com.android.internal.widget.AdapterHelper $r8;
        com.android.internal.widget.RecyclerView$Adapter $r14, r27;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r23 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r23 != null goto label01;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void defaultOnMeasure(int,int)>(i0, i1);

        return;

     label01:
        z0 = r23.<com.android.internal.widget.RecyclerView$LayoutManager: boolean mAutoMeasure>;

        if z0 == 0 goto label07;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        z6 = 0;

        if i2 != 1073741824 goto label02;

        z6 = 0;

        if i3 != 1073741824 goto label02;

        z6 = 1;

     label02:
        $r24 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r25 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r26 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r24.<com.android.internal.widget.RecyclerView$LayoutManager: void onMeasure(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int,int)>($r25, $r26, i0, i1);

        if z6 != 0 goto label06;

        $r14 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if $r14 != null goto label03;

        goto label06;

     label03:
        $r15 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $i5 = $r15.<com.android.internal.widget.RecyclerView$State: int mLayoutStep>;

        if $i5 != 1 goto label04;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayoutStep1()>();

     label04:
        $r16 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r16.<com.android.internal.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)>(i0, i1);

        $r17 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r17.<com.android.internal.widget.RecyclerView$State: boolean mIsMeasuring> = 1;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayoutStep2()>();

        $r18 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r18.<com.android.internal.widget.RecyclerView$LayoutManager: void setMeasuredDimensionFromChildren(int,int)>(i0, i1);

        $r19 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $z5 = virtualinvoke $r19.<com.android.internal.widget.RecyclerView$LayoutManager: boolean shouldMeasureTwice()>();

        if $z5 == 0 goto label05;

        $r20 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $i6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredWidth()>();

        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, 1073741824);

        $i8 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getMeasuredHeight()>();

        $i9 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i8, 1073741824);

        virtualinvoke $r20.<com.android.internal.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)>($i7, $i9);

        $r21 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r21.<com.android.internal.widget.RecyclerView$State: boolean mIsMeasuring> = 1;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayoutStep2()>();

        $r22 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r22.<com.android.internal.widget.RecyclerView$LayoutManager: void setMeasuredDimensionFromChildren(int,int)>(i0, i1);

     label05:
        goto label14;

     label06:
        return;

     label07:
        $z2 = r0.<com.android.internal.widget.RecyclerView: boolean mHasFixedSize>;

        if $z2 == 0 goto label08;

        $r13 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r12 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r11 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r13.<com.android.internal.widget.RecyclerView$LayoutManager: void onMeasure(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int,int)>($r12, $r11, i0, i1);

        return;

     label08:
        $z3 = r0.<com.android.internal.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure>;

        if $z3 == 0 goto label11;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void eatRequestLayout()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onExitLayoutOrScroll()>();

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z4 = $r7.<com.android.internal.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        if $z4 == 0 goto label09;

        $r10 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r10.<com.android.internal.widget.RecyclerView$State: boolean mInPreLayout> = 1;

        goto label10;

     label09:
        $r8 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r8.<com.android.internal.widget.AdapterHelper: void consumeUpdatesInOnePass()>();

        $r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r9.<com.android.internal.widget.RecyclerView$State: boolean mInPreLayout> = 0;

     label10:
        r0.<com.android.internal.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure> = 0;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

     label11:
        r27 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if r27 == null goto label12;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $i4 = virtualinvoke r27.<com.android.internal.widget.RecyclerView$Adapter: int getItemCount()>();

        $r6.<com.android.internal.widget.RecyclerView$State: int mItemCount> = $i4;

        goto label13;

     label12:
        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r1.<com.android.internal.widget.RecyclerView$State: int mItemCount> = 0;

     label13:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void eatRequestLayout()>();

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke $r4.<com.android.internal.widget.RecyclerView$LayoutManager: void onMeasure(com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State,int,int)>($r3, $r2, i0, i1);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $r5.<com.android.internal.widget.RecyclerView$State: boolean mInPreLayout> = 0;

     label14:
        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0;
        android.graphics.Rect r1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>(i0, r1);

        return $z1;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0;
        android.os.Parcelable $r1, $r4, $r6, r8;
        com.android.internal.widget.RecyclerView$LayoutManager $r2, $r7;
        com.android.internal.widget.RecyclerView$SavedState $r3, $r5, r9;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r8 := @parameter0: android.os.Parcelable;

        $z0 = r8 instanceof com.android.internal.widget.RecyclerView$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>(r8);

        return;

     label1:
        r9 = (com.android.internal.widget.RecyclerView$SavedState) r8;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$SavedState mPendingSavedState> = r9;

        $r1 = virtualinvoke r9.<com.android.internal.widget.RecyclerView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$SavedState mPendingSavedState>;

        $r4 = $r3.<com.android.internal.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState>;

        if $r4 == null goto label2;

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$SavedState mPendingSavedState>;

        $r6 = $r5.<com.android.internal.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState>;

        virtualinvoke $r7.<com.android.internal.widget.RecyclerView$LayoutManager: void onRestoreInstanceState(android.os.Parcelable)>($r6);

     label2:
        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$SavedState $r2, r5;
        android.os.Parcelable $r3, $r4;
        com.android.internal.widget.RecyclerView$LayoutManager r6;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = new com.android.internal.widget.RecyclerView$SavedState;

        $r3 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r2.<com.android.internal.widget.RecyclerView$SavedState: void <init>(android.os.Parcelable)>($r3);

        r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$SavedState mPendingSavedState>;

        if r5 == null goto label1;

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView$SavedState: void copyFrom(com.android.internal.widget.RecyclerView$SavedState)>(r5);

        goto label3;

     label1:
        r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r6 == null goto label2;

        $r4 = virtualinvoke r6.<com.android.internal.widget.RecyclerView$LayoutManager: android.os.Parcelable onSaveInstanceState()>();

        $r2.<com.android.internal.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState> = $r4;

        goto label3;

     label2:
        $r2.<com.android.internal.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState> = null;

     label3:
        return $r2;
    }

    public void onScrollStateChanged(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        return;
    }

    public void onScrolled(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, i2, i3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        if i0 != i2 goto label1;

        if i1 == i3 goto label2;

     label1:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void invalidateGlows()>();

     label2:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0, $z1, $z2, $z4, $z5, $z6, z7, z8, z10, z11, z12;
        int i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, $i48, i49, i50, i51, i52;
        com.android.internal.widget.RecyclerView$LayoutManager $r1, r20;
        android.view.VelocityTracker $r2, $r3, $r4, $r5, $r6, $r7, $r18;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19, f20;
        byte $b7, $b10, b53, b54;
        int[] $r8, $r9, r22, r23, r25, r26, r27, r28, r29;
        com.android.internal.widget.GapWorker $r10, $r11;
        android.view.ViewParent $r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r17;
        android.view.MotionEvent r19, r21;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r19 := @parameter0: android.view.MotionEvent;

        z7 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if z7 != 0 goto label40;

        $z1 = r0.<com.android.internal.widget.RecyclerView: boolean mIgnoreMotionEventTillDown>;

        if $z1 == 0 goto label01;

        goto label40;

     label01:
        $z2 = specialinvoke r0.<com.android.internal.widget.RecyclerView: boolean dispatchOnItemTouch(android.view.MotionEvent)>(r19);

        if $z2 == 0 goto label02;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void cancelTouch()>();

        return 1;

     label02:
        r20 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r20 != null goto label03;

        return 0;

     label03:
        z0 = virtualinvoke r20.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        z8 = virtualinvoke $r1.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        $r2 = r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label04;

        $r18 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker> = $r18;

     label04:
        r21 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r19);

        i33 = virtualinvoke r19.<android.view.MotionEvent: int getActionMasked()>();

        i34 = virtualinvoke r19.<android.view.MotionEvent: int getActionIndex()>();

        if i33 != 0 goto label05;

        r22 = r0.<com.android.internal.widget.RecyclerView: int[] mNestedOffsets>;

        r22[1] = 0;

        r22[0] = 0;

     label05:
        r23 = r0.<com.android.internal.widget.RecyclerView: int[] mNestedOffsets>;

        $i3 = r23[0];

        $f1 = (float) $i3;

        $i4 = r23[1];

        $f0 = (float) $i4;

        virtualinvoke r21.<android.view.MotionEvent: void offsetLocation(float,float)>($f1, $f0);

        if i33 == 0 goto label34;

        if i33 == 1 goto label26;

        if i33 == 2 goto label09;

        if i33 == 3 goto label08;

        if i33 == 5 goto label07;

        if i33 == 6 goto label06;

        goto label37;

     label06:
        specialinvoke r0.<com.android.internal.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)>(r19);

        goto label37;

     label07:
        $i32 = virtualinvoke r19.<android.view.MotionEvent: int getPointerId(int)>(i34);

        r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId> = $i32;

        $f15 = virtualinvoke r19.<android.view.MotionEvent: float getX(int)>(i34);

        $f16 = $f15 + 0.5F;

        i35 = (int) $f16;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchX> = i35;

        r0.<com.android.internal.widget.RecyclerView: int mInitialTouchX> = i35;

        $f17 = virtualinvoke r19.<android.view.MotionEvent: float getY(int)>(i34);

        $f18 = $f17 + 0.5F;

        i36 = (int) $f18;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchY> = i36;

        r0.<com.android.internal.widget.RecyclerView: int mInitialTouchY> = i36;

        goto label37;

     label08:
        specialinvoke r0.<com.android.internal.widget.RecyclerView: void cancelTouch()>();

        goto label37;

     label09:
        $i13 = r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId>;

        i37 = virtualinvoke r19.<android.view.MotionEvent: int findPointerIndex(int)>($i13);

        if i37 >= 0 goto label10;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing scroll; pointer index for id ");

        $i30 = r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found. Did any MotionEvents get skipped?");

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r17);

        return 0;

     label10:
        $f9 = virtualinvoke r19.<android.view.MotionEvent: float getX(int)>(i37);

        $f10 = $f9 + 0.5F;

        i1 = (int) $f10;

        $f11 = virtualinvoke r19.<android.view.MotionEvent: float getY(int)>(i37);

        $f12 = $f11 + 0.5F;

        i2 = (int) $f12;

        $i14 = r0.<com.android.internal.widget.RecyclerView: int mLastTouchX>;

        i38 = $i14 - i1;

        $i15 = r0.<com.android.internal.widget.RecyclerView: int mLastTouchY>;

        i39 = $i15 - i2;

        $r9 = r0.<com.android.internal.widget.RecyclerView: int[] mScrollConsumed>;

        $r8 = r0.<com.android.internal.widget.RecyclerView: int[] mScrollOffset>;

        $z5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])>(i38, i39, $r9, $r8);

        if $z5 == 0 goto label11;

        r25 = r0.<com.android.internal.widget.RecyclerView: int[] mScrollConsumed>;

        $i21 = r25[0];

        i38 = i38 - $i21;

        $i22 = r25[1];

        i39 = i39 - $i22;

        r26 = r0.<com.android.internal.widget.RecyclerView: int[] mScrollOffset>;

        $i23 = r26[0];

        $f14 = (float) $i23;

        $i24 = r26[1];

        $f13 = (float) $i24;

        virtualinvoke r21.<android.view.MotionEvent: void offsetLocation(float,float)>($f14, $f13);

        r27 = r0.<com.android.internal.widget.RecyclerView: int[] mNestedOffsets>;

        i40 = r27[0];

        r28 = r0.<com.android.internal.widget.RecyclerView: int[] mScrollOffset>;

        $i25 = r28[0];

        $i26 = i40 + $i25;

        r27[0] = $i26;

        $i28 = r27[1];

        $i27 = r28[1];

        $i29 = $i28 + $i27;

        r27[1] = $i29;

        goto label11;

     label11:
        i41 = i38;

        i42 = i39;

        $i16 = r0.<com.android.internal.widget.RecyclerView: int mScrollState>;

        if $i16 == 1 goto label19;

        z10 = 0;

        i41 = i38;

        if z0 == 0 goto label14;

        i43 = staticinvoke <java.lang.Math: int abs(int)>(i38);

        i44 = r0.<com.android.internal.widget.RecyclerView: int mTouchSlop>;

        z10 = 0;

        i41 = i38;

        if i43 <= i44 goto label14;

        if i38 <= 0 goto label12;

        i41 = i38 - i44;

        goto label13;

     label12:
        i41 = i38 + i44;

     label13:
        z10 = 1;

     label14:
        z11 = z10;

        i45 = i39;

        if z8 == 0 goto label17;

        i46 = staticinvoke <java.lang.Math: int abs(int)>(i39);

        i47 = r0.<com.android.internal.widget.RecyclerView: int mTouchSlop>;

        z11 = z10;

        i45 = i39;

        if i46 <= i47 goto label17;

        if i39 <= 0 goto label15;

        i45 = i39 - i47;

        goto label16;

     label15:
        i45 = i39 + i47;

     label16:
        z11 = 1;

     label17:
        if z11 == 0 goto label18;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setScrollState(int)>(1);

        i42 = i45;

        goto label19;

     label18:
        i42 = i45;

     label19:
        $i48 = r0.<com.android.internal.widget.RecyclerView: int mScrollState>;

        if $i48 != 1 goto label25;

        r29 = r0.<com.android.internal.widget.RecyclerView: int[] mScrollOffset>;

        $i17 = r29[0];

        $i18 = i1 - $i17;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchX> = $i18;

        $i19 = r29[1];

        $i20 = i2 - $i19;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchY> = $i20;

        if z0 == 0 goto label20;

        i49 = i41;

        goto label21;

     label20:
        i49 = 0;

     label21:
        i50 = 0;

        if z8 == 0 goto label22;

        i50 = i42;

     label22:
        $z6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>(i49, i50, r21);

        if $z6 == 0 goto label23;

        $r12 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.view.ViewParent getParent()>();

        interfaceinvoke $r12.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label23:
        $r10 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.GapWorker mGapWorker>;

        if $r10 == null goto label25;

        if i41 != 0 goto label24;

        if i42 == 0 goto label25;

     label24:
        $r11 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.GapWorker mGapWorker>;

        virtualinvoke $r11.<com.android.internal.widget.GapWorker: void postFromTraversal(com.android.internal.widget.RecyclerView,int,int)>(r0, i41, i42);

     label25:
        goto label37;

     label26:
        $r4 = r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r21);

        z12 = 1;

        $r5 = r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i6 = r0.<com.android.internal.widget.RecyclerView: int mMaxFlingVelocity>;

        $f6 = (float) $i6;

        virtualinvoke $r5.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f6);

        if z0 == 0 goto label27;

        $r7 = r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i12 = r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId>;

        $f8 = virtualinvoke $r7.<android.view.VelocityTracker: float getXVelocity(int)>($i12);

        f19 = neg $f8;

        goto label28;

     label27:
        f19 = 0.0F;

     label28:
        if z8 == 0 goto label29;

        $r6 = r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i11 = r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId>;

        $f7 = virtualinvoke $r6.<android.view.VelocityTracker: float getYVelocity(int)>($i11);

        f20 = neg $f7;

        goto label30;

     label29:
        f20 = 0.0F;

     label30:
        $b7 = f19 cmpl 0.0F;

        if $b7 != 0 goto label31;

        $b10 = f20 cmpl 0.0F;

        if $b10 == 0 goto label32;

     label31:
        $i9 = (int) f19;

        $i8 = (int) f20;

        $z4 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean fling(int,int)>($i9, $i8);

        if $z4 != 0 goto label33;

     label32:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setScrollState(int)>(0);

     label33:
        specialinvoke r0.<com.android.internal.widget.RecyclerView: void resetTouch()>();

        goto label38;

     label34:
        $i5 = virtualinvoke r19.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<com.android.internal.widget.RecyclerView: int mScrollPointerId> = $i5;

        $f2 = virtualinvoke r19.<android.view.MotionEvent: float getX()>();

        $f3 = $f2 + 0.5F;

        i51 = (int) $f3;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchX> = i51;

        r0.<com.android.internal.widget.RecyclerView: int mInitialTouchX> = i51;

        $f4 = virtualinvoke r19.<android.view.MotionEvent: float getY()>();

        $f5 = $f4 + 0.5F;

        i52 = (int) $f5;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchY> = i52;

        r0.<com.android.internal.widget.RecyclerView: int mInitialTouchY> = i52;

        b53 = 0;

        if z0 == 0 goto label35;

        b53 = 0 | 1;

     label35:
        b54 = b53;

        if z8 == 0 goto label36;

        b54 = b53 | 2;

     label36:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean startNestedScroll(int)>(b54);

     label37:
        z12 = 0;

     label38:
        if z12 != 0 goto label39;

        $r3 = r0.<com.android.internal.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r21);

     label39:
        virtualinvoke r21.<android.view.MotionEvent: void recycle()>();

        return 1;

     label40:
        return 0;
    }

    void postAnimationRunner()
    {
        com.android.internal.widget.RecyclerView r0;
        boolean $z0, $z1;
        java.lang.Runnable $r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mPostedAnimatorRunner>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.internal.widget.RecyclerView: boolean mIsAttached>;

        if $z1 == 0 goto label1;

        $r1 = r0.<com.android.internal.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner>;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void postOnAnimation(java.lang.Runnable)>($r1);

        r0.<com.android.internal.widget.RecyclerView: boolean mPostedAnimatorRunner> = 1;

     label1:
        return;
    }

    void recordAnimationInfoIfBouncedHiddenView(com.android.internal.widget.RecyclerView$ViewHolder, com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo r2;
        long l0;
        com.android.internal.widget.RecyclerView$State $r3;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.widget.ViewInfoStore $r4, $r5;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void setFlags(int,int)>(0, 8192);

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z0 = $r3.<com.android.internal.widget.RecyclerView$State: boolean mTrackOldChangeHolders>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isUpdated()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z3 != 0 goto label1;

        l0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: long getChangedHolderKey(com.android.internal.widget.RecyclerView$ViewHolder)>(r1);

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r4.<com.android.internal.widget.ViewInfoStore: void addToOldChangeHolders(long,com.android.internal.widget.RecyclerView$ViewHolder)>(l0, r1);

     label1:
        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r5.<com.android.internal.widget.ViewInfoStore: void addToPreLayout(com.android.internal.widget.RecyclerView$ViewHolder,com.android.internal.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>(r1, r2);

        return;
    }

    void removeAndRecycleViews()
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$Recycler $r1, $r2, $r3;
        com.android.internal.widget.RecyclerView$LayoutManager $r4, r6;
        com.android.internal.widget.RecyclerView$ItemAnimator r5;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if r5 == null goto label1;

        virtualinvoke r5.<com.android.internal.widget.RecyclerView$ItemAnimator: void endAnimations()>();

     label1:
        r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r6 == null goto label2;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke r6.<com.android.internal.widget.RecyclerView$LayoutManager: void removeAndRecycleAllViews(com.android.internal.widget.RecyclerView$Recycler)>($r2);

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r4.<com.android.internal.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(com.android.internal.widget.RecyclerView$Recycler)>($r3);

     label2:
        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r1.<com.android.internal.widget.RecyclerView$Recycler: void clear()>();

        return;
    }

    boolean removeAnimatingView(android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0, $z1;
        com.android.internal.widget.ChildHelper $r1;
        com.android.internal.widget.RecyclerView$Recycler $r2, $r3;
        android.view.View r4;
        com.android.internal.widget.RecyclerView$ViewHolder r5;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r4 := @parameter0: android.view.View;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void eatRequestLayout()>();

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        z0 = virtualinvoke $r1.<com.android.internal.widget.ChildHelper: boolean removeViewIfHidden(android.view.View)>(r4);

        if z0 == 0 goto label1;

        r5 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r4);

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView$Recycler: void unscrapView(com.android.internal.widget.RecyclerView$ViewHolder)>(r5);

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$Recycler: void recycleViewHolderInternal(com.android.internal.widget.RecyclerView$ViewHolder)>(r5);

     label1:
        $z1 = z0 ^ 1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void resumeRequestLayout(boolean)>($z1);

        return z0;
    }

    protected void removeDetachedView(android.view.View, boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0, $z1, $z2;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.view.View r7;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r7 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r7);

        if r1 == null goto label3;

        $z1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z1 == 0 goto label1;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void clearTmpDetachFlag()>();

        goto label3;

     label1:
        $z2 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z2 == 0 goto label2;

        goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called removeDetachedView with a view which is not flagged as tmp detached.");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label3:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchChildDetached(android.view.View)>(r7);

        specialinvoke r0.<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>(r7, z0);

        return;
    }

    public void removeItemDecoration(com.android.internal.widget.RecyclerView$ItemDecoration)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ItemDecoration r1;
        com.android.internal.widget.RecyclerView$LayoutManager r2;
        java.util.ArrayList $r3, $r4;
        boolean $z1, z2;
        int $i0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ItemDecoration;

        r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot remove item decoration during a scroll  or layout");

     label1:
        $r3 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        $i0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getOverScrollMode()>();

        if $i0 != 2 goto label2;

        z2 = 1;

        goto label3;

     label2:
        z2 = 0;

     label3:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setWillNotDraw(boolean)>(z2);

     label4:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void removeOnChildAttachStateChangeListener(com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener r1;
        java.util.List r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener;

        r2 = r0.<com.android.internal.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if r2 != null goto label1;

        return;

     label1:
        interfaceinvoke r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void removeOnItemTouchListener(com.android.internal.widget.RecyclerView$OnItemTouchListener)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$OnItemTouchListener r1, $r3;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$OnItemTouchListener;

        $r2 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener>;

        if $r3 != r1 goto label1;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = null;

     label1:
        return;
    }

    public void removeOnScrollListener(com.android.internal.widget.RecyclerView$OnScrollListener)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$OnScrollListener r1;
        java.util.List r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$OnScrollListener;

        r2 = r0.<com.android.internal.widget.RecyclerView: java.util.List mScrollListeners>;

        if r2 == null goto label1;

        interfaceinvoke r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    void repositionShadowingViews()
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        android.view.View r1, r7;
        com.android.internal.widget.ChildHelper $r2, $r3;
        com.android.internal.widget.RecyclerView$ViewHolder $r4, $r5, r6;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getChildCount()>();

        i9 = 0;

     label1:
        if i9 >= i0 goto label4;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        r1 = virtualinvoke $r3.<com.android.internal.widget.ChildHelper: android.view.View getChildAt(int)>(i9);

        r6 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r1);

        if r6 == null goto label3;

        $r4 = r6.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$ViewHolder mShadowingHolder>;

        if $r4 == null goto label3;

        $r5 = r6.<com.android.internal.widget.RecyclerView$ViewHolder: com.android.internal.widget.RecyclerView$ViewHolder mShadowingHolder>;

        r7 = $r5.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        i1 = virtualinvoke r1.<android.view.View: int getLeft()>();

        i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i3 = virtualinvoke r7.<android.view.View: int getLeft()>();

        if i1 != $i3 goto label2;

        $i8 = virtualinvoke r7.<android.view.View: int getTop()>();

        if i2 == $i8 goto label3;

     label2:
        $i4 = virtualinvoke r7.<android.view.View: int getWidth()>();

        $i5 = $i4 + i1;

        $i6 = virtualinvoke r7.<android.view.View: int getHeight()>();

        $i7 = $i6 + i2;

        virtualinvoke r7.<android.view.View: void layout(int,int,int,int)>(i1, i2, $i5, $i7);

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        return;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1, r2;
        com.android.internal.widget.RecyclerView$State $r3;
        com.android.internal.widget.RecyclerView$LayoutManager $r4;
        boolean $z0, $z1, $z3, $z4, $z5;
        android.graphics.Rect $r5, r8, r9, r10, r11, r12, $r13, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.ViewGroup$LayoutParams r6;
        com.android.internal.widget.RecyclerView$LayoutParams r7;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(com.android.internal.widget.RecyclerView,com.android.internal.widget.RecyclerView$State,android.view.View,android.view.View)>(r0, $r3, r1, r2);

        if $z0 != 0 goto label2;

        if r2 == null goto label2;

        $r5 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = virtualinvoke r2.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke r2.<android.view.View: int getHeight()>();

        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

        r6 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z1 = r6 instanceof com.android.internal.widget.RecyclerView$LayoutParams;

        if $z1 == 0 goto label1;

        r7 = (com.android.internal.widget.RecyclerView$LayoutParams) r6;

        $z3 = r7.<com.android.internal.widget.RecyclerView$LayoutParams: boolean mInsetsDirty>;

        if $z3 != 0 goto label1;

        r8 = r7.<com.android.internal.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        r9 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i3 = r9.<android.graphics.Rect: int left>;

        $i2 = r8.<android.graphics.Rect: int left>;

        $i4 = $i3 - $i2;

        r9.<android.graphics.Rect: int left> = $i4;

        r10 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i6 = r10.<android.graphics.Rect: int right>;

        $i5 = r8.<android.graphics.Rect: int right>;

        $i7 = $i6 + $i5;

        r10.<android.graphics.Rect: int right> = $i7;

        r11 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i9 = r11.<android.graphics.Rect: int top>;

        $i8 = r8.<android.graphics.Rect: int top>;

        $i10 = $i9 - $i8;

        r11.<android.graphics.Rect: int top> = $i10;

        r12 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i12 = r12.<android.graphics.Rect: int bottom>;

        $i11 = r8.<android.graphics.Rect: int bottom>;

        $i13 = $i12 + $i11;

        r12.<android.graphics.Rect: int bottom> = $i13;

     label1:
        $r13 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r2, $r13);

        $r14 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>(r1, $r14);

        $r15 = r0.<com.android.internal.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $z4 = r0.<com.android.internal.widget.RecyclerView: boolean mFirstLayoutComplete>;

        $z5 = $z4 ^ 1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>(r1, $r15, $z5);

     label2:
        specialinvoke r0.<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>(r1, r2);

        return;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.View r1;
        android.graphics.Rect r2;
        boolean z0, $z1;
        com.android.internal.widget.RecyclerView$LayoutManager $r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(com.android.internal.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)>(r0, r1, r2, z0);

        return $z1;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0;
        int i0, i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.internal.widget.RecyclerView$OnItemTouchListener $r4;

        r0 := @this: com.android.internal.widget.RecyclerView;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.internal.widget.RecyclerView$OnItemTouchListener) $r3;

        interfaceinvoke $r4.<com.android.internal.widget.RecyclerView$OnItemTouchListener: void onRequestDisallowInterceptTouchEvent(boolean)>(z0);

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>(z0);

        return;
    }

    public void requestLayout()
    {
        com.android.internal.widget.RecyclerView r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $i0 = r0.<com.android.internal.widget.RecyclerView: int mEatRequestLayout>;

        if $i0 != 0 goto label1;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        goto label2;

     label1:
        r0.<com.android.internal.widget.RecyclerView: boolean mLayoutRequestEaten> = 1;

     label2:
        return;
    }

    void resumeRequestLayout(boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3;
        com.android.internal.widget.RecyclerView$LayoutManager $r1;
        com.android.internal.widget.RecyclerView$Adapter $r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        z0 := @parameter0: boolean;

        $i0 = r0.<com.android.internal.widget.RecyclerView: int mEatRequestLayout>;

        if $i0 >= 1 goto label1;

        r0.<com.android.internal.widget.RecyclerView: int mEatRequestLayout> = 1;

     label1:
        if z0 != 0 goto label2;

        r0.<com.android.internal.widget.RecyclerView: boolean mLayoutRequestEaten> = 0;

     label2:
        $i1 = r0.<com.android.internal.widget.RecyclerView: int mEatRequestLayout>;

        if $i1 != 1 goto label4;

        if z0 == 0 goto label3;

        $z1 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutRequestEaten>;

        if $z1 == 0 goto label3;

        $z2 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z2 != 0 goto label3;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 == null goto label3;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label3;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchLayout()>();

     label3:
        $z3 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z3 != 0 goto label4;

        r0.<com.android.internal.widget.RecyclerView: boolean mLayoutRequestEaten> = 0;

     label4:
        $i2 = r0.<com.android.internal.widget.RecyclerView: int mEatRequestLayout>;

        $i3 = $i2 - 1;

        r0.<com.android.internal.widget.RecyclerView: int mEatRequestLayout> = $i3;

        return;
    }

    void saveOldPositions()
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        com.android.internal.widget.ChildHelper $r2, $r3;
        android.view.View $r4;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r4 = virtualinvoke $r3.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r4);

        $z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void saveOldPosition()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void scrollBy(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i2, i3;
        com.android.internal.widget.RecyclerView$LayoutManager r1, $r2;
        boolean z0, z1, $z2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label1:
        $z2 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z2 == 0 goto label2;

        return;

     label2:
        z0 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        z1 = virtualinvoke $r2.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if z0 != 0 goto label3;

        if z1 == 0 goto label7;

     label3:
        i3 = 0;

        if z0 == 0 goto label4;

        goto label5;

     label4:
        i2 = 0;

     label5:
        if z1 == 0 goto label6;

        i3 = i0;

     label6:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>(i2, i3, null);

     label7:
        return;
    }

    boolean scrollByInternal(int, int, android.view.MotionEvent)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24;
        int[] $r1, r11, r12, r13;
        boolean $z0, z1, $z2, $z3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        com.android.internal.widget.RecyclerView$State $r2, $r5;
        com.android.internal.widget.RecyclerView$Recycler $r3, $r6;
        com.android.internal.widget.RecyclerView$LayoutManager $r4, $r7;
        android.view.MotionEvent r8;
        com.android.internal.widget.RecyclerView$Adapter r9;
        java.util.ArrayList $r10;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i18 := @parameter0: int;

        i0 := @parameter1: int;

        r8 := @parameter2: android.view.MotionEvent;

        i19 = 0;

        i20 = 0;

        i21 = 0;

        i22 = 0;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void consumePendingUpdateOperations()>();

        r9 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        z1 = 0;

        if r9 == null goto label03;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void eatRequestLayout()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>("RV Scroll");

        i19 = 0;

        i21 = 0;

        if i18 == 0 goto label01;

        $r7 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        i21 = virtualinvoke $r7.<com.android.internal.widget.RecyclerView$LayoutManager: int scrollHorizontallyBy(int,com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>(i18, $r6, $r5);

        i19 = i18 - i21;

     label01:
        i20 = 0;

        i22 = 0;

        if i0 == 0 goto label02;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        i22 = virtualinvoke $r4.<com.android.internal.widget.RecyclerView$LayoutManager: int scrollVerticallyBy(int,com.android.internal.widget.RecyclerView$Recycler,com.android.internal.widget.RecyclerView$State)>(i0, $r3, $r2);

        i20 = i0 - i22;

     label02:
        staticinvoke <android.os.Trace: void endSection()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void repositionShadowingViews()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

     label03:
        $r10 = r0.<com.android.internal.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z2 = virtualinvoke $r10.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label04;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void invalidate()>();

     label04:
        $r1 = r0.<com.android.internal.widget.RecyclerView: int[] mScrollOffset>;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])>(i21, i22, i19, i20, $r1);

        if $z0 == 0 goto label06;

        i23 = r0.<com.android.internal.widget.RecyclerView: int mLastTouchX>;

        r11 = r0.<com.android.internal.widget.RecyclerView: int[] mScrollOffset>;

        $i6 = r11[0];

        $i7 = i23 - $i6;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchX> = $i7;

        $i9 = r0.<com.android.internal.widget.RecyclerView: int mLastTouchY>;

        $i8 = r11[1];

        $i10 = $i9 - $i8;

        r0.<com.android.internal.widget.RecyclerView: int mLastTouchY> = $i10;

        if r8 == null goto label05;

        $i16 = r11[0];

        $f5 = (float) $i16;

        $i17 = r11[1];

        $f4 = (float) $i17;

        virtualinvoke r8.<android.view.MotionEvent: void offsetLocation(float,float)>($f5, $f4);

     label05:
        r12 = r0.<com.android.internal.widget.RecyclerView: int[] mNestedOffsets>;

        i24 = r12[0];

        r13 = r0.<com.android.internal.widget.RecyclerView: int[] mScrollOffset>;

        $i11 = r13[0];

        $i12 = i24 + $i11;

        r12[0] = $i12;

        $i14 = r12[1];

        $i13 = r13[1];

        $i15 = $i14 + $i13;

        r12[1] = $i15;

        goto label08;

     label06:
        $i5 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: int getOverScrollMode()>();

        if $i5 == 2 goto label08;

        if r8 == null goto label07;

        $f0 = virtualinvoke r8.<android.view.MotionEvent: float getX()>();

        $f1 = (float) i19;

        $f2 = virtualinvoke r8.<android.view.MotionEvent: float getY()>();

        $f3 = (float) i20;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void pullGlows(float,float,float,float)>($f0, $f1, $f2, $f3);

     label07:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)>(i18, i0);

     label08:
        if i21 != 0 goto label09;

        if i22 == 0 goto label10;

     label09:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchOnScrolled(int,int)>(i21, i22);

     label10:
        $z3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean awakenScrollBars()>();

        if $z3 != 0 goto label11;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void invalidate()>();

     label11:
        if i21 != 0 goto label12;

        if i22 == 0 goto label13;

     label12:
        z1 = 1;

     label13:
        return z1;
    }

    public void scrollTo(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerView", "RecyclerView does not support scrolling to an absolute position. Use scrollToPosition instead");

        return;
    }

    public void scrollToPosition(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0;
        com.android.internal.widget.RecyclerView$LayoutManager r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void stopScroll()>();

        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot scroll to position a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label2:
        virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: void scrollToPosition(int)>(i0);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean awakenScrollBars()>();

        return;
    }

    public void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    public void setAccessibilityDelegateCompat(com.android.internal.widget.RecyclerViewAccessibilityDelegate)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerViewAccessibilityDelegate r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerViewAccessibilityDelegate;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate> = r1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>(r1);

        return;
    }

    public void setAdapter(com.android.internal.widget.RecyclerView$Adapter)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$Adapter r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Adapter;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setLayoutFrozen(boolean)>(0);

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void setAdapterInternal(com.android.internal.widget.RecyclerView$Adapter,boolean,boolean)>(r1, 0, 1);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void setChildDrawingOrderCallback(com.android.internal.widget.RecyclerView$ChildDrawingOrderCallback)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ChildDrawingOrderCallback r1, $r2;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ChildDrawingOrderCallback;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback>;

        if r1 != $r2 goto label1;

        return;

     label1:
        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback> = r1;

        if r1 == null goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setChildrenDrawingOrderEnabled(boolean)>(z0);

        return;
    }

    boolean setChildImportantForAccessibilityInternal(com.android.internal.widget.RecyclerView$ViewHolder, int)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        int i0;
        boolean $z0;
        android.view.View $r2;
        java.util.List $r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ViewHolder;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label1;

        r1.<com.android.internal.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = i0;

        $r3 = r0.<com.android.internal.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return 0;

     label1:
        $r2 = r1.<com.android.internal.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke $r2.<android.view.View: void setImportantForAccessibility(int)>(i0);

        return 1;
    }

    public void setClipToPadding(boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0, $z1, $z2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding>;

        if z0 == $z1 goto label1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void invalidateGlows()>();

     label1:
        r0.<com.android.internal.widget.RecyclerView: boolean mClipToPadding> = z0;

        specialinvoke r0.<android.view.ViewGroup: void setClipToPadding(boolean)>(z0);

        $z2 = r0.<com.android.internal.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z2 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void requestLayout()>();

     label2:
        return;
    }

    void setDataSetChangedAfterLayout()
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1;
        com.android.internal.widget.RecyclerView$ViewHolder r1;
        boolean $z0, $z1;
        com.android.internal.widget.ChildHelper $r2, $r4;
        com.android.internal.widget.RecyclerView$Recycler $r3;
        android.view.View $r5;

        r0 := @this: com.android.internal.widget.RecyclerView;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.android.internal.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 1;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r4.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        r1 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r5);

        if r1 == null goto label3;

        $z1 = virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z1 != 0 goto label3;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ViewHolder: void addFlags(int)>(512);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<com.android.internal.widget.RecyclerView$Recycler: void setAdapterPositionsAsUnknown()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void markKnownViewsInvalid()>();

        return;
    }

    public void setHasFixedSize(boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.RecyclerView: boolean mHasFixedSize> = z0;

        return;
    }

    public void setItemAnimator(com.android.internal.widget.RecyclerView$ItemAnimator)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ItemAnimator r1, r2, $r4;
        com.android.internal.widget.RecyclerView$ItemAnimator$ItemAnimatorListener $r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ItemAnimator;

        r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.widget.RecyclerView$ItemAnimator: void endAnimations()>();

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r4.<com.android.internal.widget.RecyclerView$ItemAnimator: void setListener(com.android.internal.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)>(null);

     label1:
        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator> = r1;

        if r1 == null goto label2;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener>;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$ItemAnimator: void setListener(com.android.internal.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)>($r3);

     label2:
        return;
    }

    public void setItemViewCacheSize(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0;
        com.android.internal.widget.RecyclerView$Recycler $r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r1.<com.android.internal.widget.RecyclerView$Recycler: void setViewCacheSize(int)>(i0);

        return;
    }

    public void setLayoutFrozen(boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0, $z1, $z3;
        long l0;
        android.view.MotionEvent $r1;
        com.android.internal.widget.RecyclerView$LayoutManager $r2;
        com.android.internal.widget.RecyclerView$Adapter $r3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if z0 == $z1 goto label3;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>("Do not setLayoutFrozen in layout or scroll");

        if z0 != 0 goto label2;

        r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen> = 0;

        $z3 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutRequestEaten>;

        if $z3 == 0 goto label1;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Adapter mAdapter>;

        if $r3 == null goto label1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void requestLayout()>();

     label1:
        r0.<com.android.internal.widget.RecyclerView: boolean mLayoutRequestEaten> = 0;

        goto label3;

     label2:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l0, l0, 3, 0.0F, 0.0F, 0);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen> = 1;

        r0.<com.android.internal.widget.RecyclerView: boolean mIgnoreMotionEventTillDown> = 1;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void stopScroll()>();

     label3:
        return;
    }

    public void setLayoutManager(com.android.internal.widget.RecyclerView$LayoutManager)
    {
        com.android.internal.widget.RecyclerView r0, $r6, $r11;
        com.android.internal.widget.RecyclerView$LayoutManager r1, $r2, $r3, $r15, $r16, $r18, $r20, $r22, $r24;
        com.android.internal.widget.RecyclerView$Recycler $r4, $r17, $r19, $r21, $r23, $r27;
        com.android.internal.widget.ChildHelper $r5;
        java.lang.StringBuilder $r7;
        java.lang.IllegalArgumentException $r13;
        java.lang.String $r14;
        boolean $z0, $z1;
        com.android.internal.widget.RecyclerView$ItemAnimator r25;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$LayoutManager;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r1 != $r2 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void stopScroll()>();

        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if $r3 == null goto label4;

        r25 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if r25 == null goto label2;

        virtualinvoke r25.<com.android.internal.widget.RecyclerView$ItemAnimator: void endAnimations()>();

     label2:
        $r18 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r17 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r18.<com.android.internal.widget.RecyclerView$LayoutManager: void removeAndRecycleAllViews(com.android.internal.widget.RecyclerView$Recycler)>($r17);

        $r20 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r19 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r20.<com.android.internal.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(com.android.internal.widget.RecyclerView$Recycler)>($r19);

        $r21 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r21.<com.android.internal.widget.RecyclerView$Recycler: void clear()>();

        $z1 = r0.<com.android.internal.widget.RecyclerView: boolean mIsAttached>;

        if $z1 == 0 goto label3;

        $r24 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $r23 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r24.<com.android.internal.widget.RecyclerView$LayoutManager: void dispatchDetachedFromWindow(com.android.internal.widget.RecyclerView,com.android.internal.widget.RecyclerView$Recycler)>(r0, $r23);

     label3:
        $r22 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r22.<com.android.internal.widget.RecyclerView$LayoutManager: void setRecyclerView(com.android.internal.widget.RecyclerView)>(null);

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout> = null;

        goto label5;

     label4:
        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r4.<com.android.internal.widget.RecyclerView$Recycler: void clear()>();

     label5:
        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        virtualinvoke $r5.<com.android.internal.widget.ChildHelper: void removeAllViewsUnfiltered()>();

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout> = r1;

        if r1 == null goto label7;

        $r6 = r1.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        if $r6 != null goto label6;

        $r15 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r15.<com.android.internal.widget.RecyclerView$LayoutManager: void setRecyclerView(com.android.internal.widget.RecyclerView)>(r0);

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mIsAttached>;

        if $z0 == 0 goto label7;

        $r16 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r16.<com.android.internal.widget.RecyclerView$LayoutManager: void dispatchAttachedToWindow(com.android.internal.widget.RecyclerView)>(r0);

        goto label7;

     label6:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LayoutManager ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already attached to a RecyclerView: ");

        $r11 = r1.<com.android.internal.widget.RecyclerView$LayoutManager: com.android.internal.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label7:
        $r27 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r27.<com.android.internal.widget.RecyclerView$Recycler: void updateViewCacheSize()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void setOnFlingListener(com.android.internal.widget.RecyclerView$OnFlingListener)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$OnFlingListener r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$OnFlingListener;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnFlingListener mOnFlingListener> = r1;

        return;
    }

    public void setOnScrollListener(com.android.internal.widget.RecyclerView$OnScrollListener)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$OnScrollListener r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$OnScrollListener;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$OnScrollListener mScrollListener> = r1;

        return;
    }

    public void setPreserveFocusAfterLayout(boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.RecyclerView: boolean mPreserveFocusAfterLayout> = z0;

        return;
    }

    public void setRecycledViewPool(com.android.internal.widget.RecyclerView$RecycledViewPool)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$RecycledViewPool r1;
        com.android.internal.widget.RecyclerView$Recycler $r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$RecycledViewPool;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView$Recycler: void setRecycledViewPool(com.android.internal.widget.RecyclerView$RecycledViewPool)>(r1);

        return;
    }

    public void setRecyclerListener(com.android.internal.widget.RecyclerView$RecyclerListener)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$RecyclerListener r1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$RecyclerListener;

        r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$RecyclerListener mRecyclerListener> = r1;

        return;
    }

    void setScrollState(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, $i1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.RecyclerView: int mScrollState>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<com.android.internal.widget.RecyclerView: int mScrollState> = i0;

        if i0 == 2 goto label2;

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void stopScrollersInternal()>();

     label2:
        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void dispatchOnScrollStateChanged(int)>(i0);

        return;
    }

    public void setScrollingTouchSlop(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, $i1, $i2;
        android.view.ViewConfiguration r1;
        android.content.Context $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: android.content.Context getContext()>();

        r1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r3);

        if i0 == 0 goto label2;

        if i0 == 1 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setScrollingTouchSlop(): bad argument constant ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; using default value");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerView", $r8);

        goto label2;

     label1:
        $i2 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>();

        r0.<com.android.internal.widget.RecyclerView: int mTouchSlop> = $i2;

        goto label3;

     label2:
        $i1 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.android.internal.widget.RecyclerView: int mTouchSlop> = $i1;

     label3:
        return;
    }

    public void setViewCacheExtension(com.android.internal.widget.RecyclerView$ViewCacheExtension)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$ViewCacheExtension r1;
        com.android.internal.widget.RecyclerView$Recycler $r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$ViewCacheExtension;

        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<com.android.internal.widget.RecyclerView$Recycler: void setViewCacheExtension(com.android.internal.widget.RecyclerView$ViewCacheExtension)>(r1);

        return;
    }

    boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0;
        int $i0, $i1, i2, i3;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r0.<com.android.internal.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label3;

        i2 = 0;

        if r1 == null goto label1;

        i2 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>();

     label1:
        i3 = i2;

        if i2 != 0 goto label2;

        i3 = 0;

     label2:
        $i0 = r0.<com.android.internal.widget.RecyclerView: int mEatenAccessibilityChangeFlags>;

        $i1 = $i0 | i3;

        r0.<com.android.internal.widget.RecyclerView: int mEatenAccessibilityChangeFlags> = $i1;

        return 1;

     label3:
        return 0;
    }

    public void smoothScrollBy(int, int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>(i0, i1, null);

        return;
    }

    public void smoothScrollBy(int, int, android.view.animation.Interpolator)
    {
        com.android.internal.widget.RecyclerView r0;
        android.view.animation.Interpolator r1;
        com.android.internal.widget.RecyclerView$LayoutManager r2, $r3;
        boolean $z0, $z1, $z2;
        com.android.internal.widget.RecyclerView$ViewFlinger $r4;
        int i1, i2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r1 := @parameter2: android.view.animation.Interpolator;

        r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot smooth scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label1:
        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 == 0 goto label2;

        return;

     label2:
        $z1 = virtualinvoke r2.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z1 != 0 goto label3;

        i1 = 0;

     label3:
        $r3 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        $z2 = virtualinvoke $r3.<com.android.internal.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z2 != 0 goto label4;

        i2 = 0;

     label4:
        if i1 != 0 goto label5;

        if i2 == 0 goto label6;

     label5:
        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r4.<com.android.internal.widget.RecyclerView$ViewFlinger: void smoothScrollBy(int,int,android.view.animation.Interpolator)>(i1, i2, r1);

     label6:
        return;
    }

    public void smoothScrollToPosition(int)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0;
        com.android.internal.widget.RecyclerView$LayoutManager r1;
        boolean $z0;
        com.android.internal.widget.RecyclerView$State $r2;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r1 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$LayoutManager mLayout>;

        if r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot smooth scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label2:
        $r2 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$State mState>;

        virtualinvoke r1.<com.android.internal.widget.RecyclerView$LayoutManager: void smoothScrollToPosition(com.android.internal.widget.RecyclerView,com.android.internal.widget.RecyclerView$State,int)>(r0, $r2, i0);

        return;
    }

    public void stopScroll()
    {
        com.android.internal.widget.RecyclerView r0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setScrollState(int)>(0);

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void stopScrollersInternal()>();

        return;
    }

    public void swapAdapter(com.android.internal.widget.RecyclerView$Adapter, boolean)
    {
        com.android.internal.widget.RecyclerView r0;
        com.android.internal.widget.RecyclerView$Adapter r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.RecyclerView;

        r1 := @parameter0: com.android.internal.widget.RecyclerView$Adapter;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setLayoutFrozen(boolean)>(0);

        specialinvoke r0.<com.android.internal.widget.RecyclerView: void setAdapterInternal(com.android.internal.widget.RecyclerView$Adapter,boolean,boolean)>(r1, 1, z0);

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void setDataSetChangedAfterLayout()>();

        virtualinvoke r0.<com.android.internal.widget.RecyclerView: void requestLayout()>();

        return;
    }

    void viewRangeUpdate(int, int, java.lang.Object)
    {
        com.android.internal.widget.RecyclerView r0;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        java.lang.Object r1;
        android.view.View r2;
        com.android.internal.widget.RecyclerView$ViewHolder r3;
        com.android.internal.widget.ChildHelper $r4, $r6;
        com.android.internal.widget.RecyclerView$Recycler $r5;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r7;
        com.android.internal.widget.RecyclerView$LayoutParams $r8;

        r0 := @this: com.android.internal.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r4 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        i2 = virtualinvoke $r4.<com.android.internal.widget.ChildHelper: int getUnfilteredChildCount()>();

        i6 = 0;

     label1:
        if i6 >= i2 goto label4;

        $r6 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.ChildHelper mChildHelper>;

        r2 = virtualinvoke $r6.<com.android.internal.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i6);

        r3 = staticinvoke <com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        if r3 == null goto label3;

        $z0 = virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $i3 = r3.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 < i0 goto label3;

        $i5 = r3.<com.android.internal.widget.RecyclerView$ViewHolder: int mPosition>;

        $i4 = i0 + i1;

        if $i5 >= $i4 goto label3;

        virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: void addFlags(int)>(2);

        virtualinvoke r3.<com.android.internal.widget.RecyclerView$ViewHolder: void addChangePayload(java.lang.Object)>(r1);

        $r7 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (com.android.internal.widget.RecyclerView$LayoutParams) $r7;

        $r8.<com.android.internal.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        $r5 = r0.<com.android.internal.widget.RecyclerView: com.android.internal.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<com.android.internal.widget.RecyclerView$Recycler: void viewRangeUpdate(int,int)>(i0, i1);

        return;
    }
}
