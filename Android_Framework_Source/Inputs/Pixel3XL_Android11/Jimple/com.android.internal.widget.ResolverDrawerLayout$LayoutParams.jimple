public class com.android.internal.widget.ResolverDrawerLayout$LayoutParams extends android.view.ViewGroup$MarginLayoutParams
{
    public boolean alwaysShow;
    public boolean hasNestedScrollIndicator;
    public boolean ignoreOffset;
    public int maxHeight;

    public void <init>(int, int)
    {
        com.android.internal.widget.ResolverDrawerLayout$LayoutParams r0;
        int i0, i1;

        r0 := @this: com.android.internal.widget.ResolverDrawerLayout$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>(i0, i1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.ResolverDrawerLayout$LayoutParams r0;
        android.util.AttributeSet r1;
        int[] $r2;
        boolean $z0, $z1, $z2;
        int $i0;
        android.content.Context r3;
        android.content.res.TypedArray r4;

        r0 := @this: com.android.internal.widget.ResolverDrawerLayout$LayoutParams;

        r3 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r3, r1);

        $r2 = <com.android.internal.R$styleable: int[] ResolverDrawerLayout_LayoutParams>;

        r4 = virtualinvoke r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r1, $r2);

        $z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

        r0.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: boolean alwaysShow> = $z0;

        $z1 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, 0);

        r0.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: boolean ignoreOffset> = $z1;

        $z2 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        r0.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: boolean hasNestedScrollIndicator> = $z2;

        $i0 = virtualinvoke r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, -1);

        r0.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: int maxHeight> = $i0;

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.ResolverDrawerLayout$LayoutParams r0;
        android.view.ViewGroup$LayoutParams r1;

        r0 := @this: com.android.internal.widget.ResolverDrawerLayout$LayoutParams;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return;
    }

    public void <init>(android.view.ViewGroup$MarginLayoutParams)
    {
        com.android.internal.widget.ResolverDrawerLayout$LayoutParams r0;
        android.view.ViewGroup$MarginLayoutParams r1;

        r0 := @this: com.android.internal.widget.ResolverDrawerLayout$LayoutParams;

        r1 := @parameter0: android.view.ViewGroup$MarginLayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>(r1);

        return;
    }

    public void <init>(com.android.internal.widget.ResolverDrawerLayout$LayoutParams)
    {
        com.android.internal.widget.ResolverDrawerLayout$LayoutParams r0, r1;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: com.android.internal.widget.ResolverDrawerLayout$LayoutParams;

        r1 := @parameter0: com.android.internal.widget.ResolverDrawerLayout$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>(r1);

        $z0 = r1.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: boolean alwaysShow>;

        r0.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: boolean alwaysShow> = $z0;

        $z1 = r1.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: boolean ignoreOffset>;

        r0.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: boolean ignoreOffset> = $z1;

        $z2 = r1.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: boolean hasNestedScrollIndicator>;

        r0.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: boolean hasNestedScrollIndicator> = $z2;

        $i0 = r1.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: int maxHeight>;

        r0.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: int maxHeight> = $i0;

        return;
    }
}
