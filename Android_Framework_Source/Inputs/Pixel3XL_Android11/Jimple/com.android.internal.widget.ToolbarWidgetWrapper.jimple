public class com.android.internal.widget.ToolbarWidgetWrapper extends java.lang.Object implements com.android.internal.widget.DecorToolbar
{
    private static final int AFFECTS_LOGO_MASK;
    private static final long DEFAULT_FADE_DURATION_MS;
    private static final java.lang.String TAG;
    private android.widget.ActionMenuPresenter mActionMenuPresenter;
    private android.view.View mCustomView;
    private int mDefaultNavigationContentDescription;
    private android.graphics.drawable.Drawable mDefaultNavigationIcon;
    private int mDisplayOpts;
    private java.lang.CharSequence mHomeDescription;
    private android.graphics.drawable.Drawable mIcon;
    private android.graphics.drawable.Drawable mLogo;
    private boolean mMenuPrepared;
    private android.graphics.drawable.Drawable mNavIcon;
    private int mNavigationMode;
    private android.widget.Spinner mSpinner;
    private java.lang.CharSequence mSubtitle;
    private android.view.View mTabView;
    private java.lang.CharSequence mTitle;
    private boolean mTitleSet;
    private android.widget.Toolbar mToolbar;
    private android.view.Window$Callback mWindowCallback;

    public void <init>(android.widget.Toolbar, boolean)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.widget.Toolbar;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void <init>(android.widget.Toolbar,boolean,int)>(r1, z0, 17039592);

        return;
    }

    public void <init>(android.widget.Toolbar, boolean, int)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        boolean z0, $z1, $z2, z3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13;
        java.lang.CharSequence $r1, $r2, $r3, $r10, r27, r28;
        android.widget.Toolbar $r4, $r9, $r12, $r14, $r15, $r18, $r19, $r20, $r23, r25, r33, r34;
        android.graphics.drawable.Drawable $r5, $r8, $r13, r29, r30, r31;
        android.content.Context $r6, $r16, $r17, $r21;
        int[] $r7;
        com.android.internal.widget.ToolbarWidgetWrapper$1 $r11;
        android.view.LayoutInflater $r22;
        android.view.View $r24;
        android.content.res.TypedArray r26;
        android.view.ViewGroup$LayoutParams r32;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r25 := @parameter0: android.widget.Toolbar;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mNavigationMode> = 0;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDefaultNavigationContentDescription> = 0;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar> = r25;

        $r1 = virtualinvoke r25.<android.widget.Toolbar: java.lang.CharSequence getTitle()>();

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mTitle> = $r1;

        $r2 = virtualinvoke r25.<android.widget.Toolbar: java.lang.CharSequence getSubtitle()>();

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mSubtitle> = $r2;

        $r3 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mTitle>;

        if $r3 == null goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        r0.<com.android.internal.widget.ToolbarWidgetWrapper: boolean mTitleSet> = z3;

        $r4 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r5 = virtualinvoke $r4.<android.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mNavIcon> = $r5;

        $r6 = virtualinvoke r25.<android.widget.Toolbar: android.content.Context getContext()>();

        $r7 = <com.android.internal.R$styleable: int[] ActionBar>;

        r26 = virtualinvoke $r6.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r7, 16843470, 0);

        $r8 = virtualinvoke r26.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(13);

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mDefaultNavigationIcon> = $r8;

        if z0 == 0 goto label15;

        r27 = virtualinvoke r26.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(5);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r27);

        if $z1 != 0 goto label03;

        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)>(r27);

     label03:
        r28 = virtualinvoke r26.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(9);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r28);

        if $z2 != 0 goto label04;

        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)>(r28);

     label04:
        r29 = virtualinvoke r26.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(6);

        if r29 == null goto label05;

        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)>(r29);

     label05:
        r30 = virtualinvoke r26.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if r30 == null goto label06;

        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)>(r30);

     label06:
        $r13 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mNavIcon>;

        if $r13 != null goto label07;

        r31 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mDefaultNavigationIcon>;

        if r31 == null goto label07;

        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)>(r31);

     label07:
        $i7 = virtualinvoke r26.<android.content.res.TypedArray: int getInt(int,int)>(8, 0);

        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)>($i7);

        i8 = virtualinvoke r26.<android.content.res.TypedArray: int getResourceId(int,int)>(10, 0);

        if i8 == 0 goto label08;

        $r20 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r21 = virtualinvoke $r20.<android.widget.Toolbar: android.content.Context getContext()>();

        $r22 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r21);

        $r23 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r24 = virtualinvoke $r22.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i8, $r23, 0);

        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setCustomView(android.view.View)>($r24);

        $i5 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts>;

        $i6 = $i5 | 16;

        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)>($i6);

     label08:
        i9 = virtualinvoke r26.<android.content.res.TypedArray: int getLayoutDimension(int,int)>(4, 0);

        if i9 <= 0 goto label09;

        $r18 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        r32 = virtualinvoke $r18.<android.widget.Toolbar: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r32.<android.view.ViewGroup$LayoutParams: int height> = i9;

        $r19 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r19.<android.widget.Toolbar: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r32);

     label09:
        i10 = virtualinvoke r26.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(22, -1);

        i1 = virtualinvoke r26.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(23, -1);

        if i10 >= 0 goto label10;

        if i1 < 0 goto label11;

     label10:
        $r14 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(i10, 0);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i1, 0);

        virtualinvoke $r14.<android.widget.Toolbar: void setContentInsetsRelative(int,int)>($i3, $i4);

     label11:
        i11 = virtualinvoke r26.<android.content.res.TypedArray: int getResourceId(int,int)>(11, 0);

        if i11 == 0 goto label12;

        r33 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r17 = virtualinvoke r33.<android.widget.Toolbar: android.content.Context getContext()>();

        virtualinvoke r33.<android.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)>($r17, i11);

     label12:
        i12 = virtualinvoke r26.<android.content.res.TypedArray: int getResourceId(int,int)>(12, 0);

        if i12 == 0 goto label13;

        r34 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r16 = virtualinvoke r34.<android.widget.Toolbar: android.content.Context getContext()>();

        virtualinvoke r34.<android.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)>($r16, i12);

     label13:
        i13 = virtualinvoke r26.<android.content.res.TypedArray: int getResourceId(int,int)>(26, 0);

        if i13 == 0 goto label14;

        $r15 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r15.<android.widget.Toolbar: void setPopupTheme(int)>(i13);

     label14:
        goto label16;

     label15:
        $i2 = specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: int detectDisplayOptions()>();

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts> = $i2;

     label16:
        virtualinvoke r26.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)>(i0);

        $r9 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r10 = virtualinvoke $r9.<android.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()>();

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mHomeDescription> = $r10;

        $r12 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r11 = new com.android.internal.widget.ToolbarWidgetWrapper$1;

        specialinvoke $r11.<com.android.internal.widget.ToolbarWidgetWrapper$1: void <init>(com.android.internal.widget.ToolbarWidgetWrapper)>(r0);

        virtualinvoke $r12.<android.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)>($r11);

        return;
    }

    static android.widget.Toolbar access$000(com.android.internal.widget.ToolbarWidgetWrapper)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;

        r0 := @parameter0: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        return $r1;
    }

    static java.lang.CharSequence access$100(com.android.internal.widget.ToolbarWidgetWrapper)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mTitle>;

        return $r1;
    }

    static android.view.Window$Callback access$200(com.android.internal.widget.ToolbarWidgetWrapper)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.view.Window$Callback $r1;

        r0 := @parameter0: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.Window$Callback mWindowCallback>;

        return $r1;
    }

    static boolean access$300(com.android.internal.widget.ToolbarWidgetWrapper)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.widget.ToolbarWidgetWrapper;

        $z0 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: boolean mMenuPrepared>;

        return $z0;
    }

    private int detectDisplayOptions()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1, $r3;
        android.graphics.drawable.Drawable $r2, $r4;
        byte b0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        b0 = 11;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r2 = virtualinvoke $r1.<android.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $r2 == null goto label1;

        b0 = 11 | 4;

        $r3 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r4 = virtualinvoke $r3.<android.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mDefaultNavigationIcon> = $r4;

     label1:
        return b0;
    }

    private void ensureSpinner()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Spinner $r2, $r3, $r6;
        android.content.Context $r4;
        android.widget.Toolbar$LayoutParams $r5;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner>;

        if $r2 != null goto label1;

        $r3 = new android.widget.Spinner;

        $r4 = virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.content.Context getContext()>();

        specialinvoke $r3.<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int)>($r4, null, 16843479);

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner> = $r3;

        $r5 = new android.widget.Toolbar$LayoutParams;

        specialinvoke $r5.<android.widget.Toolbar$LayoutParams: void <init>(int,int,int)>(-2, -2, 8388627);

        $r6 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner>;

        virtualinvoke $r6.<android.widget.Spinner: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r5);

     label1:
        return;
    }

    private void setTitleInt(java.lang.CharSequence)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        java.lang.CharSequence r1;
        int $i0, $i1;
        android.widget.Toolbar $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mTitle> = r1;

        $i0 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r2.<android.widget.Toolbar: void setTitle(java.lang.CharSequence)>(r1);

     label1:
        return;
    }

    private void updateHomeAccessibility()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r1, $r2;
        boolean $z0;
        android.widget.Toolbar $r3, $r4;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $i0 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label2;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mHomeDescription>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $i2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDefaultNavigationContentDescription>;

        virtualinvoke $r4.<android.widget.Toolbar: void setNavigationContentDescription(int)>($i2);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mHomeDescription>;

        virtualinvoke $r3.<android.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>($r2);

     label2:
        return;
    }

    private void updateNavigationIcon()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar r1, $r2;
        int $i0, $i1;
        android.graphics.drawable.Drawable r3;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $i0 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label3;

        r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        r3 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mNavIcon>;

        if r3 == null goto label1;

        goto label2;

     label1:
        r3 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mDefaultNavigationIcon>;

     label2:
        virtualinvoke r1.<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>(r3);

        goto label4;

     label3:
        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r2.<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>(null);

     label4:
        return;
    }

    private void updateToolbarLogo()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0, $i1, $i2;
        android.graphics.drawable.Drawable r1;
        android.widget.Toolbar $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 = null;

        i0 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts>;

        $i1 = i0 & 2;

        if $i1 == 0 goto label4;

        $i2 = i0 & 1;

        if $i2 == 0 goto label3;

        r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mLogo>;

        if r1 == null goto label1;

        goto label2;

     label1:
        r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mIcon>;

     label2:
        goto label4;

     label3:
        r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mIcon>;

     label4:
        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r2.<android.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void animateToVisibility(int)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0;
        android.animation.Animator r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.animation.Animator setupAnimatorToVisibility(int,long)>(i0, 200L);

        if r1 == null goto label1;

        virtualinvoke r1.<android.animation.Animator: void start()>();

     label1:
        return;
    }

    public boolean canShowOverflowMenu()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $z0 = virtualinvoke $r1.<android.widget.Toolbar: boolean canShowOverflowMenu()>();

        return $z0;
    }

    public boolean canSplit()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        return 0;
    }

    public void collapseActionView()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r1.<android.widget.Toolbar: void collapseActionView()>();

        return;
    }

    public void dismissPopupMenus()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r1.<android.widget.Toolbar: void dismissPopupMenus()>();

        return;
    }

    public android.content.Context getContext()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        android.content.Context $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r2 = virtualinvoke $r1.<android.widget.Toolbar: android.content.Context getContext()>();

        return $r2;
    }

    public android.view.View getCustomView()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.view.View $r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mCustomView>;

        return $r1;
    }

    public int getDisplayOptions()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int $i0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $i0 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts>;

        return $i0;
    }

    public int getDropdownItemCount()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Spinner r1;
        int i0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.widget.Spinner: int getCount()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getDropdownSelectedPosition()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Spinner r1;
        int i0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.widget.Spinner: int getSelectedItemPosition()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getHeight()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        int $i0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $i0 = virtualinvoke $r1.<android.widget.Toolbar: int getHeight()>();

        return $i0;
    }

    public android.view.Menu getMenu()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        android.view.Menu $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r2 = virtualinvoke $r1.<android.widget.Toolbar: android.view.Menu getMenu()>();

        return $r2;
    }

    public int getNavigationMode()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int $i0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $i0 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mNavigationMode>;

        return $i0;
    }

    public java.lang.CharSequence getSubtitle()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r2 = virtualinvoke $r1.<android.widget.Toolbar: java.lang.CharSequence getSubtitle()>();

        return $r2;
    }

    public java.lang.CharSequence getTitle()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r2 = virtualinvoke $r1.<android.widget.Toolbar: java.lang.CharSequence getTitle()>();

        return $r2;
    }

    public android.view.ViewGroup getViewGroup()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        return $r1;
    }

    public int getVisibility()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        int $i0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $i0 = virtualinvoke $r1.<android.widget.Toolbar: int getVisibility()>();

        return $i0;
    }

    public boolean hasEmbeddedTabs()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.view.View $r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mTabView>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasExpandedActionView()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $z0 = virtualinvoke $r1.<android.widget.Toolbar: boolean hasExpandedActionView()>();

        return $z0;
    }

    public boolean hasIcon()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.graphics.drawable.Drawable $r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mIcon>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasLogo()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.graphics.drawable.Drawable $r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mLogo>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hideOverflowMenu()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $z0 = virtualinvoke $r1.<android.widget.Toolbar: boolean hideOverflowMenu()>();

        return $z0;
    }

    public void initIndeterminateProgress()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolbarWidgetWrapper", "Progress display unsupported");

        return;
    }

    public void initProgress()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolbarWidgetWrapper", "Progress display unsupported");

        return;
    }

    public boolean isOverflowMenuShowPending()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $z0 = virtualinvoke $r1.<android.widget.Toolbar: boolean isOverflowMenuShowPending()>();

        return $z0;
    }

    public boolean isOverflowMenuShowing()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $z0 = virtualinvoke $r1.<android.widget.Toolbar: boolean isOverflowMenuShowing()>();

        return $z0;
    }

    public boolean isSplit()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        return 0;
    }

    public boolean isTitleTruncated()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $z0 = virtualinvoke $r1.<android.widget.Toolbar: boolean isTitleTruncated()>();

        return $z0;
    }

    public void restoreHierarchyState(android.util.SparseArray)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.util.SparseArray r1;
        android.widget.Toolbar $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.util.SparseArray;

        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r2.<android.widget.Toolbar: void restoreHierarchyState(android.util.SparseArray)>(r1);

        return;
    }

    public void saveHierarchyState(android.util.SparseArray)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.util.SparseArray r1;
        android.widget.Toolbar $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.util.SparseArray;

        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r2.<android.widget.Toolbar: void saveHierarchyState(android.util.SparseArray)>(r1);

        return;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.graphics.drawable.Drawable r1;
        android.widget.Toolbar $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r2.<android.widget.Toolbar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setCollapsible(boolean)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        boolean z0;
        android.widget.Toolbar $r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r1.<android.widget.Toolbar: void setCollapsible(boolean)>(z0);

        return;
    }

    public void setCustomView(android.view.View)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.view.View r1, r2;
        int $i0, $i1, $i2, $i3;
        android.widget.Toolbar $r3, $r4;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.view.View;

        r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mCustomView>;

        if r2 == null goto label1;

        $i2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts>;

        $i3 = $i2 & 16;

        if $i3 == 0 goto label1;

        $r4 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r4.<android.widget.Toolbar: void removeView(android.view.View)>(r2);

     label1:
        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mCustomView> = r1;

        if r1 == null goto label2;

        $i0 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts>;

        $i1 = $i0 & 16;

        if $i1 == 0 goto label2;

        $r3 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r3.<android.widget.Toolbar: void addView(android.view.View)>(r1);

     label2:
        return;
    }

    public void setDefaultNavigationContentDescription(int)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0, $i1, $i2;
        android.widget.Toolbar $r1;
        java.lang.CharSequence $r2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDefaultNavigationContentDescription>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDefaultNavigationContentDescription> = i0;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r2 = virtualinvoke $r1.<android.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label2;

        $i2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDefaultNavigationContentDescription>;

        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)>($i2);

     label2:
        return;
    }

    public void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.graphics.drawable.Drawable r1, $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mDefaultNavigationIcon>;

        if $r2 == r1 goto label1;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mDefaultNavigationIcon> = r1;

        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void updateNavigationIcon()>();

     label1:
        return;
    }

    public void setDisplayOptions(int)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View r1;
        android.widget.Toolbar $r2, $r3, $r4, $r5, $r7, $r9;
        java.lang.CharSequence $r6, $r8;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        i0 := @parameter0: int;

        $i2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts>;

        i1 = $i2 ^ i0;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts> = i0;

        if i1 == 0 goto label7;

        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        $i7 = i0 & 4;

        if $i7 == 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()>();

     label1:
        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void updateNavigationIcon()>();

     label2:
        $i8 = i1 & 3;

        if $i8 == 0 goto label3;

        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void updateToolbarLogo()>();

     label3:
        $i4 = i1 & 8;

        if $i4 == 0 goto label5;

        $i6 = i0 & 8;

        if $i6 == 0 goto label4;

        $r7 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r6 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mTitle>;

        virtualinvoke $r7.<android.widget.Toolbar: void setTitle(java.lang.CharSequence)>($r6);

        $r9 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r8 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mSubtitle>;

        virtualinvoke $r9.<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>($r8);

        goto label5;

     label4:
        $r4 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r4.<android.widget.Toolbar: void setTitle(java.lang.CharSequence)>(null);

        $r5 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r5.<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>(null);

     label5:
        $i9 = i1 & 16;

        if $i9 == 0 goto label7;

        r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mCustomView>;

        if r1 == null goto label7;

        $i5 = i0 & 16;

        if $i5 == 0 goto label6;

        $r3 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r3.<android.widget.Toolbar: void addView(android.view.View)>(r1);

        goto label7;

     label6:
        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r2.<android.widget.Toolbar: void removeView(android.view.View)>(r1);

     label7:
        return;
    }

    public void setDropdownParams(android.widget.SpinnerAdapter, android.widget.AdapterView$OnItemSelectedListener)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.SpinnerAdapter r1;
        android.widget.AdapterView$OnItemSelectedListener r2;
        android.widget.Spinner $r3, $r4;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.widget.SpinnerAdapter;

        r2 := @parameter1: android.widget.AdapterView$OnItemSelectedListener;

        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void ensureSpinner()>();

        $r3 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner>;

        virtualinvoke $r3.<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>(r1);

        $r4 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner>;

        virtualinvoke $r4.<android.widget.Spinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>(r2);

        return;
    }

    public void setDropdownSelectedPosition(int)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0;
        android.widget.Spinner r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Spinner: void setSelection(int)>(i0);

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t set dropdown selected position without an adapter");

        throw $r2;
    }

    public void setEmbeddedTabView(com.android.internal.widget.ScrollingTabContainerView)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        com.android.internal.widget.ScrollingTabContainerView r1;
        android.view.ViewParent r2;
        int $i0;
        android.widget.Toolbar $r3, r8;
        android.view.View $r4, $r6, r7;
        android.view.ViewGroup$LayoutParams $r5;
        android.widget.Toolbar$LayoutParams r9;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: com.android.internal.widget.ScrollingTabContainerView;

        r7 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mTabView>;

        if r7 == null goto label1;

        r2 = virtualinvoke r7.<android.view.View: android.view.ViewParent getParent()>();

        r8 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        if r2 != r8 goto label1;

        $r6 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mTabView>;

        virtualinvoke r8.<android.widget.Toolbar: void removeView(android.view.View)>($r6);

     label1:
        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mTabView> = r1;

        if r1 == null goto label2;

        $i0 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mNavigationMode>;

        if $i0 != 2 goto label2;

        $r3 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r3.<android.widget.Toolbar: void addView(android.view.View,int)>(r1, 0);

        $r4 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mTabView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r9 = (android.widget.Toolbar$LayoutParams) $r5;

        r9.<android.widget.Toolbar$LayoutParams: int width> = -2;

        r9.<android.widget.Toolbar$LayoutParams: int height> = -2;

        r9.<android.widget.Toolbar$LayoutParams: int gravity> = 8388691;

        virtualinvoke r1.<com.android.internal.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)>(1);

     label2:
        return;
    }

    public void setHomeButtonEnabled(boolean)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        z0 := @parameter0: boolean;

        return;
    }

    public void setIcon(int)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.content.Context getContext()>();

        r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)>(r2);

        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mIcon> = r1;

        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void updateToolbarLogo()>();

        return;
    }

    public void setLogo(int)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.content.Context getContext()>();

        r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)>(r2);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mLogo> = r1;

        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void updateToolbarLogo()>();

        return;
    }

    public void setMenu(android.view.Menu, com.android.internal.view.menu.MenuPresenter$Callback)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.view.Menu r1;
        com.android.internal.view.menu.MenuPresenter$Callback r2;
        android.widget.ActionMenuPresenter $r4, $r5, $r6, $r9;
        com.android.internal.view.menu.MenuBuilder $r7;
        android.widget.Toolbar $r8, $r10;
        android.content.Context $r11;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.view.Menu;

        r2 := @parameter1: com.android.internal.view.menu.MenuPresenter$Callback;

        $r4 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r4 != null goto label1;

        $r9 = new android.widget.ActionMenuPresenter;

        $r10 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r11 = virtualinvoke $r10.<android.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r9.<android.widget.ActionMenuPresenter: void <init>(android.content.Context)>($r11);

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.ActionMenuPresenter mActionMenuPresenter> = $r9;

        virtualinvoke $r9.<android.widget.ActionMenuPresenter: void setId(int)>(16908717);

     label1:
        $r5 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r5.<android.widget.ActionMenuPresenter: void setCallback(com.android.internal.view.menu.MenuPresenter$Callback)>(r2);

        $r8 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r7 = (com.android.internal.view.menu.MenuBuilder) r1;

        $r6 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r8.<android.widget.Toolbar: void setMenu(com.android.internal.view.menu.MenuBuilder,android.widget.ActionMenuPresenter)>($r7, $r6);

        return;
    }

    public void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter$Callback, com.android.internal.view.menu.MenuBuilder$Callback)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        com.android.internal.view.menu.MenuPresenter$Callback r1;
        com.android.internal.view.menu.MenuBuilder$Callback r2;
        android.widget.Toolbar $r3;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: com.android.internal.view.menu.MenuPresenter$Callback;

        r2 := @parameter1: com.android.internal.view.menu.MenuBuilder$Callback;

        $r3 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r3.<android.widget.Toolbar: void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter$Callback,com.android.internal.view.menu.MenuBuilder$Callback)>(r1, r2);

        return;
    }

    public void setMenuPrepared()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: boolean mMenuPrepared> = 1;

        return;
    }

    public void setNavigationContentDescription(int)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0;
        android.content.Context $r1;
        java.lang.String r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        r2 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.content.Context getContext()>();

        r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>(i0);

     label2:
        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)>(r2);

        return;
    }

    public void setNavigationContentDescription(java.lang.CharSequence)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        java.lang.CharSequence r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mHomeDescription> = r1;

        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()>();

        return;
    }

    public void setNavigationIcon(int)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0;
        android.widget.Toolbar $r1;
        android.content.Context $r2;
        android.graphics.drawable.Drawable r3;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r2 = virtualinvoke $r1.<android.widget.Toolbar: android.content.Context getContext()>();

        r3 = virtualinvoke $r2.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        goto label2;

     label1:
        r3 = null;

     label2:
        virtualinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)>(r3);

        return;
    }

    public void setNavigationIcon(android.graphics.drawable.Drawable)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mNavIcon> = r1;

        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void updateNavigationIcon()>();

        return;
    }

    public void setNavigationMode(int)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0, i1;
        android.widget.Spinner $r1, $r11, r16;
        android.widget.Toolbar $r2, $r8, r15, r18;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        android.view.View $r9, $r12, r13, r19;
        android.view.ViewGroup$LayoutParams $r10;
        android.view.ViewParent r14, r17;
        android.widget.Toolbar$LayoutParams r20;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        i0 := @parameter0: int;

        i1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mNavigationMode>;

        if i0 == i1 goto label6;

        if i1 == 1 goto label2;

        if i1 == 2 goto label1;

        goto label3;

     label1:
        r13 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mTabView>;

        if r13 == null goto label3;

        r14 = virtualinvoke r13.<android.view.View: android.view.ViewParent getParent()>();

        r15 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        if r14 != r15 goto label3;

        $r12 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mTabView>;

        virtualinvoke r15.<android.widget.Toolbar: void removeView(android.view.View)>($r12);

        goto label3;

     label2:
        r16 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner>;

        if r16 == null goto label3;

        r17 = virtualinvoke r16.<android.widget.Spinner: android.view.ViewParent getParent()>();

        r18 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        if r17 != r18 goto label3;

        $r11 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner>;

        virtualinvoke r18.<android.widget.Toolbar: void removeView(android.view.View)>($r11);

     label3:
        r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mNavigationMode> = i0;

        if i0 == 0 goto label6;

        if i0 == 1 goto label5;

        if i0 != 2 goto label4;

        r19 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mTabView>;

        if r19 == null goto label6;

        $r8 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r8.<android.widget.Toolbar: void addView(android.view.View,int)>(r19, 0);

        $r9 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View mTabView>;

        $r10 = virtualinvoke $r9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r20 = (android.widget.Toolbar$LayoutParams) $r10;

        r20.<android.widget.Toolbar$LayoutParams: int width> = -2;

        r20.<android.widget.Toolbar$LayoutParams: int height> = -2;

        r20.<android.widget.Toolbar$LayoutParams: int gravity> = 8388691;

        goto label6;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid navigation mode ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label5:
        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void ensureSpinner()>();

        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner>;

        virtualinvoke $r2.<android.widget.Toolbar: void addView(android.view.View,int)>($r1, 0);

     label6:
        return;
    }

    public void setSplitToolbar(boolean)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        boolean z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot split an android.widget.Toolbar");

        throw $r1;
    }

    public void setSplitView(android.view.ViewGroup)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.view.ViewGroup r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.view.ViewGroup;

        return;
    }

    public void setSplitWhenNarrow(boolean)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        z0 := @parameter0: boolean;

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        java.lang.CharSequence r1;
        int $i0, $i1;
        android.widget.Toolbar $r2;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence mSubtitle> = r1;

        $i0 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: int mDisplayOpts>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $r2 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r2.<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>(r1);

     label1:
        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        java.lang.CharSequence r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: boolean mTitleSet> = 1;

        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)>(r1);

        return;
    }

    public void setVisibility(int)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0;
        android.widget.Toolbar $r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        virtualinvoke $r1.<android.widget.Toolbar: void setVisibility(int)>(i0);

        return;
    }

    public void setWindowCallback(android.view.Window$Callback)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.view.Window$Callback r1;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: android.view.Window$Callback;

        r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.view.Window$Callback mWindowCallback> = r1;

        return;
    }

    public void setWindowTitle(java.lang.CharSequence)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        java.lang.CharSequence r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: boolean mTitleSet>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)>(r1);

     label1:
        return;
    }

    public android.animation.Animator setupAnimatorToVisibility(int, long)
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        int i0;
        long l1;
        float[] $r1, $r6;
        android.util.Property $r2, $r7;
        android.widget.Toolbar $r3, $r8;
        com.android.internal.widget.ToolbarWidgetWrapper$3 $r5;
        com.android.internal.widget.ToolbarWidgetWrapper$2 $r10;
        android.animation.ObjectAnimator r11, r12;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        if i0 != 8 goto label1;

        $r8 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r7 = <android.view.View: android.util.Property ALPHA>;

        $r6 = newarray (float)[2];

        $r6[0] = 1.0F;

        $r6[1] = 0.0F;

        r11 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r8, $r7, $r6);

        virtualinvoke r11.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(l1);

        $r10 = new com.android.internal.widget.ToolbarWidgetWrapper$2;

        specialinvoke $r10.<com.android.internal.widget.ToolbarWidgetWrapper$2: void <init>(com.android.internal.widget.ToolbarWidgetWrapper)>(r0);

        virtualinvoke r11.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r10);

        return r11;

     label1:
        if i0 != 0 goto label2;

        $r3 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $r2 = <android.view.View: android.util.Property ALPHA>;

        $r1 = newarray (float)[2];

        $r1[0] = 0.0F;

        $r1[1] = 1.0F;

        r12 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r3, $r2, $r1);

        virtualinvoke r12.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(l1);

        $r5 = new com.android.internal.widget.ToolbarWidgetWrapper$3;

        specialinvoke $r5.<com.android.internal.widget.ToolbarWidgetWrapper$3: void <init>(com.android.internal.widget.ToolbarWidgetWrapper)>(r0);

        virtualinvoke r12.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r5);

        return r12;

     label2:
        return null;
    }

    public boolean showOverflowMenu()
    {
        com.android.internal.widget.ToolbarWidgetWrapper r0;
        android.widget.Toolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ToolbarWidgetWrapper;

        $r1 = r0.<com.android.internal.widget.ToolbarWidgetWrapper: android.widget.Toolbar mToolbar>;

        $z0 = virtualinvoke $r1.<android.widget.Toolbar: boolean showOverflowMenu()>();

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.ToolbarWidgetWrapper: java.lang.String TAG> = "ToolbarWidgetWrapper";

        <com.android.internal.widget.ToolbarWidgetWrapper: long DEFAULT_FADE_DURATION_MS> = 200L;

        <com.android.internal.widget.ToolbarWidgetWrapper: int AFFECTS_LOGO_MASK> = 3;

        return;
    }
}
